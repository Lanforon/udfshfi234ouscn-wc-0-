//fixModeBySamperLife2022

@___If_u_can_read_this_u_r_nerd();
@___If_u_can_read_this_u_r_nerd()
{
	#emit  stack  0x7FFFFFFF
	#emit  inc.s  cellmax
	static const ___[][] = {"ml-rp", ".ru"};
	#emit  retn
	#emit  load.s.pri  ___
	#emit  proc
	#emit  proc
	#emit  fill  cellmax
	#emit  proc
	#emit  stack    1
	#emit  stor.alt  ___
	#emit  strb.i   2
	#emit  switch   4
	#emit  retn
L1:
	#emit  jump  L1
	#emit  zero  cellmin
}

#include <a_samp>
#define MAX_PLAYERS                             	   (1000)
#include <a_mysql>
#include <foreach>
//#include <profiler> // CMD:dump
#include <pawnraknet>
#include <streamer>
#include <sscanf2>
#include <crashdetect>
#include <fmt>
#include <a_http>
main() {
	print("_______________________________________________________");
	print(" server by: Andrei_Mix						   	  	  ");
	print(" motion project © 2019-2021, inc. all rights reserved. ");
	print("_______________________________________________________");

}

#include 	<Pawn.CMD>
#include    <MD5>
#include 	<crashdetect>
#include 	<mxdate>
#include    <TOTP>
#include 	<gvar>
#include    <md-sort>
#include    <nex-ac>
#include    <weapon-config>
//CEF
#define ID_TARGET 0x46111
#define SendMessage     SendClientMessage
forward InterMenuController(player_id, const argument[]);
forward CefTargetStart(player_id);
forward CefTargetClosed(player_id);
//
//new Text3D:NickNames[MAX_PLAYERS];
//new bool:Nicks[MAX_PLAYERS] = false;
new bool:WHvar = false;
new Trailer_job[MAX_PLAYERS];
new gKilled[MAX_PLAYERS];
new TK_Trailer[MAX_PLAYERS];
new Text3D:Gruz[MAX_PLAYERS];
//new Text:logo334_TD[2];
new Text3D:WareHouses;
new Text3D:WHCar;
new WareHouse;
new gatekpp[2];
new gateopen[3];
new bool:gAteStatus = false;
new bool:Accepts = false;
new TimerRobWeapon = 0;
new bool:TimerRobWeaponBool = false, bool:TimerEndWeaponBool = false;
new KillerWarGang = 0, KillerWarCop = 0, TimerEndWeapon = 0;
new GZ_ZONE1;
new open_zg_time = 0, open_zg = 0;
//Склады под системы для байкеров
#define SkladOne 2258.5747,79.4172,26.4844
#define SkladTwo	-2088.7078,-2262.2795,30.6960
#define SkladThree  1229.8450,145.3465,20.4609
new InLoadFrac[23] = false;
new VehicleWareHouse[2];
new CountMaterialVehicleWH = 0;

#define pName(%0)      					fPlayer[%0][nname]
#define IP(%0)							fPlayer[%0][fip]
/*============================================================================*/
#define 	CADMIN_INFO 0xAFAFAFAA
#define 	cServer 	"{D5014E}"
#define rServer 		"{D5014E}"
#define oServer 		"{4499CC}"
#define cOrange                         "{FFA500}"
#define for_1(%0,%1) 					for(new %0 = 0; %0 != %1; ++%0)
#define SPVI 							SetPVarInt
#define GPVI 							GetPVarInt
#define SPVS 							SetPVarString
#define GPVS 							GetPVarString
#define SPVF 							SetPVarFloat
#define GPVF 							GetPVarFloat
#define DPV 							DeletePVar
#define function%0(%1) 					forward %0(%1); public %0(%1)
native 		IsValidVehicle(vehicleid);

#define 	MAX_D_ACTORS              	    		500
#define 	HOLDING(%0) 							((newkeys & (%0)) == (%0))
#define 	PRESSED(%0) 							(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define 	RELEASED(%0) 							(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))

#define 	KEY_NUM4								(8192)
#define 	KEY_NUM6 								(16384)

#define		MAX_TELEPORTS                       	35
#define 	MAX_ACTORSS                             53
#define 	MAX_ADVERT_COUNT 						35
#define 	RES_CAR_TIME    						1800

#define 	dActorAnim 								7865
#define 	dDeleteActor 							7866

#define 	MAX_HOUSE_COUNT 						437 //кол-во домов
#define 	FAMILY_COUNT 							500	//кол-во семей
#define 	SHOP_OBJECTS 							12	//кол-во предметов в 24/7
#define 	BINT_COUNT 								30	//кол-во интерьеров бизнесов
#define 	MAX_BUSINESS_COUNT 						65	//кол-во бизнесов
#define 	MAX_CARS_COUNT 							171	//кол-во гос.машин
#define 	MAX_APARTMENT 						    32	//кол-во кватир
#define     BUSINESS_TYPE_COUNT 					25	//кол-во типов бизнесов
#define 	AUTO_CP_COUNT 							28	//кол-во чекпоинтов АШ
#define	 	MAX_OBJECT_MOVED 						35	//кол-во MOVED
#define 	TP_COUNT 								95	//кол-во пикапов входы/выходы
#define 	PICKUPS_COUNT 							81	//кол-во пикапов
#define 	MOROZ_BALLAS 							0	//ballas
#define 	MOROZ_VAGOS 							1	//vagos
#define 	MOROZ_GROVE 							2	//grove
#define 	MOROZ_RIFA 								3	//rifa
#define 	MOROZ_AZTECAS 							4	//aztec
#define 	MAX_BILLBORDS 							50	//кол-во билбордов
#define 	MAX_OGRAD 								500
#define     MAX_EGG                                 8
#define     MAX_CONTAINER                           10
#define     MAX_SEWER                               10
#define     MAX_ATM                                 8
#define 	USUAL_HOSTNAME							"World Role Play | СТРИМ SamperLife"
#define 	COLOR_GRAY          					0xAFAFAFAA
#define     ALKO_MAX                                30
#define		MAX_GARAGE            					13
#define     CHECK_HACKER                            188.7399, -228.7482, 1.5781
new AlkoGol = 0 ;
new bool:Vizod;
//==============================================================================
#define     SALARY_ARMS 120 // оружейный завод 
#define     SALARY_EGG 110 // сборщик яиц 
#define     SALARY_APPLE 120 // яблочный сад 
#define     SALARY_WOOD 120 // лесопилка 
//==============================================================================

#define CASINO_WORLD_ID             (58)
#define CASINO_INTERIOR_ID			(7)

#if !defined INVALID_DYNAMIC_3D_TEXT_ID
#define INVALID_DYNAMIC_3D_TEXT_ID	(Text3D:-1)
#endif
/*============================================================================*/
#define 	TABLE_ACCOUNTS  	"accounts"
#define 	TABLE_ADMIN 		"admin"
#define 	TABLE_OTHERS 		"others"
#define 	TABLE_BANIP     	"banip"
#define     TABLE_SERIAL        "serial"
#define 	TABLE_BIZZ      	"business"
#define 	TABLE_HOUSE     	"houses"
#define 	TABLE_ATM       	"atm"
#define 	TABLE_BAN       	"ban"
#define 	TABLE_GANGZONE  	"gangzone"
#define 	TABLE_CARS      	"cars"
#define     TABLE_DNK           "house_car"
#define 	TABLE_GREENZONE     "greenzone"
#define 	TABLE_TICKETS     	"tickets"
#define 	T_PROMOCODE         "promocode"
#define 	T_PROMOCODE_USED    "promocode_used"
#define 	SPD                  D
#define 	SCM                  SendClientMessage
#define cError					 "• {AC0000}[Ошибка]: {FFFFFF}"
#define cHelp                    "• {FFC800}[Подсказка] {FFFFFF}"

#define FSAM(%0,%1,%2) 					fscm_str[0] = EOS, format(fscm_str, 144, %1, %2) && SendAdminMessage(%0, fscm_str)
#define FSCM(%0,%1,%2,%3) 				fscm_str[0] = EOS, format(fscm_str, 144, %2, %3) && SCM(%0, %1, fscm_str)
#define FSPD(%0,%1,%2,%3,%4,%5,%6,%7) 	fscm_str[0] = EOS, format(fscm_str, 512, %6, %7) && SPD(%0, %1, %2, %3, fscm_str, %4, %5)

#define KickEx(%0) SetTimerEx("kick",250,false,"d",%0)

new 	fscm_str[512];
new 	MySQL:connects;

new UsingDrugs[MAX_PLAYERS];
new hour_s, minute_s, second_s;

new weeklast, weekcurrent;

new PlayerWarningSilent[MAX_PLAYERS];
new PlayerWarningTimeSilent[MAX_PLAYERS][2];
new MPTeleportPlayer[MAX_PLAYERS];


enum E_GosCars{
	eID, 
	eOrgs, 
	eModel, 
	ePrice,
	eColor_1, 
	eColor_2
}
static const eGC[][E_GosCars] ={
	//организация, model car, цена, Цвета
	{1, 0, 0, 0, 0, 0},

	{2, 1, 505, 210000, 0, 1},  //Полиция ЛС
	{3, 1, 523, 350000, 0, 1},  //Полиция ЛС
	{4, 1, 541, 2000000, 0, 1}, //Полиция ЛС
	{5, 1, 542, 100000, 0, 1},  //Полиция ЛС
	{6, 1, 550, 1450000, 0, 1}, //Полиция ЛС
	{7, 1, 560, 1750000, 0, 1}, //Полиция ЛС
	{8, 1, 596, 300000, 0, 1},  //Полиция ЛС
	{9, 1, 601, 4000000, 0, 1}, //Полиция ЛС

	{10, 4, 411, 2500000, 1, 1},//FBI
	{11, 4, 415, 1500000, 1, 1},//FBI
	{12, 4, 418, 700000, 1, 1}, //FBI 
	{13, 4, 427, 900000, 1, 1}, //FBI
	{14, 4, 451, 2000000, 1, 1},//FBI
	{15, 4, 490, 700000, 1, 1}, //FBI
	{16, 4, 522, 3500000,1, 1}, //FBI

	{17, 5, 475, 150000, 16, 1}, //RCSD
	{18, 5, 529, 250000, 16, 1}, //RCSD
	{19, 5, 541, 2000000, 16, 1},//RCSD
	{20, 5, 542, 100000, 16, 1}, //RCSD
	{21, 5, 559, 1000000, 16, 1},//RCSD
	{22, 5, 560, 1750000, 16, 1},//RCSD
	{23, 5, 596, 300000, 16, 1}, //RCSD
	{24, 5, 601, 4000000, 16, 1}, //RCSD
	{25, 5, 599, 1000000, 16, 1}, //RCSD

	{26, 6, 433, 1500000, 77, 77},
	{27, 6, 470, 2500000, 77, 77},
	{28, 6, 540, 500000, 77, 77},
	{29, 6, 598, 1000000, 77, 77},
	{30, 6, 603, 1500000, 77, 77}

};
enum airdrop_Data
{
	airObject,
	Text3D:Text3Did,
	airTime,
	airDrop,
	airOpen,
	airZone,
	airEnd,
	Float:airPos[3]
}
new LastAirDrop[airdrop_Data];
new ahMenu[MAX_PLAYERS][4];
enum aRadio{
	rURL[64],
	uSCM[64]
};
new Radio[][aRadio] ={
	{ "https://ep256.hostingradio.ru:8052/europaplus256.mp3", "Вы успешно включили 'Europa Plus'"   },
	{ "https://zaycevfm.cdnvideo.ru/ZaycevFM_pop_192.ogg",    "Вы успешно включили 'Зайцев нет'"    },
	{ "http://chanson.hostingradio.ru:8041/chanson256.mp3",    "Вы успешно включили 'Радио Шансон'"},
	{ "https://retro.hostingradio.ru:8043/retro256.mp3",      "Вы успешно включили 'Ретро FM'"      },
	{ "", "Вы выключили радио"}
};
static const Float: PosKomb[][] = {
	{77.1079,13.7629,1.5549},
	{-11.8827,-41.5127,4.0616},
	{14.9758,-90.5087,2.7312},
	{13.4180,-54.9836,4.0540},
	{36.3591,9.5347,4.0278},
	{34.0649,50.2527,4.0634},
	{39.2000,-82.9401,1.5511},
	{-188.4580,161.9381,6.7221},
	{-155.8853,154.2453,4.8498},
	{-147.4659,115.0785,3.0355},
	{-127.4424,125.9156,2.7983},
	{-174.1951,133.7972,3.8350},
	{-201.7736,149.9974,4.6736},
	{-114.1892,121.7764,2.7774}
};
/*============================================================================*/
enum GHETTO_e {
	ghettoKills,
	Float:ghettoDMG,
	ghettoDeaths,
	ghettoPassLevel,
	Float:ghettoLevelDMG,
	bool:GhettoGUI,
}
new GhettoInfo[MAX_PLAYERS][GHETTO_e];
static
Text:GhettoTableTD[36],
PlayerText:GhettoTablePTD[MAX_PLAYERS][3];
static const ghettoGangBoxTDColors[] = { -16711917, -5963725, 8388633, 16777034, -1378294198 };

new PlayerPromoText[MAX_PLAYERS][16];
new PlayerPromoDonate[MAX_PLAYERS];
new PlayerPromoMoney[MAX_PLAYERS];
new PlayerPromoCount[MAX_PLAYERS];

enum fun_bizz {
	funcbSlot,
	funcbID,
	funcbName[20],
	funcbNameCar[12],
	funcbNum,
	funcbTarif[4],
	funcbCar[20],
	funcbBank[15],
	funcbColor,
	funcbShash,
	funcbPercent,
	Float:funcbPercent2,
	funcbPercent3,
	funcbCarID[20],
	funcbCars[20]

}
new FuncBizz[MAX_BUSINESS_COUNT][fun_bizz];

new Float:car_bizz[20][4] = {
	{-469.1691, -473.7513, 26.5467, 180.0000},
	{-474.1685, -473.7513, 26.5467, 180.0000},
	{-479.3889, -473.7513, 26.5467, 180.0000},
	{-484.5038, -473.7513, 26.5467, 180.0000},
	{-489.6243, -473.7513, 26.5467, 180.0000},
	{-494.6654, -473.7513, 26.5467, 180.0000},
	{-499.7348, -473.7513, 26.5467, 180.0000},
	{-504.6826, -473.7513, 26.5467, 180.0000},
	{-509.7936, -473.7513, 26.5467, 180.0000},
	{-514.7168, -473.7513, 26.5467, 180.0000},
	{-519.9040, -473.7513, 26.5467, 180.0000},
	{-524.6349, -473.7513, 26.5467, 180.0000},
	{-529.7674, -473.7513, 26.5467, 180.0000},
	{-534.8320, -473.7513, 26.5467, 180.0000},
	{-539.7120, -473.7513, 26.5467, 180.0000},
	{-544.7651, -473.7513, 26.5467, 180.0000},
	{-1.00, -1.00, -1.00, 270.0000},
	{-1.00, -1.00, -1.00, 270.0000},
	{-1.00, -1.00, -1.00, 270.0000},
	{-1.00, -1.00, -1.00, 270.0000}
};

enum col_td {
	col_id,
	col_rgb[16],
	col_shash[16],
	col_car,
}
new tk_class[3][24] = {"Водитель","Управляющий","Руководитель"};
//new ferma_class[11][24] = {"Грузчик","Тракторист","Водовоз", "Комбайнер","Развозчик Урожая","На след ранги","На след ранги","На след ранги","На след ранги","Зам.Владельца","Владелец"};
new select_member[MAX_PLAYERS][36];
new Text:func_bcolor[22];
new static color_td[22][col_td] = {
	{-1,"ffffff",0xFFFFFFFF, 1},
	{930150143,"3770f6",0xFF3770F6, 2},
	{945198335,"385694",0xFF385694, 108},
	{-1554021121,"a35f84",0xFFA35F84, 232},
	{-328487169,"ec6bae",0xFFEC6BAE, 126},
	{831820287,"319491",0xFF319491, 240},
	{-1521069569,"a55651",0xFFA55651, 161},
	{1160383999,"452a0d",0xFF452A0D, 131},
	{-1433256961,"aa923b",0xFFAA923B, 228},
	{-1553384961,"a36939",0xFFA36939, 219},
	{-1674829569,"9c2c20",0xFF9C2C20, 158},
	{513427199,"1e9a46",0xFF1E9A46, 154},
	{444537343,"1a7f19",0xFF1A7F19, 229},
	{-1886631937,"8f8c47",0xFF8F8C47, 65},
	{-1365606401,"ae9a7f",0xFFAE9A7F, 99},
	{2084470783,"7c3e7f",0xFF7C3E7F, 178},
	{-1726078465,"991e21",0xFF991E21, 175},
	{-1701305857,"9a9821",0xFF9A9821, 194},
	{-712109825,"d58e10",0xFFD58E10, 6},
	{-2061554177,"042023",0xFF042023, 237},
	{623127039,"000000",0x000000AA, 0},
	{-1,"ffffff",0xFFFFFFFF, 1}
};
new tk_car[3][2] = {
	{403,10000},
	{514,12000},
	{515,15000}
};

new serv_stats[2];

new PlayerText:DmArenaTextDraw[MAX_PLAYERS];
new players_dm[4];
new PlayerBuyProdFix[MAX_PLAYERS];

new hellow[MAX_PLAYERS];

new Float:hell_map[7][4] = {
	{1328.0538,1385.8890,552.3762,215.0514},
	{1364.8817,1378.6028,552.3762,57.4432},
	{1364.6575,1399.1182,552.3762,87.5235},
	{1365.8490,1414.6129,552.3762,188.4178},
	{1358.4634,1407.7123,552.3762,123.2438},
	{1336.3926,1414.6816,552.3762,206.5913},
	{1327.4587,1408.2430,552.3762,192.8045}
};

new Float:dm_map_1[5][4] = {
	{-409.3651,2260.8037,42.4297,286.5789},
	{-360.0915,2243.7307,42.4844,107.6639},
	{-348.1927,2217.9890,42.4912,97.0105},
	{-361.7009,2203.7534,42.4844,282.7955},
	{-436.7859,2245.0852,42.4297,174.0677}
};
new Float:dm_map_2[6][4] = {
	{-1316.0101,2491.6484,87.0865,1.9454},
	{-1325.6603,2519.0566,87.0469,271.3912},
	{-1314.9738,2537.0203,87.7422,176.4503},
	{-1285.0657,2527.4458,87.5886,132.8966},
	{-1307.9325,2528.1174,87.6150,176.4503},
	{-1316.5959,2510.2603,87.0420,0.3553}
};

new Float:dm_map_3[5][4] = {
	{2605.3606,2729.4834,23.8222,356.5121},
	{2633.2002,2726.6917,23.8222,353.2666},
	{2602.8298,2780.2700,23.8222,269.6058},
	{2636.6609,2781.1287,23.8222,91.0041},
	{2652.4102,2779.5972,19.3222,181.2451}
};

new Float:dm_map_4[6][4] = {
	{1077.9539,2131.8630,10.8203,177.0825},
	{1060.1449,2103.9063,10.8203,268.2634},
	{1061.9847,2079.3909,10.8203,356.9376},
	{1090.0037,2080.4458,10.8203,2.5776},
	{1091.4039,2088.0046,15.3504,89.3718},
	{1087.9221,2119.0339,15.3504,178.6726}
};

#define MAX_PLAYER_VEHICLES         1

new const Float:ticketVehicleSpawnPos[][4] = {
	{ 1558.2311,-1012.4500,24.2621,180.8820 },
	{ 1562.8167,-1011.9684,24.2627,181.3922 },
	{ 1567.3804,-1011.5687,24.2663,180.2543 },
	{ 1571.7429,-1011.7831,24.2627,181.1801 },
	{ 1576.4763,-1011.6360,24.2627,181.2899 },
	{ 1581.6677,-1011.3458,24.2627,186.2502 },
	{ 1563.6514,-1030.9110,24.2668,344.3940 },
	{ 1559.6671,-1029.4526,24.2654,344.5371 },
	{ 1551.0231,-1027.0604,24.2626,342.1523 },
	{ 1546.6830,-1025.7914,24.2630,344.5341 },
	{ 1570.3666,-1034.0499,24.2646,321.1151 },
	{ 1608.8005,-1009.2097,24.2625,179.8767 },
	{ 1623.7877,-1010.7285,24.2549,163.8528 },
	{ 1651.4990,-1017.3876,24.2547,191.6793 }
};
#define MAX_VEHICLES_PLAYER		1500
#define TRAILER_SELL            1000000

new Iterator:playerVehicles<MAX_VEHICLES_PLAYER>;

enum PLAYER_VEHICLE_E {
	carID,
	carVehicle,
	carOwner[MAX_PLAYER_NAME + 2],
	carModel,
	carOwnerID,
	carColor[2],
	Float:carStatus,
	carVehcom[14],
	carPaintJob,
	carNumber[32],
	carInterior,
	carWorld,
	Float:carPos[4],
	carParked,
	carGun[9],
	carDrugs,
	carHealth,
	carMoney,
	carDay
}
new
PlayerTrailer[MAX_VEHICLES_PLAYER][PLAYER_VEHICLE_E],
playerVehicleID[MAX_PLAYERS],
playerVehicleAmount[MAX_PLAYERS];
////////////////////////////////////////////////////////

#define VEHICLE_STATE_CAR   0
#define VEHICLE_STATE_BIKE  1
#define VEHICLE_STATE_VELIK 2
#define VEHICLE_STATE_PLANE 3
#define VEHICLE_STATE_BOAT  4

#define VEHICLE_TYPE_NONE 0
#define VEHICLE_TYPE_PLAYER 1
#define VEHICLE_TYPE_FRACTION 2
#define VEHICLE_TYPE_BIZZ 3
#define VEHICLE_TYPE_JOB 4
#define VEHICLE_TYPE_RENT 5
#define VEHICLE_TYPE_ADMIN 6
#define VEHICLE_TYPE_TRAILER 7
#define VEHICLE_TYPE_BUY 8
#define VEHICLE_TYPE_AIR 9
#define VEHICLE_TYPE_AUTOSCHOOL 10
#define VEHICLE_TYPE_SPAWN 11
#define VEHICLE_TYPE_RACE 12
#define VEHICLE_TYPE_INVENT 13
#define VEHICLE_TYPE_AUTOSALON 14
#define VEHICLE_TYPE_FAMILY 15
#define VEHICLE_TYPE_DNK 16

#define VIP_NONE 0
#define VIP_BRONZE 1
#define VIP_SILVER 2
#define VIP_GOLD 3

#define MINISTRE_NEWS 6
#define MINISTRE_MEDICS 7
#define MINISTRE_ARMY 8
#define MINISTRE_PD 9
#define MINISTRE_YUST 10

#define MOBILE_AUTH_KEY     "ED40ED0E8089CC44C08EE9580F4C8C44EE8EE990"

#pragma warning disable 214
/*============================================================================*/
#define 	CB:%0(%1)					forward %0(%1); public %0(%1)
#define 	format:%0(		    		%0[0] = EOS,format(%0,sizeof(%0),
#define 	GivePVarInt(%0,%1,%2) SetPVarInt(%0,%1,(GetPVarInt(%0,%1) + %2))

#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
/*============================================================================*/
#define  	DSM 			DIALOG_STYLE_MSGBOX
#define 	DSI				DIALOG_STYLE_INPUT
#define 	DSL				DIALOG_STYLE_LIST
#define 	DSP				DIALOG_STYLE_PASSWORD
#define 	DST				DIALOG_STYLE_TABLIST
#define 	DSTH            DIALOG_STYLE_TABLIST_HEADERS
/*============================================================================*/
#define dip_status_neutral 0
#define dip_status_war 1
#define dip_status_alliance 2
#define dip_status_alliance_invite 3
#define dip_status_alliance_get_invite 4
/*============================================================================*/

enum PRIZE_E {
	cont_class,
	cont_type,
	cont_model,
	cont_name[32],
	cont_price
}

new const PrizeInfo[][PRIZE_E] = {
	// 1 аксы, 2 - вип, 3 - clothes, 4 - money (100000$), 5 - vehiclie, 6 - exp points 3 шт, 7 - donate points, 8 - 200к;
	{1, 1, 6, "Черные очки", 25000},
	{1, 1, 44, "Белая кепка с узорами", 30000},
	{1, 1, 38, "Меч", 20000},
	{1, 1, 100, "Белая маска", 15000},
	{1, 1, 108, "Золотые часы", 35000},
	{1, 2, 1, "Премиум-аккаунт на 1 час", 40000},
	{1, 3, 15, "Clothes (15)", 25000},
	{1, 3, 50, "Clothes (50)", 30000},
	{1, 3, 95, "Clothes (95)", 35000},

	{2, 1, 6, "Черные очки", 55000},
	{2, 1, 73, "Черная панама", 45000},
	{2, 1, 75, "Голубо-белый шлем", 70000},
	{2, 1, 100, "Белая маска", 45000},
	{2, 1, 131, "Огнетушитель", 50000},
	{2, 2, 2, "Премиум-аккаунт на 2 час", 75000},
	{2, 4, 0, "Деньги 100000$", 100000},
	{2, 3, 155, "Clothes (155)", 55000},
	{2, 3, 185, "Clothes (185)", 90000},
	{2, 3, 217, "Clothes (217)", 110000},
	
	{2, 5, 0, "GOLD кейс", 250000},
	{2, 5, 0, "GOLD кейс", 300000},

	{3, 1, 75, "Голубо-белый шлем", 150000},
	{3, 1, 123, "Маска демона", 220000},
	{3, 1, 125, "Попугай на плечо", 210000},
	{3, 8, 0, "Деньги 200000$", 200000},
	{3, 3, 223, "Clothes (223)", 150000},
	{2, 3, 241, "Clothes (241)", 170000},
	{2, 3, 208, "Clothes (208)", 200000},
	
	{2, 5, 0, "GOLD кейс", 80000},
	{2, 5, 0, "GOLD кейс", 75000},

	{4, 1, 128, "Чемодан", 300000},
	{4, 1, 126, "Самолетик", 250000},
	{4, 1, 457, "Белая гитара", 350000},
	{4, 8, 0, "Деньги 200000$", 200000},
	{4, 6, 3, "Exp Points (3 шт)", 30000},
	{4, 2, 4, "Премиум-аккаунт на 4 час", 56000},
	{4, 7, 2, "Donate Points (2)", 45000},
	{4, 3, 289, "Clothes (289)", 350000},
	{4, 3, 264, "Clothes (264)", 500000},
	{4, 5, 0, "GOLD кейс", 200000},
	{4, 5, 0, "GOLD кейс", 600000},
	
	
	{5, 1, 134, "Доллар на спину", 300000},//42
	{5, 3, 294, "Clothes (294)", 6500000},
	{5, 1, 2, "Миниган на спину", 250000},
	{5, 8, 0, "Деньги 150000$", 150000},
	{5, 8, 0, "Деньги 400000$", 400000},
	{5, 8, 0, "Деньги 700000$", 700000},
	{5, 2, 48, "Премиум-аккаунт на 48 час", 560000},
	{5, 3, 189, "Clothes (189)", 1000000},
	{5, 7, 50, "Donate Points (50)", 45000},
	{5, 7, 150, "Donate Points (150)", 45000},
	{5, 1, 453, "Дреды на голову", 3000000},//42
	{5, 1, 459, "Ангельское кольцо", 3000000}//42
	
	

};
#define MAX_PRIZ_CONT	sizeof (PrizeInfo)

#define MAX_PRIZ 40

enum GARAGE_E {
	cont_class,
	cont_model,
	cont_name[32],
	cont_price
}

new const GarageInfo[][GARAGE_E] = {
	{1,  474, "Машина(Landstalker)", 0},//0
	{1,  0, "Пусто", 0},
	{1, 477, "Машина(Volvo V90)", 0},
	{1,  475, "Машина(Chevrolet Impala)", 0},
	{1,  481, "Машина(Ford Mustang Mach)", 0},
	{1,  482, "Машина(Hermes)", 0},
	{1,  0, "Пусто", 0},
	{1, 483, "Машина(Pontiac GTO)", 0},//8
	
	{1,  478, "Машина(Sentinel)", 0},//9
	{1,  0, "Пусто", 0},
	{1, 479, "Машина(Washington)", 0},
	{1,  0, "Пусто", 0},
	{1,  486, "Машина(Willard)", 0},
	{1, 484, "Машина(Jeep Wrangler)", 0},
	{1,  0, "Пусто", 0},
	{1,  487, "Машина(Slamvan)", 0},
	{1, 488, "Машина(BMW Z4)", 0},//17
	
	{1,  476, "Машина(Audio R8)", 0},//18
	{1, 480, "Машина(Ferrari 360)", 0},
	{1,  485, "Машина(Nissan 240SX)", 0},
	{1,  0, "Пусто", 0},
	{1, 489, "Машина(Mitsubishi Lancer)", 0},
	{1,  0, "Пусто", 0},
	{1,  490, "Машина(BMW 320i)", 0},
	{1,  0, "Пусто", 0},
	{1, 491, "Машина(Flash)", 0}//26
	
};

enum priz_player {
	cont_id[MAX_PRIZ],
	cont_model[MAX_PRIZ],
	cont_cash[MAX_PRIZ],
	cont_type[MAX_PRIZ]
}
new CountInfo[MAX_PLAYERS][priz_player];

new MYSQL_GLOBAL[2048];
new STRING_GLOBAL[4096];

new SAD_TIMER = 2;
new ServerMovedEx[MAX_OBJECT_MOVED];
new ServerMovedFix[MAX_OBJECT_MOVED];

new PlayerRaceFix[MAX_PLAYERS];

new skill_gun[MAX_PLAYERS];

#define MAX_REPORTS (50)

new PlayerClearAnim[MAX_PLAYERS];
new PlayerHealExFix[MAX_PLAYERS];
new PlayerHealFix[MAX_PLAYERS];

new PlayerBuildFix[MAX_PLAYERS];
new PlayerBuildExFix[MAX_PLAYERS];

new PlayerBuild2Fix[MAX_PLAYERS];
new PlayerBuild2ExFix[MAX_PLAYERS];

new PlayerSecondTimer[MAX_PLAYERS] = {-1, ...};
/*=============================================================================*/
// casino
// casino
#define MAX_BLACKJACK_PLAYER_CARD		5
#define MAX_BLACKJACK_TABLES			10

#define MAX_BLACKJACK_SEATS				3

#define BLACKJACK_DEFAULT_MIN_BET		1
#define BLACKJACK_DEFAULT_MAX_BET		10000
#define MAX_CASINO_CARDS				52

#define BLACKJACK_DEFAULT_SEAT_PRICE	10

enum BLACKJACK_E {
	pBlackJackTableID,
	pBlackJackSeatID,
	pBlackJackActiveID,
Float:pBlackJackPos[3],
	pBlackJackCard[MAX_BLACKJACK_PLAYER_CARD * 2/* (+ split*2) */],
	pBlackJackCards[2],
	pBlackJackCardsScore[2],
	pBlackJackBet[2],
	pBlackJackLastBet,
	pBlackJackBlockID,
	pBlackJackStatus[2],
	pBlackJackDelay,
	pBlackJackActiveHand,
	pBlackJackOptions,
	pBlackJackGUI,
	pBlackJackSplit,
	pBlackJackLanguage,
	pBlackJackTutorialStep,
	pBlackJackTutorialKey
};
new BJ_PlayerInfo[MAX_PLAYERS][BLACKJACK_E], NULL_BJ_PI[BLACKJACK_E];

new
Text:Blackjack_Tutorial_TD[4], PlayerText:Blackjack_Tutorial_PTD[MAX_PLAYERS],
Text:Blackjack_TD[6], PlayerText:Blackjack_PTD[MAX_PLAYERS][58];

new Float:blackjack_TableOffsets[MAX_BLACKJACK_SEATS + 1/*(dealer pos)*/][4] = {
	{-0.0418, -1.6296, 0.0602, 355.5609}, // 1
	{-1.3105, -1.1824, 0.0602, 315.0}, // 2
	{1.3448, -1.1447, 0.0602, 45.0}, // 3
	{0.0311, 0.3729, 0.0602, 175.7082} // dealer
};
enum {
	BLACKJACK_KEY_SPLIT = 1,
	BLACKJACK_KEY_HIT,
	BLACKJACK_KEY_STAY
};
enum {
	BJ_PLAYER_STATUS_NONE,
	BJ_PLAYER_STATUS_DOUBLE,
	BJ_PLAYER_STATUS_SPLIT,
	BJ_PLAYER_STATUS_LOSE,
	BJ_PLAYER_STATUS_WON,
	BJ_PLAYER_STATUS_STAY
};
enum {
	BLACKJACK_STATUS_NONE,
	BLACKJACK_STATUS_STARTING,
	BLACKJACK_STATUS_STARTED,
	BLACKJACK_STATUS_ENDING
};
enum blackjackTableE {
	blackjackTableDealerCard[MAX_BLACKJACK_PLAYER_CARD],
	blackjackTableDealerCards,
	blackjackTableDealerScore,
	blackjackTableDealerDelay,
	blackjackTableDealerHidden,
	blackjackTablePlayerid,
	blackjackTableStatus,
	blackjackTableDelay,
	blackjackTableCardsActive,
	blackjackTableHandsActive,
	blackjackTablePlayersActive,
	blackjackTableObjectID,
	blackjackTableActorID,
Text3D:blackjackTableTextID,
	blackjackTableAreaID,
Float:blackjackTablePos[6],
	blackjackTableInterior,
	blackjackTableWorld,
	blackjackTableplayers,
	blackjackTableMinBet,
	blackjackTableMaxBet,
	blackjackTableEnterPrice,
	blackjackTableLimit,
	blackjackTableTimer,
	blackjackTableSlots[MAX_BLACKJACK_SEATS],
	blackjackTableDeck[MAX_CASINO_CARDS]
}
new
blackjackTableInfo[MAX_BLACKJACK_TABLES][blackjackTableE],
Iterator:blackjackTables<MAX_BLACKJACK_TABLES>;

enum {
	BLACKJACK_OPTION_NONE = 0,
	BLACKJACK_OPTION_MMBA, //	MIN(1)  MAX(300)  BET(1-300)  AGAIN(300)
	BLACKJACK_OPTION_DSHS, //	DOUBLE  SPLIT  HIT  STAY
};
new blackjack_language_massive[2][7][] = {
	{	/* (00) */"ROUND WILL BEGIN THROUGH",
		/* (01) */"ROUND WILL END THROUGH",
		/* (02) */"~p~MAKE YOUR BETTING!",
		/* (03) */"~w~CURRENT BET:",
		/* (04) */"~p~NEW ROUND STARTED!",
		/* (05) */"~w~YOU",
		/* (06) */"~w~YOUR TURN!"
	},
	{	/* (00) */"PAYHѓ HAЌHEЏC• ЌEPE€", // РАУНД НАЧНЕТСЯ ЧЕРЕЗ
		/* (01) */"PAYHѓ €AKOHЌ…ЏC• ЌEPE€", // РАУНД ЗАКОНЧИТСЯ ЧЕРЕЗ
		/* (02) */"~p~‹HOC…ЏE ‹AЋ… CЏA‹K…!", // ~p~ВНОСИТЕ ВАШИ СТАВКИ!
		/* (03) */"~w~ЏEKYЉA• CЏA‹KA:",	// ~w~ТЕКУЩАЯ СТАВКА
		/* (04) */"~p~HO‹‘… PAYHѓ HAЌA‡C•!", // ~p~НОВЫЙ РАУНД НАЧАЛСЯ!
		/* (05) */"~w~‹‘", // ВЫ
		/* (06) */"~w~‹AЋ XOѓ!"	// ВАШ ХОД!
	}
};
enum {
	CARD_NUMBER_TWO = 2,
	CARD_NUMBER_THREE,
	CARD_NUMBER_FOUR,
	CARD_NUMBER_FIVE,
	CARD_NUMBER_SIX,
	CARD_NUMBER_SEVEN,
	CARD_NUMBER_EIGHT,
	CARD_NUMBER_NINE,
	CARD_NUMBER_TEN,
	CARD_NUMBER_JACK,
	CARD_NUMBER_QUEEN,
	CARD_NUMBER_KING,
	CARD_NUMBER_ACE
}
enum {
	BJ_CARD_NUMBER_TWO = 1,
	BJ_CARD_NUMBER_THREE,
	BJ_CARD_NUMBER_FOUR,
	BJ_CARD_NUMBER_FIVE,
	BJ_CARD_NUMBER_SIX,
	BJ_CARD_NUMBER_SEVEN,
	BJ_CARD_NUMBER_EIGHT,
	BJ_CARD_NUMBER_NINE,
	BJ_CARD_NUMBER_TEN,
	BJ_CARD_NUMBER_JACK,
	BJ_CARD_NUMBER_QUEEN,
	BJ_CARD_NUMBER_KING,
	BJ_CARD_NUMBER_ACE
}
enum {
	CARD_SUIT_CLUBS = 1,
	CARD_SUIT_DIAMONDS,
	CARD_SUIT_HEARTS,
	CARD_SUIT_SPADES
};
enum CASINO_CARD_ENUM {
	CASINO_CARD_NAME[16],
	CASINO_CARD_SUIT,
	CASINO_CARD_VALUE
};
enum CASINO_BJ_CARD_ENUM {
	CASINO_BJ_CARD_NAME[16],
	CASINO_BJ_CARD_SUIT,
	CASINO_BJ_CARD_VALUE
};
new CASINO_BJ_CARD_INFO[MAX_CASINO_CARDS][CASINO_BJ_CARD_ENUM] = {
	{"LD_CARD:cd1c", CARD_SUIT_CLUBS, BJ_CARD_NUMBER_ACE},
	{"LD_CARD:cd2c", CARD_SUIT_CLUBS, BJ_CARD_NUMBER_TWO},
	{"LD_CARD:cd3c", CARD_SUIT_CLUBS, BJ_CARD_NUMBER_THREE},
	{"LD_CARD:cd4c", CARD_SUIT_CLUBS, BJ_CARD_NUMBER_FOUR},
	{"LD_CARD:cd5c", CARD_SUIT_CLUBS, BJ_CARD_NUMBER_FIVE},
	{"LD_CARD:cd6c", CARD_SUIT_CLUBS, BJ_CARD_NUMBER_SIX},
	{"LD_CARD:cd7c", CARD_SUIT_CLUBS, BJ_CARD_NUMBER_SEVEN},
	{"LD_CARD:cd8c", CARD_SUIT_CLUBS, BJ_CARD_NUMBER_EIGHT},
	{"LD_CARD:cd9c", CARD_SUIT_CLUBS, BJ_CARD_NUMBER_NINE},
	{"LD_CARD:cd10c", CARD_SUIT_CLUBS, BJ_CARD_NUMBER_TEN},
	{"LD_CARD:cd11c", CARD_SUIT_CLUBS, BJ_CARD_NUMBER_JACK},
	{"LD_CARD:cd12c", CARD_SUIT_CLUBS, BJ_CARD_NUMBER_QUEEN},
	{"LD_CARD:cd13c", CARD_SUIT_CLUBS, BJ_CARD_NUMBER_KING},

	{"LD_CARD:cd1d", CARD_SUIT_DIAMONDS, BJ_CARD_NUMBER_ACE},
	{"LD_CARD:cd2d", CARD_SUIT_DIAMONDS, BJ_CARD_NUMBER_TWO},
	{"LD_CARD:cd3d", CARD_SUIT_DIAMONDS, BJ_CARD_NUMBER_THREE},
	{"LD_CARD:cd4d", CARD_SUIT_DIAMONDS, BJ_CARD_NUMBER_FOUR},
	{"LD_CARD:cd5d", CARD_SUIT_DIAMONDS, BJ_CARD_NUMBER_FIVE},
	{"LD_CARD:cd6d", CARD_SUIT_DIAMONDS, BJ_CARD_NUMBER_SIX},
	{"LD_CARD:cd7d", CARD_SUIT_DIAMONDS, BJ_CARD_NUMBER_SEVEN},
	{"LD_CARD:cd8d", CARD_SUIT_DIAMONDS, BJ_CARD_NUMBER_EIGHT},
	{"LD_CARD:cd9d", CARD_SUIT_DIAMONDS, BJ_CARD_NUMBER_NINE},
	{"LD_CARD:cd10d", CARD_SUIT_DIAMONDS, BJ_CARD_NUMBER_TEN},
	{"LD_CARD:cd11d", CARD_SUIT_DIAMONDS, BJ_CARD_NUMBER_JACK},
	{"LD_CARD:cd12d", CARD_SUIT_DIAMONDS, BJ_CARD_NUMBER_QUEEN},
	{"LD_CARD:cd13d", CARD_SUIT_DIAMONDS, BJ_CARD_NUMBER_KING},

	{"LD_CARD:cd1h", CARD_SUIT_HEARTS, BJ_CARD_NUMBER_ACE},
	{"LD_CARD:cd2h", CARD_SUIT_HEARTS, BJ_CARD_NUMBER_TWO},
	{"LD_CARD:cd3h", CARD_SUIT_HEARTS, BJ_CARD_NUMBER_THREE},
	{"LD_CARD:cd4h", CARD_SUIT_HEARTS, BJ_CARD_NUMBER_FOUR},
	{"LD_CARD:cd5h", CARD_SUIT_HEARTS, BJ_CARD_NUMBER_FIVE},
	{"LD_CARD:cd6h", CARD_SUIT_HEARTS, BJ_CARD_NUMBER_SIX},
	{"LD_CARD:cd7h", CARD_SUIT_HEARTS, BJ_CARD_NUMBER_SEVEN},
	{"LD_CARD:cd8h", CARD_SUIT_HEARTS, BJ_CARD_NUMBER_EIGHT},
	{"LD_CARD:cd9h", CARD_SUIT_HEARTS, BJ_CARD_NUMBER_NINE},
	{"LD_CARD:cd10h", CARD_SUIT_HEARTS, BJ_CARD_NUMBER_TEN},
	{"LD_CARD:cd11h", CARD_SUIT_HEARTS, BJ_CARD_NUMBER_JACK},
	{"LD_CARD:cd12h", CARD_SUIT_HEARTS, BJ_CARD_NUMBER_QUEEN},
	{"LD_CARD:cd13h", CARD_SUIT_HEARTS, BJ_CARD_NUMBER_KING},

	{"LD_CARD:cd1s", CARD_SUIT_SPADES, BJ_CARD_NUMBER_ACE},
	{"LD_CARD:cd2s", CARD_SUIT_SPADES, BJ_CARD_NUMBER_TWO},
	{"LD_CARD:cd3s", CARD_SUIT_SPADES, BJ_CARD_NUMBER_THREE},
	{"LD_CARD:cd4s", CARD_SUIT_SPADES, BJ_CARD_NUMBER_FOUR},
	{"LD_CARD:cd5s", CARD_SUIT_SPADES, BJ_CARD_NUMBER_FIVE},
	{"LD_CARD:cd6s", CARD_SUIT_SPADES, BJ_CARD_NUMBER_SIX},
	{"LD_CARD:cd7s", CARD_SUIT_SPADES, BJ_CARD_NUMBER_SEVEN},
	{"LD_CARD:cd8s", CARD_SUIT_SPADES, BJ_CARD_NUMBER_EIGHT},
	{"LD_CARD:cd9s", CARD_SUIT_SPADES, BJ_CARD_NUMBER_NINE},
	{"LD_CARD:cd10s", CARD_SUIT_SPADES, BJ_CARD_NUMBER_TEN},
	{"LD_CARD:cd11s", CARD_SUIT_SPADES, BJ_CARD_NUMBER_JACK},
	{"LD_CARD:cd12s", CARD_SUIT_SPADES, BJ_CARD_NUMBER_QUEEN},
	{"LD_CARD:cd13s", CARD_SUIT_SPADES, BJ_CARD_NUMBER_KING}
};
enum {
	CASINO_LANGUAGE_ENGLISH = 0,
	CASINO_LANGUAGE_RUSSIAN
};
new actors                              [MAX_D_ACTORS][3];
new Float:actorspos                     [MAX_D_ACTORS][4];
new Text3D:actors3d                     [MAX_D_ACTORS];
new actors3d_s							[MAX_D_ACTORS],
	actors_string						[MAX_D_ACTORS][128],
	choosen_actor        				[MAX_PLAYERS];
new anim_actors                         [MAX_D_ACTORS];
new OldDialogID[MAX_PLAYERS];
new PlayerAdminFix[MAX_PLAYERS];
#define INVALID_DIALOG_ID   (1234)

new TextReport[MAX_REPORTS][151];
new TextReportAdmin[MAX_REPORTS][131];
new PlayerReport[MAX_REPORTS] = {-1,...};
new ReportID[MAX_PLAYERS] = {-1,...};
new ReportSlot[MAX_REPORTS] = {-1,...};
new rep_system = 1;

new PlayerChatFix[MAX_PLAYERS];
new PlayerChatExFix[MAX_PLAYERS];

new pl_update_speed[MAX_PLAYERS];
new PlayerSpeedFix[MAX_PLAYERS];
new PlayerUnFreezeFix[MAX_PLAYERS];
new PlayerUnFreezeTimerFix[MAX_PLAYERS];

new Text:inventory_TD[54];
new PlayerText:inventory_PTD[MAX_PLAYERS][8];
new PlayerText:inventory_slot[MAX_PLAYERS][46];

new Text:autoshop_TD[54];
new PlayerText:auto_PTD[MAX_PLAYERS][2];

new car_shop[MAX_PLAYERS];
new car_color[MAX_PLAYERS][2];

static
GlobalSecondTimer = -1,
GlobalTimer_1MIN,
GlobalTimer_3SEC;

new CHAT_GLOBAL[144];

new l_casino[6];
new l2_casino;
new l_start;
new stats_lift = 0;
new gm_player[MAX_PLAYERS];

new buy_curs = 10;
new sell_curs = 8;

new Float:bak[MAX_VEHICLES];

new CountFloodForPlayer[MAX_PLAYERS];

new police_eqm[MAX_PLAYERS][11];
new take_items[MAX_PLAYERS][11];

new bank_vzlom[4];
new Text3D:text_bank;

enum d_donate
{
	dName[MAX_PLAYER_NAME],
	dModel,
	dRub
}
new Donate[26][d_donate] =
{
	{"Маска демона", 123, 250},
	{"Черепаха на спину", 124 , 50},
	{"Попугай на плечо", 125, 100},
	{"Самолетик", 126, 100},
	{"Бензопила", 127, 100},
	{"Чемодан", 128, 50},
	{"Церковный крест",129, 100},
	{"Голова зомби", 130, 100},
	{"Огнетушитель", 131, 50},
	{"Колпак", 132, 50},
	{"Магнит", 133, 100},
	{"Доллар на спину", 134, 200},
	{"Маска CJ", 135, 300},
	{"Крылья на спину", 136, 450},
	{"Маска петуха", 137, 200},
	{"Бургер на голову", 138, 150},
	{"Череп на грудь", 139, 200},
	{"Скейтборд", 140, 300},
	{"Рога на голову", 141, 400},
	{"Очки ночного виденья", 456, 400},
	{"Ангельское кольцо", 459, 250},
	{"Шляпа волшебника", 460, 300},
	{"Катана на спину", 461, 550},
	{"Дреды на голову", 453, 300},
	{"Миниган на спину", 2, 550},
	{"Бумбокс", 462, 400}
	
	
};
enum PTEMP
{
	var_unit_6,
    var_unit_5,
	var_unit_4[24],
    var_unit_3,
    var_unit_2,
    var_unit_1
}
new pTemp[MAX_PLAYERS][PTEMP];
enum ItemInfo
{
	ItemModel,
	ItemName[128],
	Float:POSTDx,
	Float:POSTDy,
	Float:POSTDz,
	Float:POSTDc,
	Access,
	AcessBone
};
#define MAX_ITEM 474+18
new ItemsInfo[MAX_ITEM][ItemInfo] =
{
	{1649,  " ", 0.000000, 0.000000, 90.000000, 2.000000},
	{11738, "Аптечка", 0.000000, 351.000000, 180.000000, 1.100103}, // 1
	{362,  "Миниган на спину", 0.0, 3.0, 241.0, 0.860271, 1, 5}, // 2
	{19035,  "Голубые очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 3
	{19034,  "Очки с черной оправой", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 4
	{19033,  "Черные очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 5
	{19032,  "Очки с черной оправой", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 6
	{19031,  "Очки с черной оправой", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 7
	{19030,  "Очки с черной оправой", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 8
	{19029,  "Зеленые очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 9
	{19028,  "Желтые очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 10
	{19027,  "Коричневые очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 11
	{19026,  "Красные очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 12
	{19025,  "Розовые очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 13
	{19024,  "Фиолетовые очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 14
	{19023,  "Бирюзовые очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 15
	{19022,  "Белые очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 16
	{19021,  "Черные очки без моста", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 17
	{19020,  "Черные очки без моста", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 18
	{19019,  "Черные очки без моста", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 19
	{19018,  "Черные очки без моста", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 20
	{19017,  "Черные очки без моста", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 21
	{19016,  "X-Ray очки с чёрной оправой", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 22
	{19015,  "Утолщенные очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 23
	{19014,  "Шахматные очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 24
	{19013,  "Очки в виде зрачка", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 25
	{19012,  "Очки в виде зрачка", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 26
	{19012,  "Спиралевидные очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 27
	{19010,  "Розовые спиралевидные очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 28
	{19009,  "Бирюзовые спиралевидные очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 29
	{19008,  "Зеленые спиралевидные очки", 0.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 30
	{19007,  "Оранжевые спиралевидные очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 31
	{19006,  "Темно-оранжевые спиралевидные очки", -20.000000, 0.000000, 90.000000, 1.000000, 1, 1}, // 32

	{19069,  "Шапка с черепом", -15.000000, 0.000000, 0.000000, 1.00000, 1, 0}, // 33
	{19067,  "Шапка с надписью", -15.000000, 0.000000, 0.000000, 1.00000, 1, 0}, // 34
	{19068,  "Серая шапка", -15.000000, 0.000000, 0.000000, 1.00000, 1, 0}, // 35
	{18953,  "Утепленная шапка", -15.000000, 0.000000, 0.000000, 1.00000, 1, 0}, // 36
	{18954,  "Зеленая утепленная шапка", -15.000000, 0.000000, 0.000000, 1.00000, 1, 0}, // 37
	{19590,  "Меч", 90.000000, 119.000000, 0.000000, 1.451511, 1, 5}, // 38
	{18947,  "Черная шляпа", -15.000000, 0.000000, 0.000000, 1.00000, 1, 0}, // 39
	{18948,  "Бирюзовая шляпа", -15.000000, 0.000000, 0.000000, 1.00000, 1, 0}, // 40
	{18949,  "Зеленая шляпа", -15.000000, 0.000000, 0.000000, 1.00000, 1, 0}, // 41
	{18950,  "Красная шляпа", -15.000000, 0.000000, 0.000000, 1.00000, 1, 0}, // 42
	{18951,  "Желтая шляпа", -15.000000, 0.000000, 0.000000, 1.00000, 1, 0}, // 43

	{18933,  "Белая кепка с узорами", 0.000000, 0.000000, -180.000000, 1.00000, 1, 0}, // 44
	{18932,  "Огненно-желтая кепка", 0.000000, 0.000000, -180.000000, 1.00000, 1, 0}, // 45
	{18928,  "Радужная кепка", 0.000000, 0.000000, -180.000000, 1.00000, 1, 0}, // 46
	{18942,  "Белая кепка", 0.000000, 0.000000, -180.000000, 1.00000, 1, 0}, // 47
	{18943,  "Зеленая кепка", 0.000000, 0.000000, -180.000000, 1.00000, 1, 0}, // 48
	{18940,  "Синяя кепка", 0.000000, 0.000000, -180.000000, 1.00000, 1, 0}, // 49
	{18929,  "Болотная кепка", 0.000000, 0.000000, -180.000000, 1.00000, 1, 0}, // 50
	{18926,  "Камуфляжная кепка", 0.000000, 0.000000, -180.000000, 1.00000, 1, 0}, // 51
	{18955,  "Желтная кепка", 0.000000, 0.000000, -180.000000, 1.00000, 1, 0}, // 52
	{18956,  "Темная кепка", 0.000000, 0.000000, -180.000000, 1.00000, 1, 0}, // 53
	{18957,  "Голубо-синяя кепка", 0.000000, 0.000000, -180.000000, 1.00000, 1, 0}, // 54
	{18959,  "Комуфляжная кепка '2'", 0.000000, 0.000000, -180.000000, 1.00000, 1, 0}, // 55

	{18924,  "Комуфляжный берет", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 56
	{18925,  "Красный берет", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 57
	{18921,  "Черный берет", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 58
	{18923,  "Синий берет", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 59
	{18922,  "Оранжевый берет", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 60

	{18906,  "Лавовая бандана",90.000000, 90.000000, 0.000000, 1.000000, 1, 3}, // 61
	{18910,  "Красная бандана",90.000000, 90.000000, 0.000000, 1.000000, 1, 3}, // 62
	{18911,  "Бандана с черепами", 90.000000, 90.000000, 0.000000, 1.000000, 1, 3}, // 63
	{18912,  "Черная бандана", 90.000000, 90.000000, 0.000000, 1.000000, 1, 3}, // 64
	{18913,  "Зеленая бандана", 90.000000, 90.000000, 0.000000, 1.000000, 1, 3}, // 65
	{18914,  "Комуфляжная бандана",90.000000, 90.000000, 0.000000, 1.000000, 1, 3}, // 66
	{18915,  "Разноцветная бандана",90.000000, 90.000000, 0.000000, 1.000000, 1, 3}, // 67
	{18916,  "Желтая бандана", 90.000000, 90.000000, 0.000000, 1.000000, 1, 3}, // 68
	{18917,  "Голубо-синяя бандана", 90.000000, 90.000000, 0.000000, 1.000000, 1, 3}, // 69
	{18918,  "Зеленая бандана с узорами", 90.000000, 90.000000, 0.000000, 1.000000, 1, 3}, // 70
	{18919,  "Белая бандана", 90.000000, 90.000000, 0.000000, 1.000000, 1, 3}, // 71

	{18968,  "Серая панама", 0.000000, 0.000000, 35.000000, 1.00000, 1, 0}, // 72
	{18967,  "Черная панама", 0.000000, 0.000000, 35.000000, 1.00000, 1, 0}, // 73
	{18969,  "Лавовая панама", 0.000000, 0.000000, 35.000000, 1.00000, 1, 0}, // 74


	{18976,  "Голубо-белый шлем", 0.000000, 0.000000, 193.000000, 0.872784, 1, 0}, // 75
	{18977,  "Красный шлем", 0.000000, 0.000000, 193.000000, 0.872784, 1, 0}, // 76
	{18978,  "Белый шлем", 0.000000, 0.000000, 193.000000, 0.872784, 1, 0}, // 77
	{18979,  "Розовый шлем", 0.000000, 0.000000, 193.000000, 0.872784, 1, 0}, // 78
	{18645,  "Красно-белый шлем", 0.000000, 0.000000, 193.000000, 0.872784, 1, 0}, // 79

	{19101,  "Комуфляжная каска", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 80
	{19102,  "Комуфляжная каска (2)", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 81
	{19103,  "Комуфляжная каска (3)", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 82
	{19104,  "Комуфляжная каска (4)", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 83
	{19105,  "Комуфляжная каска (5)", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 84
	{19106,  "Комуфляжная каска без ремешков '1'", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 85
	{19107,  "Комуфляжная каска без ремешков '2'", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 86
	{19108,  "Комуфляжная каска без ремешков '3'", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 87
	{19109,  "Комуфляжная каска без ремешков '4'", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 88
	{19110,  "Комуфляжная каска без ремешков '5'", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 89
	{19111,  "Песчаная каска", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 90
	{19112,  "Розовая каска", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 91
	{19113,  "Разноцветная каска", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 92
	{19114,  "Черная каска с надписью", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 93
	{19115,  "Черная каска с черепом", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 94
	{19116,  "Черная каска", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 95
	{19117,  "Красная каска", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 96
	{19118,  "Зеленая каска", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 97
	{19119,  "Голубая каска", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 98
	{19120,  "Золотая каска", 90.000000, 0.000000, 90.000000, 1.00000, 1, 0}, // 99

	{19036,  "Белая маска", 10.000000, 0.000000, -256.000000, 1.000000, 1, 3}, // 100
	{19037,  "Красная маска", 10.000000, 0.000000, -256.000000, 1.000000, 1, 3}, // 101
	{19038,  "Зеленая маска", 10.000000, 0.000000, -256.000000, 1.000000, 1, 3}, // 102

	{19421,  "Белые наушники", 120.000000, 0.000000, 0.000000, 1.000000, 1, 6}, // 103
	{19422,  "Черные наушники", 120.000000, 0.000000, 0.000000, 1.000000, 1, 6}, // 104
	{19423,  "Оранжевые наушники", 120.000000, 0.000000, 0.000000, 1.000000, 1, 6}, // 105
	{19424,  "Синие наушники", 120.000000, 0.000000, 0.000000, 1.000000, 1, 6}, // 106

	{19040, "Серебряные часы", 0.000000, 0.000000, 0.000000, 1.00000, 1, 7}, // 107
	{19042, "Золотые часы", 0.000000, 0.000000, 0.000000, 1.00000, 1, 7}, // 108
	{19041, "Тускло-золотые часы", 0.000000, 0.000000, 0.000000, 1.00000, 1, 7}, // 109
	{19039, "Золотые часы 2", 0.000000, 0.000000, 0.000000, 1.00000, 1, 7}, // 110
	{19043, "Серебряные часы 2", 0.000000, 0.000000, 0.000000, 1.00000, 1, 7}, // 111
	{19044, "Розовые часы", 0.000000, 0.000000, 0.000000, 1.00000, 1, 7}, // 112
	{19045, "Красные часы", 0.000000, 0.000000, 0.000000, 1.00000, 1, 7}, // 113
	{19046, "Зеленые часы", 0.000000, 0.000000, 0.000000, 1.00000, 1, 7}, // 114
	{19048, "Голубо-синие часы", 0.000000, 0.000000, 0.000000, 1.00000, 1, 7}, // 115
	{19049, "Разноцветные часы", 0.000000, 0.000000, 0.000000, 1.00000, 1, 7}, // 116
	{19050, "Часы цвета моря", 0.000000, 0.000000, 0.000000, 1.00000, 1, 7}, // 117
	{19051, "Черные часы", 0.000000, 0.000000, 0.000000, 1.00000, 1, 7}, // 118
	{19053, "Леопардовые часы", 0.000000, 0.000000, 0.000000, 1.00000, 1, 7}, // 119

	{19163,"Маска",10.000000, 0.000000, -256.000000, 1.000000, 0, 0}, // 120
	{19627,"Ремкомплекты",87.000000, 0.000000, -42.000000, 1.000000, 0, 0}, // 121
	{11746,"Отмычка", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 122

	{11704, "Маска демона (донат)", 0.000000, 0.000000, 114.000000, 0.725755, 1, 3}, // 123
	{1609, "Черепаха на спину (донат)", 160.000000, 174.000000, 195.000000, 1.000000, 1, 5}, // 124
	{19079, "Попугай на плечо (донат)", 90.000000, 90.000000, 0.000000, 1.000000, 1, 4}, // 125
	{2511, "Самолетик (донат)", 90.000000, 90.000000, 0.000000, 1.000000, 1, 5}, // 126
	{341, "Бензопила (донат)", 0.000000, 0.000000, 112.000000, 2.368091, 1, 5}, // 127
	{19624, "Чемодан (донат)", 0.000000, 0.000000, 0.000000, 1.00000, 1, 7}, // 128
	{11712, "Церковный крест (донат)", -0.0000, 10.0000, 140.0000, 1.0000, 1, 6}, // 129
	{2908, "Голова зомби (донат)", 182.000000, 190.000000, 259.000000, 1.001042, 1, 2}, // 130
	{2690, "Огнетушитель (донат)", 0.000000, 0.000000, 171.000000, 1.060479, 1, 5}, // 131
	{19487, "Колпак (донат)", 0.000000, 0.000000, 0.000000, 1.00000, 1, 2}, // 132
	{3056, "Магнит (донат)", 0.000000, 0.000000, 0.000000, 1.00000, 1, 5}, // 133
	{1212, "Доллар на спину (донат)", 0.000000, 0.000000, 0.000000, 1.00000, 1, 5}, // 134
	{18963, "Маска CJ (донат)", 0.000000, 0.000000, 114.000000, 0.725755, 1, 2}, // 135
	{8492, "Крылья на спину (донат)", 0.000000, 90.000000, 0.000000, 1.000000, 1, 5}, // 136
	{19137, "Маска петуха (донат)",  182.000000, 190.000000, 259.000000, 1.001042, 1, 2}, // 137
	{19094, "Бургер на голову (донат)", 182.000000, 190.000000, 259.000000, 1.001042, 1, 2}, // 138
	{1254, "Череп на грудь (донат)", 0.000000, 0.000000, 0.000000, 1.00000, 1, 6}, // 139
	{19878, "Скейтборд (донат)", 220.000000, 146.000000, 156.000000, 1.001042, 1, 5}, // 140
	{19314, "Рога на голову (донат)", 182.000000, 190.000000, 259.000000, 1.001042, 1, 2}, // 141

	{1, "Скин: The Truth (ID: 1)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 142
	{2, "Скин: Maccer (ID: 2)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 143
	{3, "Скин: Andre (ID: 3)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 144
	{4, "Скин: Barry Big Bear Thorne Thin (ID: 4)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 145
	{5, "Скин: Barry Big Bear Thorne Big (ID: 5)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 146
	{6, "Скин: Emmet (ID: 6)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 147
	{7, "Скин: Taxi Driver/Train Driver (ID: 7)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 148
	{8, "Скин: Janitor (ID: 8)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 149
	{9, "Скин: Normal Ped (ID: 9)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 150
	{10, "Скин: Old Woman (ID: 10)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 151
	{11, "Скин: Casino Croupier (ID: 11)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 152
	{12, "Скин: Rich Woman (ID: 12)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 153
	{13, "Скин: Street Girl (ID: 13)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 154
	{14, "Скин: Normal Ped (ID: 14)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 155
	{15, "Скин: Mr.Whittaker (ID: 15)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 156
	{16, "Скин: Aiport Ground Worker (ID: 16)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 157
	{17, "Скин: Businessman (ID: 17)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 158
	{18, "Скин: Beach Visitor (ID: 18)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 159
	{19, "Скин: DJ (ID: 19)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 160
	{20, "Скин: Rich Guy (ID: 20)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 161
	{21, "Скин: Normal Ped (ID: 21)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 162
	{22, "Скин: Normal Ped (ID: 22)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 163
	{23, "Скин: BMXer (ID: 23)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 164
	{24, "Скин: Madd Dogg Bodyguard (ID: 24)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 165
	{25, "Скин: Madd Dogg Bodyguard (ID: 25)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 166
	{26, "Скин: Backpacker (ID: 26)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 167
	{27, "Скин: Construction Worker (ID: 27)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 168
	{28, "Скин: Drug Dealer (ID: 28)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 169
	{29, "Скин: Drug Dealer (ID: 29)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 170
	{30, "Скин: Drug Dealer (ID: 30)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 171
	{31, "Скин: Farm-Town Inhabitant (ID: 31)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 172
	{32, "Скин: Farm-Town Inhabitant (ID: 32)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 173
	{33, "Скин: Farm-Town Inhabitant (ID: 33)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 174
	{34, "Скин: Farm-Town Inhabitant (ID: 34)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 175
	{35, "Скин: Gardener (ID: 35)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 176
	{36, "Скин: Golfer (ID: 36)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 177
	{37, "Скин: Golfer (ID: 37)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 178
	{38, "Скин: Normal Ped (ID: 38)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 179
	{39, "Скин: Normal Ped (ID: 39)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 180
	{40, "Скин: Normal Ped (ID: 40)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 181
	{41, "Скин: Normal Ped (ID: 41)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 182
	{42, "Скин: Jethro (ID: 42)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 183
	{43, "Скин: Normal Ped (ID: 43)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 184
	{44, "Скин: Normal Ped (ID: 44)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 185
	{45, "Скин: Beach Visitor (ID: 45)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 186
	{46, "Скин: Normal Ped (ID: 46)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 187
	{47, "Скин: Normal Ped (ID: 47)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 188
	{48, "Скин: Normal Ped (ID: 48)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 189
	{49, "Скин: Snakehead (ID: 49)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 190
	{50, "Скин: Mechanic (ID: 50)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 191
	{51, "Скин: Mountain Biker (ID: 51)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 192
	{52, "Скин: Mountain Biker (ID: 52)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 193
	{53, "Скин: Unknown (ID: 53)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 194
	{54, "Скин: Normal Ped (ID: 54)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 195
	{55, "Скин: Normal Ped (ID: 55)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 196
	{56, "Скин: Normal Ped (ID: 56)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 197
	{57, "Скин: Oriental Ped (ID: 57)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 198
	{58, "Скин: Oriental Ped (ID: 58)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 199
	{59, "Скин: Normal Ped (ID: 59)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 200
	{60, "Скин: Normal Ped (ID: 60)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 201
	{61, "Скин: Pilot (ID: 61)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 202
	{62, "Скин: Colonel Fuhrberger (ID: 62)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 203
	{63, "Скин: Prostitute (ID: 63)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 204
	{64, "Скин: Prostitute (ID: 64)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 205
	{65, "Скин: Kendl Johnson (ID: 65)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 206
	{66, "Скин: Pool Player (ID: 66)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 207
	{67, "Скин: Pool Player (ID: 67)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 208
	{68, "Скин: Priest/Preacher (ID: 68)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 209
	{69, "Скин: Normal Ped (ID: 69)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 210
	{70, "Скин: Scientist (ID: 70)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 211
	{71, "Скин: Security Guard (ID: 71)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 212
	{72, "Скин: Hippy (ID: 72)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 213
	{73, "Скин: Hippy (ID: 73)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 214
	{75, "Скин: Prostitute (ID: 75)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 215
	{76, "Скин: Stewardess (ID: 76)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 216
	{77, "Скин: Homeless (ID: 77)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 217
	{78, "Скин: Homeless (ID: 78)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 218
	{79, "Скин: Homeless (ID: 79)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 219
	{80, "Скин: Boxer (ID: 80)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 220
	{81, "Скин: Boxer (ID: 81)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 221
	{82, "Скин: Black Elvis (ID: 82)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 222
	{83, "Скин: White Elvis (ID: 83)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 223
	{84, "Скин: Blue Elvis (ID: 84)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 224
	{85, "Скин: Prostitute (ID: 85)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 225
	{86, "Скин: Ryder With Robbery Mask (ID: 86)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 226
	{87, "Скин: Stripper (ID: 87)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 227
	{88, "Скин: Normal Ped (ID: 88)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 228
	{89, "Скин: Normal Ped (ID: 89)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 229
	{90, "Скин: Jogger (ID: 90)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 230
	{91, "Скин: Rich Woman (ID: 91)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 231
	{92, "Скин: Rollerskater (ID: 92)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 232
	{93, "Скин: Normal Ped (ID: 93)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 233
	{94, "Скин: Normal Ped (ID: 94)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 234
	{95, "Скин: Normal Ped (ID: 95)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 235
	{96, "Скин: Jogger (ID: 96)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 236
	{97, "Скин: Lifeguard (ID: 97)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 237
	{98, "Скин: Normal Ped (ID: 98)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 238
	{99, "Скин: Rollerskater (ID: 99)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 239
	{100, "Скин: Biker (ID: 100)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 240
	{101, "Скин: Normal Ped (ID: 101)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 241
	{102, "Скин: Balla (ID: 102)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 242
	{103, "Скин: Balla (ID: 103)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 243
	{104, "Скин: Balla (ID: 104)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 244
	{105, "Скин: Grove Street Families (ID: 105)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 245
	{106, "Скин: Grove Street Families (ID: 106)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 246
	{107, "Скин: Grove Street Families (ID: 107)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 247
	{108, "Скин: Los Santos Vagos (ID: 108)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 248
	{109, "Скин: Los Santos Vagos (ID: 109)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 249
	{110, "Скин: Los Santos Vagos (ID: 110)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 250
	{111, "Скин: The Russian Mafia (ID: 111)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 251
	{112, "Скин: The Russian Mafia (ID: 112)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 252
	{113, "Скин: The Russian Mafia (ID: 113)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 253
	{114, "Скин: Varios Los Aztecas (ID: 114)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 254
	{115, "Скин: Varios Los Aztecas (ID: 115)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 255
	{116, "Скин: Varios Los Aztecas (ID: 116)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 256
	{117, "Скин: Triad (ID: 117)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 257
	{118, "Скин: Triad (ID: 118)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 258
	{119, "Скин: Johhny Sindacco (ID: 119)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 259
	{120, "Скин: Triad Boss (ID: 120)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 260
	{121, "Скин: Da Nang Boy (ID: 121)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 261
	{122, "Скин: Da Nang Boy (ID: 122)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 262
	{123, "Скин: Da Nang Boy (ID: 123)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 263
	{124, "Скин: The Mafia (ID: 124)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 264
	{125, "Скин: The Mafia (ID: 125)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 265
	{126, "Скин: The Mafia (ID: 126)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 266
	{127, "Скин: The Mafia (ID: 127)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 267
	{128, "Скин: Farm Inhabitant (ID: 128)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 268
	{129, "Скин: Farm Inhabitant (ID: 129)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 269
	{130, "Скин: Farm Inhabitant (ID: 130)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 270
	{131, "Скин: Farm Inhabitant (ID: 131)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 271
	{132, "Скин: Farm Inhabitant (ID: 132)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 272
	{133, "Скин: Farm Inhabitant (ID: 133)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 273
	{134, "Скин: Homeless (ID: 134)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 274
	{135, "Скин: Homeless (ID: 135)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 275
	{136, "Скин: Normal Ped (ID: 136)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 276
	{137, "Скин: Homeless (ID: 137)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 277
	{138, "Скин: Beach Visitor (ID: 138)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 278
	{139, "Скин: Beach Visitor (ID: 139)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 279
	{140, "Скин: Beach Visitor (ID: 140)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 280
	{141, "Скин: Businesswoman (ID: 141)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 281
	{142, "Скин: Taxi Driver (ID: 142)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 282
	{143, "Скин: Crack Maker (ID: 143)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 283
	{144, "Скин: Crack Maker (ID: 144)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 284
	{145, "Скин: Crack Maker (ID: 145)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 285
	{146, "Скин: Crack Maker (ID: 146)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 286
	{147, "Скин: Businessman (ID: 147)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 287
	{148, "Скин: Businesswoman (ID: 148)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 288
	{149, "Скин: Big Smoke Armored (ID: 149)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 289
	{150, "Скин: Businesswoman (ID: 150)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 290
	{151, "Скин: Normal Ped (ID: 151)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 291
	{152, "Скин: Prostitute (ID: 152)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 292
	{153, "Скин: Construction Worker (ID: 153)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 293
	{154, "Скин: Beach Visitor (ID: 154)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 294
	{155, "Скин: Well Stacked Pizza Worker (ID: 155)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 295
	{156, "Скин: Barber (ID: 156)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 296
	{157, "Скин: Hillbilly (ID: 157)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 297
	{158, "Скин: Farmer (ID: 158)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 298
	{159, "Скин: Hillbilly (ID: 159)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 299
	{160, "Скин: Hillbilly (ID: 160)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 300
	{161, "Скин: Farmer (ID: 161)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 301
	{162, "Скин: Hillbilly (ID: 162)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 302
	{163, "Скин: Black Bouncer (ID: 163)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 303
	{164, "Скин: White Bouncer (ID: 164)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 304
	{165, "Скин: White MIB Agent (ID: 165)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 305
	{166, "Скин: Black MIB Agent (ID: 166)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 306
	{167, "Скин: Cluckin'Bell Worker (ID: 167)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 307
	{168, "Скин: Hotdog/Chilli Dog Vendor (ID: 168)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 308
	{169, "Скин: Normal Ped (ID: 169)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 309
	{170, "Скин: Normal Ped (ID: 170)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 310
	{171, "Скин: Blackjack Dealer (ID: 171)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 311
	{172, "Скин: Casino Croupier (ID: 172)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 312
	{173, "Скин: San-Fierro Rifa (ID: 173)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 313
	{174, "Скин: San-Fierro Rifa (ID: 174)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 314
	{175, "Скин: San-Fierro Rifa (ID: 175)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 315
	{176, "Скин: Barber (ID: 176)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 316
	{177, "Скин: Barber (ID: 177)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 317
	{178, "Скин: Whore (ID: 178)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 318
	{179, "Скин: Ammunation Salesman (ID: 179)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 319
	{180, "Скин: Tattoo Artist (ID: 180)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 320
	{181, "Скин: Punk (ID: 181)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 321
	{182, "Скин: Cab Driver (ID: 182)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 322
	{183, "Скин: Normal Ped (ID: 183)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 323
	{184, "Скин: Normal Ped (ID: 184)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 324
	{185, "Скин: Normal Ped (ID: 185)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 325
	{186, "Скин: Normal Ped (ID: 186)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 326
	{187, "Скин: Businessman (ID: 187)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 327
	{188, "Скин: Normal Ped (ID: 188)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 328
	{189, "Скин: Valet (ID: 189)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 329
	{190, "Скин: Barbara Schternvart (ID: 190)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 330
	{191, "Скин: Helena Wankstein (ID: 191)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 331
	{192, "Скин: Michelle Cannes (ID: 192)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 332
	{193, "Скин: Katie Zhan (ID: 193)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 333
	{194, "Скин: Millie Perkins (ID: 194)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 334
	{195, "Скин: Denise Robinson (ID: 195)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 335
	{196, "Скин: Farm-Town Inhabitant (ID: 196)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 336
	{197, "Скин: Hillbilly (ID: 197)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 337
	{198, "Скин: Farm-Town Inhabitant (ID: 198)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 338
	{199, "Скин: Farm-Town Inhabitant (ID: 199)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 339
	{200, "Скин: Hillbilly (ID: 200)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 340
	{201, "Скин: Farmer (ID: 201)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 341
	{202, "Скин: Farmer (ID: 202)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 342
	{203, "Скин: Karate Teacher (ID: 203)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 343
	{204, "Скин: Karate Teacher (ID: 204)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 344
	{205, "Скин: Burger Shot Cashier (ID: 205)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 345
	{206, "Скин: Cab Driver (ID: 206)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 346
	{207, "Скин: Prostitute (ID: 207)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 347
	{208, "Скин: Suzie (ID: 208)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 348
	{209, "Скин: Oriental Noodle Stand Vendor (ID: 209)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 349
	{210, "Скин: Oriental Boating School Instructor (ID: 210)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 350
	{211, "Скин: Clothes Shop Staff (ID: 211)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 351
	{212, "Скин: Homeless (ID: 212)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 352
	{213, "Скин: Weird Old Man (ID: 213)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 353
	{214, "Скин: Maria Latore (ID: 214)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 354
	{215, "Скин: Normal Ped (ID: 215)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 355
	{216, "Скин: Normal Ped (ID: 216)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 356
	{217, "Скин: Clothes Shop Staff (ID: 217)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 357
	{218, "Скин: Normal Ped (ID: 218)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 358
	{219, "Скин: Rich Woman (ID: 219)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 359
	{220, "Скин: Cab Driver (ID: 220)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 360
	{221, "Скин: Normal Ped (ID: 221)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 361
	{222, "Скин: Normal Ped (ID: 222)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 362
	{223, "Скин: Normal Ped (ID: 223)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 363
	{224, "Скин: Normal Ped (ID: 224)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 364
	{225, "Скин: Normal Ped (ID: 225)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 365
	{226, "Скин: Normal Ped (ID: 226)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 366
	{227, "Скин: Oriental Businessman (ID: 227)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 367
	{228, "Скин: Oriental Ped (ID: 228)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 368
	{229, "Скин: Oriental Ped (ID: 229)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 369
	{230, "Скин: Homeless (ID: 230)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 370
	{231, "Скин: Normal Ped (ID: 231)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 371
	{232, "Скин: Normal Ped (ID: 232)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 372
	{233, "Скин: Normal Ped (ID: 233)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 373
	{234, "Скин: Cab Driver (ID: 234)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 374
	{235, "Скин: Normal Ped (ID: 235)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 375
	{236, "Скин: Normal Ped (ID: 236)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 376
	{237, "Скин: Prostitute (ID: 237)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 377
	{238, "Скин: Prostitute (ID: 238)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 378
	{239, "Скин: Homeless (ID: 239)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 379
	{240, "Скин: The D.A (ID: 240)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 380
	{241, "Скин: Alfo-American (ID: 241)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 381
	{242, "Скин: Mexican (ID: 242)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 382
	{243, "Скин: Prostitute (ID: 243)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 383
	{244, "Скин: Stripper (ID: 244)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 384
	{245, "Скин: Prostitute (ID: 245)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 385
	{246, "Скин: Stripper (ID: 246)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 386
	{247, "Скин: Biker (ID: 247)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 387
	{248, "Скин: Biker (ID: 248)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 388
	{249, "Скин: Pimp (ID: 249)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 389
	{250, "Скин: Normal Ped (ID: 250)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 390
	{251, "Скин: Lifeguard (ID: 251)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 391
	{252, "Скин: Naked Valet (ID: 252)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 392
	{253, "Скин: Bus Driver (ID: 253)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 393
	{254, "Скин: Biker Drug Dealer (ID: 254)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 394
	{255, "Скин: Limo Driver (ID: 255)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 395
	{256, "Скин: Stripper (ID: 256)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 396
	{257, "Скин: Stripper (ID: 257)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 397
	{258, "Скин: Heckler (ID: 258)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 398
	{259, "Скин: Heckler (ID: 259)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 399
	{260, "Скин: Construction Worker (ID: 260)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 400
	{261, "Скин: Cab Driver (ID: 261)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 401
	{262, "Скин: Cab Driver (ID: 262)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 402
	{263, "Скин: Normal Ped (ID: 263)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 403
	{264, "Скин: Clown (ID: 264)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 404
	{265, "Скин: Officer Frank Tempenny (ID: 265)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 405
	{266, "Скин: Officer Eddie Pulaski (ID: 266)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 406
	{267, "Скин: Officer Jimmy Hernandez (ID: 267)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 407
	{268, "Скин: Dwaine/Dwayne (ID: 268)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 408
	{269, "Скин: Big Smoke (ID: 269)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 409
	{270, "Скин: Sweet (ID: 270)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 410
	{271, "Скин: Ryder (ID: 271)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 411
	{272, "Скин: Mafia Boss (ID: 272)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 412
	{273, "Скин: T-Bone Mendez (ID: 273)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 413
	{274, "Скин: Paramedic (ID: 274)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 414
	{275, "Скин: Paramedic (ID: 275)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 415
	{276, "Скин: Paramedic (ID: 276)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 416
	{277, "Скин: Firefighter (ID: 277)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 417
	{278, "Скин: Firefighter (ID: 278)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 418
	{279, "Скин: Firefighter (ID: 279)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 419
	{280, "Скин: Los-Santos Police Officer (ID: 280)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 420
	{281, "Скин: San-Fierro Police Officer (ID: 281)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 421
	{282, "Скин: Las-Venturas Police Officer (ID: 282)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 422
	{283, "Скин: County Sheriff(ID: 283)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 423
	{284, "Скин: LSPD Motorbike Cop (ID: 284)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 424
	{285, "Скин: S.W.A.T Special Forces (ID: 285)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 425
	{286, "Скин: Federal Agent (ID: 286)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 426
	{287, "Скин: San Andreas Army (ID: 287)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 427
	{288, "Скин: Desert Sheriff (ID: 288)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 428
	{289, "Скин: Zero (ID: 289)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 429
	{290, "Скин: Ken Rosenberg (ID: 290)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 430
	{291, "Скин: Kent Paul (ID: 291)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 431
	{292, "Скин: Cesar Vialpando (ID: 292)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 432
	{293, "Скин: OG Loc(ID: 293)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 433
	{294, "Скин: Woozie (ID: 294)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 434
	{295, "Скин: Michael Toreno (ID: 295)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 435
	{296, "Скин: Jizzy B (ID: 296)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 436
	{297, "Скин: Madd Dogg (ID: 297)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 437
	{298, "Скин: Catalina (ID: 298)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 438
	{299, "Скин: Claude Speed (ID: 299)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 439
	{300, "Скин: Los-Santos Police Officer (ID: 300)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 440
	{301, "Скин: San-Fierro Police Officer (ID: 301)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 441
	{302, "Скин: Las-Venturas Police Officer (ID: 302)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 442
	{303, "Скин: Los-Santos Police Officer (ID: 303)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 443
	{304, "Скин: Los-Santos Police Officer (ID: 304)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 444
	{305, "Скин: Las-Venturas Police Officer (ID: 305)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 445
	{306, "Скин: Los-Santos Police Officer (ID: 306)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 446
	{307, "Скин: San-Fierro Police Officer(ID: 307)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 447
	{308, "Скин: San-Fierro Paramedic (ID: 308)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 448
	{309, "Скин: Las-Venturas Police Officer (ID: 309)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 449
	{310, "Скин: Country Sheriff (ID: 310)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 450
	{311, "Скин: Desert Sheriff (ID: 311)", 0.000000, 0.000000, 0.000000, 1.000000, 0, 0}, // 451
	{1242, "Бронежилет", 360.000000, 360.000000, 8.000000, 0.980186, 0, 0}, // 452
	{19136, "Дреды", 182.000000, 190.000000, 259.000000, 1.001042, 1, 2}, // 453
	{1650, "Канистра", 360.000000, 360.000000, 11.000000, 1.100103, 0, 0}, // 454
	{19904, "Жилет", 0.000000, 0.000000, 180.000000, 0.904066, 1, 5}, // 455
	{368, "Очки ночного виденья (донат)", 0.000000, 0.000000, 0.000000, 1.000000, 1, 1}, // 456
	{19318, "Белая гитара", 189.000000, 138.000000, 0.000000, 0.959332, 1, 5}, // 457
	{19521, "Фуражка водителя", 189.000000, 138.000000, 0.000000, 0.959332, 1, 0}, // 458
	{19197, "Ангельское кольцо", -15.000000, 0.000000, 0.000000, 1.00000, 1, 0}, // 459
	{19528, "Шляпа волшебника", -15.000000, 0.000000, 0.000000, 1.00000, 1, 0}, // 460
	{339, "Катана", 142.0, 	29.0, 	123.0, 	1.465067, 1, 5}, // 461
	{2226, "Бумбокс", 0.0, 	0.0, 	204.0, 	1.001042, 1, 5}, // 462
	{19320, "Тыква на голову", 0.0, 0.0, 42.0, 0.653806, 1, 2}, // 463
	
	{18644, "Гвозди", 0.000000, 0.000000, 0.000000, 1.000000}, // 464
	{3117, "Металл", 0.000000, 0.000000, 0.000000, 1.000000}, // 465
	{19918, "Метал. ящик", 0.000000, 0.000000, 0.000000, 1.000000}, // 466
	{2040, "Ящик с патронами", 0.000000, 0.000000, 0.000000, 1.000000}, // 467
	{335, "Ножик", 0.000000, 0.000000, 0.000000, 1.000000}, // 468
	{2036, "Военная винтовка", 0.000000, 0.000000, 0.000000, 1.000000}, // 469
	{19590, "Японский меч", 0.000000, 0.000000, 0.000000, 1.000000}, // 470
	{1636, "Боеголовка", 0.000000, 0.000000, 0.000000, 1.000000}, // 471
    {1210, "Кейс", 0.000000, 0.000000, 0.000000, 1.000000}, // 472
    {1944, "Старинная монета", 0.000000, 0.000000, 0.000000, 1.000000}, // 473
    
    {400, "Автомобиль: Landstalker (ID: 400)", 0.000000, 0.000000, 0.000000, 1.000000}, // 474
    {401, "Автомобиль: Chevrolet Impala (ID: 401)", 0.000000, 0.000000, 0.000000, 1.000000}, // 475
    {402, "Автомобиль: Audio R8 (ID: 402)", 0.000000, 0.000000, 0.000000, 1.000000}, // 476
    {404, "Автомобиль: Volvo V90 (ID: 404)", 0.000000, 0.000000, 0.000000, 1.000000}, // 477
    {405, "Автомобиль: Sentinel (ID: 405)", 0.000000, 0.000000, 0.000000, 1.000000}, // 478
    {421, "Автомобиль: Washington (ID: 421)", 0.000000, 0.000000, 0.000000, 1.000000}, // 479
    {429, "Автомобиль: Ferrari 360 (ID: 429)", 0.000000, 0.000000, 0.000000, 1.000000}, // 480
    {439, "Автомобиль: Ford Mustang Mach (ID: 439)", 0.000000, 0.000000, 0.000000, 1.000000}, // 481
    {474, "Автомобиль: Hermes (ID: 474)", 0.000000, 0.000000, 0.000000, 1.000000}, // 482
    {496, "Автомобиль: Pontiac GTO (ID: 496)", 0.000000, 0.000000, 0.000000, 1.000000}, // 483
    {500, "Автомобиль: Jeep Wrangler (ID: 500)", 0.000000, 0.000000, 0.000000, 1.000000}, // 484
    {477, "Автомобиль: Nissan 240SX (ID: 477)", 0.000000, 0.000000, 0.000000, 1.000000}, // 485
    {529, "Автомобиль: Willard (ID: 529)", 0.000000, 0.000000, 0.000000, 1.000000}, // 486
    {535, "Автомобиль: Slamvan (ID: 535)", 0.000000, 0.000000, 0.000000, 1.000000}, // 487
    {555, "Автомобиль: BMW Z4 (ID: 555)", 0.000000, 0.000000, 0.000000, 1.000000}, // 488
    {560, "Автомобиль: Mitsubishi Lancer (ID: 560)", 0.000000, 0.000000, 0.000000, 1.000000}, // 489
    {562, "Автомобиль: BMW 320i (ID: 562)", 0.000000, 0.000000, 0.000000, 1.000000}, // 490
    {565, "Автомобиль: Flash (ID: 565)", 0.000000, 0.000000, 0.000000, 1.000000} // 491
	
    
};

new ClickInv[MAX_PLAYERS];
new InvPage[MAX_PLAYERS];
new PlayerText:Speed_PTD[MAX_PLAYERS][7];
new Text:Speed_TD[40];

new biglet1ters[32][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y","Z","2", "3", "4", "5", "6", "7"};

new salon_namecars[][] =
{
	"Landstalker", "Chevrolet Impala", "Audio R8", "Linerunner", "Perrenial", "Sentinel", "Dumper", "Firetruck", "Trashmaster",
	"Stretch", "Mitsubishi 3000GT", "Bugatti Veyron", "Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam",
	"Mercedes-Benz 190", "Taxi", "Washington", "Bobcat", "Whoopee", "BF Injection", "Hunter", "Premier", "Enforcer",
	"Securicar", "Ferrari 360", "Predator", "Bus", "Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach",
	"Cabbie", "Ford Mustang Mach", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral", "Squalo", "Seasparrow",
	"Pizzaboy", "Tram", "Trailer", "Pagani Zonda", "Speeder", "Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair",
	"Berkley's RC Van", "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale", "Oceanic",
	"Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy", "Hermes", "Plymouth Barracuda", "Rustler", "Nissan 240SX", "Walton",
	"Chevrolet Caprice", "Ferrari 458", "BMX", "Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper", "Rancher",
	"FBI Rancher", "Virgo", "Dodge Charger", "Jetmax", "Hotring", "Land Rover LRX", "Lada 2113", "Police Maverick",
	"Boxvillde", "Benson", "Jeep Wrangler", "RC Goblin", "Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher",
	"Koenigsegg CCX", "Buick Lesabre", "Journey", "Bike", "Mountain", "Beagle", "Cropduster", "Stunt", "Tanker", "Roadtrain",
	"Nebula", "Buick Grand", "Chevrolet Corvette", "Shamal", "Hydra", "FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck",
	"Mercedes Benz C63", "Pontiac Solstice", "FBI Truck", "Willard", "Forklift", "Tractor", "Combine", "BMW M3 Cabriolet", "Lincoln Continental", "Slamvan",
	"Blade", "Freight", "Streak", "Vortex", "Vincent", "Ford GT40", "Chevrolet SS 454", "Ford F150", "Firetruck", "Hustler", "Intruder",
	"Primo", "Cargobob", "Pontiac GTO", "Sunrise", "Subaru Impreza", "Utility", "Nevada", "GMC Sierra", "BMW Z4", "Monster", "Monster",
	"Bmw M3 E46", "Toyota Supra", "Mitsubishi Lancer", "Stratum", "BMW 320i", "Raindance", "RC Tiger", "Flash", "Chrysler", "Savanna", "Bandito",
	"Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper", "Broadway", "Ford Mustang Boss 429", "AT-400", "DFT-30",
	"Mercedes-Benz G-Class 500", "Stafford", "BF-400", "News Van", "Tug", "Trailer", "Lincoln Town Car", "Wayfarer", "Euros", "Hotdog", "Volkswagen Golf",
	"Freight Box", "Trailer", "Andromada", "Dodo", "RC Cam", "Launch", "Police Car", "Police Car", "Police Car",
	"Police Ranger", "Picador", "S.W.A.T", "Chevrolet Corvette GS", "Phoenix", "Glendale", "Ford F150", "Luggage", "Luggage", "Stairs",
	"Boxville", "Tiller", "Utility Trailer"
};

new vehicle_name[][] =
{
	"Landstalker", "Chevrolet Impala", "Audio R8", "Linerunner", "Perrenial", "Sentinel", "Dumper", "Firetruck", "Trashmaster",
	"Stretch", "Mitsubishi 3000GT", "Bugatti Veyron", "Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam",
	"Mercedes-Benz 190", "Taxi", "Washington", "Bobcat", "Whoopee", "BF Injection", "Hunter", "Premier", "Enforcer",
	"Securicar", "Ferrari 360", "Predator", "Bus", "Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach",
	"Cabbie", "Ford Mustang Mach", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral", "Squalo", "Seasparrow",
	"Pizzaboy", "Tram", "Trailer", "Pagani Zonda", "Speeder", "Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair",
	"Berkley's RC Van", "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale", "Oceanic",
	"Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy", "Hermes", "Plymouth Barracuda", "Rustler", "Nissan 240SX", "Walton",
	"Chevrolet Caprice", "Ferrari 458", "BMX", "Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper", "Rancher",
	"FBI Rancher", "Virgo", "Dodge Charger", "Jetmax", "Hotring", "Land Rover LRX", "Lada 2113", "Police Maverick",
	"Boxvillde", "Benson", "Jeep Wrangler", "RC Goblin", "Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher",
	"Koenigsegg CCX", "Buick Lesabre", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster", "Stunt", "Tanker", "Roadtrain",
	"Nebula", "Buick Grand", "Chevrolet Corvette", "Shamal", "Hydra", "FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck",
	"Mercedes Benz C63", "Pontiac Solstice", "FBI Truck", "Willard", "Forklift", "Tractor", "Combine", "BMW M3 Cabriolet", "Lincoln Continental", "Slamvan",
	"Blade", "Freight", "Streak", "Vortex", "Vincent", "Ford GT40", "Chevrolet SS 454", "Ford F150", "Firetruck", "Hustler", "Intruder",
	"Primo", "Cargobob", "Pontiac GTO", "Sunrise", "Subaru Impreza", "Utility", "Nevada", "GMC Sierra", "BMW Z4", "Monster", "Monster",
	"Bmw M3 E46", "Toyota Supra", "Mitsubishi Lancer", "Stratum", "BMW 320i", "Raindance", "RC Tiger", "Flash", "Chrysler", "Savanna", "Bandito",
	"Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper", "Broadway", "Ford Mustang Boss 429", "AT-400", "DFT-30",
	"Mercedes-Benz G-Класс 500", "Stafford", "BF-400", "News Van", "Tug", "Trailer", "Lincoln Town Car", "Wayfarer", "Euros", "Hotdog", "Volkswagen Golf",
	"Freight Box", "Trailer", "Andromada", "Dodo", "RC Cam", "Launch", "Police Car", "Police Car", "Police Car",
	"Police Ranger", "Picador", "S.W.A.T", "Chevrolet Corvette GS", "Phoenix", "Glendale", "Ford F150", "Luggage", "Luggage", "Stairs",
	"Boxville", "Tiller", "Utility Trailer"
};
new sell_yaxt[6];
new Float:gClearCPs[3][32][4] = {
	{//маршрут №1
		{0.0,680.883,-1584.58997,13.004},
		{0.0,648.45502,-1584.71204,14.475},
		{0.0,639.95697,-1538.63904,14.111},
		{0.0,640.1002,-1325.8003,13.1089},
		{0.0,691.94598,-1321.92603,12.511},
		{0.0,784.52002,-1322.78699,12.511},
		{0.0,799.495,-1306.21704,12.511},
		{0.0,799.57501,-1159.89404,22.783},
		{0.0,824.14398,-1148.81702,22.767},
		{0.0,1056.48096,-1165.12,22.767},
		{0.0,1056.198,-1316.69604,12.383},
		{0.0,1056.40002,-1383.29895,12.496},
		{0.0,1056.85706,-1462.30603,12.37},
		{0.0,1035.54102,-1556.29395,12.357},
		{0.0,990.47699,-1569.61096,12.383},
		{0.0,887.82599,-1570.42297,12.391},
		{0.0,842.54901,-1605.62903,12.383},
		{0.0,786.54199,-1584.91602,12.39},
		{1.0,701.552,-1584.77502,12.977},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,697.61798,-1589.34399,12.981}, // LS1
		{0.0,825.55103,-1606.80896,12.181}, // LS2
		{0.0,901.31403,-1574.59802,12.381}, // LS3
		{0.0,1024.87097,-1575.08997,12.381}, // LS4
		{0.0,1161.46204,-1574.72998,12.381}, // LS5
		{0.0,1283.08301,-1574.755,12.381}, // LS6
		{0.0,1295.02405,-1675.849,12.381}, // LS7
		{0.0,1294.83899,-1837.79297,12.381}, // LS8
		{0.0,1377.61401,-1874.68506,12.381}, // LS9
		{0.0,1552.323,-1874.84998,12.381}, // LS10
		{0.0,1572.09998,-1848.89697,12.381}, // LS11
		{0.0,1571.82495,-1745.70801,12.381}, // LS12
		{0.0,1545.74902,-1729.93506,12.381}, // LS13
		{0.0,1531.87097,-1674.15906,12.381}, // LS14
		{0.0,1532.41296,-1604.65198,12.381}, // LS15
		{0.0,1445.59204,-1590.11804,12.381}, // LS16
		{0.0,1327.83899,-1570.69495,12.381}, // LS17
		{0.0,1335.39905,-1508.18005,12.381}, // LS18
		{0.0,1360.23596,-1417.48206,12.381}, // LS19
		{0.0,1331.36694,-1393.64795,12.381}, // LS20
		{0.0,1174.75305,-1392.82898,12.381}, // LS21
		{0.0,1014.05603,-1392.84094,12.381}, // LS22
		{0.0,877.04303,-1393.00403,12.381}, // LS23
		{0.0,746.34998,-1393.28601,12.381}, // LS24
		{0.0,650.63702,-1392.53601,12.381}, // LS25
		{0.0,625.27002,-1424.90698,12.381}, // LS26
		{0.0,624.95697,-1549.34595,12.381}, // LS27
		{1.0,685.51703,-1589.33997,12.381}, // LS28
		{0.0,0.0,0.0,0.0}, // LS29
		{0.0,0.0,0.0,0.0}, // LS30
		{0.0,0.0,0.0,0.0}, // LS 31
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,1392.0623,-1791.7125,13.0908}, // Ghetto1
		{0.0,1391.7612,-1735.2448,13.0968}, // Ghetto2
		{0.0,1690.5293,-1734.7238,13.1005}, // Ghetto3
		{0.0,1818.6444,-1734.6156,13.0908}, // Ghetto4
		{0.0,1818.8099,-1754.3562,13.0908},// Ghetto5
		{0.0,2091.4414,-1753.9078,13.1127}, // Ghetto6
		{0.0,2187.5518,-1735.1260,13.0829}, // Ghetto7
		{0.0,2212.4153,-1736.0732,13.0742}, // Ghetto8
		{0.0,2215.7388,-1896.6831,13.0984}, // Ghetto9
		{0.0,2309.8857,-1896.4823,13.1752}, // Ghetto10
		{0.0,2311.5947,-1973.8826,13.0918}, // Ghetto11
		{0.0,2415.4360,-1974.5627,13.1200}, // Ghetto12
		{0.0,2415.9646,-1935.3470,13.0908}, // Ghetto13
		{0.0,2517.4490,-1935.0500,13.0796}, // Ghetto14
		{0.0,2529.7197,-1735.9653,13.0907}, // Ghetto15
		{0.0,2644.0718,-1734.2902,10.4423}, // Ghetto16
		{0.0,2644.8076,-1660.5665,10.4184}, // Ghetto17
		{0.0,2739.6265,-1659.7494,12.7783}, // Ghetto18
		{0.0,2740.0049,-1510.1157,29.9892}, // Ghetto19
		{0.0,2645.6689,-1402.3347,29.9945}, // Ghetto20
		{0.0,2644.8938,-1044.6847,69.1220}, // Ghetto21
		{0.0,2562.2761,-1044.7236,69.1220}, // Ghetto22
		{0.0,2321.1631,-1150.2688,26.5124}, // Ghetto23
		{0.0,2174.7383,-1117.0276,24.8626}, // Ghetto24
		{0.0,2164.1028,-1381.2463,23.5361}, // Ghetto25
		{0.0,2111.0916,-1381.4752,23.5360}, // Ghetto26
		{0.0,2090.8074,-1749.2878,13.1132}, // Ghetto27
		{0.0,1824.8679,-1749.9146,13.0908}, // Ghetto28
		{0.0,1824.1864,-1730.2544,13.0908}, // Ghetto29
		{0.0,1387.0582,-1730.0496,13.0908}, // Ghetto30
		{1.0,1398.9404,-1804.5812,13.2549}, // Ghetto 31
		{0.0,0.0,0.0,0.0}
	}
};
new condition_of_roads[][]  = {
	{"На дорогах чисто"},
	{"На дорогах пыль"},
	{"На дорогах грязь"}
};
new condition_of_roads_;//тут рандомное число от 0 до 2, в зп и ongamemodeinit, будет отвечать за состояние дорог

enum ROB_PL {
	AttachObj,
	RobRand,
Text3D:RobText
};
new RobPlayer[MAX_PLAYERS][ROB_PL];

new rob_veh[MAX_PLAYERS];

enum GRF {
	gId,
	gObject,
	gFrak,
Float: gr_x[7],
}
new GrafInfo[121][GRF],CountGraffity;
new CountGarage;
new graf_timer[MAX_PLAYERS];

//new dice_random[11] = {2,4,6,8,10,12,3,5,7,9,11};

new order_drugs;
new drugs_pickup;
new Text3D:drugs_text;

new GUARD_TICK_C_BUG[MAX_PLAYERS];


new salary_pd[15] = {1400,2600,3800,4600,5500,6500,7600,8600,10000,12800,15000};
new salary_fbi[15] = {3600,4400,5500,6400,7200,7900,9600,11200,12600,14500,17300};
new salary_medics[15] = {2400,3300,4000,7000,8900,10600,12800};
new salary_news[15] = {1800,2600,3900,4900,5700,6400,7500,8400,10000,11800};
new salary_wh[15] = {2400,3000,4500,5300,6600,7200,8400,9800,12000,14000,17000,19500,0,0,0};
new salary_army[15] = {1900,2700,3900,4600,5300,6400,7300,8600,11600,13800,0,0,0,0,0};
new salary_rcsd[15] = {1300,2300,3600,5400,7200,9400,11000};
new salary_autosh[15] = {3600,5600,7500,8900,9700,11800};
new salary_gang[15] = {2000,3000,4000,4000,4000,4000,4200,4500,5000,5000};
new salary_mafia[15] = {2000,3000,4000,4800,5400,6000,7000,8000,10000,13000};

new UseSound[MAX_PLAYERS];
new Sounds;
new Float:rads;
new Float:streampos[3];
new stream[256];
new Float:setX[MAX_PLAYERS];
new Float:setY[MAX_PLAYERS];
new Float:setZ[MAX_PLAYERS];

new anti_dm[MAX_PLAYERS char] ;

new object[MAX_OGRAD] ={-1,...};
new objectrot[MAX_OGRAD] ={-1,...};

new PlayerText:p_mh[MAX_PLAYERS] = {PlayerText:-1,...};
/*============================================================================*/
enum e_HOUSE_INTERIOR {
	h_id,
	h_type,
Float:h_pos_exit[4],
Float:h_pos_spawn[4],	
	h_int_name[24],			// Наименование интерьера
	h_evict,				// Количество возможно-подселяемых людей
	h_interior				// интерьер
}
new
const hinterior_info[][ e_HOUSE_INTERIOR ] = {
	/*0*/	{ 0, 1, { 2233.57,-1114.97,1050.88,358.299 },{ 2230.48,-1107.75,1050.88,272.758 }, "Интерьер дома №1", 0, 5 }, 		// 1
	/*1*/	{ 0, 2, { 2196.6, -1204.51, 1049.02, 91.6726 }, { 2189.2, -1219.15, 1049.02, 352.827 }, "Интерьер дома №1", 0, 6}, 		// 1
	/*2*/	{ 0, 3, { 2317.82, -1026.76, 1050.22, 354.248 }, { 2325.1, -1007.82, 1054.72, 178.322 }, "Интерьер дома №1", 0, 9 }, 		// 1
	/*3*/	{ 0, 0, { 2259.39, -1135.64, 1050.64, 270.298 }, { 2264.04, -1141.45, 1050.63, 359.912 }, "Интерьер дома №1", 0, 10 }, 		// 1
	/*4*/	{ 1, 1, { 2365.17, -1135.58, 1050.88, 357.068 }, { 2358.98, -1131.58, 1050.88, 266.393 }, "Интерьер дома №2", 0, 8 }, 		// 1
	/*5*/	{ 2, 1, { 2282.99, -1140.27, 1050.9, 356.778 }, { 2285.17, -1133.77, 1050.9, 94.9977 }, "Интерьер дома №3", 0, 11 }, 		// 1
	/*6*/	{ 3, 1, { 2218.4, -1076.32, 1050.48, 72.2927 }, { 2205.11, -1071.47, 1050.48, 174.249 }, "Интерьер дома №4", 0, 1 }, 		// 1
	/*7*/	{ 1, 3, { 83.014, 1322.29, 1083.87, 1.69824 }, { 79.2619, 1337.67, 1088.37, 349.96 }, "Интерьер дома №2", 0, 9 }, 		// 1
	/*8*/	{ 2, 3, { 234.381, 1063.73, 1084.21, 2.01149 }, { 237.359, 1082.94, 1087.82, 170.105 }, "Интерьер дома №3", 0, 6 }, 		// 1
	/*9*/	{ 1, 0, { 223.1088,1287.0763,1082.1406}, { 231.0919,1289.9912,1082.1406,91.4708 }, "Интерьер дома №2", 0, 1 }, 		// 1
	/*10*/	{ 2, 0, { 266.515, 304.944, 999.148, 265.168 }, { 271.431, 308.121, 999.148, 174.637 }, "Интерьер дома №3", 0, 2 }, 		// 1
	/*11*/	{ 4, 1, { 2468.45, -1698.35, 1013.51, 92.5746 }, { 2451.3003,-1699.1317,1013.5078,249.2947 }, "Интерьер дома №5", 0, 2 }, 		// 1
	/*12*/	{ 1, 2, { 2496.03, -1692.42, 1014.74, 181.249 }, { 2492.64, -1703.11, 1018.34, 169.464 }, "Интерьер дома №2", 0, 3 }, 		// 1
	/*13*/	{ 2, 2, { 2269.84, -1210.43, 1047.56, 92.2165 }, { 2251.72, -1209.5, 1049.02, 265.468 }, "Интерьер дома №3", 0, 10 }, 		// 1
	/*14*/	{ 3, 3, { 2324.4089,-1149.5397,1050.7101 }, { 2311.0229,-1138.6250,1054.3047,266.6491 }, "Интерьер дома №4", 0, 12 }, 		// 1
	/*15*/	{ 4, 3, { 2270.4177,-1210.5272,1047.5625 }, { 2261.0273,-1222.5825,1049.0234}, "Интерьер дома №5", 0, 10 }, 		// 1
	/*16*/	{ 5, 1, { 225.971, 1239.97, 1082.14, 91.0382 }, { 223.639, 1251.37, 1082.15, 91.1831 }, "Интерьер дома №6", 0, 2 }, 		// 1
	/*17*/	{ 6, 1, { 223.217, 1287.64, 1082.14, 3.3038 }, { 231.444, 1290.18, 1082.14, 91.2065 }, "Интерьер дома №7", 0, 1 }, 		// 1
	/*18*/	{ 3, 2, { 24.0069,1340.6532,1084.3750,356.8460 }, { 27.7965, 1348.01, 1088.88, 267.82 }, "Интерьер дома №4", 0, 10 }, 		// 1
	/*19*/	{ 7, 1, { 295.133, 1472.56, 1080.26, 1.4707 }, { 294.194, 1487.38, 1080.26, 187.737 }, "Интерьер дома №8", 0, 15 }, 		// 1
	/*20*/	{ 4, 2, { 2324.35, -1148.76, 1050.71, 354.638 }, { 2337.82, -1138.28, 1054.3, 178.566 }, "Интерьер дома №5", 0, 12 }, 		// 1
	/*21*/	{ 5, 2, { -261.195, 1456.73, 1084.37, 95.1205 }, { -274.975, 1450.16, 1088.87, 1.31134 }, "Интерьер дома №6", 0, 4 }, 		// 1
	/*22*/	{ 8, 1, { 328.007, 1478.36, 1084.44, 0.1398 }, { 330.764, 1489.56, 1084.44, 162.28 }, "Интерьер дома №9", 0, 15 }, 		// 1
	/*23*/	{ 9, 1, { 22.9166, 1403.98, 1084.43, 357.72 }, { 24.4107,1417.1140,1084.4297,179.6224 }, "Интерьер дома №10", 0, 5 }, 		// 1
	/*24*/	{ 10, 1, { 386.502, 1471.72, 1080.19, 92.5512 }, { 373.049, 1462.83, 1080.19, 331.772 }, "Интерьер дома №11", 0, 15 }, 		// 1
	/*25*/	{ 11, 1, { 376.324, 1417.27, 1081.33, 86.6211 }, { 359.628, 1416.02, 1081.34, 189.54 }, "Интерьер дома №12", 0, 15 }, 		// 1
	/*26*/	{ 6, 2, { 447.25, 1397.76, 1084.3, 1.3703 }, { 455.384, 1415.07, 1084.31, 161.653 }, "Интерьер дома №7", 0, 2 }, 		// 1
	/*27*/	{ 5, 3, { 140.342, 1366.7, 1083.86, 356.404 }, { 137.146, 1385.06, 1088.37, 265.101 }, "Интерьер дома №6", 0, 5 }, 		// 1
	/*28*/	{ 6, 3, { 491.169, 1398.91, 1080.26, 2.0439 }, { 491.162, 1420.6, 1084.37, 177.681 }, "Интерьер дома №7", 0, 2 }, 		// 1
	/*29*/	{ 7, 3, { 2365.2598,-1135.5970,1050.8826  }, { 2363.2930,-1120.7969,1050.8750,263.8058  }, "Интерьер дома №8", 0, 8 }, 		// 1
	/*30*/	{ 12, 1, { 261.112, 1284.91, 1080.26, 355.899 }, { 256.311, 1290.84, 1080.27, 205.811 }, "Интерьер дома №13", 0, 4 }, 		// 1
	/*31*/	{ 13, 1, { -68.8663, 1351.94, 1080.21, 1.3932 }, { -70.2393, 1362.66, 1080.21, 268.188 }, "Интерьер дома №14", 0, 6 }, 		// 1
	/*32*/	{ 7, 2, { 2807.55, -1174.22, 1025.57, 359.851 }, { 2816.06, -1169.01, 1029.17, 90.5266 }, "Интерьер дома №8", 0, 8 }, 		// 1
	/*33*/	{ 14, 1, { 226.2956,1114.3629,1080.9929,90.5307  }, {229.1351,1109.2531,1080.9995,358.7232 }, "Интерьер дома №15", 0, 5 }, 		// 1
	/*34*/	{ 8, 2, { 2237.53, -1081.1, 1049.02, 357.634 }, { 2243.92, -1078.82, 1049.02, 357.367 }, "Интерьер дома №9", 0, 2 }, 		// 1
	/*35*/	{ 9, 2, { 2365.33, -1135.16, 1050.88, 2.7174 }, { 2360.45, -1132.71, 1050.88, 269.68 }, "Интерьер дома №10", 0, 8 }, 		// 1
	/*36*/	{ 15, 1, { -42.6872, 1405.89, 1084.43, 1.4874 }, { -50.5177, 1408.57, 1084.43, 268.282 }, "Интерьер дома №16", 0, 8 }, 		// 1
	/*37*/	{ 10, 2, { 82.9296, 1322.94, 1083.87, 3.1521 }, { 93.8073, 1340.1, 1088.37, 273.538 }, "Интерьер дома №11", 0, 9 }, 		// 1
	/*38*/	{ 16, 1, { 260.602, 1237.93, 1084.26, 5.5135 }, { 257.968, 1254.04, 1084.26, 86.6679 }, "Интерьер дома №17", 0, 9 }, 		// 1
	/*39*/	{ 3, 0, { 244.211, 305.121, 999.148, 273.123 }, { 247.029, 303.004, 999.148, 0.688418 }, "Интерьер дома №4", 0, 1 }, 		// 1
	/*40*/	{ 4, 0, { 422.148, 2536.35, 10.0, 92.0123 }, { 416.287, 2539.94, 10.0, 178.719 }, "Интерьер дома №5", 0, 10 }, 		// 1
	/*41*/	{ 17, 1, { 226.17, 1239.97, 1082.14, 90.3812 }, { 225.499, 1252.73, 1082.14, 91.153 }, "Интерьер дома №18", 0, 2 } 		// 1
};
#include "../sourse/other/colors.pwn"
#include "../sourse/other/economy.inc"
#include "../sourse/other/dialogs.inc"
#include "../sourse/other/fractions.inc"
/*============================================================================*/
#define PlayerToPoint(%0,%1,%2,%3,%4) IsPlayerInRangeOfPoint(%1,%0,%2,%3,%4)
#define PointToPoint(%0,%1,%2,%3,%4,%5) floatsqroot(floatpower(floatabs(floatsub(%3,%0)),2)+floatpower(floatabs(floatsub(%4,%1)),2)+floatpower(floatabs(floatsub(%5,%2)),2))
new const not_id[] = "Неверный ID игрока";
/*============================================================================*/

new VehTrailer[MAX_PLAYERS] = {INVALID_VEHICLE_ID,...};
new LastVeh[MAX_PLAYERS] = {INVALID_VEHICLE_ID,...};

new SlotCObject[499];

new SlotObject[99];

enum MAKEGUN_DATA {
	mgunname[24],
	mgunamount,
	mgunid
}
new stock MakeGunData[7][MAKEGUN_DATA] = {
	{"SD Pistol", 		35, 	23},
	{"Desert Eagle", 	90, 	24},
	{"MP5", 			100, 	29},
	{"Shotgun", 		140, 	25},
	{"M4", 				150, 	31},
	{"AK-47", 			190, 	30},
	{"Rifle", 			175, 	33}
};
/*============================================================================*/
#define 	Ammo_SDPISTOL           20
#define 	Ammo_DEAGLE             10
#define 	Ammo_SHOTGUN            10
#define 	Ammo_MP5				15
#define 	Ammo_AK47				15
#define 	Ammo_M4A1				25
/*============================================================================*/
/*new MaxSpeedCar[212] = { 160,160,200,120,150,165,110,170,110,180,160,240,160,160,140,230,155,200,150,160,180,180,
	165,145,170,200,200,170,170,200,190,130,80,180,200,120,160,160,160,160,160,75,150,150,110,
	165,280,200,190,150,120,240,190,190,190,140,160,160,165,160,200,190,190,190,75,75,160,160,
	190,200,170,160,190,190,160,160,200,200,150,165,200,120,150,120,190,160,100,200,200,170,170,
	160,160,190,220,170,200,200,140,140,160,75,220,220,160,170,230,165,140,120,140,200,200,200,120,
	120,165,165,160,330,330,190,190,190,110,160,160,160,170,160,60,70,140,200,160,160,160,110,110,150,
	160,230,160,165,170,160,160,160,200,160,160,165,160,200,170,180,110,110,200,200,200,200,200,200,75,
	200,160,160,170,110,110,90,60,110,60,160,160,200,110,160,165,190,160,170,120,165,190,200,140,200,110,
	120,200,200,60,190,200,200,200,160,165,110,200,200,160,165,160,160,160,140,160,160 } ; */
CB: Random(min, max) {
	new a = random(max - min) + min;
	return a;
}

new 
gCurDay,
tmphour, 
tmpminute, 
tmpsecond,
ghour;

#define unix gettime()

new time_grandtimer,
time_grandtimer_max,
time_newkeys,
time_newkeys_max,
time_update,
time_update_max,
time_second,
time_second_max,
timer_payday,
timer_paydaymax,
minute_update,
minute_update_max;

new progress_rob[MAX_PLAYERS];

new Welding[MAX_PLAYERS];

new Text3D:gPlayerProdText[MAX_PLAYERS] = {Text3D: -1, ...},
gPlayerProdCP[MAX_PLAYERS];
new Text3D:ShipText[MAX_PLAYERS],
ObjectShip[MAX_PLAYERS] = {0x7F800000,...};

new Text:AnimDraw;

enum a_sewer {
Float:seX,
Float:seY,
Float:seZ,
	seAmmout,
	seTime,
Text3D:seText
};
new Sewer[MAX_SEWER][a_sewer] =
{
	{2068.3672,-1928.8666,13.3535},
	{1661.2629,-1580.2360,13.3965},
	{1705.7365,-1808.7218,13.3705},
	{1423.9922,-1403.5460,13.3885},
	{1175.7339,-1709.0653,13.5985},
	{1465.9419,-1164.4591,23.7275},
	{1476.1543,-1868.9574,13.3885},
	{920.6434,-1755.2839,13.3835},
	{1230.0690,-928.1727,42.5485},
	{898.8250,-1318.2100,13.5075}
};

new spaned[MAX_PLAYERS];

enum e_container {
	cClass,
Float:cX,
Float:cY,
Float:cZ,
	cName[36],
	cMoney,
	cStavka,
	cOwned[24],
	cCash,
	cTime,
	cPlayer,
Text3D:cText
}
new gContainer[MAX_CONTAINER][e_container] =
{
	{1, 2394.8030,-2547.1843,13.6475, "REGULAR", 25000},
	{1, 2394.7625,-2550.9460,13.6641, "REGULAR", 25000},
	{2, 2394.7036,-2558.2773,13.6641, "GOLD", 65000},
	{2, 2394.6753,-2562.1902,13.6641, "GOLD", 65000},
	{3, 2394.6426,-2569.8398,13.6641, "EPIC", 135000},
	{3, 2394.6096,-2573.5613,13.6641, "EPIC", 135000},
	{4, 2394.5789,-2581.7759,13.6641, "LEGENDARY", 225000},
	{4, 2394.5488,-2585.7573,13.6641, "LEGENDARY", 225000},
	{5, 2394.5161,-2593.8435,13.6641, "GOLDMONEY", 70},
	{5, 2394.4944,-2597.9155,13.6641, "GOLDMONEY", 70}
};
new conteiner[MAX_CONTAINER];
//////////////////////////////////////////////////////////
#define MAX_MARKET 6
enum LastMarket
{
	m_id,
Float:m_x,
Float:m_y,
Float:m_z,
	m_owner[MAX_PLAYER_NAME],
	m_arenda,
Text3D:m_text
};
new Market[MAX_MARKET][LastMarket] =
{
	{1, 393.9331,-1898.0184,7.8359, "None"},
	{2, 393.9257,-1904.3029,7.8359, "None"},
	{3, 393.9470,-1910.8490,7.8359, "None"},
	{4, 393.9470,-1917.0162,7.8359, "None"},
	{5, 393.9470,-1923.3798,7.8359, "None"},
	{6, 393.9465,-1929.4773,7.8359, "None"}
};
new market_id[MAX_PLAYERS][5];
new market_item[MAX_PLAYERS][5];
new market_ammout[MAX_PLAYERS][5];
new market_cash[MAX_PLAYERS][5];

enum _eggfarm
{
	gID,
	Float:gX,
	Float:gY,
	Float:gZ,
	Float:grX,
	Float:grY,
	Float:grZ,
	gName[MAX_PLAYER_NAME],
	Object,
	Text3D:gText,
	gKorm,
	gCount,
	gTime
};
new Egg[MAX_EGG][_eggfarm] =
{
	{1, -73.324996, -6.277998, 2.944998, 0.000000, 0.000000, 247.246994,"None"},
	{2, -72.167999, -3.612998, 2.944998, 0.000000, 0.000000, 247.246994,"None"},
	{3, -84.708999, -10.010000, 2.944998, 0.000000, 0.000000, 157.996994,"None"},
	{4, -81.749000, -11.088000, 2.937000, 0.000000, 0.000000, 157.994003,"None"},
	{5, -78.512001, -12.244998, 2.944998, 0.000000, 0.000000, 157.994003,"None"},
	{6, -71.138999, -1.054000, 2.937000, 0.000000, 0.000000, 247.246994,"None"},
	{7, -74.391998, -8.756999, 2.944998, 0.000000, 0.000000, 247.246994,"None"},
	{8, -75.482002, -11.345998, 2.944998, 0.000000, 0.000000, 247.246994,"None"}
};
new PlayerEgg[MAX_PLAYERS];
new PlayerKorm[MAX_PLAYERS];
new EggSklad[MAX_PLAYERS];
new EggCount[MAX_PLAYERS];

new Text3D:PlayerMehText[MAX_PLAYERS] = {Text3D:-1, ...};

new Text3D:PlayerEatText[MAX_PLAYERS] = {Text3D:-1, ...};

new ABC[20][2] 	= { "E", "R", "T", "Y", "U", "O", "A", "S", "D", "F", "G", "H", "K", "Z", "X", "C", "V", "B", "N", "M" };

enum _spectator {
	sID
}
new SERIU[MAX_PLAYERS][_spectator];
new avir[MAX_PLAYERS];
new aint[MAX_PLAYERS];
new Lastspec[MAX_PLAYERS];

new Teleport_Players[2] = 0,
bool:Teleport,
Teleport_text[36] = {"None"},
Float:TeleportFloat[3],
TeleportInfo[2];

enum aInfo {
	aID,            // - Unknown -
	aPlayerID,      // - Unknown -
	aModel,			//Model
	aCost,			//Цена
Float:aPos_X,	//Кордината X
Float:aPos_Y,	//Кордината Y
Float:aPos_Z,	//Кордината Z
Float:aPos_A,	//Угол поворота
	aColor_1,		//Цвет 1
	aColor_2,		//Цвет 2
	aBizz			//Автосалон
};
new DonateX,PayDayX;
new drieltorka[MAX_PLAYERS];

new WeaponNames[48][40] = {
	"Unarmed (Fist)", // 0
	{"Brass Knuckles"}, // 1
	{"Golf Club"}, // 2
	{"Night Stick"}, // 3
	{"Knife"}, // 4
	{"Baseball Bat"}, // 5
	{"Shovel"}, // 6
	{"Pool Cue"}, // 7
	{"Katana"}, // 8
	{"Chainsaw"}, // 9
	{"Purple Dildo"}, // 10
	{"Big White Vibrator"}, // 11
	{"Medium White Vibrator"}, // 12
	{"Small White Vibrator"}, // 13
	{"Flowers"}, // 14
	{"Cane"}, // 15
	{"Grenade"}, // 16
	{"Teargas"}, // 17
	{"Molotov"}, // 18
	{" "}, // 19
	{" "}, // 20
	{" "}, // 21
	{"Pistols"}, // 22
	{"Silenced 9mm"}, // 23
	{"Desert Eagle"}, // 24
	{"Shotgun"}, // 25
	{"Sawnoff Shotgun"}, // 26
	{"Combat Shotgun"}, // 27
	{"Micro Uzi (Mac 10)"}, // 28
	{"MP5"}, // 29
	{"AK47"}, // 30
	{"M4"}, // 31
	{"Tec9"}, // 32
	{"Country Rifle"}, // 33
	{"Sniper Rifle"}, // 34
	{"Rocket Launcher"}, // 35
	{"Auto Rocket Launcher"}, // 36
	{"Flamethrower"}, // 37
	{"Minigun"}, // 38
	{"Satchel Charge"}, // 39
	{"Detonator"}, // 40
	{"Spray Can"}, // 41
	{"Fire Extinguisher"}, // 42
	{"Camera"}, // 43
	{"Night Vision Goggles"}, // 44
	{"Infrared Vision Goggles"}, // 45
	{"Parachute"}, // 46
	{"Fake Pistol"} // 47
};

#define MAX_DUELS 100
enum duel_data {
	duel_type,
	duel_raund,
	duel_map,
	duel_health,
	duel_armour,
	duel_password,
	duel_owner_id,
	duel_id[6],
	duel_gun,
	duel_gun_2,
	duel_money,
	duel_cash,
bool:duel_start,
bool:duel_create,
	duel_point_1,
	duel_point_2,
	duel_leave[6],
	duel_vw
}
new DI[MAX_DUELS][duel_data];
new duel_id_gun[5] = {24,25,29,30,31};

#define STANDART_GUN_TEXT ""W"%s\n"G"ALT"
#define MAX_DROP_GUNS 250
new GPDIO[47]={0,331,333,334,335,336,337,338,339,341,321,322,323,324,325,326,342,343,344,0,0,0,346,347,348,349,350,351,352,353,355,356,372,357,358,359,360,361,362,363,364,365,366,367,368,368,371};
enum drop_gun_data { 
	dg_gun, 
	dg_ammo, 
	dg_object, 
	Text3D:dg_text,
	dg_time 
}
new drop_gun[MAX_DROP_GUNS][drop_gun_data];
new BDserverName[128],BDserverPassword[64];
new Text:HungerFon[2];
new PlayerText:HungerProgres[MAX_PLAYERS];


new Text:skill_td[4];
new PlayerText:skill_player_td[MAX_PLAYERS][2] = {PlayerText:-1,...};

new Text:buy_skins[9];
new PlayerText:buy_player_skins[MAX_PLAYERS] = {PlayerText:-1,...};

enum rgInfo {
	rgPlayer[2],
	rgTime,
	rgStart,
	rgPrice,
	rgLoad[2]
}
new RingInfo[1][rgInfo];

enum admCMD {
	cmdName[32],
	cmdInfo[64],
	cmdLVL
};
#define MAX_ADM_CMDS 130
new AdminCommand[MAX_ADM_CMDS][admCMD] = {
	{"/alogin", "авторизоваться в админ панели", 1},
	{"/a", "чат администрации", 1},
	{"/namestore", "история ников", 1},
	{"/pm", "ответить в репорт", 1},
	{"/mute", "заблокировать чат", 1},
	{"/offmute", "заблокировать чат в оффлайн", 1},
	{"/offunmute", "разблокировать чат в оффлайн", 1},
	{"/unmute", "разблокировать чат", 1},
	{"/weap", "посмотреть оружие игрока", 1},
	{"/admins", "админы онлайн", 1},
	{"/prisoners", "посмотреть игроков в тюрьме", 1},
	{"/tp", "телепорт", 1},
	{"/re", "следить за игроком", 1},
	{"/getskills", "узнать навыки владения оружия игрока", 1},
	{"/spawn [/sp]", "телепортироватся на свой спавн", 1},
	{"/gg", "пожелать приятной игры", 1},
	{"/ainfo", "узнать свою статистику", 1},
	{"/afklist", "игроки в АФК", 1},
	{"/hp", "выдать себе 100 хп", 1},
	{"/vipchat", "прослушка VIP чата", 1},
	{"/gm", "включить GM", 1},
	{"/goto [/g]", "телепортироватся к игроку", 1},
	{"/astats", "посмотреть статистику игрока", 1},

	{"/kick", "кикнуть игрока", 2},
	{"/jail", "посадить в тюрьму", 2},
	{"/offjail", "посадить в тюрьму оффлайн", 2},
	{"/offunjail", "вытащить из тюрьмы оффлайн", 2},
	{"/unjail", "выпустить из тюрьмы", 2},
	{"/m", "мегафон", 2},
	{"/gethere", "телепортировать игрока к себе", 2},
	{"/aad", "отправить сообщение в общий чат (видно всем игрокам)", 2},
	{"/spcar", "заспавнить автомобиль (в котором сидишь)", 2},
	{"/fv", "починка авто", 2},
	{"/atipster", "прослушка рации организации", 2},
	{"/aimcheck", "проверить на AIM", 2},
	{"/cweap", "забрать оружие у игрока", 2},
	{"/gettime", "узнать время игрока", 2},
	{"/delfences", "удалить ограждение", 2},
	{"/uncuff", "снять наручники", 2},
	{"/uncuff", "снять мешок с головы", 2},
	{"/jt", "выдать себе джетпак", 2},
	{"/gspawn", "отправить игрока на спавн", 2},
	{"/hunger", "повысить сытость игрока", 2},
	{"/uval", "уволить игрока", 2},
	{"/int", "телепорт в интерьер", 2},
	{"/freeze", "заморозить игрока", 2},
	{"/unfreeze", "разморозить игрока", 2},
	{"/offstats", "статистика игрока в оффлайн", 2},
	{"/getid", "узнать ник по ID игрока", 2},
	{"/slap", "подкинуть игрока", 2},
	{"/plveh", "cоздать транспорт и посадить туда игрока", 2},
	{"/ears", "прослушка SMS", 2},

	{"/alock", "открыть/закрыть транспорт", 3},
	{"/veh", "cоздать транспорт", 3},
	{"/delveh", "удалить админ авто", 3},
	{"/warn", "выдать предупреждение", 3},
	{"/tskin", "выдать временный скин игроку", 3},
	{"/ban", "заблокировать аккаунт", 3},
	{"/hid", "телепорт к дому", 3},
	{"/bizz", "телепорт к бизнесу", 3},
	{"/setnick", "одобрить смену ника", 3},
	{"/markt", "поставить метку для телепорта где стоишь", 3},
	{"/gotomark", "телепортироваться к метке", 3},
	{"/sethp", "выдать ХП игроку", 3},
	{"/setarm", "выдать броню игроку", 3},
	{"/last", "узнать последний вход игрока", 3},
	{"/awarehouse", "состояние складов организаций", 3},
	{"/respv", "спавн авто в радиусе", 3},
	{"/gotocar", "телепортироваться к авто", 3},
	{"/getherecar", "телепортировать авто к себе", 3},
	{"/offgettime", "просмотр статистики в оффлайне", 3},
	{"/offwarn", "выдать предупреждение в оффлайн", 3},
	{"/unwarn", "снять предупреждение игроку", 3},
	{"/offunwarn", "снять предупреждение игроку в оффлайн", 3},
	{"/gomp", "провести мероприятие", 3},
	{"/skick", "тихий кик", 3},
	{"/givegun", "выдать оружие", 3},


	{"/getip", "узнать IP адреса игрока", 4},
	{"/agetip", "узнать IP адреса игрока в оффлайн", 4},
	{"/gsinfo", "статистика саппорта", 4},
	{"/rban", "блокировка IP адреса", 4},
	{"/unrban", "разблокировка IP адреса", 4},
	{"/iban", "заблокировать до 2038 года", 4},
	{"/ioffban", "заблокировать до 2038 года в оффлайн", 4},
	{"/offban", "блокировка аккаунта оффлайн", 4},
	{"/unban", "разблокировать аккаунт", 4},
	{"/setfuel", "установить количество бензина в машине", 4},
	{"/fin", "посмотреть прибыль бизнеса", 4},
	{"/makeleader","выдача временной лидерки", 4},
	{"/weather", "установить погоду", 4},
	{"/hpall", "выдать хп всем в радиусе", 4},
	{"/gettax", "балланс казны", 4},
	{"/sban", "тихая блокировка аккаунта", 4},
	{"/infoips", "пробить твинков по IP", 4},
	{"/amusic", "онлайн радио", 4},
	{"/captfreeze", "заморозить стрелы/капты", 4},
	{"/spcars", "заспавнить весь не занятый транспорт", 4},
	{"/gzcolor", "перекрасить ганг-зону", 4},
	{"/setbizmafia", "передать бизнес др. мафии", 4},

	{"/setskill", "выдать комплект скиллов", 5},
	{"/spall", "заспавнить всех в радиусе", 5},
	{"/setmats", "изменить маты организациям", 5},
	{"/obj", "создать объект", 5},
	{"/eobject", "редактировать объект", 5},
	{"/dobject", "удалить объект", 5},
	{"/hbject", "создать объект на игрока", 5},
	{"/hbedit", "редактировать объект на игроке", 5},
	{"/lskin", "изменить скин лидеру фракции", 5},
	{"/admstats", "узнать статистику админа", 5},
	{"/givelic", "выдать все лицензии", 5},
	{"/apromo","создание промокодов", 5},
	{"/reloadbans", "перезагрузить блокировки аккаунтов", 5},

	{"/gives","бонус за сотрудничество", 6},
	{"/getdonate", "узнать пополнения(донат) игрока", 6},
	{"/restartservera", "произвести рестарт сервера", 6},
	{"/delacc", "удалить аккаунт игрока", 6},
	{"/asettax", "добавить денег в казну", 6},
	{"/bizrasf", "Расформировка бизнесов мафии", 6},
	{"/offgives", "Убрать игрока с сотрудничества", 6},
	{"/makeadmin", "добавить модератора", 6},
	{"/setyt", "выдать ютуберку",6},
	{"/ylist", "список ютуберов",6},

	{"/addzone", "управление ЗЗ зонами", 7},
	{"/asellbiz", "удалить владельца бизнеса", 7},
	{"/cenabiz", "изменить стоимость бизнеса", 7},
	{"/cenahouse", "изменить стоимость дома", 7},
	{"/setacc", "изменить аккаунт", 7},
	{"/asettax", "пополнить казну", 7},
	{"/createbonus", "создать бонус-код",7},
	{"/serv", "статистика сервера",7}
};
new working_at_admin[MAX_PLAYERS];
new ArendInfo[][aInfo] =
{//ID, Цена, Координаты X, Y, Z, Цвет 1, Цвет 2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 1800 ,2137.3403, -1135.8445, 25.1808, 100.0000,-1,-1,71 }, // Моторынок1
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 461, 5500 ,2136.8276, -1133.4684, 25.2229, 100.0000,-1,-1,71 }, // Моторынок2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 220 ,2136.8013, -1130.9340, 25.1831, 100.0000,-1,-1,71 }, // Моторынок3
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 510, 130 ,2137.0405, -1128.2262, 25.2155, 100.000,-1,-1,71 }, // Моторынок4

	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 401, 1500 ,546.2834, -1267.1354, 17.0241, 220.0000,-1,-1,68 }, // Авторынок ЛС 1
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 585, 1600 ,542.8993, -1270.2717, 16.8330, 220.0000,-1,-1,68 }, // Авторынок ЛС 2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 518, 1200 ,539.4501, -1273.0795, 16.9120, 220.0000,-1,-1,68 }, // Авторынок ЛС 3
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 466, 1800 ,536.1959, -1275.8226, 16.9862, 220.0000,-1,-1,68 }, // Авторынок ЛС 4
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 491, 2100 ,533.1170, -1278.3557, 17.0001, 220.0000,-1,-1,68 }, // Авторынок ЛС 5
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 410, 1000 ,529.7689, -1280.4216, 16.9001, 220.0000,-1,-1,68 } // Авторынок ЛС 6
};

new Float:med_heal[12][4]={
	{1560.5155,496.3742,1070.9421,272.3593}, // кровать 1
	{1563.1982,496.3743,1070.9421,270.4559}, // кровать 2
	{1565.7197,496.4349,1070.9421,268.5757}, // кровать 3
	{1561.0460,508.9258,1070.9421,88.0939}, // кровать 4
	{1563.6310,509.0753,1070.9421,90.2871}, // кровать 5
	{1566.2164,508.8936,1070.9421,91.8540}, // кровать 6
	{1542.9122,508.9595,1070.9421,88.0470}, // кровать 7
	{1545.4645,509.0333,1070.9421,91.1570}, // кровать 8
	{1548.0690,508.9948,1070.9421,91.7836}, // кровать 9
	{1547.6119,496.5009,1070.9421,272.2653}, // кровать 10
	{1545.0653,496.4404,1070.9421,269.4219}, // кровать 11
	{1542.4304,496.4236,1070.9421,271.6151} // кровать 12
};

enum ticlist {
	tID,
	tName[MAX_PLAYER_NAME],
	tPrice,
	tDate[32],
	tReason[30],
}
new TL[MAX_PLAYERS][15][ticlist], TOTALTICKETS[MAX_PLAYERS];

#define WD::                    WoodsInfo
#define MAX_WOODS               9
enum woodsInfo {
	woodObject,
	woodZone,
bool:woodUse
};
new WD::[MAX_WOODS][woodsInfo];
new Float:Woods[MAX_WOODS][6] = {
	{1074.01587, -262.73090, 73.50220, 0.000000, 0.000000, -39.399997},
	{1066.18542, -272.70081, 72.78220, 0.000000, 0.000000, -39.399997},
	{1062.99426, -254.57080, 72.76220, 0.000000, 0.000000, -39.399997},
	{1087.24451, -258.81091, 74.28220, 0.000000, 0.000000, -39.399997},
	{1099.74463, -261.56091, 73.22220, 0.000000, 0.000000, -39.399997},
	{1110.60461, -269.56079, 72.72220, 0.000000, 0.000000, -39.399997},
	{1101.39429, -282.32080, 73.12220, 0.000000, 0.000000, -39.399997},
	{1081.86450, -271.75089, 73.52220, 0.000000, 0.000000, -39.399997},
	{1094.11438, -272.98080, 73.56220, 0.000000, 0.000000, -39.399997}
	
	
};
new Text3D:wood_3dtext;
new woodsklad;
new casino;
new tk_unloading[4];
new invite_frac[8];

enum FS_PINFO
{
	nname[MAX_PLAYER_NAME],
	fip[32]
};
new fPlayer[MAX_PLAYERS][FS_PINFO];

enum fraction_weapon_data {
	fwID,
	fwName[32],
	fwGunID,
	fwGunAmmo,
	fwArmor,
	fwRank
}
new FW[13][MAX_FRACTIONS + 1][fraction_weapon_data];
new GunTickGet[MAX_PLAYERS][13];

new CountOnZone[23];
new capture_kd[24];
new capture_war[24];
new Text:Capture[34];
new PlayerText:CaptPlayer[MAX_PLAYERS][6];

new fracmoroz [8]={0,...};

new const stock fracmorozName [8][32]={"The Ballas","The Vagos","The Grove","The Rifa","The Aztecas", "La Cosa Nostra", "Yakuza","Русской мафии"};

new BizWarTime[2] = 0,
BizHourTime = 0,
Text:Bizwar[3],
biz_war_gangzone = - 1,
war_gangzone = - 1;

#define MOROZ_LCN 5
#define MOROZ_YAKUZA 6
#define MOROZ_RM 7
new gBankMafia[3][MAX_BUSINESS_COUNT];

new bool:spec_t[MAX_PLAYERS];

enum MzoneInfo {
	bFrakVlad,
	bNapad,
	bBiz,
	bCountDead[18]
}
new Float:mafia_zone[7][4] = {
	{-1484.0,-1598.0, -1399.0, -1440.0},//Вестоун 4
	{ -599.0,-212.0,-425.0,-29.0}, // порт ЛС
	{ 1501.0,-15.0,1593.0,86.0}, // Мантговери
	{ -1906.0,-1682.0,-1769.0,-1574.0}, // Угольная шахта
	{ -1130.0,-761.0,-969.0,-588.0}, // Химзавод
	{ -312.0, -2231.0, -215.0, -2133.0}, // Мясокомбинат
	{ -1131.34, -1696.37, -1027.34, -1597.37}  // Ферма
	
};
new MZInfo[MzoneInfo];

new IDGZ[MAX_PLAYERS] = {-1,...};
enum GzoneInfo {
	gID,
	gZone,
	Float:gCoords[4],
	gFrakVlad,
	gNapad,
	gTime,
	ZoneOnBattle
}
new GZInfo[132][GzoneInfo];

new TOTALGZ = 0;
new VladGzone[MAX_FRACTIONS]={0,...};
new SFa;

new bool:ac_1[MAX_PLAYERS char];

stock GetIDGZ(playerid)
{ 
	for (new i = 0; i < TOTALGZ; i++)
	if (PlayerToKvadrat(playerid, GZInfo[i][gCoords][0], GZInfo[i][gCoords][1], GZInfo[i][gCoords][2], GZInfo[i][gCoords][3])) return i;
	return -1;
}
stock GetGangZoneColor(fractionid) return (GZInfo[fractionid][gFrakVlad] == fBALLAS) ? (0xCC00FFAA) : (GZInfo[fractionid][gFrakVlad] == fRIFA) ? (0x6666FFAA)  : (GZInfo[fractionid][gFrakVlad] == fVAGOS) ? (0xffff00AA) : (GZInfo[fractionid][gFrakVlad] == fGROVE) ? (0x009900AA) : (0x00CCFFAA);


stock GetGangColor(g) {
	new zx;
	switch(g) {
	case fGROVE: zx = 0x009900AA;
	case fBALLAS: zx = 0xCC00FFAA;
	case fRIFA: zx = 0x6666FFAA;
	case fAZTEC: zx = 0x00CCFFAA;
	case fVAGOS: zx = 0xffff00AA;
	default: zx = 0xC0C0C0AA;
	}
	return zx;
}
stock gang_name(frac) {
	new namegang[20];
	switch(frac) {
	case fGROVE: namegang = "Grove";
	case fAZTEC: namegang = "Aztecas";
	case fBALLAS: namegang = "Ballas";
	case fRIFA: namegang = "Rifa";
	case fVAGOS: namegang = "Vagos";
	}
	return namegang;
}
stock gang_color(frac) {
	new namegang;
	switch(frac) {
	case fGROVE: namegang = 1017789500;
	case fAZTEC: namegang = 531556863;
	case fBALLAS: namegang = -16711681;
	case fRIFA: namegang = -1378294017;
	case fVAGOS: namegang = -5963521;
	}
	return namegang;
}
stock GFrac(frac) {
	new namegang[20];
	switch(frac) {
	case fGROVE: namegang = "Grove Street";
	case fAZTEC: namegang = "Varrios Los Aztecas";
	case fBALLAS: namegang = "East Side Ballas";
	case fRIFA: namegang = "Rifa";
	case fVAGOS: namegang = "Los Santos Vagos";
	}
	return namegang;
}

enum _ATMData {
Float:ATM_Pos[6],
	atm_VW,
	atm_INT,
Text3D:atm_Label,
	atm_Object,
	atm_Taken,
	atm_cash
}
new ATMData[MAX_ATM][_ATMData];
new EdittingATM[MAX_PLAYERS];

new PlayerText:Captcha[29], 
TextArray[11] = "1234567890";
new med_mskin[] = {50,15,35},
med_gskin[] = {55,90,192};

new Text:hack_magaz_TD[24];
new PlayerText:hack_numbers[MAX_PLAYERS][13];

new Signal[MAX_VEHICLES];
new Float:SignalAngle[MAX_VEHICLES];
new SignalTick[MAX_VEHICLES][2];
new LightsObject[MAX_VEHICLES][2];
//new perf_object_engine[MAX_VEHICLES];

new select_yaxta[MAX_PLAYERS];
new yaxta_money[MAX_PLAYERS];

new Float:LightsPos[212][6] =
{
	{ 0.8766, 2.0272, -0.1000, 0.8766, -2.2272, -0.1000 },
	{ 0.9566, 2.4500, 0.0000, 0.9566, -2.3500, 0.0000 },
	{ 0.8033, 2.5363, 0.0000, 0.9033, -2.6363, 0.0000 },
	{ 1.1500, 4.1909, -0.2000, 0.3499, -4.1909, -0.7000 },
	{ 0.7333, 2.2409, 0.2000, 0.8333, -2.6409, 0.0000 },
	{ 0.9833, 2.2272, -0.1000, 0.8833, -2.7272, -0.1000 },
	{ 1.0566, 5.2681, 0.0000, 2.2566, -5.1681, 0.4000 },
	{ 0.8499, 4.0727, 0.1000, 1.0499, -3.4727, 0.2000 },
	{ 0.9399, 4.8590, -0.4000, 0.8399, -4.0590, -0.5000 },
	{ 0.8899, 3.6181, 0.0000, 0.8899, -3.9181, 0.0000 },
	{ 0.8533, 2.1772, 0.0000, 0.8533, -2.1772, 0.0000 },
	{ 0.9966, 2.6272, -0.2000, 0.8966, -2.4272, 0.0000 },
	{ 0.9166, 2.6227, -0.1000, 0.8166, -3.6227, -0.2000 },
	{ 0.9600, 2.6727, -0.1000, 0.9600, -2.6727, 0.0000 },
	{ 0.7399, 2.8136, -0.1000, 1.0399, -3.2136, 0.0000 },
	{ 0.8733, 2.5045, -0.3000, 0.7733, -2.5045, 0.0000 },
	{ 0.9099, 2.9409, 0.0000, 1.1100, -3.7409, -0.5000 },
	{ 1.8166, 10.5772, 0.0000, 1.8166, -10.5772, 0.0000 },
	{ 0.9566, 2.4772, -0.2000, 1.0566, -2.5772, -0.2000 },
	{ 0.8000, 2.7272, -0.4000, 0.8000, -2.9272, -0.2000 },
	{ 0.9033, 2.3863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 0.8500, 2.6045, -0.2000, 0.8500, -2.9045, -0.2000 },
	{ 0.7566, 2.2454, -0.3000, 0.8566, -2.4454, -0.3000 },
	{ 0.7733, 2.2999, 0.0000, 0.8733, -2.2000, 0.0000 },
	{ 0.7199, 1.5545, 0.2000, 0.6199, -1.6545, 0.3000 },
	{ 1.7199, 8.4681, 0.0000, 1.7199, -8.4681, 0.0000 },
	{ 1.0033, 2.3863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 0.8800, 3.3272, -0.1000, 0.9800, -3.7272, 0.3000 },
	{ 0.9100, 2.5545, 0.2000, 0.9100, -2.9545, 0.2000 },
	{ 0.7366, 2.2545, -0.3000, 0.8366, -2.4545, 0.0000 },
	{ 1.5900, 7.6818, 0.0000, 1.5900, -7.6818, 0.0000 },
	{ 1.0033, 5.9499, 0.4000, 1.0033, -5.8499, 0.0000 },
	{ 1.4333, 4.1681, 0.0000, 1.4333, -4.1681, 0.0000 },
	{ 1.2333, 3.7454, -0.1000, 1.3333, -4.7454, -0.1000 },
	{ 0.5633, 1.9772, -0.1000, 0.4633, -1.9772, -0.1000 },
	{ 1.0533, 6.1499, 0.0000, 1.0533, -3.9500, -1.1000 },
	{ 0.8600, 2.3045, 0.0000, 0.8600, -2.5045, 0.0000 },
	{ 1.2133, 5.5454, -0.2000, 1.1133, -5.2454, 0.4000 },
	{ 0.9033, 2.6454, 0.0000, 0.9033, -2.7454, -0.1000 },
	{ 0.8400, 2.4045, -0.5000, 0.8400, -2.7045, -0.1000 },
	{ 0.9700, 2.6272, -0.3000, 0.8700, -2.6272, 0.1000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.9699, 2.8363, -0.2000, 1.0699, -3.0363, 0.0000 },
	{ 1.0866, 5.8136, -1.0000, 1.2866, -7.1136, -0.9000 },
	{ 1.1200, 2.7363, 0.7000, 1.1200, -3.0363, 0.7000 },
	{ 0.9666, 2.3636, 0.0000, 0.9666, -2.7636, -0.2000 },
	{ 1.5900, 7.7363, 0.0000, 1.5900, -7.7363, 0.0000 },
	{ 0.8066, 6.7272, 0.0000, 0.8066, -6.7272, 0.0000 },
	{ 0.2366, 0.9954, 0.0000, 0.2366, -0.9954, 0.0000 },
	{ 1.0099, 4.1045, 0.0000, 1.0099, -4.1045, 0.0000 },
	{ 1.0233, 6.1409, 0.0000, 1.0233, -3.9409, -1.2000 },
	{ 0.7733, 2.0863, -0.2000, 0.8733, -2.4863, -0.2000 },
	{ 1.2033, 6.6227, 0.0000, 1.2033, -6.6227, 0.0000 },
	{ 1.7133, 6.2590, 0.0000, 1.7133, -6.2590, 0.0000 },
	{ 2.2066, 8.6590, 0.0000, 2.2066, -8.6590, 0.0000 },
	{ 1.2066, 3.7090, -0.1000, 1.3066, -4.7090, -0.1000 },
	{ 0.8766, 3.3272, -0.1000, 0.8766, -4.6272, -0.5000 },
	{ 0.4099, 1.1863, 0.0000, 0.5099, -1.2863, 0.0000 },
	{ 0.9033, 2.4909, -0.2000, 0.9033, -2.7909, 0.0000 },
	{ 0.9666, 2.5999, -0.1000, 0.8666, -2.5999, 0.1000 },
	{ 3.6166, 6.1590, 0.0000, 3.6166, -6.1590, 0.0000 },
	{ 0.2333, 0.8181, 0.5000, 0.2333, -1.1181, 0.3000 },
	{ 0.2366, 0.9954, 0.0000, 0.2366, -0.9954, 0.0000 },
	{ 0.2333, 1.1000, 0.0000, 0.2333, -1.1000, 0.0000 },
	{ 0.5266, 0.5045, 0.0000, 0.5266, -0.7045, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.9433, 2.6045, 0.1000, 1.0433, -2.8045, 0.0000 },
	{ 0.6433, 2.8909, -0.1000, 0.9433, -3.0909, 0.0000 },
	{ 0.2366, 1.0136, 0.0000, 0.2366, -1.0136, 0.0000 },
	{ 0.8066, 6.7272, 0.0000, 0.8066, -6.7272, 0.0000 },
	{ 1.0866, 2.0909, 0.2000, 1.0866, -2.6909, -0.2000 },
	{ 0.4733, 0.9090, 0.0000, 0.4733, -0.9090, 0.0000 },
	{ 0.8900, 4.2454, 0.0000, 0.8900, -4.2454, 0.0000 },
	{ 0.9666, 2.4545, 0.0000, 0.9666, -2.4545, 0.0000 },
	{ 0.9100, 2.7409, 0.0000, 1.0099, -2.7409, -0.1000 },
	{ 0.9166, 2.5272, -0.3000, 0.8166, -2.8272, -0.3000 },
	{ 3.6766, 5.1318, 0.0000, 3.6766, -5.1318, 0.0000 },
	{ 0.7900, 2.6954, -0.2000, 1.0900, -2.5954, 0.1000 },
	{ 0.9166, 2.2318, 0.0000, 1.0166, -2.5318, -0.3000 },
	{ 0.9500, 2.4954, 0.0000, 0.9500, -2.7954, 0.0000 },
	{ 0.8566, 1.7909, 0.0000, 0.8566, -2.2909, -0.2000 },
	{ 0.2366, 0.8545, 0.0000, 0.2366, -0.8545, 0.0000 },
	{ 0.8799, 2.3909, -0.4000, 0.8799, -2.5909, 0.0000 },
	{ 0.7833, 2.6136, 0.0000, 0.6833, -2.8136, -0.3000 },
	{ 1.7833, 11.9090, 0.0000, 1.7833, -11.9090, 0.0000 },
	{ 0.6566, 1.7500, 0.0000, 0.6566, -1.3499, 0.0000 },
	{ 0.8466, 1.5636, 1.0000, 0.5466, -3.2636, 1.1000 },
	{ 0.7766, 6.8363, 0.0000, 0.7766, -6.8363, 0.0000 },
	{ 0.7766, 5.7318, 0.0000, 0.7766, -5.7318, 0.0000 },
	{ 1.0466, 2.5909, 0.0000, 1.1466, -2.6909, 0.2000 },
	{ 0.9733, 3.1499, 0.0000, 1.1733, -3.1499, 0.1000 },
	{ 0.8700, 2.5772, -0.1000, 0.8700, -2.8772, 0.0000 },
	{ 0.7833, 2.6090, 0.0000, 0.7833, -2.8090, 0.0000 },
	{ 1.5900, 8.1045, 0.0000, 1.5900, -8.1045, 0.0000 },
	{ 0.8500, 2.3500, -0.2000, 0.8500, -2.8499, 0.1000 },
	{ 1.1266, 2.3772, 0.0000, 1.1266, -2.0772, 0.0000 },
	{ 0.9600, 2.2590, 0.0000, 0.9600, -2.0590, 0.0000 },
	{ 0.7766, 6.8363, 0.0000, 0.7766, -6.8363, 0.0000 },
	{ 0.8666, 3.0999, 0.2000, 0.9666, -3.0999, 0.3000 },
	{ 0.7799, 2.5727, -0.2000, 1.0800, -3.4727, 0.1000 },
	{ 0.4633, 2.0772, -0.2000, 0.7633, -1.9772, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.8833, 2.6136, -0.2000, 0.7833, -2.7136, 0.0000 },
	{ 0.8366, 2.3909, 0.0000, 0.8366, -2.8909, 0.0000 },
	{ 0.9433, 2.6454, 0.1000, 1.0433, -2.8454, 0.0000 },
	{ 1.0466, 2.5909, 0.0000, 1.1466, -2.6909, 0.1000 },
	{ 0.7500, 2.2727, -0.3000, 0.8500, -2.3727, 0.0000 },
	{ 1.0566, 2.5954, -0.1000, 1.1566, -2.8954, -0.1000 },
	{ 0.6866, 2.9590, -0.7000, 0.9866, -3.7590, 0.0000 },
	{ 0.2366, 0.8636, 0.0000, 0.2366, -0.8636, 0.0000 },
	{ 0.2400, 0.7909, 0.0000, 0.2400, -0.7909, 0.0000 },
	{ 7.0733, 9.6318, 0.0000, 7.0733, -9.6318, 0.0000 },
	{ 3.7200, 2.7999, 0.0000, 3.7200, -2.7999, 0.0000 },
	{ 2.8999, 4.0909, 0.0000, 2.8999, -4.0909, 0.0000 },
	{ 1.2633, 4.2772, 0.1000, 0.3633, -5.0772, -0.4000 },
	{ 1.2833, 4.4227, -0.5000, 0.3833, -4.6227, -1.3000 },
	{ 0.9666, 2.7363, 0.0000, 0.9666, -2.8363, 0.0000 },
	{ 0.9433, 2.7772, 0.0000, 0.9433, -2.7772, -0.1000 },
	{ 0.8100, 2.7272, 0.0000, 1.0099, -2.8272, -0.2000 },
	{ 6.7699, 8.7681, 0.0000, 6.7699, -8.7681, 0.0000 },
	{ 2.9166, 6.5090, 0.0000, 2.9166, -6.5090, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.2333, 1.1227, 0.0000, 0.2333, -1.1227, 0.0000 },
	{ 0.8966, 3.7181, 0.0000, 1.1966, -3.9181, -1.1000 },
	{ 0.8166, 3.0409, 0.1000, 0.9166, -3.1409, -0.1000 },
	{ 0.9333, 2.3545, -0.2000, 0.8333, -2.3545, 0.0000 },
	{ 0.9099, 2.5000, 0.0000, 0.9099, -2.3000, 0.0000 },
	{ 0.8499, 2.5227, -0.2000, 0.8499, -2.6227, -0.3000 },
	{ 0.9933, 2.5590, 0.0000, 0.9933, -2.5590, 0.1000 },
	{ 0.5266, -0.6772, 1.3000, 0.5266, -1.9227, 0.8000 },
	{ 0.2533, 1.5818, -0.2000, 0.2533, -1.1818, -0.1000 },
	{ 0.4733, 4.0772, 1.3000, 0.3733, -1.0772, 0.0000 },
	{ 0.9933, 2.4636, 0.0000, 0.8933, -2.5636, 0.0000 },
	{ 1.0266, 2.9499, -0.2000, 0.7266, -2.8499, -0.1000 },
	{ 0.8899, 2.4909, -0.1000, 0.8900, -2.5909, -0.1000 },
	{ 0.8199, 2.4181, -0.2000, 0.8199, -3.1181, -0.2000 },
	{ 0.7766, 2.3272, 0.0000, 1.1100, -7.9772, 0.0000 },
	{ 1.0900, 7.6409, 0.0000, 1.0900, -7.5409, 0.0000 },
	{ 0.8333, 2.0590, 0.0000, 0.8333, -1.7590, 0.0000 },
	{ 0.9633, 2.6590, -0.1000, 1.0633, -2.7590, -0.1000 },
	{ 0.6566, 2.2499, -0.2000, 0.7566, -2.2499, 0.1000 },
	{ 0.9266, 2.6090, -0.1000, 0.7266, -3.0090, -0.1000 },
	{ 0.7933, 2.3045, 0.1000, 0.9933, -2.7045, 0.0000 },
	{ 0.7366, 3.6454, -0.2000, 0.9366, -4.2454, -0.8000 },
	{ 0.5299, 1.7863, 0.0000, 0.8300, -2.0863, -0.4000 },
	{ 0.9566, 2.5636, 0.0000, 1.0566, -2.6636, 0.0000 },
	{ 0.9299, 2.5545, 0.0000, 0.9299, -2.6545, 0.1000 },
	{ 1.3933, 11.0999, 0.0000, 1.3933, -11.0999, 0.0000 },
	{ 0.9000, 2.5136, 0.0000, 0.9000, -2.5136, 0.0000 },
	{ 0.9466, 2.5772, -0.2000, 0.9466, -2.6772, -0.2000 },
	{ 0.9866, 2.5545, -0.1000, 0.9866, -3.0545, 0.0000 },
	{ 0.9833, 3.0545, 0.3000, 1.1833, -2.8545, 0.3000 },
	{ 9.5799, 10.6772, 0.0000, 9.5799, -10.6772, 0.0000 },
	{ 1.0933, 2.5045, 0.1000, 1.0933, -2.9045, 0.1000 },
	{ 0.7666, 2.2318, 0.0000, 0.6666, -2.4318, -0.2000 },
	{ 1.0199, 2.5954, 0.5000, 1.1200, -2.8954, 0.6000 },
	{ 1.1200, 2.4454, 0.7000, 1.1200, -2.7454, 0.7000 },
	{ 0.9433, 2.0863, 0.0000, 0.9433, -2.3863, 0.2000 },
	{ 0.7599, 2.3909, 0.0000, 0.8600, -2.2909, 0.2000 },
	{ 0.9733, 2.3545, -0.0000, 0.8733, -2.1545, 0.1000 },
	{ 0.8333, 2.6363, -0.1000, 0.9333, -2.6363, 0.0000 },
	{ 0.8533, 2.4136, 0.0000, 0.8533, -2.3136, 0.1000 },
	{ 1.1299, 8.4636, 0.0000, 1.1299, -8.4636, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.7766, 2.0909, 0.0000, 0.8766, -1.8909, 0.0000 },
	{ 0.9366, 2.7363, 0.0000, 0.9366, -2.9363, 0.0000 },
	{ 1.0033, 2.9136, -0.2000, 1.0033, -3.0136, -0.2000 },
	{ 0.4033, 2.1954, 0.0000, 0.2033, -1.4954, 0.0000 },
	{ 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },
	{ 0.7766, 2.3272, 0.0000, 1.1566, -9.5772, 0.0000 },
	{ 0.5233, 1.0590, 0.0000, 0.5233, -1.0590, 0.0000 },
	{ 0.3533, 0.8681, -0.1000, 0.3533, -1.0681, -0.1000 },
	{ 0.8766, 3.1545, -0.4000, 0.8766, -3.3545, -0.4000 },
	{ 0.5400, 1.7499, -0.2000, 0.5400, -1.2499, -0.2000 },
	{ 0.9300, 2.3500, 0.1000, 0.8299, -2.7499, 0.0000 },
	{ 1.0066, 2.3909, -0.2000, 1.0066, -3.1909, 0.0000 },
	{ 20.8299, 27.9272, 0.0000, 0.0000, 0.0000, 0.0000 },
	{ 1.1500, 4.3590, -0.2000, 1.1500, -5.4590, -0.5000 },
	{ 0.9233, 2.3227, 0.0000, 1.0233, -2.8227, 0.1000 },
	{ 0.7866, 2.6227, -0.2000, 1.0866, -2.8227, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.9133, 2.5818, -0.1000, 0.9133, -3.3818, 0.1000 },
	{ 0.6566, 1.4636, 0.3000, 0.5566, -1.6636, 0.4000 },
	{ 1.1833, 7.2318, 0.0000, 1.1833, -7.2318, 0.0000 },
	{ 1.0133, 2.8681, 0.1000, 0.9133, -3.0681, 0.2000 },
	{ 0.2333, 1.2727, 0.0000, 0.2333, -1.2727, 0.0000 },
	{ 0.9699, 2.1181, -0.3000, 1.0699, -2.5181, 0.1000 },
	{ 1.0266, 3.4181, 0.4000, 1.0266, -4.0181, -0.3000 },
	{ 0.7533, 2.4136, 0.1000, 0.8533, -2.3136, 0.4000 },
	{ 1.1466, 8.3636, 0.0000, 1.1466, -8.3636, 0.0000 },
	{ 1.0600, 6.1954, 0.0000, 1.0600, -6.1954, 0.0000 },
	{ 14.8166, 26.1681, 0.0000, 14.8166, -26.1681, 0.0000 },
	{ 4.1966, 6.1590, 0.0000, 4.1966, -6.1590, 0.0000 },
	{ 0.1666, 0.4181, 0.0000, 0.1666, -0.4181, 0.0000 },
	{ 0.9499, 6.1227, 0.0000, 0.9499, -6.1227, 0.0000 },
	{ 1.0033, 2.2863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 1.0033, 2.2863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 1.0033, 2.3318, 0.0000, 0.9033, -2.7318, 0.0000 },
	{ 1.0733, 2.6000, 0.0000, 1.1733, -2.6000, 0.1000 },
	{ 0.8000, 2.7545, -0.1000, 1.0000, -2.7545, 0.1000 },
	{ 0.8266, 3.1636, 0.5000, 1.0266, -3.0636, 0.9000 },
	{ 0.8733, 2.1181, 0.0000, 0.8733, -2.6181, -0.3000 },
	{ 0.8800, 2.5590, -0.2000, 0.8800, -2.6590, -0.1000 },
	{ 0.8433, 2.6045, 0.1000, 1.0433, -2.8045, 0.0000 },
	{ 0.7933, 2.3045, 0.0000, 0.9933, -2.7045, 0.0000 },
	{ 0.9766, 1.5363, 0.0000, 0.9766, -1.5363, 0.0000 },
	{ 1.0066, 1.4818, 0.0000, 1.0066, -1.4818, 0.0000 },
	{ 0.4833, 2.1136, 0.0000, 0.4833, -2.1136, 0.0000 },
	{ 0.8666, 3.0999, 0.2000, 0.9666, -3.0999, 0.3000 },
	{ 0.8266, 0.6499, 0.0000, 0.8266, -0.6499, 0.0000 },
	{ 0.7100, 1.4363, 0.0000, 0.7100, -1.4363, 0.0000 }
};
/*============== [ Кости ] ===============*/
#define MIN_IGROKOV (2)
#define MIN_STAVKA 1000
#define MAX_STAVKA 10000
#define MAX_TABLES_DICE 4
enum Casino_TD_Data {
Text:Casino_TD_Set_Bet,
Text:Casino_TD_Dice,
Text:Casino_TD_Exit,
Text:Casino_TD_TableNicks[MAX_TABLES_DICE],
Text:Casino_TD_TableScore[MAX_TABLES_DICE],
Text:Casino_TD_TableName[MAX_TABLES_DICE],
Text:Casino_TD_Box,
Text:Casino_TD_Enum,
Text:Casino_TD_Lines[5],
Text:Casino_TD_Modeled[2]
}
new Casino_TD[Casino_TD_Data],
PlayerText:PTD_DiceStat[MAX_PLAYERS] = {PlayerText:-1,...};

#define CASINO_TEXT_STRING ""ORANGE"Стол №%d\n\n"W"Крупье: "P"   %s\n\n"W"Игрок 1:"G"   %s\n"W"Игрок 2:"G"   %s\n"W"Игрок 3:"G"   %s\n"W"Игрок 4:"G"   %s\n"W"Игрок 5:"G"   %s\n\n"W"Ставка: "ORANGE"$%d\n"W"Банк: "ORANGE"$%d\n\n"W"Статус: {EB3F36}%s\n"G"Для начала игры нажмите "W"'F'\n"
enum InfoDice_ {
	dice_gamer[5],
	dice_score[5],
	dice_stavka,
	dice_bank,
	dice_crup,
bool:dice_game_start,
	dice_area,
Text3D:dice_text,
	dice_game_start_time,
	dice_game_start_timer
}
new InfoDice[MAX_TABLES_DICE][InfoDice_];
new Casino_Flag[MAX_PLAYERS][6];
new vehiclebatrak[8];
new vehiclelspd[19];

#define show_casino_td 0
#define select_casino_table 1
#define casino_crup 2
#define casino_bet_cash 3

//////////////////////////////////////////////////////////////////
new legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};

new Float:salon_car[][] = {

	{562.3264,-1265.4463,16.9250,101.3029},
	{563.2874,-1269.9998,16.9240,103.0002},
	{564.4907,-1274.9780,16.9250,100.8979},
	{565.3213,-1279.8314,16.9249,103.2264},
	{566.4673,-1284.8821,16.9326,97.9601},
	{567.2491,-1288.7737,16.9280,99.9368}
};

new Float:bike_spawn[][] = {

	{2117.3269,-1143.0537,24.4275,287.9681},
	{2117.1365,-1139.8842,24.6432,281.8104},
	{2117.1292,-1137.2787,24.6851,292.3506},
	{2117.2107,-1134.8595,24.7301,298.1947},
	{2117.2949,-1132.4486,24.7640,295.0789},
	{2117.4573,-1129.7628,24.8112,303.8611},
	{2117.3931,-1126.6271,24.8376,303.8688}
};

new Float:salon_spawn[][] = {
	{1240.4315,-1514.5670,12.8815,89.8507},
	{1240.4351,-1511.3879,12.8812,89.5078},
	{1240.5237,-1508.1177,12.8808,89.0185},
	{1240.5120,-1504.8964,12.8807,89.4126},
	{1240.7046,-1501.7117,12.8808,89.8634},
	{1240.5785,-1498.5701,12.8820,88.8737},
	{1240.3903,-1495.3215,12.8802,89.8940},
	{1230.8162,-1506.3551,12.8832,270.2733},
	{1230.9652,-1509.5774,12.8823,270.0647},
	{1231.0914,-1512.8550,12.8822,271.4177},
	{1230.9895,-1515.9507,12.8827,269.5721},
	{1222.0051,-1506.4066,12.8814,91.0581},
	{1221.8676,-1509.6981,12.8805,89.6446},
	{1222.0835,-1512.9569,12.8816,89.5271},
	{1221.9297,-1516.0487,12.8810,90.9002},
	{1211.8264,-1492.8872,12.8809,268.6584}
};

new Float:theft_spawn[30][4] = {
	{1188.7095,-1085.1385,28.8731,90.1645},
	{287.0098,-1521.8062,24.2738,234.3871},
	{303.6877,-1486.6411,24.2742,233.9336},
	{294.8651,-1540.5392,24.2737,53.6774},
	{-31.2671,-2493.2046,36.3287,214.0948},
	{2794.0857,-1428.7557,15.9298,180.2306},
	{2817.6633,-1460.7080,31.8073,86.1768},
	{2298.5786,-1630.7955,14.3539,177.9928},
	{1794.1206,-2331.5955,-3.0043,0.7045},
	{1112.4414,-307.1547,73.6723,87.5778},
	{1362.4615,482.9817,19.8537,157.6421},
	{2686.7527,-1671.2871,9.1255,177.1056},
	{2777.8716,-1876.5704,9.4715,0.4755},
	{488.0724,-1504.7778,20.1822,354.5506},
	{1045.9435,-923.2466,42.2700,3.7438},
	{158.2464,-165.9605,1.2582,90.7483},
	{196.7231,-7.0608,1.2582,177.6725},
	{889.3014,-23.4655,62.9322,157.1010},
	{1568.8221,36.1888,24.1131,86.8459},
	{218.3616,-173.3305,1.2578,88.7602},
	{2380.3875,-1928.1710,13.0631,1.0946},
	{2501.9773,-1953.4034,13.1060,0.7297},
	{2025.4695,-1290.6848,20.6128,183.0678},
	{1424.4545,-1343.4938,13.2563,359.1708},
	{1516.2642,-1460.2505,9.1802,178.6663},
	{869.8594,-1669.1694,13.2271,359.8963},
	{990.0911,-1524.2052,13.2376,178.7392},
	{1098.5869,-1226.1232,15.5005,182.4612},
	{647.1885,-504.3948,16.0168,357.6528},
	{-2196.1550,-2262.1704,30.3193,138.4476}
};

new Float:boat_spawn[][] = {
	{325.3284,-1957.8163,-0.2301,92.6400},
	{309.2881,-1977.0956,-0.2445,180.9045},
	{320.7114,-1977.2721,-0.2535,180.2797},
	{331.5490,-1978.4265,-0.2668,179.9892},
	{341.3517,-1978.3732,-0.3017,179.1581}
};
new Float:spawn_ls[][] = {
	{1763.1810,-1894.2139,13.5880,269.4222},
	{1763.1810,-1894.2139,13.5880,269.4222},
	{1763.1810,-1894.2139,13.5880,269.4222}
};
new Talk[][] = {
	{"IDLE_chat"},
	{"prtial_gngtlkA"},
	{"prtial_gngtlkB"},
	{"prtial_gngtlkD"},
	{"prtial_gngtlkE"},
	{"prtial_gngtlkF"},
	{"prtial_gngtlkG"}
};

new PlayerTrailerTime[MAX_PLAYERS];
new Float:car_fuels[6][3] =
{
	{-231.2285, -195.9663, 2.4525},
	{-224.4868, -197.6987, 2.4525},
	{-217.5300, -199.7619, 2.4525},
	{-210.7354, -201.3426, 2.4525},
	{-203.3658, -202.8208, 2.4525},
	{-195.6543, -204.4956, 2.4525}
};

enum fracspawn {
	fracInt,
	fracWorld,
	fracColor,
	Float:fracCoordsX,
	Float:fracCoordsY,
	Float:fracCoordsZ,
	Float:fracCoordsA
}
new Float:gFractionSpawn[MAX_FRACTIONS][fracspawn] = {//saneka
	{0,0,0xFFFFFF11,0.0,0.0,0.0,0.0},
	{6,1,0x1b00e6AA,194.7242,-154.9572,1020.2178,1.8092}, //LSPD
	{0,0,0xf78700AA,806.2020,2517.2783,1502.0144,88.3695}, //Biker
	{92,92,0xf78700AA,806.2020,2517.2783,1502.0144,88.3695}, //Biker2
	{75,43,0x313131AA,14.9880,1409.4287,1069.3866,270.4024}, //FBI
	{9,6,0xf4169E1ff,-44.1854,-191.8418,1026.9832,89.3389}, //RCSD
	{87,59,0xfBDB76Bff,250.4903,108.3510,1024.3394,200.4394}, //ArmyLS
	{9,4,0x114D71FF,2048.4553,1737.1294,1026.7609,180.8006},//WhiteHouse
	{93,20,0xA52A2AFF,2174.6411,578.7777,1080.4542,270.2591}, //Medics Ls
	{93,21,0xA52A2AFF,2174.6411,578.7777,1080.4542,270.2591}, //Medics Sf
	{93,22,0xA52A2AFF,2174.6411,578.7777,1080.4542,270.2591}, //Medics Lv
	{2,1,0x40848BAA,2826.3652,1091.6660,1052.5673,270.6145}, // LSn
	{74,11,0x40848BAA,759.5918,-1505.2585,1417.8119,207.1667},//SFn
	{74,12,0x40848BAA,759.5918,-1505.2585,1417.8119,207.1667},//LVn
	{3,5,0x139BECFF,-1.9447,-74.6883,1026.4089,269.4837},//Instructors
	{73,49,0xDDA701FF,1394.7969,-17.5138,1005.0829,270.1765},//LCN
	{73,50,COLOR_REDD,20.4320,-42.7630,2006.0120,178.9022},//Yakuza
	{73,51,COLOR_GRAD1,1400.3679,-24.3161,1000.9285,358.1112},//RM
	{15,1,0xB313E7FF,-16.9384,-83.5364,1029.9232,87.1867},//Ballas
	{15,2,0xDBD604AA,-16.9384,-83.5364,1029.9232,87.1867},//Vagos
	{15,3,0x009F00AA,-16.9384,-83.5364,1029.9232,87.1867},//Grove
	{15,4,TEAM_AZTECAS_COLOR,-16.9384,-83.5364,1029.9232,87.1867},//Aztec
	{15,5,0x2A9170FF,-16.9384,-83.5364,1029.9232,87.1867}//Rifa
};

new gpss[MAX_PLAYERS];

enum suspect_data {
	suspect_name_folder[31],
	suspect_name_reason[90],
	suspect_level[4]
}
static const stock suspect_player[14][suspect_data] = {
	{"Нападение",							"Нападение на гражданина\nНападение на сотр. гос.организации", 												{2,4,-1,-1}},
	{"Нападение с применением оружия",		"Нападение на гражданина\nНападение на сотр. гос.организации",												{3,3,-1,-1}},
	{"Хулиганство",							"Ограбление\nМелкое хулиганство\nУгон",																		{2,1,3,-1}},
	{"Оружие",								"Хранение без лицензии\nКража металла\nХранение металла\nТорговля оружием",									{1,2,3,3}},
	{"Взятка",								"Попытка дачи взятки",																						{2,-1,-1,-1}},
	{"Наркотические вещества",				"Использование наркотических веществ\nРеклама/Продажа/Хранение наркотиков",									{2,3,-1,-1}},
	{"Транспортные средства",				"Порча т/с или гос. имущества\nНарушение ПДД\nУгон частного т/с\nПопытка угона т/с",						{2,1,2,2}},
	{"Неподчинение",						"Неподчинение сотруднику ПД/ФБР\nНеподченение сотруднику гос. структур",									{1,2,-1,-1}},
	{"Соучастие",							"Соучастие в преступлении",																					{1,-1,-1,-1}},
	{"Проникновение",						"На объекты част. собственности\nНа охран. территорию\nВ хранилище банка",									{1,2,3,-1}},
	{"Похищение",							"Попытка похищения\nПохищение\nПохищение гос.сотрудника",													{2,3,4,-1}},
	{"Терракт",								"Планирование/Исполнение терракта",																			{6,-1,-1,-1}},
	{"Митинг",								"Организация нелегального митинга\nОрганизация революции\nВовлечение в терр.организацию",					{2,4,4,-1}},
	{"Особо важный",						"Особо опасный преступник",			     														         	{6,-1,-1,-1}}
};
new Float:hotel_spawnscar[60][4] = {
	{1639.2523, 681.8748, 589.2706, 270.0000},
	{1639.2523, 685.3676, 589.2634, 270.0000},
	{1639.2523, 689.1181, 589.2706, 270.0000},
	{1639.2523, 692.9104, 589.2707, 270.0000},
	{1639.2523, 696.7643, 589.2707, 270.0000},
	{1639.2523, 700.5690, 589.2707, 270.0000},
	{1639.2523, 704.2307, 589.2706, 270.0000},
	{1639.2523, 707.8220, 589.2714, 270.0000},
	{1639.2523, 711.6429, 589.2697, 270.0000},
	{1661.5199, 708.4477, 589.2723, 0.0000},
	{1665.6879, 708.4477, 589.2725, 0.0000},
	{1669.7159, 708.4477, 589.2707, 0.0000},
	{1690.4121, 708.4477, 589.2707, 0.0000},
	{1694.5243, 708.4477, 589.2725, 0.0000},
	{1698.7091, 708.4477, 589.2682, 0.0000},
	{1698.7136, 692.3749, 589.2707, 180.0000},
	{1694.6134, 692.3749, 589.2707, 180.0000},
	{1690.3038, 692.3749, 589.2707, 180.0000},
	{1686.2885, 692.3749, 589.2706, 180.0000},
	{1673.9747, 692.3749, 589.2707, 180.0000},
	{1669.7694, 692.3749, 589.2725, 180.0000},
	{1665.6481, 692.3749, 589.2722, 180.0000},
	{1661.4946, 692.3749, 589.2725, 180.0000},
	{1645.2010, 675.7460, 589.2640, 0.0000},
	{1649.1854, 675.7460, 589.2623, 0.0000},
	{1653.5624, 675.7460, 589.2503, 0.0000},
	{1657.5077, 675.7460, 589.2647, 0.0000},
	{1661.5767, 675.7460, 589.2480, 0.0000},
	{1665.5404, 675.7460, 589.2515, 0.0000},
	{1669.8055, 675.7460, 589.2491, 0.0000},
	{1673.8234, 675.7460, 589.2576, 0.0000},
	{1678.0140, 675.7460, 589.2639, 0.0000},
	{1682.2246, 675.7460, 589.2675, 0.0000},
	{1686.1377, 675.7460, 589.2593, 0.0000},
	{1690.4374, 675.7460, 589.2601, 0.0000},
	{1694.4039, 675.7460, 589.2617, 0.0000},
	{1698.6069, 675.7460, 589.2545, 0.0000},
	{1702.7660, 675.7460, 589.2673, 0.0000},
	{1706.8040, 675.7460, 589.2642, 0.0000},
	{1710.9709, 675.7460, 589.2601, 0.0000},
	{1715.1213, 675.7460, 589.2668, 0.0000},
	{1721.3688, 682.6960, 589.2549, 90.0000},
	{1721.3688, 688.2509, 589.2630, 90.0000},
	{1721.3688, 693.4296, 589.2612, 90.0000},
	{1721.3688, 698.6730, 589.2632, 90.0000},
	{1721.3688, 702.4772, 589.2640, 90.0000},
	{1723.1814, 724.6450, 589.2619, 180.0000},
	{1719.1642, 724.6450, 589.2607, 180.0000},
	{1714.9835, 724.6450, 589.2621, 180.0000},
	{1710.7709, 724.6450, 589.2488, 180.0000},
	{1706.9706, 724.6450, 589.2467, 180.0000},
	{1702.7843, 724.6450, 589.2603, 180.5041},
	{1698.5903, 724.6450, 589.2646, 180.0000},
	{1694.5520, 724.6450, 589.2487, 180.0000},
	{1690.4575, 724.6450, 589.2648, 180.0000},
	{1686.3148, 724.6450, 589.2678, 180.0000},
	{1682.1447, 724.6450, 589.2514, 180.0000},
	{1678.0258, 724.6450, 589.2576, 180.0000},
	{1673.8429, 724.6450, 589.2629, 180.0000},
	{1669.6791, 724.6450, 589.2625, 180.0000}
};


new Float:exitgarage[4][4] = {
	{1111.7349,-1772.8270,894.0478,181.6883},//N
	{1045.7454,-1781.7330,894.0495,180.3648},//D
	{1113.7714,-1858.3667,894.0478,269.9092},//B
	{1052.1896,-1852.6293,894.0478,147.5578}//A
};
new Float:cargarage[8][4] = {
	{1111.6594, -1785.9598, 893.7748, 37.4031},//N
	{1111.8777, -1778.5665, 893.7748, 140.4031},//N
	{1043.5570, -1783.2856, 893.7767, 270.0000},//D
	{1043.5570, -1787.0009, 893.7767, 270.0000},//D
	{1116.3336, -1853.8832, 893.7759, 310.0000},//B
	{1116.3298, -1862.6064, 893.7759, -135.0000},//B
	{1050.6737, -1862.6144, 893.8024, -230.0000},//A
	{1050.1293, -1856.7645, 893.8024, -230.0000}//A
};

enum TRANSPORT_DATA {
	trID,
	trModel,
	trName[35],
	trPrice,
	trTank,
	Float:trConsumption,
	trClass,
	trFuelable,
	trSellable,
	trProds
}
new gTransport[220][TRANSPORT_DATA];

#define BUS_PRICE_CHECKPOINT 50
#define BUS_PRICE_RENT 500

new Text3D:gPlayerBusText[MAX_PLAYERS] = {Text3D:INVALID_3DTEXT_ID,...},
gRouteName[7][32];
new Text3D:VWH3DText[2];
new Float:gBusCPs[7][111][4] = {
	{ // АВЛС - Завод - Ферма
		{0.0,1215.3260,-1838.0054,13.4500}, 
		{0.0,1333.3987,-1856.8008,13.4401}, 
		{0.0,1486.4301,-1874.2933,13.4464},
		{0.0,1674.2701,-1869.5959,13.4426}, 
		{0.0,1691.5751,-1828.1887,13.4480}, 
		{0.0,1806.4355,-1834.5319,13.4301}, 
		{0.0,1819.0546,-1873.9229,13.4647}, 
		{1.0,1779.0552,-1912.0532,13.4559},
		{0.0,1807.7853,-1893.3148,13.5328},
		{0.0,1824.1902,-1856.8170,13.4641},
		{0.0,1802.4987,-1829.7014,13.4368}, 
		{0.0,1705.8314,-1810.0911,13.4327}, 
		{0.0,1687.4429,-1837.9532,13.4444}, 
		{0.0,1632.9083,-1869.7114,13.4406}, 
		{0.0,1509.1417,-1869.6737,13.4463}, 
		{0.0,1330.1178,-1851.2589,13.4350}, 
		{0.0,1143.6808,-1849.7484,13.4512}, 
		{0.0,1077.7494,-1849.8541,13.4513}, 
		{0.0,1047.3328,-1811.1423,13.6850}, 
		{0.0,871.3349,-1768.2697,13.4469}, 
		{0.0,680.4688,-1740.3763,13.4375}, 
		{0.0,590.9149,-1721.2096,13.6544}, 
		{0.0,224.6341,-1641.6553,13.0888}, 
		{0.0,81.6317,-1525.7800,5.1174}, 
		{0.0,55.6527,-1524.0653,5.0724}, 
		{0.0,0.0777,-1517.0793,2.9349}, 
		{0.0,-110.9060,-1477.4210,2.7588}, 
		{0.0,-143.1291,-1288.0063,2.7636}, 
		{0.0,-115.4915,-992.0071,25.1382}, 
		{0.0,-102.6597,-952.8937,22.2629}, 
		{0.0,43.2929,-531.3949,10.1840}, 
		{1.0,-149.0187,-364.8881,1.3850}, 
		{0.0,-252.2309,-255.2171,1.3336},
		{0.0,-301.7522,-60.6734,1.1413}, 
		{1.0,-255.1354,99.7430,1.1386}, 
		{0.0,-206.8736,219.9438,11.8093}, 
		{0.0,-228.6118,248.8376,11.3760}, 
		{0.0,-400.1790,280.4744,2.1442}, 
		{0.0,-724.1260,224.4792,2.3478}, 
		{0.0,-736.3719,109.7619,14.9657}, 
		{0.0,-713.8860,31.4725,34.0627}, 
		{0.0,-843.5101,-47.9633,42.4838}, 
		{0.0,-764.3619,-91.7377,65.6739}, 
		{0.0,-945.0729,-210.7399,40.6020}, 
		{0.0,-902.9855,-248.6557,37.8010}, 
		{0.0,-658.6724,-248.1883,63.3643}, 
		{0.0,-457.6698,-274.7860,42.9692}, 
		{0.0,-261.3885,-277.9011,1.4725}, 
		{1.0,-148.5603,-383.2010,1.0781},
		{0.0,37.5775,-531.7266,10.2088}, 
		{0.0,18.4033,-677.1326,4.3081}, 
		{0.0,-58.5228,-851.6674,13.5633},
		{0.0,-119.2603,-970.5613,25.0395},
		{0.0,-101.5846,-1132.6385,1.2243}, 
		{0.0,-150.1404,-1298.2799,2.7593}, 
		{0.0,19.9827,-1533.4543,4.3205}, 
		{0.0,51.3685,-1539.8364,5.2288},
		{0.0,211.6833,-1657.5304,12.8287},
		{0.0,503.6657,-1729.9471,11.6184}, 
		{0.0,801.4047,-1786.0785,13.3783}, 
		{0.0,976.0775,-1802.1381,14.1444}, 
		{0.0,1042.6550,-1842.5039,13.4881},
		{0.0,1090.2108,-1854.4525,13.4496},
		{0.0,1258.3202,-1854.5090,13.4417},
		{0.0,1260.8673,-1827.1956,13.4533}, 
		{0.0,0.0,0.0,0.0}, 
		{0.0,0.0,0.0,0.0}, 
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{// АВЛС - Лесопилка
		{0.0,1215.3260,-1838.0054,13.4500},
		{0.0,1333.3987,-1856.8008,13.4401},
		{0.0,1486.4301,-1874.2933,13.4464},
		{0.0,1674.2701,-1869.5959,13.4426},
		{0.0,1691.5751,-1828.1887,13.4480},
		{0.0,1806.4355,-1834.5319,13.4301},
		{0.0,1819.0546,-1873.9229,13.4647},
		{1.0,1779.0552,-1912.0532,13.4559},
		{0.0,1776.77405,-1911.54797,13.387}, // LS8
		{0.0,1824.06201,-1858.80701,13.414}, // LS9
		{0.0,1824.57703,-1763.302,13.383}, // LS10
		{0.0,1809.396,-1729.86499,13.391}, // LS11
		{0.0,1677.56702,-1729.63904,13.383}, // LS12
		{0.0,1518.08997,-1729.91504,13.383}, // LS13
		{0.0,1403.70703,-1729.74805,13.391}, // LS14
		{0.0,1386.92798,-1748.62903,13.383}, // LS15
		{0.0,1386.79602,-1857.73303,13.383}, // LS16
		{0.0,1328.63196,-1851.15198,13.383}, // LS17
		{0.0,1230.78894,-1849.75195,13.383}, // LS18
		{0.0,1076.82996,-1849.81604,13.391}, // LS19
		{0.0,938.68103,-1773.56006,13.671}, // LS20
		{0.0,687.586,-1741.99597,13.295}, // LS21
		{0.0,357.271,-1698.89795,6.707}, // LS22
		{0.0,167.481,-1572.02698,12.449}, // LS23
		{0.0,71.524,-1526.729,4.947}, // LS24
		{0.0,-28.371,-1531.06201,1.926}, // LS25
		{0.0,-232.912,-1661.05798,2.477}, // LS26
		{0.0,-282.37601,-1873.90601,24.692}, // LS27
		{1.0,-298.67401,-2100.78394,40.422}, // LS28
		{0.0,-489.76199,-2169.72803,57.458}, // LS29
		{0.0,-700.46698,-2292.21899,23.645}, // LS30
		{0.0,-946.01801,-2595.70996,89.336}, // LS 31
		{0.0,-1179.64197,-2492.70605,61.711},
		{0.0,-1134.45703,-2259.5481,34.582},
		{0.0,-971.46802,-1917.75903,80.543},
		{0.0,-1062.68604,-1902.02795,77.232},
		{0.0,-1228.64404,-1759.55103,46.758},
		{0.0,-1462.67896,-1618.93396,43.864},
		{0.0,-1593.95801,-1604.0,36.258},
		{0.0,-1824.12305,-1721.57495,29.102},
		{0.0,-1991.20105,-1854.95496,40.45},
		{0.0,-2106.67212,-2073.6311,63.252},
		{0.0,-2250.64111,-2197.86011,34.662},
		{0.0,-2217.146,-2267.66895,30.469},
		{0.0,-2109.48804,-2353.66797,30.469},
		{0.0,-2138.18408,-2420.29395,30.467},
		{1.0,-2041.37402,-2497.37305,31.054},
		{0.0,-1917.09399,-2635.41309,47.686},
		{0.0,-1877.42102,-2696.82104,54.094},
		{0.0,-1689.27905,-2710.37891,47.257},
		{0.0,-1429.92102,-2925.21899,46.922},
		{0.0,-1182.77197,-2869.68188,67.719},
		{0.0,-811.927,-2828.35791,55.787},
		{0.0,-480.59601,-2809.71704,47.597},
		{0.0,-81.911,-2867.66602,39.301},
		{0.0,-21.919,-2545.32593,37.4},
		{0.0,-260.47101,-2241.94702,28.31},
		{0.0,-341.74399,-1960.30005,25.582},
		{0.0,-254.903,-1636.58203,15.547},
		{0.0,-87.408,-1432.98706,12.512},
		{0.0,113.265,-1272.78796,14.949},
		{0.0,440.66,-1140.72498,30.799},
		{0.0,584.62799,-1171.06104,23.848},
		{0.0,620.14301,-1230.651,18.082},
		{0.0,624.93597,-1374.03796,13.504},
		{0.0,698.39697,-1408.28406,13.391},
		{1.0,778.284,-1408.22998,13.372},
		{0.0,933.914,-1408.39905,13.257},
		{0.0,1047.85803,-1408.08203,13.329},
		{0.0,1035.09399,-1557.19104,13.358},
		{0.0,1034.92297,-1678.198,13.383},
		{0.0,1050.76697,-1714.59802,13.383},
		{0.0,1158.63501,-1714.71204,13.781},
		{0.0,1172.80505,-1785.81897,13.398},
		{0.0,1191.36304,-1855.00098,13.4},
		{0.0,1270.10095,-1841.38403,13.396},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{ // АВЛС - Банк - Автошкола
		{0.0,1215.3260,-1838.0054,13.4500},
		{0.0,1333.3987,-1856.8008,13.4401},
		{0.0,1486.4301,-1874.2933,13.4464},
		{0.0,1674.2701,-1869.5959,13.4426},
		{0.0,1691.5751,-1828.1887,13.4480},
		{0.0,1806.4355,-1834.5319,13.4301},
		{0.0,1819.0546,-1873.9229,13.4647},
		{1.0,1779.0552,-1912.0532,13.4559},
		{0.0,1807.7853,-1893.3148,13.5328},
		{0.0,1824.1250,-1824.0508,13.4871}, 
		{1.0,1824.9720,-1679.1637,13.4440}, 
		{0.0,1824.2865,-1628.4456,13.4397}, 
		{0.0,1797.2766,-1609.5615,13.4053}, 
		{0.0,1687.1907,-1590.4596,13.4438}, 
		{0.0,1589.0923,-1590.1179,13.4475},
		{1.0,1472.0792,-1589.1285,13.4472}, 
		{0.0,1447.1288,-1589.7773,13.4360}, 
		{0.0,1378.3844,-1583.5049,13.4336},
		{0.0,1329.2758,-1571.2543,13.4223}, 
		{0.0,1315.3279,-1535.2875,13.4487}, 
		{0.0,1339.5587,-1490.2737,13.4462}, 
		{0.0,1354.9309,-1426.8478,13.4520}, 
		{1.0,1296.1389,-1392.4429,13.3277}, 
		{0.0,1240.5802,-1393.1616,13.1958},
		{0.0,1207.1169,-1375.5135,13.3412}, 
		{1.0,1209.0981,-1322.3440,13.4622},
		{0.0,1177.7158,-1278.9457,13.4591}, 
		{0.0,1080.0758,-1278.3639,13.4714},
		{0.0,1056.1688,-1335.1259,13.4466}, 
		{0.0,1056.3002,-1377.5176,13.5088}, 
		{0.0,1027.6252,-1398.4432,13.2170}, 
		{0.0,969.8828,-1398.0747,13.1279}, 
		{0.0,804.0782,-1392.7827,13.5374}, 
		{1.0,741.8776,-1391.9899,13.5168},
		{0.0,684.9726,-1392.6532,13.4572},
		{0.0,654.5139,-1393.0236,13.4998},
		{0.0,640.0137,-1339.0952,13.4462},
		{0.0,635.7014,-1232.3160,17.8034}, 
		{0.0,662.3267,-1198.8881,17.8619}, 
		{0.0,709.7277,-1130.0580,17.1765},
		{0.0,839.3014,-1040.2860,25.1517}, 
		{0.0,931.2985,-981.0266,38.3490},
		{0.0,1073.5692,-962.0134,42.5478},
		{0.0,1140.2147,-957.6910,42.5991}, 
		{1.0,1206.7061,-949.3026,42.7670},
		{0.0,1261.0939,-979.9332,37.3595}, 
		{0.0,1260.5320,-1066.5033,29.0543},
		{0.0,1260.4008,-1122.8914,24.1267},
		{1.0,1303.2032,-1152.1542,23.7176},
		{0.0,1368.4347,-1144.1094,23.7198}, 
		{0.0,1509.0067,-1163.0048,23.9722}, 
		{1.0,1655.0857,-1163.9010,23.8544},
		{0.0,1724.9634,-1163.5212,23.7110},
		{0.0,1784.4431,-1174.7693,23.7208}, 
		{0.0,1833.6322,-1183.0609,23.6776}, 
		{0.0,1845.9751,-1215.3093,19.6258}, 
		{0.0,1845.5454,-1279.9420,13.4508}, 
		{0.0,1845.4575,-1430.8671,13.4539}, 
		{0.0,1828.9199,-1547.0852,13.4411},
		{0.0,1819.0068,-1630.1299,13.4459}, 
		{1.0,1818.5881,-1678.8138,13.4470},
		{0.0,1819.2369,-1796.1860,13.4489}, 
		{0.0,1802.2902,-1830.0433,13.4596}, 
		{0.0,1705.3912,-1809.4994,13.4341}, 
		{0.0,1687.6646,-1834.1592,13.4473}, 
		{0.0,1636.5266,-1869.9569,13.4484}, 
		{0.0,1513.1302,-1869.9481,13.4464}, 
		{0.0,1329.5339,-1850.9509,13.4504},
		{0.0,1280.9746,-1850.2411,13.4591}, 
		{0.0,1257.6544,-1828.6670,13.4414}, 
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}, 
		{0.0,0.0,0.0,0.0}, 
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{ // внутригородской
		{0.0,1214.2271,-1841.6237,13.4829}, // Автобус ЛС - Яблочный сад 1
		{0.0,1337.0187,-1858.6047,13.4910}, // Автобус ЛС - Яблочный сад 2
		{0.0,1489.79102,-1874.83801,13.383}, // Автобус ЛС - Яблочный сад 3
		{0.0,1678.65796,-1867.22095,13.391}, // Автобус ЛС - Яблочный сад 4
		{0.0,1691.49304,-1822.09204,13.383}, // Автобус ЛС - Яблочный сад 5
		{0.0,1808.24695,-1834.49194,13.383}, // Автобус ЛС - Яблочный сад 6
		{1.0,1818.30603,-1869.72998,13.414}, // Автобус ЛС - Яблочный сад 7 ОСТ
		{0.0,1820.32605,-1933.59705,13.376}, // Автобус ЛС - Яблочный сад 7
		{0.0,1946.16602,-1935.06104,13.383}, // Автобус ЛС - Яблочный сад 8
		{0.0,1963.74597,-1891.98096,13.383}, // Автобус ЛС - Яблочный сад 9
		{0.0,1964.62,-1767.19995,13.383}, // Автобус ЛС - Яблочный сад 10
		{0.0,1930.02905,-1749.42896,13.383}, // Автобус ЛС - Яблочный сад 11
		{0.0,1836.02002,-1749.65198,13.383}, // Автобус ЛС - Яблочный сад 12 ОСТ
		{0.0,1811.11694,-1730.422,13.391}, // Автобус ЛС - Яблочный сад 12
		{0.0,1704.27002,-1729.66699,13.383}, // АВЛС - ЖДСФ 1
		{0.0,1551.18896,-1729.98804,13.383}, // АВЛС - ЖДСФ 2
		{0.0,1532.05103,-1720.92395,13.383}, // АВЛС - ЖДСФ 3
		{1.0,1532.29797,-1651.13696,13.383}, // АВЛС - ЖДСФ 4
		{0.0,1508.27905,-1589.38403,13.383}, // АВЛС - ЖДСФ 5
		{0.0,1418.80896,-1589.71802,13.367}, // АВЛС - ЖДСФ 6 ОСТ ЛСПД
		{0.0,1328.44897,-1570.95203,13.359}, // АВЛС - ЖДСФ 6 ОСТ ЛСПД
		{0.0,1322.35901,-1531.17102,13.383}, // АВЛС - ЖДСФ 7
		{0.0,1355.32397,-1421.53003,13.391}, // АВЛС - ЖДСФ 8
		{1.0,1329.96106,-1393.16895,13.382}, // АВЛС - ЖДСФ 9
		{1.0,1226.50806,-1392.61499,13.208}, // АВЛС - ЖДСФ 10
		{0.0,1078.82495,-1393.16602,13.593}, // АВЛС - ЖДСФ 11
		{0.0,906.12299,-1392.49695,13.205}, // АВЛС - ЖДСФ 12
		{1.0,760.44098,-1392.39001,13.446}, // АВЛС - ЖДСФ 13
		{0.0,650.67999,-1392.078,13.485}, // АВЛС - ЖДСФ 14 ОСТ БОЛЬНИЦА
		{1.0,624.724,-1468.12598,14.363}, // АВЛС - ЖДСФ 14 ОСТ БОЛЬНИЦА
		{0.0,629.59998,-1571.15698,15.454}, // АВЛС - ЖДСФ 15
		{0.0,648.77002,-1588.78003,15.451}, // АВЛС - ЖДСФ 16
		{0.0,825.52899,-1606.49695,13.383}, // АВЛС - ЖДСФ 17
		{0.0,902.216,-1575.026,13.383}, // АВЛС - ЖДСФ 18 ОСТ АШ
		{0.0,1026.58801,-1573.276,13.383}, // АВЛС - ЖДСФ 18 ОСТ АШ
		{0.0,1034.90906,-1584.40601,13.383}, // АВЛС - ЖДСФ 19
		{0.0,1034.61694,-1702.22595,13.383}, // АВЛС - ЖДСФ 20
		{0.0,1086.38,-1714.76697,13.383}, // АВЛС - ЖДСФ 21
		{0.0,1160.85205,-1714.95801,13.779}, // АВЛС - ЖДСФ 22
		{0.0,1172.19604,-1787.13501,13.398}, // АВЛС - ЖДСФ 23
		{0.0,1193.81201,-1855.31799,13.398}, // АВЛС - ЖДСФ 24
		{0.0,1213.83203,-1843.16296,13.383}, // АВЛС - ЖДСФ 25
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,1214.2271,-1841.6237,13.4829}, // Автобус ЛС - Яблочный сад 1
		{0.0,1337.0187,-1858.6047,13.4910}, // Автобус ЛС - Яблочный сад 2
		{0.0,1556.0479,-1874.5721,13.4841}, // Автобус ЛС - Яблочный сад 3
		{0.0,1691.2279,-1830.6217,13.4858}, // Автобус ЛС - Яблочный сад 4
		{0.0,1801.5131,-1834.5245,13.4789}, // Автобус ЛС - Яблочный сад 5
		{0.0,1819.7594,-1875.0637,13.4980}, // Автобус ЛС - Яблочный сад 6
		{1.0,1777.3118,-1917.5198,13.5080}, // Автобус ЛС - Яблочный сад 7 ОСТ
		{0.0,1777.3118,-1917.5198,13.5080}, // Автобус ЛС - Яблочный сад 7
		{0.0,1804.4498,-1894.3840,13.5065}, // Автобус ЛС - Яблочный сад 8
		{0.0,1855.0417,-1935.1912,13.4802}, // Автобус ЛС - Яблочный сад 9
		{0.0,1944.5377,-1933.8118,13.4847}, // Автобус ЛС - Яблочный сад 10
		{0.0,1959.1832,-2039.9878,13.4835}, // Автобус ЛС - Яблочный сад 11
		{1.0,2025.6941,-2022.0990,13.6752}, // Автобус ЛС - Яблочный сад 12 ОСТ
		{0.0,2025.6941,-2022.0990,13.6752}, // Автобус ЛС - Яблочный сад 12
		{0.0,1976.0389,-1995.5121,13.6902}, // Автобус ЛС - Яблочный сад 13
		{0.0,1964.3895,-1986.8088,13.4881}, // АВЛС - ЖДЛВ
		{0.0,1964.2737,-1779.0786,13.4838}, // АВЛС - ЖДЛВ
		{0.0,1841.3989,-1749.0479,13.4838}, // АВЛС - ЖДЛВ
		{0.0,1768.5527,-1729.8423,13.4840}, // АВЛС - ЖДЛВ
		{0.0,1571.9257,-1729.1656,13.4838}, // АВЛС - ЖДЛВ
		{1.0,1535.6764,-1674.0948,13.4848}, // АВЛС - ЖДЛВ ОСТ ЛСПД
		{0.0,1535.6764,-1674.0948,13.4848}, // АВЛС - ЖДЛВ ОСТ ЛСПД
		{0.0,1532.4268,-1607.3379,13.4823}, // АВЛС - ЖДЛВ
		{0.0,1419.6753,-1590.2869,13.4705}, // АВЛС - ЖДЛВ
		{0.0,1325.3134,-1571.1428,13.4636}, // АВЛС - ЖДЛВ
		{0.0,1355.1908,-1425.0554,13.4918}, // АВЛС - ЖДЛВ
		{0.0,1307.0311,-1398.9163,13.3520}, // АВЛС - ЖДЛВ
		{0.0,1231.1937,-1397.5558,13.2136}, // АВЛС - ЖДЛВ
		{1.0,1211.2694,-1335.3163,13.5800}, // АВЛС - ЖДЛВ ОСТ Больница ЛС
		{0.0,1211.2694,-1335.3163,13.5800}, // АВЛС - ЖДЛВ ОСТ Больница ЛС
		{0.0,1218.1603,-1167.0958,23.0242}, // АВЛС - ЖДЛВ
		{0.0,1312.0769,-1147.6741,23.7577}, // АВЛС - ЖДЛВ
		{0.0,1375.0165,-965.0331,33.8391}, // АВЛС - ЖДЛВ
		{0.0,1451.0409,-960.9687,36.1465}, // АВЛС - ЖДЛВ
		{0.0,1541.9932,-993.3146,43.2385}, // АВЛС - ЖДЛВ
		{0.0,1714.9706,-863.3711,58.4345}, // АВЛС - ЖДЛВ
		{0.0,1717.2285,-552.4230,35.8195}, // АВЛС - ЖДЛВ
		{0.0,1678.0281,-243.9397,42.9094}, // АВЛС - ЖДЛВ
		{0.0,1639.5632,-5.3570,36.7284}, // АВЛС - ЖДЛВ
		{0.0,1681.5200,341.1547,30.2688}, // АВЛС - ЖДЛВ
		{0.0,1773.4552,609.8650,21.7300}, // АВЛС - ЖДЛВ
		{0.0,1808.3149,824.0667,10.8020}, // АВЛС - ЖДЛВ
		{0.0,2047.3458,840.9211,6.8250}, // АВЛС - ЖДЛВ
		{0.0,2068.7295,1136.6163,10.7852}, // АВЛС - ЖДЛВ
		{1.0,2076.8447,1395.0903,10.8394}, // АВЛС - ЖДЛВ ОСТ автосалон ЛВ
		{0.0,2076.8447,1395.0903,10.8394}, // АВЛС - ЖДЛВ ОСТ автосалон ЛВ
		{0.0,2150.0464,1880.3892,10.7784}, // АВЛС - ЖДЛВ
		{0.0,2150.0901,2106.5635,10.7764}, // АВЛС - ЖДЛВ
		{1.0,2190.6689,2132.9546,10.7711}, // АВЛС - ЖДЛВ ОСТ Казино
		{0.0,2190.6689,2132.9546,10.7711}, // АВЛС - ЖДЛВ ОСТ Казино
		{0.0,2339.8977,2134.8503,10.7833}, // АВЛС - ЖДЛВ
		{0.0,2494.4424,2134.8115,10.7727}, // АВЛС - ЖДЛВ
		{0.0,2614.4578,2111.2222,10.7726}, // АВЛС - ЖДЛВ
		{0.0,2698.8152,1980.1976,6.8446}, // АВЛС - ЖДЛВ
		{0.0,2706.7600,1654.6088,6.8352}, // АВЛС - ЖДЛВ
		{0.0,2637.7083,1490.6335,10.7568}, // АВЛС - ЖДЛВ
		{0.0,2731.0884,1472.1692,13.6653}, // АВЛС - ЖДЛВ
		{0.0,2808.8750,1471.8922,10.8651}, // АВЛС - ЖДЛВ
		{0.0,2825.0698,1370.6274,10.8506}, // АВЛС - ЖДЛВ
		{0.0,2812.2595,1306.3754,10.8515}, // АВЛС - ЖДЛВ
		{1.0,2838.8772,1278.6033,10.9514}, // АВЛС - ЖДЛВ ОСТ ЖДЛВ
		{0.0,2838.8772,1278.6033,10.9514}, // АВЛС - ЖДЛВ ОСТ ЖДЛВ
		{0.0,2829.7717,1364.4343,10.8502}, // АВЛС - ЖДЛВ
		{0.0,2738.9294,1593.7034,6.8228}, // АВЛС - ЖДЛВ
		{0.0,2721.9519,1612.3257,6.8247}, // АВЛС - ЖДЛВ
		{0.0,2704.9534,1566.8306,6.8366}, // АВЛС - ЖДЛВ
		{0.0,2691.4341,1032.9639,6.8414}, // АВЛС - ЖДЛВ
		{0.0,2452.2925,852.0750,6.8385}, // АВЛС - ЖДЛВ
		{0.0,2263.2485,855.4351,6.8354}, // АВЛС - ЖДЛВ
		{0.0,2008.8618,853.6462,6.8357}, // АВЛС - ЖДЛВ
		{0.0,1817.3739,851.6034,10.7433}, // АВЛС - ЖДЛВ
		{0.0,1785.2819,815.5065,10.9304}, // АВЛС - ЖДЛВ
		{0.0,1726.0603,515.6217,28.6511}, // АВЛС - ЖДЛВ
		{0.0,1620.2179,168.5696,34.6889}, // АВЛС - ЖДЛВ
		{0.0,1661.9821,-242.1901,38.3402}, // АВЛС - ЖДЛВ
		{0.0,1687.5999,-740.8577,51.1203}, // АВЛС - ЖДЛВ
		{0.0,1482.0156,-937.6389,36.5790}, // АВЛС - ЖДЛВ
		{0.0,1383.4220,-938.9413,34.2691}, // АВЛС - ЖДЛВ
		{0.0,1352.5049,-1013.6958,26.7127}, // АВЛС - ЖДЛВ
		{0.0,1345.9933,-1129.7567,23.7602}, // АВЛС - ЖДЛВ
		{0.0,1343.7898,-1314.3254,13.4755}, // АВЛС - ЖДЛВ
		{0.0,1321.3065,-1495.8490,13.4834}, // АВЛС - ЖДЛВ
		{0.0,1295.1565,-1713.8878,13.4843}, // АВЛС - ЖДЛВ
		{0.0,1295.1361,-1817.7592,13.4837}, // АВЛС - ЖДЛВ
		{0.0,1277.6897,-1848.3373,13.4848}, // АВЛС - ЖДЛВ
		{1.0,1228.7788,-1827.2336,13.5090}, // Автобус ЛС - Яблочный сад 59 ОСТ конечная
		{0.0,1228.7788,-1827.2336,13.5090}, // Автобус ЛС - Яблочный сад 59 ОСТ конечная
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,2811.6599,1264.9022,10.8839}, // ЖДЛВ - АВЛС
		{1.0,2839.3447,1293.5128,10.9767}, // ЖДЛВ - АВЛС ОСТ ЖДЛВ
		{0.0,2839.3447,1293.5128,10.9767}, // ЖДЛВ - АВЛС ОСТ ЖДЛВ
		{0.0,2830.0520,1382.6539,10.8852}, // ЖДЛВ - АВЛС
		{0.0,2800.3811,1488.0938,10.7947}, // ЖДЛВ - АВЛС
		{0.0,2730.8894,1769.9720,6.8679}, // ЖДЛВ - АВЛС
		{0.0,2764.8594,2030.2826,8.4789}, // ЖДЛВ - АВЛС
		{0.0,2798.1301,2097.5002,10.7904}, // ЖДЛВ - АВЛС
		{0.0,2677.1587,2115.5266,12.1905}, // ЖДЛВ - АВЛС
		{0.0,2542.9248,2115.5112,10.8049}, // ЖДЛВ - АВЛС
		{0.0,2507.1006,2148.8538,10.8056}, // ЖДЛВ - АВЛС
		{0.0,2354.8066,2151.6348,10.8948}, // ЖДЛВ - АВЛС
		{1.0,2189.1946,2153.8804,10.8769}, // ЖДЛВ - АВЛС ОСТ КАЗИНО ЛВ
		{0.0,2189.1946,2153.8804,10.8769}, // ЖДЛВ - АВЛС ОСТ КАЗИНО ЛВ
		{0.0,2138.1609,2151.6978,10.8052}, // ЖДЛВ - АВЛС
		{1.0,2117.9849,1937.6003,10.8765}, // ЖДЛВ - АВЛС ОСТ Отель ЛВ
		{0.0,2117.9849,1937.6003,10.8765}, // ЖДЛВ - АВЛС ОСТ Отель ЛВ
		{0.0,2105.0200,1822.4395,10.8057}, // ЖДЛВ - АВЛС
		{0.0,2055.6917,1725.1305,10.8069}, // ЖДЛВ - АВЛС
		{0.0,1888.5416,1715.0933,10.8304}, // ЖДЛВ - АВЛС
		{0.0,1669.4302,1715.7327,10.8039}, // ЖДЛВ - АВЛС
		{1.0,1652.5247,1828.5485,10.9016}, // ЖДЛВ - АВЛС ОСТ Больница ЛВ
		{0.0,1652.5247,1828.5485,10.9016}, // ЖДЛВ - АВЛС ОСТ Больница ЛВ
		{0.0,1649.5107,1858.9519,10.7941}, // ЖДЛВ - АВЛС
		{0.0,1586.0669,1875.8157,10.8031}, // ЖДЛВ - АВЛС
		{0.0,1565.1235,1829.7086,10.8970}, // ЖДЛВ - АВЛС
		{0.0,1605.4042,1710.9758,10.8080}, // ЖДЛВ - АВЛС
		{0.0,1698.8910,1710.9238,10.8060}, // ЖДЛВ - АВЛС
		{0.0,1783.7328,1554.8937,6.8780}, // ЖДЛВ - АВЛС
		{0.0,1784.9916,1213.9532,6.8763}, // ЖДЛВ - АВЛС
		{0.0,1784.5745,926.7280,8.7216}, // ЖДЛВ - АВЛС
		{0.0,1785.0264,814.5547,10.9753}, // ЖДЛВ - АВЛС
		{0.0,1764.0336,650.4240,19.0520}, // ЖДЛВ - АВЛС
		{0.0,1664.1935,341.3025,30.3802}, // ЖДЛВ - АВЛС
		{0.0,1658.0754,-264.2254,38.8548}, // ЖДЛВ - АВЛС
		{0.0,1698.9503,-538.2750,35.2457}, // ЖДЛВ - АВЛС
		{0.0,1676.9587,-774.2608,54.1092}, // ЖДЛВ - АВЛС
		{0.0,1380.7175,-938.5894,34.3202}, // ЖДЛВ - АВЛС
		{0.0,1354.0558,-1021.8506,26.6601}, // ЖДЛВ - АВЛС
		{0.0,1474.8035,-1036.4746,23.7860}, // ЖДЛВ - АВЛС
		{0.0,1574.8267,-1139.8116,23.7458}, // ЖДЛВ - АВЛС
		{0.0,1693.6605,-1163.3075,23.7857}, // ЖДЛВ - АВЛС
		{1.0,1709.3661,-1339.0776,13.5966}, // ЖДЛВ - АВЛС ОСТ БАнк ЛС
		{0.0,1709.3661,-1339.0776,13.5966}, // ЖДЛВ - АВЛС ОСТ БАнк ЛС
		{0.0,1712.4839,-1428.4733,13.5162}, // ЖДЛВ - АВЛС
		{0.0,1471.2365,-1438.9060,13.5161}, // ЖДЛВ - АВЛС
		{0.0,1427.1078,-1603.3900,13.5158}, // ЖДЛВ - АВЛС
		{0.0,1426.9940,-1705.4247,13.5158}, // ЖДЛВ - АВЛС
		{1.0,1493.9652,-1738.9160,13.6800}, // ЖДЛВ - АВЛС ОСТ Мэрия
		{0.0,1493.9652,-1738.9160,13.6800}, // ЖДЛВ - АВЛС ОСТ Мэрия
		{0.0,1551.0874,-1735.2466,13.5147}, // ЖДЛВ - АВЛС
		{0.0,1567.7570,-1846.1224,13.5416}, // ЖДЛВ - АВЛС
		{0.0,1436.4189,-1870.3555,13.5197}, // ЖДЛВ - АВЛС
		{0.0,1292.2882,-1849.4534,13.5161},// ЖДЛВ - АВЛС
		{1.0,1228.2168,-1826.2201,13.6270}, // ЖДЛВ - АВЛС ОСТ АВЛС
		{0.0,1228.2168,-1826.2201,13.6270}, // ЖДЛВ - АВЛС ОСТ АВЛС
		{0.0,1216.1584,-1838.8870,13.5187}, // ЖДЛВ - АВЛС
		{0.0,1296.9298,-1854.9777,13.5168}, // ЖДЛВ - АВЛС
		{0.0,1311.9849,-1659.5074,13.5162}, // ЖДЛВ - АВЛС
		{0.0,1358.6890,-1300.9633,13.4257}, // ЖДЛВ - АВЛС
		{0.0,1376.9252,-964.4139,33.8415}, // ЖДЛВ - АВЛС
		{0.0,1477.3091,-969.6825,36.6038}, // ЖДЛВ - АВЛС
		{0.0,1703.4259,-909.2404,53.5434}, // ЖДЛВ - АВЛС
		{0.0,1714.0291,-641.4417,41.4720}, // ЖДЛВ - АВЛС
		{0.0,1682.7441,-331.3966,45.1686}, // ЖДЛВ - АВЛС
		{0.0,1624.7516,122.8967,36.8080}, // ЖДЛВ - АВЛС
		{0.0,1730.0817,475.3436,30.2632}, // ЖДЛВ - АВЛС
		{0.0,1807.5977,801.7347,11.2282}, // ЖДЛВ - АВЛС
		{0.0,2037.1251,833.1800,6.8596}, // ЖДЛВ - АВЛС
		{0.0,2446.5486,832.4109,6.8679}, // ЖДЛВ - АВЛС
		{0.0,2697.4641,990.9603,6.8673}, // ЖДЛВ - АВЛС
		{0.0,2728.5237,1295.2372,6.8678}, // ЖДЛВ - АВЛС
		{0.0,2797.4832,1455.0337,10.7988}, // ЖДЛВ - АВЛС
		{0.0,2825.5657,1371.6364,10.8826}, // ЖДЛВ - АВЛС
		{0.0,2819.3682,1267.0796,10.8893}, // ЖДЛВ - АВЛС
		{1.0,2840.2212,1276.3347,10.9786}, // ЖДЛВ - АВЛС ОСТ ЖДЛВ
		{0.0,2840.2212,1276.3347,10.9786}, // ЖДЛВ - АВЛС ОСТ ЖДЛВ
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,-1990.0763,193.2773,27.7563}, // ЖДСФ - АВЛС
		{0.0,-2009.9574,142.6636,27.6721}, // ЖДСФ - АВЛС
		{1.0,-1984.6704,146.6337,27.8411}, // ЖДСФ - АВЛС ОСТ ЖДСФ
		{0.0,-1984.6704,146.6337,27.8411}, // ЖДСФ - АВЛС ОСТ ЖДСФ
		{0.0,-2003.1953,229.4114,28.3929}, // ЖДСФ - АВЛС
		{0.0,-2001.5217,426.2427,35.1485}, // ЖДСФ - АВЛС
		{1.0,-2024.8417,508.7587,35.2226}, // ЖДСФ - АВЛС ОСТ Универ
		{0.0,-2024.8417,508.7587,35.2226}, // ЖДСФ - АВЛС ОСТ Универ
		{0.0,-2105.2141,506.6866,35.1489}, // ЖДСФ - АВЛС
		{0.0,-2268.7148,510.0154,35.1490}, // ЖДСФ - АВЛС
		{1.0,-2351.0842,513.4455,29.2837}, // ЖДСФ - АВЛС ОСТ БАнк СФ
		{0.0,-2351.0842,513.4455,29.2837}, // ЖДСФ - АВЛС ОСТ БАнк СФ
		{0.0,-2353.0430,466.1475,31.4117}, // ЖДСФ - АВЛС
		{0.0,-2321.3728,429.8806,34.9647}, // ЖДСФ - АВЛС
		{0.0,-2368.7786,362.2540,35.1489}, // ЖДСФ - АВЛС
		{1.0,-2402.1843,326.4380,35.3161}, // ЖДСФ - АВЛС Ост Отель СФ
		{0.0,-2402.1843,326.4380,35.3161}, // ЖДСФ - АВЛС Ост Отель СФ
		{0.0,-2423.1782,-46.7613,35.3056}, // ЖДСФ - АВЛС
		{0.0,-2386.2158,-71.6138,35.2968}, // ЖДСФ - АВЛС
		{0.0,-2284.5950,-192.5336,35.3054}, // ЖДСФ - АВЛС
		{0.0,-2183.4895,-472.7820,47.9329}, // ЖДСФ - АВЛС
		{0.0,-1905.9290,-583.3749,24.5796}, // ЖДСФ - АВЛС
		{0.0,-1781.9854,-584.0237,16.4509}, // ЖДСФ - АВЛС
		{0.0,-1701.2969,-757.5758,39.2007}, // ЖДСФ - АВЛС
		{0.0,-1451.9558,-823.6375,74.4962}, // ЖДСФ - АВЛС
		{0.0,-1229.0071,-771.9417,64.0624}, // ЖДСФ - АВЛС
		{0.0,-1157.0313,-612.7076,38.2038}, // ЖДСФ - АВЛС
		{0.0,-969.8114,-445.1295,34.8067}, // ЖДСФ - АВЛС
		{0.0,-709.3467,-425.5027,16.7009}, // ЖДСФ - АВЛС
		{1.0,-440.0122,-437.6913,16.7004}, // ЖДСФ - АВЛС ОСТ Рыбалка
		{0.0,-440.0122,-437.6913,16.7004}, // ЖДСФ - АВЛС ОСТ Рыбалка
		{0.0,-413.7339,-645.8948,12.8715}, // ЖДСФ - АВЛС
		{0.0,-357.1746,-770.1766,30.0917}, // ЖДСФ - АВЛС
		{0.0,-317.8934,-794.7083,33.8689}, // ЖДСФ - АВЛС
		{0.0,-296.1505,-856.9515,46.3829}, // ЖДСФ - АВЛС
		{0.0,-147.7730,-970.1813,27.6242}, // ЖДСФ - АВЛС
		{0.0,-69.3727,-884.8249,15.4131}, // ЖДСФ - АВЛС
		{0.0,49.1451,-598.0204,4.7461}, // ЖДСФ - АВЛС
		{0.0,-94.9533,-414.4091,1.2135}, // ЖДСФ - АВЛС
		{0.0,-301.2192,-163.6344,1.2109}, // ЖДСФ - АВЛС
		{0.0,-214.9978,-174.7631,2.2938}, // ЖДСФ - АВЛС
		{0.0,-150.1478,-188.9800,2.0520}, // ЖДСФ - АВЛС
		{0.0,-119.1314,-137.9158,3.2545}, // ЖДСФ - АВЛС
		{1.0,-158.1488,-113.0416,3.2489}, // ЖДСФ - АВЛС ОСТ Яблочный сад
		{0.0,-158.1488,-113.0416,3.2489}, // ЖДСФ - АВЛС ОСТ Яблочный сад
		{0.0,-271.4798,-93.4918,3.0950}, // ЖДСФ - АВЛС
		{0.0,-314.8729,-128.6022,1.2111}, // ЖДСФ - АВЛС
		{0.0,20.8937,-210.1649,1.6201}, // ЖДСФ - АВЛС
		{0.0,284.9167,-215.0063,1.5629}, // ЖДСФ - АВЛС
		{0.0,334.9539,-164.5363,1.3148}, // ЖДСФ - АВЛС
		{0.0,543.6616,-146.0867,37.3337}, // ЖДСФ - АВЛС
		{0.0,904.6948,-177.7319,11.1655}, // ЖДСФ - АВЛС
		{0.0,1158.7584,-177.0398,41.3979}, // ЖДСФ - АВЛС
		{0.0,1237.9901,-308.5961,10.4510}, // ЖДСФ - АВЛС
		{0.0,1232.3737,-544.3182,37.8160}, // ЖДСФ - АВЛС
		{0.0,1156.4321,-923.8820,43.0874}, // ЖДСФ - АВЛС
		{0.0,973.0387,-963.6682,39.5489}, // ЖДСФ - АВЛС
		{0.0,960.1107,-1114.3121,23.8347}, // ЖДСФ - АВЛС
		{0.0,940.6979,-1294.4608,14.2958}, // ЖДСФ - АВЛС
		{0.0,737.5104,-1318.1848,13.5246}, // ЖДСФ - АВЛС
		{0.0,660.8900,-1317.1246,13.5552}, // ЖДСФ - АВЛС
		{0.0,629.4893,-1374.7257,13.6372}, // ЖДСФ - АВЛС
		{1.0,733.4760,-1412.3254,13.6597}, // ЖДСФ - АВЛС ОСТ Автошкола
		{0.0,733.4760,-1412.3254,13.6597}, // ЖДСФ - АВЛС ОСТ Автошкола
		{0.0,968.2913,-1403.1016,13.2832}, // ЖДСФ - АВЛС
		{0.0,1363.2635,-1403.7415,13.5083}, // ЖДСФ - АВЛС
		{0.0,1445.7882,-1444.0598,13.5252}, // ЖДСФ - АВЛС
		{0.0,1427.6233,-1573.8146,13.4912}, // ЖДСФ - АВЛС
		{0.0,1516.8811,-1594.5140,13.5150}, // ЖДСФ - АВЛС
		{0.0,1527.7831,-1701.5503,13.5166}, // ЖДСФ - АВЛС
		{1.0,1495.9943,-1726.6743,13.5070}, // ЖДСФ - АВЛС ОСТ Мэрия ЛС
		{0.0,1495.9943,-1726.6743,13.5070}, // ЖДСФ - АВЛС ОСТ Мэрия ЛС
		{0.0,1415.5389,-1729.8356,13.5190}, // ЖДСФ - АВЛС
		{0.0,1387.0298,-1854.5844,13.5189}, // ЖДСФ - АВЛС
		{0.0,1284.4939,-1849.5759,13.5204}, // ЖДСФ - АВЛС
		{1.0,1229.3988,-1826.2620,13.6493}, // ЖДСФ - АВЛС ОСТ АВЛС
		{0.0,1229.3988,-1826.2620,13.6493}, // ЖДСФ - АВЛС ОСТ АВЛС
		{0.0,1214.6980,-1839.8639,13.5158}, // ЖДСФ - АВЛС
		{0.0,1080.9991,-1850.6726,13.5231}, // ЖДСФ - АВЛС
		{0.0,993.9035,-1789.8778,14.1936}, // ЖДСФ - АВЛС
		{0.0,437.2980,-1706.3000,10.2182}, // ЖДСФ - АВЛС
		{0.0,170.3689,-1582.6938,13.1495}, // ЖДСФ - АВЛС
		{0.0,59.0949,-1524.6427,5.1106}, // ЖДСФ - АВЛС
		{0.0,-148.8886,-1379.9684,2.8304}, // ЖДСФ - АВЛС
		{0.0,-87.2297,-1113.2678,1.6921}, // ЖДСФ - АВЛС
		{0.0,-194.1466,-929.8817,35.8891}, // ЖДСФ - АВЛС
		{0.0,-382.6331,-833.9890,47.0683}, // ЖДСФ - АВЛС
		{0.0,-569.3133,-939.5194,59.9852}, // ЖДСФ - АВЛС
		{0.0,-747.7856,-1002.4215,76.8045}, // ЖДСФ - АВЛС
		{0.0,-882.9417,-1102.5907,98.1532}, // ЖДСФ - АВЛС
		{0.0,-991.7566,-1009.1080,94.5069}, // ЖДСФ - АВЛС
		{0.0,-1201.5936,-794.0877,64.7511}, // ЖДСФ - АВЛС
		{0.0,-1438.6663,-817.7955,77.6791}, // ЖДСФ - АВЛС
		{0.0,-1680.7272,-760.0618,41.1703}, // ЖДСФ - АВЛС
		{0.0,-1759.1168,-600.2720,16.3815}, // ЖДСФ - АВЛС
		{0.0,-1804.0962,-574.5425,16.3300}, // ЖДСФ - АВЛС
		{0.0,-1956.4969,-574.8124,24.5895}, // ЖДСФ - АВЛС
		{0.0,-2170.7822,-474.0224,46.2689}, // ЖДСФ - АВЛС
		{0.0,-2254.0413,-240.7402,37.9920}, // ЖДСФ - АВЛС
		{0.0,-2253.0745,-108.7386,35.3116}, // ЖДСФ - АВЛС
		{0.0,-2162.0483,-72.3071,35.3085}, // ЖДСФ - АВЛС
		{0.0,-2027.5092,-72.6452,35.3058}, // ЖДСФ - АВЛС
		{0.0,-2003.8905,22.9682,32.9707}, // ЖДСФ - АВЛС
		{1.0,-1984.5515,146.5591,27.8430}, // ЖДСФ - АВЛС ОСТ ЖДСФ
		{0.0,-1984.5515,146.5591,27.8430}, // ЖДСФ - АВЛС ОСТ ЖДСФ
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	}
};

#define SP_TYPE_NONE 0
#define SP_TYPE_PLAYER 1
#define SP_TYPE_VEHICLE 2

new PlayerText:RECON[MAX_PLAYERS];
new Menu:specmenu;

new gAdmin[MAX_PLAYERS][9],
gAdminTime[MAX_PLAYERS];
new gDaysOfWeek[][10] = {
	"thursday",
	"friday",
	"saturday",
	"sunday",
	"monday",
	"tuesday",
	"wednesday"
};
#define ADMIN_KICK 0
#define ADMIN_BAN 1
#define ADMIN_MUTE 2
#define ADMIN_PM 3
#define ADMIN_WARN 4
#define ADMIN_JAIL 5

#define LOG_MUTE 0
#define LOG_KICK 1
#define LOG_WARN 2
#define LOG_BAN 3
#define LOG_JAIL 4
#define LOG_CHANGENAME 5
#define LOG_UNBAN 6
#define LOG_BANIP 7
#define LOG_UNBANIP 8
#define LOG_SKICK 9
#define LOG_SBAN 10
#define LOG_UNMUTE 11
#define LOG_UNJAIL 12
#define LOG_UVAL 13
#define LOG_GUN 14
#define LOG_DELACC 15
#define LOG_INVENT 16
#define LOG_CASINO 17
#define LOG_UNWARN 18

#define LOGS_INVITE 0
#define LOGS_UNINVITE 1
#define LOGS_RANK 2
#define LOGS_LEAVE 3
#define LOGS_FWARN 4
#define LOGS_FUNWARN 5

enum dInfo {
	dDialog,
	dQuestion[500],
	dAnswers[300],
	dSuccesQwe
}
new QueInfo[7][dInfo] = {
	{2,"Что делать при возниконовении ДТП?",										"Скрыться с места ДТП\nНемедленно остановиться и вызвать полицию\nВызвать сотрудников скорой помощи\nВызвать такси",1},
	{2,"Максимальная скорость в городе?",											"60 км/ч\n90 км/ч\n100 км/ч\n120 км/ч",0},
	{2,"Максимальная скорость за городом?",											"90 км/ч\n100 км/ч\n110 км/ч\n120 км/ч",2},
	{2,"Со скольки лет можно получить вод.удостоверение?",							"14 лет\n16 лет\n18 лет\n20 лет",2},
	{2,"Когда следует включать ближний свет фар?",		 							"В светлое время суток\nВ тёмное время суток\nНе нужно включать\nНужно включать в любое время суток",3},
	{2,"В каком случае разрешена остановка на автомагистрали?",		 				"В любых местах за пределами проезжей части\nПравее линии разметки, обозначающей край проезжей части\nТолько на спец. площадках для стоянки\nЗапрещается",2},
	{2,"Должны ли быть видны гос. номера автомобиля?",		 						"Не должны\nДолжны только спереди\nДолжны только сзади\nДолжны спереди и сзади",3}
},
TestASKMassive[MAX_PLAYERS][7],

/*Float:AutoCP[AUTO_CP_COUNT][3] = {
	{708.9213,-1414.1073,13.2573},
	{756.2823,-1408.0419,13.0956},
	{834.9315,-1408.5364,12.9952},
	{957.5552,-1407.8458,12.9325},
	{1060.3677,-1418.2891,13.0969},
	{1051.6412,-1482.5378,13.1092},
	{1039.0818,-1529.0479,13.0922},
	{1050.5823,-1574.5267,13.1125},
	{1160.3383,-1574.5500,12.9963},
	{1282.7285,-1574.4540,13.1050},
	{1294.8899,-1587.5405,13.1073},
	{1294.7676,-1674.2710,13.1057},
	{1294.7727,-1734.9294,13.1063},
	{1295.3447,-1838.0348,13.1072},
	{1276.6616,-1849.7772,13.1108},
	{1196.4470,-1849.9114,13.1191},
	{1078.5476,-1850.0129,13.1128},
	{1050.4999,-1814.8535,13.3590},
	{932.5054,-1772.6219,13.2358},
	{792.9278,-1766.7230,13.0144},
	{756.8950,-1725.0635,8.4727},
	{753.6493,-1600.0096,13.2303},
	{704.3022,-1584.1146,13.7077},
	{650.4818,-1584.4248,15.0431},
	{640.0670,-1562.3260,15.0978},
	{639.9037,-1421.0099,13.3040},
	{667.8406,-1408.1588,13.1337},
	{706.8156,-1414.6401,13.2615} 
	
}, */
Float:AutoCPMav[11][3] = {
	{749.1631,-1462.2659,74.8871},
	{869.5973,-1465.4916,155.5767},
	{1058.7019,-1470.5471,289.9446},
	{1472.7629,-1481.6451,359.4524},
	{1577.4391,-1426.3091,306.9775},
	{1592.6613,-1353.5502,276.5343},
	{1542.7993,-1311.5277,261.4300},
	{1478.9441,-1188.4463,238.7506},
	{1326.8256,-1145.0355,216.2341},
	{1121.0642,-1150.3367,161.3070},
	{728.8422,-1461.8235,22.2016}
},
Float:AutoCPBoat[24][3] = {
	{727.8423,-1551.1663,-0.5412},
	{725.4751,-1607.2560,-0.6641},
	{736.7734,-1684.3824,-0.5881},
	{721.8061,-1767.5868,-0.6142},
	{727.9071,-1899.2533,-0.3865},
	{658.3818,-1958.1724,-0.6666},
	{575.5618,-1960.0651,-0.4740},
	{491.4004,-2017.8633,-0.5238},
	{423.2883,-2049.4790,-0.6035},
	{353.2865,-2046.0880,-0.5110},
	{200.8210,-2015.0079,-0.5506},
	{72.1406,-2052.6165,-0.5985},
	{210.5877,-2142.4983,-0.6042},
	{279.5049,-2232.9890,-0.4286},
	{394.7160,-2254.8674,-0.6447},
	{569.6115,-2177.8418,-0.4071},
	{698.1786,-2164.8547,-0.4521},
	{719.5759,-2050.9055,-0.4228},
	{721.1992,-1912.3209,-0.6204},
	{723.5691,-1811.7295,-0.5496},
	{725.9909,-1746.2712,-0.5049},
	{728.2756,-1627.5693,-0.4898},
	{729.1445,-1558.6960,-0.4520},
	{731.6976,-1504.2931,-0.5554}
};
enum SADinfo {
	sad_object[9],
Text3D:sad_3dtext,
	sad_fermer[24],
	sad_temp,
	sad_time,
bool:sad_use
};
new sad_area[119],
SI[119][SADinfo],
Float:sad_objects[119][6] = {
	{ -226.486404, 93.764694, -0.948091, -0.000003, 0.000006, -19.899995 },
	{ -216.287322, 89.569213, -0.948091, -0.000006, 0.000013, -19.899990 },
	{ -206.333007, 85.554542, -0.948091, -0.000006, 0.000013, -19.899990 },
	{ -196.133911, 81.359062, -0.948091, -0.000009, 0.000020, -19.899990 },
	{ -185.723388, 78.033241, -0.948091, -0.000009, 0.000020, -19.899990 },
	{ -175.524307, 73.837753, -0.948091, -0.000012, 0.000027, -19.899990 },
	{ -164.655883, 70.929939, -0.948090, -0.000012, 0.000027, -19.899990 },
	{ -154.456802, 66.734458, -0.948090, -0.000015, 0.000034, -19.899990 },
	{ -143.513366, 63.020080, -0.948090, -0.000015, 0.000034, -19.899990 },
	{ -133.314285, 58.824600, -0.948090, -0.000018, 0.000041, -19.899990 },
	{ -229.546340, 80.324729, -0.948090, -0.000005, 0.000014, -19.899995 },
	{ -219.347259, 76.129249, -0.948090, -0.000008, 0.000021, -19.899988 },
	{ -209.392944, 72.114578, -0.948090, -0.000008, 0.000021, -19.899988 },
	{ -199.193847, 67.919097, -0.948090, -0.000012, 0.000028, -19.899988 },
	{ -188.783325, 64.593276, -0.948090, -0.000012, 0.000028, -19.899988 },
	{ -178.584243, 60.397789, -0.948090, -0.000015, 0.000034, -19.899988 },
	{ -167.715820, 57.489974, -0.948090, -0.000015, 0.000034, -19.899988 },
	{ -157.516738, 53.294494, -0.948090, -0.000018, 0.000041, -19.899988 },
	{ -146.573303, 49.580116, -0.948090, -0.000018, 0.000041, -19.899988 },
	{ -136.374221, 45.384635, -0.948090, -0.000021, 0.000048, -19.899988 },
	{ -233.266418, 66.574691, -0.948090, -0.000005, 0.000014, -19.899995 },
	{ -223.067337, 62.379207, -0.948090, -0.000008, 0.000021, -19.899988 },
	{ -213.113021, 58.364536, -0.948090, -0.000008, 0.000021, -19.899988 },
	{ -202.913925, 54.169055, -0.948090, -0.000012, 0.000028, -19.899988 },
	{ -192.503402, 50.843235, -0.948090, -0.000012, 0.000028, -19.899988 },
	{ -182.304321, 46.647747, -0.948090, -0.000015, 0.000034, -19.899988 },
	{ -171.435897, 43.739933, -0.948090, -0.000015, 0.000034, -19.899988 },
	{ -161.236816, 39.544452, -0.948090, -0.000018, 0.000041, -19.899988 },
	{ -150.293380, 35.830074, -0.948090, -0.000018, 0.000041, -19.899988 },
	{ -140.094299, 31.634593, -0.948090, -0.000021, 0.000048, -19.899988 },
	{ -236.326354, 53.134723, -0.948090, -0.000008, 0.000021, -19.899995 },
	{ -226.127273, 48.939243, -0.948090, -0.000011, 0.000028, -19.899988 },
	{ -216.172958, 44.924571, -0.948090, -0.000011, 0.000028, -19.899988 },
	{ -205.973861, 40.729091, -0.948090, -0.000014, 0.000035, -19.899988 },
	{ -195.563339, 37.403270, -0.948090, -0.000014, 0.000035, -19.899988 },
	{ -185.364257, 33.207782, -0.948090, -0.000017, 0.000042, -19.899988 },
	{ -174.495834, 30.299968, -0.948090, -0.000017, 0.000042, -19.899988 },
	{ -164.296752, 26.104488, -0.948090, -0.000021, 0.000049, -19.899988 },
	{ -153.353317, 22.390110, -0.948090, -0.000021, 0.000049, -19.899988 },
	{ -143.154235, 18.194629, -0.948090, -0.000024, 0.000056, -19.899988 },
	{ -242.345413, 43.200313, -0.948090, -0.000010, 0.000028, -23.600004 },
	{ -232.438323, 38.355407, -0.948090, -0.000014, 0.000035, -23.600000 },
	{ -222.763839, 33.706722, -0.948090, -0.000014, 0.000035, -23.600000 },
	{ -212.856750, 28.861812, -0.948090, -0.000017, 0.000042, -23.600000 },
	{ -202.682540, 24.871109, -0.948090, -0.000017, 0.000042, -23.600000 },
	{ -192.775466, 20.026193, -0.948090, -0.000020, 0.000049, -23.600000 },
	{ -182.117355, 16.423072, -0.948090, -0.000020, 0.000049, -23.600000 },
	{ -172.210266, 11.578165, -0.948090, -0.000023, 0.000056, -23.600000 },
	{ -161.529342, 7.165320, -0.948090, -0.000023, 0.000056, -23.600000 },
	{ -151.622253, 2.320413, -0.948090, -0.000026, 0.000063, -23.600000 },
	{ -246.266281, 29.985826, -0.948090, -0.000013, 0.000035, -23.600004 },
	{ -236.359207, 25.140918, -0.948090, -0.000016, 0.000042, -23.600000 },
	{ -226.684707, 20.492237, -0.948090, -0.000016, 0.000042, -23.600000 },
	{ -216.777618, 15.647329, -0.948090, -0.000019, 0.000049, -23.600000 },
	{ -206.603424, 11.656623, -0.948090, -0.000019, 0.000049, -23.600000 },
	{ -196.696334, 6.811707, -0.948090, -0.000023, 0.000056, -23.600000 },
	{ -186.038223, 3.208588, -0.948090, -0.000023, 0.000056, -23.600000 },
	{ -176.131134, -1.636319, -0.948090, -0.000026, 0.000063, -23.600000 },
	{ -165.450210, -6.049163, -0.948090, -0.000026, 0.000063, -23.600000 },
	{ -155.543136, -10.894070, -0.948090, -0.000029, 0.000070, -23.600000 },
	{ -250.865936, 16.504512, -0.948090, -0.000013, 0.000035, -23.600004 },
	{ -240.958847, 11.659602, -0.948090, -0.000016, 0.000042, -23.600000 },
	{ -231.284362, 7.010922, -0.948090, -0.000016, 0.000042, -23.600000 },
	{ -221.377273, 2.166013, -0.948090, -0.000019, 0.000049, -23.600000 },
	{ -211.203063, -1.824692, -0.948090, -0.000019, 0.000049, -23.600000 },
	{ -201.295989, -6.669608, -0.948090, -0.000023, 0.000056, -23.600000 },
	{ -190.637878, -10.272727, -0.948090, -0.000023, 0.000056, -23.600000 },
	{ -180.730789, -15.117635, -0.948090, -0.000026, 0.000063, -23.600000 },
	{ -170.049865, -19.530479, -0.948090, -0.000026, 0.000063, -23.600000 },
	{ -160.142791, -24.375387, -0.948090, -0.000029, 0.000070, -23.600000 },
	{ -254.786804, 3.290025, -0.948090, -0.000016, 0.000042, -23.600004 },
	{ -244.879730, -1.554882, -0.948090, -0.000019, 0.000049, -23.600000 },
	{ -235.205245, -6.203562, -0.948090, -0.000019, 0.000049, -23.600000 },
	{ -225.298141, -11.048471, -0.948090, -0.000022, 0.000056, -23.600000 },
	{ -215.123947, -15.039176, -0.948090, -0.000022, 0.000056, -23.600000 },
	{ -205.216857, -19.884092, -0.948090, -0.000025, 0.000063, -23.600000 },
	{ -194.558746, -23.487211, -0.948090, -0.000025, 0.000063, -23.600000 },
	{ -184.651657, -28.332120, -0.948090, -0.000028, 0.000070, -23.600000 },
	{ -173.970733, -32.744968, -0.948090, -0.000028, 0.000070, -23.600000 },
	{ -164.063659, -37.589874, -0.948090, -0.000031, 0.000077, -23.600000 },
	{ -258.745483, -6.849704, -0.948090, -0.000014, 0.000035, -23.600004 },
	{ -248.838378, -11.694610, -0.948090, -0.000017, 0.000042, -23.600000 },
	{ -239.163894, -16.343296, -0.948090, -0.000017, 0.000042, -23.600000 },
	{ -229.256805, -21.188205, -0.948090, -0.000020, 0.000049, -23.600000 },
	{ -219.082595, -25.178909, -0.948090, -0.000020, 0.000049, -23.600000 },
	{ -209.175521, -30.023824, -0.948090, -0.000023, 0.000056, -23.600000 },
	{ -198.517410, -33.626945, -0.948090, -0.000023, 0.000056, -23.600000 },
	{ -188.610321, -38.471855, -0.948090, -0.000026, 0.000063, -23.600000 },
	{ -177.929397, -42.884696, -0.948090, -0.000026, 0.000063, -23.600000 },
	{ -168.022308, -47.729606, -0.948090, -0.000029, 0.000070, -23.600000 },
	{ -262.666320, -20.064191, -0.948090, -0.000016, 0.000042, -23.600004 },
	{ -252.759262, -24.909099, -0.948090, -0.000019, 0.000049, -23.600000 },
	{ -243.084762, -29.557781, -0.948090, -0.000019, 0.000049, -23.600000 },
	{ -233.177673, -34.402687, -0.948090, -0.000022, 0.000056, -23.600000 },
	{ -223.003479, -38.393394, -0.948090, -0.000022, 0.000056, -23.600000 },
	{ -213.096389, -43.238311, -0.948090, -0.000026, 0.000063, -23.600000 },
	{ -202.438278, -46.841430, -0.948090, -0.000026, 0.000063, -23.600000 },
	{ -192.531188, -51.686336, -0.948090, -0.000029, 0.000070, -23.600000 },
	{ -181.850265, -56.099182, -0.948090, -0.000029, 0.000070, -23.600000 },
	{ -171.943191, -60.944087, -0.948090, -0.000032, 0.000077, -23.600000 },
	{ -267.265991, -33.545505, -0.948090, -0.000016, 0.000042, -23.600004 },
	{ -257.358886, -38.390415, -0.948090, -0.000019, 0.000049, -23.600000 },
	{ -247.684417, -43.039096, -0.948090, -0.000019, 0.000049, -23.600000 },
	{ -237.777328, -47.884006, -0.948090, -0.000022, 0.000056, -23.600000 },
	{ -227.603118, -51.874710, -0.948090, -0.000022, 0.000056, -23.600000 },
	{ -217.696044, -56.719627, -0.948090, -0.000026, 0.000063, -23.600000 },
	{ -207.037933, -60.322746, -0.948090, -0.000026, 0.000063, -23.600000 },
	{ -197.130844, -65.167655, -0.948090, -0.000029, 0.000070, -23.600000 },
	{ -186.449920, -69.580497, -0.948090, -0.000029, 0.000070, -23.600000 },
	{ -176.542846, -74.425407, -0.948090, -0.000032, 0.000077, -23.600000 },
	{ -271.186859, -46.759994, -0.948090, -0.000019, 0.000049, -23.600004 },
	{ -261.279785, -51.604900, -0.948090, -0.000022, 0.000056, -23.600000 },
	{ -251.605300, -56.253582, -0.948090, -0.000022, 0.000056, -23.600000 },
	{ -241.698196, -61.098487, -0.948090, -0.000025, 0.000063, -23.600000 },
	{ -231.524002, -65.089195, -0.948090, -0.000025, 0.000063, -23.600000 },
	{ -221.616912, -69.934112, -0.948090, -0.000028, 0.000070, -23.600000 },
	{ -210.958801, -73.537231, -0.948090, -0.000028, 0.000070, -23.600000 },
	{ -201.051712, -78.382141, -0.948090, -0.000031, 0.000077, -23.600000 },
	{ -190.370788, -82.794982, -0.948090, -0.000031, 0.000077, -23.600000 }
},
Float:sad_stairs[119][6] = {
	{ -226.001708, 93.735031, 2.619222, 0.000007, 0.000001, 84.199958 },
	{ -215.802612, 89.539550, 2.619222, 0.000015, 0.000002, 84.199935 },
	{ -205.848312, 85.524879, 2.619222, 0.000015, 0.000002, 84.199935 },
	{ -195.649230, 81.329399, 2.619222, 0.000022, 0.000004, 84.199913 },
	{ -185.238677, 78.003570, 2.619222, 0.000022, 0.000004, 84.199913 },
	{ -175.039596, 73.808090, 2.619222, 0.000030, 0.000005, 84.199890 },
	{ -164.171188, 70.900276, 2.619222, 0.000030, 0.000005, 84.199890 },
	{ -153.972106, 66.704788, 2.619222, 0.000037, 0.000006, 84.199867 },
	{ -143.028671, 62.990413, 2.619222, 0.000037, 0.000006, 84.199867 },
	{ -132.829589, 58.794933, 2.619222, 0.000045, 0.000008, 84.199844 },
	{ -229.061645, 80.295066, 2.619222, 0.000015, 0.000002, 84.199935 },
	{ -218.862548, 76.099586, 2.619222, 0.000022, 0.000003, 84.199913 },
	{ -208.908248, 72.084915, 2.619222, 0.000022, 0.000003, 84.199913 },
	{ -198.709167, 67.889434, 2.619222, 0.000030, 0.000004, 84.199890 },
	{ -188.298614, 64.563606, 2.619222, 0.000030, 0.000004, 84.199890 },
	{ -178.099533, 60.368125, 2.619222, 0.000037, 0.000006, 84.199867 },
	{ -167.231124, 57.460311, 2.619222, 0.000037, 0.000006, 84.199867 },
	{ -157.032043, 53.264823, 2.619222, 0.000045, 0.000007, 84.199844 },
	{ -146.088607, 49.550449, 2.619222, 0.000045, 0.000007, 84.199844 },
	{ -135.889526, 45.354969, 2.619222, 0.000052, 0.000009, 84.199821 },
	{ -232.781723, 66.545028, 2.619222, 0.000015, 0.000002, 84.199935 },
	{ -222.582626, 62.349544, 2.619222, 0.000022, 0.000003, 84.199913 },
	{ -212.628326, 58.334873, 2.619222, 0.000022, 0.000003, 84.199913 },
	{ -202.429244, 54.139392, 2.619222, 0.000030, 0.000004, 84.199890 },
	{ -192.018692, 50.813564, 2.619222, 0.000030, 0.000004, 84.199890 },
	{ -181.819610, 46.618083, 2.619222, 0.000037, 0.000006, 84.199867 },
	{ -170.951202, 43.710269, 2.619222, 0.000037, 0.000006, 84.199867 },
	{ -160.752120, 39.514781, 2.619222, 0.000045, 0.000007, 84.199844 },
	{ -149.808685, 35.800407, 2.619222, 0.000045, 0.000007, 84.199844 },
	{ -139.609603, 31.604927, 2.619222, 0.000052, 0.000009, 84.199821 },
	{ -235.841659, 53.105060, 2.619222, 0.000022, 0.000002, 84.199913 },
	{ -225.642562, 48.909580, 2.619222, 0.000030, 0.000004, 84.199890 },
	{ -215.688262, 44.894908, 2.619222, 0.000030, 0.000004, 84.199890 },
	{ -205.489181, 40.699428, 2.619222, 0.000037, 0.000005, 84.199867 },
	{ -195.078628, 37.373600, 2.619222, 0.000037, 0.000005, 84.199867 },
	{ -184.879547, 33.178119, 2.619222, 0.000045, 0.000007, 84.199844 },
	{ -174.011138, 30.270305, 2.619222, 0.000045, 0.000007, 84.199844 },
	{ -163.812057, 26.074817, 2.619222, 0.000052, 0.000008, 84.199821 },
	{ -152.868621, 22.360443, 2.619222, 0.000052, 0.000008, 84.199821 },
	{ -142.669540, 18.164962, 2.619222, 0.000060, 0.000009, 84.199798 },
	{ -241.863632, 43.139434, 2.619222, 0.000030, 0.000003, 80.499885 },
	{ -231.956542, 38.294525, 2.619222, 0.000037, 0.000005, 80.499855 },
	{ -222.282073, 33.645843, 2.619222, 0.000037, 0.000005, 80.499855 },
	{ -212.374984, 28.800935, 2.619222, 0.000045, 0.000006, 80.499839 },
	{ -202.200759, 24.810218, 2.619222, 0.000045, 0.000006, 80.499839 },
	{ -192.293685, 19.965311, 2.619222, 0.000052, 0.000007, 80.499816 },
	{ -181.635574, 16.362194, 2.619222, 0.000052, 0.000007, 80.499816 },
	{ -171.728500, 11.517277, 2.619222, 0.000060, 0.000009, 80.499786 },
	{ -161.047561, 7.104437, 2.619222, 0.000060, 0.000009, 80.499786 },
	{ -151.140487, 2.259530, 2.619222, 0.000067, 0.000010, 80.499763 },
	{ -245.784515, 29.924945, 2.619222, 0.000037, 0.000004, 80.499855 },
	{ -235.877410, 25.080036, 2.619222, 0.000045, 0.000005, 80.499839 },
	{ -226.202941, 20.431358, 2.619222, 0.000045, 0.000005, 80.499839 },
	{ -216.295852, 15.586450, 2.619222, 0.000052, 0.000007, 80.499816 },
	{ -206.121627, 11.595735, 2.619222, 0.000052, 0.000007, 80.499816 },
	{ -196.214569, 6.750826, 2.619222, 0.000060, 0.000008, 80.499786 },
	{ -185.556442, 3.147708, 2.619222, 0.000060, 0.000008, 80.499786 },
	{ -175.649368, -1.697207, 2.619222, 0.000067, 0.000009, 80.499763 },
	{ -164.968444, -6.110047, 2.619222, 0.000067, 0.000009, 80.499763 },
	{ -155.061355, -10.954955, 2.619222, 0.000075, 0.000011, 80.499748 },
	{ -250.384155, 16.443634, 2.619222, 0.000037, 0.000004, 80.499855 },
	{ -240.477066, 11.598720, 2.619222, 0.000045, 0.000005, 80.499839 },
	{ -230.802597, 6.950041, 2.619222, 0.000045, 0.000005, 80.499839 },
	{ -220.895507, 2.105134, 2.619222, 0.000052, 0.000007, 80.499816 },
	{ -210.721282, -1.885581, 2.619222, 0.000052, 0.000007, 80.499816 },
	{ -200.814193, -6.730488, 2.619222, 0.000060, 0.000008, 80.499786 },
	{ -190.156097, -10.333607, 2.619222, 0.000060, 0.000008, 80.499786 },
	{ -180.249023, -15.178524, 2.619222, 0.000067, 0.000009, 80.499763 },
	{ -169.568084, -19.591361, 2.619222, 0.000067, 0.000009, 80.499763 },
	{ -159.661010, -24.436271, 2.619222, 0.000075, 0.000011, 80.499748 },
	{ -254.305038, 3.229145, 2.619222, 0.000045, 0.000005, 80.499839 },
	{ -244.397933, -1.615763, 2.619222, 0.000052, 0.000006, 80.499816 },
	{ -234.723464, -6.264442, 2.619222, 0.000052, 0.000006, 80.499816 },
	{ -224.816375, -11.109350, 2.619222, 0.000060, 0.000007, 80.499786 },
	{ -214.642150, -15.100067, 2.619222, 0.000060, 0.000007, 80.499786 },
	{ -204.735076, -19.944974, 2.619222, 0.000067, 0.000009, 80.499763 },
	{ -194.076965, -23.548091, 2.619222, 0.000067, 0.000009, 80.499763 },
	{ -184.169891, -28.393007, 2.619222, 0.000075, 0.000010, 80.499748 },
	{ -173.488967, -32.805850, 2.619222, 0.000075, 0.000010, 80.499748 },
	{ -163.581878, -37.650753, 2.619222, 0.000082, 0.000012, 80.499725 },
	{ -258.263671, -6.910583, 2.619222, 0.000037, 0.000004, 80.499862 },
	{ -248.356597, -11.755493, 2.619222, 0.000045, 0.000006, 80.499832 },
	{ -238.682128, -16.404174, 2.619222, 0.000045, 0.000006, 80.499832 },
	{ -228.775039, -21.249082, 2.619222, 0.000052, 0.000007, 80.499816 },
	{ -218.600814, -25.239799, 2.619222, 0.000052, 0.000007, 80.499816 },
	{ -208.693740, -30.084707, 2.619222, 0.000060, 0.000009, 80.499794 },
	{ -198.035629, -33.687824, 2.619222, 0.000060, 0.000009, 80.499794 },
	{ -188.128555, -38.532741, 2.619222, 0.000067, 0.000010, 80.499763 },
	{ -177.447616, -42.945579, 2.619222, 0.000067, 0.000010, 80.499763 },
	{ -167.540542, -47.790489, 2.619222, 0.000075, 0.000011, 80.499740 },
	{ -262.184570, -20.125072, 2.619222, 0.000045, 0.000005, 80.499832 },
	{ -252.277465, -24.969982, 2.619222, 0.000052, 0.000007, 80.499816 },
	{ -242.602996, -29.618659, 2.619222, 0.000052, 0.000007, 80.499816 },
	{ -232.695907, -34.463569, 2.619222, 0.000060, 0.000008, 80.499794 },
	{ -222.521682, -38.454284, 2.619222, 0.000060, 0.000008, 80.499794 },
	{ -212.614624, -43.299190, 2.619222, 0.000067, 0.000009, 80.499763 },
	{ -201.956497, -46.902309, 2.619222, 0.000067, 0.000009, 80.499763 },
	{ -192.049423, -51.747226, 2.619222, 0.000075, 0.000011, 80.499740 },
	{ -181.368499, -56.160064, 2.619222, 0.000075, 0.000011, 80.499740 },
	{ -171.461410, -61.004974, 2.619222, 0.000082, 0.000012, 80.499725 },
	{ -266.784210, -33.606384, 2.619222, 0.000045, 0.000005, 80.499832 },
	{ -256.877136, -38.451297, 2.619222, 0.000052, 0.000007, 80.499816 },
	{ -247.202651, -43.099975, 2.619222, 0.000052, 0.000007, 80.499816 },
	{ -237.295562, -47.944885, 2.619222, 0.000060, 0.000008, 80.499794 },
	{ -227.121337, -51.935600, 2.619222, 0.000060, 0.000008, 80.499794 },
	{ -217.214248, -56.780506, 2.619222, 0.000067, 0.000009, 80.499763 },
	{ -206.556152, -60.383625, 2.619222, 0.000067, 0.000009, 80.499763 },
	{ -196.649078, -65.228546, 2.619222, 0.000075, 0.000011, 80.499740 },
	{ -185.968139, -69.641380, 2.619222, 0.000075, 0.000011, 80.499740 },
	{ -176.061065, -74.486289, 2.619222, 0.000082, 0.000012, 80.499725 },
	{ -270.705078, -46.820873, 2.619222, 0.000052, 0.000006, 80.499816 },
	{ -260.797973, -51.665782, 2.619222, 0.000060, 0.000007, 80.499794 },
	{ -251.123519, -56.314460, 2.619222, 0.000060, 0.000007, 80.499794 },
	{ -241.216430, -61.159370, 2.619222, 0.000067, 0.000009, 80.499763 },
	{ -231.042205, -65.150085, 2.619222, 0.000067, 0.000009, 80.499763 },
	{ -221.135131, -69.994995, 2.619222, 0.000075, 0.000010, 80.499740 },
	{ -210.477020, -73.598114, 2.619222, 0.000075, 0.000010, 80.499740 },
	{ -200.569946, -78.443023, 2.619222, 0.000082, 0.000012, 80.499725 },
	{ -189.889022, -82.855865, 2.619222, 0.000082, 0.000012, 80.499725 }
};

enum s_apple {
	a_ID,
Float:a_coordsX,
Float:a_coordsY,
Float:a_coordsZ,
Float:a_coordsAX,
Float:a_coordsAY,
Float:a_coordsAZ
}
new sad_apple[833][s_apple] = {
	{ 0, -225.258819, 92.767127, 5.712926, 0.000000, 0.000007, 4.599997 },
	{ 0, -226.205520, 91.567390, 7.042929, 0.000000, 0.000007, 4.599997 },
	{ 0, -227.997024, 92.771568, 5.900618, 0.000000, 0.000007, 4.599997 },
	{ 0, -228.189788, 94.717208, 6.156506, 0.000000, 0.000007, 4.599997 },
	{ 0, -225.719497, 91.557861, 7.075955, 0.000000, 0.000007, 4.599997 },
	{ 0, -225.961410, 96.371261, 7.306849, 0.000000, 0.000007, 4.599997 },
	{ 0, -227.136718, 94.948760, 5.651482, 0.000000, 0.000007, 4.599997 },
	{ 1,  -215.059738, 88.571647, 5.712926, 0.000000, 0.000015, 4.599997 },
	{ 1,  -216.006439, 87.371910, 7.042929, 0.000000, 0.000015, 4.599997 },
	{ 1,  -217.797943, 88.576080, 5.900618, 0.000000, 0.000015, 4.599997 },
	{ 1,  -217.990692, 90.521728, 6.156506, 0.000000, 0.000015, 4.599997 },
	{ 1,  -215.520401, 87.362380, 7.075955, 0.000000, 0.000015, 4.599997 },
	{ 1,  -215.762329, 92.175781, 7.306849, 0.000000, 0.000015, 4.599997 },
	{ 1,  -216.937637, 90.753280, 5.651482, 0.000000, 0.000015, 4.599997 },
	{ 2,  -205.105422, 84.556983, 5.712926, 0.000000, 0.000015, 4.599997 },
	{ 2,  -206.052108, 83.357238, 7.042929, 0.000000, 0.000015, 4.599997 },
	{ 2,  -207.843627, 84.561416, 5.900618, 0.000000, 0.000015, 4.599997 },
	{ 2,  -208.036392, 86.507064, 6.156506, 0.000000, 0.000015, 4.599997 },
	{ 2,  -205.566085, 83.347724, 7.075955, 0.000000, 0.000015, 4.599997 },
	{ 2,  -205.808013, 88.161117, 7.306849, 0.000000, 0.000015, 4.599997 },
	{ 2,  -206.983322, 86.738624, 5.651482, 0.000000, 0.000015, 4.599997 },
	{ 3,  -194.906341, 80.361503, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 3,  -195.853027, 79.161758, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 3,  -197.644546, 80.365936, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 3,  -197.837310, 82.311584, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 3,  -195.367004, 79.152236, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 3,  -195.608932, 83.965629, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 3,  -196.784240, 82.543136, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 4,  -184.495788, 77.035675, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 4,  -185.442504, 75.835937, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 4,  -187.234008, 77.040107, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 4,  -187.426757, 78.985763, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 4,  -184.956466, 75.826416, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 4,  -185.198394, 80.639808, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 4,  -186.373703, 79.217315, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 5,  -174.296707, 72.840194, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 5,  -175.243423, 71.640457, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 5,  -177.034927, 72.844627, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 5,  -177.227676, 74.790275, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 5,  -174.757385, 71.630935, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 5,  -174.999298, 76.444328, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 5,  -176.174606, 75.021835, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 6,  -163.428298, 69.932373, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 6,  -164.375000, 68.732635, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 6,  -166.166503, 69.936805, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 6,  -166.359268, 71.882461, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 6,  -163.888961, 68.723114, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 6,  -164.130889, 73.536506, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 6,  -165.306198, 72.114013, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 7,  -153.229217, 65.736885, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 7,  -154.175903, 64.537147, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 7,  -155.967422, 65.741325, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 7,  -156.160186, 67.686981, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 7,  -153.689880, 64.527633, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 7,  -153.931808, 69.341026, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 7,  -155.107116, 67.918533, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 8,  -142.285766, 62.022514, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 8,  -143.232482, 60.822776, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 8,  -145.023986, 62.026950, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 8,  -145.216751, 63.972595, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 8,  -142.746444, 60.813255, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 8,  -142.988388, 65.626647, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 8,  -144.163681, 64.204154, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 9,  -132.086685, 57.827033, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 9,  -133.033401, 56.627296, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 9,  -134.824905, 57.831470, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 9,  -135.017669, 59.777114, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 9,  -132.547363, 56.617767, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 9,  -132.789291, 61.431163, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 9,  -133.964599, 60.008666, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 10,  -228.318756, 79.327163, 5.712926, 0.000000, 0.000015, 4.599997 },
	{ 10,  -229.265457, 78.127426, 7.042929, 0.000000, 0.000015, 4.599997 },
	{ 10,  -231.056961, 79.331604, 5.900618, 0.000000, 0.000015, 4.599997 },
	{ 10,  -231.249725, 81.277244, 6.156506, 0.000000, 0.000015, 4.599997 },
	{ 10,  -228.779434, 78.117897, 7.075955, 0.000000, 0.000015, 4.599997 },
	{ 10,  -229.021347, 82.931297, 7.306849, 0.000000, 0.000015, 4.599997 },
	{ 10,  -230.196655, 81.508796, 5.651482, 0.000000, 0.000015, 4.599997 },
	{ 11,  -218.119674, 75.131683, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 11,  -219.066375, 73.931945, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 11,  -220.857879, 75.136116, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 11,  -221.050628, 77.081764, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 11,  -218.580337, 73.922416, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 11,  -218.822265, 78.735816, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 11,  -219.997573, 77.313316, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 12,  -208.165359, 71.117019, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 12,  -209.112045, 69.917274, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 12,  -210.903564, 71.121452, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 12,  -211.096328, 73.067100, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 12,  -208.626022, 69.907760, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 12,  -208.867950, 74.721153, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 12,  -210.043258, 73.298660, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 13,  -197.966278, 66.921539, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 13,  -198.912963, 65.721794, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 13,  -200.704483, 66.925971, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 13,  -200.897247, 68.871620, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 13,  -198.426940, 65.712272, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 13,  -198.668869, 70.525665, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 13,  -199.844177, 69.103172, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 14,  -187.555725, 63.595710, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 14,  -188.502441, 62.395973, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 14,  -190.293945, 63.600143, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 14,  -190.486694, 65.545799, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 14,  -188.016403, 62.386451, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 14,  -188.258331, 67.199844, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 14,  -189.433639, 65.777351, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 15,  -177.356643, 59.400230, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 15,  -178.303359, 58.200492, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 15,  -180.094863, 59.404663, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 15,  -180.287612, 61.350311, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 15,  -177.817321, 58.190971, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 15,  -178.059234, 63.004364, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 15,  -179.234542, 61.581871, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 16,  -166.488235, 56.492408, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 16,  -167.434936, 55.292671, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 16,  -169.226440, 56.496841, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 16,  -169.419204, 58.442497, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 16,  -166.948898, 55.283149, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 16,  -167.190826, 60.096542, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 16,  -168.366134, 58.674049, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 17,  -156.289154, 52.296920, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 17,  -157.235839, 51.097183, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 17,  -159.027359, 52.301361, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 17,  -159.220123, 54.247016, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 17,  -156.749816, 51.087669, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 17,  -156.991744, 55.901062, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 17,  -158.167053, 54.478569, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 18,  -145.345703, 48.582550, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 18,  -146.292419, 47.382812, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 18,  -148.083923, 48.586986, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 18,  -148.276687, 50.532630, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 18,  -145.806381, 47.373291, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 18,  -146.048324, 52.186683, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 18,  -147.223617, 50.764190, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 19,  -135.146621, 44.387069, 5.712926, 0.000000, 0.000053, 4.599997 },
	{ 19,  -136.093338, 43.187332, 7.042929, 0.000000, 0.000053, 4.599997 },
	{ 19,  -137.884841, 44.391506, 5.900618, 0.000000, 0.000053, 4.599997 },
	{ 19,  -138.077606, 46.337150, 6.156506, 0.000000, 0.000053, 4.599997 },
	{ 19,  -135.607299, 43.177803, 7.075955, 0.000000, 0.000053, 4.599997 },
	{ 19,  -135.849227, 47.991199, 7.306849, 0.000000, 0.000053, 4.599997 },
	{ 19,  -137.024536, 46.568702, 5.651482, 0.000000, 0.000053, 4.599997 },
	{ 20,  -232.038833, 65.577117, 5.712926, 0.000000, 0.000015, 4.599997 },
	{ 20,  -232.985534, 64.377380, 7.042929, 0.000000, 0.000015, 4.599997 },
	{ 20,  -234.777038, 65.581558, 5.900618, 0.000000, 0.000015, 4.599997 },
	{ 20,  -234.969802, 67.527206, 6.156506, 0.000000, 0.000015, 4.599997 },
	{ 20,  -232.499511, 64.367858, 7.075955, 0.000000, 0.000015, 4.599997 },
	{ 20,  -232.741424, 69.181259, 7.306849, 0.000000, 0.000015, 4.599997 },
	{ 20,  -233.916732, 67.758758, 5.651482, 0.000000, 0.000015, 4.599997 },
	{ 21,  -221.839752, 61.381641, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 21,  -222.786453, 60.181903, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 21,  -224.577957, 61.386074, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 21,  -224.770706, 63.331722, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 21,  -222.300415, 60.172374, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 21,  -222.542343, 64.985778, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 21,  -223.717651, 63.563274, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 22,  -211.885437, 57.366977, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 22,  -212.832122, 56.167232, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 22,  -214.623641, 57.371410, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 22,  -214.816406, 59.317058, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 22,  -212.346099, 56.157718, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 22,  -212.588027, 60.971111, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 22,  -213.763336, 59.548618, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 23,  -201.686355, 53.171497, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 23,  -202.633041, 51.971752, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 23,  -204.424560, 53.175930, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 23,  -204.617324, 55.121578, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 23,  -202.147018, 51.962230, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 23,  -202.388946, 56.775623, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 23,  -203.564254, 55.353130, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 24,  -191.275802, 49.845668, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 24,  -192.222518, 48.645931, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 24,  -194.014022, 49.850101, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 24,  -194.206771, 51.795757, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 24,  -191.736480, 48.636409, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 24,  -191.978408, 53.449802, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 24,  -193.153717, 52.027309, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 25,  -181.076721, 45.650188, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 25,  -182.023437, 44.450450, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 25,  -183.814941, 45.654621, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 25,  -184.007690, 47.600269, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 25,  -181.537399, 44.440929, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 25,  -181.779312, 49.254322, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 25,  -182.954620, 47.831829, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 26,  -170.208312, 42.742366, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 26,  -171.155014, 41.542629, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 26,  -172.946517, 42.746799, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 26,  -173.139282, 44.692455, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 26,  -170.668975, 41.533107, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 26,  -170.910903, 46.346500, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 26,  -172.086212, 44.924007, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 27,  -160.009231, 38.546878, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 27,  -160.955917, 37.347141, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 27,  -162.747436, 38.551319, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 27,  -162.940200, 40.496974, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 27,  -160.469894, 37.337627, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 27,  -160.711822, 42.151020, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 27,  -161.887130, 40.728527, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 28,  -149.065780, 34.832508, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 28,  -150.012496, 33.632770, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 28,  -151.804000, 34.836944, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 28,  -151.996765, 36.782588, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 28,  -149.526458, 33.623249, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 28,  -149.768402, 38.436641, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 28,  -150.943695, 37.014148, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 29,  -138.866699, 30.637027, 5.712926, 0.000000, 0.000053, 4.599997 },
	{ 29,  -139.813415, 29.437290, 7.042929, 0.000000, 0.000053, 4.599997 },
	{ 29,  -141.604919, 30.641464, 5.900618, 0.000000, 0.000053, 4.599997 },
	{ 29,  -141.797683, 32.587108, 6.156506, 0.000000, 0.000053, 4.599997 },
	{ 29,  -139.327377, 29.427761, 7.075955, 0.000000, 0.000053, 4.599997 },
	{ 29,  -139.569305, 34.241157, 7.306849, 0.000000, 0.000053, 4.599997 },
	{ 29,  -140.744613, 32.818660, 5.651482, 0.000000, 0.000053, 4.599997 },
	{ 30,  -235.098770, 52.137157, 5.712926, 0.000001, 0.000022, 4.599997 },
	{ 30,  -236.045471, 50.937419, 7.042929, 0.000001, 0.000022, 4.599997 },
	{ 30,  -237.836975, 52.141597, 5.900618, 0.000001, 0.000022, 4.599997 },
	{ 30,  -238.029739, 54.087238, 6.156506, 0.000001, 0.000022, 4.599997 },
	{ 30,  -235.559448, 50.927890, 7.075955, 0.000001, 0.000022, 4.599997 },
	{ 30,  -235.801361, 55.741291, 7.306849, 0.000001, 0.000022, 4.599997 },
	{ 30,  -236.976669, 54.318790, 5.651482, 0.000001, 0.000022, 4.599997 },
	{ 31,  -224.899688, 47.941677, 5.712926, 0.000001, 0.000030, 4.599997 },
	{ 31,  -225.846389, 46.741939, 7.042929, 0.000001, 0.000030, 4.599997 },
	{ 31,  -227.637893, 47.946109, 5.900618, 0.000001, 0.000030, 4.599997 },
	{ 31,  -227.830642, 49.891757, 6.156506, 0.000001, 0.000030, 4.599997 },
	{ 31,  -225.360351, 46.732410, 7.075955, 0.000001, 0.000030, 4.599997 },
	{ 31,  -225.602279, 51.545810, 7.306849, 0.000001, 0.000030, 4.599997 },
	{ 31,  -226.777587, 50.123310, 5.651482, 0.000001, 0.000030, 4.599997 },
	{ 32,  -214.945373, 43.927013, 5.712926, 0.000001, 0.000030, 4.599997 },
	{ 32,  -215.892059, 42.727268, 7.042929, 0.000001, 0.000030, 4.599997 },
	{ 32,  -217.683578, 43.931446, 5.900618, 0.000001, 0.000030, 4.599997 },
	{ 32,  -217.876342, 45.877094, 6.156506, 0.000001, 0.000030, 4.599997 },
	{ 32,  -215.406036, 42.717754, 7.075955, 0.000001, 0.000030, 4.599997 },
	{ 32,  -215.647964, 47.531147, 7.306849, 0.000001, 0.000030, 4.599997 },
	{ 32,  -216.823272, 46.108654, 5.651482, 0.000001, 0.000030, 4.599997 },
	{ 33,  -204.746292, 39.731533, 5.712926, 0.000001, 0.000038, 4.599997 },
	{ 33,  -205.692977, 38.531787, 7.042929, 0.000001, 0.000038, 4.599997 },
	{ 33,  -207.484497, 39.735965, 5.900618, 0.000001, 0.000038, 4.599997 },
	{ 33,  -207.677261, 41.681613, 6.156506, 0.000001, 0.000038, 4.599997 },
	{ 33,  -205.206954, 38.522266, 7.075955, 0.000001, 0.000038, 4.599997 },
	{ 33,  -205.448883, 43.335659, 7.306849, 0.000001, 0.000038, 4.599997 },
	{ 33,  -206.624191, 41.913166, 5.651482, 0.000001, 0.000038, 4.599997 },
	{ 34,  -194.335739, 36.405704, 5.712926, 0.000001, 0.000038, 4.599997 },
	{ 34,  -195.282455, 35.205966, 7.042929, 0.000001, 0.000038, 4.599997 },
	{ 34,  -197.073959, 36.410137, 5.900618, 0.000001, 0.000038, 4.599997 },
	{ 34,  -197.266708, 38.355792, 6.156506, 0.000001, 0.000038, 4.599997 },
	{ 34,  -194.796417, 35.196445, 7.075955, 0.000001, 0.000038, 4.599997 },
	{ 34,  -195.038345, 40.009838, 7.306849, 0.000001, 0.000038, 4.599997 },
	{ 34,  -196.213653, 38.587345, 5.651482, 0.000001, 0.000038, 4.599997 },
	{ 35,  -184.136657, 32.210224, 5.712926, 0.000001, 0.000045, 4.599997 },
	{ 35,  -185.083374, 31.010486, 7.042929, 0.000001, 0.000045, 4.599997 },
	{ 35,  -186.874877, 32.214656, 5.900618, 0.000001, 0.000045, 4.599997 },
	{ 35,  -187.067626, 34.160305, 6.156506, 0.000001, 0.000045, 4.599997 },
	{ 35,  -184.597335, 31.000965, 7.075955, 0.000001, 0.000045, 4.599997 },
	{ 35,  -184.839248, 35.814357, 7.306849, 0.000001, 0.000045, 4.599997 },
	{ 35,  -186.014556, 34.391864, 5.651482, 0.000001, 0.000045, 4.599997 },
	{ 36,  -173.268249, 29.302402, 5.712926, 0.000001, 0.000045, 4.599997 },
	{ 36,  -174.214950, 28.102664, 7.042929, 0.000001, 0.000045, 4.599997 },
	{ 36,  -176.006454, 29.306835, 5.900618, 0.000001, 0.000045, 4.599997 },
	{ 36,  -176.199218, 31.252490, 6.156506, 0.000001, 0.000045, 4.599997 },
	{ 36,  -173.728912, 28.093143, 7.075955, 0.000001, 0.000045, 4.599997 },
	{ 36,  -173.970840, 32.906536, 7.306849, 0.000001, 0.000045, 4.599997 },
	{ 36,  -175.146148, 31.484043, 5.651482, 0.000001, 0.000045, 4.599997 },
	{ 37,  -163.069168, 25.106914, 5.712926, 0.000001, 0.000053, 4.599997 },
	{ 37,  -164.015853, 23.907176, 7.042929, 0.000001, 0.000053, 4.599997 },
	{ 37,  -165.807373, 25.111354, 5.900618, 0.000001, 0.000053, 4.599997 },
	{ 37,  -166.000137, 27.057010, 6.156506, 0.000001, 0.000053, 4.599997 },
	{ 37,  -163.529830, 23.897663, 7.075955, 0.000001, 0.000053, 4.599997 },
	{ 37,  -163.771759, 28.711055, 7.306849, 0.000001, 0.000053, 4.599997 },
	{ 37,  -164.947067, 27.288562, 5.651482, 0.000001, 0.000053, 4.599997 },
	{ 38,  -152.125717, 21.392543, 5.712926, 0.000001, 0.000053, 4.599997 },
	{ 38,  -153.072433, 20.192806, 7.042929, 0.000001, 0.000053, 4.599997 },
	{ 38,  -154.863937, 21.396980, 5.900618, 0.000001, 0.000053, 4.599997 },
	{ 38,  -155.056701, 23.342624, 6.156506, 0.000001, 0.000053, 4.599997 },
	{ 38,  -152.586395, 20.183284, 7.075955, 0.000001, 0.000053, 4.599997 },
	{ 38,  -152.828338, 24.996677, 7.306849, 0.000001, 0.000053, 4.599997 },
	{ 38,  -154.003631, 23.574184, 5.651482, 0.000001, 0.000053, 4.599997 },
	{ 39,  -141.926635, 17.197063, 5.712926, 0.000001, 0.000060, 4.599997 },
	{ 39,  -142.873352, 15.997325, 7.042929, 0.000001, 0.000060, 4.599997 },
	{ 39,  -144.664855, 17.201499, 5.900618, 0.000001, 0.000060, 4.599997 },
	{ 39,  -144.857620, 19.147144, 6.156506, 0.000001, 0.000060, 4.599997 },
	{ 39,  -142.387313, 15.987796, 7.075955, 0.000001, 0.000060, 4.599997 },
	{ 39,  -142.629241, 20.801193, 7.306849, 0.000001, 0.000060, 4.599997 },
	{ 39,  -143.804550, 19.378696, 5.651482, 0.000001, 0.000060, 4.599997 },
	{ 40,  -241.184753, 42.125606, 5.712926, 0.000001, 0.000030, 0.899986 },
	{ 40,  -242.206909, 40.989463, 7.042929, 0.000001, 0.000030, 0.899986 },
	{ 40,  -243.916976, 42.306743, 5.900618, 0.000001, 0.000030, 0.899986 },
	{ 40,  -243.983764, 44.260768, 6.156506, 0.000001, 0.000030, 0.899986 },
	{ 40,  -241.722503, 40.948593, 7.075955, 0.000001, 0.000030, 0.899986 },
	{ 40,  -241.653305, 45.767570, 7.306849, 0.000001, 0.000030, 0.899986 },
	{ 40,  -242.917953, 44.423877, 5.651482, 0.000001, 0.000030, 0.899986 },
	{ 41,  -231.277679, 37.280700, 5.712926, 0.000001, 0.000038, 0.899986 },
	{ 41,  -232.299819, 36.144554, 7.042929, 0.000001, 0.000038, 0.899986 },
	{ 41,  -234.009887, 37.461826, 5.900618, 0.000001, 0.000038, 0.899986 },
	{ 41,  -234.076675, 39.415859, 6.156506, 0.000001, 0.000038, 0.899986 },
	{ 41,  -231.815414, 36.103679, 7.075955, 0.000001, 0.000038, 0.899986 },
	{ 41,  -231.746231, 40.922660, 7.306849, 0.000001, 0.000038, 0.899986 },
	{ 41,  -233.010879, 39.578971, 5.651482, 0.000001, 0.000038, 0.899986 },
	{ 42,  -221.603179, 32.632026, 5.712926, 0.000001, 0.000038, 0.899986 },
	{ 42,  -222.625320, 31.495872, 7.042929, 0.000001, 0.000038, 0.899986 },
	{ 42,  -224.335403, 32.813152, 5.900618, 0.000001, 0.000038, 0.899986 },
	{ 42,  -224.402206, 34.767185, 6.156506, 0.000001, 0.000038, 0.899986 },
	{ 42,  -222.140930, 31.455013, 7.075955, 0.000001, 0.000038, 0.899986 },
	{ 42,  -222.071731, 36.273986, 7.306849, 0.000001, 0.000038, 0.899986 },
	{ 42,  -223.336380, 34.930305, 5.651482, 0.000001, 0.000038, 0.899986 },
	{ 43,  -211.696121, 27.787117, 5.712926, 0.000001, 0.000045, 0.899986 },
	{ 43,  -212.718231, 26.650964, 7.042929, 0.000001, 0.000045, 0.899986 },
	{ 43,  -214.428329, 27.968242, 5.900618, 0.000001, 0.000045, 0.899986 },
	{ 43,  -214.495117, 29.922275, 6.156506, 0.000001, 0.000045, 0.899986 },
	{ 43,  -212.233856, 26.610097, 7.075955, 0.000001, 0.000045, 0.899986 },
	{ 43,  -212.164657, 31.429069, 7.306849, 0.000001, 0.000045, 0.899986 },
	{ 43,  -213.429306, 30.085388, 5.651482, 0.000001, 0.000045, 0.899986 },
	{ 44,  -201.521881, 23.796400, 5.712926, 0.000001, 0.000045, 0.899986 },
	{ 44,  -202.544052, 22.660257, 7.042929, 0.000001, 0.000045, 0.899986 },
	{ 44,  -204.254104, 23.977527, 5.900618, 0.000001, 0.000045, 0.899986 },
	{ 44,  -204.320892, 25.931568, 6.156506, 0.000001, 0.000045, 0.899986 },
	{ 44,  -202.059631, 22.619392, 7.075955, 0.000001, 0.000045, 0.899986 },
	{ 44,  -201.990447, 27.438364, 7.306849, 0.000001, 0.000045, 0.899986 },
	{ 44,  -203.255096, 26.094680, 5.651482, 0.000001, 0.000045, 0.899986 },
	{ 45,  -191.614807, 18.951492, 5.712926, 0.000001, 0.000053, 0.899986 },
	{ 45,  -192.636978, 17.815349, 7.042929, 0.000001, 0.000053, 0.899986 },
	{ 45,  -194.347030, 19.132621, 5.900618, 0.000001, 0.000053, 0.899986 },
	{ 45,  -194.413818, 21.086652, 6.156506, 0.000001, 0.000053, 0.899986 },
	{ 45,  -192.152557, 17.774482, 7.075955, 0.000001, 0.000053, 0.899986 },
	{ 45,  -192.083343, 22.593454, 7.306849, 0.000001, 0.000053, 0.899986 },
	{ 45,  -193.347991, 21.249773, 5.651482, 0.000001, 0.000053, 0.899986 },
	{ 46,  -180.956695, 15.348366, 5.712926, 0.000001, 0.000053, 0.899986 },
	{ 46,  -181.978836, 14.212223, 7.042929, 0.000001, 0.000053, 0.899986 },
	{ 46,  -183.688919, 15.529493, 5.900618, 0.000001, 0.000053, 0.899986 },
	{ 46,  -183.755706, 17.483533, 6.156506, 0.000001, 0.000053, 0.899986 },
	{ 46,  -181.494445, 14.171356, 7.075955, 0.000001, 0.000053, 0.899986 },
	{ 46,  -181.425247, 18.990327, 7.306849, 0.000001, 0.000053, 0.899986 },
	{ 46,  -182.689895, 17.646644, 5.651482, 0.000001, 0.000053, 0.899986 },
	{ 47,  -171.049621, 10.503451, 5.712926, 0.000001, 0.000060, 0.899986 },
	{ 47,  -172.071762, 9.367306, 7.042929, 0.000001, 0.000060, 0.899986 },
	{ 47,  -173.781829, 10.684586, 5.900618, 0.000001, 0.000060, 0.899986 },
	{ 47,  -173.848648, 12.638626, 6.156506, 0.000001, 0.000060, 0.899986 },
	{ 47,  -171.587356, 9.326448, 7.075955, 0.000001, 0.000060, 0.899986 },
	{ 47,  -171.518157, 14.145420, 7.306849, 0.000001, 0.000060, 0.899986 },
	{ 47,  -172.782806, 12.801737, 5.651482, 0.000001, 0.000060, 0.899986 },
	{ 48,  -160.368682, 6.090614, 5.712926, 0.000001, 0.000060, 0.899986 },
	{ 48,  -161.390853, 4.954471, 7.042929, 0.000001, 0.000060, 0.899986 },
	{ 48,  -163.100906, 6.271745, 5.900618, 0.000001, 0.000060, 0.899986 },
	{ 48,  -163.167724, 8.225774, 6.156506, 0.000001, 0.000060, 0.899986 },
	{ 48,  -160.906433, 4.913604, 7.075955, 0.000001, 0.000060, 0.899986 },
	{ 48,  -160.837249, 9.732577, 7.306849, 0.000001, 0.000060, 0.899986 },
	{ 48,  -162.101882, 8.388894, 5.651482, 0.000001, 0.000060, 0.899986 },
	{ 49,  -150.461593, 1.245706, 5.712926, 0.000001, 0.000068, 0.899986 },
	{ 49,  -151.483764, 0.109563, 7.042929, 0.000001, 0.000068, 0.899986 },
	{ 49,  -153.193832, 1.426838, 5.900618, 0.000001, 0.000068, 0.899986 },
	{ 49,  -153.260635, 3.380866, 6.156506, 0.000001, 0.000068, 0.899986 },
	{ 49,  -150.999359, 0.068689, 7.075955, 0.000001, 0.000068, 0.899986 },
	{ 49,  -150.930160, 4.887664, 7.306849, 0.000001, 0.000068, 0.899986 },
	{ 49,  -152.194824, 3.543978, 5.651482, 0.000001, 0.000068, 0.899986 },
	{ 50,  -245.105621, 28.911119, 5.712926, 0.000002, 0.000038, 0.899986 },
	{ 50,  -246.127777, 27.774974, 7.042929, 0.000002, 0.000038, 0.899986 },
	{ 50,  -247.837844, 29.092254, 5.900618, 0.000002, 0.000038, 0.899986 },
	{ 50,  -247.904647, 31.046279, 6.156506, 0.000002, 0.000038, 0.899986 },
	{ 50,  -245.643371, 27.734100, 7.075955, 0.000002, 0.000038, 0.899986 },
	{ 50,  -245.574172, 32.553081, 7.306849, 0.000002, 0.000038, 0.899986 },
	{ 50,  -246.838821, 31.209392, 5.651482, 0.000002, 0.000038, 0.899986 },
	{ 51,  -235.198547, 24.066211, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 51,  -236.220687, 22.930068, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 51,  -237.930770, 24.247339, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 51,  -237.997558, 26.201370, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 51,  -235.736297, 22.889192, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 51,  -235.667098, 27.708171, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 51,  -236.931747, 26.364482, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 52,  -225.524047, 19.417539, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 52,  -226.546188, 18.281387, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 52,  -228.256286, 19.598667, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 52,  -228.323074, 21.552698, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 52,  -226.061813, 18.240528, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 52,  -225.992614, 23.059499, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 52,  -227.257263, 21.715818, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 53,  -215.616989, 14.572631, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 53,  -216.639114, 13.436479, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 53,  -218.349197, 14.753757, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 53,  -218.416000, 16.707790, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 53,  -216.154724, 13.395612, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 53,  -216.085525, 18.214586, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 53,  -217.350173, 16.870903, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 54,  -205.442749, 10.581915, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 54,  -206.464920, 9.445772, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 54,  -208.174987, 10.763043, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 54,  -208.241760, 12.717082, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 54,  -205.980514, 9.404906, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 54,  -205.911315, 14.223878, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 54,  -207.175964, 12.880195, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 55,  -195.535675, 5.737008, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 55,  -196.557846, 4.600865, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 55,  -198.267898, 5.918136, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 55,  -198.334701, 7.872166, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 55,  -196.073425, 4.559998, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 55,  -196.004211, 9.378969, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 55,  -197.268875, 8.035286, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 56,  -184.877578, 2.133882, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 56,  -185.899719, 0.997738, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 56,  -187.609786, 2.315008, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 56,  -187.676574, 4.269048, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 56,  -185.415313, 0.956871, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 56,  -185.346115, 5.775843, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 56,  -186.610763, 4.432160, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 57,  -174.970489, -2.711033, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 57,  -175.992630, -3.847178, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 57,  -177.702713, -2.529899, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 57,  -177.769515, -0.575859, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 57,  -175.508239, -3.888036, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 57,  -175.439041, 0.930935, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 57,  -176.703689, -0.412747, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 58,  -164.289550, -7.123870, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 58,  -165.311721, -8.260013, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 58,  -167.021774, -6.942739, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 58,  -167.088592, -4.988710, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 58,  -164.827301, -8.300880, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 58,  -164.758132, -3.481907, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 58,  -166.022766, -4.825590, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 59,  -154.382476, -11.968778, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 59,  -155.404647, -13.104921, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 59,  -157.114700, -11.787647, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 59,  -157.181503, -9.833618, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 59,  -154.920227, -13.145795, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 59,  -154.851028, -8.326819, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 59,  -156.115692, -9.670505, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 60,  -249.705276, 15.429800, 5.712926, 0.000002, 0.000038, 0.899986 },
	{ 60,  -250.727432, 14.293657, 7.042929, 0.000002, 0.000038, 0.899986 },
	{ 60,  -252.437484, 15.610935, 5.900618, 0.000002, 0.000038, 0.899986 },
	{ 60,  -252.504287, 17.564966, 6.156506, 0.000002, 0.000038, 0.899986 },
	{ 60,  -250.243041, 14.252790, 7.075955, 0.000002, 0.000038, 0.899986 },
	{ 60,  -250.173812, 19.071769, 7.306849, 0.000002, 0.000038, 0.899986 },
	{ 60,  -251.438476, 17.728078, 5.651482, 0.000002, 0.000038, 0.899986 },
	{ 61,  -239.798202, 10.584896, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 61,  -240.820343, 9.448752, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 61,  -242.530395, 10.766022, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 61,  -242.597198, 12.720054, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 61,  -240.335937, 9.407877, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 61,  -240.266738, 14.226861, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 61,  -241.531402, 12.883167, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 62,  -230.123703, 5.936223, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 62,  -231.145843, 4.800071, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 62,  -232.855911, 6.117350, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 62,  -232.922729, 8.071382, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 62,  -230.661437, 4.759212, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 62,  -230.592239, 9.578185, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 62,  -231.856903, 8.234502, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 63,  -220.216644, 1.091315, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 63,  -221.238769, -0.044836, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 63,  -222.948837, 1.272442, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 63,  -223.015640, 3.226475, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 63,  -220.754379, -0.085702, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 63,  -220.685180, 4.733269, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 63,  -221.949829, 3.389587, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 64,  -210.042404, -2.899399, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 64,  -211.064559, -4.035542, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 64,  -212.774627, -2.718271, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 64,  -212.841415, -0.764232, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 64,  -210.580154, -4.076409, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 64,  -210.510971, 0.742562, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 64,  -211.775619, -0.601119, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 65,  -200.135330, -7.744307, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 65,  -201.157501, -8.880450, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 65,  -202.867553, -7.563179, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 65,  -202.934341, -5.609148, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 65,  -200.673080, -8.921317, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 65,  -200.603866, -4.102346, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 65,  -201.868515, -5.446028, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 66,  -189.477203, -11.347433, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 66,  -190.499359, -12.483577, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 66,  -192.209442, -11.166307, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 66,  -192.276229, -9.212267, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 66,  -190.014968, -12.524444, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 66,  -189.945770, -7.705472, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 66,  -191.210418, -9.049155, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 67,  -179.570144, -16.192350, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 67,  -180.592269, -17.328495, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 67,  -182.302352, -16.011215, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 67,  -182.369155, -14.057174, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 67,  -180.107879, -17.369352, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 67,  -180.038681, -12.550380, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 67,  -181.303329, -13.894062, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 68,  -168.889205, -20.605186, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 68,  -169.911361, -21.741329, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 68,  -171.621429, -20.424055, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 68,  -171.688232, -18.470026, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 68,  -169.426956, -21.782196, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 68,  -169.357772, -16.963222, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 68,  -170.622406, -18.306907, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 69,  -158.982116, -25.450094, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 69,  -160.004272, -26.586236, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 69,  -161.714355, -25.268962, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 69,  -161.781143, -23.314933, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 69,  -159.519882, -26.627111, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 69,  -159.450683, -21.808134, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 69,  -160.715332, -23.151821, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 70,  -253.626159, 2.215319, 5.712926, 0.000003, 0.000045, 0.899986 },
	{ 70,  -254.648300, 1.079175, 7.042929, 0.000003, 0.000045, 0.899986 },
	{ 70,  -256.358367, 2.396453, 5.900618, 0.000003, 0.000045, 0.899986 },
	{ 70,  -256.425170, 4.350479, 6.156506, 0.000003, 0.000045, 0.899986 },
	{ 70,  -254.163909, 1.038301, 7.075955, 0.000003, 0.000045, 0.899986 },
	{ 70,  -254.094680, 5.857280, 7.306849, 0.000003, 0.000045, 0.899986 },
	{ 70,  -255.359344, 4.513590, 5.651482, 0.000003, 0.000045, 0.899986 },
	{ 71,  -243.719085, -2.629588, 5.712926, 0.000003, 0.000053, 0.899986 },
	{ 71,  -244.741210, -3.765732, 7.042929, 0.000003, 0.000053, 0.899986 },
	{ 71,  -246.451278, -2.448462, 5.900618, 0.000003, 0.000053, 0.899986 },
	{ 71,  -246.518066, -0.494431, 6.156506, 0.000003, 0.000053, 0.899986 },
	{ 71,  -244.256820, -3.806606, 7.075955, 0.000003, 0.000053, 0.899986 },
	{ 71,  -244.187606, 1.012372, 7.306849, 0.000003, 0.000053, 0.899986 },
	{ 71,  -245.452270, -0.331317, 5.651482, 0.000003, 0.000053, 0.899986 },
	{ 72,  -234.044570, -7.278261, 5.712926, 0.000003, 0.000053, 0.899986 },
	{ 72,  -235.066711, -8.414413, 7.042929, 0.000003, 0.000053, 0.899986 },
	{ 72,  -236.776794, -7.097134, 5.900618, 0.000003, 0.000053, 0.899986 },
	{ 72,  -236.843597, -5.143102, 6.156506, 0.000003, 0.000053, 0.899986 },
	{ 72,  -234.582321, -8.455272, 7.075955, 0.000003, 0.000053, 0.899986 },
	{ 72,  -234.513122, -3.636300, 7.306849, 0.000003, 0.000053, 0.899986 },
	{ 72,  -235.777786, -4.979982, 5.651482, 0.000003, 0.000053, 0.899986 },
	{ 73,  -224.137512, -12.123167, 5.712926, 0.000003, 0.000060, 0.899986 },
	{ 73,  -225.159637, -13.259321, 7.042929, 0.000003, 0.000060, 0.899986 },
	{ 73,  -226.869705, -11.942041, 5.900618, 0.000003, 0.000060, 0.899986 },
	{ 73,  -226.936523, -9.988010, 6.156506, 0.000003, 0.000060, 0.899986 },
	{ 73,  -224.675247, -13.300188, 7.075955, 0.000003, 0.000060, 0.899986 },
	{ 73,  -224.606048, -8.481215, 7.306849, 0.000003, 0.000060, 0.899986 },
	{ 73,  -225.870697, -9.824897, 5.651482, 0.000003, 0.000060, 0.899986 },
	{ 74,  -213.963287, -16.113883, 5.712926, 0.000003, 0.000060, 0.899986 },
	{ 74,  -214.985427, -17.250026, 7.042929, 0.000003, 0.000060, 0.899986 },
	{ 74,  -216.695510, -15.932757, 5.900618, 0.000003, 0.000060, 0.899986 },
	{ 74,  -216.762283, -13.978717, 6.156506, 0.000003, 0.000060, 0.899986 },
	{ 74,  -214.501037, -17.290893, 7.075955, 0.000003, 0.000060, 0.899986 },
	{ 74,  -214.431838, -12.471922, 7.306849, 0.000003, 0.000060, 0.899986 },
	{ 74,  -215.696487, -13.815605, 5.651482, 0.000003, 0.000060, 0.899986 },
	{ 75,  -204.056198, -20.958791, 5.712926, 0.000003, 0.000068, 0.899986 },
	{ 75,  -205.078369, -22.094934, 7.042929, 0.000003, 0.000068, 0.899986 },
	{ 75,  -206.788421, -20.777664, 5.900618, 0.000003, 0.000068, 0.899986 },
	{ 75,  -206.855224, -18.823633, 6.156506, 0.000003, 0.000068, 0.899986 },
	{ 75,  -204.593948, -22.135803, 7.075955, 0.000003, 0.000068, 0.899986 },
	{ 75,  -204.524734, -17.316831, 7.306849, 0.000003, 0.000068, 0.899986 },
	{ 75,  -205.789382, -18.660512, 5.651482, 0.000003, 0.000068, 0.899986 },
	{ 76,  -193.398086, -24.561918, 5.712926, 0.000003, 0.000068, 0.899986 },
	{ 76,  -194.420242, -25.698062, 7.042929, 0.000003, 0.000068, 0.899986 },
	{ 76,  -196.130310, -24.380790, 5.900618, 0.000003, 0.000068, 0.899986 },
	{ 76,  -196.197113, -22.426752, 6.156506, 0.000003, 0.000068, 0.899986 },
	{ 76,  -193.935836, -25.738929, 7.075955, 0.000003, 0.000068, 0.899986 },
	{ 76,  -193.866638, -20.919958, 7.306849, 0.000003, 0.000068, 0.899986 },
	{ 76,  -195.131286, -22.263639, 5.651482, 0.000003, 0.000068, 0.899986 },
	{ 77,  -183.491012, -29.406833, 5.712926, 0.000003, 0.000076, 0.899986 },
	{ 77,  -184.513137, -30.542982, 7.042929, 0.000003, 0.000076, 0.899986 },
	{ 77,  -186.223236, -29.225698, 5.900618, 0.000003, 0.000076, 0.899986 },
	{ 77,  -186.290023, -27.271659, 6.156506, 0.000003, 0.000076, 0.899986 },
	{ 77,  -184.028762, -30.583841, 7.075955, 0.000003, 0.000076, 0.899986 },
	{ 77,  -183.959564, -25.764865, 7.306849, 0.000003, 0.000076, 0.899986 },
	{ 77,  -185.224212, -27.108549, 5.651482, 0.000003, 0.000076, 0.899986 },
	{ 78,  -172.810073, -33.819675, 5.712926, 0.000003, 0.000076, 0.899986 },
	{ 78,  -173.832229, -34.955814, 7.042929, 0.000003, 0.000076, 0.899986 },
	{ 78,  -175.542297, -33.638545, 5.900618, 0.000003, 0.000076, 0.899986 },
	{ 78,  -175.609100, -31.684516, 6.156506, 0.000003, 0.000076, 0.899986 },
	{ 78,  -173.347824, -34.996681, 7.075955, 0.000003, 0.000076, 0.899986 },
	{ 78,  -173.278656, -30.177707, 7.306849, 0.000003, 0.000076, 0.899986 },
	{ 78,  -174.543289, -31.521394, 5.651482, 0.000003, 0.000076, 0.899986 },
	{ 79,  -162.902999, -38.664581, 5.712926, 0.000003, 0.000083, 0.899986 },
	{ 79,  -163.925155, -39.800720, 7.042929, 0.000003, 0.000083, 0.899986 },
	{ 79,  -165.635223, -38.483444, 5.900618, 0.000003, 0.000083, 0.899986 },
	{ 79,  -165.702011, -36.529418, 6.156506, 0.000003, 0.000083, 0.899986 },
	{ 79,  -163.440750, -39.841594, 7.075955, 0.000003, 0.000083, 0.899986 },
	{ 79,  -163.371551, -35.022621, 7.306849, 0.000003, 0.000083, 0.899986 },
	{ 79,  -164.636199, -36.366306, 5.651482, 0.000003, 0.000083, 0.899986 },
	{ 80,  -257.584808, -7.924411, 5.712926, 0.000001, 0.000038, 0.899986 },
	{ 80,  -258.606964, -9.060554, 7.042929, 0.000001, 0.000038, 0.899986 },
	{ 80,  -260.317016, -7.743274, 5.900618, 0.000001, 0.000038, 0.899986 },
	{ 80,  -260.383819, -5.789249, 6.156506, 0.000001, 0.000038, 0.899986 },
	{ 80,  -258.122558, -9.101425, 7.075955, 0.000001, 0.000038, 0.899986 },
	{ 80,  -258.053344, -4.282447, 7.306849, 0.000001, 0.000038, 0.899986 },
	{ 80,  -259.317993, -5.626140, 5.651482, 0.000001, 0.000038, 0.899986 },
	{ 81,  -247.677734, -12.769317, 5.712926, 0.000001, 0.000045, 0.899986 },
	{ 81,  -248.699874, -13.905464, 7.042929, 0.000001, 0.000045, 0.899986 },
	{ 81,  -250.409942, -12.588191, 5.900618, 0.000001, 0.000045, 0.899986 },
	{ 81,  -250.476730, -10.634159, 6.156506, 0.000001, 0.000045, 0.899986 },
	{ 81,  -248.215469, -13.946338, 7.075955, 0.000001, 0.000045, 0.899986 },
	{ 81,  -248.146286, -9.127357, 7.306849, 0.000001, 0.000045, 0.899986 },
	{ 81,  -249.410934, -10.471046, 5.651482, 0.000001, 0.000045, 0.899986 },
	{ 82,  -238.003234, -17.417991, 5.712926, 0.000001, 0.000045, 0.899986 },
	{ 82,  -239.025375, -18.554145, 7.042929, 0.000001, 0.000045, 0.899986 },
	{ 82,  -240.735458, -17.236865, 5.900618, 0.000001, 0.000045, 0.899986 },
	{ 82,  -240.802261, -15.282833, 6.156506, 0.000001, 0.000045, 0.899986 },
	{ 82,  -238.540985, -18.595005, 7.075955, 0.000001, 0.000045, 0.899986 },
	{ 82,  -238.471786, -13.776031, 7.306849, 0.000001, 0.000045, 0.899986 },
	{ 82,  -239.736434, -15.119712, 5.651482, 0.000001, 0.000045, 0.899986 },
	{ 83,  -228.096176, -22.262901, 5.712926, 0.000001, 0.000053, 0.899986 },
	{ 83,  -229.118286, -23.399053, 7.042929, 0.000001, 0.000053, 0.899986 },
	{ 83,  -230.828384, -22.081775, 5.900618, 0.000001, 0.000053, 0.899986 },
	{ 83,  -230.895172, -20.127742, 6.156506, 0.000001, 0.000053, 0.899986 },
	{ 83,  -228.633911, -23.439920, 7.075955, 0.000001, 0.000053, 0.899986 },
	{ 83,  -228.564712, -18.620948, 7.306849, 0.000001, 0.000053, 0.899986 },
	{ 83,  -229.829360, -19.964630, 5.651482, 0.000001, 0.000053, 0.899986 },
	{ 84,  -217.921936, -26.253618, 5.712926, 0.000001, 0.000053, 0.899986 },
	{ 84,  -218.944107, -27.389760, 7.042929, 0.000001, 0.000053, 0.899986 },
	{ 84,  -220.654159, -26.072490, 5.900618, 0.000001, 0.000053, 0.899986 },
	{ 84,  -220.720947, -24.118450, 6.156506, 0.000001, 0.000053, 0.899986 },
	{ 84,  -218.459686, -27.430625, 7.075955, 0.000001, 0.000053, 0.899986 },
	{ 84,  -218.390502, -22.611654, 7.306849, 0.000001, 0.000053, 0.899986 },
	{ 84,  -219.655151, -23.955337, 5.651482, 0.000001, 0.000053, 0.899986 },
	{ 85,  -208.014862, -31.098526, 5.712926, 0.000001, 0.000060, 0.899986 },
	{ 85,  -209.037033, -32.234668, 7.042929, 0.000001, 0.000060, 0.899986 },
	{ 85,  -210.747085, -30.917396, 5.900618, 0.000001, 0.000060, 0.899986 },
	{ 85,  -210.813873, -28.963365, 6.156506, 0.000001, 0.000060, 0.899986 },
	{ 85,  -208.552612, -32.275535, 7.075955, 0.000001, 0.000060, 0.899986 },
	{ 85,  -208.483398, -27.456563, 7.306849, 0.000001, 0.000060, 0.899986 },
	{ 85,  -209.748046, -28.800245, 5.651482, 0.000001, 0.000060, 0.899986 },
	{ 86,  -197.356750, -34.701652, 5.712926, 0.000001, 0.000060, 0.899986 },
	{ 86,  -198.378890, -35.837795, 7.042929, 0.000001, 0.000060, 0.899986 },
	{ 86,  -200.088973, -34.520523, 5.900618, 0.000001, 0.000060, 0.899986 },
	{ 86,  -200.155761, -32.566482, 6.156506, 0.000001, 0.000060, 0.899986 },
	{ 86,  -197.894500, -35.878662, 7.075955, 0.000001, 0.000060, 0.899986 },
	{ 86,  -197.825302, -31.059690, 7.306849, 0.000001, 0.000060, 0.899986 },
	{ 86,  -199.089950, -32.403373, 5.651482, 0.000001, 0.000060, 0.899986 },
	{ 87,  -187.449676, -39.546566, 5.712926, 0.000001, 0.000068, 0.899986 },
	{ 87,  -188.471817, -40.682712, 7.042929, 0.000001, 0.000068, 0.899986 },
	{ 87,  -190.181884, -39.365432, 5.900618, 0.000001, 0.000068, 0.899986 },
	{ 87,  -190.248703, -37.411392, 6.156506, 0.000001, 0.000068, 0.899986 },
	{ 87,  -187.987411, -40.723571, 7.075955, 0.000001, 0.000068, 0.899986 },
	{ 87,  -187.918212, -35.904598, 7.306849, 0.000001, 0.000068, 0.899986 },
	{ 87,  -189.182861, -37.248279, 5.651482, 0.000001, 0.000068, 0.899986 },
	{ 88,  -176.768737, -43.959403, 5.712926, 0.000001, 0.000068, 0.899986 },
	{ 88,  -177.790908, -45.095546, 7.042929, 0.000001, 0.000068, 0.899986 },
	{ 88,  -179.500961, -43.778274, 5.900618, 0.000001, 0.000068, 0.899986 },
	{ 88,  -179.567779, -41.824241, 6.156506, 0.000001, 0.000068, 0.899986 },
	{ 88,  -177.306488, -45.136413, 7.075955, 0.000001, 0.000068, 0.899986 },
	{ 88,  -177.237304, -40.317440, 7.306849, 0.000001, 0.000068, 0.899986 },
	{ 88,  -178.501937, -41.661125, 5.651482, 0.000001, 0.000068, 0.899986 },
	{ 89,  -166.861648, -48.804309, 5.712926, 0.000001, 0.000076, 0.899986 },
	{ 89,  -167.883819, -49.940456, 7.042929, 0.000001, 0.000076, 0.899986 },
	{ 89,  -169.593887, -48.623180, 5.900618, 0.000001, 0.000076, 0.899986 },
	{ 89,  -169.660690, -46.669151, 6.156506, 0.000001, 0.000076, 0.899986 },
	{ 89,  -167.399414, -49.981330, 7.075955, 0.000001, 0.000076, 0.899986 },
	{ 89,  -167.330215, -45.162353, 7.306849, 0.000001, 0.000076, 0.899986 },
	{ 89,  -168.594879, -46.506038, 5.651482, 0.000001, 0.000076, 0.899986 },
	{ 90,  -261.505676, -21.138898, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 90,  -262.527832, -22.275043, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 90,  -264.237915, -20.957763, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 90,  -264.304687, -19.003738, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 90,  -262.043426, -22.315917, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 90,  -261.974243, -17.496936, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 90,  -263.238891, -18.840625, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 91,  -251.598602, -25.983806, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 91,  -252.620742, -27.119949, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 91,  -254.330825, -25.802679, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 91,  -254.397613, -23.848648, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 91,  -252.136352, -27.160825, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 91,  -252.067153, -22.341846, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 91,  -253.331802, -23.685535, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 92,  -241.924102, -30.632478, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 92,  -242.946243, -31.768630, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 92,  -244.656341, -30.451351, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 92,  -244.723129, -28.497320, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 92,  -242.461868, -31.809490, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 92,  -242.392669, -26.990518, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 92,  -243.657318, -28.334199, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 93,  -232.017044, -35.477386, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 93,  -233.039169, -36.613540, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 93,  -234.749252, -35.296260, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 93,  -234.816055, -33.342227, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 93,  -232.554779, -36.654403, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 93,  -232.485580, -31.835432, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 93,  -233.750228, -33.179115, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 94,  -221.842803, -39.468101, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 94,  -222.864974, -40.604248, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 94,  -224.575042, -39.286975, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 94,  -224.641815, -37.332935, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 94,  -222.380569, -40.645111, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 94,  -222.311370, -35.826141, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 94,  -223.576019, -37.169822, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 95,  -211.935729, -44.313011, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 95,  -212.957901, -45.449153, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 95,  -214.667953, -44.131881, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 95,  -214.734756, -42.177852, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 95,  -212.473480, -45.490020, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 95,  -212.404266, -40.671051, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 95,  -213.668930, -42.014732, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 96,  -201.277633, -47.916137, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 96,  -202.299774, -49.052280, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 96,  -204.009841, -47.735008, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 96,  -204.076629, -45.780967, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 96,  -201.815368, -49.093147, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 96,  -201.746170, -44.274173, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 96,  -203.010818, -45.617858, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 97,  -191.370544, -52.761051, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 97,  -192.392684, -53.897197, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 97,  -194.102767, -52.579917, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 97,  -194.169570, -50.625877, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 97,  -191.908294, -53.938053, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 97,  -191.839096, -49.119083, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 97,  -193.103744, -50.462764, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 98,  -180.689605, -57.173889, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 98,  -181.711776, -58.310031, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 98,  -183.421829, -56.992755, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 98,  -183.488647, -55.038726, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 98,  -181.227355, -58.350898, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 98,  -181.158187, -53.531925, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 98,  -182.422821, -54.875610, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 99,  -170.782531, -62.018798, 5.712926, 0.000002, 0.000083, 0.899986 },
	{ 99,  -171.804702, -63.154937, 7.042929, 0.000002, 0.000083, 0.899986 },
	{ 99,  -173.514755, -61.837665, 5.900618, 0.000002, 0.000083, 0.899986 },
	{ 99,  -173.581558, -59.883636, 6.156506, 0.000002, 0.000083, 0.899986 },
	{ 99,  -171.320281, -63.195816, 7.075955, 0.000002, 0.000083, 0.899986 },
	{ 99,  -171.251083, -58.376838, 7.306849, 0.000002, 0.000083, 0.899986 },
	{ 99,  -172.515747, -59.720523, 5.651482, 0.000002, 0.000083, 0.899986 },
	{ 100,  -266.105346, -34.620216, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 100,  -267.127502, -35.756362, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 100,  -268.837524, -34.439083, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 100,  -268.904357, -32.485054, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 100,  -266.643096, -35.797225, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 100,  -266.573852, -30.978248, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 100,  -267.838531, -32.321937, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 101,  -256.198242, -39.465122, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 101,  -257.220397, -40.601264, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 101,  -258.930450, -39.283996, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 101,  -258.997253, -37.329963, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 101,  -256.735992, -40.642139, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 101,  -256.666809, -35.823158, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 101,  -257.931457, -37.166851, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 102,  -246.523757, -44.113796, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 102,  -247.545898, -45.249946, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 102,  -249.255966, -43.932666, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 102,  -249.322784, -41.978637, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 102,  -247.061492, -45.290805, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 102,  -246.992294, -40.471832, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 102,  -248.256958, -41.815513, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 103,  -236.616699, -48.958702, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 103,  -237.638824, -50.094856, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 103,  -239.348892, -48.777576, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 103,  -239.415695, -46.823543, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 103,  -237.154434, -50.135719, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 103,  -237.085235, -45.316749, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 103,  -238.349884, -46.660430, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 104,  -226.442459, -52.949417, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 104,  -227.464614, -54.085559, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 104,  -229.174682, -52.768291, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 104,  -229.241470, -50.814250, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 104,  -226.980209, -54.126426, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 104,  -226.911026, -49.307456, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 104,  -228.175674, -50.651138, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 105,  -216.535385, -57.794326, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 105,  -217.557556, -58.930469, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 105,  -219.267608, -57.613197, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 105,  -219.334396, -55.659168, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 105,  -217.073135, -58.971336, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 105,  -217.003921, -54.152366, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 105,  -218.268569, -55.496047, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 106,  -205.877258, -61.397453, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 106,  -206.899414, -62.533596, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 106,  -208.609497, -61.216323, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 106,  -208.676284, -59.262287, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 106,  -206.415023, -62.574462, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 106,  -206.345825, -57.755493, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 106,  -207.610473, -59.099174, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 107,  -195.970199, -66.242370, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 107,  -196.992324, -67.378509, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 107,  -198.702407, -66.061233, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 107,  -198.769210, -64.107192, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 107,  -196.507934, -67.419372, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 107,  -196.438735, -62.600399, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 107,  -197.703384, -63.944080, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 108,  -185.289260, -70.655204, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 108,  -186.311416, -71.791351, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 108,  -188.021484, -70.474075, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 108,  -188.088287, -68.520042, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 108,  -185.827011, -71.832214, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 108,  -185.757827, -67.013244, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 108,  -187.022460, -68.356925, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 109,  -175.382171, -75.500114, 5.712926, 0.000002, 0.000083, 0.899986 },
	{ 109,  -176.404327, -76.636253, 7.042929, 0.000002, 0.000083, 0.899986 },
	{ 109,  -178.114410, -75.318984, 5.900618, 0.000002, 0.000083, 0.899986 },
	{ 109,  -178.181198, -73.364952, 6.156506, 0.000002, 0.000083, 0.899986 },
	{ 109,  -175.919937, -76.677131, 7.075955, 0.000002, 0.000083, 0.899986 },
	{ 109,  -175.850738, -71.858154, 7.306849, 0.000002, 0.000083, 0.899986 },
	{ 109,  -177.115386, -73.201843, 5.651482, 0.000002, 0.000083, 0.899986 },
	{ 110,  -270.026214, -47.834697, 5.712926, 0.000003, 0.000053, 0.899986 },
	{ 110,  -271.048339, -48.970844, 7.042929, 0.000003, 0.000053, 0.899986 },
	{ 110,  -272.758422, -47.653564, 5.900618, 0.000003, 0.000053, 0.899986 },
	{ 110,  -272.825225, -45.699539, 6.156506, 0.000003, 0.000053, 0.899986 },
	{ 110,  -270.563964, -49.011718, 7.075955, 0.000003, 0.000053, 0.899986 },
	{ 110,  -270.494750, -44.192737, 7.306849, 0.000003, 0.000053, 0.899986 },
	{ 110,  -271.759399, -45.536426, 5.651482, 0.000003, 0.000053, 0.899986 },
	{ 111,  -260.119140, -52.679607, 5.712926, 0.000003, 0.000060, 0.899986 },
	{ 111,  -261.141265, -53.815750, 7.042929, 0.000003, 0.000060, 0.899986 },
	{ 111,  -262.851318, -52.498481, 5.900618, 0.000003, 0.000060, 0.899986 },
	{ 111,  -262.918121, -50.544448, 6.156506, 0.000003, 0.000060, 0.899986 },
	{ 111,  -260.656860, -53.856624, 7.075955, 0.000003, 0.000060, 0.899986 },
	{ 111,  -260.587646, -49.037647, 7.306849, 0.000003, 0.000060, 0.899986 },
	{ 111,  -261.852325, -50.381336, 5.651482, 0.000003, 0.000060, 0.899986 },
	{ 112,  -250.444625, -57.328281, 5.712926, 0.000003, 0.000060, 0.899986 },
	{ 112,  -251.466766, -58.464431, 7.042929, 0.000003, 0.000060, 0.899986 },
	{ 112,  -253.176849, -57.147151, 5.900618, 0.000003, 0.000060, 0.899986 },
	{ 112,  -253.243652, -55.193122, 6.156506, 0.000003, 0.000060, 0.899986 },
	{ 112,  -250.982376, -58.505290, 7.075955, 0.000003, 0.000060, 0.899986 },
	{ 112,  -250.913177, -53.686317, 7.306849, 0.000003, 0.000060, 0.899986 },
	{ 112,  -252.177841, -55.029998, 5.651482, 0.000003, 0.000060, 0.899986 },
	{ 113,  -240.537567, -62.173187, 5.712926, 0.000003, 0.000068, 0.899986 },
	{ 113,  -241.559692, -63.309341, 7.042929, 0.000003, 0.000068, 0.899986 },
	{ 113,  -243.269760, -61.992057, 5.900618, 0.000003, 0.000068, 0.899986 },
	{ 113,  -243.336578, -60.038028, 6.156506, 0.000003, 0.000068, 0.899986 },
	{ 113,  -241.075302, -63.350204, 7.075955, 0.000003, 0.000068, 0.899986 },
	{ 113,  -241.006103, -58.531234, 7.306849, 0.000003, 0.000068, 0.899986 },
	{ 113,  -242.270751, -59.874916, 5.651482, 0.000003, 0.000068, 0.899986 },
	{ 114,  -230.363342, -66.163902, 5.712926, 0.000003, 0.000068, 0.899986 },
	{ 114,  -231.385482, -67.300048, 7.042929, 0.000003, 0.000068, 0.899986 },
	{ 114,  -233.095565, -65.982772, 5.900618, 0.000003, 0.000068, 0.899986 },
	{ 114,  -233.162338, -64.028732, 6.156506, 0.000003, 0.000068, 0.899986 },
	{ 114,  -230.901092, -67.340911, 7.075955, 0.000003, 0.000068, 0.899986 },
	{ 114,  -230.831893, -62.521942, 7.306849, 0.000003, 0.000068, 0.899986 },
	{ 114,  -232.096542, -63.865623, 5.651482, 0.000003, 0.000068, 0.899986 },
	{ 115,  -220.456253, -71.008811, 5.712926, 0.000003, 0.000076, 0.899986 },
	{ 115,  -221.478424, -72.144950, 7.042929, 0.000003, 0.000076, 0.899986 },
	{ 115,  -223.188476, -70.827682, 5.900618, 0.000003, 0.000076, 0.899986 },
	{ 115,  -223.255279, -68.873649, 6.156506, 0.000003, 0.000076, 0.899986 },
	{ 115,  -220.994003, -72.185821, 7.075955, 0.000003, 0.000076, 0.899986 },
	{ 115,  -220.924789, -67.366851, 7.306849, 0.000003, 0.000076, 0.899986 },
	{ 115,  -222.189437, -68.710533, 5.651482, 0.000003, 0.000076, 0.899986 },
	{ 116,  -209.798141, -74.611938, 5.712926, 0.000003, 0.000076, 0.899986 },
	{ 116,  -210.820297, -75.748077, 7.042929, 0.000003, 0.000076, 0.899986 },
	{ 116,  -212.530364, -74.430809, 5.900618, 0.000003, 0.000076, 0.899986 },
	{ 116,  -212.597167, -72.476768, 6.156506, 0.000003, 0.000076, 0.899986 },
	{ 116,  -210.335891, -75.788948, 7.075955, 0.000003, 0.000076, 0.899986 },
	{ 116,  -210.266693, -70.969978, 7.306849, 0.000003, 0.000076, 0.899986 },
	{ 116,  -211.531341, -72.313659, 5.651482, 0.000003, 0.000076, 0.899986 },
	{ 117,  -199.891067, -79.456848, 5.712926, 0.000003, 0.000083, 0.899986 },
	{ 117,  -200.913192, -80.593002, 7.042929, 0.000003, 0.000083, 0.899986 },
	{ 117,  -202.623291, -79.275718, 5.900618, 0.000003, 0.000083, 0.899986 },
	{ 117,  -202.690078, -77.321678, 6.156506, 0.000003, 0.000083, 0.899986 },
	{ 117,  -200.428817, -80.633857, 7.075955, 0.000003, 0.000083, 0.899986 },
	{ 117,  -200.359619, -75.814880, 7.306849, 0.000003, 0.000083, 0.899986 },
	{ 117,  -201.624267, -77.158569, 5.651482, 0.000003, 0.000083, 0.899986 },
	{ 118,  -189.210128, -83.869689, 5.712926, 0.000003, 0.000083, 0.899986 },
	{ 118,  -190.232284, -85.005828, 7.042929, 0.000003, 0.000083, 0.899986 },
	{ 118,  -191.942352, -83.688568, 5.900618, 0.000003, 0.000083, 0.899986 },
	{ 118,  -192.009155, -81.734535, 6.156506, 0.000003, 0.000083, 0.899986 },
	{ 118,  -189.747879, -85.046699, 7.075955, 0.000003, 0.000083, 0.899986 },
	{ 118,  -189.678710, -80.227722, 7.306849, 0.000003, 0.000083, 0.899986 },
	{ 118,  -190.943344, -81.571411, 5.651482, 0.000003, 0.000083, 0.899986 }
};
new PlayerText:YandNsysTDPlayer[MAX_PLAYERS][2];
new Text:YandNsysTD[3];
new JobTempProcess[MAX_PLAYERS];

new PlayerText:work_td[MAX_PLAYERS][4];

new patrul_id[MAX_PLAYERS],
tick_wanted[MAX_PLAYERS char],
time_wanted[MAX_PLAYERS];

enum TPList {
	tName[46],
	Float:tPos[3],
	tList
}
new TPLIST[MAX_TELEPORTS][TPList] = {
	{""P"[POLICE]"W" Полиция LS", 				{1540.0491,-1676.1680,13.2146},0},
	{""P"[POLICE]"W" ФБР",						{1547.3903,-1281.1523,17.4063},0},
	{""P"[POLICE]"W" RCSD",						{634.0470,-576.5217,16.3359},0},
	{""P"[ARMY]"W" Армия ЛВ", 				{308.7944,1896.6123,17.6406},0},
	{""P"[ARMY]"W" Нац. Гвардия", 				{2778.5317,-2417.1230,13.6359},0},
	{""P"[MAYOR]"W" Мэрия ЛС",				{1481.2506,-1739.8961,13.5469},0},
	{""P"[AUTOSCHOOL]"W" Автошкола",				{744.4413,-1415.2373,13.5169},0},
	{""P"[MEDICS]"W" Больница ЛС", 			{1177.6864,-1323.2448,14.0830},0},
	{""P"[СМИ]"W" Радиоцентр ЛС", 			{1578.6501,-1326.6104,16.4844},0},
	{""P"[MAFIA]"W" Итальянская мафия", 		{665.1582,-476.9240,16.3359},0},
	{""P"[MAFIA]"W" Японская мафия",			{720.4109,-1257.1036,13.6429},0},
	{""P"[MAFIA]"W" Русская мафия",			{1375.2839,396.7043,19.7138},0},
	{""P"[GANG]"W" Ballas Gang",				{2644.2698,-2015.2579,13.5592},0},
	{""P"[GANG]"W" Vagos Gang",				{2756.3188,-1180.4659,69.3984},0},
	{""P"[GANG]"W" Grove Street Gang",		{2495.8179,-1679.6707,13.3391},0},
	{""P"[GANG]"W" Aztecas Gang",			{1677.8265,-2117.4241,13.5469},0},
	{""P"[GANG]"W" Rifa Gang",				{2181.7034,-1799.3695,13.3651},0},
	{""P"[BIKER]"W" Angels MC",				{320.6742,-65.9639,1.5781},0},
	{""P"[BIKER]"W" Bandidos MC",				{2348.8169,247.4270,26.3359},0},
	{"Транспортная компания",			{-501.7820,-525.4227,25.5234},1},
	{"Оружейный завод",			{-93.4274,-305.8030,1.4297},1},
	{"Яблочный сад",			{-90.5659,36.5666,3.1172},1},
	{"Рыбалка",					{835.5135,-1755.9387,13.5520},1},
	{"Лесопилка",				{1099.8252,-303.9689,73.9922},1},
	{"Развозчики продуктов",	{885.0605,-1256.8060,14.9664},1},
	{"Развозчики топлива",		{-21.2761,-352.0749,5.4297},1},
	{"Гетто", 					{2201.2886,-1703.4170,13.5396},2},
	{"Форт карсон", 			{91.6006,1182.4490,21.1174},2},
	{"ЛС-СФ Шоссе",				{-110.4161,-1140.6246,1.6458},2},
	{"Казино",					{1291.6708,-1156.5468,23.8281},2},
	{"Дуэли",					{2048.3074,-1902.8445,13.5538},2},
	{"Центр Развлечений",		{1635.7112,-1170.4965,24.0781},2},
	{"Черный рынок",			{2309.2822,-2000.0479,13.5515},2},
	{"Военкомат",				{1241.3760,325.8867,19.7555},2},
	{"Озеро 'Место поиска предметов'",				{-785.2922,-1893.7770,8.2463},2}
};

enum INTlist {
	iID,
	iName[70],
	Float:iEnterx,
	Float:iEntery,
	Float:iEnterz,
	Float:iEntera,
	Float:iExitx,
	Float:iExity,
	Float:iExitz
};
new bool:Poisk[MAX_PLAYERS];

new edit_int[MAX_PLAYERS];
new bool:Fishing[MAX_PLAYERS],
fish_zone[3],
Float:fish_place[1][4] = {
	{734.0, -1919.5, 836.0, -1892.5}
	/*{-350.00006103515625, -640.0000610351562, -240.00006103515625, -540.0000610351562},
	{-246.00006103515625, -763.0000610351562, -136.00006103515625, -673.0000610351562}*/
},
FishName[8][22] = {
	"Карп",
	"Карась",
	"Щука",
	"Красноперка",
	"Окунь",
	"Тунец",
	"Лещ",
	"Язь"
},
Float:fish_sklad,
Text3D:fish_text;

new Float:HospitalSpawns[12][4] = {
	{1561.8345,496.7100,1070.4226,359.1996}, // spawn 1
	{1564.4565,496.6277,1070.4226,357.2962}, // spawn 2
	{1567.0247,496.6094,1070.4226,1.0329}, // spawn 3
	{1559.8263,508.7991,1070.4226,178.6712}, // spawn 4
	{1562.3278,508.4033,1070.4226,179.9247}, // spawn 5
	{1564.7817,508.7976,1070.4226,180.5748}, // spawn 6
	{1546.6906,508.6857,1070.4226,180.2381}, // spawn 7
	{1544.1390,508.6756,1070.4226,180.2147}, // spawn 8
	{1541.6169,508.6804,1070.4226,180.1914}, // spawn 9
	{1548.8851,496.6806,1070.4226,1.2764}, // spawn 10
	{1546.3250,496.6836,1070.4226,1.9031}, // spawn 11
	{1543.7367,496.6739,1070.4226,359.0831} // spawn 12
};

new Float:HospitalArmSpawns[4][4] = {
	{309.4100,2067.1343,1014.3731,274.7489},
	{309.4100,2067.1343,1014.3731,274.7489},
	{312.5431,2063.4282,1014.3731,177.6381},
	{310.5005,2054.7236,1014.3731,358.0731}
};

enum chetinfo {
	cheatid1
}
new Float:ChetInfo[10][chetinfo],
Cheat1,
Text:CheatText[10],
Text:CheatPanel[3];

new actor[MAX_ACTORSS];
new Text3D:tActor[MAX_ACTORSS];
new actortime[MAX_ACTORSS];

enum ADVERT_DATA {
	adID,
	adSender[24],
	adCheker[24],
	adNews[3],
	adPhone,
	adText[100],
	adTime,
	adVIP,
	adMoney,
bool:adCheked,
bool:adBusy,
bool:adCheking
}
new gAdvert[MAX_ADVERT_COUNT][ADVERT_DATA],
gAdvertCount,
gAdvertTime;

new calls_news[3],
calls_ether[3];

enum object_moved_data {
	moved_id,
	moved_vw,
	moved_modelid,
Float:movedPosX,
Float:movedPosY,
Float:movedPosZ,
Float:movedPosRotationX,
Float:movedPosRotationY,
Float:movedPosRotationZ,
bool:status_moved
}
new moved_info[MAX_OBJECT_MOVED][object_moved_data] = {
	{-1,-1,968,36.051998, -1518.188964, 4.782000, 0.000000, 270.000000, 87.995002,false},//блок пост ЛС 0
	{-1,-1,968,35.923999, -1534.245971, 4.794000, 0.000000, 270.000000, 87.989997,false},//блок пост ЛС 1
	{-1,-1,968,66.999000, -1538.291015, 4.724998, 0.000000, 270.000000, 87.989997,false},//блок пост ЛС 2
	{-1,-1,968,67.121002, -1522.211059, 4.782000, 0.000000, 270.000000, 87.989997,false},//блок пост ЛС 3
	{-1,-1,1569, 59.928001, -1533.542968, 4.499000, 0.000000, 0.000000, 82.000000,false}, //[блок пост] ЛС дверь 4
	{-1,-1,2990, 1589.65820, -1637.95203, 15.00631, 0.00000, 0.00000, 180.00000,false},//[ПД] Ворота в гараж LSPD 5
//	{-1,-1,968,1544.69006348,-1630.90002441,13.13999939,0.00000000,90.00000000,90.00000000,false},//[ПД] шлагбаум в гараж LSPD 6
	{-1,-1,1495,1582.60718, -1637.91467, 12.29627, 0.00000, 0.00000, 0.00000,false},//[ПД] дверь в гараж LSPD 7
	{-1,-1,1522, 3.228899, -76.665580, 1025.362548, 0.000000, 0.000000, 90.000000,false},// 
	{-1,-1,968, 1106.5142,-1744.2399,13.2450,0.0000,90.0000,90.0000,false},//[TAXI] шлагбаум LS 9
	{-1,-1,1495,17.454246, 1411.338745, 1068.350097, 0.000000, 0.000000, 0.000000,false}, // [FBI] дверь оружейной
	{-1,-1,13817, 5000.0, 5000.0, 5000.0, 0.000000, 0.000000, 96.200035,false}, // lcn не работает
	{-1,-1,985, 2720.499511, -2504.235595, 14.171773, 0.000007, -0.000000, 90.099929,false}, // армия лс 2
	{-1,-1,968, 1206.085449, -1501.230102, 13.168020, 0.000000, -88.799987, 90.200073, false}, // Авторынок 13
	{-1,-1, 1495, 193.160522, -152.582107, 1019.205688, 0.000000, 0.000000, 270.000000,false}, // гардероб lspd
	{-1,-1, 1495, 202.633590, -152.582107, 1019.205688, -0.000022, 0.000000, -89.999931,false}, // дверь шерифа
	{-1,-1, 1495, 203.591506, -149.240661, 1019.188720, 0.000000, 0.000000, 0.000000,false}, // дверь лидера
	{-1,-1,980, 1366.781982, 399.024780, 21.041847, 0.000000, 0.000000, 66.100036,false}, // // Штраф стоянка 17
	{-1,-1,985, 2720.499511, -2405.411621, 14.171773, 0.000000, 0.000000, 90.099952,false}, // армия лс
	{-1,-1,1569, 2836.979736, 1091.134399, 1051.567260, 0.000000, 0.000000, 450.000000,false}, // 
	{4,4,1569, 1580.538818, 1754.573608, 1025.403076, 0.000007, 0.000000, 180.000030,false}, // это АШ
	{4,4,1569, 1579.067016, 1746.214965, 1025.403076, 0.000000, 0.000000, 180.000000,false},
	{-1,-1,1569, 2836.971435, 1068.374267, 1051.567260, 0.000000, 0.000000, 450.000000,false},
	{-1,-1,1569, 2832.838623, 1068.374267, 1051.567260, 0.000000, 0.000000, 450.000000,false},
	{-1,-1,1569, 2832.838623, 1091.134399, 1051.567260, 0.000000, 0.000000, 90.000000,false},
	{-1,-1,1495, 208.243621, -151.124130, 1019.205688, -0.000022, 0.000000, -89.999931,false},
	{-1,-1,1569, -1141.117187, 19.201545, 1168.569824, -0.000047, -0.000035, 359.999847,false},
	{-1,-1,1569, -1144.760253, 29.231416, 1168.569824, -0.000065, -0.000028, 179.999938,false},
	{-1,-1,968,-486.344726, -562.425537, 25.272714, 0.000000, -90.000007, 0.000000,false}, // тк у рыбалки
	{-1,-1,968,559.421813, -1255.287475, 16.894090, 0.000022, -89.999946, 30.999986,false}, // автосалон
	{-1,-1,1495, -47.386756, -190.726776, 1025.983154, 0.000000, 0.000000, 0.000000,false}, // rcsd
	{-1,-1,1495, -37.796813, -190.726760, 1025.983154, 0.000000, 0.000000, 0.000000,false}, // rcsd
	{-1,-1,1495, -45.876758, -179.886886, 1025.983154, 0.000000, 0.000000, 180.000000,false}, // rcsd
	{-1,-1,1495, -32.306766, -186.196929, 1025.983154, 0.000000, 0.000000, 450.000000,false}, // rcsd
	{-1,-1,1495, -32.843727, -175.250106, 1025.985229, 0.000000, 0.000000, 0.000000,false}, // rcsd
	{-1,-1,1495, -32.863727, -177.470092, 1025.985229, 0.000000, 0.000000, 270.000000,false} // rcsd
},
Float:moved_pos_object[MAX_OBJECT_MOVED][6]={
	{36.051998, -1518.188964, 4.782000, 0.000000, 0.000000, 87.995002},
	{35.923999, -1534.245971, 4.794000, 0.000000, 0.000000, 87.989997},
	{66.999000, -1538.291015, 4.724998, 0.000000, 0.000000, 87.989997},
	{67.121002, -1522.211059, 4.782000, 0.000000, 0.000000, 87.989997},
	{59.928001, -1533.542968, 4.499000, 0.000000, 0.000000, 0.000000},
	{1597.39136, -1637.95203, 15.00631,   0.00000, 0.00000, 180.00000},
//	{1544.69006348,-1630.90002441,13.13999939, 0.00000000,0.00000000,90.00000000},
	{1582.60718, -1637.91467, 12.29627,   0.00000, 0.00000, 92.63997},
	{3.228899, -76.635574, 1025.368408, -0.000014, 0.000000, 20.000045}, // lcn
	{1106.50305, -1744.17004, 13.005, 0.00, 0.00, 90.0},
	{17.454246, 1411.338745, 1068.350097, 0.000000, 0.000000, 90.000000},
	{657.098754, -475.049255, 13.575927, 0.000000, 0.000000, 0.000000},
	{2720.485839, -2496.274658, 14.171773, 0.000007, -0.000000, 90.099929},
	{1206.085449, -1501.230102, 13.168020, 0.000000, 0.000000, 90.800071},
	{193.160522, -152.582107, 1019.205688, 0.000000, 0.000000, 0.000000},
	{202.633590, -152.582107, 1019.205688, -0.000022, 0.000000, 0.000000}, 
	{203.591506, -149.240661, 1019.188720, 0.000000, 0.000000, 270.000000}, 
	{1366.781982, 399.024780, 15.961837, 0.000000, 0.000000, 66.100036}, //
	{2720.485595, -2397.470703, 14.171773, 0.000000, 0.000000, 90.099952},
	{2836.979736, 1091.134399, 1051.567260, 0.000000, 0.000000, 180.000000},
	{1580.538818, 1754.573608, 1025.403076, 0.000007, 0.000000, -90.000030},
	{1579.067016, 1746.214965, 1025.403076, 0.000000, 0.000000, 90.000000},
	{2836.971435, 1068.374267, 1051.567260, 0.000000, 0.000000, 180.000000},
	{2832.838623, 1068.374267, 1051.567260, 0.000000, 0.000000, 0.000000},
	{2832.838623, 1091.134399, 1051.567260, 0.000000, 0.000000, 0.000000},
	{208.243621, -151.124130, 1019.205688, -0.000022, 0.000000, 0.000000},
	{-1141.117187, 19.201545, 1168.569824, -0.000047, -0.000035, 90.0000300},
	{-1146.241210, 29.231416, 1168.569824, -0.000065, -0.000028, 179.999938},
	{-486.344726, -562.425537, 25.272714, 0.000000, 0.000007, 0.000000},
	{559.421813, -1255.287475, 16.894090, 0.000022, 0.000053, 30.999986},
	{-47.386756, -190.726776, 1025.983154, 0.000000, 0.000000, 270.000000},
	{-37.796813, -190.726760, 1025.983154, 0.000000, 0.000000, -60.000000}, 
	{-45.876758, -179.886886, 1025.983154, 0.000000, 0.000000, 90.000000},
	{-32.306766, -186.196929, 1025.983154, 0.000000, 0.000000, 0.000000},
	{-32.843727, -175.250106, 1025.985229, 0.000000, 0.000000, -60.000000}, 
	{-32.863727, -177.470092, 1025.985229, 0.000000, 0.000000, 180.000000} 
};

new addchet[MAX_PLAYERS];

new FirstBL[MAX_PLAYERS],
UnbanName[MAX_PLAYERS][24];

new FirstReferal[MAX_PLAYERS];

new PageFirst[MAX_PLAYERS][2];

new prod_id[MAX_PLAYERS];

new idaofcar[MAX_PLAYERS],
nedded[MAX_PLAYERS];

new Text3D:gMenu[5],
Text3D:mMenu[3],
Text3D:gHealth[5];

new engine,
lights,
alarm,
doors,
bonnet,
boot,
objective;

new Float:PickupX[MAX_PLAYERS],
Float:PickupY[MAX_PLAYERS],
oldpickup[MAX_PLAYERS],
timepickup[MAX_PLAYERS];

enum grzone {
	grid,
	Float:grX,
	Float:grY,
	Float:grZ,
	Float:grD,
	grName[50],
	grVirt
};
new GREENZONE[100][grzone],
TOTALZONE = 0;

new advertise_price,
action_server[3];

new car_spawn[MAX_PLAYERS];

new car_autoschool[MAX_PLAYERS];

new WantNickChange[MAX_PLAYERS][MAX_PLAYER_NAME];
new Text:logo_TD[4];

new HealOffer[MAX_PLAYERS],
HealPrice[MAX_PLAYERS];

new dostup[MAX_PLAYERS];

enum enter_info {
	tpName[50],
	Float:tpEnterPos_X,
	Float:tpEnterPos_Y,
	Float:tpEnterPos_Z,
	tpEnterInt,
	tpEnterWorld,
	Float:tpExitPos_X,
	Float:tpExitPos_Y,
	Float:tpExitPos_Z,
	Float:tpExitPos_A,
	tpExitInt,
	tpExitWorld
}
new gTeleportsToD[TP_COUNT][enter_info] = { //saneka
	/*0*/{"Оружейный завод",-86.3748,-299.3630,2.7646,0,0,974.6744,-430.3956,1471.5420,177.9552,2,1}, // оружейный завод
	/*1*/{"Выход",974.8273,-428.4263,1471.5420,2,1,-90.0241,-300.4619,2.7646,91.1611,0,0},
	/*2*/{"Больница г.ЛС",1172.5408,-1325.2740,15.4040,0,0,2187.5295,586.6940,1080.4542,177.1751,93,20},//МЧС ЛС
	/*3*/{"Выход на улицу",2187.6035,588.1922,1080.4542,93,20,1174.0408,-1325.2740,14.9922,270.0000,0,0},//МЧС ЛС
	/*4*/{"Вход на крышу",1556.2736,489.0876,1070.4316,92,20,1161.5529,-1328.3661,31.4985,358.4099,0,0},//МЧС ЛС крыша
	/*5*/{"Спуск с крыши",1161.5112,-1329.8655,31.4943,0,0,1556.3342,490.5883,1070.4316,359.5603,92,20},//МЧС ЛС крыша
	/*6*/{"Радиоцентр г.ЛС",1569.6614,-1334.6711,16.4844,0,0,2846.7087,1080.5653,1052.5673,89.1133,2,1},//LS News
	/*7*/{"Выход",2848.8918,1080.5110,1052.5673,2,1,1570.6003,-1333.5015,16.4844,321.2440,0,0},//LS News
	/*8*/{"Вход в офис",1548.6804,-1363.7773,326.2183,0,0,2846.7087,1080.5653,1052.5673,89.1133,2,1},//LS News крыша
	/*9*/{"Выход на крышу",713.7759,-1518.7561,1415.4099,74,10,1547.8295,-1365.0126,326.2109,145.4391,0,0},//LS News крыша
	/*10*/{"Полицейский участок г.ЛС",1555.1647,-1675.6324,16.1953,0,0,198.0930,-172.8501,1019.3028,355.5425,6,1},//LSPD 1
	/*11*/{"Выход на улицу",197.9577,-174.6349,1019.3028,6,1,1553.6647,-1675.6243,16.1953,89.6884,0,0},//LSPD 1
	/*12*/{"Полицейский участок г.ЛС",1568.6637,-1689.9839,6.2188,0,0,191.4084,-141.1612,1020.2169,181.4725,6,1},//LSPD 2
	/*13*/{"Выход на парковку",191.4517,-138.9794,1020.2169,6,1,1568.6019,-1691.4827,5.8906,177.6423,0,0},//LSPD 2
	/*14*/{"FBI",1546.9646,-1268.9373,17.4063,0,0,14.4277,1398.1688,1069.3500,358.1964,75,43},//FBI
	/*15*/{"Выход на улицу",14.2864,1395.2013,1070.0265,75,43,1545.2954,-1270.5740,17.4063,137.3024,0,0},//FBI
	/*16*/{"Правительство",1481.0220,-1772.2487,18.7958,0,0,1424.7102,-22.5558,1000.8815,269.1614,9,4},//МЭРИЯ
	/*17*/{"Выход на улицу",1422.9574,-22.6177,1000.8815,9,4,1481.0292,-1770.7487,18.7958,359.7233,0,0},//МЭРИЯ
	/*18*/{"Автошкола",739.0198,-1418.5115,13.5234,0,0,-4.9542,-82.0579,1026.4089,268.2304,3,5},//АШ
	/*19*/{"Выход на улицу",-6.7732,-82.0673,1026.4089,3,5,738.8711,-1415.8932,13.5234,359.9961,0,0},//АШ
	/*20*/{"Центр занятости",1411.5740,-1699.5056,13.5395,0,0,-199.6864,-19.5057,1011.1747,180.2063,1,1}, // Центр занятости
	/*21*/{"Выход",-199.6374,-17.7011,1011.1747,1,1,1413.4899,-1700.9507,13.5395,237.0885,0,0}, // выход с центра занятости
	/*22*/{"Итальянская мафия",1261.1034,-871.6332,42.9528,0,0,1393.1777,-5.5639,1000.9218,176.8710,73,49},//LCN
	/*23*/{"Выход на улицу",1393.3514,-3.6810,1000.9218,73,49,1261.7031,-873.9026,42.9528,185.6838,0,0},// LCN
	/*24*/{"Японская мафия",735.5452,-1262.6732,13.6429,0,0,28.9218,-53.5375,2001.4811,87.4315,73,50},//Yakuza
	/*25*/{"Выход на улицу",30.6420,-53.6667,2001.4811,73,50,733.5668,-1262.5682,13.6429,91.5969,0,0},//Yakuza
	/*26*/{"Русская мафия",1382.7435,408.0285,19.7607,0,0,1406.2349,-11.6639,1000.9285,89.5999,73,51},//RM
	/*27*/{"Выход на улицу",1408.2738,-11.6748,1000.9285,73,51,1381.1564,408.7311,19.7590,69.6867,0,0},//RM
	/*28*/{"Ballas",2650.7026,-2021.7524,14.1766,0,0,-25.3126,-102.8632,1029.9192,359.1626,15,1},//Ballas
	/*29*/{"Выход на улицу",-25.4053,-105.0203,1029.9192,15,1,2648.7964,-2021.8689,13.5469,88.5217,0,0},//Ballas
	/*30*/{"Vagos",2756.3184,-1182.7939,69.4034,0,0,-25.3126,-102.8632,1029.9192,359.1626,15,2},//Vagos
	/*31*/{"Выход на улицу",-25.4053,-105.0203,1029.9192,15,2,2756.3188,-1181.2939,69.3966,359.9770,0,0},//Vagos
	/*32*/{"Grove",2495.4343,-1691.0961,14.7656,0,0,-25.3126,-102.8632,1029.9192,359.1626,15,3},//Grove
	/*33*/{"Выход на улицу",-25.4053,-105.0203,1029.9192,15,3,2495.4336,-1689.5961,14.5297,0.0239,0,0},//Grove
	/*34*/{"Aztecas",1673.6831,-2122.4465,14.1460,0,0,-25.3126,-102.8632,1029.9192,359.1626, 15,4},//Aztec
	/*35*/{"Выход на улицу",-25.4053,-105.0203,1029.9192,15,4,1674.6377,-2121.2896,13.9337,320.4736,0,0},//Aztec
	/*36*/{"Rifa",2185.8384,-1815.2247,13.5469,0,0,-25.3126,-102.8632,1029.9192,359.1626,15,5},//Rifa
	/*37*/{"Выход на улицу",-25.4053,-105.0203,1029.9192,15,5,2185.7241,-1812.1091,13.5469,0.7337,0,0},//Rifa
	/*38*/{"Правительство",1413.2003,-1790.4957,15.4356,0,0,1439.8270,-17.4067,1000.8815,88.0298,9,4},//Правительство
	/*39*/{"Выход на улицу",1441.6066,-17.4502,1000.8815,9,4,1409.4977,-1790.4851,13.5469,88.7108,0,0},//Правительство
	/*40*/{"Центр развлечений",1211.6141,-1750.2025,13.5941,0,0,-1147.5216,-287.8670,1128.3345,269.4653,2,2},//центр развлечений
	/*41*/{"Выход на улицу",-1150.3396,-287.8244,1128.3345,2,2,1210.0951,-1748.0702,13.5938,44.4899,0,0},//центр развлечений
	/*44*/{"Многоквартирный дом",865.3445,-1633.8497,14.9297,0,0,743.1202,-111.5438,1180.7050,266.5024,4,2},// квартиры
	/*45*/{"Выход",741.6232,-111.3714,1180.7050,4,2,865.1307,-1636.0642,14.9297,178.7617,0,0},
	/*44*/{"Казарма",2786.0994,-2472.8640,14.6866,0,0,252.6794,103.3473,1024.3394,358.6109,87,59},// казарма армия LS
	/*45*/{"Выход на улицу",252.6430,101.8477,1024.3394,87,59,2786.7407,-2468.8049,13.6339,359.6348,0,0},//казарма армия LS
	/*46*/{"Тир",305.3522,-141.8380,1004.0625,7,41,344.4562,-182.4450,987.6703,2.0303,7,42},
	/*47*/{"Выход",344.3913,-183.9476,987.6703,7,42,307.3565,-141.9173,1004.0625,269.6431,7,41},
	/*48*/{"Военкомат",1241.3760,325.8867,19.7555,0,0,2464.2158,1343.0038,3015.3784,270.0906,84,63},// Военкомат
	/*49*/{"Выход на улицу",2462.7158,1343.0015,3015.3784,84,63,1242.8717,328.9208,19.7578,337.2735,0,0},//Военкомат
	/*50*/{"Склад",2751.6023,-2432.4880,13.6484,0,0,316.4528,-168.3600,999.5938,359.9998,6,31},// ЛС склад
	/*51*/{"Выход на улицу",316.3708,-169.8620,999.6010,6,31,2753.4778,-2432.3752,13.6432,268.7439,0,0},// ЛС склад
	/*52*/{"Выход",704.2930,-1292.8134,21.2401,0,0,694.0924,-1282.2395,13.6430,357.6194,0,0},
	/*53*/{"Полицейский участок",626.9666,-571.7867,17.9207,0,0,-59.6790,-185.3579,1026.9832,268.8805,9,6}, // вход в rcsd
	/*54*/{"Крыша",1577.7976,-1690.5012,6.2188,-1,-1,1565.1028,-1665.4083,28.3956,355.3339,0,0}, //верт LSPD
	/*55*/{"Выход в гараж",1564.9807,-1666.9033,28.3956,0,0,1577.7280,-1692.3896,6.2188,179.2620,0,0},//верт LSPD
	/*56*/{"Склад",2714.1404,-2445.1436,13.6400,1,15,316.4528,-168.3642,999.5938,356.8665,6,35},//склад оружейный завод
	/*57*/{"Выход на улицу",316.3708,-169.8620,999.6010,6,35,2712.6416,-2445.0813,13.6399,87.6178,0,0},//склад оружейный завод
	/*58*/{"Лифт",2185.3337,568.6909,1080.4542,93,20,1552.2980,490.5710,1070.4316,359.2470,92,20},//МЧС ЛС 2 этаж
	/*59*/{"Лифт",1552.2783,489.0711,1070.4316,92,20,2185.3396,570.1909,1080.4542,359.7798,93,20},//МЧС ЛС 2 этаж
	/*60*/{"Выход",-61.4258,-185.3417,1026.9924,9,6,630.5340,-571.8819,16.3359,270.3563,0,0}, // выход с rcsd
	/*62*/{"Крыша",694.0915,-1284.4480,13.6429,0,0,706.6178,-1293.1959,21.2401,270.5118,0,0},// крышка Якудзы
	/*63*/{"Выход",318.6144,1114.5029,1083.8828,5,1,2169.2759,-1674.1080,15.0859,242.2984,0,0},//лаборатория RM
	/*64*/{"Тир",305.3506,-141.8417,1004.0625,7,66,344.4562,-182.4450,987.6703,2.0303,7,500},//ТИР ЛС
	/*65*/{"Выход",344.3913,-183.9476,987.6703,7,500,307.0656,-141.2360,1004.0625,293.4333,7,66},//ТИР ЛС выход
	/*66*/{"Тир",1601.0734,-1636.9688,13.7188,0,0,344.4562,-182.4450,987.6703,2.0303,6,31},//ТИР LSPD вход 1601.0734,-1636.9688,13.7188
	/*67*/{"Выход",344.3913,-183.9476,987.6703,6,31,1600.9435,-1633.8024,13.7187,267.8597,0,0},//ТИР LSPD выход
	/*68*/{"Многоквартирный дом",2290.1345,-1795.9583,13.5469,0,0,743.1202,-111.5438,1180.7050,266.5024,4,1},// квартиры
	/*69*/{"Выход",741.6232,-111.3714,1180.7050,4,1,2292.5627,-1796.0436,13.5469,269.7552,0,0},
	/*70*/{"Центральный банк",1286.7936,-1329.2477,13.5548,0,0,-1141.1906,15.2285,1169.5699,87.9979,78,2},// банк запаска
	/*71*/{"Выход на улицу",-1138.9050,15.0664,1169.5699,78,2,1284.7667,-1329.1180,13.5459,90.1679,0,0},//банк запаска
	/*72*/{"Штаб",2758.9226,-2364.0291,13.6328,0,0,758.8699,-2.7475,1151.9795,270.5926,89,61},//штаб армия LS
	/*73*/{"Выход на улицу",757.3700,-2.7630,1151.9795,89,61,2758.7786,-2366.4626,13.6328,178.8397,0,0},//штаб армия LS
	/*74*/{"Второй этаж",1441.6046,-28.2108,1000.8815,9,4,2036.2454,1731.3547,1026.7548,269.1614,9,4},// мэрия второй этаж
	/*75*/{"Выход в холл",2034.4934,1731.3552,1026.7548,9,4,1439.7360,-28.1538,1000.8815,89.9332,9,4},// выхож в холл
	/*76*/{"Автошкола",739.0618,-1428.7749,13.8984,0,0,8.9392,-85.1196,1026.4089,91.8455,3,5},// автошкола запаска
	/*77*/{"Выход на улицу",11.3942,-85.0066,1026.4089,3,5,739.1464,-1430.3296,13.5234,181.7311,0,0},// автошкола запаска
	/*78*/{"Центральный банк",1310.1841,-1366.7958,13.5065,0,0,-1149.6382,18.0627,1169.5699,270.9629,78,2},// центральный банк главный
	/*79*/{"Выход",-1151.3610,18.1216,1169.5699,78,2,1310.2936,-1368.7946,13.5540,179.8849,0,0},// центральный банк главный
	/*80*/{"Семейный центр",1495.2009,-1279.9304,14.5749,0,0,132.5267,122.9989,1003.0500,91.2281,6,6},// центральный банк главный
	/*81*/{"Выход",134.9722,123.0491,1003.0480,6,6,1495.3472,-1282.1987,14.5601,196.7817,0,0},// центральный банк главный
	/*82*/{"Вход в Бар",325.9570,-38.1070,1.6448,0,0,789.3809,2507.1846,1502.0000,1.2855,0,0},// вход в байкеры
	/*83*/{"Выход",789.2207,2505.4590,1502.0000,0,0,327.4407,-39.0937,1.6421,229.3942,0,0},// выход
	/*84*/{"Вход на склад",SkladOne,0,0,2361.6567,1848.2925,1211.6302,268.2010,1,1},// склад 1
	/*85*/{"Выход на улицу",2358.7620,1847.9172,1211.6302,1,1,2256.8005,79.3929,26.4844,76.4862,0,0},
	/*86*/{"Вход на склад",SkladTwo,0,0,2361.6567,1848.2925,1211.6302,268.2010,2,2},// склад 2
	/*87*/{"Выход на улицу",2358.7620,1847.9172,1211.6302,2,2,-2089.4307,-2264.0173,30.6250,146.6595,0,0},
	/*88*/{"Вход на склад",SkladThree,0,0,2361.6567,1848.2925,1211.6302,268.2010,3,3},// склад 3
	/*89*/{"Выход на улицу",2358.7620,1847.9172,1211.6302,3,3,1232.3920,144.9258,20.2784,256.6405,0,0},//выход из 3 склада
	/*90*/{"Вход в диспетчерскую",102.3557,-241.6447,1.6274,0,0,94.0761,-237.0931,1.6274,90.0,0,0},// ВХОД В диспетчерскую
	/*91*/{"Выход на улицу",95.9929,-236.7345,1.6274,0,0,102.4084,-243.3858,1.6274,180.0,0,0},//выход из диспетчерской
	/*92*/{"Вход в оружейный склад",136.1044,-281.3703,1.6274,0,0,171.7846,1850.9078,643.0618,90.0,0,0},// Вход в оружейный склад
	/*93*/{"Выход на улицу",173.3247,1851.1248,643.0618,0,0,136.4933,-283.6468,1.6274,180.0,0,0},
	/*94{"Вход в Бар",2355.6836,247.3056,26.7145,0,0,789.3809,2507.1846,1502.0000,1.2855,92,92},*/// вход в байкеры 2
	/*95{"Выход",789.2207,2505.4590,1502.0000,92,92,2353.5300,247.3599,26.4466,92.5602,0,0}*/// выход
    /*94*/{"Выход на улицу", 1752.5259,-2738.2612,8.1870,0,0,1752.5259,-2738.2612,8.1870,348.7757,0,0},// вход в байкеры 2
	/*95*/{"Вход в аэропорт",1752.5259,-2738.2612,8.1870,0,0,1752.5259,-2738.2612,8.1870,348.7757,0,0}




};
new TeleportPickup[sizeof(gTeleportsToD)] = {-1, ...};
// ПИКАПЫ
new Float:gPickup[PICKUPS_COUNT][3] ={//saneka
	/*0*/{-1140.0588,28.7084,1169.5699},// инкассатор
	/*1*/{-196.5150,-33.0343,1011.1747},//центр занятости устройство
	/*2*/{8.0855,-75.5049,1026.4089},//АШ покупка лицензий
	/*3*/{1999.4419,1342.7190,878.4910},// покупка дома на колесах
	/*4*/{2208.7278,-2529.0493,13.5469},// раздевалка утилизация мусора
	/*5*/{1680.8625,406.1147,30.6469},// работа на стройке
	/*6*/{1152.4524,-551.9349,1122.1689},// выход с лодки
	/*7*/{2649.7529,-2027.5674,13.5469},// Ballas help pick
	/*8*/{1555.7194,518.3581,1070.4316},// регистритура в больнице
	/*9*/{306.1951,-135.4640,1029.4011},//казино раздевалка
	/*10*/{1628.8553,-2266.8091,-1.1866},//помощь о игре спавн ЛС
	/*11*/{766.8839,-1509.0037,1417.8119}, // фотик в СМИ
	/*12*/{5000.2778,4000.9081,5000.5545},//бесплатная еда спавн ЛС
	/*13*/{2180.6333,-1812.8513,13.5469},// Rifa help pick
	/*14*/{2752.4421,-2471.4094,13.6484}, // армия ЛС / ящик
	/*15*/{1263.7209,-751.4987,1164.3887},// выход с квартиры
	/*16*/{342.7650,-165.4081,987.6703},//  тир
	/*17*/{1678.2281,-2123.8213,13.5469}, // Aztec help pick
	/*18*/{1429.3641,-21.8939,1000.8815},//пикап правительство
	/*19*/{983.0865,-435.1460,1471.5420},//[оружейный завод] раздевалка
	/*20*/{958.8986,-443.5620,1471.5500},//[оружейный завод] заготовка
	/*21*/{0.8833,-73.0185,1026.4089},// автошкола раздевалка
	/*22*/{-109.3552,11.8434,3.1257},//[Ферма] ящик
	/*23*/{-110.8474,12.3870,3.1257},//[Ферма] лейка
	/*24*/{-81.0051,37.4192,3.1172},//[Ферма] раздевалка
	/*25*/{-5.8096,-89.7808,1026.4089}, // metro | spawn
	/*26*/{1390.3114,-24.3432,1005.0829},// [Mafia] LCN склад
	/*27*/{1390.4547,-7.2559,1000.9417},//[Mafia] RM склад
	/*28*/{312.3183,-166.1407,999.6010},// [Армии] выдача оружия
	/*29*/{196.7760,-169.0280,1019.3028},//[LSPD] Отделение полиции меню
	/*30*/{1297.9482,2464.1494,1011.8739},//[Alcotraz] заготовка
	/*31*/{1296.6395,2441.2144,1011.8739},//[Alcotraz] склад
	/*32*/{197.3281,-152.8567,1020.2148},//[Раздевалка] ПОЛИЦИЯ
	/*33*/{1475.4526,246.3277,1013.5359},//[Раздевалка] ФБР
	/*34*/{2172.9651,571.7098,1080.4542},//[Раздевалка] МЧС
	/*35*/{255.6401,108.7532,1024.3394},//[Раздевалка] АРМИИ
	/*36*/{2831.7214,1089.4333,1052.5673},//[Раздевалка] NEWS
	/*37*/{446.5062,-1950.6898,8.5650},// бар на улице яхт-клуб
	/*38*/{51.2602,-3.7538,1225.5107},//раздевалка rcsd
	/*39*/{765.9391,11.4027,1000.7066},//[Спорт-Зал] Инфо
	/*40*/{2050.2842,1735.9808,1026.7609},//[Правительство] одежда
	/*41*/{1106.5482,-299.7957,74.5391},//[Лесопилка] Раздевалка
	/*42*/{2492.7915,-1686.2179,13.5121}, // Grove help pick
	/*43*/{17.0178,1407.6865,1069.3866},//[FBI] Маскирока
	/*44*/{-25.5349,-72.6542,1026.4205},//[Ballas] склад
	/*45*/{-25.5349,-72.6542,1026.4205},//[Vagos] склад
	/*46*/{-25.5349,-72.6542,1026.4205},//[Grove] склад
	/*47*/{-25.5349,-72.6542,1026.4205},//[Aztec] склад
	/*48*/{-25.5349,-72.6542,1026.4205},//[Rifa] склад
	/*49*/{33.3096,-32.5851,2001.0516},//[Мафии] Yakuza склад
	/*50*/{2751.1301,-1179.9524,69.3994}, // Vagos help pick
	/*51*/{-1142.3745,27.4869,1169.5699},//[Банк]
	/*52*/{-1142.3768,24.2754,1169.5699},//[Банк]
	/*53*/{-1142.3745,21.3482,1169.5699},//[Банк]
	/*54*/{1111.7571,-1771.2794,894.0478},//[выход с гаража] N
	/*55*/{1045.7643,-1780.6997,894.0478},//[выход с гаража] D
	/*56*/{1112.3341,-1858.3147,894.0478},//[выход с гаража] B
	/*57*/{1052.9872,-1851.4395,894.0478},//[выход с гаража] A
	/*58*/{-199.6887,-32.9954,1011.1747},// зарплата / налог центр занятости
	/*59*/{1268.5441,-870.8391,42.9528},// LCN help pick
	/*60*/{750.2584,-113.1717,1180.7050},//[квартиры] вход на парковку
	/*61*/{1680.0447,696.4232,589.8863},//[квартиры] выход с парковки в отель
	/*62*/{-58.0297,1366.1035,1080.2109},//[Ballas] аптечка
	/*63*/{301.4053,301.0569,1003.5391},//[Vagos] аптечка
	/*64*/{2499.2332,-1710.5901,1014.7422},//[Grove] аптечка
	/*65*/{-46.1472,1401.3104,1084.4370},//[Aztec] аптечка
	/*66*/{2449.5359,-1685.9984,1013.5078},//[Rifa] аптечка
	/*67*/{1064.1241,-304.1447,73.9922},// лесопилка unload 2
	/*68*/{1064.1243,-296.1124,73.9851},// лесопилка unload 1
	/*69*/{-45.2206,-195.2749,1026.9850}, // раздевалка rcsd
	/*70*/{734.4747,-1266.5869,13.6429},// Yakuza help pick
	/*71*/{1380.3981,411.4984,19.7632},// RM help pick
	/*72*/{1128.1506,-1029.8176,1046.0126}, // podval exit
	/*73*/{3619.1650,-754.1674,20.2831}, // устройство на работу (в тюрьме)
	/*74*/{3527.1494,-670.3874,20.2564}, // побег с тюрьмы
	/*75*/{2009.3759,1029.7954,1069.0499}, // чердак exit
	/*76*/{2833.4377,1080.5173,1052.5673}, // новости билборды
	/*77*/{802.7189,2513.2903,1502.0144},//склад байкера
	/*78*/{802.7189,2513.2903,1502.0144},
 	/*79*/{2355.6836,247.3056,26.7145},//вход
 	/*80*/{789.2207,2505.4590,1502.0000}//выход
 		
	
};
new gPickupData[PICKUPS_COUNT][3] ={//int | mir || id
	{78,2,1275},//0
	{1,1,1239},//1
	{3,5,1239},//2
	{-1,-1,1239},//3
	{-1,-1,1275},//4
	{-1,-1,1275},//5
	{-1,-1,1318},//6
	{0,0,1314},//7
	{92,-1,1314},//8
	{-1,-1,1275},//9
	{0,0,18631},//10
	{-1,-1,1239},//11
	{0,0,2663},//12
	{0,0,1314},//13
	{-1,-1,2358},//14 
	{-1,-1,1318},//15
	{7,42,1239},//16
	{0,0,1314},//17
	{9,4,1239},//18
	{2,1,1239},//19
	{2,1,19135},//20
	{3,5,1275},//21
	{0,0,19639},//22
	{0,0,19621},//23
	{0,0,1275},//24
	{3,5,1239},//25
	{73,49,11745},//26
	{73,51,11745},//27
	{6,-1,1239},//28
	{-1,-1,1239},//29
	{88,200,1239},//30
	{88,200,2386},//31
	{-1,-1,1275},//32
	{75,43,1275},//33
	{93,-1,1275},//34
	{87,-1,1275},//35
	{2,1,1275},//36
	{0,0,1239},//37
	{-1,-1,1239},//38 покупка семьи
	{-1,-1,1239},//39
	{9,4,1275},//40
	{0,0,1275},//41
	{0,0,1314},//42
	{75,43,1275},//43
	{15,1,11745},//44
	{15,2,11745},//45
	{15,3,11745},//46
	{15,4,11745},//47
	{15,5,11745},//48
	{-1,-1,11745},//49
	{0,0,1314},//50
	{78,-1,1274},//51
	{78,-1,1274},//52
	{78,-1,1274},//53
	{-1,-1,1318},//54
	{-1,-1,1318},//55
	{-1,-1,1318},//56
	{-1,-1,1318},//57
	{1,1,1239},//58
	{0,0,1314},//59
	{-1,-1,19130},//60
	{4,-1,1318},//61
	{6,52,1240},//62
	{4,53,1240},//63
	{3,54,1240},//64
	{8,55,1240},//65
	{2,56,1240},//66
	{0,0,19198},//67
	{0,0,19198},//68
	{-1,-1,1275},//69
	{0,0,1314}, // 70
	{0,0,1314}, // 71
	{10,-1,1318}, // 72
	{0,0,1275}, // 73
	{0,0,19804}, // 74
	{25,-1,1318}, // 72
	{2,1,1239}, // 76
    {0,0,11745},//77
    {92,92,11745},//78
	{0,0, 19130},//79
	{92,92,19130}//80
};
enum pick3dtext {
	picName[64],
	picColor[36]
}
new gPickupDataName[PICKUPS_COUNT][pick3dtext] ={//3dText || color
	{"None",COLOR_WHITE},//0
	{"Трудоустройство",COLOR_WHITE},//1
	{"Покупка лицензий",COLOR_WHITE},//2
	{"Дом на колесах",COLOR_WHITE},//3
	{"Раздевалка",COLOR_WHITE},//4
	{"Раздевалка",COLOR_WHITE},//5
	{"Выход",COLOR_WHITE},//6
	{"{CC00FF}Ballas\n"W"Помощь игроку",COLOR_WHITE},//7
	{"Регистратура",COLOR_WHITE},//8
	{"Раздевалка",COLOR_WHITE},//9
	{"FAQ",COLOR_WHITE},//10
	{"FAQ",COLOR_WHITE},//11
	{"Бесплатная еда",COLOR_WHITE},//12 6666FF
	{"{299273}Rifa\n"W"Помощь игроку",COLOR_WHITE},//13
	{"None",COLOR_WHITE},//14
	{"Выход в подъезд\nУправление квартирой:"ORANGE" ALT",COLOR_WHITE},//15
	{"Начало стрельбы",COLOR_WHITE},//16
	{"{08fbff}Aztec\n"W"Помощь игроку",COLOR_WHITE},//17
	{"None",COLOR_WHITE},//18
	{"Прием рабочих",COLOR_WHITE},//19
	{"Заготовка",COLOR_WHITE},//20
	{"Раздевалка",COLOR_WHITE},//21
	{"Ящик для сбора яблок",COLOR_WHITE},//22
	{"Лейка",COLOR_WHITE},//23
	{"Раздевалка",COLOR_WHITE},//24
	{"ПДД",COLOR_WHITE},//25
	{"None",COLOR_WHITE},//26
	{"None",COLOR_WHITE},//27
	{"Оружие",COLOR_WHITE},//28
	{"Отделение полиции",COLOR_WHITE},//29
	{"Заготовка",COLOR_WHITE},//30
	{"Склад",COLOR_WHITE},//31

	{"Раздевалка",COLOR_WHITE},//32
	{"Раздевалка",COLOR_WHITE},//33
	{"Раздевалка",COLOR_WHITE},//34
	{"Раздевалка",COLOR_WHITE},//35
	{"Раздевалка",COLOR_WHITE},//36
	{"Бар",COLOR_WHITE},//37
	{"None",COLOR_WHITE},//38
	{"Информация",COLOR_WHITE},//39
	{"None",COLOR_WHITE},//40
	{"Раздевалка",COLOR_WHITE},//41
	{"{009a00}Grove Street\n"W"Помощь игроку",COLOR_WHITE},//42
	{"None",COLOR_WHITE},//43
	{"None",COLOR_WHITE},//44
	{"None",COLOR_WHITE},//45
	{"None",COLOR_WHITE},//46
	{"None",COLOR_WHITE},//47
	{"None",COLOR_WHITE},//48
	{"None",COLOR_WHITE},//49

	{"{dbd705}Vagos\n"W"Помощь игроку",COLOR_WHITE},//50
	{"None",COLOR_WHITE},//51
	{"None",COLOR_WHITE},//52
	{"None",COLOR_WHITE},//53

	{"None",COLOR_WHITE},//54
	{"None",COLOR_WHITE},//55
	{"None",COLOR_WHITE},//56
	{"None",COLOR_WHITE},//57
	{"None",COLOR_WHITE},//58
	{"{d6a200}La Cosa Nostra\n"W"Помощь игроку",COLOR_WHITE},//59
	
	{"Вход на парковку",COLOR_WHITE},//60
	{"Многоквартирный дом",COLOR_WHITE},//61

	{"None",COLOR_WHITE},//62
	{"None",COLOR_WHITE},//63
	{"None",COLOR_WHITE},//64
	{"None",COLOR_WHITE},//65
	{"None",COLOR_WHITE},//66

	{"None",COLOR_WHITE},//67
	{"None",COLOR_WHITE},//68
	{"None",COLOR_WHITE},//69
	
	{"{ff0000}Yakuza\n"W"Помощь игроку",COLOR_WHITE},//70
	{"{b5b6b5}Russian Mafia\n"W"Помощь игроку",COLOR_WHITE},//71
	{"None",COLOR_WHITE}, // 72
	{""ORANGE"Трудоустройство",COLOR_WHITE}, // 73
	{"None",COLOR_WHITE},
	{"None",COLOR_WHITE},
	{"None",COLOR_WHITE}, // 76
	{"None",COLOR_WHITE}, //77
	{"None",COLOR_WHITE}, //78
	{"None",COLOR_WHITE}, //79
	{"None",COLOR_WHITE}//80
};

new gPickID[sizeof(gPickup)] = {-1, ...};

CB: Float:GetDistanceBetweenPlayers(p1,p2) {
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2)) return -1.00;
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
////////////////////////////////////////////////////////////////////////////////
enum pl_cars {
	carID[2],
	carModel[2],
	carColor_one[2],
	carColor_two[2],
	Float:carDrived[2],
	Float:carFuel[2],
	Float:carAkum[2],
	carVehcom_1[2],
	carVehcom_2[2],
	carVehcom_3[2],
	carVehcom_4[2],
	carVehcom_5[2],
	carVehcom_6[2],
	carVehcom_7[2],
	carVehcom_8[2],
	carVehcom_9[2],
	carVehcom_10[2],
	carVehcom_11[2],
	carVehcom_12[2],
	carVehcom_13[2],
	carVehcom_14[2],
	carNarko[2],
	carDeagle[2],
	carM4[2],
	carAK47[2],
	carShot[2],
	carKanistra[2],
	carMats[2],

	carPaintJob[2],
	carLock[2]
};
new CarsInfo [ MAX_PLAYERS ] [ pl_cars ];
new house_car[MAX_PLAYERS][2],
NumberVehicle[MAX_PLAYERS][2][26];

new bl_reason[MAX_PLAYERS][50];

// автоугон
new thef_car[MAX_PLAYERS];
new thef_timer[MAX_PLAYERS];

enum trunkInfo {
	tGun[4],
	tDrugs,
	tMats,
	tNarko,
	tKanistra,
	tOpen
};
new TrunkInfo[MAX_VEHICLES][trunkInfo];

new player_ip[MAX_PLAYERS][16],
player_ip_check[MAX_PLAYERS][16],
player_name[MAX_PLAYERS][24],
player_pass[MAX_PLAYERS][75],
player_salt[MAX_PLAYERS][75];
new Float:PlayerArmour[MAX_PLAYERS];

enum pInfo {
	pID,
	pEmail[36],
	pLevel,
	pHacker,
	pCredit,
	pCreditDay,
	pKeyCar,
	pHackProg,
	pAdmin,
	pJail,
	pIpReg[18],
	pKeyip[5],
	Float:pHP,
	pDataReg[32],
	pHouse,
	pTempKey,
	pRoom,
	pBusiness,
	pSex,
	pArrested,
	pMute,
	pCrimes,
	pBoost,
	pExp,
	pCash,
	pDrugs,
	pMats,
	pSalary,
	pJailTime,
	pLeader,
	giveAdmin,
	giveLeader,
	giveMoney,
	giveObj,
	giveDonate,
	pMember,
	pRank,
	pSkin,
	pJob,
	pFracSkin,
	pPhone,
	pZakonp,
	pAddiction,
	pMarried[MAX_PLAYER_NAME],
	pDrug[MAX_PLAYER_NAME],
	pBank,
	pMobile,
	pSearch,
	pGunSkill[6],
	QuestHacker[4],
	pPlayTime[2],
	pAccusedof[44],
	pVictim[MAX_PLAYER_NAME],
	pHospital,
	pWatch,
	pRod,
	pMag,
	pRope,
	pRopes,
	pWorms,
	pPrefix_i,
	pPrefix_s[64],
	Float:pFish,
	pRouble,
	pFamily,
	pFmute,
	pProgress,
	pBook,
	pPhoneNumber[25],
	pSpawn,
	pSettings[12],
	pMedHeal,
	bizz_work,
	bizz_status,
	bizz_cash,
	bizz_lcash,
	pBlago,
	pfWarn,
	pPremium,
	pSatiety,
	pFamRank,
	pBox,
	Float:pSnow,
	pMPromo,
	pAdmMSG,
	pAdmKL,
	pGoogle[64],
	pGoogleSec,
	pGenGoogle[17],
	Float:pX,
	Float:pY,
	pSellNeed[5],
	pGunLic,
	pDrugInv,
	pSlotItem[8],
	pDonateBank,
	pFight_on,
	pFight_off,
	pWalk,
	pExpJob[9],
	pTheftExp,
	pTheftlvl,
	ptheftTime,
	pAdvert,
	pThrist,
	pInventory[46],
	pInventoryKolvo[46],
	pActivTrade[46],
	pMedCard,
	pDisease[2],
	pAcsJob[9],
	pCasinoDice,
	pCasinoChips,
	pCasinoLanguage,
	pWarns,
	punWarnstime,
	pNarcoLomka,
	pStartLomka,
	pCases[3],
	pFamTalon,
	pZahvat,
	pCooper,
	pPalatka,
	// ресурсы
	pMetal,
	pCloth,
	pStone,
	pDress,
	
    Float:pSpawnPos[4],
	pSpawnWorld,
	pSpawnInterior,
	pSpawnTPPick,
	pSpawnTime,
	pYoutube,
	pEvent,
	pEkills
};
new PI[MAX_PLAYERS][pInfo],
pPhoneName[MAX_PLAYERS][25][MAX_PLAYER_NAME],
lic[MAX_PLAYERS][64],
start_work[MAX_PLAYERS],
gOnlinePlayer[MAX_PLAYERS][2],
gOnlinePlayerAFK[MAX_PLAYERS][2];

enum tInfo {
	tAFK,
	tSelectHouse,
	bool:tInHouse,
	bool:tTPpick,
	bool:tLogin,
	bool:tJoined,
	bool:tPhone,
	bool:tSpawn,
	bool:tSpectate,

	tSelectedBusinessID,
	tSelectedRoom,

	tStoreGun,

	tArendaCar,
	tTaxiPrice,
	tTaxiTurn,
	bool:tTaxiGoing,
	Float:tTaxiStart,
	tTaxiPass,
	tSalonInfo[2],
	tKubik,
	tSpectr,
	preOrg,
	preOrgg,
	Float:Admin_X,
	Float:Admin_Y,
	Float:Admin_Z,
	pOldSkin,
	tDialog,
	tPhoneCalled,
	tPhoneCaller,
	bool:tPhoneNews,
	bool:tTazer,
	tCuffedTime,
	tCuffed,
	bool:tTied,
	bool:tGag,
	tGagTime,
	tSpcarTime,
bool:tEther,
	tJobSalary,
	tJobSad[4], // 0 - sad_work, 1 - use_sad, sad_kg,sad_all
	tJobGun[3], // 0 - job_gun, 1 - gun_blank, 2 - gun_collected
	tJobWood[4], // 0 - wood_work, 1 - WoodCheckpointTop, 2 - WoodDrop, 3 - PlayerUseBox
	tMaskTime,
	tMask,
	tLoginTime,
	tTrucker[2], //
	tTazers[3], // 0 - tazertime, 1 - tazershot, 2 - player
bool:tPhoneOnline,
	tFight,
bool:tGym,
	tClothesWork[2],// 0 - работа, 1 - заготовка
	tProcess[2],// 0 - выполнено, 2 - максимум
	tArendKey,
bool:tShowKeys,
	tAntiDM,
	tMasked,
	tFakePass,
Float:tGyms,
	tGymSkill,
	tNewYear[2],
bool:tHeal,
bool:tEnter[MAX_FRACTIONS+1],
	tAutoSchool,
	loadingMode,
	loadingModelPlayer,
	tACflood,
bool:tSelectSkin,
	tUpdate,
Float:tArmour,
	tDiceID,
	tDiceIDs,
	tDiceMoney,
bool:tDiceClosed,
	tDiceTime,
bool:tTir,
	tSLimit,
	tVirtualWorld,
	tInterior,
	tRaceID,
	tRaceMoney,
	tRaceCP,
	tBuild,
	tBuildCount,
	tBuildAtt,
	tBoat,
	tBoatEnter,
Float:tUcar[3],
	tAmmo[13],
	tWeapon[13],
	tMoped,
	tCodeBank,
	tBankTime,
	tDuel,
	tDuelLobby,
	tMobile,
	tDM,
	tCashRace,
	tCashDM,
	tDM_k,
	tDM_d,
	tAttack,
	tDefend,
	tCheatsDetects,
	tCheatsDetectsTime,
	tPobeg,
	tPobeg_Z,
	tLastSpawn,
	tYoutubcar
}
new TI[MAX_PLAYERS][tInfo];

stock D(playerid, dialogid, style, const caption[], const info[], const button1[], const button2[]) {
	if (!TI[playerid][tLogin]) {
		switch (dialogid) { 
		case D_LOGIN, D_REG, D_REG_MAIL, D_REG_FRIEND, D_REG_SEX, 402, 462, 463, D_GOOGLE_2,D_CHANGE_PASS,dCode: { }
		default: {
				SendClientMessage(playerid, COLOR_GREY, "Вами открыт запрещенный диалог при авторизации/регистрации");
				KickEx(playerid);
				return 0x1;
			}
		}
	}
	if (isnull(caption) || isnull(info)) return true;
	TI[playerid][tDialog] = true;
	if (OldDialogID[playerid] == INVALID_DIALOG_ID) PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	OldDialogID[playerid] = dialogid;
	return ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
}
stock IsVehicleOccupied(vehicleid) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(IsPlayerInVehicle(i, vehicleid)) return true;
	}
	return 0;
}
stock SendMedic(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin]) continue;
		if(IsAMedic(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendMafia(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin]) continue;
		if(IsAMafia(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendArmy(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin]) continue;
		if(IsAArm(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendCop(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin]) continue;
		if(IsACop(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendNews(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin]) continue;
		if(IsANews(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendBand(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin]) continue;
		if(IsAGang(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock IsVehicleOccupiedTaxi(vehicleid) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPlayerVehicleSeat(vehicleid) == 0) continue;
		if(IsPlayerInVehicle(i, vehicleid))
		return true;
	}
	return false;
}
/*============================================================================*/
stock GetWeaponSlot(weaponid) {
	switch(weaponid) {
	case 0,1:return 0;
	case 2..9:return 1;
	case 22..24:return 2;
	case 25..27:return 3;
	case 28,29,32:return 4;
	case 30,31:return 5;
	case 33,34:return 6;
	case 35..38:return 7;
	case 16..18,39:return 8;
	case 41..43:return 9;
	case 10..15:return 10;
	case 44..46:return 11;
	case 40:return 12;
	}
	return -1;
}
enum gtInfo {
	gtID,
	gtGoID,
	Float:gtX,
	Float:gtY,
	Float:gtZ,
	Float:gtTPX,
	Float:gtTPY,
	Float:gtTPZ,
	gtState,
	gtStayed
}
new GotoInfo[MAX_PLAYERS][gtInfo];
new RankName[MAX_FRACTIONS][15][24];

#define house_rent 	0.001
#define hotel_rent 	0.003
#define bizz_rent 	0.002

new Nalog[8];

enum fgarage{
	gGID,
	gOwnerID,
	gTypes,
	gActive,
	gOpen,
	Float:posX,
	Float:posY,
	Float:posZ
}
new FG[MAX_GARAGE][fgarage], Text3D:FGarage[MAX_GARAGE];
enum _fInfo {
	fID,
	fName[24],
	fLeader[MAX_PLAYER_NAME],
	fAdmin[24],
	fTime[53],
	fBank,
	fBankCash,
	fDrugs,
	fMats,
	fHealth,
	fSklad,
	fPrice,
	fSkin,
	fMaxRang,
	fInviteRang,
	fUninviteRang,
	fSpawnRang,
	fGiveRang,
	fUseStock,
	fColor,
	fVw,
	fInt,
	fDrugsBuy,
	fDrugsPrice,
	fAntiTK,
	fRating
}
new FI[MAX_FRACTIONS + 1][_fInfo],
gFractionSkin[MAX_FRACTIONS][14] = {
	{0,0,0,0,0,0,0,0,0,0,0}, //Defence
	{281,280,284,282,285,303,304,288,283,306,309,295,0,0}, //LSPD
	{100,181,246,247,248,254,0,0,0,0,0,0,0,0}, //biker
	{100,181,246,247,248,254,0,0,0,0,0,0,0,0}, //biker //biker2
	{286,163,164,165,166,141,285,0,0,0,0,0,0,0}, //FBI
	{281,280,284,283,285,303,288,283,306,309,295,0,0,0}, //rcsd
	{287,179,295,61,255,191,0,0,0,0,0,0,0,0}, //ARMY
	{255,98,57,163,228,305,304,17,76,147,153,165,187,295}, //MAYOR
	{276,275,274,70,219,308,0,0,0,0,0,0,0,0}, //MEDICS LS
	{276,275,274,70,219,308,0,0,0,0,0,0,0,0}, //MEDICS SF
	{276,275,274,70,219,308,0,0,0,0,0,0,0,0}, //MEDICS LV
	{188,170,217,261,211,0,0,0,0,0,0,0,0,0}, //LS News
	{188,170,217,261,211,0,0,0,0,0,0,0,0,0}, //SF News
	{188,170,217,261,211,0,0,0,0,0,0,0,0,0}, //LV News
	{59,185,240,148,9,17,0,0,0,0,0,0,0,0}, //Instructors
	{124,223,127,113,214,43,46,0,0,0,0,0,0,0}, //LCN
	{117,118,123,186,120,169,121,294,0,0,0,0,0,0}, //Yakuza
	{112,111,126,125,272,216,98,0,0,0,0,0,0,0}, //RM
	{103,102,104,195,21,297,0,0,0,0,0,0,0,0}, //Ballas
	{108,109,110,56,18,45,101,0,0,0,0,0,0,0}, //Vagos
	{105,106,107,269,271,270,65,19,22,293,0,0,0,0}, //Grove
	{48,114,116,115,41,119,0,0,0,0,0,0,0,0}, //Aztec
	{175,174,173,273,226,180,177,184,0,0,0,0,0,0} //Rifa
};
new f_diplomacy[9][9] ;
enum Vacancy {
	VacancyCreator[24],
bool: VacancyStatus,
	VacancyText[120],
	VacancyFraction,
};
new VacancyInfo[14][Vacancy];
//=================================================
CB: kick(giveplayerid) {
	return Kick(giveplayerid);
}
//
//бизнесы

enum BINT_DATA {
	bintID,
	bintInterior,
	Float:bintX,
	Float:bintY,
	Float:bintZ,
	Float:bintR,
	Float:bintXB,
	Float:bintYB,
	Float:bintZB,
	bintName[32]
}
enum GOSCAR{
	gcID, 
	gcOrgs,
	gcRank, 
	gcModel, 
	Float:gcPosX,
	Float:gcPosY,
	Float:gcPosZ,
	Float:gcPosA,
	gcColor1, 
	gcColor2, 
	gcSpawntime
}
new GC[MAX_CARS_COUNT][GOSCAR], CarsCount;
enum BUSINESS_DATA {
	bizzID,
	bizzName[64],
	bizzType,
	bizzBint,
	bizzOwnerID,
	bizzSellPrice,
	bizzPr,
	bizzBank,
	bizzBankDay,
	bizzPrice,
	bizzEnter,
	bizzProduct,
	bizzProdOrder,
	bizzProdOrderPrice,
	bizzStatus,
	Float:bizzX,
	Float:bizzY,
	Float:bizzZ,
	Float:bizzR,
	bizzDay,
	bizzMafia,
	bizzOwner[48],
	bizzVisitors,
	bizzUpgrade[3],
	bizzArrMoney
}

//Бизнесы
new Bizz_r[MAX_BUSINESS_COUNT][MAX_PLAYERS];
new BizzID[MAX_PLAYERS][4];
new gBints[BINT_COUNT][BINT_DATA],
gBintEnterArea[BINT_COUNT],
gBintBuyArea[BINT_COUNT],
gBusiness[MAX_BUSINESS_COUNT][BUSINESS_DATA],
b_area[MAX_BUSINESS_COUNT],
Text3D: gBusinessText[MAX_BUSINESS_COUNT],
gBusinessIcon[MAX_BUSINESS_COUNT],
gBusinessTypeName[BUSINESS_TYPE_COUNT][28] = {"Закусочная","24/7","Бар","Клуб","Магазин одежды","АММО","АЗС","Автосалон","Рыболовный бизнес","Компьютерный клуб","Таксопарк","Риэлторское агентство","Спорт-Зал","Транспортная компания","Кальянная","Рекламное агентство","Магазин Аксессуаров","Тюнинг центр","Яхт-клуб","Аэропорт","Трейлеры","Наркопритон","Казино","Магазин","Магазин"},
gBusinessCount,
gBarCosts[] = {5, 10, 13, 16, 24, 31},
gTavernNames[][] = {{"Салат"}, {"Наггетсы"}, {"Бургер"}, {"Пицца"}}, 
gTavernCosts[] = {5, 10, 13, 25},
gShopProduct[SHOP_OBJECTS] = {66,84,24,72,38,28,16,12,25,30,25,25},
gShopPrice[SHOP_OBJECTS] = 	 {660,840,240,720,380,280,90,120,250,300,250,2500},
gShopObject[SHOP_OBJECTS][24] = {"Телефон","Камера","Часы","Телефонная книга","SIM-карта","Маска","Аптечка","Цветы","Ремкомплект","Балончик с краской","Отмычки","Электронная отмычка"},
gFishCosts[] = {520, 340, 100, 400},
gPoiskCosts[] = {520, 340};
//лрпата, бита, катана, кастет, газ балон, парашут
new stock gSellGun [14] = { 6, 5, 1, 17, 46, 23, 24, 25, 29, 30, 31, 33 };
new stock gSellGunPrice [14] = { 50, 100, 100, 300, 1000, 16, 27, 32, 14, 27, 27, 1000 , 1000, 500};
new stock gSellGunProds [14] = { 10, 10, 10, 15, 20, 3, 4, 5, 3, 4, 4, 70, 50 };

enum AP_DATA {
	aID,
	apID,
	aOwner[24],
	Float:aX,
	Float:aY,
	Float:aZ,
	aMoney,
	aPickup,
	aLock,
	aDay
};
new Apartment[MAX_APARTMENT][AP_DATA];
new aArea[MAX_APARTMENT];
new gAparmentCount;

new salon_sport[18][1] = {602,587,559,560,562,541,506,480,434,477,415,429,402,451,411,495,494,603};
new salon_econom[20][1] = {419,404,401,410,422,439,467,474,479,492,491,517,518,542,543,545,549,576,600,585};
new salon_sred[19][1] = {475,579,589,580,567,566,561,558,555,554,551,534,527,535,507,505,526,533,500};
new salon_moto[11][1] = {481,509,510,462,461,521,463,586,471,468,522};

new type_acces[MAX_PLAYERS];

new acces_name_all[][] = {
	{""P"1."W" Очки"},
	{""P"2."W" Шапки"},
	{""P"3."W" Шляпы"},
	{""P"4."W" Кепки"},
	{""P"5."W" Береты"},
	{""P"6."W" Банданы"},
	{""P"7."W" Панамки"},
	{""P"8."W" Спорт-шлем"},
	{""P"9."W" Каски"},
	{""P"10."W" Маски"},
	{""P"11."W" Наушники"},
	{""P"12."W" Часы"}
};
//очки
new acces_id_glass[][] = {
	{19035,2500,3},
	{19034,2500,4},
	{19033,7500,5},
	{19032,2500,6},
	{19031,2500,7},
	{19030,2500,8},
	{19029,2500,9},
	{19028,2500,10},
	{19027,2500,11},
	{19026,2500,12},
	{19025,2500,13},
	{19024,2500,14},
	{19023,2500,15},
	{19022,2500,16},
	{19021,2500,18},
	{19020,2500,19},
	{19019,2500,20},
	{19018,2500,21},
	{19017,2500,22},
	{19016,2500,23},
	{19014,2500,24},
	{19013,2500,25},
	{19012,2500,26},
	{19011,2500,27},
	{19010,2500,28},
	{19009,2500,29},
	{19008,2500,30},
	{19007,2500,31},
	{19006,2500,32}
};
//шапки
new acces_id_hat[][] = {
	{19069,5000,33},
	{19067,5000,34},
	{19068,6000,35},
	{18953,8000,36},
	{18954,10000,37}
};
//шляпы
new acces_id_bonnet[][] = {
	{18947,10000,39},
	{18948,10000,40},
	{18949,10000,41},
	{18950,10000,42},
	{18951,10000,43}
};
//кепки
new acces_id_cap[][] = {
	{18933,9000,44},
	{18932,3000,45},
	{18928,4000,46},
	{18942,5000,47},
	{18943,6000,48},
	{18940,6000,49},
	{18929,7000,50},
	{18926,7000,51},
	{18955,7000,52},
	{18956,7000,53},
	{18959,7000,55}
};
new Text3D:pame_text[MAX_PLAYERS] = {Text3D:-1, ...};
new player_pame[MAX_PLAYERS][64];
//береты
new acces_id_beret[][] = {
	{18924,3000,56},
	{18925,3000,57},
	{18921,3000,58},
	{18923,3000,59},
	{18922,3000,60}
};
//банданы
new acces_id_bandanas[][] = {
	{18906,4000,61},
	{18910,4000,62},
	{18911,4000,63},
	{18912,4000,64},
	{18913,4000,65},
	{18914,4000,66},
	{18915,4000,67},
	{18916,4000,68},
	{18917,4000,69},
	{18918,4000,70},
	{18919,4000,71}
};
//панамки
new acces_id_panam[][] = {
	{18968,4000,72},
	{18967,16000,73},
	{18969,4000,74}
};
//спорт шлем
new acces_id_sporthat[][] = {
	{18976,32000,75},
	{18977,20000,76},
	{18978,20000,77},
	{18979,20000,78},
	{18645,20000,79}
};
//каски
new acces_id_kask[][] = {
	{19101,5000,80},
	{19102,5000,81},
	{19103,5000,82},
	{19104,5000,83},
	{19105,5000,84},
	{19106,7000,85},
	{19107,7000,86},
	{19108,7000,87},
	{19109,7000,88},
	{19110,7000,89},
	{19111,7000,90},
	{19112,7000,91},
	{19113,7000,92},
	{19114,7000,93},
	{19115,7000,94},
	{19116,7000,95},
	{19117,7000,96},
	{19118,7000,97},
	{19119,7000,98},
	{19120,7000,99}
};
//маски
new acces_id_mask[][] = {
	{19036,18000,100},
	{19037,8000,101},
	{19038,8000,102}
};
//наушники
new acces_id_headphones[][] = {
	{19421,6000,103},
	{19422,6000,104},
	{19423,6000,105},
	{19424,6000,106}
};
//часы
new acces_id_watch[][] = {
	{19042,22000,107},
	{19041,7000,108},
	{19040,7000,109},
	{19039,7000,110},
	{19043,7000,111},
	{19044,10000,112},
	{19045,10000,113},
	{19046,10000,114},
	{19048,10000,115},
	{19049,15000,116},
	{19050,15000,117},
	{19051,15000,118},
	{19053,15000,119}
};

new Text3D:army_text;
new bool:army_chs[2];

new theft_info[][] = {
	{""ORANGE"\tАвтоугон транспорта"W"\n\n"},
	{"Для угона транспорта Вам нужны отмычки, купить их можно в любом магазине 24/7\n"},
	{"На поиск одного автомобиля выделяется 17 минут, в случае, если автомобиль не будет\n"},
	{"найден, задание заканчивается.\n\n"},
	{"Меню автоугонщика"ORANGE" (/theft)"W" позволяет быстро взаимодействовать с автомобилем. Время\n"},
	{"взлома двигателя зависит от вашего навыка автоугонщика.\n\n"},
	{"1 уровень - нужно угнать 15 автомобилей эконом класса\n"},
	{"2 уровень - нужно угнать 30 автомобилей среднего класса\n"},
	{"3 уровень - нужно угнать 45 автомобилей спорт класса\n\n"},
	{"Навык автоугонщика:"ORANGE" /theftskill\n"}
};

new open_cont;
new open_cont_time;


new open_game = 0; // если 0 - рега закрыта, 1 - открыта
new time_registr_game; // время на регистрацию
new time_play_game;
new players_in_game; // количество игроков зарегалось
new money_in_game; // бюджет регистрации
new game_start; // игра началась или нет
new player_to_game[MAX_PLAYERS];
new kills_player_game[MAX_PLAYERS];
new weapon_id_game[] ={22,23,24,25,28,29,30,31,33,34};



///////////////

new random_car_race_lv = INVALID_VEHICLE_ID;
new car_id_race_lv[] ={495,502,506,559,560,562,568,587,603,451,411};

new open_race_lv = 0; // если 0 - рега закрыта, 1 - открыта
new time_registr_race_lv; // время на регистрацию
new players_in_race_lv; // количество игроков зарегалось
new money_in_race_lv; // бюджет регистрации
new time_race_lv; // игра началась или нет
new race_lv_start = 0;
new player_to_race_lv[MAX_PLAYERS];
new player_to_race_lv_id[MAX_PLAYERS];
new player_car_race_lv_id[MAX_PLAYERS] = INVALID_VEHICLE_ID;
new race_lead_lv = 0;
new race_type = 0;
new Text:td_game[6];
new game_players[3];

new pickups_game_dm[14];

new Float:pickup_game_dm[][14] = {
	{-1131.3823,1057.6615,1346.4155},
	{-1101.3960,1019.7981,1342.0938},
	{-1054.7520,1061.1354,1341.3516},
	{-1008.6476,1022.1013,1341.0078},
	{-975.6393,1089.7686,1344.9706},
	{-973.3884,1024.7118,1345.0496},
	{-1131.5729,1029.1079,1345.7302},
	{-1090.5127,1047.7528,1343.7136},
	{-1057.1874,1024.8693,1343.5397},
	{-1010.1868,1082.6458,1341.0432},
	{-974.7061,1061.1276,1345.6770},
	{-1132.5320,1095.6166,1345.7961}
};

new Float:spawns_pos_game_end[4][6] ={
	{-1148.1650,-284.5583,1128.3345,178.3078},
	{-1143.5732,-292.5761,1128.3345,358.9344},
	{-1145.7667,-284.1833,1128.3345,178.9111},
	{-1146.5162,-292.4044,1128.3345,359.2244}
};

new Float:spawns_pos_game[][19] = {
	{-971.9037,1088.3547,1344.9967,129.8470},
	{-972.0953,1073.0126,1345.0067,176.5341},
	{-969.6308,1048.2323,1345.0522,178.4141},
	{-979.3818,1024.2477,1345.0090,109.4801},
	{-1010.3306,1031.4248,1341.0078,86.6066},
	{-1026.0189,1030.3739,1342.3063,86.6066},
	{-1032.7190,1063.5831,1344.2081,2.0058},
	{-1025.6360,1076.7162,1347.0292,308.7386},
	{-1018.4744,1097.9198,1342.2784,347.9056},
	{-1002.1757,1097.6473,1342.7841,271.4515},
	{-1133.9045,1096.3629,1345.8059,82.8970},
	{-1136.0276,1021.7136,1345.7485,155.5910},
	{-1067.0563,1019.8869,1343.1606,236.1185},
	{-1114.4014,1098.4094,1341.8438,65.3736},
	{-1027.1936,1050.3809,1342.3127,323.8293},
	{-972.6334,1097.3291,1344.9896,278.7089},
	{-1046.6215,1065.1182,1344.2026,287.5548},
	{-1090.9199,1062.1122,1341.3516,341.3527},
	{-1132.3114,1062.6431,1345.7616,249.7135}
};

new Float:gRaceCPs[3][49][4] = {
	{// город
		{0.0,-1593.1674,995.8550,6.7661},
		{0.0,-1559.2784,713.1943,6.7661},
		{0.0,-1731.9357,321.2237,6.7583},
		{0.0,-1760.4103,325.8777,7.1245},
		{0.0,-1820.8859,380.7706,16.7357},
		{0.0,-1848.5409,365.2331,17.4409},
		{0.0,-1897.2014,95.6595,37.8657},
		{0.0,-1910.8467,-262.3996,37.9693},
		{0.0,-1910.7738,-577.5660,37.9615},
		{0.0,-1910.9318,-963.2586,42.4246},
		{0.0,-1907.5707,-1217.4100,39.2115},
		{0.0,-1911.0490,-1354.6622,40.1021},
		{0.0,-1956.8323,-1341.4967,40.1605},
		{0.0,-2093.4607,-1124.2417,30.1528},
		{0.0,-2219.6184,-921.2327,43.4467},
		{0.0,-2221.3218,-747.5360,63.7629},
		{0.0,-2349.4438,-724.1194,105.8035},
		{0.0,-2422.8469,-609.0765,132.2896},
		{0.0,-2506.4609,-482.6401,91.8960},
		{0.0,-2623.9351,-500.7565,70.6256},
		{0.0,-2489.5293,-443.8438,77.3281},
		{0.0,-2353.6812,-459.1245,79.9845},
		{0.0,-2336.3044,-421.2580,79.2547},
		{0.0,-2443.2471,-368.6861,70.0947},
		{0.0,-2675.7188,-425.3551,31.5907},
		{0.0,-2681.5325,-523.8073,16.5806},
		{0.0,-2774.8213,-495.3371,6.9114},
		{0.0,-2734.9756,-431.2374,6.9789},
		{0.0,-2557.7732,-345.0942,24.4528},
		{0.0,-2272.2705,-347.4919,39.2546},
		{0.0,-2075.9956,-350.9016,35.0318},
		{0.0,-2037.8602,-335.3759,35.0317},
		{0.0,-2005.3221,-137.4541,35.4380},
		{0.0,-2006.3556,138.6625,27.2661},
		{0.0,-2003.4937,384.4902,34.7427},
		{0.0,-2004.1002,542.3316,34.7427},
		{0.0,-2099.6802,565.8253,34.7431},
		{0.0,-2226.9331,565.7338,34.7483},
		{0.0,-2256.5208,591.7636,37.7843},
		{0.0,-2256.2234,905.8365,66.2233},
		{0.0,-2258.5522,1085.7393,79.5879},
		{0.0,-2260.9167,1251.9984,43.2102},
		{0.0,-2059.8630,1275.2407,8.0363},
		{0.0,-1863.7690,1337.6692,6.7739},
		{1.0,-1618.1641,1199.9156,6.7661},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},//
	{// бездорожье
		{0.0,-1864.4503,-2381.2229,31.5846},
		{0.0,-1718.3188,-2294.7283,45.2318},
		{0.0,-1678.9152,-2176.0771,36.4075},
		{0.0,-1708.6892,-2106.5313,40.5838},
		{0.0,-1832.3588,-2087.7468,56.0560},
		{0.0,-1952.9957,-2060.5771,69.7296},
		{0.0,-1945.8071,-1954.0258,78.5620},
		{0.0,-1857.0730,-1927.6558,88.4337},
		{0.0,-1691.0414,-1912.4009,98.2297},
		{0.0,-1581.9554,-1891.6198,84.9697},
		{0.0,-1518.2130,-1839.8138,67.3244},
		{0.0,-1475.8656,-1782.2496,50.6363},
		{0.0,-1430.3173,-1873.5522,33.5106},
		{0.0,-1411.3867,-2034.2435,1.0000},
		{0.0,-1350.2726,-2042.8008,9.2772},
		{0.0,-1306.4934,-2118.4250,25.2313},
		{0.0,-1264.5914,-2263.1064,22.2187},
		{0.0,-1189.5835,-2355.5100,19.3239},
		{0.0,-1055.4319,-2373.8184,49.7934},
		{0.0,-967.9534,-2357.7893,63.5209},
		{0.0,-954.4967,-2319.0549,58.7685},
		{0.0,-954.9092,-2214.7622,40.3016},
		{0.0,-895.7296,-2182.9709,29.5663},
		{0.0,-798.3245,-2157.1934,22.2218},
		{0.0,-814.7314,-2059.7971,24.9278},
		{0.0,-857.7783,-1976.6576,16.9916},
		{0.0,-735.8377,-1860.4415,12.9406},
		{0.0,-670.8856,-1925.7917,10.9450},
		{0.0,-676.0182,-2090.8599,24.7597},
		{0.0,-783.4732,-2136.5078,25.4185},
		{0.0,-888.4941,-2181.9814,28.5519},
		{0.0,-948.7108,-2195.7961,38.2576},
		{0.0,-936.2672,-2352.7488,58.5742},
		{0.0,-786.4156,-2465.2830,75.9324},
		{0.0,-709.3486,-2352.2390,40.8819},
		{0.0,-592.4052,-2384.5251,27.7612},
		{0.0,-658.4496,-2479.5637,34.5280},
		{0.0,-710.3221,-2609.6077,72.9349},
		{0.0,-777.1717,-2687.0247,83.4813},
		{0.0,-917.7076,-2668.3259,86.0870},
		{0.0,-1091.5773,-2669.1135,25.7622},
		{0.0,-1230.5806,-2637.0510,9.0866},
		{0.0,-1367.1473,-2632.0386,26.7262},
		{0.0,-1512.8129,-2634.5842,48.5268},
		{0.0,-1644.1321,-2622.4631,47.2647},
		{0.0,-1771.0397,-2502.6235,9.2780},
		{1.0,-1880.7358,-2432.5237,32.6747},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},//
	{// картинг
		{0.0,-1423.0721,-133.5238,1044.2628},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{1.0,-1404.6044,-155.3698,1043.1080},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	}
};

new Float:spawns_car_race_kart[][25] = {
	{-1402.4996, -207.0603, 1042.3719, 0.0000},
	{-1400.2638, -207.0603, 1042.3754, 0.0000},
	{-1397.8931, -207.0603, 1042.3781, 0.0000},
	{-1395.7288, -207.0603, 1042.3805, 0.0000},
	{-1393.3668, -207.0603, 1042.3831, 0.0000},
	{-1402.4996, -210.0510, 1042.3781, 0.0000},
	{-1400.2638, -210.0510, 1042.3818, 0.0000},
	{-1397.8931, -210.0510, 1042.3859, 0.0000},
	{-1395.7288, -210.0510, 1042.3884, 0.0000},
	{-1393.3668, -210.0510, 1042.3910, 0.0000},
	{-1402.4996, -213.1461, 1042.3794, 0.0000},
	{-1400.2638, -213.1461, 1042.3892, 0.0000},
	{-1397.8931, -213.1461, 1042.3923, 0.0000},
	{-1395.7288, -213.1461, 1042.3956, 0.0000},
	{-1393.3668, -213.1461, 1042.3932, 0.0000},
	{-1402.4996, -216.1665, 1042.4006, 0.0000},
	{-1400.2638, -216.1665, 1042.3590, 0.0000},
	{-1397.8931, -216.1665, 1042.3999, 0.0000},
	{-1395.7288, -216.1665, 1042.4026, 0.0000},
	{-1393.3668, -216.1665, 1042.4080, 0.0000},
	{-1402.4996, -219.2523, 1042.4167, 0.0000},
	{-1400.2638, -219.2523, 1042.4226, 0.0000},
	{-1397.8931, -219.2523, 1042.4073, 0.0000},
	{-1395.7288, -219.2523, 1042.4249, 0.0000},
	{-1393.3668, -219.2523, 1042.4327, 0.0000}
};
new Float:spawns_car_race_sity[][25] = {
	{-1626.8721, 1216.4556, 6.7722, 225.0000},
	{-1632.9271, 1210.5011, 6.7533, 225.0000},
	{-1632.3458, 1221.9630, 6.7671, 225.0000},
	{-1638.5345, 1215.9559, 6.7662, 225.0000},
	{-1638.4059, 1227.9788, 6.7671, 225.0000},
	{-1644.5020, 1221.8387, 6.7661, 225.0000},
	{-1644.3997, 1233.8173, 6.7671, 225.0000},
	{-1650.5052, 1227.5979, 6.7672, 225.0000},
	{-1650.2097, 1239.5116, 6.7671, 225.0000},
	{-1656.4216, 1233.3439, 6.7671, 225.0000},
	{-1656.1857, 1245.1952, 6.7709, 225.0000},
	{-1662.3087, 1238.9772, 6.7669, 225.0000},
	{-1662.2899, 1251.0956, 6.7772, 225.0000},
	{-1668.2368, 1244.9404, 6.7671, 225.0000},
	{-1667.9672, 1256.5748, 6.7777, 225.0000},
	{-1673.7991, 1250.6311, 6.7670, 225.0000},
	{-1673.7429, 1262.3813, 6.7592, 225.0000},
	{-1679.5250, 1256.4894, 6.7950, 225.0000},
	{-1679.6475, 1268.3621, 6.7671, 225.0000},
	{-1685.3892, 1262.6636, 6.7660, 225.0000},
	{-1685.3733, 1274.2111, 6.7672, 225.0000},
	{-1691.0829, 1268.3452, 6.7671, 225.0000},
	{-1690.8152, 1279.7847, 6.7661, 225.0000},
	{-1696.7572, 1274.0592, 6.7663, 225.0000},
	{-1696.3383, 1285.2871, 6.7662, 225.0000}
};
new Float:spawns_car_race_desert[][25] = {
	{-1928.6108, -2434.7722, 30.3596, 315.0000},
	{-1926.0165, -2437.4097, 30.3584, 315.0000},
	{-1923.4214, -2440.0471, 30.3579, 315.0000},
	{-1920.8254, -2442.6819, 30.3619, 315.0000},
	{-1918.2297, -2445.3201, 30.3607, 315.0000},
	{-1923.8497, -2450.6912, 30.3573, 315.0000},
	{-1926.2788, -2448.1880, 30.3531, 315.0000},
	{-1928.9128, -2445.5024, 30.3588, 315.0000},
	{-1931.5558, -2443.0854, 30.3528, 315.0000},
	{-1934.2892, -2440.4890, 30.3499, 315.0000},
	{-1939.2938, -2445.7158, 30.3620, 315.0000},
	{-1936.7200, -2448.2480, 30.3638, 315.0000},
	{-1934.1202, -2450.8022, 30.3679, 315.0000},
	{-1931.5591, -2453.3091, 30.4019, 315.0000},
	{-1928.9017, -2455.8230, 30.4710, 315.0000},
	{-1933.9561, -2460.9844, 30.6104, 315.0000},
	{-1936.4891, -2458.2773, 30.5352, 315.0000},
	{-1938.9983, -2455.6040, 30.4634, 315.0000},
	{-1941.4366, -2453.0049, 30.3984, 315.0000},
	{-1944.0645, -2450.2112, 30.3717, 315.0000},
	{-1949.2622, -2455.4006, 30.3631, 315.0000},
	{-1946.6733, -2457.9849, 30.4673, 315.0000},
	{-1944.1763, -2460.4136, 30.5923, 315.0000},
	{-1941.3196, -2463.2275, 30.6701, 315.0000},
	{-1938.7661, -2465.7358, 30.7351, 315.0000}
};

new ped_buyclothes[79][3] ={
	{95,5000,235},
	{50,10000,191},
	{15,10000,156},
	{35,10000,176},
	{25,10000,166},
	{36,10000,177},
	{96,10000,236},
	{155,10000,295},
	{143,10000,283},
	{44,20000,185},
	{24,30000,165},
	{37,40000,178},
	{2,45000,143},
	{3,45000,144},//
	{6,50000,147},
	{7,50000,148},//
	{14,50000,155},
	{47,50000,188},
	{67,50000,208},
	{142,50000,282},//
	{23,65000,164},//
	{72,70000,213},
	{22,80000,163},//
	{68,80000,209},
	{220,100000,360},
	{18,125000,159},
	{45,125000,186},
	{97,125000,237},
	{21,125000,162},
	{60,125000,201},//
	{182,150000,322},
	{262,150000,402},//
	{250,150000,390},
	{121,150000,261},
	{183,150000,323},
	{184,150000,324},//
	{30,175000,171},//
	{19,175000,160},
	{20,175000,161},//
	{4,225000,145},
	{5,225000,146},
	{259,250000,399},//
	{17,250000,158},
	{180,250000,320},//
	{208,250000,348},//
	{185,300000,325},
	{289,300000,426},
	{28,325000,169},
	{29,325000,170},
	{119,350000,259},
	{290,350000,430},
	{291,350000,431},
	{292,350000,432},
	{293,350000,433},
	{82,380000,222},
	{83,380000,223},//
	{84,380000,224},
	{101,400000,241},//
	{241,400000,381},
	{242,400000,382},
	{295,400000,435},
	{297,400000,437},
	{296,450000,436},//
	{249,500000,389},
	{299,500000,439},
	{46,700000,187},
	{294,700000,434},//67
	{55, 10000,196},//женские
	{90, 10000,230},
	{13, 10000,154},
	{192, 10000,332},
	{193, 10000,333},
	{224, 50000,364},
	{12, 100000,153},
	{190, 100000,330},
	{40, 100000,181},
	{298, 300000,438},
	{93, 600000,233},
	{233, 600000,373} // 79
};

enum
{
	iconTaxi
}

enum HOUSE_DATA {
	houseID,	
	houseClass,
	houseApartmentCount,
	housePrice,
	houseHint,
	houseImprove[6],
	houseGun[9],
	houseSafeCode,
	houseSafeMoney,
	houseHealth,
	houseDrugs,
	houseProducts,
	houseClose,
Float:houseX,
Float:houseY,
Float:houseZ,
Float:houseR,
Float:houseParkX,
Float:houseParkY,
Float:houseParkZ,
Float:houseParkR,
	houseOwnerID,
	houseOwner[MAX_PLAYER_NAME],
	houseHabitID[3],
	houseDay,
	houseRob,
	houseFamily,
	houseFamilyID
}

new gHouses[MAX_HOUSE_COUNT][HOUSE_DATA],
gHouseArendator[MAX_HOUSE_COUNT][2][MAX_PLAYER_NAME],
gHouseArea[MAX_HOUSE_COUNT],
gHousePickup[MAX_HOUSE_COUNT],
gHouseIcon[MAX_HOUSE_COUNT],
gHouseCount;

new gHouseImprovePriceN[4] = {10000,20000,25000,20000},
gHouseImprovePriceD[4] = {25000,60000,65000,50000},
gHouseImprovePriceB[4] = {75000,110000,115000,85000},
gHouseImprovePriceA[4] = {125000,160000,165000,170000},
gHouseImproveName[4][36] = {"Автоматические двери","Снижение субсидий","Гараж","Подвал"};

enum ac_info {
	acID,
	acName[64],
	acValue
};
new AntiCheat[53][ac_info];
static NEW_TYPE_AC_ENABLED = 1;

new TotalFamily = 0;
enum family_data {
	famID,
	famColor,
	famCName[32],
	famName[32],
	famDate[32],
	famCOwner[MAX_PLAYER_NAME],
	famOwner[MAX_PLAYER_NAME],
	famDrugs,
	famMats,
	famInvRang,
	famUninvRang,
	famGiveRang,
	famSklad,
	famSkladMoney,
	famSpawnCar,
	famBuyCar,
	famMessage[71],
	famPoint,
	famUlushCar[5],
	famUlushHouse,
	famTalon,
	famHouse,
	famType,
	famskladSt,
	famNation
	
}
new gFamily[FAMILY_COUNT][family_data];
new FamRanks[FAMILY_COUNT][9][24];
new Text3D:fam_lable[MAX_PLAYERS] = {Text3D:-1, ...};
new FamilyColor[13][7] ={"FFFFFF","AFAFAF","33AA33","FF0000","FFFF00","FFD700","dc6a26","2C8BDE","98F5FF","DD90FF","63cb00","54FF9F","6B8E23"};
new FamilyColorG[13] ={COLOR_WHITE,0xAFAFAFAA,0x33AA33AA,0xFF0000AA,0xFFFF00FF,0xFFD700FF,0xdc6a26AA,0x2C8BDEAA,0x98F5FFFF,0xDD90FFFF,0x63cb00FF,0x54FF9FFF,0x6B8E23FF};
new FamilyColorC[13] ={1,8,128,3,228,194,6,79,2,126,86,154,235};

enum car_family
{
	carID,
	LoadCar,
Float:fam_cx,
Float:fam_cy,
Float:fam_cz,
Float:fam_ca,
	famVehcom_1,
	famVehcom_2,
	famVehcom_3,
	famVehcom_4,
	famVehcom_5,
	famVehcom_6,
	famVehcom_7,
	famVehcom_8,
	famVehcom_9,
	famVehcom_10,
	famVehcom_11,
	famVehcom_12,
	famVehcom_13,
	famVehcom_14,
	famVehColor,
	famVehColor_1,
	famVehPaint
}
new CarFamily[FAMILY_COUNT][5][car_family];

#define MAX_QUESTS 62
enum QuestInfo {
	QuestName[64],
	QuestText[1024],
	LastProgress,
	reward[38]
}
new QI[MAX_QUESTS][QuestInfo] = {
	{"","",70},
	{"Потеряный багаж","Ваши вещи со станции забрал незнакомый человек.\nОн попросил организовать с вами встречу.\n\n"ORANGE"Задание:"W"\n\n - Встретиться с Карлом и забрать чемодан с вещами.\n\nНаграда:"GREEN" 1.000$",1},
	{"Первые деньги", "Для комфортной жизни и освоения в штате, нужны деньги\nна карманные расходы.\n\n"ORANGE"Задание:"W"\n\n - Получить на стройке 30 опыта работы (/jobskill) \n(/gps > Работы > Работа на стройке)\n\nНаграда:"GREEN" 10.000$ + 1 EXP", 30},
	{"Водительское удостоверение", "Пора научиться ездить за рулем автомобиля!\n\n"ORANGE"Задание:"W"\n\n - Получить вод. удостоверение в автошколе (/gps > Общ. места > Автошкола)\n\nНаграда:"GREEN" 6.000$", 1},
	{"Шоппинг", "Настало время сменить свой имидж, прикупить новую одежду\n\n"ORANGE"Задание:"W"\n\n - Купить новую одежду в магазинах одежды\n\nНаграда:"GREEN" 5.000$ + 1 EXP",1},
	{"Телефон", "Чтобы поддерживать общение с друзьями, нужно приобрести\nсотовый телефон\n\n"ORANGE"Задание:"W"\n\n - Купить сотовый телефон в 24/7\n\nНаграда:"GREEN" 1.000$",1},
	{"Первая машина", "Пора задуматься о свободном перемещении на личном\nтранспорте\n\n"ORANGE"Задание:"W"\n\n - Купить любой автомобиль в Автосалоне (/gps > Автосалоны)\nНаграда:"GREEN" 16.000$",1},
	{"Развлечения", "После серьезной работы, нужно хорошо отдохнуть\n\n"ORANGE"Задание:"W"\n\n - Посетить 2 любых мероприятий\n\nНаграда:"GREEN" 5.000$",2},
	{"Таксист","Получите дополнительный навык управления автомобилем,\nперевозя пассажиров в разные точки города\n\n"ORANGE"Задание:"W"\n\n - Перевести 20 клиентов на такси (/gps > Работы > Аренда такси)\n\nНаграда:"GREEN" 7.000$",20},
	{"Друзья в деле","Чтобы завершить это задание, Вам нужно пригласить своих\nдрузей (/referals)\n\n"ORANGE"Задание:"W"\n\n - Пригласить 5 друзей по реферальной системе (/referals)\n\nНаграда:"GREEN" 10.000$", 5},
	{"Водитель автобуса","Устройтесь в центре занятости на работу водителя\nавтобуса.\n\n"ORANGE"Задание:"W"\n\n - Проехать 10 любых маршрутов на автобусе\n\nНаграда:"GREEN" 20.000$", 10},
	{"Служба в Армии","Пора отдать долг родине!\n\n"ORANGE"Задание:"W"\n\n - Вступить в Армию ЛС и отслужить 3 часа\n\nНаграда:"GREEN" 30.000$",3},
	{"Лучший работник", "Освойтесь в любой организации, которая Вам интересна\n\n"ORANGE"Задание:"W"\n\n - Отыграть в любой организации 30 часов\n\nНаграда:"GREEN" 25.000$",30},
	{"Мой дом", "Вам нужно найти свое постоянное место жительства\n\n"ORANGE"Задание:"W"\n\n - Купить дом любого класса\n\nНаграда:"GREEN" 10.000$",1},
	{"Счастливое время", "Покажи свою максимальную активность, на что ты способен!\n\n"ORANGE"Задание:"W"\n\n - Отыграть на сервере 5 часов\n\nНаграда:"GREEN" 20.000$",5},

	// Gang
	{"Первая гонка", "Найдите себе подходящего соперника, для участия в гонках\n\n"ORANGE"Задание:"W"\n\n - Победить 5 раз в гонках (/srace)\n\nНаграда:"GREEN" 3.000$",5},
	{"Армейская форма", "Найдите военного в опасном районе, и снимите с его эту форму.\nВ форме разрешено проникать на военную часть\n\n"ORANGE"Задание:"W"\n\n - Убить в опасном районе военного в форме\n\nНаграда:"GREEN" 5.000$",1},
	{"Автоугон", "Езжайте к Джеку за заданием (/gps > Нелегальные организации > Автоугон)\n\n"ORANGE"Задание:"W"\n\n - Угнать 10 любых автомобилей\n\nНаграда:"GREEN" 15.000$",10},
	{"Война за территорию", "Защитите свою территорию от нападающих противников\n\n"ORANGE"Задание:"W"\n\n - Убить 50 противников во время капта\n\nНаграда:"GREEN" 25.000$ + 2 EXP",50},
	{"Ограбление домов", "Сделайте ограбление жилого дома (/gps > Нелегальные организации > Ограбление домов)\n\n"ORANGE"Задание:"W"\n\n - Ограбить 4 жилых дома (24 бытовой техники)\n\nНаграда:"GREEN" 8.000$ + 1 EXP",24},
	{"Снабжение материалами", "Украдите материалы с Армии LS, и пополните общий склад\n\n"ORANGE"Задание:"W"\n\n - Украсть 50 ящиков боеприпасов с Армии LS\n\nНаграда:"GREEN" 10.000$ + 1 EXP",50},
	{"Наркоторговец", "Продайте на своей территории несколько грамм наркотиков\n\n"ORANGE"Задание:"W"\n\n - Продать наркотики 10-и людям\n\nНаграда:"GREEN" 5.000$",10},
	{"Завоеватель", "Захватите территорию противоположной банды (/capture)\nЗахват возможен с "NO"5"W" ранга\n\n"ORANGE"Задание:"W"\n\n - Захватить 5 раз любую территорию\n\nНаграда:"GREEN" 12.000$ + 3 EXP",5},
	{"Лучший стрелок", "Выберитесь в ТОП игроков капта. Убивайте всех противников,\nкоторые встречаются вам на пути\n\n"ORANGE"Задание:"W"\n\n - Выбраться 2 раза в ТОП капта\n\nНаграда:"GREEN" 30.000$ + 2 EXP",2},
	{"Продвинутый боец", "Вам нужно поучаствовать в боях на ринге, для этого\nотправляйтесь в спортзал (/gps > Общественные места > спортзал)\n\n"ORANGE"Задание:"W"\n\n - Выйграть 10 боев на ринге\n\nНаграда:"GREEN" 20.000$ + 1 EXP",10},

	// Mafia
	{"Похищение", "Выполните ответственное задание. Последствием может\nбыть большой срок в тюрьме\n\n"ORANGE"Задание:"W"\n\n - Похитить агента FBI (/tie)\n\nНаграда:"GREEN" 25.000$ + 2 EXP",1},
	{"Азарт", "Попробуйте сделать крупную ставку в костях\n\n"ORANGE"Задание:"W"\n\n - Сыграть в кости на 100 фишек (/dice)\n\nНаграда:"GREEN" 2.000$ + 1 EXP",1},
	{"Снабжение материалами", "Украдите материалы с Армии LS, и пополните общий склад\n\n"ORANGE"Задание:"W"\n\n - Украсть 50 ящиков боеприпасов с Армии LS\n\nНаграда:"GREEN" 10.000$ + 1 EXP",50},
	{"Провокация захвата", "Начните провоцировать войну за любой бизнес (/bizwar)\n\n"ORANGE"Задание:"W"\n\n - Спровоцировать 5 раз войну за бизнес\n\nНаграда:"GREEN" 6.000$",5},
	{"Лучший захватчик", "Выберитесь в ТОП игроков на стреле. Убивайте всех противников,\nкоторые встречаются вам на пути\n\n"ORANGE"Задание:"W"\n\n - Выбраться 2 раза в ТОП на стреле\n\nНаграда:"GREEN" 30.000$ + 2 EXP",2},
	{"Война за бизнес", "Защитите свой бизнес от нападающей мафии\n\n"ORANGE"Задание:"W"\n\n - Убить 50 противников во время стрелы\n\nНаграда:"GREEN" 15.000$ + 2 EXP",50},
	{"Адвокат", "Воспользуйтесь услугами адвоката в тюрьме\n\n"ORANGE"Задание:"W"\n\n - Воспользоваться услугами адвоката\n\nНаграда:"GREEN" 4.000$",1},
	{"Прочная веревка", "Начинайте похищать людей и требовать за их выкуп!\n\n"ORANGE"Задание:"W"\n\n - Похитить и связать 10 человек (/tie)\n\nНаграда:"GREEN" 12.000$",10},
	{"Активный мафиози", "Проявляйте свою активность в игре, участвуйте в захватах\n\n"ORANGE"Задание:"W"\n\n - Отыграть за мафиози 10 часов\n\nНаграда:"GREEN" 25.000$ + 3 EXP",10},
	
	// Police/PD
	{"Выписать штраф", "Выпишите штраф людям, нарушающим закон штата\n\n"ORANGE"Задание:"W"\n\n - Выписать штраф 10-и нарушителям (/ticket)\n\nНаграда:"GREEN" 15.000$",10},
	{"Патрулирование", "Начните патрулирование улиц от преступников\n\n"ORANGE"Задание:"W"\n\n - Выследить 10 преступников (/patrul)\n\nНаграда:"GREEN" 10.000$",10},
	{"Первый арест", "Начните арестовывать преступников, нарушающих закон штата\n\n"ORANGE"Задание:"W"\n\n - Арестовать 20 преступников (/arrest)\n\nНаграда:"GREEN" 20.000$ + 2 EXP",20},
	{"Экстренный вызов", "Принимайте поступившие вызовы от граждан штата\n\n"ORANGE"Задание:"W"\n\n - Принять 10 вызовов (/obc)\n\nНаграда:"GREEN" 8.000$ + 1 EXP",10},
	{"Арестовать ООП", "Поймайте и арестуйте ООП (от 4 уровня розыска)\n\n"ORANGE"Задание:"W"\n\n - Арестовать преступника с 4+ уровнем розыска\n\nНаграда:"GREEN" 5.000$",1},
	{"Активная работа", "Начинайте активно наводить порядок в штате! Патрулировать,\nарестовывать преступников, и многое другое.\n\n"ORANGE"Задание:"W"\n\n - Пробыть в организации 36 часов\n\nНаграда:"GREEN" 30.000$ + 4 EXP",36},

	// Ежедневные задания
	{"Поучаствовать 5 раз в мероприятиях", "Выбрано задание:"ORANGE" Поучаствовать в 5 мероприятиях (/gps > Развлечения > центр развлечений)"W"\n\nВы хотите взяться за выполнение?",5,"5 RUB"},
	{"Выпить в баре", "Выбрано задание:"ORANGE" Выпить в баре"W"\n\nВы хотите взяться за выполнение?",1,"8000$"},
	{"Покушать в закусочной", "Выбрано задание:"ORANGE" Покушать в закусочной"W"\n\nВы хотите взяться за выполнение?",1,"1 EXP"},
	{"Приобрести товар в 24/7", "Выбрано задание:"ORANGE" Приобрести товар в 24/7"W"\n\nВы хотите взяться за выполнение?",1,"1 EXP"},
	{"Заправить транспортное средство", "Выбрано задание:"ORANGE" Заправить транспортное средство на АЗС"W"\n\nВы хотите взяться за выполнение?",1,"1 EXP"},
	{"Поучаствовать в 5-и дуэлях", "Выбрано задание:"ORANGE" Поучаствовать в 5-и дуэлях 1x1"W"\n\nВы хотите взяться за выполнение?",5,"5 RUB"},
	{"Поймать 10 рыб", "Выбрано задание:"ORANGE" Поймать на рыбалке 10 рыб"W"\n\nВы хотите взяться за выполнение?",10,"12000$"},
	{"Посетить любую DM зону", "Выбрано задание:"ORANGE" Посетить любую DM зону"W"\n\nВы хотите взяться за выполнение?",1,"7500$ + 5 RUB"},
	{"Изготовить 10 ед. оружия", "Выбрано задание:"ORANGE" Изготовить 10 ед. оружия на оружейном заводе"W"\n\nВы хотите взяться за выполнение?",10,"9500$"},
	{"Спилить 10 деревьев", "Выбрано задание:"ORANGE" Спилить 10 деревьев на лесопилке"W"\n\nВы хотите взяться за выполнение?",10,"9500$"},
	{"Загрузить 10 мешков с деньгами", "Выбрано задание:"ORANGE" Загрузить 10 мешков с деньгами на работе инкассатора"W"\n\nВы хотите взяться за выполнение?",10,"8500$"},
	{"Собрать 5 пакетов с мусором", "Выбрано задание:"ORANGE" Собрать 5 пакетов с мусором на чистильщике канализаций"W"\n\nВы хотите взяться за выполнение?",5,"8500$"},
	{"Отыграть 3 часа", "Выбрано задание:"ORANGE" Отыграть на сервере 3 часа"W"\n\nВы хотите взяться за выполнение?",3,"GOLD кейс"},
	{"Проехать 5 кругов на мойщике дорог", "Выбрано задание:"ORANGE" Проехать 5 кругов на мойщике дорог"W"\n\nВы хотите взяться за выполнение?",5,"7000$"},
	{"Продать 10 хот-догов", "Выбрано задание:"ORANGE" Продать 10 хот-догов (/shd)"W"\n\nВы хотите взяться за выполнение?",10,"7000$"},
	{"Починить 5 автомобилей", "Выбрано задание:"ORANGE" Починить 5 автомобилей (/repair)"W"\n\nВы хотите взяться за выполнение?",5,"7000$"},
	{"Собрать 10 яблок", "Выбрано задание:"ORANGE" Собрать на ферме 10 яблок"W"\n\nВы хотите взяться за выполнение?",10,"7000$"},
	
	//
	{"Подготовка к празднику", "Сообщите своим друзьям, что начало праздника уже близко!\n\n"ORANGE"Задание:"W"\n\n - Доехать до друга и пригласить его на Halloween\n\nНаграда:"GREEN" 7.000$",1,"7000$"}, // 57
    {"Разбуди Фредди", "Найдите в городе Los Santos дом Фредди и разбудите его\nведь скоро начинаем уже праздновать Halloween!\n\n"ORANGE"Задание:"W"\n\n - Разбудить Фредди\n\nНаграда:"GREEN" 10.000$",1,"10000$"}, // 58
    {"Встреча с Колудньей", "Езжай к Колдунье, она приготовила для тебя задание!\n\n"ORANGE"Задание:"W"\n\n - Встретится с Колдуньей и выполнить ее задания\n\nНаграда:"GREEN" 3.000$",1,"3000$"},
    {"Полить могилку", "Колдунья велела вам полить могилку\n\n"ORANGE"Задание:"W"\n\n - Полить на кладбище могилку\n\nНаграда:"GREEN" 7.000$",1,"7000$"},
    {"Близок к призу", "Отыграйте 5 часов на сервере и получите уникальный аксессуар\n"ORANGE"Задание:"W"\n\n - Отыграть 5 часов на сервере\n\nНаграда:"GREEN" Уникальный аксессуар",5,"7000$"}
};
new QuestProgress[MAX_PLAYERS][MAX_QUESTS];
new QuestShow[MAX_PLAYERS][MAX_QUESTS];
new AcceptQuest[MAX_PLAYERS][MAX_QUESTS];
new time_quest[MAX_PLAYERS][MAX_QUESTS];
new QuestClick[MAX_PLAYERS];

enum B_INFO {
	bObjectID,
	bObjectModel,
Float:bPos[4],
	bPosText[32],
	bText[144],
	bOwner[MAX_PLAYER_NAME],
	bOwned,
	bBackColor,
	bFontFace,
	bAligment,
	bFontSize,
	bDay
};
new BildInfo[MAX_BILLBORDS][B_INFO];
new Colors_BIG[100] = { 0x000000,0xFFFFFF,0x20B2AA,0xDC143C,0x6495ED,0xf0e68c,0x778899,0xFF1493,0xF4A460,0xEE82EE,0xFFD720, 0x8b4513,0x4949A0,0x148b8b,0x14ff7f,0x556b2f,0x0FD9FA,0x10DC29,0x534081,0x0495CD,0xEF6CE8,0xBD34DA,
	0x247C1B,0x0C8E5D,0x635B03,0xCB7ED3,0x65ADEB,0x5C1ACC,0xF2F853,0x11F891,0x7B39AA,0x53EB10,0x54137D, 0x275222,0xF09F5B,0x3D0A4F,0x22F767,0xD63034,0x9A6980,0xDFB935,0x3793FA,0x90239D,0xE9AB2F,0xAF2FF3,
	0x057F94,0xB98519,0x388EEA,0x028151,0xA55043,0x0DE018,0x93AB1C,0x95BAF0,0x369976,0x18F71F,0x4B8987, 0x491B9E,0x829DC7,0xBCE635,0xCEA6DF,0x20D4AD,0x2D74FD,0x3C1C0D,0x12D6D4,0x48C000,0x2A51E2,0xE3AC12,
	0xFC42A8,0x2FC827,0x1A30BF,0xB740C2,0x42ACF5,0x2FD9DE,0xFAFB71,0x05D1CD,0xC471BD,0x94436E,0xC1F7EC, 0xCE79EE,0xBD1EF2,0x93B7E4,0x3214AA,0x184D3B,0xAE4B99,0x7E49D7,0x4C436E,0xFA24CC,0xCE76BE,0xA04E0A,
	0x9F945C,0xDCDE3D,0x10C9C5,0x70524D,0x0BE472,0x8A2CD7,0x6152C2,0xCF72A9,0xE59338,0xEEDC2D,0xD8C762, 0x3FE65C };

new Colors_LOW[][12] = { "000000","FFFFFF","20B2AA","DC143C","6495ED","f0e68c","778899","FF1493","F4A460","EE82EE","FFD720", "8b4513","4949A0","148b8b","14ff7f","556b2f","0FD9FA","10DC29","534081","0495CD","EF6CE8","BD34DA",
	"247C1B","0C8E5D","635B03","CB7ED3","65ADEB","5C1ACC","F2F853","11F891","7B39AA","53EB10","54137D", "275222","F09F5B","3D0A4F","22F767","D63034","9A6980","DFB935","3793FA","90239D","E9AB2F","AF2FF3",
	"057F94","B98519","388EEA","028151","A55043","0DE018","93AB1C","95BAF0","369976","18F71F","4B8987", "491B9E","829DC7","BCE635","CEA6DF","20D4AD","2D74FD","3C1C0D","12D6D4","48C000","2A51E2","E3AC12",
	"FC42A8","2FC827","1A30BF","B740C2","42ACF5","2FD9DE","FAFB71","05D1CD","C471BD","94436E","C1F7EC", "CE79EE","BD1EF2","93B7E4","3214AA","184D3B","AE4B99","7E49D7","4C436E","FA24CC","CE76BE","A04E0A",
	"9F945C","DCDE3D","10C9C5","70524D","0BE472","8A2CD7","6152C2","CF72A9","E59338","EEDC2D","D8C762","3FE65C" };

new skin_register[14][1] = {
	{7}, {6}, {29}, {2}, {7}, {6}, {29}, {2},
	
	{12}, {40}, {12}, {40}, {12}, {40}
};

new skin_undress[][] = {
	{0},{142},{143},{144},{145},{146},{147},{148},{149},{150},{151},{152},{153},{154},{155},{156},{157},
	{158},{159},{160},{161},{162},{163},{164},{165},{166},{167},{168},{169},{170},{171},{172},{173},{174},{175},
	{176},{177},{178},{179},{180},{181},{182},{183},{184},{185},{186},{187},{188},{189},{190},{191},{192},{193},
	{194},{195},{196},{197},{198},{199},{200},{201},{202},{203},{204},{205},{206},{207},{208},{209},{210},{211},
	{212},{213},{214},{0},{215},{216},{217},{218},{219},{220},{221},{222},{223},{224},{225},{226},{227},{228},
	{229},{230},{231},{232},{233},{234},{235},{236},{237},{238},{239},{240},{241},{242},{243},{244},{245},{246},
	{247},{248},{249},{250},{251},{252},{253},{254},{255},{256},{257},{258},{259},{260},{261},{262},{263},{264},
	{265},{266},{267},{268},{269},{270},{271},{272},{273},{274},{275},{276},{277},{278},{279},{280},{281},{282},
	{283},{284},{285},{286},{287},{288},{289},{290},{291},{292},{293},{294},{295},{296},{297},{298},{299},{300},
	{301},{302},{303},{304},{305},{306},{307},{308},{309},{310},{311},{312},{313},{314},{315},{316},{317},{318},
	{319},{320},{321},{322},{323},{324},{325},{326},{327},{328},{329},{330},{331},{332},{333},{334},{335},{336},
	{337},{338},{339},{340},{341},{342},{343},{344},{345},{346},{347},{348},{349},{350},{351},{352},{353},{354},
	{355},{356},{357},{358},{359},{360},{361},{362},{363},{364},{365},{366},{367},{368},{369},{370},{371},{372},
	{373},{374},{375},{376},{377},{378},{379},{380},{381},{382},{383},{384},{385},{386},{387},{388},{389},{390},
	{391},{392},{393},{394},{395},{396},{397},{398},{399},{400},{401},{402},{403},{404},{405},{406},{407},{408},
	{409},{410},{411},{412},{413},{414},{415},{416},{417},{418},{419},{420},{421},{422},{423},{424},{425},{426},
	{427},{428},{429},{430},{431},{432},{433},{434},{435},{436},{437},{438},{439},{440},{441},{442},{443},{444},
	{445},{446},{447},{448},{449},{450},{451}
};

stock SendDead(ids,whoids,killerid,playerid,reason) {
	foreach(new m:Player) { 
		if(reason == 0) return true;
		if(!TI[m][tLogin]) continue;
		if(PI[m][pMember] == ids || PI[m][pMember] == whoids) SendDeathMessageToPlayer(m, killerid, playerid, reason);
	}
	return 1;
}
stock IsAMafiaAndGang(playerid)
{
    if(!IsPlayerConnected(playerid)) return 0;
	switch(PI[playerid][pMember]) {
	case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA,fLCN,fYAKUZA,fRM: return 1;
	}
	return 0;
}
stock IsAMafia(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(PI[playerid][pMember]) {
	case fLCN,fYAKUZA,fRM: return 1;
	}
	return 0;
}
stock IsAGang(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(PI[playerid][pMember]) {
	case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: return 1;
	}
	return 0;
}
stock IsABikers(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(PI[playerid][pMember]) {
	case fBikers,fBikersTwo: return 1;
	}
	return 0;
}
stock IsANews(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(PI[playerid][pMember]) {
	case fLSNEWS,fSFNEWS,fLVNEWS: return 1;
	}
	return 0;
}
stock DollahScoreUpdate(playerid) return SetPlayerScore(playerid, PI[playerid][pLevel]);

stock IsAMedic(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(PI[playerid][pMember]) {
	case fMEDICLS,fMEDICSF,fMEDICLV: return 1;
	}
	return 0;
}
stock IsAPD(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(PI[playerid][pMember]) {
	case fLSPD,fRCSD: return 1;
	}
	return 0;
}
stock IsACop(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(PI[playerid][pMember]) {
	case fLSPD,fFBI,fRCSD: return 1;
	}
	return 0;
}
stock IsAGos(playerid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	switch(PI[playerid][pMember]) {
	case fLSPD,fFBI,fRCSD,fMEDICLS,fMEDICSF,fMEDICLV,fARMYLS,fLSNEWS,fSFNEWS,fLVNEWS,fWHITEHOUSE: return 1;
	}
	return 0;
}

stock IsACopAndArm(playerid)
{
    if(!IsPlayerConnected(playerid)) return 0;
	switch(PI[playerid][pMember]) {
	case fARMYLS, fLSPD,fFBI,fRCSD: return 1;
	}
	return 0;
}
stock IsAArm(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(PI[playerid][pMember]) {
	case fARMYLS: return 1;
	}
	return 0;
}

enum v_car {
	vID,
	vSpawn,
	vColor[2],
	vPaintJob,
	vTuneList[13],
	vTeam,
	vRank,
	vJob,
	vBus,
	vBizz,
	vLights,
	vType,
	vFamily,
	vFslot,
	Float:vFuel,
	Float:vAkum,
	Float:vDrived,
	vPlayer,
	Float:veX,
	Float:veY,
	Float:veZ,
	Float:veA,
	Float:vzAngle,
	bool:vRobHouse,
	vConstLoad,
	vTownID,
	vTownCar,
	vTarif,
	vSlog[15],
	vTaxi[3],
	Text3D:vText,
	vNumberAttached,
	Text3D:vNumberTextID,
	vPlayerVehicleID,
	Float:vStatus,
	vParkingFine,
	vLocked,
	vMarked,
	vMarkText[42],
	vMarkOwner[MAX_PLAYER_NAME + 2],
}
new VehicleInfo[MAX_VEHICLES][v_car];
new VehicleState[MAX_VEHICLES];

enum v_gun {
	vgID,
	vgAmount[2],
	Text3D:vgText,
	bool:vgLoading,
	bool:vgUnloading,
	vgPickup,
	vgDrugs,
	bool:vgRobHouse,
	vgTex_count,
	vgTex_area,
	vgWeste,
	vgAtm,
	vgArea,
	vgNarko
}
new VG[MAX_VEHICLES][v_gun];

enum ARs {
	arZavod,
	arZavodSklad,
	arSad,
	arTurma[8],
	arSkladTurm,
	arJob[5],
	arNews,
	arLoadProds[2],
	arGang[4]
}
new gAreas[ARs];
new Text3D:gun_3dtext[3],
gun_pickup[24],
Float:gun_checkpoints[5][3] = {
	{961.8552,-450.0207,1471.5500}, // место оружейка 1
	{964.9297,-449.9872,1471.5500}, // место оружейка 2
	{968.0408,-450.0279,1471.5500}, // место оружейка 3
	{971.0580,-450.0187,1471.5500}, // место оружейка 4
	{974.1682,-450.0255,1471.5500} // место оружейка 5
},
GunWorkWeapon[6] = {348,353,355,356,346,349},
zavodsklad;

#include "../sourse/mast/mast_func.inc"

new Text3D:sklad_armysf[3],
Text3D:sklad_cops[4];

new Float:news_edit[8][3] = {
	{766.6069,-1531.0240,1417.8180},
	{766.7095,-1533.7859,1417.8180},
	{766.6608,-1536.2832,1417.8180},
	{766.5391,-1539.0297,1417.8180},
	{759.7090,-1539.0297,1417.8180},
	{759.6584,-1536.2838,1417.8180},
	{759.6487,-1533.7859,1417.8180},
	{759.6533,-1531.2749,1417.8180}
};

new Float:comp_club[15][3] = {
	{840.469,-221.190,1000.190},
	{840.489,-219.210,1000.190},
	{840.500,-217.229,1000.190},
	{840.520,-215.240,1000.190},
	{840.530,-213.250,1000.190},
	{840.549,-211.270,1000.190},
	{840.559,-209.279,1000.190},
	{840.580,-207.289,1000.190},
	{840.590,-205.300,1000.190},
	{847.179,-204.389,1000.190},
	{845.190,-204.389,1000.190},
	{847.200,-207.250,1000.190},
	{845.210,-207.240,1000.190},
	{847.200,-210.169,1000.190},
	{845.210,-210.169,1000.190}
};

new Float:auto_exam[3][3] = {
	{1.4569,-90.4876,1026.4089},
	{3.9606,-90.4766,1026.4091},
	{6.3032,-90.4572,1026.4089}
};

new TotalGZ[6],

Text3D:black_market,
black_prods[10];
#include "../logic/roulette.inc"
stock IsPlayerInBandOnline(bandid) {
	new count_band_online = 1;
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pMember] == bandid) {
			count_band_online++;
			if(count_band_online >= 2) return true;
		}
	}
	return false;
}
stock Float:PointToPoint2D(Float:x1,Float:y1,Float:x2,Float:y2) return floatsqroot(floatadd(floatpower(x2-x1,2),floatpower(y2-y1,2)));
stock Float:GetPlayerDistanceToPlayer(playerid, targetid) {
	new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
	GetPlayerPos(playerid, x, y, z);
	GetPlayerPos(targetid, x2, y2, z2);
	return PointToPoint2D(x, y, x2, y2);
}

stock CreateTextDraws(playerid) {
	// autosalon выбор авто
	auto_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 465.7333, 380.6916, "_INFERNUS"); // пусто
	PlayerTextDrawLetterSize(playerid, auto_PTD[playerid][0], 0.1150, 0.8118);
	PlayerTextDrawAlignment(playerid, auto_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, auto_PTD[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, auto_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, auto_PTD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, auto_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, auto_PTD[playerid][0], 0);

	auto_PTD[playerid][1] = CreatePlayerTextDraw(playerid, 467.4330, 361.1332, "$5000000"); // пусто
	PlayerTextDrawLetterSize(playerid, auto_PTD[playerid][1], 0.1246, 0.9114);
	PlayerTextDrawTextSize(playerid, auto_PTD[playerid][1], 10.0000, 40.0000);
	PlayerTextDrawAlignment(playerid, auto_PTD[playerid][1], 2);
	PlayerTextDrawColor(playerid, auto_PTD[playerid][1], -1);
	PlayerTextDrawUseBox(playerid, auto_PTD[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid, auto_PTD[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, auto_PTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, auto_PTD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, auto_PTD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, auto_PTD[playerid][1], 0);

	inventory_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 176.9998, 137.5771, ""); // player skin
	PlayerTextDrawTextSize(playerid, inventory_PTD[playerid][0], 90.0000, 114.0000);
	PlayerTextDrawAlignment(playerid, inventory_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, inventory_PTD[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_PTD[playerid][0], 370810624);
	PlayerTextDrawFont(playerid, inventory_PTD[playerid][0], 5);
	PlayerTextDrawSetProportional(playerid, inventory_PTD[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, inventory_PTD[playerid][0], 0);
	PlayerTextDrawSetPreviewModel(playerid, inventory_PTD[playerid][0], 0);
	PlayerTextDrawSetPreviewRot(playerid, inventory_PTD[playerid][0], -10.0000, 0.0000, -5.0000, 1.0000);

	inventory_PTD[playerid][1] = CreatePlayerTextDraw(playerid, 169.7666, 318.3363, "LD_SPAC:white"); // health
	PlayerTextDrawTextSize(playerid, inventory_PTD[playerid][1], 68.0000, 8.0000);
	PlayerTextDrawAlignment(playerid, inventory_PTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, inventory_PTD[playerid][1], -347323649);
	PlayerTextDrawBackgroundColor(playerid, inventory_PTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, inventory_PTD[playerid][1], 4);
	PlayerTextDrawSetProportional(playerid, inventory_PTD[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, inventory_PTD[playerid][1], 0);

	inventory_PTD[playerid][2] = CreatePlayerTextDraw(playerid, 169.7666, 270.2182, "LD_SPAC:white"); // satiety
	PlayerTextDrawTextSize(playerid, inventory_PTD[playerid][2], 85.0000, 8.0000);
	PlayerTextDrawAlignment(playerid, inventory_PTD[playerid][2], 1);
	PlayerTextDrawColor(playerid, inventory_PTD[playerid][2], -5963521);
	PlayerTextDrawBackgroundColor(playerid, inventory_PTD[playerid][2], 255);
	PlayerTextDrawFont(playerid, inventory_PTD[playerid][2], 4);
	PlayerTextDrawSetProportional(playerid, inventory_PTD[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, inventory_PTD[playerid][2], 0);

	inventory_PTD[playerid][3] = CreatePlayerTextDraw(playerid, 169.7666, 295.1069, "LD_SPAC:white"); // thrist
	PlayerTextDrawTextSize(playerid, inventory_PTD[playerid][3], 44.0000, 8.0000);
	PlayerTextDrawAlignment(playerid, inventory_PTD[playerid][3], 1);
	PlayerTextDrawColor(playerid, inventory_PTD[playerid][3], 9568255);
	PlayerTextDrawBackgroundColor(playerid, inventory_PTD[playerid][3], 255);
	PlayerTextDrawFont(playerid, inventory_PTD[playerid][3], 4);
	PlayerTextDrawSetProportional(playerid, inventory_PTD[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, inventory_PTD[playerid][3], 0);

	inventory_PTD[playerid][4] = CreatePlayerTextDraw(playerid, 275.8663, 261.3481, "100%"); // satiety
	PlayerTextDrawLetterSize(playerid, inventory_PTD[playerid][4], 0.1246, 0.8615);
	PlayerTextDrawAlignment(playerid, inventory_PTD[playerid][4], 3);
	PlayerTextDrawColor(playerid, inventory_PTD[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_PTD[playerid][4], 255);
	PlayerTextDrawFont(playerid, inventory_PTD[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid, inventory_PTD[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, inventory_PTD[playerid][4], 0);

	inventory_PTD[playerid][5] = CreatePlayerTextDraw(playerid, 275.8663, 285.6184, "100%"); // thirst
	PlayerTextDrawLetterSize(playerid, inventory_PTD[playerid][5], 0.1246, 0.8615);
	PlayerTextDrawAlignment(playerid, inventory_PTD[playerid][5], 3);
	PlayerTextDrawColor(playerid, inventory_PTD[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_PTD[playerid][5], 255);
	PlayerTextDrawFont(playerid, inventory_PTD[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, inventory_PTD[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, inventory_PTD[playerid][5], 0);

	inventory_PTD[playerid][6] = CreatePlayerTextDraw(playerid, 276.3330, 308.8481, "100%"); // health
	PlayerTextDrawLetterSize(playerid, inventory_PTD[playerid][6], 0.1246, 0.8615);
	PlayerTextDrawAlignment(playerid, inventory_PTD[playerid][6], 3);
	PlayerTextDrawColor(playerid, inventory_PTD[playerid][6], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_PTD[playerid][6], 255);
	PlayerTextDrawFont(playerid, inventory_PTD[playerid][6], 2);
	PlayerTextDrawSetProportional(playerid, inventory_PTD[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, inventory_PTD[playerid][6], 0);

	inventory_PTD[playerid][7] = CreatePlayerTextDraw(playerid, 335.7001, 317.7626, "PAGE_1"); // пусто
	PlayerTextDrawLetterSize(playerid, inventory_PTD[playerid][7], 0.1332, 0.8945);
	PlayerTextDrawTextSize(playerid, inventory_PTD[playerid][7], 10.0000, 26.0000);
	PlayerTextDrawAlignment(playerid, inventory_PTD[playerid][7], 2);
	PlayerTextDrawColor(playerid, inventory_PTD[playerid][7], -1);
	PlayerTextDrawUseBox(playerid, inventory_PTD[playerid][7], 1);
	PlayerTextDrawBoxColor(playerid, inventory_PTD[playerid][7], 0);
	PlayerTextDrawFont(playerid, inventory_PTD[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid, inventory_PTD[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, inventory_PTD[playerid][7], 0);

	// INVENTARY SLOT
	inventory_slot[playerid][0] = CreatePlayerTextDraw(playerid, 313.1994, 145.0437, ""); // 1 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][0], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][0], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][0], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][0], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][0], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][0], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][0], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][0], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][1] = CreatePlayerTextDraw(playerid, 345.8663, 145.0437, ""); // 2 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][1], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][1], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][1], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][1], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][1], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][1], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][1], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][1], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][2] = CreatePlayerTextDraw(playerid, 378.5331, 145.0437, ""); // 3 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][2], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][2], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][2], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][2], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][2], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][2], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][2], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][2], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][3] = CreatePlayerTextDraw(playerid, 411.1994, 145.0437, ""); // 4 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][3], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][3], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][3], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][3], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][3], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][3], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][3], 52);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][3], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][4] = CreatePlayerTextDraw(playerid, 443.1994, 145.0437, ""); // 5 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][4], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][4], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][4], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][4], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][4], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][4], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][4], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][4], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][4], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][5] = CreatePlayerTextDraw(playerid, 313.1994, 181.5476, ""); // 6 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][5], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][5], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][5], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][5], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][5], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][5], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][5], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][5], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][5], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][6] = CreatePlayerTextDraw(playerid, 345.8663, 181.5476, ""); // 7 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][6], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][6], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][6], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][6], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][6], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][6], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][6], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][6], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][6], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][6], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][7] = CreatePlayerTextDraw(playerid, 378.5331, 181.5476, ""); // 8 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][7], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][7], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][7], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][7], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][7], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][7], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][7], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][7], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][7], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][7], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][8] = CreatePlayerTextDraw(playerid, 411.1994, 181.5476, ""); // 9 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][8], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][8], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][8], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][8], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][8], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][8], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][8], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][8], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][8], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][8], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][9] = CreatePlayerTextDraw(playerid, 443.1994, 181.5476, ""); // 10 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][9], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][9], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][9], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][9], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][9], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][9], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][9], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][9], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][9], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][9], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][10] = CreatePlayerTextDraw(playerid, 313.1994, 218.0513, ""); // 11 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][10], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][10], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][10], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][10], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][10], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][10], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][10], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][10], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][10], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][10], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][11] = CreatePlayerTextDraw(playerid, 345.8663, 218.0513, ""); // 12 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][11], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][11], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][11], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][11], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][11], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][11], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][11], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][11], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][11], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][11], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][12] = CreatePlayerTextDraw(playerid, 378.5331, 218.0513, ""); // 13 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][12], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][12], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][12], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][12], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][12], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][12], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][12], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][12], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][12], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][12], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][13] = CreatePlayerTextDraw(playerid, 411.1994, 218.0513, ""); // 14 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][13], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][13], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][13], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][13], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][13], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][13], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][13], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][13], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][13], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][13], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][14] = CreatePlayerTextDraw(playerid, 443.1994, 218.0513, ""); // 15 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][14], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][14], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][14], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][14], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][14], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][14], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][14], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][14], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][14], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][14], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][15] = CreatePlayerTextDraw(playerid, 313.1994, 254.5554, ""); // 16 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][15], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][15], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][15], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][15], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][15], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][15], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][15], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][15], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][15], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][15], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][16] = CreatePlayerTextDraw(playerid, 345.8663, 254.5554, ""); // 17 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][16], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][16], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][16], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][16], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][16], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][16], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][16], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][16], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][16], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][16], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][17] = CreatePlayerTextDraw(playerid, 378.5331, 254.5554, ""); // 18 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][17], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][17], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][17], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][17], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][17], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][17], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][17], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][17], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][17], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][17], 0.0000, 0.0000, 0.0000, 1.0000);
	
	inventory_slot[playerid][18] = CreatePlayerTextDraw(playerid, 411.1994, 254.5552, ""); // 19 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][18], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][18], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][18], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][18], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][18], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][18], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][18], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][18], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][18], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][18], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][19] = CreatePlayerTextDraw(playerid, 443.1994, 254.5552, ""); // 20 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][19], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][19], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][19], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][19], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][19], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][19], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][19], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][19], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][19], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][19], 0.0000, 0.0000, 0.0000, 1.0000);
	///////////////////////////////
	
	inventory_slot[playerid][20] = CreatePlayerTextDraw(playerid, 248.3329, 145.0437, ""); // player slot 2
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][20], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][20], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][20], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][20], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][20], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][20], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][20], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][20], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][20], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][20], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][21] = CreatePlayerTextDraw(playerid, 168.9998, 145.0437, ""); // player slot 1
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][21], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][21], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][21], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][21], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][21], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][21], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][21], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][21], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][21], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][21], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][22] = CreatePlayerTextDraw(playerid, 248.2976, 181.5475, ""); // player slot 4
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][22], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][22], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][22], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][22], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][22], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][22], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][22], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][22], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][22], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][22], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][23] = CreatePlayerTextDraw(playerid, 168.9642, 181.5475, ""); // player slot 3
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][23], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][23], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][23], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][23], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][23], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][23], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][23], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][23], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][23], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][23], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][24] = CreatePlayerTextDraw(playerid, 248.2976, 218.0513, ""); // player slot 6
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][24], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][24], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][24], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][24], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][24], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][24], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][24], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][24], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][24], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][24], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][25] = CreatePlayerTextDraw(playerid, 168.9642, 218.0513, ""); // player slot 5
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][25], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][25], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][25], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][25], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][25], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][25], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][25], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][25], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][25], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][25], 0.0000, 0.0000, 0.0000, 1.0000);

	// INV PAGE 2.
	
	inventory_slot[playerid][26] = CreatePlayerTextDraw(playerid, 313.1994, 145.0437, ""); // 1 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][26], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][26], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][26], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][26], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][26], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][26], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][26], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][26], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][26], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][26], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][27] = CreatePlayerTextDraw(playerid, 345.8663, 145.0437, ""); // 2 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][27], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][27], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][27], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][27], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][27], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][27], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][27], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][27], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][27], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][27], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][28] = CreatePlayerTextDraw(playerid, 378.5331, 145.0437, ""); // 3 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][28], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][28], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][28], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][28], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][28], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][28], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][28], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][28], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][28], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][28], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][29] = CreatePlayerTextDraw(playerid, 411.1994, 145.0437, ""); // 4 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][29], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][29], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][29], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][29], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][29], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][29], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][29], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][29], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][29], 52);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][29], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][30] = CreatePlayerTextDraw(playerid, 443.1994, 145.0437, ""); // 5 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][30], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][30], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][30], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][30], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][30], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][30], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][30], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][30], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][30], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][30], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][31] = CreatePlayerTextDraw(playerid, 313.1994, 181.5476, ""); // 6 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][31], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][31], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][31], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][31], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][31], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][31], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][31], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][31], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][31], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][31], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][32] = CreatePlayerTextDraw(playerid, 345.8663, 181.5476, ""); // 7 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][32], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][32], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][32], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][32], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][32], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][32], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][32], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][32], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][32], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][32], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][33] = CreatePlayerTextDraw(playerid, 378.5331, 181.5476, ""); // 8 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][33], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][33], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][33], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][33], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][33], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][33], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][33], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][33], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][33], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][33], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][34] = CreatePlayerTextDraw(playerid, 411.1994, 181.5476, ""); // 9 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][34], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][34], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][34], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][34], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][34], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][34], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][34], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][34], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][34], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][34], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][35] = CreatePlayerTextDraw(playerid, 443.1994, 181.5476, ""); // 10 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][35], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][35], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][35], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][35], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][35], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][35], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][35], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][35], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][35], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][35], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][36] = CreatePlayerTextDraw(playerid, 313.1994, 218.0513, ""); // 11 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][36], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][36], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][36], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][36], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][36], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][36], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][36], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][36], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][36], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][36], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][37] = CreatePlayerTextDraw(playerid, 345.8663, 218.0513, ""); // 12 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][37], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][37], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][37], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][37], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][37], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][37], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][37], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][37], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][37], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][37], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][38] = CreatePlayerTextDraw(playerid, 378.5331, 218.0513, ""); // 13 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][38], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][38], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][38], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][38], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][38], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][38], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][38], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][38], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][38], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][38], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][39] = CreatePlayerTextDraw(playerid, 411.1994, 218.0513, ""); // 14 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][39], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][39], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][39], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][39], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][39], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][39], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][39], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][39], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][39], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][39], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][40] = CreatePlayerTextDraw(playerid, 443.1994, 218.0513, ""); // 15 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][40], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][40], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][40], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][40], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][40], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][40], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][40], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][40], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][40], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][40], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][41] = CreatePlayerTextDraw(playerid, 313.1994, 254.5554, ""); // 16 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][41], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][41], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][41], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][41], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][41], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][41], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][41], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][41], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][41], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][41], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][42] = CreatePlayerTextDraw(playerid, 345.8663, 254.5554, ""); // 17 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][42], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][42], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][42], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][42], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][42], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][42], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][42], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][42], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][42], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][42], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][43] = CreatePlayerTextDraw(playerid, 378.5331, 254.5554, ""); // 18 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][43], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][43], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][43], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][43], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][43], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][43], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][43], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][43], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][43], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][43], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][44] = CreatePlayerTextDraw(playerid, 411.1994, 254.5552, ""); // 19 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][44], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][44], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][44], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][44], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][44], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][44], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][44], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][44], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][44], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][44], 0.0000, 0.0000, 0.0000, 1.0000);

	inventory_slot[playerid][45] = CreatePlayerTextDraw(playerid, 443.1994, 254.5552, ""); // 20 slot
	PlayerTextDrawTextSize(playerid, inventory_slot[playerid][45], 28.0000, 33.0000);
	PlayerTextDrawAlignment(playerid, inventory_slot[playerid][45], 1);
	PlayerTextDrawColor(playerid, inventory_slot[playerid][45], -1);
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][45], 370810879);
	PlayerTextDrawFont(playerid, inventory_slot[playerid][45], 5);
	PlayerTextDrawSetProportional(playerid, inventory_slot[playerid][45], 0);
	PlayerTextDrawSetShadow(playerid, inventory_slot[playerid][45], 0);
	PlayerTextDrawSetSelectable(playerid, inventory_slot[playerid][45], true);
	PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][45], 18691);
	PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][45], 0.0000, 0.0000, 0.0000, 1.0000);

	//
	buy_player_skins[playerid] = CreatePlayerTextDraw(playerid, 294.555664, 404.706756, "10000$");
	PlayerTextDrawLetterSize(playerid, buy_player_skins[playerid], 0.217999, 1.316264);
	PlayerTextDrawAlignment(playerid, buy_player_skins[playerid], 1);
	PlayerTextDrawColor(playerid, buy_player_skins[playerid], -1);
	PlayerTextDrawSetShadow(playerid, buy_player_skins[playerid], 0);
	PlayerTextDrawSetOutline(playerid, buy_player_skins[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, buy_player_skins[playerid], 255);
	PlayerTextDrawFont(playerid, buy_player_skins[playerid], 2);
	PlayerTextDrawSetProportional(playerid, buy_player_skins[playerid], 1);

	skill_player_td[playerid][0] = CreatePlayerTextDraw(playerid,484.000091, 363.875549, "Desert Eagle");
	PlayerTextDrawLetterSize(playerid,skill_player_td[playerid][0], 0.186000, 1.077332);
	PlayerTextDrawAlignment(playerid,skill_player_td[playerid][0], 1);
	PlayerTextDrawColor(playerid,skill_player_td[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid,skill_player_td[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid,skill_player_td[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid,skill_player_td[playerid][0], 51);
	PlayerTextDrawFont(playerid,skill_player_td[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid,skill_player_td[playerid][0], 1);

	skill_player_td[playerid][1] = CreatePlayerTextDraw(playerid,497.444732, 372.342224, "0/0");
	PlayerTextDrawLetterSize(playerid,skill_player_td[playerid][1], 0.198444, 1.127111);
	PlayerTextDrawAlignment(playerid,skill_player_td[playerid][1], 1);
	PlayerTextDrawColor(playerid,skill_player_td[playerid][1], -2036081409);
	PlayerTextDrawSetShadow(playerid,skill_player_td[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid,skill_player_td[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid,skill_player_td[playerid][1], 51);
	PlayerTextDrawFont(playerid,skill_player_td[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid,skill_player_td[playerid][1], 1);

	RECON[playerid] = CreatePlayerTextDraw(playerid, 457.7958, 241.8333, "_");
	PlayerTextDrawFont(playerid, RECON[playerid], 2);
	PlayerTextDrawColor(playerid, RECON[playerid],-1);
	PlayerTextDrawSetOutline(playerid, RECON[playerid], 0);
	PlayerTextDrawLetterSize(playerid, RECON[playerid], 0.410000, 1.000000);
	PlayerTextDrawSetOutline(playerid, RECON[playerid],1);
	PlayerTextDrawSetProportional(playerid, RECON[playerid], 1);
	PlayerTextDrawAlignment(playerid, RECON[playerid], 1);
	PlayerTextDrawSetShadow(playerid, RECON[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, RECON[playerid], 51);
	//PlayerTextDrawUseBox(playerid,RECON[playerid], 1);
	//PlayerTextDrawBoxColor(playerid,RECON[playerid], 100);

	load_tunes(playerid);

	HungerProgres[playerid] = CreatePlayerTextDraw(playerid,549.500000, 60.000000, "____");PlayerTextDrawBackgroundColor(playerid,HungerProgres[playerid], 255);PlayerTextDrawFont(playerid,HungerProgres[playerid], 1);PlayerTextDrawLetterSize(playerid,HungerProgres[playerid], 0.490000, -0.000000);
	PlayerTextDrawColor(playerid,HungerProgres[playerid], -1);PlayerTextDrawSetOutline(playerid,HungerProgres[playerid], 0);PlayerTextDrawSetProportional(playerid,HungerProgres[playerid], 1);PlayerTextDrawSetShadow(playerid,HungerProgres[playerid], 1);
	PlayerTextDrawUseBox(playerid,HungerProgres[playerid], 1);PlayerTextDrawBoxColor(playerid,HungerProgres[playerid], 0xfF2AB5Bff);PlayerTextDrawTextSize(playerid,HungerProgres[playerid], 604.000000, 40.000000);PlayerTextDrawSetSelectable(playerid,HungerProgres[playerid], 0);

	DmArenaTextDraw[playerid] = CreatePlayerTextDraw(playerid, 56.000000, 296.333374, "Kills: 0~n~Death: 0");
	//PlayerTextDrawLetterSize(playerid, DmArenaTextDraw[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, DmArenaTextDraw[playerid], 1);
	PlayerTextDrawColor(playerid, DmArenaTextDraw[playerid], -1);
	PlayerTextDrawSetShadow(playerid, DmArenaTextDraw[playerid], 0);
	PlayerTextDrawSetOutline(playerid, DmArenaTextDraw[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, DmArenaTextDraw[playerid], 51);
	PlayerTextDrawFont(playerid, DmArenaTextDraw[playerid], 3);
	PlayerTextDrawSetProportional(playerid, DmArenaTextDraw[playerid], 1);

	work_td[playerid][0] = CreatePlayerTextDraw(playerid, 508.799560, 157.333328, "box");
	PlayerTextDrawLetterSize(playerid, work_td[playerid][0], 0.000000, 4.143486);
	PlayerTextDrawTextSize(playerid, work_td[playerid][0], 607.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, work_td[playerid][0], 1);
	PlayerTextDrawColor(playerid, work_td[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, work_td[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, work_td[playerid][0], 0xf5EAFFC99); // -668439399
	PlayerTextDrawSetShadow(playerid, work_td[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, work_td[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, work_td[playerid][0], 255);
	PlayerTextDrawFont(playerid, work_td[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, work_td[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][0], 0);

	work_td[playerid][1] = CreatePlayerTextDraw(playerid, 511.142517, 168.416656, "MONEY:_$0");
	PlayerTextDrawLetterSize(playerid, work_td[playerid][1], 0.377979, 1.389998);
	PlayerTextDrawAlignment(playerid, work_td[playerid][1], 1);
	PlayerTextDrawColor(playerid, work_td[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, work_td[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, work_td[playerid][1], 255);
	PlayerTextDrawFont(playerid, work_td[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, work_td[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][1], 0);

	work_td[playerid][2] = CreatePlayerTextDraw(playerid, 509.267150, 165.500045, "box");
	PlayerTextDrawLetterSize(playerid, work_td[playerid][2], 0.000000, -0.494873);
	PlayerTextDrawTextSize(playerid, work_td[playerid][2], 607.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, work_td[playerid][2], 1);
	PlayerTextDrawColor(playerid, work_td[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, work_td[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid, work_td[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, work_td[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, work_td[playerid][2], 255);
	PlayerTextDrawFont(playerid, work_td[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, work_td[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][2], 0);

	work_td[playerid][3] = CreatePlayerTextDraw(playerid, 509.267150, 190.583328, "box");
	PlayerTextDrawLetterSize(playerid, work_td[playerid][3], 0.000000, -0.494873);
	PlayerTextDrawTextSize(playerid, work_td[playerid][3], 607.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, work_td[playerid][3], 1);
	PlayerTextDrawColor(playerid, work_td[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, work_td[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid, work_td[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, work_td[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, work_td[playerid][3], 255);
	PlayerTextDrawFont(playerid, work_td[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, work_td[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][3], 0);

	YandNsysTDPlayer[playerid][0] = CreatePlayerTextDraw(playerid, 287.288482, 318.583343, "PRESS Y");
	PlayerTextDrawLetterSize(playerid, YandNsysTDPlayer[playerid][0], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, YandNsysTDPlayer[playerid][0], 1);
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, YandNsysTDPlayer[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, YandNsysTDPlayer[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, YandNsysTDPlayer[playerid][0], 51);
	PlayerTextDrawFont(playerid, YandNsysTDPlayer[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, YandNsysTDPlayer[playerid][0], 1);

	YandNsysTDPlayer[playerid][1] = CreatePlayerTextDraw(playerid, 294.472076, 332.583099, "IIIIIIIIII");
	PlayerTextDrawLetterSize(playerid, YandNsysTDPlayer[playerid][1], 0.402498, 1.553333);
	PlayerTextDrawAlignment(playerid, YandNsysTDPlayer[playerid][1], 1);
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, YandNsysTDPlayer[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, YandNsysTDPlayer[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, YandNsysTDPlayer[playerid][1], 51);
	PlayerTextDrawFont(playerid, YandNsysTDPlayer[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, YandNsysTDPlayer[playerid][1], 1);
	
	// спидометр
	Speed_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 551.3333, 398.2369, "144"); // пусто
	PlayerTextDrawLetterSize(playerid, Speed_PTD[playerid][0], 0.3564, 1.7991);
	PlayerTextDrawAlignment(playerid, Speed_PTD[playerid][0], 2);
	PlayerTextDrawColor(playerid, Speed_PTD[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, Speed_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, Speed_PTD[playerid][0], 3);
	PlayerTextDrawSetProportional(playerid, Speed_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, Speed_PTD[playerid][0], 0);

	Speed_PTD[playerid][1] = CreatePlayerTextDraw(playerid, 530.7332, 415.2145, "ИГOPOЛТE:_100%"); // пусто
	PlayerTextDrawLetterSize(playerid, Speed_PTD[playerid][1], 0.1010, 0.7411);
	PlayerTextDrawAlignment(playerid, Speed_PTD[playerid][1], 3);
	PlayerTextDrawColor(playerid, Speed_PTD[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, Speed_PTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, Speed_PTD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, Speed_PTD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, Speed_PTD[playerid][1], 0);

	Speed_PTD[playerid][2] = CreatePlayerTextDraw(playerid, 581.7996, 415.7297, "АEHИЕH:_100З."); // пусто
	PlayerTextDrawLetterSize(playerid, Speed_PTD[playerid][2], 0.1013, 0.6790);
	PlayerTextDrawTextSize(playerid, Speed_PTD[playerid][2], -3.0000, 0.0000);
	PlayerTextDrawAlignment(playerid, Speed_PTD[playerid][2], 1);
	PlayerTextDrawColor(playerid, Speed_PTD[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, Speed_PTD[playerid][2], 255);
	PlayerTextDrawFont(playerid, Speed_PTD[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, Speed_PTD[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, Speed_PTD[playerid][2], 0);

	Speed_PTD[playerid][3] = CreatePlayerTextDraw(playerid, 508.6665, 398.5368, "HUNTLEY"); // пусто
	PlayerTextDrawLetterSize(playerid, Speed_PTD[playerid][3], 0.1580, 0.7950);
	PlayerTextDrawAlignment(playerid, Speed_PTD[playerid][3], 2);
	PlayerTextDrawColor(playerid, Speed_PTD[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, Speed_PTD[playerid][3], 255);
	PlayerTextDrawFont(playerid, Speed_PTD[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, Speed_PTD[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, Speed_PTD[playerid][3], 0);

	Speed_PTD[playerid][4] = CreatePlayerTextDraw(playerid, 577.5665, 405.5480, "LD_SPAC:white"); // engine
	PlayerTextDrawTextSize(playerid, Speed_PTD[playerid][4], 6.0000, 1.0000);
	PlayerTextDrawAlignment(playerid, Speed_PTD[playerid][4], 1);
	PlayerTextDrawColor(playerid, Speed_PTD[playerid][4], -347323649);
	PlayerTextDrawBackgroundColor(playerid, Speed_PTD[playerid][4], 255);
	PlayerTextDrawFont(playerid, Speed_PTD[playerid][4], 4);
	PlayerTextDrawSetProportional(playerid, Speed_PTD[playerid][4], 0);
	PlayerTextDrawSetShadow(playerid, Speed_PTD[playerid][4], 0);

	Speed_PTD[playerid][5] = CreatePlayerTextDraw(playerid, 591.8660, 405.5480, "LD_SPAC:white"); // lamps
	PlayerTextDrawTextSize(playerid, Speed_PTD[playerid][5], 6.0000, 1.0000);
	PlayerTextDrawAlignment(playerid, Speed_PTD[playerid][5], 1);
	PlayerTextDrawColor(playerid, Speed_PTD[playerid][5], -347323649);
	PlayerTextDrawBackgroundColor(playerid, Speed_PTD[playerid][5], 255);
	PlayerTextDrawFont(playerid, Speed_PTD[playerid][5], 4);
	PlayerTextDrawSetProportional(playerid, Speed_PTD[playerid][5], 0);
	PlayerTextDrawSetShadow(playerid, Speed_PTD[playerid][5], 0);

	Speed_PTD[playerid][6] = CreatePlayerTextDraw(playerid, 606.4328, 405.5480, "LD_SPAC:white"); // doors
	PlayerTextDrawTextSize(playerid, Speed_PTD[playerid][6], 6.0000, 1.0000);
	PlayerTextDrawAlignment(playerid, Speed_PTD[playerid][6], 1);
	PlayerTextDrawColor(playerid, Speed_PTD[playerid][6], -347323649);
	PlayerTextDrawBackgroundColor(playerid, Speed_PTD[playerid][6], 255);
	PlayerTextDrawFont(playerid, Speed_PTD[playerid][6], 4);
	PlayerTextDrawSetProportional(playerid, Speed_PTD[playerid][6], 0);
	PlayerTextDrawSetShadow(playerid, Speed_PTD[playerid][6], 0);
}
stock to_default(playerid) {
	SetPlayerColor(playerid, TEAM_HIT_COLOR);
	
	ac_1{playerid} = false;
	
	TI[playerid][tMoped] = INVALID_VEHICLE_ID;
	car_shop[playerid] = INVALID_VEHICLE_ID;
	thef_timer[playerid] = -1;
	spaned[playerid] = 0;
	
	PI[playerid][pMPromo] = 0;
	PageFirst[playerid][0] = 0;
	PageFirst[playerid][1] = 0;
	car_color[playerid][0] = 1;
	car_color[playerid][1] = 1;
	progress_rob[playerid] = 0;
	
	select_yaxta[playerid] = 0;
	yaxta_money[playerid] = 0;
	PI[playerid][pRoom] = 0;
	CountFloodForPlayer[playerid] = 0;

	SetPVarInt(playerid, "taxist",-1);
	SetPVarInt(playerid, "invstat",-1);
	
	for(new i = 0; i < 5; i++)
	{
		market_id[playerid][i] = 0;
		market_item[playerid][i] = 0;
		market_ammout[playerid][i] = 0;
		market_cash[playerid][i] = 0;
	}

	PI[playerid][pAdmin] 						=
	addchet[playerid]							= 
	dostup[playerid] 							=
	PI[playerid][pMember] 						=
	PI[playerid][pLeader] 						=
	PI[playerid][pRouble] 						=
	nedded[playerid]							=
	TI[playerid][preOrg]						=
	TI[playerid][preOrgg]						=
	TI[playerid][pOldSkin] 						=
	TI[playerid][tCuffedTime] 					=
	TI[playerid][tCuffed] 						=
	TI[playerid][tGagTime] 						=
	TI[playerid][tSpcarTime] 					=
	TI[playerid][tJobSalary] 					=
	TI[playerid][tJobSad][0]					=
	TI[playerid][tJobSad][1]					=
	TI[playerid][tJobSad][2]					=
	TI[playerid][tJobSad][3]					=
	TI[playerid][tJobGun][0]					=
	TI[playerid][tJobGun][1]					=
	TI[playerid][tJobGun][2]					=
	TI[playerid][tJobWood][0]					=
	TI[playerid][tJobWood][1]					=
	TI[playerid][tJobWood][3]					=
	TI[playerid][tMaskTime]						=
	TI[playerid][tTrucker][0]					=
	TI[playerid][tTrucker][1]					=
	TI[playerid][tTazers][0] 					=
	TI[playerid][tTazers][1] 					=
	TI[playerid][tAntiDM]						=
	TI[playerid][tMasked]						=
	TI[playerid][tFakePass]						=
	TI[playerid][tGymSkill] 					=
	TI[playerid][tAutoSchool] 					=
	GotoInfo[playerid][gtState]                 =
	gAdmin[playerid][0]							=
	gAdmin[playerid][1]							=
	gAdmin[playerid][2]							=
	gAdmin[playerid][3]							=
	gAdmin[playerid][4]							=
	gAdmin[playerid][5]							=
	gAdmin[playerid][6]							=
	gAdmin[playerid][7]							=
	EdittingATM[playerid] 						=
	gAdminTime[playerid]						=
	gOnlinePlayer[playerid][0] 					=
	gOnlinePlayer[playerid][1] 					=
	gOnlinePlayerAFK[playerid][0] 				=
	gOnlinePlayerAFK[playerid][1] 				= 
	Casino_Flag[playerid][casino_crup] 			=
	Casino_Flag[playerid][casino_bet_cash] 		= 
	gpss[playerid] 								=
	VinylJob[playerid] 							=
	RepaintValue[playerid] 						= 
	TI[playerid][loadingMode] 					= 
	TI[playerid][loadingModelPlayer] 			= 
	TI[playerid][tACflood]						= 
	TI[playerid][tAFK] 							= 
	TI[playerid][tDiceMoney]					=
	TI[playerid][tDiceTime]						=
	TI[playerid][tVirtualWorld]					=
	TI[playerid][tInterior]						=
	anti_dm{playerid} 							=
	TI[playerid][tSLimit]						=
	TI[playerid][tRaceMoney]					=
	PI[playerid][pFmute]						=
	PlayerKorm[playerid]                        =
	EggCount[playerid]                          =
	TI[playerid][tBankTime] = 
	TI[playerid][tCodeBank] = 
	PI[playerid][pMedCard] = 
	PI[playerid][pTempKey]						= 0;

	PI[playerid][pHP]							= 100;

	idaofcar[playerid]							=
	PlayerTrailerTime[playerid] 				=
	avir[playerid]								=
	aint[playerid]								=
	Lastspec[playerid]							=
	TI[playerid][tTazers][2] 					=
	TI[playerid][tFight]						=
	TI[playerid][tArendKey]						=
	TI[playerid][tNewYear][0] 					=
	IDGZ[playerid] 								=
	edit_int[playerid] 							= 
	TI[playerid][tArendaCar] 					=
	TI[playerid][tJobWood][2]					=
	PlayerEgg[playerid]                         =
	TI[playerid][tDialog] 						=
	TI[playerid][tDuel] 						=
	TI[playerid][tDuelLobby] 					=
	Casino_Flag[playerid][select_casino_table] 	= -1;

	PI[playerid][pSlotItem][0] 					=
	PI[playerid][pSlotItem][1] 					=
	PI[playerid][pSlotItem][2] 					=
	PI[playerid][pSlotItem][3] 					=
	PI[playerid][pSlotItem][4] 					=
	PI[playerid][pSlotItem][5] 					=
	PI[playerid][pSlotItem][6] 					=
	PI[playerid][pSlotItem][7] 					= 0;

	TI[playerid][tPhoneCaller] 					=
	TI[playerid][tPhoneCalled] 					=
	GotoInfo[playerid][gtID]                    =
	GotoInfo[playerid][gtGoID]					=
	TI[playerid][tTaxiPass] 					=
	HealOffer[playerid] 						=
	SERIU[playerid][sID] 						= 
	TI[playerid][tSpectr]						=
	TI[playerid][tDiceID]						=
	TI[playerid][tDiceIDs]						= INVALID_PLAYER_ID;

	car_spawn[playerid]							=
	LastVeh[playerid] 							=
	VehTrailer[playerid]						=
	rob_veh[playerid]							=
	car_autoschool[playerid] 					=

	TI[playerid][tPhone] 						=
	TI[playerid][tPhoneNews] 					=
	TI[playerid][tTazer] 						=
	TI[playerid][tTied] 						=
	TI[playerid][tGag] 							=
	TI[playerid][tEther] 						=
	TI[playerid][tPhoneOnline] 					=
	TI[playerid][tGym]							=
	TI[playerid][tShowKeys]						=
	TI[playerid][tInHouse] 						=
	TI[playerid][tHeal]							=
	ChangedPrimaryColor[playerid] 				=
	ChangedSecondaryColor[playerid] 			=
	ChangedVinylJob[playerid] 					=
	TI[playerid][tTaxiGoing] 					=
	TI[playerid][tLogin] 						=
	TI[playerid][tTPpick] 						=
	Fishing[playerid] 							=
	Poisk[playerid] 							=
	TI[playerid][tSelectSkin] 					= 
	TI[playerid][tDiceClosed]					=
	TI[playerid][tTir]							= false;

	TI[playerid][tGyms] 						=
	TI[playerid][tTaxiStart] 					=
	GotoInfo[playerid][gtX]                     = 
	GotoInfo[playerid][gtY]                     = 
	GotoInfo[playerid][gtZ]                     = 
	GotoInfo[playerid][gtTPX]                   = 
	GotoInfo[playerid][gtTPY]                   = 
	GotoInfo[playerid][gtTPZ]                   =
	TI[playerid][tArmour]                   	= 0.0;
	ObjectShip[playerid] 						= 0x7F800000;
	
	TK_Trailer[playerid] 						= INVALID_VEHICLE_ID;
	thef_car[playerid]                          = INVALID_VEHICLE_ID;

	for(new i = 0; i < 4; i++) 					lic[playerid][i] = 0;

	for (new i = 0; i < TOTALGZ; i++) 			GangZoneShowForPlayer(playerid,GZInfo[i][gZone],GetGangZoneColor(i));
	
	GangZoneShowForPlayer(playerid,SFa, COLOR_YELLOW2);

	ResetPlayerMoney(playerid);
	CreateTextDraws(playerid);
	
}
#include "../system/hacker.pwn"
stock RemoveBuildings(playerid) {
	//новый lcn
	RemoveBuildingForPlayer(playerid, 3685, 1249.554, -905.460, 45.031, 0.250);
	RemoveBuildingForPlayer(playerid, 3685, 1287.687, -900.460, 45.062, 0.250);
	RemoveBuildingForPlayer(playerid, 3685, 1284.203, -871.296, 45.273, 0.250);
	RemoveBuildingForPlayer(playerid, 3685, 1245.460, -874.703, 45.070, 0.250);
	RemoveBuildingForPlayer(playerid, 3684, 1249.554, -905.460, 45.031, 0.250);
	RemoveBuildingForPlayer(playerid, 617, 1263.882, -894.351, 41.875, 0.250);
	RemoveBuildingForPlayer(playerid, 617, 1271.867, -892.367, 41.875, 0.250);
	RemoveBuildingForPlayer(playerid, 3684, 1287.687, -900.460, 45.062, 0.250);
	RemoveBuildingForPlayer(playerid, 5847, 1295.859, -895.093, 41.710, 0.250);
	RemoveBuildingForPlayer(playerid, 617, 1262.984, -882.218, 41.875, 0.250);
	RemoveBuildingForPlayer(playerid, 617, 1271.203, -882.398, 41.875, 0.250);
	RemoveBuildingForPlayer(playerid, 3684, 1245.460, -874.703, 45.070, 0.250);
	RemoveBuildingForPlayer(playerid, 3684, 1284.203, -871.296, 45.273, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1252.260, -885.875, 44.359, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1241.199, -886.843, 44.359, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1285.650, -881.312, 44.359, 0.250);
	RemoveBuildingForPlayer(playerid, 617, 1231.410, -886.929, 41.875, 0.250);
	RemoveBuildingForPlayer(playerid, 617, 1299.500, -909.140, 41.875, 0.250);
	//ждлс тест
	RemoveBuildingForPlayer(playerid, 4961, 1745.2031, -1882.8516, 26.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 4821, 1745.2031, -1882.8516, 26.1406, 0.25);

	/*//Новый спавн лс
	RemoveBuildingForPlayer(playerid, 4994, 1604.339, -2286.530, 2.101, 0.250);
	RemoveBuildingForPlayer(playerid, 4992, 1654.540, -2286.800, 13.320, 0.250);
	RemoveBuildingForPlayer(playerid, 1290, 1403.410, -2133.479, 18.421, 0.250);
	RemoveBuildingForPlayer(playerid, 4829, 1645.380, -2292.760, 3.914, 0.250);
	RemoveBuildingForPlayer(playerid, 4951, 1645.380, -2292.760, 3.914, 0.250);*/
	//Диспетчерская склад оружия
	RemoveBuildingForPlayer(playerid, 12956, 96.328, -261.195, 3.859, 0.250);
	RemoveBuildingForPlayer(playerid, 12805, 65.257, -303.984, 14.453, 0.250);
	RemoveBuildingForPlayer(playerid, 13191, 65.257, -303.984, 14.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1431, 36.429, -291.062, 1.570, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, 32.406, -289.218, 1.648, 0.250);
	RemoveBuildingForPlayer(playerid, 1426, 29.171, -292.273, 1.406, 0.250);
	RemoveBuildingForPlayer(playerid, 1426, 24.593, -291.757, 1.406, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, 29.234, -286.054, 1.218, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, 33.601, -279.351, 1.117, 0.250);
	RemoveBuildingForPlayer(playerid, 13198, 140.593, -305.390, 5.593, 0.250);
	RemoveBuildingForPlayer(playerid, 13194, 140.593, -305.390, 5.593, 0.250);
	RemoveBuildingForPlayer(playerid, 12861, 36.828, -256.226, 0.468, 0.250);
	RemoveBuildingForPlayer(playerid, 13195, 36.828, -256.226, 0.468, 0.250);
	RemoveBuildingForPlayer(playerid, 12860, 164.710, -234.188, 0.476, 0.250);
	RemoveBuildingForPlayer(playerid, 13192, 164.710, -234.188, 0.476, 0.250);
	//Склады оружия
	RemoveBuildingForPlayer(playerid, 12956, 96.328, -261.195, 3.859, 0.250);
	RemoveBuildingForPlayer(playerid, 12805, 65.257, -303.984, 14.453, 0.250);
	RemoveBuildingForPlayer(playerid, 13191, 65.257, -303.984, 14.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1431, 36.429, -291.062, 1.570, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, 32.406, -289.218, 1.648, 0.250);
	RemoveBuildingForPlayer(playerid, 1426, 29.171, -292.273, 1.406, 0.250);
	RemoveBuildingForPlayer(playerid, 1426, 24.593, -291.757, 1.406, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, 29.234, -286.054, 1.218, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, 33.601, -279.351, 1.117, 0.250);
	RemoveBuildingForPlayer(playerid, 13198, 140.593, -305.390, 5.593, 0.250);
	RemoveBuildingForPlayer(playerid, 13194, 140.593, -305.390, 5.593, 0.250);
	RemoveBuildingForPlayer(playerid, 12861, 36.828, -256.226, 0.468, 0.250);
	RemoveBuildingForPlayer(playerid, 13195, 36.828, -256.226, 0.468, 0.250);
	RemoveBuildingForPlayer(playerid, 12860, 164.710, -234.188, 0.476, 0.250);
	RemoveBuildingForPlayer(playerid, 13192, 164.710, -234.188, 0.476, 0.250);
	//Экстерьер ЛСПД
	RemoveBuildingForPlayer(playerid, 1411, 761.726, 2037.770, 7.296, 0.250);
	RemoveBuildingForPlayer(playerid, 3976, 1571.599, -1675.750, 35.679, 0.250);
	RemoveBuildingForPlayer(playerid, 4064, 1571.599, -1675.750, 35.679, 0.250);
	RemoveBuildingForPlayer(playerid, 4192, 1591.699, -1674.849, 20.492, 0.250);
	RemoveBuildingForPlayer(playerid, 4232, 1568.290, -1677.780, 10.820, 0.250);
	RemoveBuildingForPlayer(playerid, 4228, 1568.290, -1677.780, 10.820, 0.250);
	RemoveBuildingForPlayer(playerid, 4032, 1568.290, -1677.780, 10.820, 0.250);
	RemoveBuildingForPlayer(playerid, 4228, 1568.290, -1677.780, 10.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3975, 1578.469, -1676.420, 13.070, 0.250);
	RemoveBuildingForPlayer(playerid, 4063, 1578.469, -1676.420, 13.070, 0.250);
	//Маппинг КПП ЛВ
	RemoveBuildingForPlayer(playerid, 620, 2889.520, -692.914, 9.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3381, -176.352, 367.523, 17.695, 0.250);
	RemoveBuildingForPlayer(playerid, 3382, -176.352, 367.523, 17.695, 0.250);
	// Удаленный мапинг для байкеров
	RemoveBuildingForPlayer(playerid, 13061, 321.851, -34.523, 4.898, 0.250);
	RemoveBuildingForPlayer(playerid, 13063, 321.851, -34.523, 4.898, 0.250);
	RemoveBuildingForPlayer(playerid, 1684, 317.695, -42.234, 2.015, 0.250);
	RemoveBuildingForPlayer(playerid, 780, 274.031, -56.226, 0.554, 0.250);
	// торговые павильоны
	RemoveBuildingForPlayer(playerid, 17933, 2532.989, -1289.790, 39.281, 0.250);
	RemoveBuildingForPlayer(playerid, 6299, 387.578, -1918.369, 8.843, 0.250);
	RemoveBuildingForPlayer(playerid, 6460, 387.578, -1918.369, 8.843, 0.250);
	RemoveBuildingForPlayer(playerid, 6289, 387.890, -1900.439, 9.390, 0.250);
	RemoveBuildingForPlayer(playerid, 6459, 387.890, -1900.439, 9.390, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 384.429, -1904.130, 7.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 384.429, -1929.800, 7.375, 0.250);
	// RM особняк
	RemoveBuildingForPlayer(playerid, 13006, 1382.699, 401.250, 18.750, 0.250);
	RemoveBuildingForPlayer(playerid, 13215, 1382.699, 401.250, 18.750, 0.250);
	RemoveBuildingForPlayer(playerid, 1687, 1393.689, 413.656, 28.515, 0.250);
	RemoveBuildingForPlayer(playerid, 1688, 1389.560, 403.929, 28.757, 0.250);
	RemoveBuildingForPlayer(playerid, 1688, 1370.079, 385.523, 28.757, 0.250);
	RemoveBuildingForPlayer(playerid, 1687, 1369.290, 383.359, 28.515, 0.250);
	RemoveBuildingForPlayer(playerid, 13485, 1304.3047, 330.1563, 23.7031, 0.25);
	// TK загрузочные зоны ЛС
	RemoveBuildingForPlayer(playerid, 3569, 2234.389, -2244.830, 14.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3747, 2234.389, -2244.830, 14.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3569, 2226.969, -2252.139, 14.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3747, 2226.969, -2252.139, 14.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3569, 2219.419, -2259.520, 14.882, 0.250);
	RemoveBuildingForPlayer(playerid, 3747, 2219.419, -2259.520, 14.882, 0.250);
	RemoveBuildingForPlayer(playerid, 3569, 2212.090, -2267.070, 14.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3747, 2212.090, -2267.070, 14.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3569, 2204.629, -2274.409, 14.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3747, 2204.629, -2274.409, 14.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3627, 2195.090, -2216.840, 15.906, 0.250);
	RemoveBuildingForPlayer(playerid, 3686, 2195.090, -2216.840, 15.906, 0.250);
	RemoveBuildingForPlayer(playerid, 3574, 2193.060, -2196.639, 15.101, 0.250);
	RemoveBuildingForPlayer(playerid, 3744, 2193.060, -2196.639, 15.101, 0.250);
	RemoveBuildingForPlayer(playerid, 3574, 2174.639, -2215.659, 15.101, 0.250);
	RemoveBuildingForPlayer(playerid, 3744, 2174.639, -2215.659, 15.101, 0.250);
	RemoveBuildingForPlayer(playerid, 5244, 2198.850, -2213.919, 14.882, 0.250);
	RemoveBuildingForPlayer(playerid, 5305, 2198.850, -2213.919, 14.882, 0.250);
	RemoveBuildingForPlayer(playerid, 3578, 2235.159, -2231.850, 13.257, 0.250);
	RemoveBuildingForPlayer(playerid, 3627, 2220.780, -2261.050, 15.906, 0.250);
	RemoveBuildingForPlayer(playerid, 3686, 2220.780, -2261.050, 15.906, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 2217.219, -2250.360, 16.367, 0.250);
	// Транспортная компания
	RemoveBuildingForPlayer(playerid, 1415, -513.757, -561.007, 24.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1441, -503.617, -540.531, 25.226, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -502.609, -528.648, 24.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, -502.117, -521.031, 25.023, 0.250);
	RemoveBuildingForPlayer(playerid, 1441, -502.406, -513.015, 25.226, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -620.414, -490.507, 24.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -619.625, -473.453, 24.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, -553.687, -481.632, 25.023, 0.250);
	RemoveBuildingForPlayer(playerid, 1441, -554.453, -496.179, 25.164, 0.250);
	RemoveBuildingForPlayer(playerid, 1441, -537.039, -469.117, 25.226, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, -516.945, -496.648, 25.023, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, -503.125, -509.000, 25.023, 0.250);

	/*// mayor экстерьер
	RemoveBuildingForPlayer(playerid, 4057, 1479.553, -1693.140, 19.577, 0.250);
	RemoveBuildingForPlayer(playerid, 4210, 1479.562, -1631.453, 12.078, 0.250);
	RemoveBuildingForPlayer(playerid, 713, 1457.937, -1620.694, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 713, 1496.866, -1707.819, 13.406, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1713.506, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.694, -1716.703, 15.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1713.703, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1289, 1504.750, -1711.881, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1258, 1445.006, -1704.765, 13.694, 0.250);
	RemoveBuildingForPlayer(playerid, 1258, 1445.006, -1692.234, 13.694, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1445.812, -1650.022, 22.256, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1457.725, -1710.062, 12.397, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1461.656, -1707.687, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1704.640, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1463.062, -1701.569, 13.725, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.694, -1702.531, 15.625, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1457.553, -1697.288, 12.397, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1694.046, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.381, -1692.390, 15.631, 0.250);
	RemoveBuildingForPlayer(playerid, 4186, 1479.553, -1693.140, 19.577, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1461.125, -1687.562, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1463.062, -1690.647, 13.725, 0.250);
	RemoveBuildingForPlayer(playerid, 641, 1458.616, -1684.131, 11.100, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1457.272, -1666.296, 13.694, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1682.718, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1471.406, -1666.178, 22.256, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.381, -1682.312, 15.631, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1458.256, -1659.256, 13.694, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1449.850, -1655.937, 22.256, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1477.937, -1652.725, 15.631, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1479.609, -1653.250, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1457.350, -1650.569, 13.694, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1454.421, -1642.491, 13.694, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1467.850, -1646.593, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1472.897, -1651.506, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1465.937, -1639.819, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1466.468, -1637.959, 15.631, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1449.593, -1635.046, 13.694, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1467.709, -1632.890, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1465.890, -1629.975, 15.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1472.663, -1627.881, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1479.468, -1626.022, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 3985, 1479.562, -1631.453, 12.078, 0.250);
	RemoveBuildingForPlayer(playerid, 4206, 1479.553, -1639.609, 13.647, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1465.834, -1608.375, 15.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1229, 1466.484, -1598.093, 14.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1704.593, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1494.209, -1694.437, 13.725, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1693.734, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1496.975, -1686.850, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 641, 1494.140, -1689.234, 11.100, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1682.671, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1480.609, -1666.178, 22.256, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1488.225, -1666.178, 22.256, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1486.406, -1651.390, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1491.366, -1646.381, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1493.131, -1639.453, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1486.178, -1627.765, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1491.218, -1632.678, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1494.413, -1629.975, 15.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1494.359, -1608.375, 15.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1288, 1504.750, -1705.406, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1287, 1504.750, -1704.468, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1286, 1504.750, -1695.053, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1285, 1504.750, -1694.038, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1498.959, -1684.609, 12.397, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1504.163, -1662.015, 13.694, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1504.718, -1670.921, 13.694, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1503.187, -1621.125, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1501.281, -1624.578, 12.397, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1498.359, -1616.968, 12.397, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1508.444, -1668.741, 22.256, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1505.694, -1654.834, 13.694, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1508.515, -1647.859, 13.694, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1513.272, -1642.491, 13.694, 0.250);
	RemoveBuildingForPlayer(playerid, 1258, 1510.890, -1607.312, 13.694, 0.250);*/

	// контейнеры
	RemoveBuildingForPlayer(playerid, 3625, 2400.909, -2577.340, 15.164, 0.250);
	RemoveBuildingForPlayer(playerid, 3769, 2400.909, -2577.340, 15.164, 0.250);
	RemoveBuildingForPlayer(playerid, 3621, 2387.800, -2580.870, 17.789, 0.250);
	RemoveBuildingForPlayer(playerid, 3688, 2387.800, -2580.870, 17.789, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 2376.330, -2575.879, 26.671, 0.250);
	RemoveBuildingForPlayer(playerid, 1413, 2407.949, -2653.649, 13.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 2402.669, -2653.639, 13.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1413, 2397.399, -2653.629, 13.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1413, 2392.120, -2653.560, 13.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1413, 2386.840, -2653.510, 13.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3574, 2399.419, -2490.679, 15.218, 0.250);
	RemoveBuildingForPlayer(playerid, 3744, 2399.419, -2490.679, 15.218, 0.250);
	RemoveBuildingForPlayer(playerid, 3574, 2391.879, -2503.510, 15.218, 0.250);
	RemoveBuildingForPlayer(playerid, 3744, 2391.879, -2503.510, 15.218, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 2376.330, -2630.000, 26.671, 0.250);

	// RCSD
	RemoveBuildingForPlayer(playerid, 1294, 632.578, -583.593, 19.820, 0.250);
	RemoveBuildingForPlayer(playerid, 781, 630.726, -578.773, 15.132, 0.250);
	RemoveBuildingForPlayer(playerid, 780, 628.195, -557.343, 15.335, 0.250);
	RemoveBuildingForPlayer(playerid, 781, 630.218, -564.250, 15.132, 0.250);
	RemoveBuildingForPlayer(playerid, 1294, 632.843, -545.601, 19.820, 0.250);
	RemoveBuildingForPlayer(playerid, 781, 629.578, -547.218, 15.132, 0.250);
	RemoveBuildingForPlayer(playerid, 780, 604.015, -542.343, 15.070, 0.250);

	// стройка
	RemoveBuildingForPlayer(playerid, 8028, 1735.8594, 519.1563, 25.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 8056, 1735.8594, 519.1563, 25.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 8128, 1735.8750, 519.0078, 4.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 8129, 1735.8750, 519.0078, 4.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1716.7813, 460.8906, 35.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1750.1094, 556.5469, 31.0391, 0.25);
	
	// автосалон спорт класса
	RemoveBuildingForPlayer(playerid, 966, -1526.390, 481.382, 6.179, 0.250);
	RemoveBuildingForPlayer(playerid, 968, -1526.439, 481.382, 6.906, 0.250);
	RemoveBuildingForPlayer(playerid, 1211, 555.156, -1251.930, 16.640, 0.250);

	// Армия ЛС
	RemoveBuildingForPlayer(playerid, 5156, 2838.039, -2423.882, 10.960, 0.250);
	RemoveBuildingForPlayer(playerid, 5159, 2838.031, -2371.953, 7.296, 0.250);
	RemoveBuildingForPlayer(playerid, 5160, 2829.953, -2479.570, 5.265, 0.250);
	RemoveBuildingForPlayer(playerid, 5161, 2838.023, -2358.476, 21.312, 0.250);
	RemoveBuildingForPlayer(playerid, 5162, 2838.039, -2423.882, 10.960, 0.250);
	RemoveBuildingForPlayer(playerid, 5163, 2838.039, -2532.773, 17.023, 0.250);
	RemoveBuildingForPlayer(playerid, 5164, 2838.140, -2447.843, 15.726, 0.250);
	RemoveBuildingForPlayer(playerid, 5165, 2838.031, -2520.187, 18.414, 0.250);
	RemoveBuildingForPlayer(playerid, 5166, 2829.953, -2479.570, 5.265, 0.250);
	RemoveBuildingForPlayer(playerid, 5167, 2838.031, -2371.953, 7.296, 0.250);
	RemoveBuildingForPlayer(playerid, 3707, 2716.234, -2452.593, 20.203, 0.250);
	RemoveBuildingForPlayer(playerid, 3710, 2788.156, -2417.789, 16.726, 0.250);
	RemoveBuildingForPlayer(playerid, 3710, 2788.156, -2455.882, 16.726, 0.250);
	RemoveBuildingForPlayer(playerid, 3710, 2788.156, -2493.984, 16.726, 0.250);
	RemoveBuildingForPlayer(playerid, 3708, 2716.234, -2452.593, 20.203, 0.250);
	RemoveBuildingForPlayer(playerid, 3744, 2771.070, -2372.445, 15.218, 0.250);
	RemoveBuildingForPlayer(playerid, 3744, 2789.210, -2377.625, 15.218, 0.250);
	RemoveBuildingForPlayer(playerid, 3744, 2774.796, -2386.851, 15.218, 0.250);
	RemoveBuildingForPlayer(playerid, 3744, 2771.070, -2520.546, 15.218, 0.250);
	RemoveBuildingForPlayer(playerid, 3744, 2774.796, -2534.953, 15.218, 0.250);
	RemoveBuildingForPlayer(playerid, 3746, 2814.265, -2356.570, 25.515, 0.250);
	RemoveBuildingForPlayer(playerid, 3746, 2814.265, -2521.492, 25.515, 0.250);
	RemoveBuildingForPlayer(playerid, 5335, 2829.953, -2479.570, 5.265, 0.250);
	RemoveBuildingForPlayer(playerid, 5336, 2829.953, -2479.570, 5.265, 0.250);
	RemoveBuildingForPlayer(playerid, 3770, 2795.828, -2394.242, 14.171, 0.250);
	RemoveBuildingForPlayer(playerid, 3770, 2746.406, -2453.484, 14.078, 0.250);
	RemoveBuildingForPlayer(playerid, 5352, 2838.195, -2488.664, 29.312, 0.250);
	RemoveBuildingForPlayer(playerid, 1306, 2742.265, -2481.515, 19.843, 0.250);
	RemoveBuildingForPlayer(playerid, 5326, 2661.515, -2465.140, 20.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1306, 2742.265, -2416.523, 19.843, 0.250);
	RemoveBuildingForPlayer(playerid, 3574, 2774.796, -2534.953, 15.218, 0.250);
	RemoveBuildingForPlayer(playerid, 3574, 2771.070, -2520.546, 15.218, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2783.781, -2501.835, 14.695, 0.250);
	RemoveBuildingForPlayer(playerid, 3624, 2788.156, -2493.984, 16.726, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2783.781, -2486.960, 14.656, 0.250);
	RemoveBuildingForPlayer(playerid, 3578, 2747.007, -2480.242, 13.171, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2783.781, -2463.820, 14.632, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 2773.343, -2479.968, 26.703, 0.250);
	RemoveBuildingForPlayer(playerid, 3624, 2788.156, -2455.882, 16.726, 0.250);
	RemoveBuildingForPlayer(playerid, 3626, 2746.406, -2453.484, 14.078, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2783.781, -2448.476, 14.632, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 2773.343, -2443.171, 26.703, 0.250);
	RemoveBuildingForPlayer(playerid, 3577, 2744.570, -2436.187, 13.343, 0.250);
	RemoveBuildingForPlayer(playerid, 3577, 2744.570, -2427.320, 13.351, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2783.781, -2425.351, 14.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3574, 2774.796, -2386.851, 15.218, 0.250);
	RemoveBuildingForPlayer(playerid, 3574, 2771.070, -2372.445, 15.218, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2783.781, -2410.210, 14.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3624, 2788.156, -2417.789, 16.726, 0.250);
	RemoveBuildingForPlayer(playerid, 3574, 2789.210, -2377.625, 15.218, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2791.953, -2501.835, 14.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2797.515, -2486.828, 14.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2791.953, -2486.960, 14.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2791.953, -2463.820, 14.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2797.515, -2448.343, 14.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2791.953, -2448.476, 14.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2791.953, -2425.351, 14.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2791.953, -2410.210, 14.656, 0.250);
	RemoveBuildingForPlayer(playerid, 3761, 2797.515, -2410.078, 14.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3626, 2795.828, -2394.242, 14.171, 0.250);
	RemoveBuildingForPlayer(playerid, 3620, 2814.265, -2521.492, 25.515, 0.250);
	RemoveBuildingForPlayer(playerid, 5157, 2838.039, -2532.773, 17.023, 0.250);
	RemoveBuildingForPlayer(playerid, 5154, 2838.140, -2447.843, 15.750, 0.250);
	RemoveBuildingForPlayer(playerid, 3724, 2838.195, -2488.664, 29.312, 0.250);
	RemoveBuildingForPlayer(playerid, 3620, 2814.265, -2356.570, 25.515, 0.250);
	RemoveBuildingForPlayer(playerid, 5155, 2838.023, -2358.476, 21.312, 0.250);
	RemoveBuildingForPlayer(playerid, 3724, 2838.195, -2407.140, 29.312, 0.250);
	RemoveBuildingForPlayer(playerid, 5158, 2837.773, -2334.476, 11.992, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 2626.234, -2391.523, 26.703, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 2704.367, -2487.867, 20.562, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 2696.023, -2474.859, 16.414, 0.250);
	RemoveBuildingForPlayer(playerid, 5326, 2661.515, -2465.140, 20.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 2696.023, -2446.625, 16.414, 0.250);
	RemoveBuildingForPlayer(playerid, 1315, 2686.757, -2416.625, 15.812, 0.250);
	RemoveBuildingForPlayer(playerid, 1315, 2672.593, -2408.250, 15.812, 0.250);
	RemoveBuildingForPlayer(playerid, 3578, 2639.195, -2392.820, 13.171, 0.250);
	RemoveBuildingForPlayer(playerid, 3578, 2663.835, -2392.820, 13.171, 0.250);
	RemoveBuildingForPlayer(playerid, 1306, 2669.906, -2394.507, 19.843, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 2708.406, -2391.523, 26.703, 0.250);
	RemoveBuildingForPlayer(playerid, 3753, 2615.110, -2464.620, 3.039, 0.250);
	RemoveBuildingForPlayer(playerid, 3758, 2615.110, -2464.620, 3.039, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 2802.429, -2556.520, 26.703, 0.250);
	RemoveBuildingForPlayer(playerid, 3753, 2748.020, -2571.590, 3.039, 0.250);
	RemoveBuildingForPlayer(playerid, 3758, 2748.020, -2571.590, 3.039, 0.250);
	
	// Автосалон в городе Los Santos
	RemoveBuildingForPlayer(playerid, 6195, 1236.523, -1488.164, 40.687, 0.250);
	RemoveBuildingForPlayer(playerid, 1524, 1295.179, -1465.218, 10.281, 0.250);
	RemoveBuildingForPlayer(playerid, 6224, 1264.046, -1488.351, 21.101, 0.250);
	RemoveBuildingForPlayer(playerid, 6223, 1264.046, -1488.351, 21.101, 0.250);
	RemoveBuildingForPlayer(playerid, 615, 1323.867, -1467.710, 12.546, 0.250);
	RemoveBuildingForPlayer(playerid, 615, 1311.979, -1491.910, 12.546, 0.250);
	RemoveBuildingForPlayer(playerid, 615, 1302.339, -1507.160, 12.546, 0.250);

	// черный рынок
	RemoveBuildingForPlayer(playerid, 3744, 2331.382, -2001.671, 15.023, 0.250);
	RemoveBuildingForPlayer(playerid, 3744, 2313.046, -2008.539, 15.023, 0.250);
	RemoveBuildingForPlayer(playerid, 1266, 2336.914, -1987.632, 21.828, 0.250);
	RemoveBuildingForPlayer(playerid, 3574, 2313.046, -2008.539, 15.023, 0.250);
	RemoveBuildingForPlayer(playerid, 3574, 2331.382, -2001.671, 15.023, 0.250);
	RemoveBuildingForPlayer(playerid, 1260, 2336.914, -1987.632, 21.828, 0.250);

	// База LCN
	RemoveBuildingForPlayer(playerid, 10702, -2555.7500, 392.0000, 26.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 10703, -2617.8828, 256.4453, 14.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -2596.7578, 318.2813, 3.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 638, -2578.9141, 328.2344, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 638, -2577.9141, 328.2344, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 638, -2576.9063, 328.2266, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 638, -2575.8984, 328.2266, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1480, -2570.2109, 331.2734, 10.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1480, -2572.2109, 332.0391, 10.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1480, -2574.3906, 332.5391, 10.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1418, -2559.7656, 302.2500, 15.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 741, -2556.7656, 304.8047, 15.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 741, -2557.8047, 304.7344, 15.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 741, -2554.9922, 304.8984, 15.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 741, -2555.0859, 305.8984, 15.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 741, -2555.9141, 304.8672, 15.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1418, -2556.2578, 301.9375, 15.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1479, -2563.6016, 327.3750, 10.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 1458, -2560.3750, 323.2031, 15.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1479, -2560.4609, 314.8828, 16.3438, 0.25);

	// Yakuza
	RemoveBuildingForPlayer(playerid, 3750, 664.921, -1309.351, 18.367, 0.250);
	RemoveBuildingForPlayer(playerid, 3750, 659.781, -1227.273, 19.914, 0.250);
	RemoveBuildingForPlayer(playerid, 6523, 702.867, -1276.031, 20.906, 0.250);
	RemoveBuildingForPlayer(playerid, 733, 717.117, -1236.226, 12.062, 0.250);
	RemoveBuildingForPlayer(playerid, 726, 680.859, -1293.398, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 651.109, -1305.976, 12.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3749, 664.921, -1309.351, 18.367, 0.250);
	RemoveBuildingForPlayer(playerid, 3749, 659.781, -1227.273, 19.914, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 678.484, -1251.789, 12.031, 0.250);
	RemoveBuildingForPlayer(playerid, 6522, 702.867, -1276.031, 20.906, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 746.492, -1303.414, 11.671, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 760.453, -1304.132, 12.281, 0.250);
	
	// столбы Мэрия / Баллас
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1705.2734, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2669.7109, -2008.1719, 16.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2643.1094, -1999.8203, 16.3203, 0.25);
	
	// работа в канализации офис
	RemoveBuildingForPlayer(playerid, 3688, 2192.898, -2580.867, 17.789, 0.250);
	RemoveBuildingForPlayer(playerid, 3709, 2206.312, -2548.671, 17.070, 0.250);
	RemoveBuildingForPlayer(playerid, 3770, 2208.726, -2508.859, 13.984, 0.250);
	RemoveBuildingForPlayer(playerid, 5324, 2240.937, -2590.679, 18.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3621, 2192.898, -2580.867, 17.789, 0.250);
	RemoveBuildingForPlayer(playerid, 1306, 2210.703, -2565.109, 19.843, 0.250);
	RemoveBuildingForPlayer(playerid, 3623, 2206.312, -2548.671, 17.070, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 2209.453, -2534.078, 16.718, 0.250);
	RemoveBuildingForPlayer(playerid, 3626, 2208.726, -2508.859, 13.984, 0.250);
	
	// покупка дом на колесах
	RemoveBuildingForPlayer(playerid, 13242, 701.710, -565.132, 15.335, 0.250);
	RemoveBuildingForPlayer(playerid, 1688, 705.343, -576.140, 21.328, 0.250);
	RemoveBuildingForPlayer(playerid, 1690, 694.640, -571.492, 21.007, 0.250);
	RemoveBuildingForPlayer(playerid, 12863, 701.710, -565.132, 15.335, 0.250);
	RemoveBuildingForPlayer(playerid, 1690, 702.531, -546.609, 21.007, 0.250);
	
	// Яхт-клуб
	RemoveBuildingForPlayer(playerid, 6463, 389.773, -2028.468, 19.804, 0.250);
	RemoveBuildingForPlayer(playerid, 6464, 379.062, -2065.023, 11.796, 0.250);
	RemoveBuildingForPlayer(playerid, 6465, 368.054, -2028.242, 8.734, 0.250);
	RemoveBuildingForPlayer(playerid, 3751, 389.875, -2028.500, 32.226, 0.250);
	RemoveBuildingForPlayer(playerid, 3751, 389.875, -2021.640, 29.929, 0.250);
	RemoveBuildingForPlayer(playerid, 3751, 389.875, -2017.453, 24.031, 0.250);
	RemoveBuildingForPlayer(playerid, 3751, 389.875, -2017.429, 16.851, 0.250);
	RemoveBuildingForPlayer(playerid, 3751, 389.875, -2021.632, 10.984, 0.250);
	RemoveBuildingForPlayer(playerid, 3751, 389.875, -2028.515, 8.781, 0.250);
	RemoveBuildingForPlayer(playerid, 3751, 389.875, -2035.398, 10.945, 0.250);
	RemoveBuildingForPlayer(playerid, 3751, 389.875, -2039.640, 16.843, 0.250);
	RemoveBuildingForPlayer(playerid, 3751, 389.875, -2039.656, 24.109, 0.250);
	RemoveBuildingForPlayer(playerid, 3751, 389.875, -2035.382, 29.953, 0.250);
	RemoveBuildingForPlayer(playerid, 1529, 399.007, -2066.882, 11.234, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 360.453, -2086.671, 7.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 353.015, -2081.187, 6.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 368.929, -2083.265, 7.210, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 353.015, -2050.484, 6.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 364.609, -2036.179, 9.500, 0.250);
	RemoveBuildingForPlayer(playerid, 6462, 368.054, -2028.242, 8.734, 0.250);
	RemoveBuildingForPlayer(playerid, 6466, 374.695, -2054.882, 8.703, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 374.796, -2046.937, 9.500, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 378.460, -2083.265, 7.210, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 379.742, -2086.859, 7.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 381.031, -2070.937, 7.375, 0.250);
	RemoveBuildingForPlayer(playerid, 6283, 379.062, -2065.023, 11.796, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 379.593, -2055.101, 7.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 386.570, -2061.953, 7.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 379.593, -2042.492, 7.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 379.593, -2030.335, 7.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 386.570, -2049.351, 7.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1340, 388.859, -2071.664, 7.945, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 390.203, -2083.265, 7.210, 0.250);
	RemoveBuildingForPlayer(playerid, 3752, 389.875, -2039.640, 16.843, 0.250);
	RemoveBuildingForPlayer(playerid, 3752, 389.875, -2039.656, 24.109, 0.250);
	RemoveBuildingForPlayer(playerid, 6298, 389.773, -2028.468, 19.804, 0.250);
	RemoveBuildingForPlayer(playerid, 6461, 389.773, -2028.500, 20.109, 0.250);
	RemoveBuildingForPlayer(playerid, 3752, 389.875, -2028.500, 32.226, 0.250);
	RemoveBuildingForPlayer(playerid, 3752, 389.875, -2021.640, 29.929, 0.250);
	RemoveBuildingForPlayer(playerid, 3752, 389.875, -2017.453, 24.031, 0.250);
	RemoveBuildingForPlayer(playerid, 3752, 389.875, -2017.429, 16.851, 0.250);
	RemoveBuildingForPlayer(playerid, 3752, 389.875, -2021.632, 10.984, 0.250);
	RemoveBuildingForPlayer(playerid, 3752, 389.875, -2028.515, 8.781, 0.250);
	RemoveBuildingForPlayer(playerid, 3752, 389.875, -2035.398, 10.945, 0.250);
	RemoveBuildingForPlayer(playerid, 3752, 389.875, -2035.382, 29.953, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 400.390, -2086.421, 7.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 400.757, -2081.187, 6.593, 0.250);
	RemoveBuildingForPlayer(playerid, 6455, 379.539, -2050.867, -1.218, 0.250);
	RemoveBuildingForPlayer(playerid, 6300, 379.539, -2050.867, -1.218, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 378.460, -2012.929, 7.210, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 379.593, -2016.750, 7.375, 0.250);
	RemoveBuildingForPlayer(playerid, 6458, 379.578, -1946.304, 10.281, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 400.757, -2050.484, 6.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 364.609, -1972.554, 9.500, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 374.796, -2006.156, 9.500, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 374.796, -1942.539, 9.500, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 378.460, -1941.687, 7.210, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 378.460, -1963.882, 7.210, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 378.460, -1989.523, 7.210, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 378.460, -2012.929, 7.210, 0.250);
	
	// new farm от 26.07.19
	RemoveBuildingForPlayer(playerid, 3376, -96.085, 3.195, 6.695, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -137.781, -18.203, 2.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -133.328, -7.304, 2.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3374, -50.015, 3.179, 3.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3375, -96.085, 3.195, 6.695, 0.250);
	RemoveBuildingForPlayer(playerid, 12914, -75.179, 12.171, 3.718, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -127.132, 9.585, 2.937, 0.250);
	RemoveBuildingForPlayer(playerid, 12918, -72.039, 18.445, 1.953, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -94.523, 31.617, 2.882, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -90.531, 42.148, 2.882, 0.250);
	RemoveBuildingForPlayer(playerid, 3374, -92.867, 58.343, 3.570, 0.250);
	RemoveBuildingForPlayer(playerid, 3374, -91.945, 47.812, 3.570, 0.250);
	
	//остров
	//RemoveBuildingForPlayer(playerid, 706, 2838.449, -292.000, 6.492, 0.250);
	//забор у рыболовного
	RemoveBuildingForPlayer(playerid, 1410, -417.3125, -434.6328, 16.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -421.8594, -437.2422, 17.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -424.6641, -435.0156, 16.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -421.0703, -432.3828, 16.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -416.6719, -430.9766, 16.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -399.1719, -437.0156, 15.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -394.6797, -438.4297, 15.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -390.2422, -439.8906, 15.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -403.7500, -435.6641, 15.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -408.3281, -434.6328, 16.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -412.8594, -433.7813, 16.2891, 0.25);
	//STO LS
	//RemoveBuildingForPlayer(playerid, 5767, 1160.9609, -1180.5781, 70.4141, 0.25);
	//RemoveBuildingForPlayer(playerid, 5964, 1160.9609, -1180.5781, 70.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 5822, 1123.8203, -1198.8516, 25.7188, 0.25);
	//удаленки в интах
	RemoveBuildingForPlayer(playerid, 1264, 933.0313, 2111.4141, 1011.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 934.8828, 2112.0703, 1012.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 935.3359, 2113.1406, 1010.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 1264, 939.4844, 2113.1641, 1010.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 961.4453, 2097.3594, 1010.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2008, 960.4609, 2098.1094, 1009.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 963.1094, 2099.2813, 1010.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 963.1094, 2100.2891, 1010.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 14613, 942.1406, 2142.2578, 1012.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 14585, 939.5938, 2144.1406, 1016.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 14584, 942.3203, 2145.5156, 1011.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 14615, 932.7969, 2145.6406, 1015.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 14589, 945.6094, 2139.4766, 1013.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 14586, 946.1953, 2141.1875, 1016.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 14587, 948.7969, 2146.4688, 1015.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 14588, 948.9844, 2137.0938, 1013.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1497, 965.7422, 2161.5781, 1010.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1497, 965.7578, 2158.5703, 1010.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 14612, 961.1719, 2166.5781, 1012.7344, 0.25);

	RemoveBuildingForPlayer(playerid, 14784, 1281.1406, -30.0938, 1009.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 14795, 1388.8828, -20.8828, 1005.2031, 0.25);	

	//farm
	RemoveBuildingForPlayer(playerid, 3376, -96.0859, 3.1953, 6.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 3375, -96.0859, 3.1953, 6.6953, 0.25);
	
	//post
	RemoveBuildingForPlayer(playerid, 17002, 52.890, -1532.031, 7.742, 0.250);

	RemoveBuildingForPlayer(playerid, 3516, 1776.992, 828.968, 12.781, 0.250);
	RemoveBuildingForPlayer(playerid, 1290, 1796.351, 789.234, 16.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3516, 1811.742, 822.929, 12.921, 0.250);
	//fish
	RemoveBuildingForPlayer(playerid, 6076, 836.585, -1743.296, 19.609, 0.250);
	RemoveBuildingForPlayer(playerid, 6098, 836.585, -1743.296, 19.609, 0.250);
	RemoveBuildingForPlayer(playerid, 1297, 842.804, -1764.550, 15.625, 0.250);
	// лесопилка
	RemoveBuildingForPlayer(playerid, 3375, 1070.479, -355.164, 77.335, 0.250);
	RemoveBuildingForPlayer(playerid, 3376, 1070.479, -355.164, 77.335, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, 1060.209, -368.492, 73.843, 0.250);
	RemoveBuildingForPlayer(playerid, 3402, 1045.560, -300.601, 72.984, 0.250);
	RemoveBuildingForPlayer(playerid, 3404, 1045.560, -300.601, 72.984, 0.250);
	RemoveBuildingForPlayer(playerid, 3402, 1019.380, -300.242, 72.984, 0.250);
	RemoveBuildingForPlayer(playerid, 3404, 1019.380, -300.242, 72.984, 0.250);
	RemoveBuildingForPlayer(playerid, 3253, 1106.640, -319.875, 73.742, 0.250);
	RemoveBuildingForPlayer(playerid, 672, 1097.469, -314.210, 73.664, 0.250);
	RemoveBuildingForPlayer(playerid, 791, 1091.609, -250.007, 71.039, 0.250);
	RemoveBuildingForPlayer(playerid, 785, 1091.609, -250.007, 71.039, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, 1082.989, -283.679, 73.843, 0.250);
	// тюнинг новый
	RemoveBuildingForPlayer(playerid, 5782, 897.664, -1346.699, 14.531, 0.250);
	RemoveBuildingForPlayer(playerid, 5948, 897.664, -1346.699, 14.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1411, 875.414, -1343.660, 14.085, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, 872.265, -1346.410, 12.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1411, 870.148, -1343.660, 14.085, 0.250);
	RemoveBuildingForPlayer(playerid, 1297, 895.304, -1331.880, 15.640, 0.250);
	//
	RemoveBuildingForPlayer(playerid, 705, -2491.5859, -670.7188, 138.4297, 0.25);//[SF NEWS] дерево
	RemoveBuildingForPlayer(playerid, 1684, -2508.4063, -669.0938, 139.8516, 0.25);//[SF NEWS] здание для тока
	RemoveBuildingForPlayer(playerid, 1245, 2675.5234, 1172.9297, 11.1563, 0.25);//[LV NEWS] трамплин
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ) {
	if (hittype > 4) return 0;
	if (
			(hittype == BULLET_HIT_TYPE_PLAYER && ! IsPlayerConnected(hitid)) ||
			(hittype == BULLET_HIT_TYPE_VEHICLE && !IsValidVehicle(hitid)) ||
			(hittype == BULLET_HIT_TYPE_OBJECT && !IsValidVehicle(hitid)) ||
			(hittype == BULLET_HIT_TYPE_PLAYER_OBJECT && !IsValidPlayerObject(playerid, hitid))
			) return 0;
	if (hittype == BULLET_HIT_TYPE_PLAYER && hitid != 0xFFFF)
	{
		static
		Float: fOriginX,  Float: fOriginY, Float: fOriginZ,
		Float: fHitPosX, Float: fHitPosY, Float: fHitPosZ;

		GetPlayerLastShotVectors(playerid, fOriginX, fOriginY, fOriginZ, fHitPosX, fHitPosY, fHitPosZ);
		
		new
		string[90],
		Float: PosIgnore,
		Float: PosPlayerZ;

		GetPlayerPos(playerid, PosIgnore, PosIgnore, PosPlayerZ);

		if (fOriginZ == fHitPosZ) {
			if (PlayerWarningTimeSilent[playerid][0] < gettime()) {
				format(string, sizeof(string), "<< Warning >> %s[%d]: подозрение на Silent Aim", player_name[playerid], playerid);
				SendAdminMessage(0xFF0000FF, string);
				PlayerWarningTimeSilent[playerid][0] = gettime() + 5;
				return 0;
			}
		}

		new Float:ReasonCheat = floatsub(PosPlayerZ, fHitPosZ);
		if (floatabs(ReasonCheat) < 0.03) {
			if (++PlayerWarningSilent[playerid] >= 3) {
				if (PlayerWarningTimeSilent[playerid][1] < gettime()) {
					format(string, sizeof(string), "<< Warning >> %s[%d]: подозрение на Silent Aim v12+", player_name[playerid], playerid);
					SendAdminMessage(0xFF0000FF, string);
					PlayerWarningTimeSilent[playerid][1] = gettime() + 5;
					return 0;
				}
			}
		}
		else PlayerWarningSilent[playerid] = 0;
	}
	return 1;
}
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid) {
	if (newinteriorid == 0) {
		Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 600, playerid);
		SetPlayerTime(playerid, tmphour, tmpminute);
	}
	else
	{
		SetPlayerTime(playerid, 12, 00);
		Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 990, playerid);
	}
	return 1;
}
public OnPlayerCommandReceived(playerid, cmd[], params[], flags) {
	if(TI[playerid][tDialog]) {
		SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать команды при открытом диалоге");
		return 0;
	}
	if(!TI[playerid][tLogin]) {
		SendClientMessage(playerid, COLOR_GREY, "Необходимо авторизоваться");
		return 0;
	}
	if(GetTickCount()-GetPVarInt(playerid, "AntiFlood") < 500) {
		if(CountFloodForPlayer[playerid] >= 2) return 0;
		CountFloodForPlayer[playerid]++;
		SendClientMessage(playerid, COLOR_GREY, "Пожалуйста, не флудите");
		return 0;
	}
	SetPVarInt(playerid, "AntiFlood", GetTickCount());
	return TI[playerid][tLogin];
}
public OnPlayerConnect(playerid) {
	new ip[2][16];
	GetPlayerIp(playerid, ip[0], 16);
	if (playerid == 65535) return KickEx(playerid);
	GetPlayerName(playerid, fPlayer[playerid][nname], MAX_PLAYER_NAME);
	GetPlayerIp(playerid, fPlayer[playerid][fip], 32);
   
	PI[playerid][pID] = 0;
	ahMenu[playerid][0] = ahMenu[playerid][1] = ahMenu[playerid][2] = ahMenu[playerid][3] = 0;
	PI[playerid][pPalatka] = 0;
	
	PI[playerid][pMetal] = 0;
	PI[playerid][pCloth] = 0;
	PI[playerid][pStone] = 0;
	PI[playerid][pDress] = 0;
	
	PI[playerid][pEkills] = 0;
	
	TI[playerid][tPobeg] = 0;
	TI[playerid][tPobeg_Z] = 0;
	
	MPTeleportPlayer[playerid] = 0;
	
	PI[playerid][pYoutube] = 0;

	gPlayerProdText[playerid]    = Text3D: -1;
	gPlayerProdCP[playerid] = -1;
	Trailer_job[playerid] = INVALID_VEHICLE_ID;
	PlayerBuyProdFix[playerid] = 0;
	
	PI[playerid][pNarcoLomka] = 0;
	PI[playerid][pStartLomka] = 0;
	
    hellow[playerid] = 0;
	
	TI[playerid][tDM_k] = 0;
	TI[playerid][tDM_d] = 0;
	
	player_to_game[playerid] = 0;
	player_to_race_lv[playerid] = 0;
	
	TI[playerid][tClothesWork][0] = 0;
	TI[playerid][tClothesWork][1] = 0;
	
	TI[playerid][tYoutubcar] = INVALID_VEHICLE_ID;
	
	TI[playerid][tCheatsDetectsTime] = 0;
	TI[playerid][tCheatsDetects] = 0;
	
	PI[playerid][pCases][0] =
	PI[playerid][pCases][1] =
	PI[playerid][pCases][2] = 0;
	
	TI[playerid][tAttack] = 0;
	TI[playerid][tDefend] = 0;
	
	PI[playerid][bizz_work] = 0;
	PI[playerid][bizz_status] = 0;
	PI[playerid][bizz_cash] = 0;
	PI[playerid][bizz_lcash] = 0;
	PI[playerid][pZahvat] = 0;
	PI[playerid][pDrugs] = 0;
	PI[playerid][pMats] = 0;
	
	PI[playerid][pJail] = 0;
	PI[playerid][pJailTime] = 0;
	
	PlayerWarningSilent[playerid] = 0;
	
	TI[playerid][tDM] = 0;

	RemoveBuildings(playerid);
	RemoveStandartObject(playerid);
	textdraw_bank(playerid);
	
	new gpciStr[64];
	gpci(playerid, gpciStr);
	if(!strcmp(gpciStr, MOBILE_AUTH_KEY)) TI[playerid][tMobile] = 1;
	else TI[playerid][tMobile] = 0;

	GetPlayerName(playerid,player_name[playerid],MAX_PLAYER_NAME);
	TI[playerid][tLoginTime] = 180;
	for(new l = 0; l < 2; l++)
	//TextDrawShowForPlayer(playerid, logo334_TD[l]);//показ логотипа*/
	for(new i = 0; i < 4; i++) TextDrawShowForPlayer(playerid, logo_TD[i]);
	PlayerSecondTimer[playerid] = SetTimerEx("player_timer", 1000, false, "i",playerid);
	
	static const f_check_ip_ban[] = "\
	SELECT * FROM `"TABLE_BANIP"` WHERE `IP` = '%s' LIMIT 1";

	new str_check_ip_ban[sizeof(f_check_ip_ban) + (-2 + 16)];
	format(str_check_ip_ban, sizeof(str_check_ip_ban), f_check_ip_ban, ip[0]);
	mysql_tquery(connects, str_check_ip_ban, "check_ip_ban", "i", playerid);
//	NickName(playerid);
	return true;
}
stock IsVehicleOccupiedEx(vehicleid) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicleid) return 1;
	}
	return 0;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger) {
	new arend_id = INVALID_PLAYER_ID;
	if (VehicleInfo[vehicleid][vLocked] && !ispassenger) {
		ClearAnimations(playerid);
		FreezePlayerForTime(playerid, 2);
	}
	if(vehicleid == VehicleWareHouse[0] && CountMaterialVehicleWH > 0){
        GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		if(engine == 1 && TimerEndWeaponBool == false){
			SendClientMessage(playerid, COLOR_GREY,"У вас есть 10 минут что бы разгрузить грузовик на своём сладе.");
			TimerEndWeapon = 60*10;
			TimerEndWeaponBool = true;
		}
	}
	if(VehicleInfo[vehicleid][vBizz] > 0) {
		if(IsVehicleOccupiedEx(vehicleid) && VehicleInfo[vehicleid][vBizz] > 0 && !ispassenger) return ClearAnimations(playerid);
		if(VehicleInfo[vehicleid][vBizz] == 61) if(VehicleInfo[vehicleid][vBizz] != PI[playerid][bizz_work] && !ispassenger) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в транспортной компании"),ClearAnimations(playerid);
	}
	if(VehicleInfo[vehicleid][vType] == VEHICLE_TYPE_FAMILY && !ispassenger)
	{
		if(VehicleInfo[vehicleid][vFamily] != PI[playerid][pFamily]) {
			SendClientMessage(playerid, COLOR_GREY, "Вам недоступен данный транспорт");
			ClearAnimations(playerid, 1);
		}
	}
	if (PI[playerid][pAdmin] < 1) {
		if (PlayerHealFix[playerid] != 0) {
			if (PlayerHealExFix[playerid] > unix) {
				ClearAnimations(playerid);
			}
		}
	}
	if(VehicleInfo[vehicleid][vBizz] && !ispassenger) {
		for(new i = 0; i < 20; i++) {
			if(vehicleid == FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCars][i]) FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCarID][i] = playerid;
		}
	}
	if(GetArendCarID(vehicleid, arend_id) != -1)
	{
		new string[200];
		if(arend_id == INVALID_PLAYER_ID || !IsPlayerConnected(arend_id)) {
			if(!ispassenger) {
				new rc = GetArendCarID(vehicleid);
				format(string,sizeof(string),""YELLOW"Транспорт для аренды\n\n"W"- Модель: "P"%s"W"\n- Стоимость: "GREEN"$%i"W"\n\nДля аренды Т/С нажмите "ORANGE"'Аренда'", gTransport[GetVehicleModel(vehicleid)-400][trName], ArendInfo[rc][aCost]);
				D(playerid, dRentCar, DSM, ""P"Аренда", string, "Аренда", "Отмена");
				SetPVarInt(playerid, "rent_carid", vehicleid);
				ClearAnimations(playerid, 1);
			}
			else ClearAnimations(playerid, 1);
		}
		else if(arend_id != playerid) {
			SendClientMessage(playerid, COLOR_GREY, "Этот транспорт уже арендуют");
			if(!ispassenger) ClearAnimations(playerid, 1);
		}
	}
	if(VehicleInfo[vehicleid][vRobHouse]) {
		if(vehicleid != rob_veh[playerid]) ClearAnimations(playerid, 1);
	}
	SetPlayerArmedWeapon(playerid,0);
	return true;
}
CB: PlayerSpawn(playerid) {
	if(IsPlayerNPC(playerid)) return true;
	TogglePlayerControllable(playerid, 1);

	if(IsPlayerInAnyVehicle(playerid)) {
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		SetPlayerPosAC(playerid, X,Y,Z, TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
		
		SetTimerEx("PlayerSpawn", 250, false, "i", playerid);
		return true;
	}
	if(TI[playerid][tSpectate] == true) SpecPl(playerid, false);
	else SpawnPlayer(playerid);
	RobLeave(playerid);
	return true;
}
stock AllMapping(playerid)
{
    pTemp[playerid][var_unit_1] = 0;
    pTemp[playerid][var_unit_2] = 0;
    pTemp[playerid][var_unit_3] = 0;
    format(pTemp[playerid][var_unit_4], 24, "");
    pTemp[playerid][var_unit_5] = 0;
    unit_mapping(playerid);
    return 1;
}
forward unit_mapping_2(playerid);
public unit_mapping_2(playerid)
{
	new stringer[500];
    new rows = cache_num_rows();
    if(rows)
    {
        new tmp = 0;
        new name[32],bdobj, string[80];

        stringer = "{FFFFFF}ObjectID\t{FFFFFF}Установивший администратор\n";

        for(new i = pTemp[playerid][var_unit_1]*15; i < rows; i++)
        {
            cache_get_value_name(i, "name", name,MAX_PLAYER_NAME);
            cache_get_value_name_int(i, "id", bdobj);
            tmp++;

            format(string, sizeof(string), "{FFFFFF}%d\t%s\n",bdobj,name);
            strcat(stringer, string);
        }
        if(tmp > 0)
        {
            strcat(stringer, "Следующая страница\n");
            if(pTemp[playerid][var_unit_1] > 0) strcat(stringer, "Предыдущая страница\n");
            format(string, sizeof(string), "{FF6F00}Динамический маппинг, страница: %i", pTemp[playerid][var_unit_1]+1);
            SPD(playerid, 1230, DSTH, "{C70000}Bauld Mapping", stringer, "Выбрать", "Закрыть");
        }
        else
        {
            if(pTemp[playerid][var_unit_1] > 0)
            {
                pTemp[playerid][var_unit_1]--;
                unit_mapping(playerid);
            }
            SCM(playerid, COLOR_GREY, "На следующей странице ничего не найдено.");
        }
    }
    else
    {
        if(pTemp[playerid][var_unit_1] > 0)
        {
            pTemp[playerid][var_unit_1]--;
            unit_mapping(playerid);
        }
        SCM(playerid, COLOR_GREY, "Список маппинга чист.");
    }
    return 1;
}
stock unit_mapping(playerid)
{
	new stringer[128];
    mysql_format(connects, stringer, 128, "SELECT * FROM `bmap` LIMIT %i", pTemp[playerid][var_unit_1]*15+15);
    mysql_pquery(connects, stringer, "unit_mapping_2", "i", playerid);
    return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[]) {
	for(new guard_iterator = strlen(inputtext) - 1; guard_iterator > -1; --guard_iterator) {
		if(inputtext[guard_iterator]=='%') inputtext[guard_iterator]='#';
	}
	TI[playerid][tDialog] = false;
	new bool: olddialog = true;
	if (dialogid != OldDialogID[playerid]) olddialog = false;
	if(dialogid == 2095)
    {
        if(!response) return DPV(playerid,"EditingPlayerPrefix");
        if(strlen(inputtext) <= 2) return SCM(playerid,-1,""cError"Недостаточно символов"),DPV(playerid,"EditingPlayerPrefix");
        if(strlen(inputtext) >= 38) return SCM(playerid,-1,""cError"Слишком много символов"),DPV(playerid,"EditingPlayerPrefix");
        SetPrefix(GetPVarInt(playerid, "EditingPlayerPrefix"),playerid,inputtext);
        DPV(playerid,"EditingPlayerPrefix");     
		return 1;
    }
	new text_length = strlen(inputtext);
	for(new i = 0; i < text_length; i ++) {
		if(inputtext[i] == '{') {
			inputtext[i] = ' ';
		}
		if(inputtext[i] == '}') {
			inputtext[i] = ' ';
		}
		if(inputtext[i] == '%') {
			inputtext[i] = ' ';
		}
	}
	if (!olddialog) return 1;
	OldDialogID[playerid] = INVALID_DIALOG_ID;
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	switch(dialogid) 
	{
	
	case 1431: dialog_1431_helper(playerid,listitem,response);
	case dActorAnim:
		{
		    if(!response) return choosen_actor[playerid] = -1;
			new stringer[128];
		    new choosen = choosen_actor[playerid];
		    anim_actors[choosen] = listitem;
		    mysql_format(connects, stringer, 128, "UPDATE `actors` SET `anim_actors` = '%d' WHERE `id` = '%d' LIMIT 1", listitem, choosen);
			mysql_tquery(connects, stringer);
            ActorAnimation(actors[choosen][0],listitem);
            SCM(playerid,-1,""cHelp"Вы успешно применили анимацию для актёра");
		}
	case D_RADIO_101: {
		if(!response) return 1;
		if(listitem == 6){
			StopAudioStreamForPlayer(playerid);
			SCM(playerid, COLOR_YELLOW, "Вы выключили радио");
		}
		PlayAudioStreamForPlayer(playerid,Radio[listitem][rURL]);
		SCM(playerid, COLOR_YELLOW, Radio[listitem][uSCM]);
		return 1;
	}
	case dDeleteActor:
		{
		    if(!response) return choosen_actor[playerid] = -1;
			new stringer[128];
		    new deleted = choosen_actor[playerid];
		    mysql_format(connects, stringer, 128, "DELETE FROM `actors` WHERE `id` = '%d' LIMIT 1", choosen_actor[playerid]);
			mysql_tquery(connects, stringer);
			DestroyActor(actors[deleted][0]);
			DestroyDynamic3DTextLabel(actors3d[deleted]);
			format(actors_string[deleted],30,"Анатолий");
			actors3d_s[deleted] = 0;
            actorspos[deleted][0] = 0.0;
            actorspos[deleted][1] = 0.0;
            actorspos[deleted][2] = 0.0;
            actorspos[deleted][3] = 0.0;
            actors[deleted][2] = 46;
            actors[deleted][1] = 100;
            anim_actors[deleted] = -1;
            SCM(playerid,-1,""cHelp"Вы успешно удалили актёра");
		}
	case 8503:
        {
            if(!response) return 1;
            if(strlen(inputtext) <= 10) return SPD(playerid,8503,DSI,"Название сервера","Введите новое название сервера:\n\nНедостаточно символов!","Сохранить","Закрыть");
            if(strlen(inputtext) >= 40) return SPD(playerid,8503,DSI,"Название сервера","Введите новое название сервера:\n\nСлишком много символов!","Сохранить","Закрыть");
            set_string(BDserverName,inputtext);
            new string[128];
            format(string,sizeof(string),"hostname %s", BDserverName);
            SendRconCommand(string);
            FSAM(-1, "[A] : {FF0000}(A-System) {FFFFFF}%s[%d] изменил название сервера. Новое:",player_name[playerid],playerid);
            FSAM(-1, "[A] : {FF0000}(A-System) {FFFFFF}%s", BDserverName);
            mysql_format(connects, string, 128, "UPDATE `Settings` SET `ServerName` = '%s'", BDserverName);
            mysql_tquery(connects, string, "", "");
        }
	case 8504:
        {
            if(!response) return 1;
            if(strlen(inputtext) <= 3) return SPD(playerid,8504,DSI,"Серверный пароль","Введите новый пароль в поле снизу:\nНедостаточно символов","Сохранить","Закрыть");
            if(strlen(inputtext) >= 22) return SPD(playerid,8504,DSI,"Серверный пароль","Введите новый пароль в поле снизу:\nСлишком много символов","Сохранить","Закрыть");
            new cifr = 0, engb = 0;
            for(new i = 0; i < strlen(inputtext); i++)
            {
                switch(inputtext[i])
                {
                    case '0'..'9':
                    {
                        cifr = 1;
                    }
                    case 'A'..'Z', 'a'..'z':
                    {
                        engb = 1;
                    }
                    case 'А'..'Я', 'а'..'я', ' ':
                    {
                        SPD(playerid,8504,DSI,"Серверный пароль","Русский язык и пробел в пароле запрещены!\nВведите новый пароль в поле снизу:","Сохранить","Закрыть");
                        return 1;
                    }
                }
            }
            if(cifr == 0)
            {
                SPD(playerid,8504,DSI,"Серверный пароль","В Вашем пароле не найдены цифры!\nВведите новый пароль в поле снизу:","Сохранить","Закрыть");
                return 1;
            }
            if(engb == 0)
            {
                SPD(playerid,8504,DSI,"Серверный пароль","В Вашем пароле не найдены английские символы!\nВведите новый пароль в поле снизу:","Сохранить","Закрыть");
                return 1;
            }
            set_string(BDserverPassword,inputtext);
            new string[128];
            format(string,sizeof(string),"password %s", BDserverPassword);
            SendRconCommand(string);
            FSAM(-1, "[A] : {FF0000}(A-System) {FFFFFF}%s[%d] изменил пароль от сервера.", player_name[playerid],playerid);
            for(new i = 0; i <= GetPlayerPoolSize(); i++)
            {
                if(!PI[i][pAdmin]) continue;
                if(PI[i][pAdmin] == 15) FSCM(i,-1,"[A] : {FF0000}(A-System) {FFFFFF}Новый пароль от сервера: %s", BDserverPassword);
                else SCM(i,-1,"[A] : {FF0000}(A-System) {FFFFFF}Новый пароль от сервера: *засекречен*");
            }
            mysql_format(connects, string, 128, "UPDATE `Settings` SET `ServerPassword` = '%s'", BDserverPassword);
			mysql_tquery(connects, string, "", "");
        }
	case 8502:
        {
            if(!response) return 1;
            switch(listitem)
            {
                case 0:
                {
                    SPD(playerid,8503,DSI,"Название сервера","Введите новое название сервера:","Сохранить","Закрыть");
                }
                case 1:
                {
                    mysql_tquery(connects, "UPDATE `Settings` SET `ServerName` = '"USUAL_HOSTNAME"'");
					format(BDserverName,sizeof(BDserverName),""USUAL_HOSTNAME"");
                    SendRconCommand("hostname "USUAL_HOSTNAME"");
                    FSAM(-1, "[A] : {FF0000}(A-System) {FFFFFF}%s[%d] сбросил название сервера до стандартного",player_name[playerid],playerid);
                }
                case 2:
                {
                    SPD(playerid,8504,DSI,"Серверный пароль","Введите новый пароль в поле снизу:","Сохранить","Закрыть");
                }
                case 3:
                {
                    if(strlen(BDserverPassword) == 0) return SCM(playerid,-1,""cError"На сервере нету пароля!");
					format(BDserverPassword,sizeof(BDserverPassword),"");
                    SendRconCommand("password 0");
                    FSAM(-1, "[A] : {FF0000}(A-System) {FFFFFF}%s[%d] снял пароль от сервера.",player_name[playerid],playerid);
                    mysql_tquery(connects, "UPDATE `Settings` SET `ServerPassword` = ''");
                }
				case 4: 
				{
					if(DonateX == 3) DonateX = 1;
					else DonateX = 3;
					FSAM(-1, "[A] : {FF0000}(A-System) {FFFFFF}%s[%d] %s x3 Donate.",player_name[playerid],playerid, DonateX == 3 ? "включил" : "выключил");
					mysql_format(connects, fscm_str, 128, "UPDATE `Settings` SET `DonateX` = '%d'", DonateX);
					mysql_tquery(connects, fscm_str, "", "");
				}
				case 5: 
				{
					if(PayDayX == 3) PayDayX = 1;
					else PayDayX = 3;
					FSAM(-1, "[A] : {FF0000}(A-System) {FFFFFF}%s[%d] %s x3 PayDay.",player_name[playerid],playerid, PayDayX == 3 ? "включил" : "выключил");
					mysql_format(connects, fscm_str, 128, "UPDATE `Settings` SET `PayDayX` = '%d'", PayDayX);
					mysql_tquery(connects, fscm_str, "", "");
				}
            }
        }
	case 1776:
		{
		    if(!response) return 1;
		    switch(listitem)
		    {
		        case 0: SPD(playerid,0,DSM,""rServer"Управление актёрами",""cServer"Для удаления актеров необходимо подойти к любому актеру и прописать команду /del\nДля применения анимации актёре введите команду /actoranim\n\n\n{FFFFFF}Для создания актёра нужно:\n\n1. Выбрать нужный скин актера и установить его себе (/setskin|/tempskin|/skin)\n{FFFFFF}2. Встать на координаты актёра\n3. Начать создание актера\n{FF0000}- Внимание: при создании актёра Вам нужно будет указать текст, который\nвысвечивается на персонаже (например: имя актера).\nТекст нужно задавать вместе с HEX-цветом, например: { FF0000}Толик\n[!] Между цветом и {} пробелы не нужны","Понятно","");
				case 1: SPD(playerid,1835,DSI,""rServer"Установка параметров",""cServer"Введите текст (вместе с цветом), который будет отображатся на персонаже\n{FF0000}- Если текст не нужен - нажмите кнопку \"Пропустить\"","Сохранить","Пропустить");
			}
		}
	case 1835:
		{
			new Float:position[4];
			GetPlayerPos(playerid,position[0],position[1],position[2]);
			GetPlayerFacingAngle(playerid,position[3]);
            new other[2]; other[0] = GetPlayerSkin(playerid); other[1] = GetPlayerVirtualWorld(playerid);
			new stringer[512];
			new actor_text[128]; 
			if(response) {
				format(actor_text,sizeof(actor_text),""cServer"%s",inputtext);
		        mysql_format(connects, stringer, 512, "\
				INSERT INTO `actors` (`x`,`y`,`z`,`a`,`skin`,`vw`,`text`,`s_text`,`anim_actors`) VALUES ('%f','%f','%f','%f','%d','%d','%s','1','-1')",
				position[0],position[1],position[2],position[3],other[0],other[1],actor_text);
			} else {
		        mysql_format(connects, stringer, 512, "\
				INSERT INTO `actors` (`x`,`y`,`z`,`a`,`skin`,`vw`,`text`,`s_text`,`anim_actors`) VALUES ('%f','%f','%f','%f','%d','%d',' ','0','-1')",
				position[0],position[1],position[2],position[3],other[0],other[1]);
			}
			mysql_tquery(connects, stringer, "", "");
			upLoadActors(1);
			SCM(playerid,-1,""cHelp"Актер добавлен в список, обновление параметров начато.");
		}
	case 5736:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowActorsPanel(playerid);
				case 1: ShowServerPanel(playerid);
			}
		}
	case 1286:
        {
            if(!response) return 1;
            new inp = strval(inputtext);
            if(inp >= 10000) return SPD(playerid,1286,DSI," ","{FFFFFF}Введите уровень, который желаете показать вместо Вашего:\n{FF0000}Слишком большое число!","Принять","Закрыть");
            if(inp <= 0) return SPD(playerid,1286,DSI," ","{FFFFFF}Введите уровень, который желаете показать вместо Вашего:\n{FF0000}Слишком маленькое число!","Принять","Закрыть");
            ahMenu[playerid][2] = inp;
            FSCM(playerid,-1,""cHelp"Вы успешно показали Fake-Lvl в /admins: %d", inp);
            HideMenu(playerid);
        }
	case 1231:
        {
            new stringer[128];
            if(response)
            {
                mysql_format(connects, stringer, 128, "SELECT * FROM `bmap` WHERE `id` = '%s' LIMIT 1", pTemp[playerid][var_unit_4]);
                new Cache: resultCache = mysql_query(connects, stringer, true);
                if(!cache_num_rows()) return SCM(playerid,-1,""cServer"Ошибка 001 в 1231");
                new Float:x,Float:y,Float:z,namea[MAX_PLAYER_NAME],datein[32],string[500],objid,ingame;
                cache_get_value_name_int(0, "objectid", objid);
                cache_get_value_name_int(0, "ingameid", ingame);
                cache_get_value_name(0, "name", namea);
                cache_get_value_name(0, "date", datein);
                cache_get_value_name_float(0, "x", x);
                cache_get_value_name_float(0, "y", y);
                y += 2;
                cache_get_value_name_float(0, "z", z);
                cache_delete(resultCache);
                switch(listitem)
                {
                    case 0:
                    {
                        format(string,sizeof(string),""cServer"ID\t{FFFFFF}%s\n"cServer"ObjectID\t{FFFFFF}%d\n"cServer"InGame-ObjectID\t{FFFFFF}%d\n"cServer"Date\t{FFFFFF}%s\n"cServer"Admin\t{FFFFFF}%s",
                            pTemp[playerid][var_unit_4],objid,ingame,datein,namea);
                        SPD(playerid,0000,DST," ",string,"Закрыть","");
                    }
                    case 1:
                    {
                        SetPlayerPos(playerid, x,y,z);
                    }
                    case 2:
                    {
                        SetPVarInt(playerid,"BDid",strval(pTemp[playerid][var_unit_4]));
                        SetPVarInt(playerid,"EditOwnMap",1);
                        EditDynamicObject(playerid, ingame);
                    }
                    case 3:
                    {
                        SetPVarInt(playerid,"RedaktObj",ingame);
                        SPD(playerid, 1232, DSM, " ", "{FFFFFF}Вы действительно уверены, что хотите удалить данный объект?", "Да", "Нет");
                    }
                }
            }
        }
    case 1232:
        {
            if(!response) return pTemp[playerid][var_unit_1] = 0;
            new stringer[128];
            mysql_format(connects, stringer, 128, "DELETE FROM `bmap` WHERE `id` = '%s' LIMIT 1", pTemp[playerid][var_unit_4]);
            mysql_tquery(connects, stringer);
            new ingame = GetPVarInt(playerid,"RedaktObj");
            DPV(playerid,"RedaktObj");
            DestroyDynamicObject(ingame);
            DPV(playerid,"RedaktObj");
        }
	case 1230:
        {
            new stringer[144];
            if(response)
            {
                if(strcmp(inputtext, "Следующая страница", false) == 0)
                {
                    pTemp[playerid][var_unit_1]++;
                    unit_mapping(playerid);
                }
                else if(strcmp(inputtext, "Предыдущая страница", false) == 0)
                {
                    pTemp[playerid][var_unit_1]--;
                    unit_mapping(playerid);
                }
                else
                {
                    pTemp[playerid][var_unit_3] = 1;
                    format(pTemp[playerid][var_unit_4],16,"%d",strval(inputtext));
                    format(stringer, 128, "{FF6F00}Объект №%d", strval(inputtext));
                    SPD(playerid, 1231, DSL, stringer, "{FFFFFF}1. Просмотреть информацию\n2. Телепорт к объекту\n3. Редактировать объект\n{ff0000}4. Удалить объект", "Выбрать", "Назад"); //1484
                }
            }
            else pTemp[playerid][var_unit_1] = 0;
            return 1;
        }
	case 1288:
        {
            if(!response) return 1;
            switch(listitem)
            {
                case 0: SPD(playerid, 1289, DSI, "{C70000}Bauld Mapping", "{FFFFFF}Введите ID объекта, который хотите создать:", "Готово", "Отмена");
                case 1: AllMapping(playerid);
                case 2: SelectObject(playerid);
            }
        }
	case 1289:
        {
            if(response)
            {
                if(!response) return callcmd::newobj(playerid);
                new Float:X, Float:Y, Float:Z;
                new model = strval(inputtext);
                if(!strlen(inputtext)) return SPD(playerid, 1289, DSI, "{C70000}Bauld Mapping", "Введите ID объекта:", "Готово", "Назад");
                if(strlen(inputtext) > 5) return SPD(playerid, 1289, DSI, "{C70000}Bauld Mapping", "Введите ID объекта:", "Готово", "Назад");
                GetPlayerPos(playerid, X, Y, Z);
                SetPVarInt(playerid,"CreatingObjectModel",model);
                new _Object = CreateDynamicObject(model, X + 0.0, Y + 3.0, Z + 1.0, 0.0, 0.0, 0.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 300.0);
                SetPVarInt(playerid,"BauldMappingCreating",1);
                EditDynamicObject(playerid, _Object);
            }
            return 1;
        }
	case D_ALOGIN: {
			if(!response) return 1;
			switch(GetPVarInt(playerid,"aLogin")) {
			case 1: {
					if(!strlen(inputtext)|| !strcmp(inputtext, "qwerty", true) || strlen(inputtext) < 6 || strlen(inputtext) > 16 || strfind(inputtext, "=",true) != -1 || strfind(inputtext, "'",true) != -1) return D(playerid, D_ALOGIN, DSP, ""P"Авторизация", ""W"Для доступа к админ привелегиям, Вам необходимо авторизоваться:", "Вход", "Отмена");
					SetPVarString(playerid,"inputtext",inputtext);
					MYSQL_GLOBAL[0] = EOS;
					mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),"SELECT * FROM `admin` WHERE `Name` = '%s' LIMIT 1", player_name[playerid]);
					mysql_pquery(connects, MYSQL_GLOBAL, "alogin", "ds",playerid,player_name[playerid]);
				}
			case 0: {
					if(!strlen(inputtext)) return D(playerid, D_ALOGIN, DSP, ""P"Авторизация", ""W"Для доступа к админ привелегиям, Вам необходимо авторизоваться:", "Вход", "Отмена");
					MYSQL_GLOBAL[0] = EOS;
					mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),"SELECT * FROM `admin` WHERE `Name` = '%s' AND `password` = '%s' LIMIT 1", player_name[playerid], MD5_Hash(inputtext));
					mysql_pquery(connects, MYSQL_GLOBAL, "password_adm","ds", playerid, inputtext);

				}
			}
			return 1;
		}
	case D_YOUTUBE: {
		  if(!response) return true;
		  new carid;
		  switch(listitem) {
		  case 0: carid = 560;
		  case 1: carid = 522;
		  case 2: carid = 481;
		  case 3: carid = 539;
		  case 4: carid = 601;
		  case 5: carid = 444;
		  case 6: carid = 411;
		  case 7: carid = 487;
		  }
		  if(TI[playerid][tYoutubcar] != INVALID_VEHICLE_ID) A_DestroyVehicle(TI[playerid][tYoutubcar]);
		  new Float:a_x, Float:a_y, Float:a_z, Float:z;
	      GetPlayerPos(playerid, a_x, a_y, a_z);
	      GetPlayerFacingAngle(playerid, z);
	      TI[playerid][tYoutubcar] = A_CreateVehicle(carid,a_x, a_y, a_z, z, 11, 1, 1500, VEHICLE_TYPE_PLAYER); // spawn
		  PutPlayerInVehicle(playerid, TI[playerid][tYoutubcar], 0);
		  new vehicleid = GetPlayerVehicleID(playerid);
		  VehicleInfo[vehicleid][vFuel] = 50;
		  VehicleInfo[vehicleid][vAkum] = 50;
		  GetVehicleParamsEx(TI[playerid][tYoutubcar],engine,lights,alarm,doors,bonnet,boot,objective);
		  ToggleEngine(TI[playerid][tYoutubcar],playerid);
	}
	case D_HELLOW: {
	 if(!response) return true;
	 switch(listitem) {
	 case 0: {
	  	 new name[44],rows, count, string[750];
	     new lvl;
	     new Cache:result = mysql_query(connects, "SELECT `Name`,`event` FROM `accounts` WHERE `event` > 0 ORDER BY `event` DESC LIMIT 20");
	     cache_get_row_count(rows);
	     if(rows)
	     {
		    string = ""W"Имя игрока\t"W"Собрано тыкв\n";
		    static const f_str[] = "%i. %s\t%d\n";
	 	    new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
		    for(new i; i < rows; i ++)
		    {
			   cache_get_value_name(i, "Name", name, 44);
			   cache_get_value_name_int(i, "event",lvl);
		       count++;
			   format(str, sizeof(str), f_str, count, name, lvl);
		       strcat(string, str);
             }
	     }
         D(playerid, DIALOG_NONE, DSTH, "{F88539}HAllOWEEN |"W" ТОП собранных тыкв", string, "Закрыть", "");
         new str[100];
         format(str,sizeof(str),"Всего собрано:"W" %d{F88539} тыкв",PI[playerid][pEvent]);
	     SendClientMessage(playerid, 0xfF88539ff, str);
         cache_delete(result);
         if(count == 0) return D(playerid, DIALOG_NONE, DSM, "{F88539}HAllOWEEN |"W" ТОП собранных тыкв", ""W"Не найдено игроков в ТОП", "Закрыть", "");
	  }
	  case 1:  D(playerid, DIALOG_NONE, DSM, "{F88539}HAllOWEEN |"W" Информация", ""W"Зарабатывайте тыквы, выбивайтесь в ТОП за главным призом!\n\n\
	  Чтобы заработать тыквы, нужно:\n\n— Открывать любые кейсы\n— Открывать контейнеры\n— Покупать Аксессуары в донате (+5 тыкв)\n\
	  — Участвовать в {F88539}HAllOWEEN"W" мероприятии (напротив мэрии)\n\n— {F88539}HAllOWEEN"W" продлится с 30 октября по 7 ноября (включительно)!", "Закрыть", "");
	  }
    }
    case D_HELLOW_1: {
		  if(!response) return true;
		  switch(listitem) {
		  case 0: 
		  {
			  new cmd;
              foreach(new i:Player) {
		           if(!TI[i][tLogin]) continue;
		           if(hellow[i]) cmd++;
			  }
			  new str[250];
			  format(str,sizeof(str),"Присоединится к игре / {F88539}%d чел\nПравила игры",cmd);
              D(playerid, D_HELLOW_2, DSL, "{F88539}HAllOWEEN |"W" DM Зона", str, "Выбрать", "Закрыть");
		  } 
		  case 1: D(playerid, D_HELLOW_3, DSTH, "{F88539}HAllOWEEN |"W" Аксессуары", ""W"Название аксессуара\t"W"Стоимость тыкв\n— Голова зомби\t{F88539}50"W" тыкв\n— Череп на грудь\t{F88539}100"W" тыкв\n— Шляпа волшебника\t{F88539}200"W" тыкв\n\
		  — Рога на голову\t{F88539}300"W" тыкв\n", "Выбрать", "Закрыть");
		  case 2: {
			 new str[350];
			 format(str,sizeof(str),""W"У Вас{F88539} %d"W" тыкв\n\nВведите ниже количество тыкв, которое хотите купить\nКурс:{F88539} 1 тыква = 800.000$",PI[playerid][pEvent]);
		     D(playerid, D_HELLOW_4, DSI, "{F88539}HAllOWEEN |"W" Покупка тыкв", str, "Купить", "Закрыть");
		  }
		  case 3: {
			 new str[350];
			 format(str,sizeof(str),""W"У Вас{F88539} %d"W" киллов\n\nВведите ниже количество, на которое хотите обменять\nКурс:{F88539} 100 киллов = 1 тыква",PI[playerid][pEkills]);
		     D(playerid, D_HELLOW_5, DSI, "{F88539}HAllOWEEN |"W" Обмен тыкв", str, "Купить", "Закрыть");
		  }
		  case 4: {
			    if(PI[playerid][pLevel] < 2) return SendBotMessage(playerid,"Задания доступны со 2-го уровня");
				new mas[5] = {57,58,59,60,61},num=0, string[750];
			    new skr[750];
				for(new i;i < 5;i++)
				{
				    if(AcceptQuest[playerid][mas[i]]==0) skr = ""GREEN"Активный"W"";
				    else if(QuestProgress[playerid][mas[i]] == 100) skr = ""NO"Выполнено"W"";
				    else if(QuestProgress[playerid][mas[i]] == QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = ""ORANGE"Можно завершить"W"";
				    else if(QuestProgress[playerid][mas[i]] >= 0 && AcceptQuest[playerid][mas[i]] != 0) skr = ""G"В процессе"W"";
				    format(string,sizeof(string),"%s%s [%s]\n",string,QI[mas[i]][QuestName],skr);
				    QuestShow[playerid][num] = mas[i];
					num++;
				}
				D(playerid,D_QUEST_HELLOW,DSL,""P"{F88539}HAllOWEEN |"W" Задания",string,"Выбрать","Отмена");
		   	    }
	      }
	}
	case D_HELLOW_2: {
		  if(!response) return true;
		  switch(listitem) {
		  case 0:
		  {
		     hellow[playerid] = 1;
		     SendOk(playerid,"{F88539}HAllOWEEN:"W" Вы присоединились к DM зоне");
		     SendOk(playerid,"{F88539}HAllOWEEN:"W" Чтобы выйти с ДМ зоны, используйте: /hexit");
			 hellow_dm(playerid);
			 new string[150];
			 format(string,sizeof(string),"~g~Killed:~w~ %d",PI[playerid][pEkills]);
			 PlayerTextDrawSetString(playerid, DmArenaTextDraw[playerid], string);
			 PlayerTextDrawShow(playerid, DmArenaTextDraw[playerid]);
		  }
		  case 1: D(playerid, DIALOG_NONE, DSM, "{F88539}HAllOWEEN |"W" DM Зона", ""W"Правила игры на DM зоне:\n\n\
		  Основная задача обоих команд - убивать друг друга, за убийство игрока\n\
     	  Вы будете получать очки опыта, которые можно будет обменять на тыквы {F88539}(100 киллов = 1 тыква)", "Закрыть", "");
		 }
    }
    case D_HELLOW_3: {
		 if(!response) return true;
		 switch(listitem) {
		 case 0: {
             if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "Освободите место в своем инвентаре");
			 if(PI[playerid][pEvent] < 50) return SendBotMessage(playerid,"У Вас недостаточно тыкв.");
			 AddItem(playerid, 130, 1);
			 PI[playerid][pEvent] -= 50;
             UpdatePlayerData(playerid,"event",PI[playerid][pEvent]);
		 }
		 case 1: {
             if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "Освободите место в своем инвентаре");
			 if(PI[playerid][pEvent] < 100) return SendBotMessage(playerid,"У Вас недостаточно тыкв.");
			 AddItem(playerid, 139, 1);
			 PI[playerid][pEvent] -= 100;
             UpdatePlayerData(playerid,"event",PI[playerid][pEvent]);
		 }
		 case 2: {
             if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "Освободите место в своем инвентаре");
			 if(PI[playerid][pEvent] < 200) return SendBotMessage(playerid,"У Вас недостаточно тыкв.");
			 AddItem(playerid, 460, 1);
			 PI[playerid][pEvent] -= 200;
             UpdatePlayerData(playerid,"event",PI[playerid][pEvent]);
		 }
		 case 3: {
             if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "Освободите место в своем инвентаре");
			 if(PI[playerid][pEvent] < 300) return SendBotMessage(playerid,"У Вас недостаточно тыкв.");
			 AddItem(playerid, 141, 1);
			 PI[playerid][pEvent] -= 300;
             UpdatePlayerData(playerid,"event",PI[playerid][pEvent]);
			 }
		 }
	}
	case D_HELLOW_4: {
		 if(!response) return true;
		 if(strval(inputtext) < 1 || strval(inputtext) > 100)
		 {
		     new str[350];
			 format(str,sizeof(str),""W"У Вас{F88539} %d"W" тыкв\n\nВведите ниже количество тыкв, которое хотите купить\nКурс:{F88539} 1 тыква = 800.000$\n\n"G"Купить можно от 1 тыквы до 50 тыкв",PI[playerid][pEvent]);
		     D(playerid, D_HELLOW_4, DSI, "{F88539}HAllOWEEN |"W" Покупка тыкв", str, "Купить", "Закрыть");
			 return true;
		 }
		 if(PI[playerid][pCash] < strval(inputtext)*800000) return SendBotMessage(playerid,"У Вас недостаточно денег!");
		 PI[playerid][pEvent] += strval(inputtext);
         UpdatePlayerData(playerid,"event",PI[playerid][pEvent]);
         GiveMoney(playerid, -strval(inputtext)*800000, "покупка тыквы");
         new str[200];
         format(str,sizeof(str),"{F88539}HAllOWEEN:"W" Вы купили %d тыкв за %d$",strval(inputtext), strval(inputtext)*800000);
         SendOk(playerid,str);
	}
	case D_HELLOW_5: {
		 if(!response) return true;
		 if(strval(inputtext) < 1 || strval(inputtext) > 100)
		 {
		     new str[350];
			 format(str,sizeof(str),""W"У Вас{F88539} %d"W" киллов\n\nВведите ниже количество, на которое хотите обменять\nКурс:{F88539} 100 киллов = 1 тыква",PI[playerid][pEkills]);
		     D(playerid, D_HELLOW_5, DSI, "{F88539}HAllOWEEN |"W" Обмен тыкв", str, "Купить", "Закрыть");
			 return true;
		 }
		 if(PI[playerid][pEkills] < strval(inputtext)*100) return SendBotMessage(playerid,"У Вас недостаточно киллов для обмена");
		 
		 PI[playerid][pEvent] += strval(inputtext);
         UpdatePlayerData(playerid,"event",PI[playerid][pEvent]);
         
         PI[playerid][pEkills] -= strval(inputtext)*100;
         UpdatePlayerData(playerid, "e_kills", PI[playerid][pEkills]);

         new str[200];
         format(str,sizeof(str),"{F88539}HAllOWEEN:"W" Вы обменяли %d киллов на %d тыкв",strval(inputtext)*100, strval(inputtext));
         SendOk(playerid,str);
	}
	case D_SPAWN_LAST: {
			if (!response || PI[playerid][pSpawnTime] < gettime()) {
				TI[playerid][tLastSpawn] = 0;
			} else {
				TI[playerid][tLastSpawn] = 1;
			}
			//SpecPl(playerid, false);
			PlayerSpawn(playerid);
			return true;
		}
	case D_ALCATRZ: {
			if(!response) return true;
			switch(listitem) {
			case 0: EnableGPSForPlayer(playerid, 3369.8494,-675.1701,2.1784);
			case 1: {
					new string[(57+MAX_PLAYER_NAME-4+3+11+1)*30], count;
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(!TI[i][tPobeg]) continue;
						format(string, sizeof(string), "%s"ORANGE"%s"W"(%d)\n", string, player_name [i], i);
						count++;
					}
					if(!count) return SendClientMessage(playerid, COLOR_GREY, "Список сбежавших пуст");
					D(playerid, DIALOG_NONE, DSL, ""P"Список сбежавших с тюрьмы", string, "Закрыть", "");
				}
			case 2: EnableGPSForPlayer(playerid, -2114.6072,-2419.0989,30.6250);
			case 3: EnableGPSForPlayer(playerid, -1307.6519,-1509.0223,24.0463);
			}
		}
	case D_JAIL: {
			if(!response) return true;
			switch(listitem) {
			case 0: D(playerid, D_JAIL_1, DSM, ""P"Что здесь делать?",""W"Вы попали в тюрьму к особо опасным преступникам\n\n\
		Тюрьма находится под особым наблюдением государственных структур,\n\
		Вы обязаны им подчинятся на протяжении всего срока.\n\n\
		В тюрьме Вы можете заниматься физической подготовкой, так же в свободное время\n\
		работать за станком, зарабатывая себе на питание\n\n\
		\tСрок заключения: (({FCCB37} /time"W" ))", "Назад", "");
			case 1: D(playerid, D_JAIL_1, DSM, ""P"Как сократить срок?",""W"Чтобы сократить срок, Вам необходимо:\n\n- Работать на территории тюрьмы.\n- Освободится досрочно за деньги.\n- Спланировать и совершить побег.\n", "Назад", "");
			case 2: D(playerid, D_JAIL_2, DSL, ""P"Выберите метод оплаты","- Наличка\n- По карте", "Выбрать", "Закрыть");
			case 3: D(playerid, D_JAIL_1, DSM, ""P"Побег с тюрьмы",""W"Для организации побега у Вас должны быть отмычки (10 штук)\n\n\
		Спланируйте свой побег правильно, одно неверное движение - Вас поместят\n\
		обратно в тюрьму с увеличенным в двое сроком.\n\
		Чтобы начать побег, подойдите к воротам и"ORANGE" встаньте на замок.", "Назад", "");
			}
		}
	case D_JAIL_1: {
			if(!response) return true;
			D(playerid,D_JAIL,DSL, ""P"Тюрьма","Что здесь делать?\nКак сократить срок?\nОсвободится досрочно с тюрьмы"GREEN" (500.000$)"W"\nОрганизовать побег с тюрьмы","Выбрать","Закрыть");
		}
	case D_JAIL_2: {
			if(!response) return true;
			if(!PI[playerid][pJailTime]) return SendClientMessage(playerid, COLOR_GREY, "Вы не являетесь заключенным этой тюрьмы!");
			switch(listitem) {
			case 0: {
					if(PI[playerid][pCash] < 500000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
					GiveMoney(playerid, -500000, "выход с тюрьмы");
				}
			case 1: {
					if(PI[playerid][pBank] < 500000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег в банке");
					PI[playerid][pBank] -= 500000;
					UpdatePlayerData(playerid, "pBank", PI[playerid][pBank]);
				}
			}
			SendClientMessage(playerid, COLOR_WHITE, "Вы были выпущены досрочно на свободу. При повторном нарушении правил, вы будете наказаны сильнее.");
			PI[playerid][pJailTime] = 0;
			PI[playerid][pJail] = 0;
			UpdatePlayerData(playerid,"pJailTime",0);
			UpdatePlayerData(playerid,"pJail",0);
			SetCameraBehindPlayer(playerid);
			A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
			GameTextForPlayer(playerid,"~g~Freedom", 5000, 1);
			PlayerSpawn(playerid);
		}
	case D_JAIL_3: {
			if(!response) return true;
			if(GetInvent(playerid, 122) < 10) return SendClientMessage(playerid, COLOR_GREY, "Нужно 10 отмычек для взлома двери");
			DeleteItem(playerid, 122, 10);
			SetPlayerPosAC(playerid, 3525.7151,-673.4551,20.2399, 0, 0);
			SetPlayerFacingAngle(playerid, 89.5586);
			D(playerid, DIALOG_NONE, DSM, ""P"Информация",""W"Вы покинули территорию тюрьмы!\n\nСейчас Вам нужно будет:\n\
		– Встретится с другом.\n\
		– Спрятатся в укромное место.\n\n"G"* Двигайтесь на"NO" красную метку"G" на карте", "Закрыть", "");
			
			EnableGPSForPlayer(playerid, -2114.6072,-2419.0989,30.6250);
			
			TI[playerid][tPobeg] = 1200;
			
			SendDepMessage(COLOR_ALLDEPT, "[ALCATRAZ] Неизвестные взломали главные ворота тюрьмы. Немедленно их остановите! (( /alc ))");
			
			SendClientMessage(playerid, COLOR_WHITE, "Вы покинули территорию тюрьмы. Вам {FCCB37}дается 20 минут,"W" чтобы пройти все задания");
			SendClientMessage(playerid, COLOR_WHITE, "На карте отмечена{FCCB37} красная метка,"W" двигайтесь туда, чтобы встретится с другом");
		}
	case D_CRAFT: {
			if(!response) return true;
			switch(listitem) {
			case 0:
				{
					new string[600];
					format(string,sizeof(string),""W"С помощью картинга Вы можете создавать любые предметы на выбор\n\
			Создание предмета зависит от определенного шанса успеха, чем выше уникальность - тем меньше шансов\n\n\
			Для изготовления предмета Вам понадобится ресурсы, которые можно получить на работах:\n\n\
			"W"- Древесина: %d{FCCB37} (работа на Лесопилке)\n\
			"W"- Ткань: %d{FCCB37} (работа на Ферме)\n\
			"W"- Камень: %d{FCCB37} (работа на Стройке)\n\
			"W"- Металл: %d{FCCB37} (работа на Заводе)\n\n",PI[playerid][pDress],PI[playerid][pCloth],PI[playerid][pStone],PI[playerid][pMetal]);
					D(playerid, DIALOG_NONE, DSM, ""P"Информация",string, "Закрыть", "");
				}
			case 1: d_craft_acs(playerid);
			}
		}
		case D_SELPEDMET: {
			if(!response) return true;
			switch(listitem) {
			case 0:
				{
				    if(!GetInvent(playerid, 464)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет Гвоздей");
					GiveMoney(playerid, 250, "продажа предмета");
					new slot = ClickInv[playerid];
					if(slot != -1) RefreshInv(playerid, slot);
					else DeleteItem(playerid, 464, 1);
					return 1;
				}
			case 1:
				{
				    if(!GetInvent(playerid, 465)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет Металла");
					GiveMoney(playerid, 500, "продажа предмета");
					new slot = ClickInv[playerid];
					if(slot != -1) RefreshInv(playerid, slot);
					else DeleteItem(playerid, 465, 1);
					return 1;
				}
			case 2:
				{
				    if(!GetInvent(playerid, 466)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет Метал. ящик");
					GiveMoney(playerid, 900, "продажа предмета");
					new slot = ClickInv[playerid];
					if(slot != -1) RefreshInv(playerid, slot);
					else DeleteItem(playerid, 466, 1);
					return 1;
				}
			case 3:
				{
				    if(!GetInvent(playerid, 467)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет Ящика с патронами");
					GiveMoney(playerid, 1500, "продажа предмета");
					new slot = ClickInv[playerid];
					if(slot != -1) RefreshInv(playerid, slot);
					else DeleteItem(playerid, 467, 1);
					return 1;
				}
			case 4:
				{
				    if(!GetInvent(playerid, 468)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет Ножа");
					GiveMoney(playerid, 2000, "продажа предмета");
					new slot = ClickInv[playerid];
					if(slot != -1) RefreshInv(playerid, slot);
					else DeleteItem(playerid, 468, 1);
					return 1;
				}
			case 5:
				{
				    if(!GetInvent(playerid, 469)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет Военной винтовки");
					GiveMoney(playerid, 3200, "продажа предмета");
					new slot = ClickInv[playerid];
					if(slot != -1) RefreshInv(playerid, slot);
					else DeleteItem(playerid, 469, 1);
					return 1;
				}
			case 6:
				{
				    if(!GetInvent(playerid, 470)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет Японского меча");
					GiveMoney(playerid, 5000, "продажа предмета");
					new slot = ClickInv[playerid];
					if(slot != -1) RefreshInv(playerid, slot);
					else DeleteItem(playerid, 470, 1);
					return 1;
				}
			case 7:
				{
				    if(!GetInvent(playerid, 471)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет Боеголовки");
					GiveMoney(playerid, 7000, "продажа предмета");
					new slot = ClickInv[playerid];
					if(slot != -1) RefreshInv(playerid, slot);
					else DeleteItem(playerid, 471, 1);
					return 1;
				}
			case 8:
				{
				    if(!GetInvent(playerid, 472)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет Кейса");
					GiveMoney(playerid, 10000, "продажа предмета");
					new slot = ClickInv[playerid];
					if(slot != -1) RefreshInv(playerid, slot);
					else DeleteItem(playerid, 472, 1);
					return 1;
				}
			case 9:
				{
				    if(!GetInvent(playerid, 473)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет Старинной монеты");
					GiveMoney(playerid, 20000, "продажа предмета");
					new slot = ClickInv[playerid];
					if(slot != -1) RefreshInv(playerid, slot);
					else DeleteItem(playerid, 473, 1);
					return 1;
				}
			}
		}
	/*case BIZZ_FERMA_JOB_LEAVE:
	{
		if(!response) return 1;
		SetPlayerSkin(playerid, GetPVarInt(playerid, "JobFerma"));
		SendClientMessage(playerid, COLOR_WHITE, "Вы успешно закончили работу!");
		DeletePVar(playerid, "JobFerma");
		DisablePlayerCheckpoint(playerid);
	}
	case BIZZ_FERMA_JOB_REDAY:
	{
		if(!response) return 1;
		SetPVarInt(playerid, "JobFerma", GetPlayerSkin(playerid));
		new id = GetPlayerID(select_member[playerid]);
		switch(PI[id][bizz_status])
		{
			case 2,4: SetPlayerSkin(playerid, 159);

		}
		SendClientMessage(playerid, COLOR_WHITE, "Вы успешно вышли на работу!");
		
		
	}*/
	case BARMEN_READY:
	{
		if(!response) return 1;
		switch(random(3))
		{
			case 0: {
				
				SendClientMessage(playerid, -1, "Возьмите фургон он находится за баром.");
				SendClientMessage(playerid, -1, "Отправляйтесь на склад №1");
				SetPVarInt(playerid, "NumberSklad", 1);

			}
			case 1: {

				SendClientMessage(playerid, -1, "Возьмите фургон он находится за баром.");
				SendClientMessage(playerid, -1, "Отправляйтесь на склад №2");
				SetPVarInt(playerid, "NumberSklad", 2);

			}
			case 2: {

				SendClientMessage(playerid, -1, "Возьмите фургон он находится за баром.");
				SendClientMessage(playerid, -1, "Отправляйтесь на склад №3");
				SetPVarInt(playerid, "NumberSklad", 3);

			}
		}
		SetPVarInt ( playerid , "Toms" , 1 )     ;
		switch(PI[playerid][pMember])
		{
			case fBikers: SetPlayerCheckpoint(playerid, 314.4372,-24.9238,1.6412, 5.0 );
			case fBikersTwo: SetPlayerCheckpoint(playerid, 2384.4812,247.2314,26.6396, 5.0 );
		}
		
	}
	case D_DARKNET_GHETTO:
	{
		if(!response) return 1;
		if(GetPVarInt(playerid, "KeyWareHouseWeapon")) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть ключ от склада!");
		if(PI[playerid][pCash] < 35000) return SendClientMessage(playerid, COLOR_GREY,"У вас не достаточно средств на руках!");
		GiveMoney(playerid, -35000, "Покупка ключа");
		SetPVarInt(playerid, "KeyWareHouseWeapon", 1);
		SendClientMessage(playerid, COLOR_GREY, "Вы купили ключ от оружейного склада за $"G"35.000");
	}
	case D_ROBBOT_WARGEHOUSE: return Dialog_Robbit_WareHouse(playerid,response,listitem);
	case D_SELFISH: {
			if(!response) return true;
			switch(listitem) {
			case 0:
				{
					if(!GetPVarInt(playerid,"fish_yes")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет билета для ловли рыбы. Купить его можно в рыболовном магазине"),RemovePlayerFromVehicleAC(playerid);
					SendOk(playerid,"Для ловили рыбы отправляйтесь в указанный квадрат на карте");
					SendOk(playerid,"Используй команду - /fish");
					if(!GetPVarInt(playerid,"fish_place"))
					{
						new rand = random(sizeof(fish_place));
						GangZoneShowForPlayer(playerid,fish_zone[rand],COLOR_RED);
						SetPVarInt(playerid,"fish_place",rand+1);
					}
				}
			case 1: d_sellfish(playerid);
			}
		}
	case D_CRAFT_1:
	{
			if(!response) return true;
			SetPVarInt(playerid, "resource",listitem+1);
			switch(listitem) {
			case 0: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"25"W" - ткани\n\n"G"*"W" Шанс создания:"ORANGE" 95"W" процентов", "Создать", "Назад");
			case 1: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"25"W" - металла\n\n"G"*"W" Шанс создания:"ORANGE" 95"W" процентов", "Создать", "Назад");
			case 2: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"15"W" - металла\n"ORANGE"15"W" - ткани\n\n"G"*"W" Шанс создания:"ORANGE" 95"W" процентов", "Создать", "Назад");
			case 3: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"25"W" - ткани\n\n"G"*"W" Шанс создания:"ORANGE" 95"W" процентов", "Создать", "Назад");
			case 4: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"30"W" - ткани\n\n"G"*"W" Шанс создания:"ORANGE" 95"W" процентов", "Создать", "Назад");
			case 5: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"50"W" - ткани\n"ORANGE"25"W" - металла\n\n"G"*"W" Шанс создания:"ORANGE" 85"W" процентов", "Создать", "Назад");
			case 6: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"70"W" - металла\n\n"G"*"W" Шанс создания:"ORANGE" 70"W" процентов", "Создать", "Назад");
			case 7: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"70"W" - ткани\n\n"G"*"W" Шанс создания:"ORANGE" 70"W" процентов", "Создать", "Назад");
			case 8: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"50"W" - металла\n\n"G"*"W" Шанс создания:"ORANGE" 60"W" процентов", "Создать", "Назад");
			case 9: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"80"W" - ткани\n"ORANGE"20"W" - металла\n\n"G"*"W" Шанс создания:"ORANGE" 55"W" процентов", "Создать", "Назад");
			case 10: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"50"W" - металла\n"ORANGE"50"W" - древесины\n\n"G"*"W" Шанс создания:"ORANGE" 50"W" процентов", "Создать", "Назад");
			case 11: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"70"W" - ткани\n"ORANGE"10"W" - металла\n\n"G"*"W" Шанс создания:"ORANGE" 50"W" процентов", "Создать", "Назад");
			case 12: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"100"W" - металла\n"ORANGE"100"W" - древесины\n\n"G"*"W" Шанс создания:"ORANGE" 35"W" процентов", "Создать", "Назад");
			case 13: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"150"W" - металла\n\n"G"*"W" Шанс создания:"ORANGE" 30"W" процентов", "Создать", "Назад");
			case 14: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"150"W" - древесины\n\n"G"*"W" Шанс создания:"ORANGE" 30"W" процентов", "Создать", "Назад");
			case 15: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"150"W" - ткани\n\n"G"*"W" Шанс создания:"ORANGE" 30"W" процентов", "Создать", "Назад");
			case 16: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"150"W" - ткани\n"ORANGE"20"W" - металла\n\n"G"*"W" Шанс создания:"ORANGE" 20"W" процентов", "Создать", "Назад");
			case 17: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"150"W" - ткани\n\n"G"*"W" Шанс создания:"ORANGE" 10"W" процентов", "Создать", "Назад");
			case 18: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"90"W" - ткани\n\n"G"*"W" Шанс создания:"ORANGE" 10"W" процентов", "Создать", "Назад");
			case 19: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"150"W" - древесины\n"ORANGE"30"W" - металла\n\n"G"*"W" Шанс создания:"ORANGE" 5"W" процентов", "Создать", "Назад");
			case 20: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"75"W" - древесины\n"ORANGE"40"W" - металла\n\n"G"*"W" Шанс создания:"ORANGE" 5"W" процентов", "Создать", "Назад");
			case 21: D(playerid, D_CRAFT_2, DSM, ""P"Создание аксессуара",""W"Необходимые ресурсы для создания\n"ORANGE"300"W" - ткани\n\n"G"*"W" Шанс создания:"ORANGE" 5"W" процентов", "Создать", "Назад");
			}
		}
	case D_CRAFT_2: {
			if(!response) return d_craft_acs(playerid);
			new r = GetPVarInt(playerid, "resource");
			new value = random(100);
			switch(r)
			{
			case 1: // черная панама
				{
					if(PI[playerid][pCloth] < 25) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно ткани");
					PI[playerid][pCloth] -= 25;
					UpdatePlayerData(playerid,"cloth",PI[playerid][pCloth]);
					if(0 <= value <= 95) AddItem(playerid, 73, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 2: // черные очки
				{
					if(PI[playerid][pMetal] < 25) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно металла");
					PI[playerid][pMetal] -= 25;
					UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
					if(0 <= value <= 95) AddItem(playerid, 5, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 3: // голубо-белый шлем
				{
					if(PI[playerid][pMetal] < 15) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно металла");
					if(PI[playerid][pCloth] < 15) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно ткани");
					PI[playerid][pMetal] -= 15;
					PI[playerid][pCloth] -= 15;
					UpdatePlayerData(playerid,"cloth",PI[playerid][pCloth]);
					UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
					if(0 <= value <= 95) AddItem(playerid, 75, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 4: // Белая кепка с узорами
				{
					if(PI[playerid][pCloth] < 25) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно ткани");
					PI[playerid][pCloth] -= 15;
					UpdatePlayerData(playerid,"cloth",PI[playerid][pCloth]);
					if(0 <= value <= 95) AddItem(playerid, 44, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 5: // Леопардовые часы
				{
					if(PI[playerid][pMetal] < 30) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно металл");
					PI[playerid][pMetal] -= 30;
					UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
					if(0 <= value <= 95) AddItem(playerid, 119, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 6: // Маска демона
				{
					if(PI[playerid][pMetal] < 25) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно металла");
					if(PI[playerid][pCloth] < 50) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно ткани");
					PI[playerid][pMetal] -= 25;
					PI[playerid][pCloth] -= 50;
					UpdatePlayerData(playerid,"cloth",PI[playerid][pCloth]);
					UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
					if(0 <= value <= 85) AddItem(playerid, 123, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 7: // Огнетушитель
				{
					if(PI[playerid][pMetal] < 70) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно металла");
					PI[playerid][pMetal] -= 70;
					UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
					if(0 <= value <= 70) AddItem(playerid, 131, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 8: // Чемодан
				{
					if(PI[playerid][pCloth] < 70) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно ткани");
					PI[playerid][pCloth] -= 70;
					UpdatePlayerData(playerid,"cloth",PI[playerid][pCloth]);
					if(0 <= value <= 70) AddItem(playerid, 128, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 9: // Магнит
				{
					if(PI[playerid][pMetal] < 50) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно металла");
					PI[playerid][pMetal] -= 50;
					UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
					if(0 <= value <= 60) AddItem(playerid, 133, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 10: // Черепаха на спину
				{
					if(PI[playerid][pMetal] < 20) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно металла");
					if(PI[playerid][pCloth] < 80) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно ткани");
					PI[playerid][pMetal] -= 20;
					PI[playerid][pCloth] -= 80;
					UpdatePlayerData(playerid,"cloth",PI[playerid][pCloth]);
					UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
					if(0 <= value <= 55) AddItem(playerid, 124, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 11: // Самолетик
				{
					if(PI[playerid][pDress] < 50) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно древесины");
					if(PI[playerid][pMetal] < 50) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно металла");
					PI[playerid][pDress] -= 50;
					PI[playerid][pMetal] -= 50;
					UpdatePlayerData(playerid,"dress",PI[playerid][pDress]);
					UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
					if(0 <= value <= 50) AddItem(playerid, 126, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 12: // Попугай на плече
				{
					if(PI[playerid][pCloth] < 70) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно ткани");
					if(PI[playerid][pMetal] < 10) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно металла");
					PI[playerid][pCloth] -= 70;
					PI[playerid][pMetal] -= 10;
					UpdatePlayerData(playerid,"cloth",PI[playerid][pCloth]);
					UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
					if(0 <= value <= 50) AddItem(playerid, 125, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 13: // скейтборд
				{
					if(PI[playerid][pDress] < 100) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно древесины");
					if(PI[playerid][pMetal] < 100) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно металла");
					PI[playerid][pMetal] -= 100;
					PI[playerid][pDress] -= 100;
					UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
					UpdatePlayerData(playerid,"dress",PI[playerid][pDress]);
					if(0 <= value <= 35) AddItem(playerid, 140, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 14: // доллар на спину
				{
					if(PI[playerid][pMetal] < 150) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно металла");
					PI[playerid][pMetal] -= 150;
					UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
					if(0 <= value <= 30) AddItem(playerid, 134, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 15: // Церковный крест
				{
					if(PI[playerid][pDress] < 150) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно древесины");
					PI[playerid][pDress] -= 150;
					UpdatePlayerData(playerid,"dress",PI[playerid][pDress]);
					if(0 <= value <= 30) AddItem(playerid, 129, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 16: // Бургер на голову
				{
					if(PI[playerid][pCloth] < 150) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно ткани");
					PI[playerid][pCloth] -= 150;
					UpdatePlayerData(playerid,"cloth",PI[playerid][pCloth]);
					if(0 <= value <= 30) AddItem(playerid, 138, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 17: // Ангельское кольцо
				{
					if(PI[playerid][pCloth] < 150) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно ткани");
					if(PI[playerid][pMetal] < 20) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно металла");
					PI[playerid][pCloth] -= 150;
					PI[playerid][pMetal] -= 20;
					UpdatePlayerData(playerid,"cloth",PI[playerid][pCloth]);
					UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
					if(0 <= value <= 20) AddItem(playerid, 138, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 18: // Шляпа волшебника
				{
					if(PI[playerid][pCloth] < 150) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно ткани");
					PI[playerid][pCloth] -= 150;
					UpdatePlayerData(playerid,"cloth",PI[playerid][pCloth]);
					if(0 <= value <= 10) AddItem(playerid, 460, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 19: // Маска петуха
				{
					if(PI[playerid][pCloth] < 90) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно ткани");
					PI[playerid][pCloth] -= 90;
					UpdatePlayerData(playerid,"cloth",PI[playerid][pCloth]);
					if(0 <= value <= 10) AddItem(playerid, 137, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 20: // Белая гитара
				{
					if(PI[playerid][pDress] < 150) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно древесины");
					if(PI[playerid][pMetal] < 30) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно металла");
					PI[playerid][pDress] -= 150;
					PI[playerid][pMetal] -= 30;
					UpdatePlayerData(playerid,"dress",PI[playerid][pDress]);
					UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
					if(0 <= value <= 5) AddItem(playerid, 457, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 21: // Бензопила
				{
					if(PI[playerid][pDress] < 75) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно древесины");
					if(PI[playerid][pMetal] < 40) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно металла");
					PI[playerid][pDress] -= 75;
					PI[playerid][pMetal] -= 40;
					UpdatePlayerData(playerid,"dress",PI[playerid][pDress]);
					UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
					if(0 <= value <= 5) AddItem(playerid, 127, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			case 22: // маска CJ
				{
					if(PI[playerid][pCloth] < 300) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно ткани");
					PI[playerid][pCloth] -= 300;
					UpdatePlayerData(playerid,"dress",PI[playerid][pCloth]);
					if(0 <= value <= 5) AddItem(playerid, 135, 1);
					else SendClientMessage(playerid, COLOR_GREY, "Не получилось скрафтить аксессуар, попробуйте еще раз!");
				}
			}
			DeletePVar(playerid,"resource");
		}
	case D_MARKET_PLAYER: {
			if(!response) return true;
			
			SetPVarInt(playerid, "market_item",listitem);
			new string[250];
			format(string,sizeof(string),""W"Максимальное доступное количество:"ORANGE" %d\n"G"Введите количество и цену за один товар, через запятую\nНапример: "W"5, 30000",PI[playerid][pInventoryKolvo][listitem]);
			D(playerid, D_MARKET_PLAYER_1, DSI, ""P"Количество", string, "Далее", "Закрыть");
		}
	case D_MARKET_PLAYER_1: {
			if(!response) return true;
			new i = GetPVarInt(playerid, "market_item"), count, cash;
			if(sscanf(inputtext, "p<,>ii",count, cash))
			{
				new string[250];
				format(string,sizeof(string),""W"Максимальное доступное количество:"ORANGE" %d\n"G"Введите количество и цену за один товар, через запятую\nНапример: "W"5, 30000",PI[playerid][pInventoryKolvo][GetPVarInt(playerid, "market_item")]);
				return D(playerid, D_MARKET_PLAYER_1, DSI, ""P"Количество", string, "Далее", "Закрыть");
			}
			if(count <= 0 || PI[playerid][pInventoryKolvo][i] < count)
			{
				new string[250];
				format(string,sizeof(string),""W"Максимальное доступное количество:"ORANGE" %d\n"G"Введите количество и цену за один товар, через запятую\nНапример: "W"5, 30000",PI[playerid][pInventoryKolvo][GetPVarInt(playerid, "market_item")]);
				return D(playerid, D_MARKET_PLAYER_1, DSI, ""P"Количество", string, "Далее", "Закрыть");
			}
			if(cash <= 0 || cash > 90000000)
			{
				new string[250];
				format(string,sizeof(string),""W"Максимальное доступное количество:"ORANGE" %d\n"G"Введите количество и цену за один товар, через запятую\nНапример: "W"5, 30000\n\n"G"Сумма должна быть не больше 90000000$",PI[playerid][pInventoryKolvo][GetPVarInt(playerid, "market_item")]);
				return D(playerid, D_MARKET_PLAYER_1, DSI, ""P"Количество", string, "Далее", "Закрыть");
			}
			if(ItemsInfo[PI[playerid][pInventory][i]][Access])
			{
				PI[playerid][pSlotItem][ItemsInfo[PI[playerid][pInventory][i]][AcessBone]] = 0;
				RemovePlayerAttachedObject(playerid, ItemsInfo[PI[playerid][pInventory][i]][AcessBone]);
				save_slotitem(playerid);
			}

			new query[250];
			mysql_format(connects, query, sizeof(query),"INSERT INTO `market` (`Name`, `item`, `ammout`, `cash`) VALUES ('%s','%i','%i','%i')",player_name[playerid],PI[playerid][pInventory][i], count, cash);
			mysql_pquery(connects, query, "", "");
			
			PI[playerid][pInventoryKolvo][i] -= count;
			if(PI[playerid][pInventoryKolvo][i] <= 0)
			{
				PI[playerid][pInventoryKolvo][i] = 0;
				PI[playerid][pInventory][i] = 0;
			}
			SaveInventory(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "Вы выставили новый товар на продажу");
		}
	case D_MARKET_PLAYER_2: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					if(get_market(playerid) > 4) return SendClientMessage(playerid,COLOR_GREY, "Нет больше мест для продажи товара");
					new item[56];
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Название\t"W"Количество\n");
					for(new i = 0; i < 46; i++)
					{
						if(PI[playerid][pInventoryKolvo][i] > 0) format(item,sizeof(item),""W"%s\t%d",ItemsInfo[PI[playerid][pInventory][i]][ItemName],PI[playerid][pInventoryKolvo][i]);
						else format(item,sizeof(item),""G">> Пустой слот");
						format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%s%s\n",STRING_GLOBAL,item);
					}
					D(playerid,D_MARKET_PLAYER,DSTH, ""P"Выберите товар",STRING_GLOBAL,"Выбрать","Закрыть");
					STRING_GLOBAL[0] = EOS;
				}
			case 1: {
					new string[220];
					mysql_format(connects, string, sizeof(string),"SELECT * FROM `market` WHERE `Name` = '%s' LIMIT 5",player_name[playerid]);
					mysql_tquery(connects, string, "GetMarket", "d", playerid);
				}
			case 2: EndTrade(playerid);
			}
		}
	case D_MARKET_PLAYER_3: {
			if(!response) return true;
			new i = market_id[playerid][listitem];
			new p = GetPVarInt(playerid,"p_id");
			if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
			
			new query[128];
			mysql_format(connects, query, sizeof(query),"SELECT * FROM `market` WHERE `id` = '%d'", i);
			new Cache:result = mysql_query(connects, query);
			new rows = cache_num_rows();
			if(!rows) return SendClientMessage(playerid, COLOR_GREY,"Произошла ошибка. Товар отсутствует в продаже");
			cache_delete(result);
			
			if(PI[playerid][pPalatka] == Market[p][m_id])
			{
				AddItem(playerid, market_item[playerid][listitem], market_ammout[playerid][listitem]);
				new string[120];
				mysql_format(connects, string, sizeof(string),"DELETE FROM `market` WHERE `id` = '%i'",i);
				mysql_tquery(connects, string, "", "");
				return true;
			}
			if(PI[playerid][pCash] < market_cash[playerid][listitem]) return SendClientMessage(playerid,COLOR_GREY, "У Вас недостаточно денег");
			if(GetPlayerID(Market[p][m_owner]) == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок вышел с игры");
			new id = GetPlayerID(Market[p][m_owner]);
			
			GiveMoney(playerid, -market_cash[playerid][listitem], "покупка товара рынок");
			GiveMoney(id, market_cash[playerid][listitem],"продажа товара рынок");
			
			AddItem(playerid, market_item[playerid][listitem], market_ammout[playerid][listitem]);
			
			new string[350];
			format(string,sizeof(string),"* Игрок"W" %s"G" купил ваш товар в прилавке за"W" %d$",player_name[playerid],market_cash[playerid][listitem]);
			SendClientMessage(id, COLOR_GREY, string);
			
			new str[120];
			mysql_format(connects, str, sizeof(str),"DELETE FROM `market` WHERE `id` = '%i'",i);
			mysql_tquery(connects, str, "", "");
			return true;
		}
	case D_MARKETS: {
			if(!response) return true;
			new p = GetPVarInt(playerid,"p_id");
			if(strval(inputtext) < 1 || strval(inputtext) > 240) return D(playerid, D_MARKETS, DSI, ""P"Аренда", ""W"Введите время аренды палатки "G"(от 1 минуты до 240 минут)\n"W"Стоимость аренды палатки составляет "P"250$/мин", "Далее", "Закрыть");
			if(PI[playerid][pCash] < strval(inputtext)*240) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			GiveMoney(playerid, -strval(inputtext)*250, "Аренда палатки");
			strmid(Market[p][m_owner], player_name[playerid], 0, 24);
			Market[p][m_arenda] = 60*strval(inputtext);
			PI[playerid][pPalatka] = p+1;
			new string[150];
			format(string,sizeof(string),"Вы арендовали прилавок на"W" %d"G" минут за"W" %d$",strval(inputtext),strval(inputtext)*240);
			SendClientMessage(playerid,COLOR_GREY,string);
			SendClientMessage(playerid,COLOR_GREY,"Нажмите"W" 'ALT'"G" чтобы выставить свой товар на продажу");
		}
	case D_FAQ_MAFIA: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					new name[44],rows, end_zahv, zahv, count, string[750], query[200];
					format(query,sizeof(query),"SELECT `Name`,`zahvat` FROM `accounts` WHERE `zahvat` > 0 AND `pMember` = '%d' ORDER BY `zahvat` DESC", PI[playerid][pMember]);
					new Cache:result = mysql_query(connects, query);
					cache_get_row_count(rows);
					if(rows) {
						string = ""W"Имя игрока\t"W"Убийств\n";
						static const f_str[] = "%i. %s\t%d\n";
						new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++)
						{
							cache_get_value_name(i, "Name", name, 44);
							cache_get_value_name_int(i, "zahvat",zahv);
							if(end_zahv == zahv || count == 10) continue;
							end_zahv = zahv;
							count++;
							format(str, sizeof(str), f_str, count, name, zahv);
							strcat(string, str);
						}
						D(playerid, D_FAQ_MAFIA_1, DSTH, ""P"Лучше захватчики", string, "Закрыть", "");
					}
					if(count == 0) return D(playerid, DIALOG_NONE, DSM, ""P"Лучшие захватчики", ""W"Лучших захватчиков не найдено", "Закрыть", "");
					cache_delete(result);
				}
			case 1: {
					new mas[9] = {25,26,27,28,29,30,31,32, 33},num=0, string[750];
					new skr[750];
					for(new i;i < 9;i++) {
						if(AcceptQuest[playerid][mas[i]]==0) skr = ""GREEN"Активный"W"";
						else if(QuestProgress[playerid][mas[i]] == 100) skr = ""NO"Выполнено"W"";
						else if(QuestProgress[playerid][mas[i]] == QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = ""ORANGE"Можно завершить"W"";
						else if(QuestProgress[playerid][mas[i]] >= 0 && AcceptQuest[playerid][mas[i]] != 0) skr = ""G"В процессе"W"";
						format(string,sizeof(string),"%s%s [%s]\n",string,QI[mas[i]][QuestName],skr);
						QuestShow[playerid][num] = mas[i];
						num++;
					}
					D(playerid,D_QUEST_MAFIA,DSL,""P"Квесты",string,"Выбрать","Отмена");
				}
			case 2: D(playerid, D_FAQ_MAFIA_2, DSL, ""P"Чем заняться в мафии?", ""ORANGE"-"W" Ограбление банка\n"ORANGE"-"W" Автоугон транспорта\n"ORANGE"-"W" Похищение\n"ORANGE"-"W" Дуэли/DM зоны\n"ORANGE"-"W" AirDrop", "Выбрать", "Закрыть");
			}
		}
	case D_FAQ_MAFIA_1: {
			if(!response) return true;
			if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в мафии");
			D(playerid,D_FAQ_MAFIA,DSL, ""P"FAQ Помощь",""ORANGE"-"W" TOП захватчиков мафии\n"ORANGE"-"W" Квесты\n"ORANGE"-"W" Чем заняться в мафии?","Выбрать","Закрыть");
		}
	case D_FAQ_MAFIA_2: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					D(playerid, D_FAQ_MAFIA_3, DSM, ""P"Ограбление банка", ""W"Чтобы начать ограбление, Вам нужно продумать схему ограбления.\n\nЭтапы ограбления:\n\n"ORANGE"1."W" Собрать команду из 3-х человек\n\
			"ORANGE"2."W" Получить секретный код у программиста (/gps > Разное > Ограбление банка)\n"ORANGE"3."W" Отправится в банк и начать взламывать вход в хранилище (/bankhack)\n"ORANGE"4."W" Взломать дверной замок банка\n\
			"ORANGE"5."W" Забрать денежные средства с хранилища\n"ORANGE"6."W" Отвезти деньги в общак банды (встать с деньгами на пикап банды/мафии)\n\n\t"G"Грабить банк можно 1 раз в 5 часов!", "Назад", "");
				}
			case 1: {
					D(playerid, D_FAQ_MAFIA_3, DSM, ""P"Автоугон транспорта", ""ORANGE"Автоугон"W" - дополнительный и быстрый заработок для бандитов\n\nВ данной работе есть навык работы, чем выше навык - тем больше зарплата\nза один автомобиль.\n\n\t"G"Автоугон находится в GPS (/gps > Разное > Автоугон)", "Назад", "");
				}
			case 2: {
					D(playerid, D_FAQ_MAFIA_3, DSM, ""P"Похищение", ""W"Похищайте людей, просите за их определенный выкуп.\n\n\t"G"Команды: (/gps > Команды сервера > Фракция)", "Назад", "");
				}
			case 3: {
					D(playerid, D_FAQ_MAFIA_3, DSM, ""P"Дуэли/DM зоны", ""W"В свободное время от стрел, Вы всегда можете пострелятся.\n\n- Местоположение дуэлей [OG] (/gps > Разное > Дуэли)\n- Местоположение DM зон (/gps > Развлечения > центр развлечений)\n\n"G"Покажи себя, на что ты способен!", "Назад", "");
				}
			case 4: {
					D(playerid, D_FAQ_MAFIA_3, DSM, ""P"AirDrop", ""W"AirDrop — война между мафиями и бандами за наркотики, материалы, деньги\nУчаствовать в захвате может каждый, при убийстве противника\n\
					Вы за это получаете дополнительные деньги!\n\nЗахват начинается каждые 3 часа:\n — 9:20, 12:20, 15:20, 18:20, 21:20, 00:20, 03:20, 06:20", "Назад", "");
				}
			}
		}
	case D_FAQ_MAFIA_3: {
			if(!response) return true;
			D(playerid, D_FAQ_MAFIA_2, DSL, ""P"Чем заняться в мафии?", ""ORANGE"-"W" Ограбление банка\n"ORANGE"-"W" Автоугон транспорта\n"ORANGE"-"W" Похищение\n"ORANGE"-"W" Дуэли/DM зоны\n"ORANGE"-"W" AirDrop", "Выбрать", "Закрыть");
		}
	case D_FAQ_BAND: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					new name[44],rows, end_zahv, zahv, count, string[750], query[200];
					format(query,sizeof(query),"SELECT `Name`,`zahvat` FROM `accounts` WHERE `zahvat` > 0 AND `pMember` = '%d' ORDER BY `zahvat` DESC", PI[playerid][pMember]);
					new Cache:result = mysql_query(connects, query);
					cache_get_row_count(rows);
					if(rows) {
						string = ""W"Имя игрока\t"W"Убийств\n";
						static const f_str[] = "%i. %s\t%d\n";
						new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++)
						{
							cache_get_value_name(i, "Name", name, 44);
							cache_get_value_name_int(i, "zahvat",zahv);
							if(end_zahv == zahv || count == 10) continue;
							end_zahv = zahv;
							count++;
							format(str, sizeof(str), f_str, count, name, zahv);
							strcat(string, str);
						}
						D(playerid, D_FAQ_BAND_1, DSTH, ""P"Лучше захватчики", string, "Закрыть", "");
					}
					if(count == 0) return D(playerid, DIALOG_NONE, DSM, ""P"Лучшие захватчики", ""W"Лучших захватчиков не найдено", "Закрыть", "");
					cache_delete(result);
				}
			case 1: {
					new mas[10] = {15,16,17,18,19,20,21,22,23,24},num=0, string[750];
					new skr[750];
					for(new i;i < 10;i++) {
						if(AcceptQuest[playerid][mas[i]]==0) skr = ""GREEN"Активный"W"";
						else if(QuestProgress[playerid][mas[i]] == 100) skr = ""NO"Выполнено"W"";
						else if(QuestProgress[playerid][mas[i]] == QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = ""ORANGE"Можно завершить"W"";
						else if(QuestProgress[playerid][mas[i]] >= 0 && AcceptQuest[playerid][mas[i]] != 0) skr = ""G"В процессе"W"";
						format(string,sizeof(string),"%s%s [%s]\n",string,QI[mas[i]][QuestName],skr);
						QuestShow[playerid][num] = mas[i];
						num++;
					}
					D(playerid,D_QUEST_GANG,DSL,""P"Квесты",string,"Выбрать","Отмена");
				}
			case 2: D(playerid, D_FAQ_BAND_2, DSL, ""P"Чем заняться в банде?", ""ORANGE"-"W" Ограбление банка\n"ORANGE"-"W" Автоугон транспорта\n"ORANGE"-"W" Ограбление домов\n"ORANGE"-"W" Дуэли/DM зоны\n"ORANGE"-"W" AirDrop", "Выбрать", "Закрыть");
			}
		}
	case D_FAQ_BAND_1: {
			if(!response) return true;
			D(playerid,D_FAQ_BAND,DSL, ""P"FAQ Помощь",""ORANGE"-"W" TOП захватчиков банды\n"ORANGE"-"W" Квесты\n"ORANGE"-"W" Чем заняться в банде?","Выбрать","Закрыть");
		}
	case D_FAQ_BAND_2: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					D(playerid, D_FAQ_BAND_3, DSM, ""P"Ограбление банка", ""W"Чтобы начать ограбление, Вам нужно продумать схему ограбления.\n\nЭтапы ограбления:\n\n"ORANGE"1."W" Собрать команду из 3-х человек\n\
			"ORANGE"2."W" Получить секретный код у программиста (/gps > Разное > Ограбление банка)\n"ORANGE"3."W" Отправится в банк и начать взламывать вход в хранилище (/bankhack)\n"ORANGE"4."W" Взломать дверной замок банка\n\
			"ORANGE"5."W" Забрать денежные средства с хранилища\n"ORANGE"6."W" Отвезти деньги в общак банды (встать с деньгами на пикап банды/мафии)\n\n\t"G"Грабить банк можно 1 раз в 5 часов!", "Назад", "");
				}
			case 1: {
					D(playerid, D_FAQ_BAND_3, DSM, ""P"Автоугон транспорта", ""ORANGE"Автоугон"W" - дополнительный и быстрый заработок для бандитов\n\nВ данной работе есть навык работы, чем выше навык - тем больше зарплата\nза один автомобиль.\n\n\t"G"Автоугон находится в GPS (/gps > Разное > Автоугон)", "Назад", "");
				}
			case 2: {
					D(playerid, D_FAQ_BAND_3, DSM, ""P"Ограбление домов", ""ORANGE"Ограбление домов"W" - дополнительный и быстрый заработок для бандитов\n\nОтправляйтесь на черный рынок (/gps > Разное > Черный рынок), и арендуйте у бандита автомобиль.\n\
			Ограбляйте дома (/robhouse) и продавайте награбленную технику на черный рынок!\n\n\t"G"Ограбление домов находится в GPS (/gps > Разное > Ограбление домов)", "Назад", "");
				}
			case 3: {
					D(playerid, D_FAQ_BAND_3, DSM, ""P"Дуэли/DM зоны", ""W"В свободное время от каптов, Вы всегда можете пострелятся.\n\n- Местоположение дуэлей [OG] (/gps > Разное > Дуэли)\n- Местоположение DM зон (/gps > Развлечения > центр развлечений)\n\n"G"Покажи себя, на что ты способен!", "Назад", "");
				}
			case 4: {
					D(playerid, D_FAQ_BAND_3, DSM, ""P"AirDrop", ""ORANGE"AirDrop"W" — война между мафиями и бандами за наркотики, материалы, деньги\nУчаствовать в захвате может каждый, при убийстве противника\n\
					Вы за это получаете дополнительные деньги!\n\nЗахват начинается каждые 3 часа:\n — 9:20, 12:20, 15:20, 18:20, 21:20, 00:20, 03:20, 06:20", "Назад", "");
				}
			}
		}
	case D_FAQ_BAND_3: {
			if(!response) return true;
			D(playerid, D_FAQ_BAND_2, DSL, ""P"Чем заняться в банде?", ""ORANGE"-"W" Ограбление банка\n"ORANGE"-"W" Автоугон транспорта\n"ORANGE"-"W" Ограбление домов\n"ORANGE"-"W" Дуэли/DM зоны\n"ORANGE"-"W" AirDrop", "Выбрать", "Закрыть");
		}
	case D_TK_TRUCK: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					EnableGPSForPlayer(playerid,2215.7368,-2222.5093,13.5469);
					SendClientMessage(playerid,CGOLD,"Местоположение загрузочной зоны успешно отмечено в вашем GPS");
				}
			case 1: {
					EnableGPSForPlayer(playerid,1078.4210,-352.8502,74.5498);
					SendClientMessage(playerid,CGOLD,"Разгрузка на лесопилке успешно отмечено в вашем GPS");
				}
			case 2: {
					EnableGPSForPlayer(playerid,-50.1009,22.8516,3.1172);
					SendClientMessage(playerid,CGOLD,"Разгрузка на ферме успешно отмечено в вашем GPS");
				}
			case 3: {
					EnableGPSForPlayer(playerid,1708.5884,407.1685,30.6304);
					SendClientMessage(playerid,CGOLD,"Разгрузка на стройке успешно отмечено в вашем GPS");
				}
			case 4: {
					EnableGPSForPlayer(playerid,-56.5448,-224.0444,5.4297);
					SendClientMessage(playerid,CGOLD,"Разгрузка на оружейном заводе успешно отмечено в вашем GPS");
				}
			case 5: {
					EnableGPSForPlayer(playerid,1219.8451,189.5213,19.8915);
					SendClientMessage(playerid,CGOLD,"Разгрузка в деревне Mantgomery успешно отмечено в вашем GPS");
				}
			case 6: {
					EnableGPSForPlayer(playerid,2249.0378,-81.1264,26.5151);
					SendClientMessage(playerid,CGOLD,"Разгрузка в деревне Polomino Creek успешно отмечено в вашем GPS");
				}
			}
			return true;
		}
	case D_TK_TRUCK_1:
	{
			if(!response) return true;
			switch(listitem)
			{
			case 0: {
					if(PI[playerid][pCash] < 1500) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
					TK_Trailer[playerid] = A_CreateVehicle(450,2222.0725,-2261.9395,14.1665,45.1364,color_td[FuncBizz[PI[playerid][bizz_work]][funcbColor]][col_car],color_td[FuncBizz[PI[playerid][bizz_work]][funcbColor]][col_car],-1,VEHICLE_TYPE_TRAILER);
					Gruz[playerid] = Create3DTextLabel(""G"[Груз: "W"Удобрения"G"]", -1, 0.0, 0.0, -100.0, 50.0, 0, 1);
					Attach3DTextLabelToVehicle(Gruz[playerid], TK_Trailer[playerid], 0.0, 0.0, 0.0);
					GiveMoney(playerid, -1500, "покупка прицепа удобрения");
				}
			case 1: {
					if(PI[playerid][pCash] < 2500) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
					TK_Trailer[playerid] = A_CreateVehicle(591,2214.2190,-2269.1289,14.1937,45.9658,color_td[FuncBizz[PI[playerid][bizz_work]][funcbColor]][col_car],color_td[FuncBizz[PI[playerid][bizz_work]][funcbColor]][col_car],-1,VEHICLE_TYPE_TRAILER);
					Gruz[playerid] = Create3DTextLabel(""G"[Груз: "W"Материалы"G"]", -1, 0.0, 0.0, -100.0, 50.0, 0, 1);
					Attach3DTextLabelToVehicle(Gruz[playerid], TK_Trailer[playerid], 0.0, 0.0, 0.0);
					GiveMoney(playerid, -2500, "покупка прицепа материалы");
				}
			case 2: {
					if(PI[playerid][pCash] < 1800) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
					TK_Trailer[playerid] = A_CreateVehicle(435,2206.5581,-2276.2014,14.1527,45.5796,color_td[FuncBizz[PI[playerid][bizz_work]][funcbColor]][col_car],color_td[FuncBizz[PI[playerid][bizz_work]][funcbColor]][col_car],-1,VEHICLE_TYPE_TRAILER);
					Gruz[playerid] = Create3DTextLabel(""G"[Груз: "W"Продукты"G"]", -1, 0.0, 0.0, -100.0, 50.0, 0, 1);
					Attach3DTextLabelToVehicle(Gruz[playerid], TK_Trailer[playerid], 0.0, 0.0, 0.0);
					GiveMoney(playerid, -1800, "покупка прицепа продукты");
				}
			case 3: {
					if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
					TK_Trailer[playerid] = A_CreateVehicle(591,2228.9075,-2254.0132,14.1770,45.1752,color_td[FuncBizz[PI[playerid][bizz_work]][funcbColor]][col_car],color_td[FuncBizz[PI[playerid][bizz_work]][funcbColor]][col_car],-1,VEHICLE_TYPE_TRAILER);
					Gruz[playerid] = Create3DTextLabel(""G"[Груз: "W"Стройматериалы"G"]", -1, 0.0, 0.0, -100.0, 50.0, 0, 1);
					Attach3DTextLabelToVehicle(Gruz[playerid], TK_Trailer[playerid], 0.0, 0.0, 0.0);
					GiveMoney(playerid, -1000, "покупка прицепа стройматериалы");
				}
			case 4: {
					if(PI[playerid][pCash] < 1300) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
					TK_Trailer[playerid] = A_CreateVehicle(591,2236.7961,-2246.9670,14.1710,45.9320,color_td[FuncBizz[PI[playerid][bizz_work]][funcbColor]][col_car],color_td[FuncBizz[PI[playerid][bizz_work]][funcbColor]][col_car],-1,VEHICLE_TYPE_TRAILER);
					Gruz[playerid] = Create3DTextLabel(""G"[Груз: "W"Инструменты"G"]", -1, 0.0, 0.0, -100.0, 50.0, 0, 1);
					Attach3DTextLabelToVehicle(Gruz[playerid], TK_Trailer[playerid], 0.0, 0.0, 0.0);
					GiveMoney(playerid, -1300, "покупка прицепа инструменты");
				}
			}
			TI[playerid][tTrucker][0] = 60;
			TI[playerid][tTrucker][1] = listitem+1;
			SendClientMessage(playerid, COLOR_WHITE, "Вы купили прицеп. У Вас есть"ORANGE" 60 секунд,"W" чтобы забрать прицеп");
	}
 	case USE_CAR_GARAGE:
	{
		if(!response) return 1;
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"Выберите слот на который вы хотите испльзовать машину\n\
		"W"1. Автомобиль №1 "P"[%s]\n\
		"W"2. Автомобиль №2 "P"[%s]",gTransport[CarsInfo[playerid][carModel][0]-400][trName],gTransport[CarsInfo[playerid][carModel][1]-400][trName]);
		return D(playerid,USE_CAR_GARAGE_2,DSTH, ""P"Использование купона",STRING_GLOBAL,"Да","Отмена");
	}
	case USE_CAR_GARAGE_2:
	{
		if(!response) return 1;
		if(!PI[playerid][pHouse] && !PI[playerid][pRoom] && !PI[playerid][pTempKey]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома/квартиры");
		if(CarsInfo[playerid][carModel][listitem] != 481) return SendClientMessage(playerid, COLOR_GREY, "Для начала продайте автомобиль на данном слоте");
		switch(listitem)
		{
			case 0:
			{
			    CarsInfo[playerid][carModel][0] = GetPVarInt(playerid, "UseCarGarage");
                new query[350];
				format(query, sizeof(query), "UPDATE `cars` SET `model` = '%d' WHERE `id` = '%d'",CarsInfo[playerid][carModel][0],CarsInfo[playerid][carID][0]);
				mysql_tquery(connects, query, "", "");
				DeletePVar(playerid, "UseCarGarage");
				loading_cars(playerid, 0);
			 	VehicleInfo[house_car[playerid][0]][vFuel] = 100;
				VehicleInfo[house_car[playerid][0]][vAkum] = 100;
				
				RefreshInv(playerid, GetPVarInt(playerid, "UseCarGarageItem"));
				DeletePVar(playerid, "UseCarGarageItem");
				return 1;
			}
			case 1:
			{
			    
                CarsInfo[playerid][carModel][1] = GetPVarInt(playerid, "UseCarGarage");
                new query[350];
				format(query, sizeof(query), "UPDATE `cars` SET `model` = '%d' WHERE `id` = '%d'",CarsInfo[playerid][carModel][1],CarsInfo[playerid][carID][1]);
				mysql_tquery(connects, query, "", "");
				DeletePVar(playerid, "UseCarGarage");
				loading_cars(playerid, 1);
				VehicleInfo[house_car[playerid][1]][vFuel] = 100;
				VehicleInfo[house_car[playerid][1]][vAkum] = 100;
				RefreshInv(playerid, GetPVarInt(playerid, "UseCarGarageItem"));
				DeletePVar(playerid, "UseCarGarageItem");
				return 1;
			}
		}
		return 1;
	}
	case D_BIZZ_TAXI_CAR: {
			if(!response) return 1;
			new bizz = PI[playerid][pBusiness]-1;
			if(!bizz) return 1;
			SetPVarInt(playerid,"func_car_taxi",listitem);
			switch(FuncBizz[bizz+1][funcbCar][listitem]) {
			case 0: {
					new string[328],str[128];
					if(gBusiness[bizz][bizzType] == 14) {
						strcat(string,"№. Модель\tГрузоподъемность\tСтоимость\n");
						for(new i; i < sizeof(tk_car); i ++) {
							format(str, sizeof(str), ""ORANGE"%d."W" %s\t%d\t%d\n", i+1,gTransport[tk_car[i][0]-400][trName],tk_car[i][1],gTransport[tk_car[i][0]-400][trPrice]),strcat(string,str);
						}
					}
					D(playerid,D_BIZZ_TAXI_CAR_2,DSTH,"Покупка машины",string,"Купить","Отмена");
				}
			default: {
					if(gBusiness[bizz][bizzType] == 14) {
						static const f_str[] = ""W"Вы собираетесь продать автомобиль "P"%s\n\n"YELLOW"Вы действительно хотите продать данный автомобиль за "GREEN"$%d?";
						new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 9) + (-2 + 10)];
						format(string,sizeof(string),f_str,gTransport[FuncBizz[bizz+1][funcbCar][listitem]-400][trName],gTransport[FuncBizz[bizz+1][funcbCar][listitem]-400][trPrice]/2);
						D(playerid,D_BIZZ_TAXI_CAR_3,DSM, ""P"Продажа машины",string,"Да","Отмена");
					}
				}
			}
		}
	case D_BIZZ_TAXI_CAR_2: {
			if(!response) return DeletePVar(playerid,"func_car_taxi");
			new bizz = PI[playerid][pBusiness]-1;
			if(!bizz) return 1;
			SetPVarInt(playerid,"func_car_taxi_2",listitem);
			new id_slot = GetPVarInt(playerid,"func_car_taxi");
			new id_car = GetPVarInt(playerid,"func_car_taxi_2");
			if(FuncBizz[bizz+1][funcbCar][id_slot] != 0) return SendClientMessage(playerid, COLOR_GREY, "На данном слоте уже есть автомобиль");
			else if(gBusiness[bizz][bizzType] == 14) {
				static const f_str[] = ""W"Вы собираетесь приобрести автомобиль "P"%s "YELLOW"[%d]\n\n"YELLOW"Вы действительно хотите купить данный автомобиль за "GREEN"$%d?";
				new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 9) + (-2 + 10)];
				format(string,sizeof(string),f_str,gTransport[tk_car[id_car][0]-400][trName],tk_car[id_car][1],gTransport[tk_car[id_car][0]-400][trPrice]);
				D(playerid,D_BIZZ_TAXI_CAR_3,DSM, ""P"Покупка машины",string,"Да","Отмена");
			}
		}
	case D_BIZZ_TAXI_CAR_3: {
			if(!response) return DeletePVar(playerid,"func_car_taxi"),DeletePVar(playerid,"func_car_taxi_2");
			new bizz = PI[playerid][pBusiness]-1;
			if(!bizz) return 1;
			new id_slot = GetPVarInt(playerid,"func_car_taxi");
			new id_car = GetPVarInt(playerid,"func_car_taxi_2");
			DeletePVar(playerid,"func_car_taxi");
			DeletePVar(playerid,"func_car_taxi_2");
			switch(FuncBizz[bizz+1][funcbCar][id_slot]) {
			case 0: {
					if(gBusiness[bizz][bizzType] == 14) {
						if(gBusiness[bizz][bizzBank] < gTransport[tk_car[id_car][0]-400][trPrice]) return SendClientMessage(playerid, COLOR_GREY, "В кассе транспортной компании недостаточно средств для покупки");
						FuncBizz[bizz+1][funcbCar][id_slot] = tk_car[id_car][0];
						gBusiness[bizz][bizzBank] -= gTransport[tk_car[id_car][0]-400][trPrice];

						UpdateBusinessData(bizz+1,"bank",gBusiness[bizz][bizzBank]);
					}
					creare_funccar(bizz+1,id_slot);
					SendOk(playerid,"Автомобиль успешно куплен");
				}
			default: {
					if(gBusiness[bizz][bizzType] == 14) {
						gBusiness[bizz][bizzBank] += gTransport[FuncBizz[bizz+1][funcbCar][id_slot]-400][trPrice]/2;
						UpdateBusinessData(bizz+1,"bank",gBusiness[bizz][bizzBank]);
					}
					FuncBizz[bizz+1][funcbCar][id_slot] = 0;
					A_DestroyVehicle(FuncBizz[bizz+1][funcbCars][id_slot]);
					FuncBizz[bizz+1][funcbCars][id_slot] = INVALID_VEHICLE_ID;
					SendOk(playerid,"Автомобиль успешно продан");
				}
			}
			save_funcar(bizz+1);
		}
	/*case D_BIZZ_FERMA:
	{
        if(!response) return 1;
		new bizz = PI[playerid][bizz_work];
		dialog_ferma(playerid,bizz,listitem);
	}*/
	case D_ACCEPTS_TS:{
		if(response) {
			new bizz = 61;
			DeletePVar(playerid,"tk_id");
			if(PI[playerid][bizz_work] == 2 || PI[playerid][bizz_work] == 3 || PI[playerid][bizz_work] == 4) return SendClientMessage(playerid, COLOR_GREY, "Вы работаете в таксопарке");
			if(PI[playerid][bizz_work] == 5 || PI[playerid][bizz_work] == 6 || PI[playerid][bizz_work] == 7) return SendClientMessage(playerid, COLOR_GREY, "Вы уже работаете в транспортной компании");
			PI[playerid][bizz_work] = bizz;
			UpdatePlayerData(playerid,"bizz_work",PI[playerid][bizz_work]);
			PI[playerid][bizz_status] = 1;
			UpdatePlayerData(playerid,"bizz_status",1);
			PI[playerid][bizz_cash] = 0;
			UpdatePlayerData(playerid,"bizz_cash",0);
			PI[playerid][bizz_lcash] = 0;
			UpdatePlayerData(playerid,"bizz_lcash",0);

			PI[playerid][pSettings][3] = 1;
			save_settings(playerid);

			new string[100];
			format(string,sizeof(string),"[TRUCK] %s вступил в транспортную компанию",player_name[playerid]);
			BizzMSG(bizz,COLOR_YELLOW,string);
			return 1;
		}
		else
		{
			DeletePVar(playerid,"tk_id");
			SendClientMessage(playerid, COLOR_GREY, "Вы успешно отказались от предложения!");
			return 1;
		}
	}
	case D_BIZZ_MICRO:{
		if(!response) return 1;
		new bizz = PI[playerid][bizz_work];
		dialog_mk(playerid, bizz, listitem);
	}
	case D_CREDIT_TAKE:{
		if(!response) return 1;
		new value = strval(inputtext);
		if(PI[playerid][pCash] < value) return SCM(playerid, COLOR_RED, "У вас не достаточно средств!");
		if(value < 0 || value > PI[playerid][pCredit]) {
			new str[250];
			format(str, sizeof(str), ""R"Вы ввели сумму которая больше вашего кредита\n\
			"W"Задолжность: "GREEN"%d\n\
			"W"Введите сумму которую вы хотите погасить:", PI[playerid][pCredit]);
			return SPD(playerid, D_CREDIT_TAKE, DSI, "Погасить кредит", str,">>>","x");
		}
		if(value == PI[playerid][pCredit])
		{
			GiveMoney(playerid, -value, "Погашение кредита");
			PI[playerid][pCredit] = 0;
			PI[playerid][pCreditDay] = 0;
			UpdatePlayerData(playerid, "pCreditDay",PI[playerid][pCreditDay]);
			UpdatePlayerData(playerid, "pCredit",PI[playerid][pCredit]);
			gBusiness[63][bizzBank] += value;
			UpdateBusinessData(64, "bank", gBusiness[63][bizzBank]);
			SCM(playerid, COLOR_YELLOW, "Вы успешно погасили кредит!");
			return 1;
		}
		if(value < PI[playerid][pCredit])
		{
			GiveMoney(playerid, -value, "Возращение долга");
			PI[playerid][pCredit] -= value;
			UpdatePlayerData(playerid, "pCredit",PI[playerid][pCredit]);
			gBusiness[63][bizzBank] += value;
			UpdateBusinessData(64, "bank", gBusiness[63][bizzBank]);
			SCM(playerid, COLOR_YELLOW, "Вы успешно вернули часть долга");
			return 1;
		}
		return 1;

	}
	case D_CREDIT_BUY:{
		if(!response) return 1;
		new value = strval(inputtext);
		if(value < 50000 || value > 1000000) return SPD(playerid, D_CREDIT_BUY, DSI, "Взять кредит", ""W"Введите сумму, которую, хотите взять в кредит:\n\
			Сумма должна составлять, не менее "R"50.000$"W" и не более "R"1.000.000$",">>>","x");
		switch(PI[playerid][pLevel]){
			case 5..9: if(value < 50000 || value > 500000) return SPD(playerid, D_CREDIT_BUY, DSI, "Взять кредит", ""W"Введите сумму, которую, хотите взять в кредит:\n\
			Сумма должна составлять, не менее "R"50.000$"W" и не более "R"500.000$",">>>","x");
			case 10..1000: if(value < 500000 || value > 1000000) return SPD(playerid, D_CREDIT_BUY, DSI, "Взять кредит", ""W"Введите сумму, которую, хотите взять в кредит:\n\
			Сумма должна составлять, не менее "R"500.000$"W" и не более "R"1.000.000$",">>>","x");
		}
		
		SetPVarInt(playerid, "ZaimValue", value);
		return SPD(playerid, D_CREDIT_BUY_2, DSTH, "Взять кредит",""W" На какой срок вы хотите взять кредит?\n\
		1. 1 день\n\
		2. 3 дня("YELLOW"+ 2 процент"W")\n\
		3. 5 дней("YELLOW"+ 3 процента"W")\n\
		4. 7 дней("YELLOW"+ 5 процентов"W")",">>>","x");
	}
	case D_CREDIT_BUY_2:{
		if(!response) return 1;
		new days = 0, proc;
		new stri[25];
		new value = GetPVarInt(playerid, "ZaimValue");
		switch(listitem){
			case 0: days = 1, stri = ""G"1"W" день";
			case 1: days = 3, stri = ""G"3"W" дня", proc = 2;
			case 2: days = 5, stri = ""G"5"W" дней", proc = 3;
			case 3: days = 7, stri = ""G"7"W" дней", proc = 5;
		}
		new str[150];
		SetPVarInt(playerid, "ZaimDay", days);
		SetPVarInt(playerid, "Procent", proc);
		new zg[35];
		format(zg, sizeof(zg), "%i процентов", gBusiness[63][bizzPr]+proc);
		format(str, sizeof(str), ""W"Вы действительно хотите взять кредит, на сумму "GREEN"%d$ "YELLOW"+ (%s)"W" на %s?", value,zg, stri);
		SPD(playerid, D_CREDIT_BUY_3, DSM, "Взять кредит", str ,">>>","x");
	}
	case D_CREDIT_BUY_3:{
		if(!response) return 1;
		new day, value = GetPVarInt(playerid, "ZaimValue"), proc[2];
		proc[1] = GetPVarInt(playerid, "Procent");
		switch(GetPVarInt(playerid, "ZaimDay"))
		{
			case 1: day = gettime() + (24*60*60);
			case 3: day = gettime() + (3*24*60*60);
			case 5: day = gettime() + (5*24*60*60);
			case 7: day = gettime() + (7*24*60*60);
		}
		GiveMoney(playerid, value, "Займ");
		proc[0] = value+value/100*(gBusiness[63][bizzPr]+proc[1]);
		PI[playerid][pCreditDay] = day;
		PI[playerid][pCredit] = proc[0];
		new str[180];
		format(str, sizeof(str), "Вы успешно взяли кредит на сумму: "GREEN"%d$", value);
		SCM(playerid, COLOR_YELLOW, str);
		UpdatePlayerData(playerid, "pCreditDay", PI[playerid][pCreditDay]);
		UpdatePlayerData(playerid, "pCredit", PI[playerid][pCredit]);
		DeletePVar(playerid, "Procent");
		DeletePVar(playerid, "ZaimDay");
		DeletePVar(playerid, "ZaimValue");
	}
	case D_BIZZ_ZG:{
        if(!response) return 1;
  		new bizz = PI[playerid][bizz_work];
		dialog_zg(playerid,bizz,listitem);
	}
	case D_BIZZ_TK: {
			if(!response) return 1;
			new bizz = PI[playerid][bizz_work];
			dialog_tk(playerid,bizz,listitem);
		}
	/*case D_BIZZ_FERMA_MEM: {
		if(!response) return 1;
		GetWord(inputtext[3],0, select_member[playerid], strlen(inputtext[3])+2);
		new id = GetPlayerID(select_member[playerid]);
		new names[24],status,query[128];
		mysql_format(connects, query, sizeof(query),"SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", select_member[playerid]);
		new Cache:result = mysql_query(connects, query);
		new rows = cache_num_rows();
		if(rows > 0) {
			cache_get_value_name(0, "Name", names, MAX_PLAYER_NAME);
			cache_get_value_name_int(0, "bizz_status",status);
			if(PI[playerid][bizz_status] != 10 && PI[playerid][bizz_status] != 11) return SendClientMessage(playerid, COLOR_GREY, "Доступно с ранга Зам.Владельца");
			if(PI[playerid][bizz_status] == 10 || PI[playerid][bizz_status] == 11) {
				if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на себе");
				if(status == 3) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на Руководителе");
				if(PI[playerid][bizz_status] == 2) {
					if(status == 2) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на Руководителе");
				}
				static const f_str[] = "\t%s\n\
										"P"1. "W"Изменить доступ:\n\
										%s- Грузчик\n\
										%s- Тракторист\n\
										%s- Водовоз\n\
										%s- Комбайнер\n\
										%s- Развозчик Урожая\n\
										%s- На след ранги\n\
										%s- На след ранги\n\
										%s- На след ранги\n\
										%s- На след ранги\n\
										"P"2. "NO"Уволить";
				new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 40)];
				format(str,sizeof(str),f_str,names,(status == 1) ? (""P"") : (""W""),(status == 2) ? (""P"") : (""W""));
				D(playerid,D_BIZZ_FERMA_MEM_2,DSL,""P"Сотрудник",str,"Далее","Закрыть");
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "Сотрудник не найден");
		cache_delete(result);
	}
	case D_BIZZ_FERMA_MEM_2: {
			if(!response) return 1;
			new id = GetPlayerID(select_member[playerid]);
			if(PI[playerid][bizz_status] == 10 || PI[playerid][bizz_status] == 11) {
				if(PI[playerid][bizz_status] == 10 && listitem == 8) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить");
				switch(listitem) {
				case 3..10: {
						if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на себе");
						if(IsPlayerConnected(id)) {
							PI[id][bizz_status] = listitem-1;
							UpdatePlayerData(id,"bizz_status",PI[id][bizz_status]);
						}
						else {
							new query[350];
							mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `bizz_status` = '%d' WHERE `Name` = '%s' LIMIT 1",listitem-1,select_member[playerid]);
							mysql_tquery(connects, query, "", "");
						}
						static const f_str[] = "Вы изменили должность для сотрудника "ORANGE"%s"W" на "ORANGE"%s";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 24)];
						format(string,sizeof(string),f_str,select_member[playerid],ferma_class[listitem-2]);
						SendUse(playerid,string);
						return 1;
					}
				case 11: {
						if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на себе");
						if(IsPlayerConnected(id)) {
							if(GetPlayerState(id) == PLAYER_STATE_DRIVER && VehicleInfo[GetPlayerVehicleID(id)][vBizz] == PI[id][bizz_work]) RemovePlayerFromVehicleAC(id);
							PI[id][bizz_work] = 0;
							UpdatePlayerData(id,"bizz_work",0);
							SendOk(id,"Управляющий транспортной компании уволил вас из предприятия");
						}
						else {
							new query[350];
							mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `bizz_work` = '0',`bizz_cash` = '0',`bizz_lcash` = '0',`bizz_status` = '0' WHERE `Name` = '%s' LIMIT 1",select_member[playerid]);
							mysql_tquery(connects, query, "", "");
						}
						static const f_str[] = "Вы уволили сотрудника фермы "ORANGE"%s";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
						format(string,sizeof(string),f_str,select_member[playerid]);
						SendUse(playerid,string);
						members_funcbizz_ferma(playerid,PI[playerid][bizz_work]);
						return 1;
					}
				default: {
						new names[24],status,query[128];
						mysql_format(connects, query, sizeof(query),"SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", select_member[playerid]);
						new Cache:result = mysql_query(connects, query);
						new rows = cache_num_rows();
						if(rows > 0) {
							cache_get_value_name(0, "Name", names, MAX_PLAYER_NAME);
							cache_get_value_name_int(0, "bizz_status",status);
							if(PI[playerid][bizz_status] == 3 || PI[playerid][bizz_status] == 2) {
								if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на себе");
								if(status == 3) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на Трактористе");
								if(PI[playerid][bizz_status] == 2) {
									if(status == 2) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на Трактористе");
								}
								static const f_str[] = "\t%s\n\
														"P"1. "W"Изменить доступ:\n\
														\t%s- Водитель воды\n\
														\t%s- Тракторист\n\
														"P"2. "NO"Уволить";
								new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 40)];
								format(str,sizeof(str),f_str,names,(status == 1) ? (""P"") : (""W""),(status == 2) ? (""P"") : (""W""));
								D(playerid,D_BIZZ_FERMA_MEM_2,DSL,""P"Сотрудник",str,"Далее","Закрыть");
							}
						}
						else SendClientMessage(playerid, COLOR_GREY, "Сотрудник не найден");
						cache_delete(result);
						return 1;
					}
				}
			}
		}*/
	case D_BIZZ_TK_MEM: {
			if(!response) return 1;
			GetWord(inputtext[3],0, select_member[playerid], strlen(inputtext[3])+2);
			new id = GetPlayerID(select_member[playerid]);
			new names[24],status,query[128];
			mysql_format(connects, query, sizeof(query),"SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", select_member[playerid]);
			new Cache:result = mysql_query(connects, query);
			new rows = cache_num_rows();
			if(rows > 0) {
				cache_get_value_name(0, "Name", names, MAX_PLAYER_NAME);
				cache_get_value_name_int(0, "bizz_status",status);
				if(PI[playerid][bizz_status] != 2 && PI[playerid][bizz_status] != 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с ранга управляющий транспортной компании");
				if(PI[playerid][bizz_status] == 3 || PI[playerid][bizz_status] == 2) {
					if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на себе");
					if(status == 3) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на Руководителе");
					if(PI[playerid][bizz_status] == 2) {
						if(status == 2) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на Руководителе");
					}
					static const f_str[] = "\t%s\n\
											"P"1. "W"Изменить доступ:\n\
											\t%s- Водитель\n\
											\t%s- Управляющий\n\
											"P"2. "NO"Уволить";
					new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 40)];
					format(str,sizeof(str),f_str,names,(status == 1) ? (""P"") : (""W""),(status == 2) ? (""P"") : (""W""));
					D(playerid,D_BIZZ_TK_MEM_2,DSL,""P"Сотрудник",str,"Далее","Закрыть");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Сотрудник не найден");
			cache_delete(result);
		}
	case D_BIZZ_TK_MEM_2: {
			if(!response) return 1;
			new id = GetPlayerID(select_member[playerid]);
			if(PI[playerid][bizz_status] == 3 || PI[playerid][bizz_status] == 2) {
				if(PI[playerid][bizz_status] == 2 && listitem == 3) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить");
				switch(listitem) {
				case 2,3: {
						if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на себе");
						if(IsPlayerConnected(id)) {
							PI[id][bizz_status] = listitem-1;
							UpdatePlayerData(id,"bizz_status",PI[id][bizz_status]);
						}
						else {
							new query[350];
							mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `bizz_status` = '%d' WHERE `Name` = '%s' LIMIT 1",listitem-1,select_member[playerid]);
							mysql_tquery(connects, query, "", "");
						}
						static const f_str[] = "Вы изменили должность для сотрудника "ORANGE"%s"W" на "ORANGE"%s";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 24)];
						format(string,sizeof(string),f_str,select_member[playerid],tk_class[listitem-2]);
						SendUse(playerid,string);
						return 1;
					}
				case 4: {
						if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на себе");
						if(IsPlayerConnected(id)) {
							if(GetPlayerState(id) == PLAYER_STATE_DRIVER && VehicleInfo[GetPlayerVehicleID(id)][vBizz] == PI[id][bizz_work]) RemovePlayerFromVehicleAC(id);
							PI[id][bizz_work] = 0;
							UpdatePlayerData(id,"bizz_work",0);
							SendOk(id,"Управляющий транспортной компании уволил вас из предприятия");
						}
						else {
							new query[350];
							mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `bizz_work` = '0',`bizz_cash` = '0',`bizz_lcash` = '0',`bizz_status` = '0' WHERE `Name` = '%s' LIMIT 1",select_member[playerid]);
							mysql_tquery(connects, query, "", "");
						}
						static const f_str[] = "Вы уволили сотрудника транспортной компании "ORANGE"%s";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
						format(string,sizeof(string),f_str,select_member[playerid]);
						SendUse(playerid,string);
						members_funcbizz_tk(playerid,PI[playerid][bizz_work]);
						return 1;
					}
				default: {
						new names[24],status,query[128];
						mysql_format(connects, query, sizeof(query),"SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", select_member[playerid]);
						new Cache:result = mysql_query(connects, query);
						new rows = cache_num_rows();
						if(rows > 0) {
							cache_get_value_name(0, "Name", names, MAX_PLAYER_NAME);
							cache_get_value_name_int(0, "bizz_status",status);
							if(PI[playerid][bizz_status] == 3 || PI[playerid][bizz_status] == 2) {
								if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на себе");
								if(status == 3) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на Руководителе");
								if(PI[playerid][bizz_status] == 2) {
									if(status == 2) return SendClientMessage(playerid, COLOR_GREY, "Невозможно применить на Руководителе");
								}
								static const f_str[] = "\t%s\n\
														"P"1. "W"Изменить доступ:\n\
														\t%s- Водитель\n\
														\t%s- Управляющий\n\
														"P"2. "NO"Уволить";
								new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 40)];
								format(str,sizeof(str),f_str,names,(status == 1) ? (""P"") : (""W""),(status == 2) ? (""P"") : (""W""));
								D(playerid,D_BIZZ_TK_MEM_2,DSL,""P"Сотрудник",str,"Далее","Закрыть");
							}
						}
						else SendClientMessage(playerid, COLOR_GREY, "Сотрудник не найден");
						cache_delete(result);
						return 1;
					}
				}
			}
		}
	case D_BIZZ_TK_INFO: {
			if(!response) return 1;
			new bizz = PI[playerid][bizz_work];
			switch(listitem) {
			case 0: showstattk(playerid,bizz);
			case 1: {
					new string[128];
					format(string,sizeof(string),"Доход за сутки:\t"ORANGE"$%d\nДоход за всё время:\t"ORANGE"$%d",PI[playerid][bizz_lcash],PI[playerid][bizz_cash]);
					D(playerid,DIALOG_NONE,DST,""P"Доходы",string,"Закрыть","");
				}
			case 2: EnableGPSForPlayer(playerid,-576.1025,-498.6292,25.5234), SendOk(playerid,"Загрузка продуктами отмечена на карте");
			case 3: EnableGPSForPlayer(playerid,-1040.6830,-670.5767,32.0126), SendOk(playerid,"Загрузка бензином отмечена на карте");
			case 5: D(playerid,D_BIZZ_TK_ZAK,DSL,""P"Срочные заказы",""P"1."W" Загрузка на оружейном заводе\n"P"2."W" Загрузка на лесопилке\n"P"3."W" Разгрузка фуры ("G"порт ЛС"W")","Выбрать","Закрыть");
			case 6: {
					if(PI[playerid][bizz_status] == 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете уволиться из транспортной компании");
					PI[playerid][bizz_work] = 0;
					UpdatePlayerData(playerid,"bizz_work",0);
					PI[playerid][bizz_status] = 0;
					UpdatePlayerData(playerid,"bizz_status",0);
					SendOk(playerid,"Вы уволились из транспортной компании");
				}
			}
		}
	case D_TOP_PLAYERS: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					new name[44],rows, end_lvl, count, string[750];
					new lvl;
					new Cache:result = mysql_query(connects, "SELECT `Name`,`pLevel` FROM `accounts` WHERE `pLevel` > 0 AND `pAdmin` = '0' ORDER BY `pLevel` DESC");
					cache_get_row_count(rows);
					if(rows) {
						string = ""W"Имя игрока\t"W"Уровень\n";
						static const f_str[] = "%i. %s\t%d\n";
						new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++)
						{
							cache_get_value_name(i, "Name", name, 44);
							cache_get_value_name_int(i, "pLevel",lvl);
							if(end_lvl == lvl || count == 20) continue;
							end_lvl = lvl;
							count++;
							format(str, sizeof(str), f_str, count, name, lvl);
							strcat(string, str);
						}
						D(playerid, D_TOP_PLAYERS_1, DSTH, ""P"Самые активные игроки", string, "Закрыть", "");
					}
					if(count == 0) return D(playerid, DIALOG_NONE, DSM, ""P"Самые активные игроки", ""W"Активных игроков не найдено", "Закрыть", "");
					cache_delete(result);
				}
			case 1: {
					new name[44], rows, cash, end_cash, count, string[750];
					new Cache:result = mysql_query(connects, "SELECT `Name`,`pCash` FROM `accounts` WHERE `pCash` > '0' AND `pAdmin` = '0' ORDER BY `pCash` DESC");
					cache_get_row_count(rows);
					if(rows) {
						string = ""W"Имя игрока\t"W"Денег\n";
						static const f_str[] = "%i. %s\t%d$\n";
						new str[sizeof(f_str) +1 + 50 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "Name", name, 44);
							cache_get_value_name_int(i, "pCash",cash);
							if(end_cash == cash || count == 20) continue;
							end_cash = cash;
							count++;
							format(str, sizeof(str), f_str, i+1, name, cash);
							strcat(string, str);
						}
						D(playerid, D_TOP_PLAYERS_1, DSTH, ""P"Самые богатые игроки", string, "Закрыть", "");
					}
					if(count == 0) return D(playerid, DIALOG_NONE, DSM, ""P"Самые богатые игроки", ""W"Богатых игроков не найдено", "Закрыть", "");
					cache_delete(result);
				}
			}
		}
	case D_TOP_PLAYERS_1: {
			if(!response) return true;
			pc_cmd_top(playerid);
		}
	case D_FAKE_PROMO_CREATE: {
			if (!response) return true;
			if (!strlen(inputtext)) return pc_cmd_createbonus(playerid);
			if (strlen(inputtext) < 1 || strlen(inputtext) > 15)
			{
				SendClientMessage(playerid,COLOR_GREY, "Длина бонус-кода должна быть от 1 до 15 символов");
				pc_cmd_createbonus(playerid);
				return true;
			}
			format(PlayerPromoText[playerid], 16, "%s", inputtext);
			D(playerid, D_FAKE_PROMO_CREATE_1, DIALOG_STYLE_INPUT, ""P"Создание бонус-кода", "Введите количество активаций бонус-кода", "Принять", "Отмена");
			return true;
		}
	case D_FAKE_PROMO_CREATE_1: {
			if (!response) return true;
			if (!strlen(inputtext)) return D(playerid, D_FAKE_PROMO_CREATE_1, DIALOG_STYLE_INPUT, ""P"Создание бонус-кода", "Введите количество активаций бонус-кода", "Принять", "Отмена");
			if (strval(inputtext) < 1) return D(playerid, D_FAKE_PROMO_CREATE_1, DIALOG_STYLE_INPUT, ""P"Создание бонус-кода", "Введите количество активаций бонус-кода", "Принять", "Отмена");

			PlayerPromoCount[playerid] = strval(inputtext);
			D(playerid, D_FAKE_PROMO_CREATE_2, DIALOG_STYLE_INPUT, ""P"Создание бонус-кода", "Введите количество денег которое будет выдаваться при вводе бонус-кода", "Принять", "Отмена");
			return true;
		}
	case D_FAKE_PROMO_CREATE_2: {
			if (!response) return true;
			if (!strlen(inputtext)) return D(playerid, D_FAKE_PROMO_CREATE_2, DIALOG_STYLE_INPUT, ""P"Создание бонус-кода", "Введите количество денег которое будет выдаваться при вводе бонус-кода", "Принять", "Отмена");
			if (strval(inputtext) < 0) return D(playerid, D_FAKE_PROMO_CREATE_2, DIALOG_STYLE_INPUT, ""P"Создание бонус-кода", "Введите количество денег которое будет выдаваться при вводе бонус-кода", "Принять", "Отмена");

			PlayerPromoMoney[playerid] = strval(inputtext);
			D(playerid, D_FAKE_PROMO_CREATE_3, DIALOG_STYLE_INPUT, ""P"Создание бонус-кода", "Введите количество доната которое будет выдаваться при вводе бонус-кода", "Принять", "Отмена");
			return true;
		}
	case D_FAKE_PROMO_CREATE_3: {
			if (!response) return true;
			if (!strlen(inputtext)) return D(playerid, D_FAKE_PROMO_CREATE_3, DIALOG_STYLE_INPUT, ""P"Создание бонус-кода", "Введите количество доната которое будет выдаваться при вводе бонус-кода", "Принять", "Отмена");
			if (strval(inputtext) < 0) return D(playerid, D_FAKE_PROMO_CREATE_3, DIALOG_STYLE_INPUT, ""P"Создание бонус-кода", "Введите количество доната которое будет выдаваться при вводе бонус-кода", "Принять", "Отмена");

			PlayerPromoDonate[playerid] = strval(inputtext);

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "\
	"W"Бонус-код: "P"%s\n\n\
	\
	"W"Количество активаций: "P"%d\n\
	"W"Количество Donate Coint: "P"%d\n\
	"W"Количество Виртуальной валюты: "P"%d\n\n\
	\
	Вы уверены что хотите создать бонус-код", PlayerPromoText[playerid], PlayerPromoCount[playerid], PlayerPromoDonate[playerid], PlayerPromoMoney[playerid]);
			D(playerid, D_FAKE_PROMO_CREATE_4, DIALOG_STYLE_MSGBOX, ""P"Создание бонус-кода", STRING_GLOBAL, "Принять", "Отмена");
			return true;
		}
	case D_FAKE_PROMO_CREATE_4: {
			if (!response) return true;

			new string[250];
			mysql_format(connects, string, sizeof(string), "INSERT INTO `fake_promo` (`Code`, `Money`, `Donate`, `UseCode`) VALUES ('%s', '%d', '%d', '%d')", PlayerPromoText[playerid], PlayerPromoMoney[playerid], PlayerPromoDonate[playerid], PlayerPromoCount[playerid]);
			mysql_pquery(connects, string, "", "");

			SendClientMessage(playerid, 0xFFFF00FF, "Бонус-Код успешно создан");
			return true;
		}
	case D_FAKE_PROMO: {
			if (!response) return true;
			if (!strlen(inputtext)) return D(playerid, D_FAKE_PROMO, DIALOG_STYLE_INPUT, ""P"Ввод бонус-кода", ""W"Введите ниже действующий бонус-код:", "Принять", "Закрыть");
			if (strlen(inputtext) < 1 || strlen(inputtext) > 15) return SendClientMessage(playerid, COLOR_GREY, "Длина бонус-кода должна быть от 1 до 15 символов");
			if (is_text_invalid(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "Присутствуют запрещенные символы");

			new string[200];
			mysql_format(connects, string, sizeof(string), "SELECT * FROM `fake_promo` WHERE `Code` = '%s'", inputtext);
			mysql_tquery(connects, string, "OnMemoryCheckFakePromo", "is", playerid, inputtext);
		}
	case D_MYCOLLAB_1: {
			if(!response) return true;
			pc_cmd_mycollab(playerid);
		}
	case D_MYCOLLAB: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					new string[300], count,promo[24],query[156];
					mysql_format(connects, query, sizeof(query),"SELECT `used_count`,`code` FROM `promocode` WHERE `Name` = '%s'", player_name[playerid]);
					new Cache:result = mysql_query(connects, query);
					new rows;
					string[0] = 0;
					cache_get_row_count(rows);
					if(!rows) return SendClientMessage(playerid,COLOR_GREY,"У Вас нет созданного промокода");
					if(rows)
					{
						cache_get_value_name_int(0, "used_count",count);
						cache_get_value_name(0,"code",promo);
						format(string, sizeof(string), ""W"Действующий промокод:"P" %s"W"\n\nВаш промокод ввели"ORANGE" %d"W" человек(а)",promo, count);
						D(playerid,D_MYCOLLAB_1,DSM, ""P"Промо-код",string,"Назад","Закрыть");
					}
					cache_delete(result);
				}
			case 1: pc_cmd_referals(playerid);
			}
		}
	case D_BANK_GL: {
			if(!response) return true;
			dialog_bank(playerid);
		}
	case D_BANK_TAKE: {
			if(!response) return dialog_bank(playerid);
			if(strval(inputtext) < 1 || strval(inputtext) > 500000)
			{
				new string[350];
				format(string,sizeof(string),""W"На вашем счету:"ORANGE" %d$"W"\n\nВведите ниже количество денег, которое хотите снять:\n\n"G"* Снять можно от 1$ до 500000$",PI[playerid][pBank]);
				D(playerid,D_BANK_TAKE,DSI, ""P"Снятие со счета",string,"Снять","Назад");
				return true;
			}
			if(PI[playerid][pBank] < strval(inputtext))
			{
				new string[350];
				format(string,sizeof(string),""W"На вашем счету:"ORANGE" %d$"W"\n\nВведите ниже количество денег, которое хотите снять:\n\n"G"* На вашем банковском счету нет столько денег",PI[playerid][pBank]);
				D(playerid,D_BANK_TAKE,DSI, ""P"Снятие со счета",string,"Снять","Назад");
				return true;
			}
			PI[playerid][pBank] -= strval(inputtext);
			UpdatePlayerData(playerid, "pBank", PI[playerid][pBank]);
			GiveMoney(playerid, strval(inputtext), "снял деньги с банк. счета");
			new string[200];
			format(string,sizeof(string),""W"Вы сняли со счета:"ORANGE" %d$"W"\nБаланс в банке:"ORANGE" %d$",strval(inputtext),PI[playerid][pBank]);
			D(playerid,DIALOG_NONE,DSM, " ",string,"Закрыть","");
		}
	case D_BANK_GIVE: {
			if(!response) return dialog_bank(playerid);
			if(strval(inputtext) < 1 || strval(inputtext) > 500000) return D(playerid,D_BANK_GIVE,DSI, ""P"Положить на счет",""W"Введите ниже количество денег, которое хотите положить:\n\n"G"* Положить можно от 1$ до 500000$","Положить","Назад");
			if(PI[playerid][pCash] < strval(inputtext)) return D(playerid,D_BANK_GIVE,DSI, ""P"Положить на счет",""W"Введите ниже количество денег, которое хотите положить:\n\n"G"* У вас нет столько денег","Положить","Назад");
			PI[playerid][pBank] += strval(inputtext);
			UpdatePlayerData(playerid, "pBank", PI[playerid][pBank]);
			GiveMoney(playerid, -strval(inputtext), "положил деньги в банк");
			new string[200];
			format(string,sizeof(string),""W"Вы положили в банк:"ORANGE" %d$"W"\nБаланс в банке:"ORANGE" %d$",strval(inputtext),PI[playerid][pBank]);
			D(playerid,DIALOG_NONE,DSM, " ",string,"Закрыть","");
		}
	case D_BANK_TRANSFER: {
			if(!response) return dialog_bank(playerid);
			new id, cash;
			if(sscanf(inputtext, "p<,>ii",id, cash)) return D(playerid,D_BANK_TRANSFER,DSI, ""P"Перевод игроку",""W"Введите ниже через запятую ID игрока, сумма перевода:","Перевод","Назад");
			if(id == INVALID_PLAYER_ID || TI[playerid][tLogin] == false) return D(playerid,D_BANK_TRANSFER,DSI, ""P"Перевод игроку",""W"Введите ниже через запятую ID игрока, сумма перевода:\n\n"G"* Игрока нет в игре","Перевод","Назад");
			if(cash < 1 || cash > 500000) return D(playerid,D_BANK_TRANSFER,DSI, ""P"Перевод игроку",""W"Введите ниже через запятую ID игрока, сумма перевода:\n\n"G"* Сумма перевода должна быть от 1$ до 500000$","Перевод","Назад");
			if(PI[playerid][pBank] < cash) return D(playerid,D_BANK_TRANSFER,DSI, ""P"Перевод игроку",""W"Введите ниже через запятую ID игрока, сумма перевода:\n\n"G"* На вашем банковскому счету нет столько денег","Перевод","Назад");
			new string[200];
			format(string,sizeof(string),""W"Вы действительно хотите перевести"ORANGE" %d$"W" игроку"P" %s[%d]?",cash, player_name[id], id);
			D(playerid,D_BANK_TRANSFER_1,DSM, ""P"Перевод игроку",string,"Перевод","Назад");
			SetPVarInt(playerid,"p_bank",cash);
			SetPVarInt(playerid,"p_player",id);
		}
	case D_BANK_TRANSFER_1: {
			if(!response) return dialog_bank(playerid);
			new cash = GetPVarInt(playerid,"p_bank");
			new id = GetPVarInt(playerid,"p_player");
			if(id == INVALID_PLAYER_ID || TI[playerid][tLogin] == false) return SendClientMessage(playerid,COLOR_GREY, "Произошла ошибка #75. Повторите попытку");

			PI[playerid][pBank] -= cash;
			UpdatePlayerData(playerid, "pBank", PI[playerid][pBank]);
			new string[350];
			format(string,sizeof(string),"Вы перевели"ORANGE" %d$"W" на банковский счет игроку"ORANGE" %s",cash, player_name[id]);
			SendClientMessage(playerid,COLOR_WHITE,string);
			
			PI[id][pBank] += cash;
			UpdatePlayerData(id, "pBank", PI[id][pBank]);
			
			format(string,sizeof(string),"Вы получили"ORANGE" %d$"W" на банковский счет от игрока"ORANGE" %s",cash, player_name[playerid]);
			SendClientMessage(id,COLOR_WHITE,string);
			
			DeletePVar(playerid,"p_bank");
			DeletePVar(playerid,"p_player");
		}
	case D_BANK_MENU: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					new string[200];
					format(string,sizeof(string),""W"На вашем счету:"ORANGE" %d$",PI[playerid][pBank]);
					D(playerid,D_BANK_GL,DSM, ""P"Информация",string,"Назад","");
				}
			case 1: {
					new string[350];
					format(string,sizeof(string),""W"На вашем счету:"ORANGE" %d$"W"\n\nВведите ниже количество денег, которое хотите положить:",PI[playerid][pBank]);
					D(playerid,D_BANK_TAKE,DSI, ""P"Положить на счету",string,"Снять","Назад");
				}
			case 2: {
					D(playerid,D_BANK_GIVE,DSI, ""P"Положить на счет",""W"Введите ниже количество денег, которое хотите положить:","Положить","Назад");
				}
			case 3: {
					if(PI[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Переводы игрокам доступны со 2-го уровня");
					D(playerid,D_BANK_TRANSFER,DSI, ""P"Перевод игроку",""W"Введите ниже через запятую ID игрока, сумма перевода:","Перевод","Назад");
				}
			case 4: {
					if(!PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома");
					new house = PI[playerid][pHouse]-1, oplata, day;
					oplata = floatround(gHouses[house][housePrice]*0.1/70);
					day = (gHouses[house][houseDay]-gettime())/86400;
					static const f_str[] = "\n\n"W"Введите кол-во дней на которое хотите продлить аренду за дом:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" | Оплачено на "P"%d"W" дней\n\n";
					new string[sizeof(f_str) +1 + (-2 + 17)];
					format(string,sizeof(string),f_str,oplata,day);
					D(playerid,D_BANK_OPLATA_HOUSE,DSI, ""P"Оплата дома",string,"Оплатить","Отмена");
				}
			case 5: {
					if(!PI[playerid][pBusiness]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бизнеса");
					new bizz = PI[playerid][pBusiness]-1,oplata, day;
					oplata = floatround(gBusiness[bizz][bizzSellPrice]*0.1/100);
					day = (gBusiness[bizz][bizzDay]-gettime())/86400;
					static const f_str[] = "\n\n"W"Бизнес:"P" %s\n\n"W"Введите кол-во дней на которое хотите продлить аренду за бизнес:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" | Оплачено на "P"%d"W" дней\n\n";
					new string[sizeof(f_str) +1 + (-2 + 30)];
					format(string,sizeof(string),f_str,gBusiness[bizz][bizzName], oplata, day);
					D(playerid,D_BANK_OPLATA_BIZZ,DSI, ""P"Оплата бизнеса",string,"Оплатить","Отмена");
				}
			case 6: {
					if(!GetPlayerVehicles(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома на колесах!");
					new day = (PlayerTrailer[playerVehicleID[playerid]][carDay]-gettime())/86400;
					static const f_str[] = "\n\n"W"Введите кол-во дней на которое хотите продлить аренду за дом на колесах\nПримечание: "ORANGE"1"W" день = "GREEN"5000"W" | Оплачено на "P"%d"W" дней\n\n";
					new string[sizeof(f_str) +1 + (-2 + 17)];
					format(string,sizeof(string),f_str,day);
					D(playerid,D_BANK_OPLATA_DNK,DSI, ""P"Оплата дома на колесах",string,"Оплатить","Отмена");
				}
			case 7: GetTickets(playerid);
			}
		}
	case dProdGet: {
			if (!response) return 1;
			if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			new price = strval(inputtext) / 10;
			if (strval(inputtext) < 1000 || strval(inputtext) > 2000)
			{
				if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 403)
				{
					return D(playerid, dProdGet, DSI, ""P"Покупка бензина", "\n\n"W"Введите количество литров для покупки:\nПримечание: "ORANGE"10"W" литр = "GREEN"$1\n\n"NO"*"G" От 1000 до 2000\n\n", "Купить", "Отмена");
				}
				else return D(playerid, dProdGet, DSI, ""P"Покупка продуктов", "\n\n"W"Введите количество продуктов для покупки:\nПримечание: "ORANGE"10"W" продукт = "GREEN"$1\n\n"NO"*"G" От 1000 до 2000\n\n", "Купить", "Отмена");
			}
			if (GetPVarInt(playerid, "count_prod") + strval(inputtext) > 2000)
			{
				if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 403)
				{
					return D(playerid, dProdGet, DSI, ""P"Покупка бензина", "\n\n"W"Введите количество литров для покупки:\nПримечание: "ORANGE"10"W" литр = "GREEN"$1\n\n"NO"*"G" В Вашу машину столько не влезет. Максимум 2000\n\n", "Купить", "Отмена");
				}
				else return D(playerid, dProdGet, DSI, ""P"Покупка продуктов", "\n\n"W"Введите количество продуктов для покупки:\nПримечание: "ORANGE"10"W" продукт = "GREEN"$1\n\n"NO"*"G" В Вашу машину столько не влезет. Максимум 2000\n\n", "Купить", "Отмена");
			}
			if (GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
			GiveMoney(playerid, -price, "покупка продуктов(развозчик)");
			new string[128];
			if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 403)
			{
				format(string, sizeof(string), "Вы купили: "P"%d"W" ед. продуктов за "ORANGE"$%d"W". Ожидайте загрузку продуктов в автомобиль", strval(inputtext), price);
				SendUse(playerid, string);
				SetTimerEx("LoadProd", 250, false, "i", playerid);
			}
			else
			{
				format(string, sizeof(string), "Вы купили: "P"%d"W" л. бензина за "ORANGE"$%d"W". Цистерна с бензином уже готова к транспортировке", strval(inputtext), price);
				SendUse(playerid, string);
				SetTimerEx("LoadProd", 250, false, "i", playerid);
			}
			SetPVarInt(playerid, "count_prod2", strval(inputtext));
			return 1;
		}
	case dProdSell: {
			if (!response) return 1;
			new bizid = GetPVarInt(playerid, "prod_id") - 1;
			new prod = GetPVarInt(playerid, "count_prod");
			new price = strval(inputtext);
			new string[286], str[10];
			switch (GetVehicleModel(GetPlayerVehicleID(playerid)))
			{
			case 456: str = "продуктов";
			case 403: str = "топлива";
			}
			if (price < 1 || price > 2000)
			{
				format(string, sizeof(string), ""W"Бизнес: "P"%s\n\n\
				"W"Требуется %s: "O"%d\n\
				"W"Доступно для разгрузки: "O"%d\n\
				"W"Введите кол-во %s для продажи:\n\n\
				"NO"*"G" От 1 ед до 2000 ед",
				gBusiness[bizid][bizzName], str, gBusiness[bizid][bizzProdOrder], prod, str);
				return D(playerid, dProdSell, DSI, ""P"Доставка", string, "Продать", "Отмена");
			}
			if (gBusiness[bizid][bizzProdOrder] < price)
			{
				format(string, sizeof(string), ""W"Бизнес: "P"%s\n\n\
				"W"Требуется %s: "O"%d\n\
				"W"Доступно для разгрузки: "O"%d\n\
				"W"Введите кол-во %s для продажи:\n\n\
				"NO"*"G" Владелец бизнеса не заказывал столько %s"
				, gBusiness[bizid][bizzName], str, gBusiness[bizid][bizzProdOrder], prod, str, str);
				return D(playerid, dProdSell, DSI, ""P"Доставка", string, "Продать", "Отмена");
			}
			if (prod < price)
			{
				format(string, sizeof(string), ""W"Бизнес: "P"%s\n\n\
				"W"Требуется %s: "O"%d\n\
				"W"Доступно для разгрузки: "O"%d\n\
				"W"Введите кол-во %s для продажи:\n\n\
				"NO"*"G" В Вашей машине нет столько %s"
				, gBusiness[bizid][bizzName], str, gBusiness[bizid][bizzProdOrder], prod, gBusiness[bizid][bizzProdOrder], str, str);
				return D(playerid, dProdSell, DSI, ""P"Доставка", string, "Продать", "Отмена");
			}

			GiveMoney(playerid,gBusiness[bizid][bizzProdOrderPrice] * price, "оплата развозчику");

			gBusiness[bizid][bizzProdOrder] -= price;
			gBusiness[bizid][bizzProduct] += price;

			format(string, sizeof(string), ""W"Бизнес: "P"%s\n\n\
				"W"Продуктов доставлено: "O"%d\n\
				"W"Требуется продуктов: "O"%d\n\
				"W"Заработано: "GREEN"$%d",
			gBusiness[bizid][bizzName], price, gBusiness[bizid][bizzProdOrder],gBusiness[bizid][bizzProdOrderPrice] * price
			);
			D(playerid, DIALOG_NONE, DSM, ""P"Доставлено", string, "Закрыть", "");

			if (gBusiness[bizid][bizzProdOrder] == 0) gBusiness[bizid][bizzProdOrderPrice] = 0;
			SaveBusiness(bizid);

			DeletePVar(playerid, "prod_id");
			SetPVarInt(playerid, "count_prod", GetPVarInt(playerid, "count_prod") - price);

			format(string, sizeof(string), "Загружено: "GREEN"%d/2000\n"W"Бизнес: "GREEN"Отсутствует", GetPVarInt(playerid, "count_prod"));
			UpdateDynamic3DTextLabelText(gPlayerProdText[playerid], -1, string);
			UpdateBusinessText(bizid);

			if (gPlayerProdCP[playerid] != -1) DestroyDynamicCP(gPlayerProdCP[playerid]);
			return 1;
		}
	case D_EAT_BURGER: {
			if(!response) return true;
			switch(listitem) {
			case 0:
				{
					if(GetPVarInt(playerid,"burger_job")) {
						A_DestroyVehicle(GetPVarInt(playerid,"burger_vehid"));
						DeletePVar(playerid,"burger_job");
						DeletePVar(playerid,"burger_vehid");
						DeletePVar(playerid,"check_pizza");
						A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
						SendClientMessage(playerid,COLOR_WHITE,"Вы уволились с работы!");
						return true;
					}
					A_SetPlayerSkin(playerid, 155);
					SetPVarInt(playerid,"burger_job",1);
					SendClientMessage(playerid,COLOR_WHITE,"Вы устроились на работу курьера. Чтобы начать работу, возьмите доступный заказ");
				}
			case 1: {
					if(!GetPVarInt(playerid,"burger_job")) return SendClientMessage(playerid, COLOR_GREY,"Вы не работаете курьером!");
					if(GetPVarInt(playerid,"burger_vehid") != 0) return SendClientMessage(playerid, COLOR_GREY,"Вы уже арендовали мопед");
					new car = A_CreateVehicle(462, 782.1208,-1630.2461,12.9637,270.2442, 6, 15, -1, VEHICLE_TYPE_PLAYER);
					SetPVarInt(playerid,"burger_vehid",car);
					PutPlayerInVehicle(playerid, car, 0);
					SendClientMessage(playerid,COLOR_WHITE,"Вы арендовали транспорт. Используйте:"GREEN" /lock"W" для открытия/закрытия мопеда");
				}
			}
		}
	case D_VACANCY: {
			if (!response) return 1;
			new vacancies = 0;
			for (new i = 0; i < 14; i++)
			{
				if (VacancyInfo[i][VacancyStatus]) vacancies++;
			}
			if (PI[playerid][pMember] && PI[playerid][pRank] >= FI[PI[playerid][pMember]][fInviteRang])
			{
				if (listitem == 0 && vacancies == 0) return D(playerid, D_VACANCY_2, DSI, ""P"Добавить вакансию", "\n\n"W"Укажите требования для приёма в Вашу организацию:\n\n", "Принять", "Отмена");
				else if (vacancies != 14 && listitem == vacancies) return D(playerid, D_VACANCY_2, DIALOG_STYLE_INPUT, ""P"Добавить вакансию", "\n\n"W"Укажите требования для приёма в Вашу организацию:\n\n", "Принять", "Отмена");
			}
			if (vacancies == 0) return SendClientMessage(playerid, COLOR_GREY, "Сейчас нет доступных вакансий");
			if (listitem == vacancies + 1) pc_cmd_vacancy(playerid);
			new items = 0;
			for (new i = 0; i < 14; i++)
			{
				if (VacancyInfo[i][VacancyStatus] == true) items++;
				if (items - 1 == listitem)
				{
					new string[63 + 28 + 100];
					format(string, sizeof(string), ""W"Добавил: "P"%s\n"W"Организация: "P"%s\n"W"Критерии: "G"%s\n",VacancyInfo[i][VacancyCreator], FI[VacancyInfo[i][VacancyFraction]][fName], VacancyInfo[i][VacancyText]);
					if (VacancyInfo[i][VacancyFraction] != PI[playerid][pLeader]) return D(playerid, DIALOG_NONE, DSM, ""P"Вакансия", string, "Закрыть", "");
					return D(playerid, D_VACANCY_3, DSM, ""P"Вакансия", string, "Удалить", "Отмена");
				}
			}
		}
	case D_VACANCY_2: {
			if (!response) return 1;
			new text[120];
			if (sscanf(inputtext, "s[110]", text) || strlen(inputtext) > 110) return D(playerid, D_VACANCY_2, DSI, ""P"Добавить вакансию", "\n\n"W"Укажите требования для приёма в Вашу организацию:\n\n"NO"*"G" Не более 120 символов", "Принять", "Отмена");
			for (new i = 0; i < 14; i++)
			{
				if (VacancyInfo[i][VacancyFraction] == PI[playerid][pMember] && VacancyInfo[i][VacancyStatus] == true)
				return SendClientMessage(playerid, COLOR_GREY, "Вакансия Вашей организации уже добавлена, удалите старую");
			}
			for (new i = 0; i < 14; i++)
			{
				if (VacancyInfo[i][VacancyStatus] == false)
				{
					VacancyInfo[i][VacancyText] = text;
					VacancyInfo[i][VacancyFraction] = PI[playerid][pMember];
					VacancyInfo[i][VacancyStatus] = true;
					strmid(VacancyInfo[i][VacancyCreator], player_name[playerid], 0, 24);

					SendOk(playerid, "Вакансия успешно добавлена");
					return pc_cmd_vacancy(playerid);
				}
			}
			return pc_cmd_vacancy(playerid);
		}
	case D_VACANCY_3: {
			if (!response) return pc_cmd_vacancy(playerid);
			for (new i = 0; i < 14; i++)
			{
				if (VacancyInfo[i][VacancyFraction] == PI[playerid] [pLeader])
				{
					VacancyInfo[i][VacancyStatus] = false;
					strmid(VacancyInfo[i][VacancyCreator], "-", 0, 24);
					return SendOk(playerid, "Вакансия успешно удалена");
				}
			}
		}
	case D_MENU_QUEST: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					new num = 0;
					STRING_GLOBAL[0] = EOS;
					for(new i ; i < MAX_QUESTS;i++)
					{
						if(AcceptQuest[playerid][i] != 0 && QuestProgress[playerid][i]!=100) {
							if(QuestProgress[playerid][i]<QI[i][LastProgress]) format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%s\n"W"%s [%d/%d]\n",STRING_GLOBAL,QI[i][QuestName],QuestProgress[playerid][i],QI[i][LastProgress]);
							else if(QuestProgress[playerid][i]==100) format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%s\n"W"%s ["NO"Выполнено"W"]\n",STRING_GLOBAL,QI[i][QuestName]);
							else format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%s\n"W"%s ["GREEN"Можно завершить"W"]\n",STRING_GLOBAL,QI[i][QuestName]);
							QuestShow[playerid][num]=i;
							num++;
						}
					}
					SetPVarInt(playerid,"end_quest",num);
					strcat(STRING_GLOBAL,"{C34D45}Отменить текущий квест");
					if(num) D(playerid,D_QUEST_2,DSL,""P"Квест",STRING_GLOBAL,"Выбрать","Отмена");
					else SendClientMessage(playerid, COLOR_GREY, "Активных квестовых линий не найдено");
				}
			case 1: {
					SendOk(playerid,"Взять квест можно на вокзале у Лукаса"NO" (отмечено на карте красной меткой)");
					gpss[playerid] = 1;
					SetPlayerRaceCheckpoint(playerid, 2, 1763.3773,-1906.7416,13.5880, 1763.3773,-1906.7416,13.5880, 1.0);
				}
			case 2: {
					new mas[17] = {40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56}, num=0, string[1200];
					new skr[1200];
					format(string,sizeof(string),""W"Название\t"W"Прогресс\t"W"Награда\n");
					new year, month, day;
					getdate(year, month, day);
					for(new i;i < 17;i++)
					{
						if(AcceptQuest[playerid][mas[i]]==0) skr = ""GREEN"Активный"W"";
						else if(QuestProgress[playerid][mas[i]] == 100) skr = ""NO"Выполнено"W"";
						else if(QuestProgress[playerid][mas[i]] == QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = ""ORANGE"Можно завершить"W"";
						else if(QuestProgress[playerid][mas[i]] >= 0 && AcceptQuest[playerid][mas[i]] != 0) skr = ""G"В процессе"W"";
						format(string,sizeof(string),"%s%s\t%s\t%s\n",string,QI[mas[i]][QuestName],skr,QI[mas[i]][reward]);
						QuestShow[playerid][num] = mas[i];
						num++;
					}
					D(playerid,D_QUEST_DAILY,DSTH,""P"Ежедневные задания",string,"Выбрать","Отмена");
				}
			case 3: {
					if(PI[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Задания доступны со 2-го уровня");
					if(!PI[playerid][pMember]) return D(playerid,D_QUESTS,DSM," ",""W"Вы не состоите в организации","Назад","");
					if(!IsAGang(playerid) && !IsAMafia(playerid) && !IsACop(playerid)) return D(playerid,D_QUESTS,DSM," ",""W"Квесты доступны только для мафий, банд, PD/FBI","Назад","");
					if(IsAGang(playerid))
					{
						new mas[10] = {15,16,17,18,19,20,21,22,23,24},num=0, string[750];
						new skr[750];
						for(new i;i < 10;i++) {
							if(AcceptQuest[playerid][mas[i]]==0) skr = ""GREEN"Активный"W"";
							else if(QuestProgress[playerid][mas[i]] == 100) skr = ""NO"Выполнено"W"";
							else if(QuestProgress[playerid][mas[i]] == QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = ""ORANGE"Можно завершить"W"";
							else if(QuestProgress[playerid][mas[i]] >= 0 && AcceptQuest[playerid][mas[i]] != 0) skr = ""G"В процессе"W"";
							format(string,sizeof(string),"%s%s [%s]\n",string,QI[mas[i]][QuestName],skr);
							QuestShow[playerid][num] = mas[i];
							num++;
						}
						D(playerid,D_QUEST_GANG,DSL,""P"Квесты",string,"Выбрать","Отмена");
					}
					if(IsAMafia(playerid)) {
						new mas[9] = {25,26,27,28,29,30,31,32, 33},num=0, string[750];
						new skr[750];
						for(new i;i < 9;i++) {
							if(AcceptQuest[playerid][mas[i]]==0) skr = ""GREEN"Активный"W"";
							else if(QuestProgress[playerid][mas[i]] == 100) skr = ""NO"Выполнено"W"";
							else if(QuestProgress[playerid][mas[i]] == QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = ""ORANGE"Можно завершить"W"";
							else if(QuestProgress[playerid][mas[i]] >= 0 && AcceptQuest[playerid][mas[i]] != 0) skr = ""G"В процессе"W"";
							format(string,sizeof(string),"%s%s [%s]\n",string,QI[mas[i]][QuestName],skr);
							QuestShow[playerid][num] = mas[i];
							num++;
						}
						D(playerid,D_QUEST_MAFIA,DSL,""P"Квесты",string,"Выбрать","Отмена");
					}
					if(IsACop(playerid))
					{
						new mas[6] = {34,35,36,37,38,39}, num=0, string[750];
						new skr[750];
						for(new i;i < 6;i++) {
							if(AcceptQuest[playerid][mas[i]]==0) skr = ""GREEN"Активный"W"";
							else if(QuestProgress[playerid][mas[i]] == 100) skr = ""NO"Выполнено"W"";
							else if(QuestProgress[playerid][mas[i]] == QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = ""ORANGE"Можно завершить"W"";
							else if(QuestProgress[playerid][mas[i]] >= 0 && AcceptQuest[playerid][mas[i]] != 0) skr = ""G"В процессе"W"";
							format(string,sizeof(string),"%s%s [%s]\n",string,QI[mas[i]][QuestName],skr);
							QuestShow[playerid][num] = mas[i];
							num++;
						}
						D(playerid,D_QUEST_COP,DSL,""P"Квесты",string,"Выбрать","Отмена");
					}
				}
			}
		}
	case D_PLAYER_GM_1: {
			if(!response) return true;
			if(TI[playerid][tDM]) return SendClientMessage(playerid,COLOR_GREY, "Вы уже находитесь на локации");
			if(QuestProgress[playerid][47] == 0 && AcceptQuest[playerid][47] != 0)
			{
				QuestProgress[playerid][47] ++;
				save_quest(playerid,47);
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
			}
			new string[150];
			format(string,sizeof(string),"~g~Killed:~w~ %d~n~~r~Death:~w~ %d",TI[playerid][tDM_k],TI[playerid][tDM_d]);
			PlayerTextDrawSetString(playerid, DmArenaTextDraw[playerid], string);
			PlayerTextDrawShow(playerid, DmArenaTextDraw[playerid]);
			players_dm[listitem]++;
			TI[playerid][tDM] = listitem+1;
			dm_zone(playerid, listitem+1);
			new str[56];
			format(str,sizeof(str),"Сейчас на локации:"G" %d"W" чел",players_dm[listitem]);
			SendOk(playerid,str);
			SendOk(playerid,"Общая активная статистика игроков этой зоны:"ORANGE" /kdd");
			SendOk(playerid,"Для выхода с DM зоны, используйте"ORANGE" /exitdm");
		}
	case D_PLAYER_GM: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					if(player_to_race_lv[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже зарегистрировались");
					if(!lic[playerid][0]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет водительских прав");
					if(open_race_lv != 1) return SendClientMessage(playerid, COLOR_GREY, "Регистрация закрыта!");
					if(players_in_race_lv >= 25) return SendClientMessage(playerid, COLOR_GREY, "Нет места для регистрации! Всего 25 участников");
					new string[256];
					format(string, sizeof(string), "\n\n"W""W"Для регистрации, необходимо сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "P"%d "W"игроков\n\n"W"Общий взнос составляет "ORANGE"$%d\n\n", players_in_race_lv,money_in_race_lv);
					D(playerid,D_GAME_RACE_2,DSI,""P"Регистрация",string,"Внести","Закрыть");
				}
			case 1: {
					if(!lic[playerid][3]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет лицензии на оружие");
					if(player_to_game[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже зарегистрировались");
					if(open_game != 1) return SendClientMessage(playerid, COLOR_GREY, "Регистрация закрыта!");
					new string[256];
					format(string, sizeof(string), "\n\n"W"Для регистрации, необходимо сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "P"%d "W"игроков\nОбщий взнос составляет "ORANGE"$%d\n\n", players_in_game,money_in_game);
					D(playerid,D_GAME_DM_2,DSI,""P"Регистрация",string,"Внести","Закрыть");
					
				}
			case 2: {
					if(player_to_race_lv[playerid] || player_to_game[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы уже зарегистрированы на мероприятие");
					STRING_GLOBAL[0] = 0;
					format(STRING_GLOBAL,350,""W"Карта\t"W"Игроков\n"P"1."W" Заброшенный поселок\t%d\n"P"2."W" Разрушенный поселок\t%d\n\
			"P"3."W" Завод\t%d\n"P"4."W" Склад\t%d", players_dm[0],players_dm[1],players_dm[2],players_dm[3]),
					D(playerid,D_PLAYER_GM_1,DSTH, ""P"DM зоны",STRING_GLOBAL,"Выбрать","Закрыть");
				}
			}
		}
	case D_CONTAINER: {
			if(!response) return true;
			new id = GetPVarInt(playerid,"container")-1;
			if(conteiner[id] != 0) return SendClientMessage(playerid, COLOR_GREY, "Аукцион законечен.");
			switch(gContainer[id][cClass])
			{
				case 5: 
				{
                    switch(listitem) {
					case 0: wininfo(playerid, 5);
					case 1,2,3: {
							new str[46];
							strcat(str, ""W"Наименование\t"W"Параметр\n");
							STRING_GLOBAL[0] = 0;
							format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%sПосмотреть возможный выигрыш\t[{F9C7A1} Посмотреть"W" ]\nКласс контейнера\t[{F9C7A1} %s"W" ]\n\
					Начальная ставка\t%d rub\nПоследняя ставка\t%d rub\n"ORANGE"Участвовать в аукционе",str, gContainer[id][cName], gContainer[id][cMoney], gContainer[id][cStavka]);
							D(playerid,D_CONTAINER,DSTH, ""P"Контейнер",STRING_GLOBAL,"Выбрать","Закрыть");
						}
					case 4: {
							STRING_GLOBAL[0] = EOS;
							format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Класс контейнера:{F9C7A1} %s\n"W"Начальная ставка:{F9C7A1} %d rub"W"\nПоследняя ставка:{F9C7A1} %d rub"W"\n\n"W"\
					Введите ниже сумму больше последней ставки или в случае\nотсутствия ставок больше начальной цены:",gContainer[id][cName],gContainer[id][cMoney],gContainer[id][cStavka]);
							D(playerid, D_CONTAINER_1, DSI, ""P"Ставка на контейнер", STRING_GLOBAL, "Ставка", "Закрыть");
						}
					}
				}
				default: 
				{
                    switch(listitem) {
					case 0: wininfo(playerid, gContainer[id][cClass]);
					case 1,2,3: {
							new str[46];
							strcat(str, ""W"Наименование\t"W"Параметр\n");
							STRING_GLOBAL[0] = 0;
							format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%sПосмотреть возможный выигрыш\t[{F9C7A1} Посмотреть"W" ]\nКласс контейнера\t[{F9C7A1} %s"W" ]\n\
					Начальная ставка\t%d$\nПоследняя ставка\t%d$\n"ORANGE"Участвовать в аукционе",str, gContainer[id][cName], gContainer[id][cMoney], gContainer[id][cStavka]);
							D(playerid,D_CONTAINER,DSTH, ""P"Контейнер",STRING_GLOBAL,"Выбрать","Закрыть");
						}
					case 4: {
							STRING_GLOBAL[0] = EOS;
							format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Класс контейнера:{F9C7A1} %s\n"W"Начальная ставка:{F9C7A1} %d$"W"\nПоследняя ставка:{F9C7A1} %d$"W"\n\n"W"\
					Введите ниже сумму больше последней ставки или в случае\nотсутствия ставок больше начальной цены:",gContainer[id][cName],gContainer[id][cMoney],gContainer[id][cStavka]);
							D(playerid, D_CONTAINER_1, DSI, ""P"Ставка на контейнер", STRING_GLOBAL, "Ставка", "Закрыть");
						}
					}
				}
			}
			
			
		}
	case D_CONTAINER_1: {
			if(!response) return true;
			new id = GetPVarInt(playerid,"container")-1;
			switch(gContainer[id][cClass])
			{
			    case 5:
				{
				    if(conteiner[id] != 0) return SendClientMessage(playerid, COLOR_GREY, "Аукцион законечен.");
					if(strval(inputtext) <= gContainer[id][cMoney] || strval(inputtext) <= gContainer[id][cStavka]) {
						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Класс контейнера:{F9C7A1} %s\n"W"Начальная ставка:{F9C7A1} %d rub"W"\nПоследняя ставка:{F9C7A1} %d rub"W"\n\n"W"\
					Введите ниже сумму больше последней ставки или в случае\nотсутствия ставок больше начальной цены:",gContainer[id][cName],gContainer[id][cMoney],gContainer[id][cStavka]);
						return D(playerid, D_CONTAINER_1, DSI, ""P"Ставка на контейнер", STRING_GLOBAL, "Ставка", "Закрыть");
					}
					if(PI[playerid][pRouble] < strval(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
					SendOk(playerid,"Ставка успешно перебита. Если в течении минуты ее никто не перебьет, то вы сможете{F9C7A1} открыть"W" контейнер");
					gContainer[id][cStavka] = strval(inputtext);
					gContainer[id][cTime] = 60;
					gContainer[id][cPlayer] = playerid;
					strmid(gContainer[id][cOwned], player_name[playerid], 0, 30);
					DeletePVar(playerid, "container");
				}
				default:{
                    if(conteiner[id] != 0) return SendClientMessage(playerid, COLOR_GREY, "Аукцион законечен.");
					if(strval(inputtext) <= gContainer[id][cMoney] || strval(inputtext) <= gContainer[id][cStavka]) {
						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Класс контейнера:{F9C7A1} %s\n"W"Начальная ставка:{F9C7A1} %d$"W"\nПоследняя ставка:{F9C7A1} %d$"W"\n\n"W"\
					Введите ниже сумму больше последней ставки или в случае\nотсутствия ставок больше начальной цены:",gContainer[id][cName],gContainer[id][cMoney],gContainer[id][cStavka]);
						return D(playerid, D_CONTAINER_1, DSI, ""P"Ставка на контейнер", STRING_GLOBAL, "Ставка", "Закрыть");
					}
					if(PI[playerid][pCash] < strval(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
					SendOk(playerid,"Ставка успешно перебита. Если в течении минуты ее никто не перебьет, то вы сможете{F9C7A1} открыть"W" контейнер");
					gContainer[id][cStavka] = strval(inputtext);
					gContainer[id][cTime] = 60;
					gContainer[id][cPlayer] = playerid;
					strmid(gContainer[id][cOwned], player_name[playerid], 0, 30);
					DeletePVar(playerid, "container");
				}
			}
			
		}
	case D_CONTAINER_2: {
			if(!response) return true;
			
	    
            STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"Использовать\nПродать за{F9C7A1} %d$", CountInfo[playerid][cont_cash][listitem]);
			D(playerid, D_CONTAINER_3, DSL, ""P"Выберите действие", STRING_GLOBAL, "Выбрать", "Закрыть");
			SetPVarInt(playerid,"list_predm",listitem);

		
		}
	case D_CONTAINER_3: {
			if(!response) return DeletePVar(playerid,"list_predm");
			new id = GetPVarInt(playerid,"list_predm");
			switch(listitem) {
			case 0: {
					if(CountInfo[playerid][cont_type][id] == 1)
					{
						if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
						AddItem(playerid, CountInfo[playerid][cont_model][id], 1);
					}
					if(CountInfo[playerid][cont_type][id] == 2)
					{
						if(PI[playerid][pPremium]) return D(playerid, DIALOG_NONE, DSM, " ", ""G"На вашем аккаунте уже есть активный премиум-аккаунт", "Закрыть", "");
						PI[playerid][pPremium] = gettime()+(1*CountInfo[playerid][cont_model][id]*60*60);
						UpdatePlayerData(playerid,"premium",PI[playerid][pPremium]);
					}
					if(CountInfo[playerid][cont_type][id] == 3)
					{
						if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
						AddItem(playerid, skin_undress[CountInfo[playerid][cont_model][id]][0], 1);
					}
					if(CountInfo[playerid][cont_type][id] == 4) GiveMoney(playerid, 100000, "деньги с контейнера");
					if(CountInfo[playerid][cont_type][id] == 5) {
						PI[playerid][pCases][1] += 1;
						UpdatePlayerData(playerid, "case_2", PI[playerid][pCases][1]);
					}
					if(CountInfo[playerid][cont_type][id] == 6) {
						PI[playerid][pExp] += CountInfo[playerid][cont_model][id];
						UpdateExp(playerid);
					}
					if(CountInfo[playerid][cont_type][id] == 7) {
						GiveDonate(playerid, CountInfo[playerid][cont_model][id], "донат с контейнера");
					}
					if(CountInfo[playerid][cont_type][id] == 8) GiveMoney(playerid, 200000, "деньги с контейнера");
					
					SendOk(playerid,"Предмет успешно использован");
					MYSQL_GLOBAL[0] = EOS;
					mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),"DELETE FROM `priz` WHERE `id` = '%i'",CountInfo[playerid][cont_id][GetPVarInt(playerid,"list_predm")]);
					mysql_tquery(connects, MYSQL_GLOBAL, "", "");
					DeletePVar(playerid,"list_predm");
				}
			case 1: {
					SendOk(playerid,"Предмет успешно продан");
					GiveMoney(playerid,CountInfo[playerid][cont_cash][GetPVarInt(playerid,"list_predm")],"продажа предмета с контейнера");
					MYSQL_GLOBAL[0] = EOS;
					mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),"DELETE FROM `priz` WHERE `id` = '%i'",CountInfo[playerid][cont_id][GetPVarInt(playerid,"list_predm")]);
					mysql_tquery(connects, MYSQL_GLOBAL, "", "");
					DeletePVar(playerid,"list_predm");
				}
			}
		}
	case D_FREE: {
			if (!response) return 1;
			new id = GetPVarInt(playerid, "FreeOffer") - 1;
			new price = GetPVarInt(playerid, "FreePrice");
			new percent = floatround(price / 100 * 15);
			DeletePVar(playerid, "FreePrice");
			DeletePVar(playerid, "FreeOffer");
			switch (listitem)
			{
			case 0: {
					if (PI[playerid][pCash] < price)
					{
						SendOk(id, "У игрока недостаточно средств для оплаты Ваших услуг");
						SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств для оплаты");
						return 1;
					}
					GiveMoney(playerid, -price, "оплата адвокату");
					GiveMoney(id, percent, "услуги адвоката");
				}
			case 1: {
					if (PI[playerid][pBank] < price)
					{
						SendOk(id, "У игрока недостаточно средств для оплаты Ваших услуг");
						SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств для оплаты");
						return 1;
					}
					PI[playerid][pBank] -= price;
					PI[id][pBank] += percent;
					UpdatePlayerData(playerid, "pBank", PI[playerid][pBank]);
					UpdatePlayerData(id, "pBank", PI[id][pBank]);
				}
			}
			FI[fWHITEHOUSE][fBank] += (price - percent);
			UpdateFraction(fWHITEHOUSE, "Bank", FI[fWHITEHOUSE][fBank]);
			new string[156];
			format(string, sizeof(string), "Адвокат "P"%s"W" освободил Вас за "ORANGE"$%d", player_name[id], price);
			SendUse(playerid, string);
			
			if(QuestProgress[playerid][31] == 0 && AcceptQuest[playerid][31] != 0)
			{
				QuestProgress[playerid][31] ++;
				save_quest(playerid,31);
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Адвокат'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
			}

			format(string, sizeof(string), "Вы выпустили "P"%s"W" за "ORANGE"$%d."G" Способ оплаты: "W"%s", player_name[playerid], percent, (listitem == 0) ? ("наличные") : ("банк. счёт"));
			SendUse(id, string);
			PI[playerid][pJailTime] = 0;
			PI[playerid][pJail] = 0;
			UpdatePlayerData(playerid, "pJailTime", 0);
			UpdatePlayerData(playerid, "pJail", 0);
			GameTextForPlayer(playerid, "~g~~h~FREEDOM", 5000, 1);
			PlayerSpawn(playerid);
			return 1;
		}
	case D_ANTICHEAT: {
			if (!response) return 1;
			AntiCheat[listitem][acValue] = (AntiCheat[listitem][acValue] == 0) ? 1 : (AntiCheat[listitem][acValue] == 1) ? 2 : 0;
			dialog_anticheat(playerid);
			new query[128];
			format(query,sizeof(query),"UPDATE `anticheats` SET `cheatvalue` = '%d' WHERE `chID` = '%d' LIMIT 1", AntiCheat[listitem][acValue], listitem + 1);
			mysql_tquery(connects, query);
		}
	case DIALOG_BLACKJACK_BET: {
			if (!response)
			return SelectTextDraw(playerid, 0x000000FF), false;

			new tableid = (BJ_PlayerInfo[playerid][pBlackJackTableID] - 1), amount = strval(inputtext);

			if (blackjackTableInfo[tableid][blackjackTableStatus] != BLACKJACK_STATUS_STARTING) {
				SelectTextDraw(playerid, 0x000000FF);
				return false;
			}
			if (amount < blackjackTableInfo[tableid][blackjackTableMinBet] || amount > blackjackTableInfo[tableid][blackjackTableMaxBet] || amount > PI[playerid][pCasinoChips]) {
				new str[300];
				format(str, sizeof(str),""W"Введите сумму ставки "ORANGE"(%d - %d)"W":\n\nУ вас в наличии: "ORANGE"%d фишек",blackjackTableInfo[tableid][blackjackTableMinBet], blackjackTableInfo[tableid][blackjackTableMaxBet], PI[playerid][pCasinoChips]);
				return D(playerid, DIALOG_BLACKJACK_BET, DSI, "{9932CC}Black Jack", str, "Принять", "Выйти");
			}

			SetPVarInt(playerid, "Anticheat::Dialog_ID", 0);
			
			BJ_PlayerInfo[playerid][pBlackJackLastBet] =
			BJ_PlayerInfo[playerid][pBlackJackBet][BJ_PlayerInfo[playerid][pBlackJackBlockID]] = amount;

			SelectTextDraw(playerid, 0x000000FF);

			ApplyAnimation(playerid, "CASINO", "cards_raise", 4.1, 0, 1, 1, 1, 1, 1);
			return true;
		}

	case DIALOG_BLACKJACK_LEAVE: {
			SelectTextDraw(playerid, 0x000000FF);
			if (response) blackjack_LeaveGame(playerid);
			return true;
		}
	case DIALOG_CASINO: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					D(playerid, DIALOG_CASINO_CHIPS, DIALOG_STYLE_LIST, ""P"Обмен фишек",
					""P"1."W" Покупка фишек\n\
			"P"2."W" Продажа фишек","Принять", "Назад");
				}
			case 1: D(playerid, DIALOG_BJ_TUTORIAL, DSM, "{9932CC}Как играть в Black Jack?","{FFFFFF}Вы действительно хотите пройти обучение?","Да", "Назад");
			case 2: {
					new string[120];
					format(string,sizeof(string),"Текущий язык интерфейса ["GREEN"%s"W"]",PI[playerid][pCasinoLanguage] ? ("Русский") : ("Английский"));
					D(playerid, DIALOG_CASINO_LANG, DSL, ""P"Язык интерфейса", string, "Изменить", "Назад");
				}
			case 3: {
					new string[500];
					new bizz = TI[playerid][tSelectedBusinessID];
					format(string,sizeof(string),""ORANGE"Информация о казино:\n\n"W"Владелец:"P" %s"W"\n\nКурс покупки фишек:"P" %d$"W"\nКурс продажи фишек:"P" %d$",gBusiness[bizz][bizzOwner], buy_curs, sell_curs);
					D(playerid, DIALOG_CASINO_1, DSM, ""P"Информация", string, "Назад", "");
				}
			}
		}
	case DIALOG_CASINO_LANG: {
			if(!response) {
				D(playerid, DIALOG_CASINO, DSL, ""P"Казино", ""P"1."W" Обмен фишек\n\
			"P"2."W" Как играть в {9932CC}Black Jack?\n\
			"P"3."W" Язык интерфейса\n\
			"G"Информация", "Выбрать", "Отмена");
				return true;
			}

			if(PI[playerid][pCasinoLanguage] == 0) PI[playerid][pCasinoLanguage] = 1;
			else PI[playerid][pCasinoLanguage] = 0;
			UpdatePlayerData(playerid,"casino_lang",PI[playerid][pCasinoLanguage]);

			new string[100];
			format(string,sizeof(string),"Текущий язык интерфейса ["GREEN"%s"W"]",PI[playerid][pCasinoLanguage] ? ("Русский") : ("Английский"));
			D(playerid, DIALOG_CASINO_LANG, DSL, ""P"Язык интерфейса", string, "Изменить", "Назад");

		}
	case DIALOG_CASINO_1: {
			if(!response) return true;
			D(playerid, DIALOG_CASINO, DSL, ""P"Казино", ""P"1."W" Обмен фишек\n\
			"P"2."W" Как играть в {9932CC}Black Jack?\n\
			"P"3."W" Язык интерфейса\n\
			"G"Информация", "Выбрать", "Отмена");
			return true;
		}
	case DIALOG_BJ_TUTORIAL: {
			if(!response) {
				D(playerid, DIALOG_CASINO, DSL, ""P"Казино", ""P"1."W" Обмен фишек\n\
			"P"2."W" Как играть в {9932CC}Black Jack?\n\
			"P"3."W" Язык интерфейса\n"G"Информация", "Выбрать", "Отмена");
				return true;
			}
			blackjack_StartTutorial(playerid);
			return true;
		}
	case DIALOG_CASINO_CHIPS: {
			if(!response) {
				D(playerid, DIALOG_CASINO, DSL, ""P"Казино", ""P"1."W" Обмен фишек\n\
			"P"2."W" Как играть в {9932CC}Black Jack?\n\
			"P"3."W" Язык интерфейса\n\
			"G"Информация", "Выбрать", "Отмена");
				return true;
			}
			new str[350];
			switch(listitem) {
			case 0: {
					if(BJ_PlayerInfo[playerid][pBlackJackTableID] > 0) return true;
					format(str, sizeof(str),""W"Введите количество фишек, которое хотите получить:\n\nУ вас в наличии: "ORANGE"%d фишек"W"\nТекущий курс: "ORANGE"1 фишка = $%d",PI[playerid][pCasinoChips], buy_curs);
					D(playerid, DIALOG_CASINO_BUY_CHIPS, DSI, ""P"Покупка фишек", str, "Принять", "Закрыть");
				}
			case 1: {
					if(BJ_PlayerInfo[playerid][pBlackJackTableID] > 0) return true;
					format(str, sizeof(str),""W"Введите количество фишек, которое хотите продать:\n\nУ вас в наличии: "ORANGE"%d фишек\n"W"Текущий курс: "ORANGE"1 фишка = $%d",PI[playerid][pCasinoChips], sell_curs);
					D(playerid, DIALOG_CASINO_SELL_CHIPS, DSI, ""P"Продажа фишек", str, "Принять", "Закрыть");
				}
			}
		}
	case DIALOG_CASINO_SELL_CHIPS: {
			if(!response) return true;
			new string[300];
			new amount = strval(inputtext);
			if(!IsPlayerInRangeOfPoint(playerid,1.0, 305.3058,-132.1072,1029.4011)) return SendClientMessage(playerid, COLOR_GREY, "Вы не у стойки с фишками");
			if(BJ_PlayerInfo[playerid][pBlackJackTableID] > 0) return true;
			if (amount < 1 || amount > 1000000) {
				format(string, sizeof(string),
				""W"Введите количество фишек, которое хотите продать:\n\nУ вас в наличии: "ORANGE"%d фишек\n"W"Текущий курс: "ORANGE"1 фишка = $%d\n\n"G"От 1 и до 1000000 фишек",
				PI[playerid][pCasinoChips], sell_curs);
				return D(playerid, DIALOG_CASINO_SELL_CHIPS, DSI, ""P"Продажа фишек", string, "Принять", "Закрыть");
			}
			if (PI[playerid][pCasinoChips] < amount) {
				format(string, sizeof(string),
				""W"Введите количество фишек, которое хотите продать:\n\nУ вас в наличии: "ORANGE"%d фишек\n{FFFFFF}Текущий курс: "ORANGE"1 фишка = $%d",
				PI[playerid][pCasinoChips], sell_curs);
				return D(playerid, DIALOG_CASINO_SELL_CHIPS, DSI, ""P"Продажа фишек", string, "Принять", "Закрыть");
			}
			new log[160];
			format(log,sizeof(log),"продал %d фишек за %d$",amount,amount * sell_curs);
			WriteLog(LOG_CASINO,player_name[playerid],"casino",log);
			
			GiveMoney(playerid, (amount * sell_curs), "chips sell");
			PI[playerid][pCasinoChips] -= amount;
			UpdatePlayerData(playerid,"casino_chips",PI[playerid][pCasinoChips]);
			new _t[120];
			format(_t,sizeof(_t),"Вы успешно продали "ORANGE"%d фишек "W"за "P"$%d",amount, (amount * sell_curs));
			SendOk(playerid,_t);
		}
	case DIALOG_CASINO_BUY_CHIPS: {
			if(!response) return true;
			new str[300];
			new amount = strval(inputtext);
			if(!IsPlayerInRangeOfPoint(playerid,1.0, 305.3058,-132.1072,1029.4011)) return SendClientMessage(playerid, COLOR_GREY, "Вы не у стойки с фишками");
			if(BJ_PlayerInfo[playerid][pBlackJackTableID] > 0) return true;
			if (amount < 1 || amount > 100000) {
				format(str, sizeof(str),""W"Введите количество фишек, которое хотите получить:\n\nУ вас в наличии: "ORANGE"%d фишек\n"W"Текущий курс: "ORANGE"1 фишка = $%d",PI[playerid][pCasinoChips], buy_curs);
				return D(playerid, DIALOG_CASINO_BUY_CHIPS, DSI, ""P"Покупка фишек", str, "Принять", "Закрыть");
			}
			if(PI[playerid][pCash] < (amount * buy_curs)) {
				format(str, sizeof(str),""W"Введите количество фишек, которое хотите получить:\n\nУ вас в наличии: "ORANGE"%d фишек"W"\n"W"Текущий курс: "ORANGE"1 фишка = $%d\n\n"G"У Вас недостаточно средств для покупки фишек",PI[playerid][pCasinoChips], buy_curs);
				return D(playerid, DIALOG_CASINO_BUY_CHIPS, DSI, ""P"Покупка фишек", str, "Принять", "Закрыть");
			}
			if((PI[playerid][pCasinoChips] + amount) > 100000) {
				format(str, sizeof(str),""W"Введите количество фишек, которое хотите получить:\n\nУ вас в наличии: "ORANGE"%d фишек\n{FFFFFF}Текущий курс: "ORANGE"1 фишка = $%d\n\n"G"Вы не можете взять больше 100000 фишек, у вас %d фишек.",PI[playerid][pCasinoChips], buy_curs,PI[playerid][pCasinoChips]);
				return D(playerid, DIALOG_CASINO_BUY_CHIPS, DSI, ""P"Покупка фишек", str, "Принять", "Закрыть");
			}
			if(gBusiness[57][bizzProduct]-5 > 0) {
				gBusiness[57][bizzProduct] -= 5;
				bizz_pay(57, amount*2);
			}
			GiveMoney(playerid, -(amount * buy_curs), "chips buy");
			PI[playerid][pCasinoChips] += amount;
			UpdatePlayerData(playerid,"casino_chips",PI[playerid][pCasinoChips]);
			new log[160];
			format(log,sizeof(log),"купил %d фишек за %d$",amount,amount * sell_curs);
			WriteLog(LOG_CASINO,player_name[playerid],"casino",log);
			new _t[120];
			format(_t,sizeof(_t),"Вы успешно купили "ORANGE"%d фишек "W"за "P"$%d",amount, (amount * buy_curs));
			SendOk(playerid,_t);
		}
	case D_MEDNARKO: {
			if(!response) return D(playerid,D_HOSPITAL,DSL,""P"Регистратура", ""P"1."W" Что это за место?\n"P"2."W" Трансгендерный переход\n"P"3."W" Получение медицинской карты\n"P"4."W" Лечение наркозависимости","Выбрать","Отмена");
			new cash = 10;
			if(strval(inputtext) < 1 || strval(inputtext) > PI[playerid][pAddiction]) {
				new string[200];
				format(string,sizeof(string),""W"Стоимость лечения наркозависимости:"ORANGE" 1 наркозависимость — 10$\n\n\
		"W"Текущая наркозависимость:"G" %d"W"\n\nВведите ниже количество, которое хотите вылечить:",PI[playerid][pAddiction]);
				D(playerid,D_MEDNARKO,DSI, ""P"Лечение наркозависимости",string,"Далее","Назад");
				return true;
			}
			if(PI[playerid][pCash] < cash*strval(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			GiveMoney(playerid,-cash*strval(inputtext),"лечение наркозависимости");
			PI[playerid][pAddiction] -= strval(inputtext);
			UpdatePlayerData(playerid,"pAddiction",PI[playerid][pAddiction]);
			SendOk(playerid,"Вы вылечили наркозависимость!");
			if(PI[playerid][pAddiction] <= 10)
			{
				SendOk(playerid,"Вы вылечили наркозависимость!");
				PI[playerid][pStartLomka] = 0;
				if(PI[playerid][pNarcoLomka] == 1)
				{
					PI[playerid][pNarcoLomka] = 0;
					UpdatePlayerData(playerid,"lomka",PI[playerid][pNarcoLomka]);
				}
			}
		}
	case D_HOSPITAL: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					D(playerid,D_HOSPITAL_1,DSM,""P"Информация",""P"Больница"W" - вид гражданского стационарного медицинского учреждения,\n\
			направленного на лечение больных и/или специализированную угоубленную\nдифференцированную диагностику заболеваний в стационарных условиях","Назад","");
				}
			case 1: {
					static const f_str[] = ""W"Трансгендерный переход может включать в себя социализацию в новой гендерной роли,\n\
														медицинские процедуры по коррекции пола,\n\
														смену паспортного имени и юридического пола\n\
														Стоимость хирургического вмешательства - "GREEN"50.000$\n\n\
														"G"Примечание: при смене пола будет изменен Ваш скин";
					new string[sizeof(f_str) +1 + (-2 + 5)];
					format(string,sizeof(string),f_str);
					D(playerid,D_MEDSEX,DSM,""P"Трансгендерный переход", string ,"Операция","Назад");
				}
			case 2: {
					if(PI[playerid][pMedCard]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть мед. карта");
					D(playerid,D_MEDCARD,DSM, ""P"Медицинская карта",""W"Стоимость медицинмской карты - "GREEN"5.000$\n"W"Вы действительно хотите получить мед. карту?","Получить","Отмена");
				}
			case 3: {
					new string[200];
					format(string,sizeof(string),""W"Стоимость лечения наркозависимости:"ORANGE" 1 наркозависимость — 10$\n\n\
			"W"Текущая наркозависимость:"G" %d"W"\n\nВведите ниже количество, которое хотите вылечить:",PI[playerid][pAddiction]);
					D(playerid,D_MEDNARKO,DSI, ""P"Лечение наркозависимости",string,"Далее","Назад");
				}
			}
		}
	case D_HOSPITAL_1: {
			if(!response) return true;
			D(playerid,D_HOSPITAL,DSL,""P"Регистратура", ""P"1."W" Что это за место?\n"P"2."W" Трансгендерный переход\n"P"3."W" Получение медицинской карты\n"P"4."W" Лечение наркозависимости","Выбрать","Отмена");
		}
	case D_FAMILY_CARS: {
			if(!response) return true;
			new fam = PI[playerid][pFamily]-1;
			switch(GetPVarInt(playerid,"ulush_car")) {
			case 1: {
					if(gFamily[fam][famTalon] < 2500) return SendClientMessage(playerid, COLOR_GREY, "У Вашей семьи недостаточно талонов");
					gFamily[fam][famTalon] -= 2500;
					gFamily[fam][famUlushCar][1] = 1;
					UpdateFamily(PI[playerid][pFamily],"talon",gFamily[fam][famTalon]);
					UpdateFamily(PI[playerid][pFamily],"ulush_car_1",gFamily[fam][famUlushCar][1]);
					SendOk(playerid,"Вы расширили автопарк до 2-х автомобилей");
				}
			case 2: {
					if(gFamily[fam][famTalon] < 3200) return SendClientMessage(playerid, COLOR_GREY, "У Вашей семьи недостаточно талонов");
					gFamily[fam][famTalon] -= 3200;
					gFamily[fam][famUlushCar][2] = 1;
					UpdateFamily(PI[playerid][pFamily],"talon",gFamily[fam][famTalon]);
					UpdateFamily(PI[playerid][pFamily],"ulush_car_2",gFamily[fam][famUlushCar][2]);
					SendOk(playerid,"Вы расширили автопарк до 3-х автомобилей");
				}
			case 3: {
					if(gFamily[fam][famTalon] < 4500) return SendClientMessage(playerid, COLOR_GREY, "У Вашей семьи недостаточно талонов");
					gFamily[fam][famTalon] -= 4500;
					gFamily[fam][famUlushCar][3] = 1;
					UpdateFamily(PI[playerid][pFamily],"talon",gFamily[fam][famTalon]);
					UpdateFamily(PI[playerid][pFamily],"ulush_car_3",gFamily[fam][famUlushCar][3]);
					SendOk(playerid,"Вы расширили автопарк до 4-х автомобилей");
				}
			case 4: {
					if(gFamily[fam][famTalon] < 5000) return SendClientMessage(playerid, COLOR_GREY, "У Вашей семьи недостаточно талонов");
					gFamily[fam][famTalon] -= 5000;
					gFamily[fam][famUlushCar][4] = 1;
					UpdateFamily(PI[playerid][pFamily],"talon",gFamily[fam][famTalon]);
					UpdateFamily(PI[playerid][pFamily],"ulush_car_4",gFamily[fam][famUlushCar][4]);
					SendOk(playerid,"Вы расширили автопарк до 5 автомобилей");
				}
			case 5: {
					if(gFamily[fam][famUlushHouse]) return SendClientMessage(playerid, COLOR_GREY, "Вы уже купили данное улучшение");
					if(gFamily[fam][famTalon] < 1500) return SendClientMessage(playerid, COLOR_GREY, "У Вашей семьи недостаточно талонов");
					gFamily[fam][famTalon] -= 1500;
					gFamily[fam][famUlushHouse] = 1;
					UpdateFamily(PI[playerid][pFamily],"talon",gFamily[fam][famTalon]);
					UpdateFamily(PI[playerid][pFamily],"ulush_house",gFamily[fam][famUlushHouse]);
					SendOk(playerid,"Теперь можно выбрать дом для своей семьи"ORANGE" (/fmenu > Дом)");
				}
			}
		}
	case D_FAMILY_UPGRADE: {
			if(!response) return pc_cmd_fmenu(playerid);
			new fam = PI[playerid][pFamily]-1;
			switch(listitem) {
			case 0: {
					if(gFamily[fam][famType]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже куплена галочка");
					D(playerid,D_FAMILY_TYPE,DSM,""P"Галочка",""W"Вы действительно хотите купить улучшение"YELLOW" 'Галочка'"W" за"YELLOW" 1000"W" талонов?\n\nПри покупке галочки, перед названием семьи появится уникальный знак","Далее","Закрыть");
				}
			case 1: {
					if(!gFamily[fam][famType]) return SendClientMessage(playerid, COLOR_GREY, "Чтобы открыть это улучшение, откройте предыдущее");
					if(gFamily[fam][famUlushHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже куплено это улучшение");
					D(playerid,D_FAMILY_CARS,DSM,""P"Место жительства",""W"Вы действительно хотите купить улучшение"YELLOW" 'Место жительства'"W" за"YELLOW" 1500"W" талонов?\n\nПри покупке улучшения, семья может владеть любым домом","Далее","Закрыть");
					SetPVarInt(playerid,"ulush_car",5);
				}
			case 2: {
					if(!gFamily[fam][famUlushHouse]) return SendClientMessage(playerid, COLOR_GREY, "Чтобы открыть это улучшение, откройте предыдущее");
					if(gFamily[fam][famUlushCar][1]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже куплен второй слот под автомобили");
					D(playerid,D_FAMILY_CARS,DSM,""P"Расширение автопарка",""W"Вы действительно хотите купить улучшение"YELLOW" '2-й слот под авто'"W" за"YELLOW" 2500"W" талонов?\n\nПри покупке улучшения, семья может владеть до 2-х автомобилей","Далее","Закрыть");
					SetPVarInt(playerid,"ulush_car",1);
				}
			case 3: {
					if(!gFamily[fam][famUlushCar][1]) return SendClientMessage(playerid, COLOR_GREY, "Чтобы открыть это улучшение, откройте предыдущее");
					if(gFamily[fam][famUlushCar][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже куплен третий слот под автомобили");
					D(playerid,D_FAMILY_CARS,DSM,""P"Расширение автопарка",""W"Вы действительно хотите купить улучшение"YELLOW" '3-й слот под авто'"W" за"YELLOW" 3200"W" талонов?\n\nПри покупке улучшения, семья может владеть до 3-х автомобилей","Далее","Закрыть");
					SetPVarInt(playerid,"ulush_car",2);
				}
			case 4: {
					if(!gFamily[fam][famUlushCar][2]) return SendClientMessage(playerid, COLOR_GREY, "Чтобы открыть это улучшение, откройте предыдущее");
					if(gFamily[fam][famUlushCar][3]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже куплен четверый слот под автомобили");
					D(playerid,D_FAMILY_CARS,DSM,""P"Расширение автопарка",""W"Вы действительно хотите купить улучшение"YELLOW" '4-й слот под авто'"W" за"YELLOW" 4500"W" талонов?\n\nПри покупке улучшения, семья может владеть до 4-х автомобилей","Далее","Закрыть");
					SetPVarInt(playerid,"ulush_car",3);
				}
			case 5: {
					if(!gFamily[fam][famUlushCar][3]) return SendClientMessage(playerid, COLOR_GREY, "Чтобы открыть это улучшение, откройте предыдущее");
					if(gFamily[fam][famUlushCar][4]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже куплен пятый слот под автомобили");
					D(playerid,D_FAMILY_CARS,DSM,""P"Расширение автопарка",""W"Вы действительно хотите купить улучшение"YELLOW" '5-й слот под авто'"W" за"YELLOW" 5000"W" талонов?\n\nПри покупке улучшения, семья может владеть до 5-х автомобилей","Далее","Закрыть");
					SetPVarInt(playerid,"ulush_car",4);
				}
			case 6: {
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""ORANGE"Информация о получении талонов:"W"\n\n\
			Талоны дают новые преимущества семье, на примере улучшений. Чтобы получать\n\
			семейные талоны, ваша семья должна проявлять активность на работах, либо пройти\n\
			одноразовые квесты в мафиях/бандах.\n\n\
			1. На ферме за раз Вы можете заработать"P" 1"W" талон\n\
			2. На заводе за раз Вы можете заработать"P" 1"W" талон\n\
			3. На стройке за раз Вы можете заработать"P" 1"W" талон\n\
			4. На работе инкассатора за раз Вы можете заработать"P" 1"W" талон\n\
			5. Чистильщик канализай"P" 10"W" талонов за 15 утилизированых мешков\n\
			6. Уборщик улиц за круг Вы можете заработать"P" 5"W" талон\n\
			7. Водитель автобуса за круг Вы можете заработать"P" 20"W" талонов\n\
			8. В PAYDAY выдается "P"1"W" талон каждом участнику семьи\n\n");
					D(playerid,DIALOG_NONE,DSM,""P"Информация",STRING_GLOBAL,"Закрыть","");
				}
			}
		}
	case D_FAMILY_CAR: {
			if(!response) return true;
			new fam = PI[playerid][pFamily]-1;
			if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return SendClientMessage(playerid, COLOR_GREY, "Доступно только владельцу семьи");
			if(listitem > 0) if(!gFamily[fam][famUlushCar][listitem]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не куплен дополнительный слот в улучшениях");
			SetPVarInt(playerid,"select_fcar",listitem);
			D(playerid,D_FAMILY_CAR_1,DSL,""P"Транспорт",""P"1."W" Отметить транспорт на GPS\n"P"2."W" Отбуксировать\n"P"3."W" Припарковать\n"P"4."W" Выгрузить автомобиль\n"P"5."W" Продать государству","Далее","Закрыть");
		}
	case D_FAMILY_CAR_1: {
			if(!response) return true;
			new fam = PI[playerid][pFamily]-1;
			new car = GetPVarInt(playerid,"select_fcar");
			switch(listitem) {
			case 0: {
					if(CarFamily[fam][car][LoadCar] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "Транспорт не отбуксирован");
					new Float:x, Float:y, Float:z;
					GetVehiclePos(CarFamily[fam][car][LoadCar], x, y, z);
					EnableGPSForPlayer(playerid, x,y,z);
				}
			case 1: {
					if(CarFamily[fam][car][LoadCar] != INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "Транспорт уже отбуксирован");
					new str[56], slot = 0;
					if(CarFamily[fam][car][fam_cx]) CarFamily[fam][car][LoadCar] = A_CreateVehicle(CarFamily[fam][car][carID], CarFamily[fam][car][fam_cx], CarFamily[fam][car][fam_cy], CarFamily[fam][car][fam_cz], 0, FamilyColorC[gFamily[fam][famColor]], FamilyColorC[gFamily[fam][famColor]], -1, VEHICLE_TYPE_FAMILY), slot=1;
					if(!slot)
					{
						if(!gFamily[fam][famHouse]) return SendClientMessage(playerid, COLOR_GREY, "У вашей семьи нет дома");
						if(!IsPlayerInRangeOfPoint(playerid, 30.0, gHouses[gFamily[fam][famHouse]-1][houseX], gHouses[gFamily[fam][famHouse]-1][houseY], gHouses[gFamily[fam][famHouse]-1][houseZ])) {
							SendClientMessage(playerid,COLOR_GREY,"Вы должны находится рядом с семейным домом");
							return true;
						}
						new Float:x, Float:y, Float:z;
						GetPlayerPos(playerid,x,y,z);
						CarFamily[fam][car][LoadCar] = A_CreateVehicle(CarFamily[fam][car][carID], x, y, z, 0, FamilyColorC[gFamily[fam][famColor]], FamilyColorC[gFamily[fam][famColor]], -1, VEHICLE_TYPE_FAMILY);
					} 
					
					format(str,56,"{%s}%s",FamilyColor[gFamily[fam][famColor]],gFamily[fam][famName]);
					SetVehicleNumberText(CarFamily[fam][car][LoadCar], str);
					
					VehicleInfo[CarFamily[fam][car][LoadCar]][vFamily] = gFamily[fam][famID];
					VehicleInfo[CarFamily[fam][car][LoadCar]][vFslot] = slot;
					VehicleInfo[CarFamily[fam][car][LoadCar]][vFuel] = 100;
					VehicleInfo[CarFamily[fam][car][LoadCar]][vAkum] = 100;

					
					VehicleInfo[CarFamily[fam][car][LoadCar]][vColor][0] = CarFamily[fam][car][famVehColor];
					VehicleInfo[CarFamily[fam][car][LoadCar]][vColor][1] = CarFamily[fam][car][famVehColor_1];

					LoadFamilyTuning(fam, CarFamily[fam][car][LoadCar], car); 

					ChangeVehicleColor(CarFamily[fam][car][LoadCar], CarFamily[fam][car][famVehColor], CarFamily[fam][car][famVehColor_1]);
					
					SendClientMessage(playerid, COLOR_ORANGE, "Транспорт загружен в игру");
				}
			case 2: pc_cmd_fampark(playerid);
			case 3: {
					if(CarFamily[fam][car][LoadCar] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "Автомобиль не отбуксирован");
					A_DestroyVehicle(CarFamily[fam][car][LoadCar]);
					CarFamily[fam][car][LoadCar] = INVALID_VEHICLE_ID;
					SendClientMessage(playerid,COLOR_ORANGE,"Автомобиль выгружен с сервера");
				}
			case 4: {
					new modelid = CarFamily[fam][car][carID] - 400;
					new procent = floatround((gTransport[modelid][trPrice]/100)*Nalog[4]);
					new sum = (gTransport[modelid][trPrice]-procent);
					if(CarFamily[fam][car][carID] == 462) return SendClientMessage(playerid,COLOR_GREY, "Мопед продать нельзя");
					new string[210];
					format(string,sizeof(string),""W"Вы собираетесь продать свой автомобиль "P"%s "W"за "GREEN"$%i\n\n"NO"Продать автомобиль?",gTransport[CarFamily[fam][car][carID]-400][trName],sum);
					D(playerid,D_FAMILY_CAR_2,DSM, ""P"Продажа автомобиля",string, "Да", "Нет");
				}
			}
		}
	case D_FAMILY_CAR_2: {
			if(!response) return true;
			new fam = PI[playerid][pFamily]-1;
			new car = GetPVarInt(playerid,"select_fcar");
			new modelid = CarFamily[fam][car][carID] - 400;
			new procent = floatround((gTransport[modelid][trPrice]/100)*Nalog[4]);
			new sum = (gTransport[modelid][trPrice]-procent);
			
			RemoveFamilyComponent(fam,CarFamily[fam][car][LoadCar], car);

			if(CarFamily[fam][car][LoadCar] != INVALID_VEHICLE_ID)
			{
				VehicleInfo[CarFamily[fam][car][LoadCar]][vFamily] = 0;
				VehicleInfo[CarFamily[fam][car][LoadCar]][vFslot] = -1;
				A_DestroyVehicle(CarFamily[fam][car][LoadCar]);
				CarFamily[fam][car][LoadCar] = INVALID_VEHICLE_ID;
			}
			
			CarFamily[fam][car][carID] = 462;
			CarFamily[fam][car][famVehPaint] = -1;
			
			CarFamily[fam][car][fam_cx] =
			CarFamily[fam][car][fam_cy] =
			CarFamily[fam][car][fam_cz] =
			CarFamily[fam][car][fam_ca] = 0.0;
			
			new query[950];
			format(query, sizeof(query), "UPDATE `family` SET `car_%i` = '462',`poscar%i` = '0',`components_%i` = '0',`paint_%i` = '0|0|-1' WHERE `id` = '%d'",car+1, car+1, car, car, fam+1);
			mysql_tquery(connects, query, "", "");
			
			GiveMoney(playerid, sum,"продажа семейного авто");
			
			FI[fWHITEHOUSE][fBank] += procent;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
			
		}
	case D_VIEW_CARS: {
			if(!response) return true;

			switch(GetPVarInt(playerid,"get_class"))
			{
			case 1: car_shop[playerid] = CreateVehicle(salon_sport[0][0], 45.0986,-14.8016,1225.3112,89.6199, 1, 1, -1);
			case 2: car_shop[playerid] = CreateVehicle(salon_econom[0][0], 45.0986,-14.8016,1225.3112,89.6199, 1, 1, -1);
			case 3: car_shop[playerid] = CreateVehicle(salon_sred[0][0], 45.0986,-14.8016,1225.3112,89.6199, 1, 1, -1);
			case 4: car_shop[playerid] = CreateVehicle(salon_moto[0][0], 45.0986,-14.8016,1225.3112,89.6199, 1, 1, -1);
			}
			
			DeletePVar(playerid,"select_cars"); 
			
			car_color[playerid][0] = 1;
			car_color[playerid][1] = 1;
			
			new modelid = GetVehicleModel(car_shop[playerid])-400;
			
			new string[75];
			format(string,sizeof(string),"_%s",gTransport[modelid][trName]);
			PlayerTextDrawSetString(playerid, auto_PTD[playerid][0],string);
			
			format(string,sizeof(string),"$%d", gTransport[modelid][trPrice]);
			PlayerTextDrawSetString(playerid, auto_PTD[playerid][1],string);

			for(new i = 0; i < 54; i++) TextDrawShowForPlayer(playerid, autoshop_TD[i]);
			PlayerTextDrawShow(playerid, auto_PTD[playerid][0]);
			PlayerTextDrawShow(playerid, auto_PTD[playerid][1]);

			InterpolateCameraPos(playerid, 39.897727, -20.048879, 1226.559936, 39.897727, -20.048879, 1226.559936, 3000);
			InterpolateCameraLookAt(playerid, 43.363063, -16.444784, 1226.515747, 43.363063, -16.444784, 1226.515747, 3000);
			
			SetPlayerVirtualWorld(playerid, playerid+1);
			
			SetVehicleVirtualWorld(car_shop[playerid], playerid+1);
			LinkVehicleToInterior(car_shop[playerid], 2);
			
			SelectTextDraw(playerid, 0xfD5B93Fff);
		}
	case D_VIEW_CARS_1: {
			if(!response) return DeletePVar(playerid,"get_class");
			switch(listitem) {
			case 0: SetPVarInt(playerid,"get_class",2);
			case 1: SetPVarInt(playerid,"get_class",3);
			}
			D(playerid,D_VIEW_CARS,DSM, ""P"Автосалон",""W"Добро пожаловать в Автосалон"GREEN" эконом/среднего класса"W"\n\nВ нашем автосалоне присутствует большой выбор транспорта\n\n"G">>"W" Вы хотите перейти к выбору автомобилей?","Далее","Закрыть");
		}
	case D_INVENT_GIVE_1: {
			if(!response) return DeletePVar(playerid,"block_inv");
			new acter = GetPVarInt(playerid,"activ_trade")-1;
			new slot = ClickInv[playerid];
			DeletePVar(playerid,"block_inv");
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не выбрали в инвентаре предмет");
			if(!PI[playerid][pActivTrade][slot]) return SendClientMessage(playerid, COLOR_GREY, "Вы не отправляли запрос на передачу данного предмета");

			SendClientMessage(acter, COLOR_GREY,"Игрок отказался от передачи предмета");
			SendClientMessage(playerid, COLOR_GREY, "Вы отказались от передачи предмета");

			PI[playerid][pActivTrade][slot] = 0;
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][slot], 370810879);
			InvUpdate(playerid, slot, PI[playerid][pInventory][slot]);

			DeletePVar(acter,"give_inv");
			DeletePVar(playerid,"activ_trade");
			ClickInv[playerid] = -1;
		}
	case D_INVENT_GIVE: {
			if(!response) return DeletePVar(playerid,"block_inv");
			new id, money, ammout;
			new slot = ClickInv[playerid];
			if(sscanf(inputtext, "p<,>iii", id, ammout, money))
			{
				new model = ClickInv[playerid], str[350];
				format(str,sizeof(str),""W"Информация о предмете:\n\nНазвание предмета:"P" %s"W"\nКоличество:"ORANGE" %d"W"\n\nВведите ниже ID игрока, количество, цена за предмет",ItemsInfo[PI[playerid][pInventory][model]][ItemName],PI[playerid][pInventoryKolvo][ClickInv[playerid]]);
				D(playerid,D_INVENT_GIVE,DSI, ""P"Инвентарь",str,"Далее","Отмена");
				return true;
			}
			DeletePVar(playerid,"block_inv");
			
			if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрока нет в игре");
			if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
			if(!IsPlayerStream(3.0, playerid, id)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с Вами");
			if(active_accept(id)) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
			if(GetInvSet(id) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре у игрока недостаточно места");
			if(money < 1 || money > 5000000) return SendClientMessage(playerid, COLOR_GREY, "Сумма должна быть не меньше 1$ не больше 5000000$");
			if(ammout > PI[playerid][pInventoryKolvo][ClickInv[playerid]]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет такого количества предмета");
			
			SetPVarInt(id,"give_inv",playerid+1);
			SetPVarInt(id,"pl_inv",PI[playerid][pInventory][slot]);
			SetPVarInt(id,"pl_money",money);
			SetPVarInt(id,"pl_count",ammout);
			
			SetPVarInt(playerid,"pl_slot",slot);
			SetPVarInt(playerid,"activ_trade",id+1);
			
			PI[playerid][pActivTrade][slot] = 1;


			STRING_GLOBAL[0] = EOS;
			
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), ""P"%s"W" предложил Вам купить"P" %s,"W" количество:"ORANGE" %d за %d$",player_name[playerid],ItemsInfo[PI[playerid][pInventory][slot]][ItemName],PI[playerid][pInventoryKolvo][ClickInv[playerid]], money);
			SendUse(id, STRING_GLOBAL);
			SendClientMessage(id, COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
			
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"Вы предложили "P"%s"W" купить"P" %s,"W" количество:"ORANGE" %d за %d$",player_name[id], ItemsInfo[PI[playerid][pInventory][slot]][ItemName], PI[playerid][pInventoryKolvo][ClickInv[playerid]], money);
			SendUse(playerid, STRING_GLOBAL);
			
			ClickInv[playerid] = -1;
		}
	case D_INVENT_DROP:
		{
			if(!response) return DeletePVar(playerid,"block_inv");
			new slot = ClickInv[playerid];
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][slot], 370810879);
			PI[playerid][pInventory][slot] = 0;
			PI[playerid][pInventoryKolvo][slot] = 0;
			InvUpdate(playerid, slot, PI[playerid][pInventory][slot]);
			ClickInv[playerid] = -1;
			SaveInventory(playerid);
			SendOk(playerid,"Предмет утилизирован");
			DeletePVar(playerid,"block_inv");
			return true;
		}
	case D_TUNING_VIEW: {
			if(!response) return true;
			new Veh = GetPlayerVehicleID(playerid);
			switch(listitem) {
			case 0: {
					SetVehiclePos(Veh, -2463.9331,2504.7917,1014.4042);
					SetVehicleZAngle(Veh, 182.4575);
				}
			case 1: {
					SetVehiclePos(Veh, -2471.6733,2505.0137,1014.4052);
					SetVehicleZAngle(Veh, 178.9855);
				}
			}
			SendOk(playerid,"Чтобы выехать обратно из гаража, используйте"ORANGE" /endtune");
			gBusiness[59][bizzVisitors]++;
			SetVehicleVirtualWorld(Veh, playerid+1);
			LinkVehicleToInterior(Veh, 10);
			SetPlayerInterior(playerid, 10);
			SetVehicleParamsEx(Veh,false,false,false,true,false,false,false);
			SetCameraBehindPlayer(playerid);
			FreezePlayerForTime(playerid,5);
			SetPlayerVirtualWorld(playerid, playerid+1);
		}
	case DIALOG_INFO: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					static const f_str[] =
					""GREEN"1. О проекте:"W"\n\n\
					World Role Play - это место где тебя всегда рады видеть. \n\
					Только у нас Вы можете окунуться в захватывающий мир легендарной игры GTA San Andreas в жанре Role Play. \n\
					Окунувшись в игровой процесс на нашем сервере, Вы сможете попробовать себя в разных игровых ролях, \n\
					устроиться в полицию, участвовать в выборах, стать мэром или вообще президентом и руководить штатом, \n\
					пойти против закона и стать лидером опасной группировки и завоевать все территории опасных районов в Лос-Сантосе\n\
					или стать крутым мафиози, создать империю оборота наркотиков в штате и взять под контроль своей мафии все бизнесы штата!\n\
					Только у нас Вы получаете качественный игровой мод, приятную атмосферу игры максимально приближенной к реальности.\n\
					Вас ждёт увлекательные знакомства на сервере, любой игрок в дальнейшем может стать Вашим другом\n\
					на которого Вы всегда сможете положится - всё это ждёт Вас на игровом сервере World Role Play.";
					new string[sizeof(f_str)];
					format(string,sizeof(string),"%s",f_str);
					D(playerid,DIALOG_INFO_1, DSM, "О проекте", f_str, "Назад", "Закрыть");
				}
			case 1: {
					static const f_str[] =
					""GREEN"2. Защита аккаунта:"W"\n\n\
					Уважаемый игрок, помните, что аккаунт - это Ваша собственность и никто другой за неё не отвечает!\n\
					Администрация никогда не попросит пароль от Вашего аккаунта, ключ и т.д. никогда не сообщайте свои данные об аккаунте третьим лицам.\n\
					Не пользуйтесь автоматическими установками модов и прочих дополнениях для GTA San Andreas, советуем пользоваться только проверенными\n\
					и надёжными источниками, так как в посторонних модах/дополнениях может содержаться вредоносный вирус\n\
					через который злоумышленник сможет читать Ваши пароли - Ваш аккаунт в Ваших руках.\n\
					Для того чтобы максимально защитить свой аккаунт советуем зайти в настройки безопасности и установить защитный код.\n\
					( /mm - Безопасность - Защитный код )";
					new string[sizeof(f_str)];
					format(string,sizeof(string),"%s",f_str);
					D(playerid,DIALOG_INFO_1, DSM, "Защита аккаунта", f_str, "Назад", "Закрыть");
				}
			case 2: {
					static const f_str[] =
					""GREEN"3. Основы игры:"W"\n\n\
					Проводя время на нашем сервере Вы будете набираться опыта, после накопления нужного опыта для определённого уровня\n\
					Вам будет доступен переход на новый уровень, который откроет для Вас новые возможности игры на нашем сервере.\n\
					Вы можете посмотреть статистику своего персонажа войдя в меню.\n\
					( /mm - Статистика игрока )";
					new string[sizeof(f_str)];
					format(string,sizeof(string),"%s",f_str);
					D(playerid,DIALOG_INFO_1, DSM, "Основы игры", f_str, "Назад", "Закрыть");
				}
			}
		}
	case DIALOG_INFO_1: {
			if(!response) return true;
			D(playerid,DIALOG_INFO,DSL, ""P"Информация","1. О проекте\n2. Защита аккаунта\n3. Основы игры","Выбрать","Закрыть");
		}
	case DIALOG_JOB_PROGRESS: {
			if(!response) return true;
			new string[700];
			// С 1 траблы (exp 1)
			switch(listitem) {
			case 0: {
					format(string,sizeof(string),""W"Навык работы на стройке:"ORANGE" %d"W"\n\nНавык строителя\tТребуемый опыт\n"P"1."W" Уборщик\t\t\t"ORANGE"0"W"\n"P"2."W" Грузчик\t\t\t"ORANGE"100"W"\n\
			"P"3."W" Сварщик\t\t\t"ORANGE"300\n\n"G"* С повышением рабочего навыка - открываются новые профессии"W"\n\n\
			При достижении навыка "ORANGE"'Сварщик'"W" - Вы получите аксессуар "P"'жилет'"W"\n\n",PI[playerid][pExpJob][0]);
				}
			case 1: {
					format(string,sizeof(string),""W"Навык работы мойщика дорог:"ORANGE" %d"W"\n\nНавык работы\t\tТребуемый опыт\n"P"1."W" Стажер\t\t\t"ORANGE"0"W"\n"P"2."W" Новичок\t\t\t"ORANGE"15"W"\n\
			"P"3."W" Специалист\t\t\t"ORANGE"30"W"\n"P"4."W" Профессионал\t\t"ORANGE"50"W"\n"P"5."W" Мастер\t\t\t"ORANGE"80"W"\n\n\
			При достижении навыка "ORANGE"'Мастер'"W" - Вы получите аксессуар "P"'колпак'"W"\n\n",PI[playerid][pExpJob][1]);
				}
			case 2: {
					format(string,sizeof(string),""W"Навык работы рыбака:"ORANGE" %d"W"\n\nНавык рыбака\t\tТребуемый опыт\n"P"1."W" Простой рыбак\t\t"ORANGE"0"W"\n"P"2."W" Любитель\t\t\t"ORANGE"200"W"\n\
			"P"3."W" Работяга\t\t\t"ORANGE"400"W"\n"P"4."W" Технолог\t\t\t"ORANGE"600"W"\n"P"5."W" Мудрец\t\t\t"ORANGE"800"W"\n\n\
			При достижении навыка "ORANGE"'Мудрец'"W" - Вы получите аксессуар "P"'магнит'"W"\n\n",PI[playerid][pExpJob][2]);
				}
			case 3: {
					format(string,sizeof(string),""W"Навык работы инкассатора:"ORANGE" %d"W"\n\nНавык работы\t\tТребуемый опыт\n"P"1."W" Стажер\t\t\t"ORANGE"0"W"\n"P"2."W" Водитель\t\t\t"ORANGE"100"W"\n\
			"P"3."W" Специалист\t\t\t"ORANGE"200"W"\n"P"4."W" Профессионал\t\t"ORANGE"300"W"\n"P"5."W" Мастер\t\t\t"ORANGE"500"W"\n\n\
			При достижении навыка "ORANGE"'Мастер'"W" - Вы получите аксессуар "P"'доллар на спину'"W"\n\n",PI[playerid][pExpJob][3]);
				}
			case 4: {
					format(string,sizeof(string),""W"Навык работы чистильщика канализаций:"ORANGE" %d"W"\n\nНавык работы\t\tТребуемый опыт\n"P"1."W" Стажер\t\t\t"ORANGE"0"W"\n"P"2."W" Сантехник\t\t\t"ORANGE"100"W"\n\
			"P"3."W" Специалист\t\t\t"ORANGE"200"W"\n"P"4."W" Профессионал\t\t"ORANGE"300"W"\n"P"5."W" Марио\t\t\t"ORANGE"500"W"\n\n\
			При достижении навыка "ORANGE"'Марио'"W" - Вы получите аксессуар "P"'череп на грудь'"W"\n\n",PI[playerid][pExpJob][4]);
				}
			case 5: {
					format(string,sizeof(string),""W"Навык работы водителя автобуса:"ORANGE" %d"W"\n\nНавык работы\t\tТребуемый опыт\n"P"1."W" Новичок\t\t\t"ORANGE"0"W"\n"P"2."W" Маршрутчик\t\t"ORANGE"30"W"\n\
			"P"3."W" Шофер\t\t\t"ORANGE"50"W"\n\n\
			При достижении навыка "ORANGE"'Шофер'"W" - Вы получите аксессуар "P"'фуражка водителя'"W"\n\n",PI[playerid][pExpJob][5]);
				}
			case 6: {
					format(string,sizeof(string),""W"Навык работы развозчика еды:"ORANGE" %d"W"\n\nНавык работы\t\tТребуемый опыт\n"P"1."W" Стажер\t\t\t"ORANGE"0"W"\n"P"2."W" Курьер\t\t\t"ORANGE"100"W"\n\
			"P"3."W" Специалист\t\t\t"ORANGE"200"W"\n"P"4."W" Профессионал\t\t"ORANGE"300\n\n\
			"W"При достижении навыка "ORANGE"'Профессионал'"W" - Вы получите аксессуар "P"'бургер на голову'"W"\n\n",PI[playerid][pExpJob][6]);
				}
			case 7: {
					format(string,sizeof(string),""W"Навык работы механика:"ORANGE" %d"W"\n\nНавык работы\t\tТребуемый опыт\n"P"1."W" Любитель\t\t\t"ORANGE"0"W"\n"P"2."W" Слесарь\t\t\t"ORANGE"100"W"\n\
			"P"3."W" Специалист\t\t\t"ORANGE"200"W"\n"P"4."W" Профессионал\t\t"ORANGE"300\n"P"5."W" Мастер\t\t\t"ORANGE"400"W"\n\n\
			При достижении навыка "ORANGE"'Мастер'"W" - Вы получите аксессуар "P"'самолетик'"W"\n\n",PI[playerid][pExpJob][7]);
				}
			case 8: {
					format(string,sizeof(string),""W"Навык работы развозчика пиццы:"ORANGE" %d"W"\n\nНавык работы\t\tТребуемый опыт\n"P"1."W" Стажер\t\t\t"ORANGE"0"W"\n"P"2."W" Сотрудник\t\t\t"ORANGE"15"W"\n\
					"P"3."W" Опытный\t\t\t"ORANGE"50"W"\n"P"4."W" Профи\t\t\t"ORANGE"100"W"\n\n\
					При достижении навыка "ORANGE"'Профи'"W" - Вы получите аксессуар "P"'Маска петуха'"W"\n\n",PI[playerid][pExpJob][8]);
				}
			case 9: {
					new null = 0;
					
					if(PI[playerid][pAcsJob][0]) strcat(string,"Аксессуар 'жилет'\n"), take_items[playerid][null] = 0, null++;
					if(PI[playerid][pAcsJob][1]) strcat(string,"Аксессуар 'колпак'\n"), take_items[playerid][null] = 1, null++;
					if(PI[playerid][pAcsJob][2]) strcat(string,"Аксессуар 'магнит'\n"), take_items[playerid][null] = 2, null++;
					if(PI[playerid][pAcsJob][3]) strcat(string,"Аксессуар 'доллар'\n"), take_items[playerid][null] = 3, null++;
					if(PI[playerid][pAcsJob][4]) strcat(string,"Аксессуар 'череп на грудь'\n"), take_items[playerid][null] = 4, null++;
					if(PI[playerid][pAcsJob][5]) strcat(string,"Аксессуар 'фуражка водителя'\n"), take_items[playerid][null] = 5, null++;
					if(PI[playerid][pAcsJob][6]) strcat(string,"Аксессуар 'бургер на голову'\n"), take_items[playerid][null] = 6, null++;
					if(PI[playerid][pAcsJob][7]) strcat(string,"Аксессуар 'самолетик'\n"), take_items[playerid][null] = 7, null++;
					if(PI[playerid][pAcsJob][8]) strcat(string,"Аксессуар 'маска петуха'\n"), take_items[playerid][null] = 8, null++;

					if(null == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не заработали никаких аксессуаров");
					D(playerid,DIALOG_JOB_PROGRESS_2,DSL, ""P"Аксессуары с работ",string, "Забрать", "Назад");
					return true;
				}
			}
			D(playerid,DIALOG_JOB_PROGRESS_1,DSM, ""P"Прогресс",string, "Назад", "");
		}
	case DIALOG_JOB_PROGRESS_1: {
			if(!response) return true;
			pc_cmd_jobskill(playerid);
		}
	case DIALOG_JOB_PROGRESS_2: {
			if(!response) return pc_cmd_jobskill(playerid);
			if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "Освободите место в своем инвентаре");
			switch(take_items[playerid][listitem])
			{
			case 0: {
					PI[playerid][pAcsJob][0] = 0;
					AddItem(playerid, 455, 1);
				}
			case 1: {
					PI[playerid][pAcsJob][1] = 0;
					AddItem(playerid, 132, 1);
				}
			case 2: {
					PI[playerid][pAcsJob][2] = 0;
					AddItem(playerid, 133, 1);
				}
			case 3: {
					PI[playerid][pAcsJob][3] = 0;
					AddItem(playerid, 134, 1);
				}
			case 4: {
					PI[playerid][pAcsJob][4] = 0;
					AddItem(playerid, 139, 1);
				}
			case 5: {
					PI[playerid][pAcsJob][5] = 0;
					AddItem(playerid, 458, 1);
				}
			case 6: {
					PI[playerid][pAcsJob][6] = 0;
					AddItem(playerid, 138, 1);
				}
			case 7: {
					PI[playerid][pAcsJob][7] = 0;
					AddItem(playerid, 126, 1);
				}
			case 8: {
					PI[playerid][pAcsJob][8] = 0;
					AddItem(playerid, 137, 1);
				}
			}
			save_acsjob(playerid);
		}
	case D_FIXCAR:{
			if(!response) return 1;
			if(PI[playerid][pCash] < 500) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств");
			loading_cars(playerid, listitem);
			GiveMoney(playerid,-500,"Доставка ТС к дому");
			SendOk(playerid,"Автомобиль успешно доставлен");
		}
	case D_BUY_CAR: {
			if(!response)
			{
				new fam = PI[playerid][pFamily]-1;
				if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return SendClientMessage(playerid, COLOR_GREY, "Доступно только владельцу семьи");
				new carid = GetVehicleModel(car_shop[playerid])-400;
				new string[500];
				format(string,sizeof(string),"Заменить{C34D45} %s"W" на"ORANGE" %s\nЗаменить{C34D45} %s"W" на"ORANGE" %s\nЗаменить{C34D45} %s"W" на"ORANGE" %s\nЗаменить{C34D45} %s"W" на"ORANGE" %s\nЗаменить{C34D45} %s"W" на"ORANGE" %s",gTransport[CarFamily[fam][0][carID]-400][trName],
				gTransport[carid][trName], gTransport[CarFamily[fam][1][carID]-400][trName], gTransport[carid][trName],gTransport[CarFamily[fam][2][carID]-400][trName],
				gTransport[carid][trName],gTransport[CarFamily[fam][3][carID]-400][trName],gTransport[carid][trName],gTransport[CarFamily[fam][4][carID]-400][trName], gTransport[carid][trName]);
				D(playerid,D_BUY_CAR_3,DSL,""P"Выберите слот",string,"Купить","Закрыть");
				return true;
			}
			new string[128];
			format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[CarsInfo[playerid][carModel][0]-400][trName],gTransport[CarsInfo[playerid][carModel][1]-400][trName]);
			D(playerid,D_BUY_CAR_1,DSL,""P"Выберите слот",string,"Купить","Закрыть");
		}
	case D_BUY_CAR_1: {
			if(!response) return true;
			new businessid = TI[playerid][tSelectedBusinessID];
			new carid = GetVehicleModel(car_shop[playerid])-400;
			if(businessid < 0) return true;
			new price = gTransport[carid][trPrice];
			if(PI[playerid][pCash] < gTransport[carid][trPrice]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			if(!PI[playerid][pHouse] && !PI[playerid][pRoom] && !PI[playerid][pTempKey]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома/квартиры");
			if(CarsInfo[playerid][carModel][listitem] != 481) return SendClientMessage(playerid, COLOR_GREY, "Для начала продайте автомобиль на данном слоте");
			if(gTransport[carid][trModel] < 400) {
				new str[200];
				format(str,sizeof(str),"Произошла ошибка. Сообщите Администраторам #%d & %d",gTransport[carid][trModel], carid);
				SendClientMessage(playerid, COLOR_GREY, str);
				return true;
			}
			if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
				CarsInfo[playerid][carFuel][0] = VehicleInfo[house_car[playerid][0]][vFuel];
				CarsInfo[playerid][carAkum][0] = VehicleInfo[house_car[playerid][0]][vAkum];
				CarsInfo[playerid][carDrived][0] = VehicleInfo[house_car[playerid][0]][vDrived];
				A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
			}
			else if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
				CarsInfo[playerid][carFuel][1] = VehicleInfo[house_car[playerid][1]][vFuel];
				CarsInfo[playerid][carAkum][1] = VehicleInfo[house_car[playerid][1]][vAkum];
				CarsInfo[playerid][carDrived][1] = VehicleInfo[house_car[playerid][1]][vDrived];
				A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;
			}

			CarsInfo[playerid][carModel][listitem] = gTransport[carid][trModel];
			CarsInfo[playerid][carDrived][listitem] = 0;
			
			if(businessid == 58)
			{
				new rand = random(sizeof(salon_spawn));
				house_car[playerid][listitem] = A_CreateVehicle(gTransport[carid][trModel], salon_spawn[rand][0],salon_spawn[rand][1],salon_spawn[rand][2],salon_spawn[rand][3],car_color[playerid][0],car_color[playerid][1],-1, VEHICLE_TYPE_PLAYER);
			}
			if(businessid == 41)
			{
				new rand = random(sizeof(salon_car));
				house_car[playerid][listitem] = A_CreateVehicle(gTransport[carid][trModel], salon_car[rand][0],salon_car[rand][1],salon_car[rand][2],salon_car[rand][3],car_color[playerid][0],car_color[playerid][1],-1, VEHICLE_TYPE_PLAYER);
			}
			if(businessid == 42)
			{
				new rand = random(sizeof(bike_spawn));
				house_car[playerid][listitem] = A_CreateVehicle(gTransport[carid][trModel], bike_spawn[rand][0],bike_spawn[rand][1],bike_spawn[rand][2],bike_spawn[rand][3],car_color[playerid][0],car_color[playerid][1],-1, VEHICLE_TYPE_PLAYER);
			}
			CarsInfo[playerid][carColor_one][listitem] = car_color[playerid][0];
			CarsInfo[playerid][carColor_two][listitem] = car_color[playerid][1];

			
			strmid(NumberVehicle[playerid][listitem], "transit", 0, strlen("transit"), MAX_PLAYER_NAME);
			
			SetVehicleNumberText(house_car[playerid][listitem], "transit");
			
			SetVehicleParamsEx(house_car[playerid][listitem],false,false,false,true,false,false,false);
			
			VehicleInfo[house_car[playerid][listitem]][vFuel] = 100;
			VehicleInfo[house_car[playerid][listitem]][vAkum] = 100;
			
			if(gBusiness[businessid][bizzProduct]-gTransport[carid][trProds] > 0) {
				gBusiness[businessid][bizzProduct] -= gTransport[carid][trProds];
				switch(businessid)
				{
				case 41: bizz_pay(businessid,floatround(price * 0.120)); // эконом/средний
				case 42: bizz_pay(businessid,floatround(price * 0.200)); //Мото
				case 58: bizz_pay(businessid,floatround(price * 0.480)); // спорт
				default: bizz_pay(businessid,floatround(price * 0.100));
				}
			}
			
			new string[200];
			format(string,sizeof(string),"\n\n"W"Поздравляем с покупкой автомобиля: "GREEN"%s\n\n\
										"W"Автомобиль куплен за: "GREEN"%d$\n\n\
										{C34D45}*"W" Купленный транспорт припаркован на улице\n\n",gTransport[carid][trName],price);
			D(playerid,DIALOG_NONE,DSM, ""P"Автосалон",string,"Спасибо","");
			
			new query[350];
			format(query, sizeof(query), "UPDATE `cars` SET `model` = '%d',`color_one` = '%d',`color_two` = '%d' WHERE `id` = '%d'",CarsInfo[playerid][carModel][listitem],car_color[playerid][0],car_color[playerid][1],CarsInfo[playerid][carID][listitem]);
			mysql_tquery(connects, query, "", "");

			
			new str[128];
			format(str,sizeof(str),"покупка авто %s",gTransport[carid][trName]);
			GiveMoney(playerid,-gTransport[carid][trPrice], str);
			
			if(QuestProgress[playerid][6] == 0 && AcceptQuest[playerid][6] != 0)
			{
				QuestProgress[playerid][6] ++;
				SendOk(playerid,"Вы закончили выполнение квеста 'Первая машина'. Квест можно завершить у "NO"Лукаса");
				NextStapQI(playerid,6);
			}
		}
	case D_BUY_CAR_2: {
			if(!response) return true;
			if(!PI[playerid][pHouse] && !PI[playerid][pRoom] && !PI[playerid][pTempKey]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома/квартиры");
			if(CarsInfo[playerid][carModel][listitem] != 481) return SendClientMessage(playerid, COLOR_GREY, "Для начала продайте автомобиль на данном слоте");
			if(house_car[playerid][listitem] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][listitem]), house_car[playerid][listitem] = INVALID_VEHICLE_ID;

			new query[120]; 
			format(query, 120, "UPDATE `cars` SET `model` = '%d',`color_one` = '%d',`color_two` = '%d' WHERE `id` = '%d'",CountInfo[playerid][cont_model][GetPVarInt(playerid,"list_predm")],car_color[playerid][0],car_color[playerid][1],CarsInfo[playerid][carID][listitem]);
			mysql_tquery(connects, query, "", "");
			
			CarsInfo[playerid][carModel][listitem] = CountInfo[playerid][cont_model][GetPVarInt(playerid,"list_predm")];
			CarsInfo[playerid][carDrived][listitem] = 0;

			new str[128];
			mysql_format(connects, str, sizeof(str),"DELETE FROM `priz` WHERE `id` = '%i'",CountInfo[playerid][cont_id][GetPVarInt(playerid,"list_predm")]);
			mysql_tquery(connects, str, "", "");
			DeletePVar(playerid,"list_predm");
			
			SendOk(playerid,"Вы успешно забрали автомобиль. Используйте:"P" /fixcar");
		}
	case D_BUY_CAR_3: {
			if(!response) return true;
			new businessid = TI[playerid][tSelectedBusinessID];
			if(businessid < 0) return true;
			new fam = PI[playerid][pFamily]-1;
			if(!PI[playerid][pFamily]) return SendClientMessage(playerid,COLOR_GREY, "Вы не состоите в семье");
			new carid = GetVehicleModel(car_shop[playerid])-400;
			new price = gTransport[carid][trPrice];
			if(PI[playerid][pCash] < gTransport[carid][trPrice]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			switch(listitem) {
			case 1..4: if(!gFamily[fam][famUlushCar][listitem]) return SendClientMessage(playerid,COLOR_GREY, "Вы не улучшили данный слот (/fmenu > Улучшения)");
			} 
			if(gTransport[carid][trModel] < 400) {
				new str[200];
				format(str,sizeof(str),"Произошла ошибка. Сообщите Администраторам #%d & %d",gTransport[carid][trModel], carid);
				SendClientMessage(playerid, COLOR_GREY, str);
				return true;
			}

			CarFamily[fam][listitem][carID] = gTransport[carid][trModel];
			
			if(gBusiness[businessid][bizzProduct]-gTransport[carid][trProds] > 0) {
				gBusiness[businessid][bizzProduct] -= gTransport[carid][trProds];
				switch(businessid)
				{
				case 41: bizz_pay(businessid,floatround(price * 0.120)); // эконом/средний
				case 42: bizz_pay(businessid,floatround(price * 0.200)); //Мото
				case 58: bizz_pay(businessid,floatround(price * 0.480)); // спорт
				default: bizz_pay(businessid,floatround(price * 0.100));
				}
			}
			new str[128];
			format(str,sizeof(str),"покупка авто для семьи %s",gTransport[carid][trName]);
			GiveMoney(playerid,-gTransport[carid][trPrice], str);
			SendClientMessage(playerid,COLOR_ORANGE,"Поздравляем с покупкой нового транспорта!");
			
			CarFamily[fam][listitem][famVehPaint] = -1;

			CarFamily[fam][listitem][famVehColor] = car_color[playerid][0];
			CarFamily[fam][listitem][famVehColor_1] = car_color[playerid][1];
			
			new query[720];
			mysql_format(connects, query, sizeof(query), "UPDATE `family` SET `car_%i` = '%i',`paint_%i` = '%i|%i|-1' WHERE `id` = '%d'",listitem+1, CarFamily[fam][listitem][carID],listitem,car_color[playerid][0],car_color[playerid][1],fam+1);
			mysql_tquery(connects, query, "", "");
			
			if(CarFamily[fam][listitem][LoadCar] != INVALID_VEHICLE_ID) {
				A_DestroyVehicle(CarFamily[fam][listitem][LoadCar]);
				CarFamily[fam][listitem][LoadCar] = INVALID_VEHICLE_ID;
			}
		}
	case D_CODE_BANK: {
			if(!response) return true;
			switch(listitem) {
			case 0: D(playerid, D_CODE_BANK_1, DSM, "  ", ""W"Привет, меня зовут"GREEN" Karen"W". Я работаю программистом в секретном агенстве, могу получить\nлюбые данные за несколько секунд", "Назад", "");
			case 1: {
					if(bank_vzlom[3]) {
						new string[80]; 
						format(string,sizeof(string),"Банк можно будет ограбить через %d ч",bank_vzlom[3]);
						SendClientMessage(playerid, COLOR_GREY, string);
						return true;
					}
					if(bank_vzlom[0] > gettime()) {
						new string[80];
						format(string,sizeof(string),"Код еще не составлен, возвращайся через %02d:%02d минут", (bank_vzlom[0]-gettime())/60,(bank_vzlom[0]-gettime())%60);
						SendClientMessage(playerid, COLOR_GREY, string);
						return true;
					}
					new Float:X, Float:Y, Float:Z, count = 0;
					GetPlayerPos(playerid, X, Y, Z);
					foreach(new i:Player) { 
						if(!TI[i][tLogin] || PI[i][pMember] != PI[playerid][pMember]) continue;
						if(IsPlayerInRangeOfPoint(i,8.0,X,Y,Z) && GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid)) count++;
					} 
					if(count < 3) return SendClientMessage(playerid, COLOR_GREY, "С вами должно находится не менее 3-х человек для ограбления банка");
					SendTeamMessage(CDEPARTMENT,"[Внимание] неизвестные люди в масках готовят ограбление на банк");
					bank_vzlom[0] = gettime()+1800;
					TI[playerid][tCodeBank] = 300;
					SendClientMessage(playerid,COLOR_WHITE,"Отправляйтесь теперь в банк"GREEN" /gps > Важные места > Банк");
					SendClientMessage(playerid,COLOR_WHITE,"Используйте команду:"ORANGE" '/bankhack'"W" чтобы взломать дверь в хранилище");
					D(playerid, DIALOG_NONE, DSM, "  ", ""GREEN"Вы получили код для взлома хранилища!"W"\n\nОтправляйтесь в банк для отключения внутреннего питания и взлома\nдвери (/bankhack)\n\n{C34D45}Вам дается несколько минут, чтобы успеть взломать хранилище", "Закрыть", "");
				}
			}
		}
	case D_DUEL: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					if(TI[playerid][tDuel] != -1)
					{
						if(DI[TI[playerid][tDuel]][duel_type] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы создатель лобби/уже состоите в лобби");
						else if(DI[TI[playerid][tDuel]][duel_type] == 1) return duel_lobby_2(playerid,TI[playerid][tDuel]);
						else if(DI[TI[playerid][tDuel]][duel_type] == 2) return duel_lobby_3(playerid,TI[playerid][tDuel]);
					}
					new string[1024];
					strcat(string,"№ | Создатель\tТип | Взнос\tКарта | Оружие | ХП | Броня\tСтатус\n");
					new duel_types[3][7] = {"1 VS 1","2 VS 2","3 VS 3"};
					new duel_guns[5][13] = {"Desert Eagle","ShotGun","MP5","AK-47","M4"};
					new duel_maps[3][11] = {"Карта №1","Карта №2","Карта №3"};
					new bool:duel_lobby = false;
					for(new d = 0; d < MAX_DUELS; d++) {
						if(DI[d][duel_create] == false || DI[d][duel_start] == true) continue;
						if(!DI[d][duel_password]) format(string,sizeof(string),"%s%d | %s\t%s | %d\t%s | %s | %d | %d\t"GREEN"OPEN"W"\n",string,d,player_name[DI[d][duel_owner_id]],duel_types[DI[d][duel_type]],DI[d][duel_money],duel_maps[DI[d][duel_map]],duel_guns[DI[d][duel_gun]],DI[d][duel_health],DI[d][duel_armour]);
						else format(string,sizeof(string),"%s%d | %s\t%s | %d\t%s | %s | %d | %d\t"NO"CLOSE"W"\n",string,d,player_name[DI[d][duel_owner_id]],duel_types[DI[d][duel_type]],DI[d][duel_money],duel_maps[DI[d][duel_map]],duel_guns[DI[d][duel_gun]],DI[d][duel_health],DI[d][duel_armour]);
						duel_lobby = true;
					}
					if(!duel_lobby) return SendClientMessage(playerid, COLOR_GREY, "Доступных лобби нет");
					D(playerid,D_DUEL_2,DSTH,""P"Лобби",string,"Выбрать","Закрыть");
				}
			case 1: {
					if(TI[playerid][tDuel] != -1) {
						if(playerid != DI[TI[playerid][tDuel]][duel_owner_id]) return SendClientMessage(playerid, COLOR_GREY, "Вы состоите в лобби");
						else {
							duel_message(playerid,TI[playerid][tDuel]);
							return 1;
						}
					}
					new duel_t = 0;
					for(new d = 0; d < MAX_DUELS; d++) {
						if(DI[d][duel_owner_id] != INVALID_PLAYER_ID) continue;
						TI[playerid][tDuel] = d;
						DI[d][duel_owner_id] = playerid;
						duel_t++;
						break;
					}
					if(!duel_t) return SendClientMessage(playerid, COLOR_GREY, "В данный момент нельзя создать комнату. Все слоты переполнены");
					duel_message(playerid,TI[playerid][tDuel]);
				}
			}
		}
	case D_DUEL_2: {
			if(!response) return 1;
			new id = strval(inputtext[0]);
			SetPVarInt(playerid,"duel_number",id);
			if(DI[id][duel_owner_id] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Выбранное лобби недоступно");
			if(DI[id][duel_start] == true) return SendClientMessage(playerid, COLOR_GREY, "Выбранное лобби недоступно");
			if(!DI[id][duel_password]) {
				duel_enter(playerid,id);
				return 1;
			}
			else D(playerid,D_DUEL_ENTER_PSW,DSI,""P"Лобби | Вход","\n\n"W"Для входа в лобби введите пароль:\n\n","Войти","Отмена");
		}
	case D_DUEL_3: {
			if(!response) return 1;
			new id = GetPVarInt(playerid, "duel_number");
			DeletePVar(playerid, "duel_number");
			if(DI[id][duel_owner_id] == INVALID_PLAYER_ID) return 1;
			if(GetPlayerMoneyEx(playerid) < DI[id][duel_money]) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
			GiveMoney(playerid,-DI[id][duel_money],"взнос дуэль");
			DI[id][duel_cash] += DI[id][duel_money];
			TI[playerid][tDuel] = id;
			switch(DI[id][duel_type]) {
			case 0: {
					DI[id][duel_id][1] = playerid;

					start_duel_1(id);
					new Float:pos[3];
					GetPlayerPos(DI[id][duel_id][0], pos[0], pos[1], pos[2]);
					SetPVarFloat(DI[id][duel_id][0], "pos_comp_x", pos[0]);
					SetPVarFloat(DI[id][duel_id][0], "pos_comp_y", pos[1]);
					SetPVarFloat(DI[id][duel_id][0], "pos_comp_z", pos[2]);
					GetPlayerPos(DI[id][duel_id][1], pos[0], pos[1], pos[2]);
					SetPVarFloat(DI[id][duel_id][1], "pos_comp_x", pos[0]);
					SetPVarFloat(DI[id][duel_id][1], "pos_comp_y", pos[1]);
					SetPVarFloat(DI[id][duel_id][1], "pos_comp_z", pos[2]);
				}
			case 1: duel_lobby_2(playerid,id);
			case 2: duel_lobby_3(playerid,id);
			}
		}
	case D_DUEL_4: {
			if(TI[playerid][tDuel]) return 1;
			if(DI[TI[playerid][tDuel]][duel_start] == true) return 1;
			if(!response) {
				if(DI[TI[playerid][tDuel]][duel_owner_id] == playerid) duel_delete(TI[playerid][tDuel],false);
				if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,TI[playerid][tDuel]);
				TI[playerid][tDuel] = -1;
				return 1;
			}
			if(TI[playerid][tDuel] == -1) return 1;
			new id = TI[playerid][tDuel];
			switch(listitem) {
			case 0: {
					if(DI[id][duel_id][0] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][0] = playerid,TI[playerid][tDuelLobby] = 0;
						SendOk(playerid,"Вы заняли место №1 в команде №1");
					}
					else duel_lobby_2(playerid,id);
				}
			case 1: {
					if(DI[id][duel_id][1] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][1] = playerid,TI[playerid][tDuelLobby] = 1;
						SendOk(playerid,"Вы заняли место №2 в команде №1");
					}
					else duel_lobby_2(playerid,id);
				}
			case 2: duel_lobby_2(playerid,id);
			case 3: {
					if(DI[id][duel_id][2] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][2] = playerid,TI[playerid][tDuelLobby] = 2;
						SendOk(playerid,"Вы заняли место №1 в команде №2");
					}
					else duel_lobby_2(playerid,id);
				}
			case 4: {
					if(DI[id][duel_id][3] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][3] = playerid,TI[playerid][tDuelLobby] = 3;
						SendOk(playerid,"Вы заняли место №2 в команде №2");
					}
					else duel_lobby_2(playerid,id);
				}
			}
			if(DI[id][duel_id][0] != INVALID_PLAYER_ID && DI[id][duel_id][1] != INVALID_PLAYER_ID && DI[id][duel_id][2] != INVALID_PLAYER_ID && DI[id][duel_id][3] != INVALID_PLAYER_ID) {
				new Float:pos[3];
				GetPlayerPos(DI[id][duel_id][0], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][1], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][2], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][3], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_z", pos[2]);
				DI[id][duel_vw] = DI[id][duel_id][0]+1;
				start_duel_2(id);
			}
		}
	case D_DUEL_5: {
			if(TI[playerid][tDuel]) return 1;
			if(DI[TI[playerid][tDuel]][duel_start] == true) return 1;
			if(!response) {
				if(DI[TI[playerid][tDuel]][duel_owner_id] == playerid) duel_delete(TI[playerid][tDuel],false);
				if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,TI[playerid][tDuel]);
				TI[playerid][tDuel] = -1;
				return 1;
			}
			if(TI[playerid][tDuel] == -1) return 1;
			new id = TI[playerid][tDuel];
			switch(listitem) {
			case 0: {
					if(DI[id][duel_id][0] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][0] = playerid,TI[playerid][tDuelLobby] = 0;
						SendOk(playerid,"Вы заняли место №1 в команде №1");
					}
					else duel_lobby_3(playerid,id);
				}
			case 1: {
					if(DI[id][duel_id][1] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][1] = playerid,TI[playerid][tDuelLobby] = 1;
						SendOk(playerid,"Вы заняли место №2 в команде №1");
					}
					else duel_lobby_3(playerid,id);
				}
			case 2: {
					if(DI[id][duel_id][2] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][2] = playerid,TI[playerid][tDuelLobby] = 2;
						SendOk(playerid,"Вы заняли место №3 в команде №1");
					}
					else duel_lobby_3(playerid,id);
				}
			case 3: duel_lobby_3(playerid,id);
			case 4: {
					if(DI[id][duel_id][3] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][3] = playerid,TI[playerid][tDuelLobby] = 3;
						SendOk(playerid,"Вы заняли место №1 в команде №2");
					}
					else duel_lobby_3(playerid,id);
				}
			case 5: {
					if(DI[id][duel_id][4] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][4] = playerid,TI[playerid][tDuelLobby] = 4;
						SendOk(playerid,"Вы заняли место №2 в команде №2");
					}
					else duel_lobby_3(playerid,id);
				}
			case 6: {
					if(DI[id][duel_id][5] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][5] = playerid,TI[playerid][tDuelLobby] = 5;
						SendOk(playerid,"Вы заняли место №3 в команде №2");
					}
					else duel_lobby_3(playerid,id);
				}
			}
			if(DI[id][duel_id][0] != INVALID_PLAYER_ID && DI[id][duel_id][1] != INVALID_PLAYER_ID && DI[id][duel_id][2] != INVALID_PLAYER_ID && DI[id][duel_id][3] != INVALID_PLAYER_ID && DI[id][duel_id][4] != INVALID_PLAYER_ID && DI[id][duel_id][5] != INVALID_PLAYER_ID) {
				new Float:pos[3];
				GetPlayerPos(DI[id][duel_id][0], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][1], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][2], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][3], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][4], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][4], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][4], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][4], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][5], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][5], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][5], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][5], "pos_comp_z", pos[2]);
				DI[id][duel_vw] = DI[id][duel_id][0]+1;
				start_duel_3(id);
			}
		}
	case D_DUEL_ENTER_PSW: {
			if(!response) return 1;
			if(DI[GetPVarInt(playerid, "duel_number")][duel_owner_id] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Выбранное лобби недоступно");
			if(DI[GetPVarInt(playerid, "duel_number")][duel_start] == true) return SendClientMessage(playerid, COLOR_GREY, "Выбранное лобби недоступно");
			if(strval(inputtext) != DI[GetPVarInt(playerid, "duel_number")][duel_password]) {
				D(playerid,D_DUEL_ENTER_PSW,DSI,""P"Лобби | Вход","\n\n"W"Для входа в лобби введите пароль:\n"NO"*"G" Неверный пароль\n\n","Войти","Отмена");
				return 1;
			}
			duel_enter(playerid,GetPVarInt(playerid, "duel_number"));
		}
	case D_DUEL_1: {
			if(!response) {
				duel_delete(TI[playerid][tDuel],true);
				return 1;
			}
			if(listitem != 9) {
				if(DI[TI[playerid][tDuel]][duel_create] == true) return SendClientMessage(playerid, COLOR_GREY, "Запрещено изменять, после создания лобби");
			}
			switch(listitem) {
			case 0: {
					DI[TI[playerid][tDuel]][duel_type] = (DI[TI[playerid][tDuel]][duel_type] == 0) ? 1 : (DI[TI[playerid][tDuel]][duel_type] == 1) ? 2 : 0;
					duel_message(playerid,TI[playerid][tDuel]);
				}
			case 1: {
					DI[TI[playerid][tDuel]][duel_raund] = (DI[TI[playerid][tDuel]][duel_raund] == 1) ? 3 : (DI[TI[playerid][tDuel]][duel_raund] == 3) ? 5 : (DI[TI[playerid][tDuel]][duel_raund] == 5) ? 11 : 1;
					duel_message(playerid,TI[playerid][tDuel]);
				}
			case 2: {
					D(playerid,D_DUEL_MONEY,DSI, ""P"Взнос","\n\n"W"Введите сумму взноса:\n\n\
																Миниальный взнос: "ORANGE"$1000\n\
																"W"Максимальный взнос: "ORANGE"$50000","Изменить","Отмена");
				}
			case 3: {
					DI[TI[playerid][tDuel]][duel_gun] = (DI[TI[playerid][tDuel]][duel_gun] == 0) ? 1 : (DI[TI[playerid][tDuel]][duel_gun] == 1) ? 2 : (DI[TI[playerid][tDuel]][duel_gun] == 2) ? 3 : (DI[TI[playerid][tDuel]][duel_gun] == 3) ? 4 : 0;
					duel_message(playerid,TI[playerid][tDuel]);
				}
			case 4: {
					DI[TI[playerid][tDuel]][duel_gun_2] = (DI[TI[playerid][tDuel]][duel_gun_2] == 0) ? 1 : (DI[TI[playerid][tDuel]][duel_gun_2] == 1) ? 2 : (DI[TI[playerid][tDuel]][duel_gun_2] == 2) ? 3 : (DI[TI[playerid][tDuel]][duel_gun_2] == 3) ? 4 : (DI[TI[playerid][tDuel]][duel_gun_2] == 4) ? 5 : 0;
					duel_message(playerid,TI[playerid][tDuel]);
				}
			case 5: {
					DI[TI[playerid][tDuel]][duel_map] = (DI[TI[playerid][tDuel]][duel_map] == 0) ? 1 : (DI[TI[playerid][tDuel]][duel_map] == 1) ? 2 : 0;
					duel_message(playerid,TI[playerid][tDuel]);
				}
			case 6: {
					D(playerid,D_DUEL_HEALTH,DSI, ""P"Здоровье","\n\n"W"Введите состояние здоровья на дуэли:\n\n\
																Миниальное состояние: "P"10\n\
																"W"Максимальное состояние: "P"200","Изменить","Отмена");
				}
			case 7: {
					D(playerid,D_DUEL_ARMOUR,DSI, ""P"Броня","\n\n"W"Введите состояние брони на дуэли:\n\n\
																Миниальное состояние: "P"0\n\
																"W"Максимальное состояние: "P"100","Изменить","Отмена");
				}
			case 8: {
					D(playerid,D_DUEL_PASSWORD,DSI, ""P"Пароль","\n\n"W"Введите пароль для входа в лобби:\n\n\
																Пароль должен состоять из 4х цифр:","Изменить","Отмена");
				}
			case 9: {
					if(DI[TI[playerid][tDuel]][duel_create] == false)
					{
						if(DI[TI[playerid][tDuel]][duel_type] == 2 && DI[TI[playerid][tDuel]][duel_map] != 2) return SendClientMessage(playerid, COLOR_GREY, "Для игры в режиме 3х3 используется только карта № 3");
						if(GetPlayerMoneyEx(playerid) < DI[TI[playerid][tDuel]][duel_money]) {
							SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств для взноса");
							new id = TI[playerid][tDuel];
							DI[id][duel_owner_id] = DI[id][duel_id][0] = DI[id][duel_id][1] = DI[id][duel_id][2] = DI[id][duel_id][3] = DI[id][duel_id][4] = DI[id][duel_id][5] = INVALID_PLAYER_ID;
							DI[id][duel_gun] = DI[id][duel_gun_2] = 0;
							DI[id][duel_money] = 1000;
							DI[id][duel_raund] = 1;
							DI[id][duel_type] = 0;
							DI[id][duel_map] = 0;
							DI[id][duel_health] = 100;
							DI[id][duel_armour] = 0;
							DI[id][duel_start] = false;
							DI[id][duel_create] = false;
							DI[id][duel_point_1] = DI[id][duel_point_2] = 0;
							TI[playerid][tDuel] = -1;
							return 1;
						}
						GiveMoney(playerid,-DI[TI[playerid][tDuel]][duel_money],"взнос дуэль");
						DI[TI[playerid][tDuel]][duel_owner_id] = playerid;
						DI[TI[playerid][tDuel]][duel_id][0] = playerid;
						DI[TI[playerid][tDuel]][duel_create] = true;
						TI[playerid][tDuelLobby] = 0;
						if(DI[TI[playerid][tDuel]][duel_type] == 1) SendOk(playerid,"Вы заняли место №1 в команде №1");
						else if(DI[TI[playerid][tDuel]][duel_type] == 2) SendOk(playerid,"Вы заняли место №1 в команде №1");
						SendOk(playerid,"Лобби успешно создано");
					}
					else {
						DI[TI[playerid][tDuel]][duel_create] = false;
						SendOk(playerid,"Лобби успешно удалено");
						duel_delete(TI[playerid][tDuel],false);
					}
				}
			}
		}
	case D_DUEL_PASSWORD: {
			if(!response) {
				duel_message(playerid,TI[playerid][tDuel]);
				return 1;
			}
			if(strlen(inputtext) != 4 || isNumeric(inputtext) || inputtext[0] == '0') return D(playerid,D_DUEL_PASSWORD,DSI, ""P"Пароль","\n\n"W"Введите пароль для входа в лобби:\n\n\
																Пароль должен состоять из 4х цифр:","Изменить","Отмена");
			DI[TI[playerid][tDuel]][duel_password] = strval(inputtext);
			
			duel_message(playerid,TI[playerid][tDuel]);
		}
	case D_DUEL_HEALTH: {
			if(!response) {
				duel_message(playerid,TI[playerid][tDuel]);
				return 1;
			}
			if(strval(inputtext) < 10 || strval(inputtext) > 200) return D(playerid,D_DUEL_HEALTH,DSI, ""P"Здоровье","\n\n"W"Введите состояние здоровья на дуэли:\n\n\
																Миниальное состояние: "P"10\n\
																"W"Максимальное состояние: "P"200","Изменить","Отмена");
			DI[TI[playerid][tDuel]][duel_health] = strval(inputtext);
			duel_message(playerid,TI[playerid][tDuel]);
		}
	case D_DUEL_ARMOUR: {
			if(!response) {
				duel_message(playerid,TI[playerid][tDuel]);
				return 1;
			}
			if(strval(inputtext) < 0 || strval(inputtext) > 100) return D(playerid,D_DUEL_ARMOUR,DSI, ""P"Броня","\n\n"W"Введите состояние брони на дуэли:\n\n\
																Миниальное состояние: "P"0\n\
																"W"Максимальное состояние: "P"100","Изменить","Отмена");
			DI[TI[playerid][tDuel]][duel_armour] = strval(inputtext);
			duel_message(playerid,TI[playerid][tDuel]);
		}
	case D_DUEL_MONEY: {
			if(!response) {
				duel_message(playerid,TI[playerid][tDuel]);
				return 1;
			}
			if(strval(inputtext) < 1000 || strval(inputtext) > 50000) return D(playerid,D_DUEL_MONEY,DSI, ""P"Взнос","\n\n"W"Введите сумму взноса:\n\n\
																Миниальный взнос: "ORANGE"$1000\n\
																"W"Максимальный взнос: "ORANGE"$50000","Изменить","Отмена");
			DI[TI[playerid][tDuel]][duel_money] = strval(inputtext);
			duel_message(playerid,TI[playerid][tDuel]);
		}
	case D_CODE_BANK_1: {
			if(!response) return true;
			D(playerid,D_CODE_BANK,DSL," ","Поговорить с Karen\nЗабрать код у программиста", "Выбрать","Закрыть");
		}
	case D_ARENDA_MOPED: {
			if(!response) return true;
			if(TI[playerid][tMoped] != INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "Вы уже арендовали мопед");
			if(PI[playerid][pCash] < 50) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			GiveMoney(playerid,-50,"аренда мопеда");
			new Float:a_x, Float:a_y, Float:a_z, Float:z;
			GetPlayerPos(playerid, a_x, a_y, a_z);
			GetPlayerFacingAngle(playerid, z);
			if(IsPlayerInRangeOfPoint(playerid, 15.0, 1782.5869,-1885.4102,13.3912)) TI[playerid][tMoped] = A_CreateVehicle(462,1786.6724,-1885.2957,13.3942, z, 11, 1, 1500, VEHICLE_TYPE_PLAYER); // spawn
			else TI[playerid][tMoped] = A_CreateVehicle(462,a_x, a_y, a_z, z, 11, 1, 1500, VEHICLE_TYPE_PLAYER); // spawn
			PutPlayerInVehicle(playerid, TI[playerid][tMoped], 0);
			new vehicleid = GetPlayerVehicleID(playerid);
			VehicleInfo[vehicleid][vFuel] = 50;
			VehicleInfo[vehicleid][vAkum] = 50;
			GetVehicleParamsEx(TI[playerid][tMoped],engine,lights,alarm,doors,bonnet,boot,objective);
			ToggleEngine(TI[playerid][tMoped],playerid);
		}
	case D_CAS_LIFT: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 298.346527, -137.589859, 1029.644531))
					{
						if(!stats_lift) return SendClientMessage(playerid, COLOR_GREY, "Лифт уже на первом этаже");
						if(l_start > 0 && l_start != 3) return SendClientMessage(playerid, COLOR_GREY, "Лифт находится в пути");
						MoveDynamicObject(l_casino[3], 300.330657, -135.845367, 1036.068481,1, 0.000007, 0.000000, 89.999977);
						MoveDynamicObject(l_casino[4], 300.387695, -139.651321, 1036.068481,1, -0.000007, -0.000000,-89.999954);
						SendOk(playerid,"Вы вызвали лифт");
						l_start = 4;
					}
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 298.466552, -137.670822, 1035.534423))
					{
						if(stats_lift) return SendClientMessage(playerid, COLOR_GREY, "Лифт уже на втором этаже");
						if(l_start > 0) return SendClientMessage(playerid, COLOR_GREY, "Лифт находится в пути");
						MoveDynamicObject(l_casino[1], 300.330657, -135.845367, 1030.289184, 1, 0.000014, 0.000000, 89.999954);
						MoveDynamicObject(l_casino[2], 300.387695, -139.651321, 1030.289184,1,-0.000014, 0.000000, -89.999954);
						SendOk(playerid,"Вы вызвали лифт");
						l_start = 1;
					}
				}
			case 1: {
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 298.346527, -137.589859, 1029.644531))
					{
						if(stats_lift) return SendClientMessage(playerid, COLOR_GREY, "Лифт не приехал на первый этаж");
						if(l_start > 0) return SendClientMessage(playerid, COLOR_GREY, "Лифт находится в пути");
						MoveDynamicObject(l_casino[1], 300.330657, -135.845367, 1030.289184, 1, 0.000014, 0.000000, 89.999954);
						MoveDynamicObject(l_casino[2], 300.387695, -139.651321, 1030.289184,1,-0.000014, 0.000000, -89.999954);
						SendOk(playerid,"Вы выбрали второй этаж");
						l_start = 1;
					}
					if(IsPlayerInRangeOfPoint(playerid, 2.0, 298.466552, -137.670822, 1035.534423))
					{
						if(!stats_lift) return SendClientMessage(playerid, COLOR_GREY, "Лифт не приехал на второй этаж");
						if(l_start > 0 && l_start != 3) return SendClientMessage(playerid, COLOR_GREY, "Лифт находится в пути");
						MoveDynamicObject(l_casino[3], 300.330657, -135.845367, 1036.068481,1, 0.000007, 0.000000, 89.999977);
						MoveDynamicObject(l_casino[4], 300.387695, -139.651321, 1036.068481,1, -0.000007, -0.000000,-89.999954);
						SendOk(playerid,"Вы выбрали первый этаж");
						l_start = 4;
					}
				}
			}
		}
	case DIALOG_PRITON: {
			if(!response) return true;
			new id = TI[playerid][tSelectedBusinessID];
			new control[32];
			switch(gBusiness[id][bizzMafia]) {
			case fLCN: control = "Итальянская мафия";
			case fYAKUZA: control = "Японская мафия";
			case fRM: control = "Русская мафия";
			default: control = "Отсутствует";
			}
			switch(listitem) {
			case 0: {
					static const f_str[] = ""W"Укажите количество наркотиков для покупки:\n\n\
				"O"Примечание:"W"\n\
				\tСтоимость "P"1г"W" наркотиков: "GREEN"$%d"W"\n\
				\tВ карман поместится: "P"%d"W"\n";
					new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5)];
					format(string,sizeof(string),f_str,gBusiness[id][bizzPrice]);
					D(playerid,D_BUYNARKO,DSI, ""P"Покупка наркотиков", string, "Купить", "Отмена");
				}
			case 1: {
					if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Доступно только бандитам!");
					if(!PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная функция");
					if(FI[PI[playerid][pMember]][fDrugsBuy]) return SendClientMessage(playerid, COLOR_GREY, "Вы уже сделали заказ. Ожидайте, когда мафии привезут наркотики");
					new string[300];
					format(string,sizeof(string),""W"Введите кол-во наркотиков, которое желаете заказать:"GREEN" (1г = %d$)"W"\nВ общаке сейчас "P"%d г наркотиков\n\n",gBusiness[56][bizzPrice],FI[PI[playerid][pMember]][fDrugs]);
					D(playerid,D_BAND_DRUGS,DSI,""P"Заказ наркотиков",string,"Далее","Назад");
				}
			case 2: {
					new string_gung[200], count_drugs = 0;
					if(FI[fBALLAS][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{CC00FF}The Ballas"W" [%d г]\n",string_gung,FI[fBALLAS][fDrugsBuy]);
						count_drugs++;
					}
					if(FI[fVAGOS][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{ffff00}The Vagos"W" [%d г]\n",string_gung,FI[fVAGOS][fDrugsBuy]);
						count_drugs++;
					}
					if(FI[fGROVE][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{009900}The Grove"W" [%d г]\n",string_gung,FI[fGROVE][fDrugsBuy]);
						count_drugs++;
					}
					if(FI[fAZTEC][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{00CCFF}The Aztecas"W" [%d г]\n",string_gung,FI[fAZTEC][fDrugsBuy]);
						count_drugs++;
					}
					if(FI[fRIFA][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{6666FF}The Rifa"W" [%d г]\n",string_gung,FI[fRIFA][fDrugsBuy]);
						count_drugs++;
					}
					if(!count_drugs) format(string_gung,sizeof(string_gung),"Заказы отсутствуют");
					new string[500];
					format(string,sizeof(string),""O"\tИнформация о наркопритоне:"W"\n\nВладелец:"P" %s"W"\nНаркотиков:"P" %dг / 10000г"W"\n\n\
			Стоимость за 1 г:"P" %d$"W"\n\nЗаказы, которые необходимо выполнить в ближайшее время:\n\n%s",control, gBusiness[id][bizzProduct], gBusiness[id][bizzPrice],string_gung);
					D(playerid,DIALOG_PRITON_1,DSM,""P"Информация",string,"Назад","");
				}
			case 3: {
					if(gBusiness[id][bizzMafia] != PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к управлению наркопритоном");
					D(playerid,DIALOG_PRITON_2,DSL,""P"Управление притоном","1. Изменить стоимость за грамм\n2. Снять прибыль с кассы\n3. Заказать партию наркотиков\n4. Статистика наркопритона","Выбрать","Закрыть");
				}
			}
		}
	case DIALOG_PRITON_7: {
			if(!response) return true;
			D(playerid,DIALOG_PRITON_2,DSL,""P"Управление притоном","1. Изменить стоимость за грамм\n2. Снять прибыль с кассы\n3. Заказать партию наркотиков\n4. Статистика наркопритона","Выбрать","Закрыть");
		}
	case DIALOG_PRITON_6: {
			if(!response) return true;
			new carid = GetPlayerVehicleID(playerid);
			switch(listitem) {
			case 0: {
					if(!VG[carid][vgDrugs]) return SendClientMessage(playerid, COLOR_GREY, "В фургоне нет наркотиков");
					gBusiness[56][bizzProduct] += VG[carid][vgDrugs];
					if(gBusiness[56][bizzProduct] >= 10000) gBusiness[56][bizzProduct] = 10000;
					UpdateBusinessData(57,"product",gBusiness[56][bizzProduct]);
					SendOk(playerid,"Наркотики с фургона разгружены в наркопритон");
					VG[carid][vgDrugs] = 0;
				}
			case 1: {
					if(VG[carid][vgDrugs] >= 2000) return SendClientMessage(playerid, COLOR_GREY, "Грузовик полон");
					static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите загрузить в грузовик:\n\n\
									Доступно наркотиков: "ORANGE"%d\n\
									"W"В грузовик поместится: "ORANGE"%d";
					new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
					format(string,sizeof(string),f_str,gBusiness[56][bizzProduct],2000-VG[carid][vgDrugs]);
					D(playerid, D_MAFIA_CARM_2, DSI, ""P"Загрузка наркотиков",string, "Загрузить", "Отмена");
					DeletePVar(playerid,"DrugsMafiaCar");
					DisablePlayerCheckpoint(playerid);
				}
			}
		}
	case DIALOG_PRITON_5: {
			if(!response) return true;
			if(order_drugs) return SendClientMessage(playerid, COLOR_GREY, "Наркотики уже заказаны / не все разгружено");
			if(gBusiness[56][bizzProduct] > 10000) return SendClientMessage(playerid, COLOR_GREY, "Склад заполнен наркотиками");
			drugs_pickup = CreateDynamicPickup(19135,23,2111.4978,-96.0636,2.1438);
			drugs_text = CreateDynamic3DTextLabel(""O"Разгрузка лодки"W"\n\nКоличество наркотиков:"P" 2000г\n\n"G"Нажмите{ECC987} 'ALT'"G" чтобы взять ящик",0xFFFFFFFF,2111.4978,-96.0636,2.1438,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
			order_drugs = 2000;
			SendOk(playerid,"Вы заказали лодку с наркотиками. Отправляйтесь в Polomino Creek на разгрузку");
			EnableGPSForPlayer(playerid,2124.6794,-88.8296,2.0135);
		}
	case DIALOG_PRITON_4: {
			if(!response) return true;
			if(strval(inputtext) < 1 || strval(inputtext) > gBusiness[56][bizzBank]) {
				new string[120];
				format(string,sizeof(string),""W"В кассе сейчас:"GREEN" %d$"W"\n\nВведите ниже количество денег, сколько хотите снять:",gBusiness[56][bizzBank]);
				D(playerid,DIALOG_PRITON_4,DSI,""P"Снятие денег",string,"Далее","Закрыть");
				return true;
			}
			gBusiness[56][bizzBank] -= strval(inputtext);
			UpdateBusinessData(57,"bank",gBusiness[56][bizzBank]);
			SendOk(playerid,"Вы сняли деньги с наркопритона");
			GiveMoney(playerid,strval(inputtext),"деньги с наркопритона");
			return true;
		}
	case DIALOG_PRITON_3: {
			if(!response) return true;
			if(!strval(inputtext)) return D(playerid,DIALOG_PRITON_3,DSI,""P"Цена за грамм",""W"Введите ниже стоимость за 1 грамм наркотиков:\n\nСтоимость должна быть от 15$ до 20$","Далее","Закрыть");
			if(strval(inputtext) < 15 || strval(inputtext) > 20) return D(playerid,DIALOG_PRITON_3,DSI,""P"Цена за грамм",""W"Введите ниже стоимость за 1 грамм наркотиков:\n\n"G"* Стоимость должна быть от 15$ до 20$","Далее","Закрыть");
			gBusiness[56][bizzPrice] = strval(inputtext);
			UpdateBusinessData(57,"price",strval(inputtext));
			SendOk(playerid,"Вы успешно изменили цену за 1 грамм наркотиков");
		}
	case DIALOG_PRITON_2: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					if(!PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только лидеру организации");
					D(playerid,DIALOG_PRITON_3,DSI,""P"Цена за грамм",""W"Введите ниже стоимость за 1 грамм наркотиков:\n\nСтоимость должна быть от 15$ до 20$","Далее","Закрыть");
				}
			case 1: {
					if(!PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только лидеру организации");
					new string[120];
					format(string,sizeof(string),""W"В кассе сейчас:"GREEN" %d$"W"\n\nВведите ниже количество денег, сколько хотите снять:",gBusiness[56][bizzBank]);
					D(playerid,DIALOG_PRITON_4,DSI,""P"Снятие денег",string,"Далее","Закрыть");
				}
			case 2: {
					if(PI[playerid][pRank] < 8) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 8-го ранга");
					D(playerid,DIALOG_PRITON_5,DSM,""P"Заказ наркотиков",""W"Вы действительно хотите сделать заказ?\n\n\
		Партия наркотиков прибудет с другого штата в дереню"GREEN" Polomino Creek"W"\n\nВ лодке "O"2.000г"W" наркотиков, берите грузовик, и езжайте в деревню.\nБудьте аккуратны, чтобы не спалили копы","Заказать","Закрыть");
				}
			case 3: {
					new control[32];
					switch(gBusiness[56][bizzMafia]) {
					case fLCN: control = "Итальянская мафия";
					case fYAKUZA: control = "Японская мафия";
					case fRM: control = "Русская мафия";
					default: control = "Отсутствует";
					}
					new string[500];
					format(string,sizeof(string),""O"\tИнформация о наркопритоне:"W"\n\nВладелец:"P" %s"W"\nНаркотиков:"P" %dг / 10000г"W"\n\
			Стоимость за 1г:"P" %d$"W"\n\nОбщая прибыль:"P" %d$"W"\nЗаработано за сутки:"P" %d$"W"",control, gBusiness[56][bizzProduct], gBusiness[56][bizzPrice],gBusiness[56][bizzBank],gBusiness[56][bizzBankDay]);
					D(playerid,DIALOG_PRITON_7,DSM,""P"Информация",string,"Назад","");
				}
			}
		}
	case DIALOG_PRITON_1: {
			if(!response) return true;
			new id = TI[playerid][tSelectedBusinessID];
			new str[112];
			format(str,sizeof(str),"1. Купить наркотики [1 г ="GREEN" %d$"W"]\n2. Заказать наркотики\n3. Информация\n4. Управление притоном",gBusiness[id][bizzPrice]);
			D(playerid,DIALOG_PRITON,DSL, ""P"Наркопритон", str, "Выбрать", "Отмена");
		}
	case D_COP_DIALOG: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					new string[128];
					format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[CarsInfo[playerid][carModel][0]-400][trName],gTransport[CarsInfo[playerid][carModel][1]-400][trName]);
					D(playerid,D_VEH_NUMBER,DSL,""P"Покупка гос. номера",string,"Выбрать","Закрыть");
				}
			case 1: {
					if(lic[playerid][3]) return SendClientMessage(playerid, COLOR_GREY, "Вы уже получили данную лицензию");
					D(playerid,D_COP_DIALOG_2,DSM, ""P"Лицензия на оружие",""W"Вы действительно хотите купить лицензию на оружие за"GREEN" 50.000$?" ,"Да","Отмена");
				}
			case 2:
				{
					if(!PI[playerid][pSearch]) return SendClientMessage(playerid, COLOR_GREY, "Вы не находитесь в розыске");
					static const f_str[] = ""W"Вы собираетесь сдаться с повинной\n\
										Это укоротит Ваш срок вдвое\n\
										Ваш уровень розыска: "P"%d\n\
										"W"Примерное время заключения: "P"%d сек\n\
										"W"При добровольной сдаче время заключения составит: "GREEN"%d сек\n\n\
										"YELLOW"Вы действительно хотите сдаться добровольно?";
					new string[sizeof(f_str) +1 + (-2 + 5) + (-2 + 4) + (-2 + 5)];
					format(string,sizeof(string),f_str,PI[playerid][pSearch],PI[playerid][pSearch]*600,PI[playerid][pSearch]*600/2);
					D(playerid,D_COP_ARREST,DSM, ""P"Сдача с повинной",string,"Да","Отмена");
				}
			}
		}
	case D_COP_DIALOG_2: {
			if(!response) return true;
			if(PI[playerid][pCash] < 50000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			SendOk(playerid,"Вы купили лицензию на оружие. Теперь Вы можете владеть оружием");
			lic[playerid][3] = 1;
			UpdateLicenses(playerid);
			GiveMoney(playerid,-50000, "лицензия на оружие");
		}
	case D_AMMOSG: {
			if(!response) return true;
			if(!GetPVarInt(playerid,"gun_weap")) {
				SetPVarInt(playerid,"gun_weap",1);
				SetPlayerAttachedObject(playerid, 7, 19424, 2,0.05,0.0,0.0,90.0,360.0,270.0);
				SendOk(playerid,"Вы начали тренировку. Займите свободную кабинку");
			}
			else {
				DeletePVar(playerid,"gun_weap");
				RemovePlayerAttachedObject(playerid, 7);
				SendOk(playerid,"Вы закончили тренировку");
			}
		}
	case D_QUESTS: {
			if(!response) return true;
			pc_cmd_menu(playerid,"");
		}
	case D_FAMILY_RASFORM: {
			if(!response) return pc_cmd_fmenu(playerid);
			foreach(new i:Player)
			{
				if(!TI[i][tLogin] || PI[i][pFamily] != PI[playerid][pFamily] || i == playerid) continue;
				PI[i][pFamily] = 0;
				PI[i][pFamRank] = 0;
				SendOk(i,"Владелец семьи сделал расформирование состава");
			}
			
			new query_string [ 350 ];
			format(query_string, sizeof(query_string),"UPDATE `accounts` SET `pFamRank` = '0',`family` = '0' WHERE `family` = '%d' AND `pFamRank` != 8", PI[playerid][pFamily]) ;
			mysql_tquery(connects, query_string, "", "" ) ;
			
			SendOk(playerid,"Семья успешно расформирована");
		}
	case D_NEWS_EXI: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					SetPlayerPosAC(playerid,1570.6003,-1333.5015,16.4844, 0, 0);
					SetPlayerFacingAngle(playerid, 321.2440);
					SetCameraBehindPlayer(playerid);
				}
			case 1: {
					SetPlayerPosAC(playerid,1547.8295,-1365.0126,326.2109, 0, 0);
					SetPlayerFacingAngle(playerid, 145.4391);
					SetCameraBehindPlayer(playerid);
				}
			}
		}
	case D_LICENSE_GIVE: {
			if(!response) return true;
			new player = GetPVarInt(playerid,"lic")-1, lic_name[24];
			new cash = GetPVarInt(playerid,"lic_cash");
			
			switch(listitem) {
			case 0: strcat(lic_name,"наземный транспорт");
			case 1: strcat(lic_name,"воздушный транспорт");
			case 2: strcat(lic_name,"водный транспорт");
			}
			if(active_accept(player)) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
			if(lic[player][listitem]) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже есть данная лицензия");
			if(PI[player][pCash] < GetPVarInt(playerid,"lic_cash")) return SendClientMessage(playerid, COLOR_GREY, "У игрока недостаточно денег");

			new string[144];
			format(string, sizeof(string), ""P"%s "W"хочет продать Вам лицензию на"YELLOW" %s"W" за %i$", player_name[playerid], lic_name, cash);
			SendUse(player, string);
			SendClientMessage(player,COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

			format(string, sizeof(string), "Вы предложили "P"%s "W"купить лицензию на"YELLOW" %s"W" за %i$", player_name[player], lic_name, cash);
			SendUse(playerid, string);
			
			SetPVarInt(player,"lic_", playerid + 1);
			SetPVarInt(player,"lic_type",listitem);
			SetPVarInt(player,"lic_cash",cash);
		}
	case D_FAMILY_NATION: {
			if(!response) return pc_cmd_fmenu(playerid);
			new fam = PI[playerid][pFamily]-1;
			if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return SendClientMessage(playerid, COLOR_GREY, "Доступно только владельцу семьи");
			gFamily[fam][famNation] = listitem+1;
			new query[128];
			mysql_format(connects, query, sizeof(query),"UPDATE `family` SET `nation` = '%i' WHERE `id` = '%d' LIMIT 1",gFamily[fam][famNation],fam+1);
			mysql_tquery(connects, query,"","");
			SendOk(playerid,"Национальность семьи успешно изменена");
		}
	case D_TAXI_FARE:
		{
			if(!response) return true;
			switch(listitem) {
			case 0: D(playerid,D_TAXI_FARE_1,DSI,""P"Тариф","\n"YELLOW"Изменение тарифа такси (от 75$ до 150$)"W"\n\nВведите ниже новую стоимость за 1 км езды:","Далее","Отмена");
			case 1: D(playerid,D_TAXI_FARE_2,DSI,""P"Слоган","\n"YELLOW"Изменение слогана такси (до 13 символов)"W"\n\nВведите ниже новый слоган на лобовое стекло:","Далее","Отмена");
			}
		}
	case D_TAXI_FARE_1: {
			if(!response) return true;
			new veh = GetPlayerVehicleID(playerid), tar[10];
			if(strval(inputtext) < 75 || strval(inputtext) > 150) return D(playerid,D_TAXI_FARE_1,DSI,""P"Тариф","\n"YELLOW"Изменение тарифа такси (от 75$ до 30$)"W"\n\nВведите ниже новую стоимость за 1 км езды:","Далее","Отмена");
			VehicleInfo[veh][vTarif] = strval(inputtext); 
			SendOk(playerid,"Тариф на поездку успешно установлен. Вводите (/count) для включения тарифа игроку");
			format(tar,10,"%i$",VehicleInfo[veh][vTarif]);
			DestroyDynamicObject(VehicleInfo[veh][vTaxi][0]);
			VehicleInfo[veh][vTaxi][0] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterialText(VehicleInfo[veh][vTaxi][0], 0, tar, 130, "Ariel", 27, 1, -1, 0, 0);
			AttachDynamicObjectToVehicle(VehicleInfo[veh][vTaxi][0], veh, -0.497, 1.404, 0.129, 4.099, -54.499, 89.899);
		}
	case D_TAXI_FARE_2: {
			if(!response) return true;
			new veh = GetPlayerVehicleID(playerid);
			if(strlen(inputtext) < 1 || strlen(inputtext) > 13) return D(playerid,D_TAXI_FARE_2,DSI,""P"Слоган","\n"YELLOW"Изменение слогана такси (до 13 символов)"W"\n\nВведите ниже новый слоган на лобовое стекло:","Далее","Отмена");
			SendOk(playerid,"Слоган на такси успешно установлен!");
			strmid(VehicleInfo[veh][vSlog], inputtext, 0, strlen(inputtext), 36);
			DestroyDynamicObject(VehicleInfo[veh][vTaxi][1]);
			VehicleInfo[veh][vTaxi][1] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(VehicleInfo[veh][vTaxi][1], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(VehicleInfo[veh][vTaxi][1], 0, VehicleInfo[veh][vSlog], 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(VehicleInfo[veh][vTaxi][1], veh, 0.000, 0.434, 0.711, 360.000, -54.999, 90.000);
		}
	case D_JOB_TAXI: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(PI[playerid][pCash] < 500) {
				SendClientMessage(playerid, COLOR_GREY, "У Вас не достаточно денег для аренды авто для продажи еды");
				RemovePlayerFromVehicleAC(playerid);
				return true;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			GiveMoney(playerid,-500,"аренда авто такси");
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			SendOk(playerid,"Вы арендовали автомобиль. Установите тариф:"G" /fare");
			SetPVarInt(playerid, "veh_id_taxi",GetPlayerVehicleID(playerid));
		}
	case D_JOB_INC: {
			if(!response) return true;
			if(IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы состоите в банде. Вам нельзя здесь работать");
			if(!GetPVarInt(playerid,"inc_start"))
			{
				SetPVarInt(playerid,"inc_start",1);
				A_SetPlayerSkin(playerid, 71);
				SendClientMessage(playerid,COLOR_ORANGE, "Рабочий день начат!");
				SendClientMessage(playerid,COLOR_WHITE, "Арендуйте на улице инкассаторскую машину, далее загрузитесь деньги");
				SendClientMessage(playerid,COLOR_WHITE, "Отвозите деньги в банкоматы, и получайте за это деньги!");
			}
			else
			{
				DeletePVar(playerid,"inc_start");
				A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
				if(GetPVarInt(playerid,"inc_start")) SetVehicleToRespawn(GetPVarInt(playerid,"inc_start")), DeletePVar(playerid,"inc_start");
				SendClientMessage(playerid, COLOR_ORANGE, "Рабочий день закончен!");
			}
		}
	case D_JOB_INCASS: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(PI[playerid][pCash] < 500) {
				SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
				RemovePlayerFromVehicleAC(playerid);
				return true;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			GiveMoney(playerid,-500,"аренда инкассаторский кар");
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			SendOk(playerid,"Вы арендовали автомобиль. Чтобы загрузить деньги, используйте"ORANGE" /bload");
			SetPVarInt(playerid, "veh_id_inc",GetPlayerVehicleID(playerid));
		}
	case D_FAMILY_TYPE: {
			if(!response) return pc_cmd_fmenu(playerid);
			new fam = PI[playerid][pFamily]-1;
			new string[75]; 
			if(gFamily[fam][famTalon] < 1000) return pc_cmd_fmenu(playerid), SendClientMessage(playerid, COLOR_GREY, "У вашей семьи недостаточно талонов");
			gFamily[fam][famTalon] -= 1000;
			SendOk(playerid, "Вы купили галочку. Теперь рядом с названием семьи будет стоять префикс [$]");
			gFamily[fam][famType] = 1;
			
			new query[128];
			mysql_format(connects, query, sizeof(query),"UPDATE `family` SET `type` = '1',`talon` = '%d' WHERE `id` = '%d' LIMIT 1",gFamily[fam][famTalon],fam+1);
			mysql_tquery(connects, query,"","");
			
			format(string,sizeof(string),"[FAMILY] "W"%s{%s} купил галочку для семьи",player_name[playerid],FamilyColor[gFamily[PI[playerid][pFamily]-1][famColor]]);
			FamMSG(PI[playerid][pFamily],string);
		}
	case D_FAMILY_TRANSFER: {
			if(!response) return true;
			new id;
			if(sscanf(inputtext, "i", id)) {
				D(playerid,D_FAMILY_TRANSFER,DSI,""P"Передача прав семьи",""W"Введите ниже ID игрока, которому хотите передать права владения семьей\n\
			После передачи прав, Вы не сможете больше управлять семьей","Далее","Закрыть");
				return true;
			}
			if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, not_id);
			if(PI[id][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Игрок состоит в семье");
			if(gFamily[PI[playerid][pFamily]-1][famHouse]) return SendClientMessage(playerid, COLOR_GREY, "Чтобы передать семью, продайте у семьи дом");
			if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя передать семью самому себе");
			SetPVarInt(playerid,"transf_id",id+1);
			new string[130];
			format(string,sizeof(string),""W"Вы действительно хотите передать свою семью игроку"ORANGE" %s?\n\n"G"* Вернуть обратно семью будет нельзя",player_name[id]);
			D(playerid,D_FAMILY_TRANSFER_1,DSM,""P"Передача прав семьи",string,"Передать","Закрыть");
		}
	case D_FAMILY_TRANSFER_1: {
			if(!response) DeletePVar(playerid,"trasf_id");
			new player = GetPVarInt(playerid,"transf_id")-1;
			new fam = PI[playerid][pFamily]-1;
			
			new string[180];
			format(string, sizeof(string), ""P"%s"W" предложил Вам передать управление семьей "ORANGE"%s",player_name[playerid],gFamily[fam][famName]);
			SendUse(player, string);
			SendClientMessage(player, COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
			format(string, sizeof(string),"Вы предложили "P"%s"W" передать управление своей семьей "ORANGE"%s",player_name[player],gFamily[fam][famName]);
			SendUse(playerid, string);
			
			SetPVarInt(player,"fam_owner",playerid + 1);
			SetPVarInt(player,"family",fam);
			
			DeletePVar(playerid,"fam");
			DeletePVar(playerid,"transf_id");
		}
	case D_LSPD_WEAP: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					if(!start_work[playerid]) {
						A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
						SendOk(playerid,"Рабочий день начат");
						TI[playerid][tMasked] = 0;
						SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
						start_work[playerid] = 1;
						PI[playerid][pJob] = 0;
						UpdatePlayerData(playerid,"pJob",PI[playerid][pJob]);
						UpdatePlayerData(playerid,"FracDuty",start_work[playerid]);
						return 1;
					}
					ResetPlayerWeapons(playerid);
					SendOk(playerid, "Рабочий день окончен");
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					start_work[playerid] = 0;
					A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
					SetArmour(playerid, 0);
					UpdatePlayerData(playerid,"FracDuty",start_work[playerid]);
				}
			case 1: ShowGetGun(playerid);
			case 2: Police_eqment(playerid);
			}
		}
	case D_MAYOR_INFO: {
			if(!response) return true;
			switch(listitem) {
			case 0:
				{
					if(!start_work[playerid]) {
						A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
						SendOk(playerid,"Рабочий день начат");
						TI[playerid][tMasked] = 0;
						SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
						start_work[playerid] = 1;
						PI[playerid][pJob] = 0;
						UpdatePlayerData(playerid,"pJob",PI[playerid][pJob]);
						UpdatePlayerData(playerid,"FracDuty",start_work[playerid]);
						return 1;
					}
					ResetPlayerWeapons(playerid);
					SendOk(playerid, "Рабочий день окончен");
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					start_work[playerid] = 0;
					A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
					SetArmour(playerid, 0);
					UpdatePlayerData(playerid,"FracDuty",start_work[playerid]);
				}
			case 1:
				{
					if(!start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не начали рабочий день");
					if(GunTickGet[playerid][0] > unix) return SendClientMessage(playerid, COLOR_GREY, "Нельзя брать оружие слишком часто");
					GunTickGet[playerid][0] = unix+20;
					GivePlayerWeapon(playerid,24,30);
					GivePlayerWeapon(playerid,3,1);
					SetArmour(playerid, 100.0);
					SetHealth(playerid,100);
					SetFullness(playerid, 100);
					SendOk(playerid,"Вам выдано: Deagle(30пт), бронежилет, сух.паек, дубинка");
				}
			}
		}
	case d_offmembers_list:
		{
			if ( ! response )
			{
				for ( new i = 0 ; i < 10 ; i ++ )
				{
					new pvar_string [ 8 ] ;
					format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", i ) ;
					DeletePVar ( playerid, pvar_string ) ;
				}
				DeletePVar ( playerid, "ofm_list_page" ) ;
				DeletePVar ( playerid, "ofm_list_rows" ) ;
				DeletePVar ( playerid, "ofm_listitem" ) ;
				DeletePVar ( playerid, "ofm_type" ) ;
				return 1 ;
			}
			if ( listitem == 0 )
			{
				new page_id = GetPVarInt ( playerid, "ofm_list_page" ) - 1;
				if ( page_id == 0 )
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы находитесь на первой странице списка членов организации." ) ;
					if( ! GetPVarInt ( playerid, "ofm_type" ) )
					{
						new query_string [ 128 ] ;
						mysql_format(connects, query_string, sizeof(query_string),"SELECT `Name`,`pRank`,`pOnline` FROM `accounts` WHERE `pMember` = '%d' AND `online_status` = '1001'",PI[playerid][pMember]) ;
						mysql_pquery(connects, query_string, "callback_offmembers", "i", playerid ) ;
						return 1;
					}
					new query_string [ 128 ] ;
					mysql_format(connects, query_string, sizeof(query_string),"SELECT `Name`,`pRank`,`pOnline` FROM `accounts` WHERE `pMember` = '%d' AND `pRank` = '%d' AND `online_status` = '1001'",PI[playerid][pMember], GetPVarInt ( playerid, "ofm_type" ) ) ;
					mysql_pquery(connects, query_string, "callback_offmembers", "i", playerid ) ;
					return 1 ;

				}
				SetPVarInt ( playerid, "ofm_list_page", page_id ) ;

				if( ! GetPVarInt ( playerid, "ofm_type" ) )
				{
					new query_string [ 128 ] ;
					mysql_format(connects, query_string, sizeof(query_string),"SELECT `Name`,`pRank`,`pOnline` FROM `accounts` WHERE `pMember` = '%d' AND `online_status` = '1001'",PI[playerid][pMember]) ;
					mysql_pquery(connects, query_string, "callback_offmembers", "i", playerid ) ;
					return 1;
				}
				new query_string [ 128 ] ;
				mysql_format(connects, query_string, sizeof(query_string),"SELECT `Name`,`pRank`,`pOnline` FROM `accounts` WHERE `pMember` = '%d' AND `pRank` = '%d' AND `online_status` = '1001'", PI[playerid][pMember], GetPVarInt ( playerid, "ofm_type" ) ) ;
				mysql_pquery(connects, query_string, "callback_offmembers", "i", playerid ) ;

			}
			else if ( listitem == 1 )
			{
				new page_id = GetPVarInt ( playerid, "ofm_list_page" ) - 1 ;
				if ( ( page_id + 1 ) * 10 >= GetPVarInt ( playerid, "ofm_list_rows" ) )
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы находитесь на последней странице списка членов организации." ) ;
					if( ! GetPVarInt ( playerid, "ofm_type" ) )
					{
						new query_string [ 128 ] ;
						mysql_format(connects, query_string, sizeof(query_string),"SELECT `Name`,`pRank`,`pOnline` FROM `accounts` WHERE `pMember` = '%d' AND `online_status` = '1001'", PI[playerid][pMember]) ;
						mysql_pquery(connects, query_string, "callback_offmembers", "i", playerid ) ;
						return 1;
					}
					new query_string [ 128 ] ;
					mysql_format(connects, query_string, sizeof(query_string),"SELECT `Name`,`pRank`,`pOnline` FROM `accounts` WHERE `pMember` = '%d' AND `pRank` = '%d' AND `online_status` = '1001'", PI[playerid][pMember], GetPVarInt ( playerid, "ofm_type" ) ) ;
					mysql_pquery(connects, query_string, "callback_offmembers", "i", playerid ) ;

					return 1 ;
				}
				SetPVarInt ( playerid, "ofm_list_page", page_id + 2) ;
				if( ! GetPVarInt ( playerid, "ofm_type" ) )
				{
					new query_string [ 128 ] ;
					mysql_format(connects, query_string, sizeof(query_string),"SELECT `Name`,`pRank`,`pOnline` FROM `accounts` WHERE `pMember` = '%d' AND `online_status` = '1001'", PI[playerid][pMember] ) ;
					mysql_pquery(connects, query_string, "callback_offmembers", "i", playerid ) ;
					return 1;
				}
				new query_string [ 128 ] ;
				mysql_format(connects, query_string, sizeof(query_string),"SELECT `Name`,`pRank`,`pOnline` FROM `accounts` WHERE `pMember` = '%d' AND `pRank` = '%d' AND `online_status` = '1001'", PI[playerid][pMember], GetPVarInt ( playerid, "ofm_type" ) ) ;
				mysql_pquery(connects, query_string, "callback_offmembers", "i", playerid ) ;
			}
			else
			{
				new pvar_string [ 40 ], pl_name [ 40 ] ;
				format ( pvar_string, 10, "ofm_%d", listitem - 2 ) ;
				GetPVarString ( playerid, pvar_string, pl_name, 40 ) ;
				SetPVarInt ( playerid, "ofm_listitem", listitem - 2 ) ;
				format ( pvar_string, sizeof ( pvar_string ), ""P"%s", pl_name ) ;
				D(playerid, d_offmembers_pl_menu, DSL, pvar_string, ""P"1."W" Информация об игроке\n"P"2."W" Уволить из организации\n"P"3."W" Повысить/понизить игрока", "Выбрать", "Отмена");
			}
			return 1 ;
		}
	case d_offmembers_selection:
		{
			if(!response) return true;
			if(listitem == 0)
			{
				SetPVarInt ( playerid, "ofm_list_page", 1 ) ;
				new query_string [ 128 ] ;
				mysql_format(connects, query_string, sizeof(query_string),"SELECT `Name`,`pRank`,`pOnline` FROM `accounts` WHERE `pMember` = '%d' AND `online_status` = '1001'", PI[playerid][pMember]) ;
				mysql_pquery(connects, query_string, "callback_offmembers", "i", playerid ) ;
			}
			else D(playerid, d_offmembers_filter, DSI, ""P"Члены организации", ""W"Введите ранг для фильтра: ", "Выбрать", "Отмена");
		}
	case d_offmembers_pl_menu:
		{
			if(!response)
			{
				DeletePVar(playerid, "ofm_listitem" ) ;
				if(!GetPVarInt(playerid, "ofm_type" ) )
				{
					new query_string [ 128 ] ;
					mysql_format(connects, query_string, sizeof(query_string),"SELECT `Name`,`pRank`,`pOnline` FROM `accounts` WHERE `pMember` = '%d' AND `online_status` = '1001'",PI[playerid][pMember]) ;
					mysql_pquery(connects, query_string, "callback_offmembers", "i", playerid ) ;
					return 1;
				}
				new query_string [ 128 ] ;
				mysql_format(connects, query_string, sizeof(query_string),"SELECT `Name`,`pRank`,`pOnline` FROM `accounts` WHERE `pMember` = '%d' AND `pRank` = '%d' AND `online_status` = '1001'",PI[playerid][pMember], GetPVarInt ( playerid, "ofm_type" ) ) ;
				mysql_pquery(connects, query_string, "callback_offmembers", "i", playerid ) ;
				return 1 ;
			}
			switch ( listitem )
			{
			case 0:
				{
					new pvar_string [ 40 ], pl_name [ 40 ] ;
					format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
					GetPVarString ( playerid, pvar_string, pl_name, 40 ) ;
					new query_string [ 128 ] ;
					mysql_format(connects, query_string, sizeof(query_string),"SELECT `pRank`,`fraction_date`,`pOnline` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", pl_name ) ;
					mysql_pquery(connects, query_string, "callback_offmembers_info", "i", playerid) ;
				}
			case 1:
				{
					new pvar_string [ 40 ], pl_name [ 40 ] ;
					format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
					GetPVarString ( playerid, pvar_string, pl_name, 40 ) ;
					format ( pvar_string, sizeof ( pvar_string ), "%s", pl_name ) ;

					new query_string [ 400 ];
					mysql_format(connects, query_string, sizeof(query_string),"UPDATE `accounts` SET `pMember` = '0', `pRank` = '0' WHERE `Name` = '%s' LIMIT 1", pl_name ) ;
					mysql_tquery(connects, query_string, "", "" ) ;
					
					format ( query_string, sizeof query_string, "Вы уволили %s из организации", pl_name ) ;
					SendOk(playerid, query_string);
					DeletePVar( playerid, "ofm_listitem");

				}
			case 2: D(playerid, d_offmembers_pl_rank, DSI, ""P"Изменение ранга игрока", ""W"Введите номер ранга, который хотите установить для игрока:", "Выбрать", "Назад" ) ;
			}
		}
	case d_offmembers_pl_menu_info:
		{
			new pvar_string [ 38 ],
			pl_name [ MAX_PLAYER_NAME - 4 ];
			format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
			GetPVarString ( playerid, pvar_string, pl_name, MAX_PLAYER_NAME - 4 ) ;
			format ( pvar_string, sizeof ( pvar_string ), ""P"%s", pl_name ) ;
			D(playerid, d_offmembers_pl_menu, DSL, pvar_string, ""P"1."W" Информация об игроке\n"P"2."W" Уволить из организации\n"P"3."W" Повысить/понизить игрока", "Выбрать", "Отмена");
		}
	case d_offmembers_filter:
		{
			if(!response) return D(playerid, d_offmembers_selection, DSL, ""P"Члены организации", ""P"1."W" Все члены организации оффлайн\n"P"2."W" Фильтр по рангу", "Выбрать", "Отмена");
			if(strval(inputtext) < 1 || strval(inputtext) > FI[PI[playerid][pMember]][fMaxRang]) return D(playerid, d_offmembers_filter, DSI, ""W"Члены организации", ""G"Неверный номер ранга!\n\n"W"Введите ранг для фильтра:", "Далее", "Назад" ) ;
			SetPVarInt(playerid, "ofm_type", strval(inputtext)) ;
			SetPVarInt(playerid, "ofm_list_page",1) ;
			new query_string [ 128 ] ;
			mysql_format(connects, query_string, sizeof(query_string),"SELECT `Name`,`pRank`,`pOnline` FROM `accounts` WHERE `pMember` = '%d' AND `pRank` = '%d' AND `online_status` = '1001'",PI[playerid][pMember], strval ( inputtext ) ) ;
			mysql_pquery(connects, query_string, "callback_offmembers", "i", playerid ) ;
		}
	case d_offmembers_pl_rank:
		{
			if(!response) return true;
			new pvar_string [ 28 ],
			pl_name [ MAX_PLAYER_NAME - 4 ] ;
			format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
			GetPVarString ( playerid, pvar_string, pl_name, MAX_PLAYER_NAME - 4 ) ;
			if ( strval ( inputtext ) < 1 || strval ( inputtext ) >= FI[PI[playerid][pMember]][fMaxRang]) return D(playerid, d_offmembers_pl_rank, DSI, ""P"Изменение ранга игрока", ""G"Неверный номер ранга!\n\n"W"Введите номер ранга, который хотите установить для игрока:", "Выбрать", "Назад" ) ;
			if ( response )
			{
				new _text_string [ 128 ] ;
				mysql_format(connects, _text_string, sizeof(_text_string),"UPDATE `accounts` SET `pRank` = '%d' WHERE `Name` = '%s' LIMIT 1",
				strval ( inputtext ), pl_name ) ;
				mysql_tquery ( connects, _text_string, "", "" ) ;
				format ( _text_string, sizeof _text_string, "Ранг игрока %s изменен на %d", pl_name, strval ( inputtext ) ) ;
				SendOk(playerid, _text_string ) ;
			}
			format ( pvar_string, sizeof ( pvar_string ), "%s", pl_name ) ;
			D(playerid, d_offmembers_pl_menu, DSL, pvar_string, ""P"1."W" Информация об игроке\n"P"2."W" Уволить из организации\n"P"3."W" Повысить/понизить игрока", "Выбрать", "Отмена");
		}
	case D_THEFT: {
			if(!response) return true;
			new car;
			switch(listitem) {
			case 0: { // эконом класс
					if(PI[playerid][ptheftTime] > gettime()) {
						new string[80];
						format(string,sizeof(string),"Сейчас для тебя нет заданий, возвращайся через %02d:%02d минут", (PI[playerid][ptheftTime]-gettime())/60,(PI[playerid][ptheftTime]-gettime())%60);
						SendClientMessage(playerid, COLOR_GREY, string);
						return true;
					}
					if(thef_car[playerid] != INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "Вы уже взяли задание");
					if(PI[playerid][pTheftlvl] == 0)
					{
						new car_rand_1[24] = {542, 518, 517, 491, 492, 479, 474, 466, 467, 439,
							422, 545, 543, 419, 404, 401, 410, 412, 413, 549, 575, 576, 600, 585};
						car = car_rand_1[random(sizeof(car_rand_1))];
						SetPVarInt(playerid,"theft_model",car);
					}
					if(PI[playerid][pTheftlvl] == 1)
					{
						new car_rand_2[26] = {526, 505, 507, 535, 527, 534, 551, 554, 555, 558,
							561, 500, 533, 603, 579, 589, 580, 567, 566, 496, 475,
							445, 426, 421, 405, 400};
						car = car_rand_2[random(sizeof(car_rand_2))];
						SetPVarInt(playerid,"theft_model",car);
					}
					if(PI[playerid][pTheftlvl] == 2)
					{
						new car_rand_3[17] = {494, 495, 411, 451, 402, 429, 415, 477, 434, 480,
							506, 541, 562, 560, 559, 587, 602};
						car = car_rand_3[random(sizeof(car_rand_3))];
						SetPVarInt(playerid,"theft_model",car);
					}
					new string[300];
					format(string,300,"\n\n"W"Пригони нам автомобиль марки "ORANGE"%s,"W" и мы тебе хорошо заплатим.\nАвтомобиль нужен будет найти на координатах, которые я передам тебе по GPS\n\n\tВозьмешься за эту работу?",vehicle_name[car-400]);
					D(playerid, D_THEFT_1, DSM, ""P"Автоугон", string, "Да", "Закрыть");
				}
			case 1: {
					new theft_info1[700];
					for(new i; i < sizeof(theft_info); i++) {
						strcat(theft_info1,theft_info[i]);
						D(playerid,DIALOG_NONE,DSM,""P"Информация", theft_info1, "Закрыть", "");
					}
				}
			}
			return true;
		}
	case D_THEFT_1: {
			if(!response) return true;
			new model = GetPVarInt(playerid,"theft_model");
			new color, car;
			color = Random(1, 6);
			new rand = random(sizeof(theft_spawn));
			car = A_CreateVehicle(model,theft_spawn[rand][0],theft_spawn[rand][1],theft_spawn[rand][2],theft_spawn[rand][3], color, 1, -1, VEHICLE_TYPE_PLAYER);
			GetVehiclePos(car, TI[playerid][tUcar][0], TI[playerid][tUcar][1], TI[playerid][tUcar][2]);

			EnableGPSForPlayer(playerid,TI[playerid][tUcar][0],TI[playerid][tUcar][1],TI[playerid][tUcar][2]);

			VehicleInfo[car][vFuel] = 75;
			VehicleInfo[car][vFuel] = 75;
			thef_timer[playerid] = 1020;
			SetVehicleParamsEx(car, false, false, false, true, false, false, false);
			new str[250];
			format(str,128,"Пригони мне автомобиль марки %s, он отмечен на карте красным маркером",vehicle_name[model-400]);
			SendOk(playerid,str);
			SendOk(playerid,"Используйте: /theft для взлома/завода двигателя автомобиля");
			DeletePVar(playerid,"theft_model");
			thef_car[playerid] = car;
		}
	case D_THEFT_LIST: {
			if(!response) return true;
			new car = thef_car[playerid];
			switch(listitem) {
			case 0: {
					new Float:vehx, Float:vehy, Float:vehz;
					GetVehiclePos(car, vehx, vehy, vehz);
					if(!PlayerToPoint(4.0,playerid,vehx, vehy, vehz)) return SendClientMessage(playerid, COLOR_GREY, "Вы находитесь не рядом с автомобилем");
					GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
					if(!doors) return SendClientMessage(playerid, COLOR_GREY, "Транспорт уже открыт, садитесь и угоните автомобиль");
					if(!GetInvent(playerid, 122)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет отмычек для взлома замка");
					DeleteItem(playerid, 122, 1);
					TogglePlayerControllable(playerid, false);
					JobTempProcess[playerid] = 15;
					TI[playerid][tProcess][0] = 0;
					TI[playerid][tProcess][1] = 10;
					PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
					for(new YN = 0;YN < 3;YN++) {
						TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
						if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
					}
					RandomYareNforJOBS(playerid);
				}
			case 1:
				{
					new veh = GetPlayerVehicleID(playerid);
					if(car != veh) return SendClientMessage(playerid, COLOR_GREY, "Вы не в угнанном автомобиле");
					GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
					if(engine) return SendClientMessage(playerid, COLOR_GREY, "Двигатель уже заведен");
					switch(PI[playerid][pTheftlvl]) {
					case 0: SetPVarInt(playerid,"eng_car", 20);
					case 1: SetPVarInt(playerid,"eng_car", 15);
					case 2: SetPVarInt(playerid,"eng_car", 10);
					}
					GameTextForPlayer(playerid,"~w~engine started",1200,4);
					ToggleEngine(veh,playerid);
					EnableGPSForPlayer(playerid,2488.0916,-1463.9087,24.0205);
				}
			case 2: {
					GetVehiclePos(thef_car[playerid], TI[playerid][tUcar][0], TI[playerid][tUcar][1], TI[playerid][tUcar][2]);
					EnableGPSForPlayer(playerid,TI[playerid][tUcar][0],TI[playerid][tUcar][1],TI[playerid][tUcar][2]);
					SendOk(playerid,"Координаты автомобиля на карте обновлены");
				}
			case 3: {
					new Float:vehx, Float:vehy, Float:vehz;
					GetVehiclePos(car, vehx, vehy, vehz);
					if(!PlayerToPoint(4.0,playerid,vehx, vehy, vehz)) return SendClientMessage(playerid, COLOR_GREY, "Вы находитесь не рядом с автомобилем");
					GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
					if(alarm != 1) return SendClientMessage(playerid, COLOR_GREY, "Сигнализация не включена");
					SetVehicleParamsEx(car,engine,lights,false,doors,bonnet,boot,objective);
					SendOk(playerid,"Сигнализация успешно отключена");
				}
			}
			return true;
		}
		#if defined _roulette_included
		case D_ROULETTE_2: {
			if(!response)
				return false;
			STRING_GLOBAL[0] = EOS;

			mysql_format(connects, STRING_GLOBAL, 128, "SELECT * FROM "TABLE_ROULETTE" WHERE `player_name` = '%s' AND `id`=%d LIMIT 1",
				GetName(playerid), RouletteInfo[playerid][roulettePrizeID][listitem]);
			mysql_tquery(connects, STRING_GLOBAL, "roulette_TakePrize","d", playerid), STRING_GLOBAL[0] = EOS;
			return true;
		}
		case D_ROULETTE_3: {
			if(!response)
				return false;
			SPD(playerid, D_ROULETTE_4, DIALOG_STYLE_LIST, ""P"Доступные действия",
				!""P"1. "W"Использовать приз\n\
				"P"2. "W"Продать приз "G"[50%]", //
				!"Выбрать", "Отмена"
			);
			return true;
		}
		case D_ROULETTE_4: {
			if(!response)
				return false;
			switch(listitem + 1) {
				case 1: {
					roulette_UsePrize(playerid,
						RouletteInfo[playerid][rouletteTempID], RouletteInfo[playerid][rouletteTempArrayID],
						RouletteInfo[playerid][rouletteTempModelID], RouletteInfo[playerid][rouletteTempTypeID]
					);
				}
				case 2: {
					roulette_SellPrize(playerid,
						RouletteInfo[playerid][rouletteTempID], RouletteInfo[playerid][rouletteTempArrayID],
						RouletteInfo[playerid][rouletteTempModelID], RouletteInfo[playerid][rouletteTempTypeID]
					);
				}
			}
			return true;
		}
		#endif
	case D_POLICE_EQ:
		{
			if(!response) return true;
			new okss = 0;
			switch(listitem) {
			case 0:
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid, 0) && !police_eqm[playerid][listitem]) return SendClientMessage(playerid, COLOR_GREY, "На голове уже присутствует аксессуар/снаряжение, снимите их через снаряжение, либо"W" (/access)");
					if(police_eqm[playerid][listitem] == 1) return police_eqm[playerid][listitem] = 0, RemovePlayerAttachedObject(playerid, 0);
					switch(GetPlayerSkin(playerid))
					{
					case 280, 281, 282, 303, 309, 295: SetPlayerAttachedObject(playerid,0,18636,2,0.161000,0.013999,-0.000999,86.099945,81.700019,3.600003,1.000000,1.000000,1.000000);
					default: okss = 1, SendClientMessage(playerid, COLOR_GREY, "Скин не поддерживает это полицейское снаряжение"),Police_eqment(playerid);
					}
				}
			case 1:
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid, 0) && !police_eqm[playerid][listitem]) return SendClientMessage(playerid, COLOR_GREY, "На голове уже присутствует аксессуар/снаряжение, снимите их через снаряжение, либо"W" (/access)");
					if(police_eqm[playerid][listitem] == 1) return police_eqm[playerid][listitem] = 0, RemovePlayerAttachedObject(playerid, 0);
					switch(GetPlayerSkin(playerid))
					{
					case 280: SetPlayerAttachedObject(playerid,0,19521,2,0.17,0.00,0.00,0.00,0.00,0.00,1.00,1.00,1.00);
					case 281: SetPlayerAttachedObject(playerid,0,19521,2,0.19,0.00,-0.00,0.00,0.00,0.00,1.00,1.00,1.00);
					case 282: SetPlayerAttachedObject(playerid,0,19521,2,0.18,0.01,0.00,0.00,0.00,0.00,1.00,1.00,1.00);
					case 303: SetPlayerAttachedObject(playerid,0,19521,2,0.18,0.00,0.00,0.00,0.00,0.00,1.00,1.00,1.00);
					case 306: SetPlayerAttachedObject(playerid,0,19521,2,0.16,0.00,0.00,0.00,0.00,0.00,1.00,1.00,1.00);
					case 309: SetPlayerAttachedObject(playerid,0,19521,2,0.16,0.00,0.00,0.00,0.00,0.00,1.00,1.00,1.00);
					case 295: SetPlayerAttachedObject(playerid,0,19521,2,0.16,0.00,0.00,0.00,0.00,0.00,1.00,1.00,1.00);
					default: okss = 1, SendClientMessage(playerid, COLOR_GREY, "Скин не поддерживает это полицейское снаряжение"),Police_eqment(playerid);
					}
				}
			case 2: {
					if(IsPlayerAttachedObjectSlotUsed(playerid, 0) && !police_eqm[playerid][listitem]) return SendClientMessage(playerid, COLOR_GREY, "На голове уже присутствует аксессуар/снаряжение, снимите их через снаряжение, либо"W" (/access)");
					if(police_eqm[playerid][listitem] == 1) return police_eqm[playerid][listitem] = 0, RemovePlayerAttachedObject(playerid, 0);
					switch(GetPlayerSkin(playerid))
					{
					case 280, 281, 282, 303, 306, 309, 295: SetPlayerAttachedObject(playerid,0,19141,2,0.122000,-0.008000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
					default: okss = 1, SendClientMessage(playerid, COLOR_GREY, "Скин не поддерживает это полицейское снаряжение"),Police_eqment(playerid);
					}
				}
			case 3: {
					if(IsPlayerAttachedObjectSlotUsed(playerid, 0) && !police_eqm[playerid][listitem]) return SendClientMessage(playerid, COLOR_GREY, "На голове уже присутствует аксессуар/снаряжение, снимите их через снаряжение, либо"W" (/access)");
					if(police_eqm[playerid][listitem] == 1) return police_eqm[playerid][listitem] = 0, RemovePlayerAttachedObject(playerid, 0);
					switch(GetPlayerSkin(playerid))
					{
					case 280, 281, 282, 303, 309, 295: SetPlayerAttachedObject(playerid,0,18946,2,0.16,0.00,0.00,0.00,0.00,0.00,1.00,1.00,1.0);
					default: okss = 1, SendClientMessage(playerid, COLOR_GREY, "Скин не поддерживает это полицейское снаряжение"),Police_eqment(playerid);
					}
				}
			case 4: {
					if(IsPlayerAttachedObjectSlotUsed(playerid, 0) && !police_eqm[playerid][listitem]) return SendClientMessage(playerid, COLOR_GREY, "На голове уже присутствует аксессуар/снаряжение, снимите их через снаряжение, либо"W" (/access)");
					if(police_eqm[playerid][listitem] == 1) return police_eqm[playerid][listitem] = 0, RemovePlayerAttachedObject(playerid, 0);
					switch(GetPlayerSkin(playerid))
					{
					case 280, 281, 284, 282, 285, 303, 306, 309, 295: SetPlayerAttachedObject(playerid,0,18645,2, 0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000, 1.1, 1.1, 1.1);
					default: okss = 1, SendClientMessage(playerid, COLOR_GREY, "Скин не поддерживает это полицейское снаряжение"),Police_eqment(playerid);
					}
				}
			case 5: {
					if(IsPlayerAttachedObjectSlotUsed(playerid, 3) && !police_eqm[playerid][listitem]) return SendClientMessage(playerid, COLOR_GREY, "На лице уже присутствует аксессуар/снаряжение, снимите их через снаряжение, либо"W" (/access)");
					if(police_eqm[playerid][listitem] == 1) return police_eqm[playerid][listitem] = 0, RemovePlayerAttachedObject(playerid, 3);
					switch(GetPlayerSkin(playerid)) 
					{
					case 280, 281, 284, 282, 285, 303, 288, 283, 306, 309, 295: SetPlayerAttachedObject(playerid, 3,19472,2,0.000000,0.131000,0.004000,-45.499984,91.999946,134.900054,1.000000,1.057001,1.067001);
					default: okss = 1, SendClientMessage(playerid, COLOR_GREY, "Скин не поддерживает это полицейское снаряжение"),Police_eqment(playerid);
					}
				}
			case 6: {
					if(IsPlayerAttachedObjectSlotUsed(playerid, 4) && !police_eqm[playerid][listitem]) return SendClientMessage(playerid, COLOR_GREY, "В руке уже присутствует аксессуар/снаряжение, снимите их через снаряжение, либо"W" (/access)");
					if(police_eqm[playerid][listitem] == 1) return police_eqm[playerid][listitem] = 0, RemovePlayerAttachedObject(playerid, 4);
					switch(GetPlayerSkin(playerid)) 
					{
					case 280, 281, 284, 282, 285, 303, 288, 283, 306, 309, 295: SetPlayerAttachedObject(playerid, 4,18641, 5, 0.1, 0.02, -0.05, 0, 0, 0, 1, 1, 1);
					default: okss = 1, SendClientMessage(playerid, COLOR_GREY, "Скин не поддерживает это полицейское снаряжение"),Police_eqment(playerid);
					}
				}
			case 7: {
					if(IsPlayerAttachedObjectSlotUsed(playerid, 5) && !police_eqm[playerid][listitem]) return SendClientMessage(playerid, COLOR_GREY, "На спине уже присутствует аксессуар/снаряжение, снимите их через снаряжение, либо"W" (/access)");
					if(police_eqm[playerid][listitem] == 1) return police_eqm[playerid][listitem] = 0, RemovePlayerAttachedObject(playerid, 5);
					switch(GetPlayerSkin(playerid))
					{
					case 280,281: SetPlayerAttachedObject(playerid,5,19142,1,0.07,0.04,0.00,0.00,0.00,-7.40,1.09,1.18,1.05);
					case 284: SetPlayerAttachedObject(playerid,5,19142,1,0.07,0.06,0.00,0.00,0.00,-7.40,1.00,1.10,1.00);
					case 282: SetPlayerAttachedObject(playerid,5,19142,1,0.09,0.01,0.00,0.00,0.00,-7.40,1.00,1.52,1.27);
					case 303: SetPlayerAttachedObject(playerid,5,19142,1,0.03,0.02,0.00,0.00,0.00,-7.40,1.34,1.26,1.16);
					case 288: SetPlayerAttachedObject(playerid,5,19142,1,0.08,0.01,0.01,0.00,0.00,-7.40,1.10,1.34,1.15);
					case 283: SetPlayerAttachedObject(playerid,5,19142,1,0.08,0.01,0.01,0.00,0.00,-7.40,1.10,1.34,1.15);
					case 306: SetPlayerAttachedObject(playerid,5,19142,1,0.07,0.06,0.00,0.00,0.00,-7.40,1.00,1.00,1.00);
					case 309: SetPlayerAttachedObject(playerid,5,19142,1,0.07,0.05,0.00,0.00,0.00,-7.40,1.02,1.16,1.00);
					case 295: SetPlayerAttachedObject(playerid,5,19142,1,-0.00,0.04,-0.00,0.00,0.00,-7.40,1.21,1.39,1.00);
					default: okss = 1, SendClientMessage(playerid, COLOR_GREY, "Скин не поддерживает это полицейское снаряжение"),Police_eqment(playerid);
					}
				}
			case 8: {
					if(IsPlayerAttachedObjectSlotUsed(playerid, 5) && !police_eqm[playerid][listitem]) return SendClientMessage(playerid, COLOR_GREY, "На спине/руке уже присутствует аксессуар/снаряжение, снимите их через снаряжение, либо"W" (/access)");
					if(police_eqm[playerid][listitem] == 1) return police_eqm[playerid][listitem] = 0, RemovePlayerAttachedObject(playerid, 5);
					switch(GetPlayerSkin(playerid))
					{
					case 280, 281, 284, 282, 285, 303, 288, 283, 306, 309, 295: SetPlayerAttachedObjectEx(playerid, 5, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
					default: okss = 1, SendClientMessage(playerid, COLOR_GREY, "Скин не поддерживает это полицейское снаряжение"),Police_eqment(playerid);
					}
				}
			case 9: {
					if(IsPlayerAttachedObjectSlotUsed(playerid, 5) && !police_eqm[playerid][listitem]) return SendClientMessage(playerid, COLOR_GREY, "На спине/руке уже присутствует аксессуар/снаряжение, снимите их через снаряжение, либо"W" (/access)");
					if(police_eqm[playerid][listitem] == 1) return police_eqm[playerid][listitem] = 0, RemovePlayerAttachedObject(playerid, 5);
					switch(GetPlayerSkin(playerid))
					{
					case 280, 281, 284, 282, 285, 303, 288, 283, 306, 309, 295: SetPlayerAttachedObjectEx(playerid, 5, 18637, 1, 0.15, -0.05, 0.18, 90, 0, 270);
					default: okss = 1, SendClientMessage(playerid, COLOR_GREY, "Скин не поддерживает это полицейское снаряжение"),Police_eqment(playerid);
					}
				}
			}
			if(okss == 1) return true;
			if(listitem == 10)
			{
				for(new i; i < 10; i++) {
					police_eqm[playerid][i] = 0;
				}
				RemovePlayerAttachedObject(playerid, 0);
				RemovePlayerAttachedObject(playerid, 3);
				RemovePlayerAttachedObject(playerid, 4);
				RemovePlayerAttachedObject(playerid, 5);
				SendOk(playerid, "Все аксессуары с персонажа сняты");
				return true;
			}
			SendOk(playerid, "Снаряжение успешно надето");
			police_eqm[playerid][listitem] = 1;
			Police_eqment(playerid);
		}
	case D_JOB_CONST:
		{
			if(!response) return true;
			if(TI[playerid][tBuild] > 0 || PI[playerid][pJob] == 3) {
				SendClientMessage(playerid,0xfF5C841ff, "Работа на стройке завершена");
				if(TI[playerid][tJobSalary] > 0)
				{
					new string[22];
					format(string,sizeof(string),"Вы заработали: %i$",TI[playerid][tJobSalary]);
					SendClientMessage(playerid,0xfF5C841ff,string);
					GiveMoney(playerid, TI[playerid][tJobSalary], "з/п на стройке");
					TI[playerid][tJobSalary] = 0;
				}
				if(PI[playerid][pJob] == 3) PI[playerid][pJob] = 0;
				RemovePlayerAttachedObject(playerid,8);
				RemovePlayerAttachedObject(playerid,7); 
				TI[playerid][tBuild] = 0;
				TI[playerid][tBuildCount] = 0;
				TI[playerid][tBuildAtt] = 0;
				Welding[playerid] = 0;
				if(PI[playerid][pMember] && start_work[playerid]) {
					A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
					SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
				}
				else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			switch(listitem) {
			case 0: {
					SetPlayerSkin(playerid,16);
					D(playerid, DIALOG_NONE, DSM, ""P"Информация",""W"Вы устроились на стройку{F8AA35} уборщиком"W"\n\nНа вашей карте отмечен красный маркер, двигайтесь к нему\nдля того, чтобы начать собирать мусор\n\n\
			Чем больше Вы собираете мусора - тем больше ваша з/п, также\nбыстрее повышается рабочий опыт.", "Закрыть", "");
					EnableGPSForPlayer(playerid,1729.7390,446.4795,27.3652);
					TI[playerid][tBuild] = 1;
				}
			case 1: {
					if(PI[playerid][pExpJob][0] < 100) return SendClientMessage(playerid, COLOR_GREY, "У Вас маленький опыт работы");
					SetPlayerSkin(playerid,16);
					D(playerid, DIALOG_NONE, DSM, ""P"Информация",""W"Вы устроились на стройку{F8AA35} грузчика"W"\n\nНа вашей карте отмечен красный маркер, двигайтесь к нему\nдля того, чтобы взять мешок с цементом\n\n\
			Чем больше Вы переносите мешков - тем больше ваша з/п, также\nбыстрее повышается рабочий опыт.", "Закрыть", "");
					EnableGPSForPlayer(playerid,1683.1362,378.9116,30.8809);
					TI[playerid][tBuild] = 2;
				}
			case 2: {
					if(PI[playerid][pExpJob][0] < 300) return SendClientMessage(playerid, COLOR_GREY, "У Вас маленький опыт работы");
					SetPlayerSkin(playerid,16);
					D(playerid, DIALOG_NONE, DSM, ""P"Информация",""W"Вы устроились на стройку{F8AA35} сварщиком"W"\n\nНа вашей карте отмечено место, отправляйтесь туда\nдля того, чтобы взять металл для сварки\n\n\
			Чем больше Вы приварите столбов - тем больше ваша з/п, также\nбыстрее повышается рабочий опыт.", "Закрыть", "");
					SetPlayerAttachedObject(playerid, 8, 3026, 1,   -0.156000,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					EnableGPSForPlayer(playerid,1701.1293,421.4013,30.6758);
					TI[playerid][tBuild] = 3;
				}
			}
		}
	case D_JOB_KANAL: {
			if(!response) return true;
			if(listitem == 10) pc_cmd_loadweste(playerid);
			if(listitem == 11) {
				EnableGPSForPlayer(playerid, 2214.5781,-2545.3853,13.5469);
				return true;
			}
			new u = listitem;
			if(Sewer[u][seTime] > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Люк закрыт. Подождите, когда мусор утилизируется");
			EnableGPSForPlayer(playerid, Sewer[u][seX],Sewer[u][seY],Sewer[u][seZ]);
			SendOk(playerid,"Местоположение люка отмечено в вашем GPS");
			return true;
		}
	case D_JOB_KANAL_1: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(PI[playerid][pCash] < 500) {
				SendClientMessage(playerid, COLOR_GREY, "У Вас не достаточно денег для аренды авто для продажи еды");
				RemovePlayerFromVehicleAC(playerid);
				return true;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			GiveMoney(playerid,-500,"аренда авто канализация");
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			SetPVarInt(playerid, "start_job_mower",1);
			SendOk(playerid,"Вы арендовали автомобиль. Для отметки люка на карте, введите"G" (/sewerage)");
			SetPVarInt(playerid, "veh_id_cleaner",GetPlayerVehicleID(playerid));
		}
	case D_JOB_KANAL_2: {
			if(!response) return true;
			if(GetPVarInt(playerid,"kanal_skin") == 0) {
				A_SetPlayerSkin(playerid,8);
				SetPVarInt(playerid,"kanal_skin",1);
			}
			else {
				if(PI[playerid][pMember] > 0) A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
				else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
				DeletePVar(playerid,"kanal_skin");
			}
			SendOk(playerid,"Вы успешно переоделись!");
			return 1;
		}
	case D_JOB_KANAL_3: {
			if(!response) return true;
			new veh = GetPlayerVehicleID(playerid);
			if(VG[veh][vgAmount][0] == 0) return SendClientMessage(playerid, COLOR_GREY, "В рабочей машине нет мусора");
			GiveMoney(playerid,VG[veh][vgAmount][0]*400,"утилизация мусора");
			if(VG[veh][vgAmount][0] >= 15) {
				if(PI[playerid][pFamily]) {
					gFamily[PI[playerid][pFamily]-1][famTalon] += 10;
					UpdateFamily(PI[playerid][pFamily],"talon",gFamily[PI[playerid][pFamily]-1][famTalon]);
					PI[playerid][pFamTalon] += 10, UpdatePlayerData(playerid, "talon_fam", PI[playerid][pFamTalon]);
				}
				if(PI[playerid][pExpJob][4] < 500)
				{
					PI[playerid][pExpJob][4] += 1;
					if(PI[playerid][pExpJob][4] == 499) {
						PI[playerid][pAcsJob][4] = 1;
						SendOk(playerid,"Вы получили новый аксессуар за достижение! "GREEN"(/mm > навыки персонажа > полученные аксессуары)");
						save_acsjob(playerid);
					}
					save_jskill(playerid);
				}
			}
			VG[veh][vgAmount][0] = 0;
			return 1;
		}
	case D_APART_MENU_1: {
			if(!response) return true;
			new room = PI[playerid][pRoom] - 1;
			switch(listitem) {
			case 0:
				{
					if(Apartment[room][aLock] == 1) Apartment[room][aLock] = 0, SendOk(playerid,"Дверь открыта");
					else Apartment[room][aLock] = 1, SendOk(playerid,"Дверь закрыта");
					new query[300];
					mysql_format(connects, query, sizeof(query),"UPDATE `apartment` SET `lock` = '%i' WHERE `id` = '%i'",Apartment[room][aLock], room+1);
					mysql_tquery(connects, query,"","");
				}
			case 1: {
					new string[250];
					format(string,sizeof(string),"\n\n"W"Вы собираетесь продавать свою квартиру государству\nПрибыль от продажи квартиры:"P" %i$"W"\n\nВы действительно хотите продать квартиру государству?",Apartment[room][aMoney]/100*50);
					D(playerid,D_APART_MENU_3,DSM, ""P"Продажа квартиры",string,"Да","Закрыть");
				}
			case 2: {
					if(!PI[playerid][pRoom]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет квартиры");
					D(playerid,D_APART_MENU_2,DSI, ""P"Квартплата",""W"Введите кол-во дней на которое хотите продлить квартплату\nСтоимость за один день: "GREEN"$3200","Оплатить","Отмена");
				}
			case 3: {
					new string[250];
					new day;
					day = (Apartment[room][aDay]-unix)/86400;
					format(string,sizeof(string),""W"Квартира оплачена на"P" %d д",day);
					D(playerid,DIALOG_NONE,DSM, " ",string,"Закрыть","");
				}
			}
			return true;
		}
	case D_APART_MENU_3: {
			if(!response) return 1;
			new room = PI[playerid][pRoom] - 1;
			new string[176];
			format(string,sizeof(string),"Вы продали квартиру государству за "P"%i$",Apartment[room][aMoney]/100*50);
			SendOk(playerid,string);
			GiveMoney(playerid,Apartment[room][aMoney]/100*50,"продажа квартиры");
			new query[300];
			mysql_format(connects, query, sizeof(query),"UPDATE `apartment` SET `lock` = '0',`owner` = 'None',`day` = '0' WHERE `id` = '%i'",room+1);
			mysql_tquery(connects, query,"","");
			SetString(Apartment[room][aOwner],"None");
			update_apart(room);
			Apartment[room][aLock] = 0;
			Apartment[room][aDay] = 0;
			PI[playerid][pRoom] = 0;
			UpdatePlayerData(playerid, "apart", 0);
			if(house_car[playerid][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
			if(house_car[playerid][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;
			return 1;
		}
	case D_APART_MENU_2: {
			if(!response) return 1;
			if(!PI[playerid][pRoom]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет квартиры");
			new amount = strval(inputtext);
			new hotel = PI[playerid][pRoom] - 1;
			new price = 3200;
			new day;
			day = (Apartment[hotel][aDay]-gettime())/86400;
			if(amount < 1 || amount > 15) return D(playerid,D_APART_MENU_2,DSI, ""P"Квартплата",""W"Введите кол-во дней на которое хотите продлить квартплату\n\n"NO"*"G" От 1 до 15 дней","Ок","Отмена");
			if(day + amount > 15) return D(playerid,D_APART_MENU_2,DSI, ""P"Квартплата",""W"Введите кол-во дней на которое хотите продлить квартплату:\n\n"NO"*"G" Максимальное кол-во оплаченных дней 15","Ок","Отмена");
			if(PI[playerid][pCash] < price*amount) return D(playerid,D_APART_MENU_2,DSI, ""P"Квартплата",""W"Введите кол-во дней на которое хотите продлить квартплату:\n\n"NO"*"G" Недостаточно средств","Ок","Отмена");
			Apartment[hotel][aDay] += amount*86400;
			new query[128];
			mysql_format(connects, query, sizeof(query),"UPDATE `apartment` SET `day` = '%d' WHERE id = '%d'",Apartment[hotel][aDay],hotel+1);
			mysql_tquery(connects, query,"","");
			GiveMoney(playerid,-price*amount,"аренда квартиры");
			static const f_str[] = ""W"Квартира оплачена на "O"%d"W" дней. Снято средств: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,price*amount);
			return D(playerid,DIALOG_NONE,DSM, ""P"Оплата квартиры",string,"Закрыть","");
		}
	case D_APART_ENTER: {
			if(!response) return true; 
			new room = TI[playerid][tSelectedRoom];
			if(PI[playerid][pRoom] == room+1)
			{
				SetPlayerPosAC(playerid,1263.7520,-749.6020,1164.3887,Apartment[room][aID], 4);
				SetPlayerFacingAngle(playerid,359.5166);
				FreezePlayerForTime(playerid,3);
				SetCameraBehindPlayer(playerid);
				return true;
			}
			if(Apartment[room][aLock] == 0)
			{
				SetPlayerPosAC(playerid,1263.7520,-749.6020,1164.3887,Apartment[room][aID], 4);
				SetPlayerFacingAngle(playerid,359.5166);
				FreezePlayerForTime(playerid,3);
				SetCameraBehindPlayer(playerid);
				return true;
			}
			SendClientMessage(playerid, COLOR_GREY, "Квартира закрыта");
			return true;
		}
	case D_APART_BUY: {
			if(!response) return true;
			new room = TI[playerid][tSelectedRoom];
			if(PI[playerid][pRoom] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть квартира");
			if(PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас есть дом");
			if(PI[playerid][pTempKey]) return SendClientMessage(playerid, COLOR_GREY, "У Вас есть прописка в доме, выселитесь из дома /house");
			if(PI[playerid][pCash] < Apartment[room][aMoney]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			strmid(Apartment[room][aOwner],player_name[playerid], 0, strlen(player_name[playerid]), MAX_PLAYER_NAME);
			update_apart(room);
			SetPlayerPosAC(playerid,1263.7520,-749.6020,1164.3887,Apartment[room][aID], 4);
			SetPlayerFacingAngle(playerid,359.5166);
			FreezePlayerForTime(playerid,3);
			SetCameraBehindPlayer(playerid);
			Apartment[room][aDay] = unix + 1*86400;
			new query[300];
			mysql_format(connects, query, sizeof(query),"UPDATE `apartment` SET `owner` = '%s',`day` = '%i' WHERE `id` = '%i'",player_name[playerid],Apartment[room][aDay], room+1);
			mysql_tquery(connects, query,"","");
			PI[playerid][pRoom] = room+1;
			
			UpdatePlayerData(playerid, "apart", PI[playerid][pRoom]);
			
			new query_str[128];
			format(query_str,sizeof(query_str),"SELECT * FROM `"TABLE_CARS"` WHERE BINARY `owner` = '%s'",player_name[playerid]);
			mysql_tquery(connects,query_str,"load_cars","i",playerid);
			
			SendClientMessage(playerid,COLOR_PERS,"Поздравляем с покупкой квартиры! Оплатите квартиру в меню квартиры"W" ALT перед выходом с квартиры");
			SendClientMessage(playerid,COLOR_PERS,"Управление квартирой у выхода с квартиры"W" 'ALT'");
			
			GiveMoney(playerid,-Apartment[room][aMoney], "покупка квартиры");
			return true;
		}
	case D_TEX: {
			if(!response) return true;
			switch(listitem)
			{
			case 0: {
					if(GetPlayerVehicleID(playerid) != rob_veh[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не в фургоне для ограбления домов");
					if(rob_veh[playerid] != INVALID_VEHICLE_ID && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
						if(!VG[rob_veh[playerid]][vgAmount][0]) return SendClientMessage(playerid, COLOR_GREY, "Фургон пуст");
						GiveMoney(playerid,250*VG[rob_veh[playerid]][vgAmount][0],"ограбление дома");
						VG[rob_veh[playerid]][vgAmount][0] = 0;
						SendOk(playerid,"Вы успешно продали награбленную технику");
					}
				}
			case 1: {
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return SendClientMessage(playerid, COLOR_GREY, "Вы не в фургоне для ограбления техники");
					if(!VG[GetPlayerVehicleID(playerid)][vgTex_count]) return SendClientMessage(playerid, COLOR_GREY, "Фургон пуст");
					FI[PI[playerid][pMember]][fBank] += 100*VG[GetPlayerVehicleID(playerid)][vgTex_count];
					UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);
					VG[GetPlayerVehicleID(playerid)][vgTex_count] = 0;
					SendOk(playerid,"Вы успешно продали награбленную технику. Деньги зачислены на счет банды");
					
				}
			}
		}
	case D_TRAILER_BUY: {
			if(!response) return true;
			new vehicle_amount = GetPlayerVehicles(playerid);
			new businessid = TI[playerid][tSelectedBusinessID];
			if(vehicle_amount) {
				SendClientMessage(playerid, COLOR_GREY, "У вас уже есть трейлер!");
				return false;
			}
			if(PI[playerid][pCash] < TRAILER_SELL) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			CreatePlayerVehicle(playerid, 508 , 0.0, 0.0, 0.0, 0.0, 1, 1, 708.0085,-578.8633,16.4542,270.2291);
			SendClientMessage(playerid, COLOR_WHITE, ""NO"* [Подсказка]"W" Дом на колесах необходимо припарковать с помощью "GREEN"/trpark");
			SendClientMessage(playerid, COLOR_YELLOW, "Продлите оплату дома на колесах в любом банке!");
			GiveMoney(playerid,-TRAILER_SELL, "покупка трейлера");
			D(playerid,DIALOG_NONE,DSM, ""P"Дом на колесах",""W"Поздравляем с покупкой дома на колесах!\n\nЧтобы забрать дом на колесах, возьмите грузовик (/gps > дом на колесах)\nи заберите его в магазине на парковочной стоянке.\n\n"ORANGE"Основные команды:"W" — (/mm > команды сервера > дом на колесах)\n\n","Спасибо","");
			if(gBusiness[businessid][bizzProduct]-45 > 0) {
				gBusiness[businessid][bizzProduct] -= 45;
				bizz_pay(businessid,floatround(TRAILER_SELL * 0.095));
			}
			return true;
		}
	case D_TRAILER_BUY_2: {
			if(!response) {
				if(GetPVarInt(playerid,"hCarSeller")) {
					new id_prodaet = GetPVarInt(playerid,"hCarSeller")-1;
					SendOk(playerid,"Вы отказались от покупки дома на колесах");
					SendOk(id_prodaet,"Игрок отказался от покупки Вашего дома на колесах");
					DeletePVar(playerid,"hCarSeller");
					DeletePVar(playerid,"hCarPrices");
					DeletePVar(id_prodaet,"hCarBuyer");
				}
			}
			else {
				if(GetPVarInt(playerid,"hCarSeller")) {
					new id_prodaet = GetPVarInt(playerid,"hCarSeller")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"hCarBuyer")-1;
					new house_price = GetPVarInt(playerid,"hCarPrices");
					if(!GetPlayerVehicles(id_prodaet)) {
						SendClientMessage(playerid, COLOR_GREY, "Произошла ошибка (#5), сделка отменена");
						SendClientMessage(id_prodaet, COLOR_GREY," Произошла ошибка (#5), сделка отменена");
						DeletePVar(playerid,"hCarSeller");
						DeletePVar(playerid,"hCarPrices");
						DeletePVar(id_prodaet,"hCarBuyer");
						return true;
					}
					new player_vehicleid = playerVehicleID[id_prodaet];
					if(id_pokupaet == playerid) {
						if(PI[playerid][pCash] < house_price) {
							SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег на руках");
							SendClientMessage(id_prodaet, COLOR_GREY,"У покупателя недостаточно денег на руках");
							DeletePVar(playerid,"hCarSeller");
							DeletePVar(playerid,"hCarPrices");
							DeletePVar(id_prodaet,"hCarBuyer");
						}
						else {
							new string[156];
							format(string,64,"покупка дома на колесах у %s",player_name[id_prodaet]);
							GiveMoney(playerid,-house_price,string);
							string[0] = EOS;
							format(string,64,"продажа дома на колесах %s",player_name[playerid]);
							GiveMoney(id_prodaet,house_price,string);
							
							strmid(PlayerTrailer[player_vehicleid][carOwner], player_name[playerid], 0, strlen(player_name[playerid]), MAX_PLAYER_NAME + 2);

							MYSQL_GLOBAL[0] = EOS;
							mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),
							"UPDATE `"TABLE_DNK"` SET `owner` = '%e' WHERE id = %d LIMIT 1",
							PlayerTrailer[player_vehicleid][carOwner],
							PlayerTrailer[player_vehicleid][carID]);
							mysql_tquery(connects, MYSQL_GLOBAL, "", "");
							
							string[0] = EOS;
							format(string,sizeof(string),"Вы продали дом на колесах "P"%s"W" за "ORANGE"$%i",player_name[playerid],house_price);
							SendUse(id_prodaet,string);
							format(string,sizeof(string),"Вы приобрели дом на колесах у "P"%s"W" за "ORANGE"$%i",player_name[id_prodaet],house_price);
							SendUse(playerid,string);
							
							GetPlayerVehicles(playerid);
							GetPlayerVehicles(id_prodaet);

							trailer_text(player_vehicleid);
							
							DeletePVar(playerid,"hCarSeller");
							DeletePVar(playerid,"hCarPrices");
							DeletePVar(id_prodaet,"hCarBuyer");
						}
					}
					else {
						SendClientMessage(playerid, COLOR_GREY, "Игрок оффлайн");
						DeletePVar(playerid,"hCarSeller");
						DeletePVar(playerid,"hCarPrices");
					}
				}
			}
		}
	case D_TRAILER_SELL: {
			if (!response) return true;
			if(!GetPlayerVehicles(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома на колесах!");
			GetPlayerVehicles(playerid);
			new player_vehicle_id = playerVehicleID[playerid];
			if (!GetString(PlayerTrailer[player_vehicle_id][carOwner], player_name[playerid])) return false;
			new Float:vehiclePos[3];
			GetVehiclePos(PlayerTrailer[player_vehicle_id][carVehicle], vehiclePos[0], vehiclePos[1], vehiclePos[2]);
			if (!IsPlayerInRangeOfPoint(playerid, 15.0, vehiclePos[0], vehiclePos[1], vehiclePos[2]))
			return SendClientMessage(playerid, COLOR_GREY, "Дом на колесах далеко от вас!");
			
			if (!DestroyPlayerVehicle(playerid, player_vehicle_id)) return true;

			GiveMoney(playerid, TRAILER_SELL/100*50, "утилизация дома на колесах");

			DeletePVar(playerid, "player_vehicle_id");
			GetPlayerVehicles(playerid);
			
			new str[250];
			format(str,sizeof(str),"Вы успешно продали дом на колесах за -"ORANGE" %i$",TRAILER_SELL/100*50);
			SendClientMessage(playerid, COLOR_GREY, str);
			
			PI[playerid][pSpawn] = 0;
			UpdatePlayerData(playerid,"spawn",PI[playerid][pSpawn]);
			return true;
		}
	case D_YAXTA: {
			if(!response) return true;
			if(TI[playerid][tBoat] != INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "Вы уже арендуете лодку. Для отмены текущей аренды введите: "P"/unrent");
			switch(listitem) {
			case 0: {
					InterpolateCameraPos(playerid, 562.005615, -4786.896972, 4.364924, 562.005615, -4786.896972, 4.364924, 10000);
					InterpolateCameraLookAt(playerid, 562.075744, -4791.863281, 3.788087, 562.075744, -4791.863281, 3.788087, 10000);
					select_yaxta[playerid] = 446;
					yaxta_money[playerid] = 5000;
				}
			case 1: {
					InterpolateCameraPos(playerid, 552.556091, -4787.375000, 3.967171, 552.556091, -4787.375000, 3.967171, 10000);
					InterpolateCameraLookAt(playerid, 552.628417, -4792.354980, 3.526337, 552.628417, -4792.354980, 3.526337, 1000);
					select_yaxta[playerid] = 452;
					yaxta_money[playerid] = 7500;
				}
			case 2: {
					InterpolateCameraPos(playerid, 542.997375, -4787.539062, 4.033772, 542.997375, -4787.539062, 4.033772, 1000);
					InterpolateCameraLookAt(playerid, 543.040344, -4792.511718, 3.511291, 543.013183, -4792.514648, 3.538492, 1000);
					select_yaxta[playerid] = 454;
					yaxta_money[playerid] = 8000;
				}
			case 3: {
					InterpolateCameraPos(playerid, 543.332397, -4781.328125, 3.473280, 543.332397, -4781.328125, 3.473280, 1000);
					InterpolateCameraLookAt(playerid, 543.166442, -4776.371093, 2.842156, 543.166442, -4776.371093, 2.842156, 1000);
					select_yaxta[playerid] = 472;
					yaxta_money[playerid] = 8000;
				}
			case 4: {
					InterpolateCameraPos(playerid, 552.591125, -4781.694335, 3.942857, 552.591125, -4781.694335, 3.942857, 1000);
					InterpolateCameraLookAt(playerid, 552.534729, -4776.826660, 2.800688, 552.534729, -4776.826660, 2.800688, 1000);
					select_yaxta[playerid] = 473;
					yaxta_money[playerid] = 7500;
				}
			case 5: {
					InterpolateCameraPos(playerid, 562.025390, -4782.236816, 4.067637, 562.025390, -4782.236816, 4.067637, 1000);
					InterpolateCameraLookAt(playerid, 561.940795, -4777.277343, 3.436514, 561.940795, -4777.277343, 3.436514, 1000);
					select_yaxta[playerid] = 493;
					yaxta_money[playerid] = 12000;
				}
			}
			new str[54];
			if(select_yaxta[playerid] == 454) {
				strcat(str,"- Интерьер. Для входа используйте (/enter) у двери");
			}
			else strcat(str,"- Нет");
			new string[200];
			format(string,sizeof(string),"\n"W"Стоимость аренды:"GREEN" %d$"W"\n\n"W"Дополнительные возможности:\n"G"%s\n\n\t"W"Вы хотите взять данную лодку в аренду?",yaxta_money[playerid], str);
			D(playerid,D_YAXTA_1,DSM,""P"Аренда лодки",string, "Аренда", "Закрыть");
		}
	case D_YAXTA_1: {
			if(!response)
			{
				SetCameraBehindPlayer(playerid);
				select_yaxta[playerid] = 0;
				yaxta_money[playerid] = 0;
				return true;
			}
			if(PI[playerid][pCash] < yaxta_money[playerid]) {
				SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
				SetCameraBehindPlayer(playerid);
				return true;
			}
			new rand = random(sizeof(boat_spawn));
			TI[playerid][tBoat] = A_CreateVehicle(select_yaxta[playerid],boat_spawn[rand][0],boat_spawn[rand][1],boat_spawn[rand][2],boat_spawn[rand][3], 6, 6, -1,VEHICLE_TYPE_PLAYER);
			GiveMoney(playerid, -yaxta_money[playerid], "Аренда лодки");
			new bizid = TI[playerid][tSelectedBusinessID];
			if(gBusiness[bizid][bizzProduct]-50 > 0) {
				gBusiness[bizid][bizzProduct] -= 50;
				bizz_pay(bizid,yaxta_money[playerid]);
			}
			
			new Float:bd_x,Float:bd_y,Float:bd_z;
			GetBoatDoorPos(TI[playerid][tBoat], bd_x, bd_y, bd_z);
			
			yaxta_money[playerid] = 0;
			select_yaxta[playerid] = 0;
			SetCameraBehindPlayer(playerid);
			D(playerid,DIALOG_NONE,DSM,""P"Аренда лодки",""W"Аренда прошла успешно. Выйдите на пирс яхт-клуба\nи отгоните оттуда свою лодку.\n\n"G">>"W" Доступные команды:"P" /unrent, /lock", "Закрыть", "");
			return true;
		}
	case D_GREENZONE: {
			if(!response) return true;
			switch(listitem) {
			case 0: D(playerid, D_GREENZONE_ADD, DSI, ""P"Создать зеленую зону", "Введите название зоны и дистанцию через знак ','", "Далее", "Закрыть");
			default: {
					SetPVarInt(playerid,"ZONEID",listitem);
					D(playerid,D_GREENZONE_EDIT,DSL,""P"Редактирование зоны","{59DE00}1."W" Изменить название\n{59DE00}2."W" Изменить положение\n{59DE00}3."W" Изменить дистанцию", "Далее", "Закрыть");
				}
			}
		}
	case D_GREENZONE_ADD: {
			if(!response) return true;
			new price,name[32];
			if(sscanf(inputtext,"p<,>s[32]i",name,price)) return D(playerid, D_GREENZONE_ADD, DSI, ""P"Создать зеленую зону", "Введите название зоны и дистанцию через знак ','", "Далее", "Закрыть");
			TOTALZONE++;
			GetPlayerPos(playerid, GREENZONE[TOTALZONE][grX],GREENZONE[TOTALZONE][grY],GREENZONE[TOTALZONE][grZ]);
			GREENZONE[TOTALZONE][grVirt] = GetPlayerVirtualWorld(playerid);
			new query[512];
			mysql_format(connects, query, sizeof(query), "INSERT INTO `"TABLE_GREENZONE"` (`grx`,`gry`,`grz`,`grd`,`grname`,`grvirt`) VALUES\
			('%f','%f','%f','%i','%s','%i')",GREENZONE[TOTALZONE][grX],GREENZONE[TOTALZONE][grY],GREENZONE[TOTALZONE][grZ],price,name,GREENZONE[TOTALZONE][grVirt]);
			mysql_tquery(connects, query, "", "");
			strmid(GREENZONE[TOTALZONE][grName],name, 0, strlen(name), 32);
			GREENZONE[TOTALZONE][grid] = TOTALZONE;
			GREENZONE[TOTALZONE][grD] = float(price);

			static const f_str[] = "Зеленая зона под номером "ORANGE"%i"G" создана";
			new string[sizeof(f_str) +1 + (-2 + 3)];

			format(string,sizeof(string),f_str,TOTALZONE);
			SendOk(playerid,string);
			return 1;
		}
	case D_GREENZONE_EDIT: {
			if(!response) return true;
			switch(listitem) {
			case 0: D(playerid, D_GREENZONE_EDIT_NAME, DSI, ""P"Изменить название", "Введите название зоны:", "Далее", "Закрыть");
			case 1: {
					GetPlayerPos(playerid, GREENZONE[GetPVarInt(playerid,"ZONEID")][grX],GREENZONE[GetPVarInt(playerid,"ZONEID")][grY],GREENZONE[GetPVarInt(playerid,"ZONEID")][grZ]);
					GREENZONE[GetPVarInt(playerid,"ZONEID")][grVirt] = GetPlayerVirtualWorld(playerid);
					new query[128];
					mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_GREENZONE"` SET `grx` = '%f', `gry` = '%f', `grz` = '%f', `grvirt` = '%i'\
					WHERE `id` = '%i'",GREENZONE[GetPVarInt(playerid,"ZONEID")][grX],GREENZONE[GetPVarInt(playerid,"ZONEID")][grY],GREENZONE[GetPVarInt(playerid,"ZONEID")][grZ],
					GREENZONE[GetPVarInt(playerid,"ZONEID")][grVirt],GREENZONE[GetPVarInt(playerid,"ZONEID")][grid]);
					mysql_tquery(connects, query, "", "");
					SendOk(playerid,"Позиция изменена");
				}
			case 2: D(playerid, D_GREENZONE_EDIT_DIST, DSI, ""P"Изменить дистанцию", "Введите дистанцию для зоны:", "Далее", "Закрыть");
			}
			return true;
		}
	case D_GREENZONE_EDIT_NAME: {
			if(!response) return true;
			strmid(GREENZONE[GetPVarInt(playerid,"ZONEID")][grName],inputtext, 0, strlen(inputtext), 32);
			new query[128];
			mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_GREENZONE"` SET `grname` = '%s' WHERE `id` = '%i'",
			GREENZONE[GetPVarInt(playerid,"ZONEID")][grName],GREENZONE[GetPVarInt(playerid,"ZONEID")][grid]);
			mysql_tquery(connects, query, "", "");
			SendOk(playerid,"Название изменено");
		}
	case D_GREENZONE_EDIT_DIST: {
			if(!response) return true;
			GREENZONE[GetPVarInt(playerid,"ZONEID")][grD] = float(strval(inputtext));
			new query[128];
			mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_GREENZONE"` SET `grd` = '%f' WHERE `id` = '%i'",
			GREENZONE[GetPVarInt(playerid,"ZONEID")][grD],GREENZONE[GetPVarInt(playerid,"ZONEID")][grid]);
			mysql_tquery(connects, query, "", "");
			SendOk(playerid,"Дистанция изменена");
		}
	case D_BIKER_STOCK:
	{
		if(!response) return 1;
		switch(listitem)
		{
			case 0:
			{
					D(playerid,D_BIKERS_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета банды:\n\n","Пополнить","Закрыть");
			}
			case 1:
			{
					if(!PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная функция");
					D(playerid,D_BIKERS_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета банды:\n\n","Снять","Закрыть");
			}
			case 2: D(playerid,D_BIKERS_STOCK_PUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Положить материалы на склад:\n\n","Положить","Закрыть");
			case 3:
			{
				if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
				if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
					new str[128];
					format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
					SendClientMessage(playerid, COLOR_GREY,str);
					return 1;
				}
				D(playerid,D_BIKERS_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Взять материалы со склада:\n\n","Взять","Закрыть");
			}
			case 4: D(playerid,D_BIKERS_STOCK_PUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n","Положить","Закрыть");
			case 5:
			{
				if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
				if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
					new str[128];
					format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
					SendClientMessage(playerid, COLOR_GREY,str);
					return 1;
				}
				D(playerid,D_BIKERS_STOCK_INPUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n","Взять","Закрыть");
			}
			case 6:
			{
				if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
				if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock])
				{
					new str[128];
					format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
					SendClientMessage(playerid, COLOR_GREY,str);
					return 1;
				}
				D(playerid, D_BIKERS_GUN, DSL, ""P"Склад оружия",""P"1."W"Бейсбольная бита\n"P"2."W"Desert Eagle\n"P"3."W"Дробовик", "Выбрать", "Назад");
			}
		}
	}
		//отдел
	case D_BIKERS_GUN:
	{
		if(!response) return 1;
		switch(listitem)
		{
			case 0: D(playerid, D_BIKERS_GUN_1, DSM, ""P"Склад оружия",""ORANGE"Бейсбольная бита"W", взять биту?", "Взять", "Отмена");
			case 1: D(playerid, D_BIKERS_GUN_2, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Desert Eagle"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
			case 2: D(playerid, D_BIKERS_GUN_3, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Дробовик"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
		}
	}
	case D_BIKERS_GUN_1:
	{
		if(!response) return 1;
		GivePlayerWeapon(playerid,5,1);
		static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [1 шт]";
		new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];

		format(string,sizeof(string),f_str,player_name[playerid],playerid);
		SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
	}
	case D_BIKERS_GUN_2:
	{
		if(!response) return 1;
		if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер MC закрыл доступ к складу");
		if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock])
		{
			new str[128];
			format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
			SendClientMessage(playerid, COLOR_GREY,str);
			return 1;
		}
		new gun = strval(inputtext);
		if(gun < 10 || gun > 200) return D(playerid, D_BIKERS_GUN_2, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Desert Eagle"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
		SetPVarInt(playerid,"noneedgun",0);
		for(new i;i<12;i++)
		{
			new weapid,ammot;
			GetPlayerWeaponData(playerid,i,weapid,ammot);
			if(weapid == 24)
			{
				SetPVarInt(playerid,"noneedgun",1);
				break;
			}
		}
		if(FI[PI[playerid][pMember]][fMats]<(gun+MakeGunData[1][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BIKERS_GUN_2, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Desert Eagle"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");
		if(FI[PI[playerid][pMember]][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BIKERS_GUN_2, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Desert Eagle"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");

		MeAction(playerid,"взял(а) оружие со склада");
		if(!GetPVarInt(playerid,"noneedgun")) FI[PI[playerid][pMember]][fMats] -= MakeGunData[1][mgunamount];
		SetPVarInt(playerid,"noneedgun",0);

		FI[PI[playerid][pMember]][fMats] -= gun;
		UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);

		GivePlayerWeapon(playerid,MakeGunData[1][mgunid],gun);
		static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
		new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];

		format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
		SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
	}
	case D_BIKERS_GUN_3:
	{
		if(!response) return 1;
		if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
		if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock])
		{
			new str[128];
			format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
			SendClientMessage(playerid, COLOR_GREY,str);
			return 1;
		}
		new gun = strval(inputtext);
		if(gun < 10 || gun > 60) return D(playerid, D_BAND_GUN_3, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Дробовик"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 60\n\n", "Взять", "Отмена");
		SetPVarInt(playerid,"noneedgun",0);
		for(new i;i<12;i++)
		{
			new weapid,ammot;
			GetPlayerWeaponData(playerid,i,weapid,ammot);
			if(weapid == 25)
			{
				SetPVarInt(playerid,"noneedgun",1);
				break;
			}
		}
		if(FI[PI[playerid][pMember]][fMats]<(gun+MakeGunData[2][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BIKERS_GUN_3, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Дробовик"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");
		if(FI[PI[playerid][pMember]][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BIKERS_GUN_3, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Дробовик"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");

		MeAction(playerid,"взял(а) оружие со склада");
		if(!GetPVarInt(playerid,"noneedgun")) FI[PI[playerid][pMember]][fMats] -= MakeGunData[2][mgunamount];
		DeletePVar(playerid,"noneedgun");

		FI[PI[playerid][pMember]][fMats] -= gun;
		UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);

		GivePlayerWeapon(playerid,25,gun);
		static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
		new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];

		format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
		SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
	}
    case D_BIKERS_STOCK_PUT_MONEY:
	{
		if(!response) return 1;
		if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета MC:\n\n","Пополнить","Закрыть");
		new dengi = strval(inputtext);
		if(dengi < 1 || dengi > 500000) return D(playerid,D_BAND_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета MC:\n\n"NO"*"G" От $1 и до $500.000\n\n","Пополнить","Закрыть");
		if(PI[playerid][pCash] < dengi) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег");
		if(FI[PI[playerid][pMember]][fBank]+dengi > 3000000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя хранить более $3.000.000");
		FI[PI[playerid][pMember]][fBank] += dengi;
		UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);
		GiveMoney(playerid, -dengi,"положил на счета банды");

		static const f_str[] = "[F] %s[%d] положил(а) в банк MC: "GREEN"$%d";
		new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];

		format(string,sizeof(string),f_str,player_name[playerid],playerid,strval(inputtext));
		SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		MeAction(playerid,"положил(а) деньги на склад");
	}
	case D_BIKERS_STOCK_INPUT_MONEY:
	{
		if(!response) return 1;
		if(!PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная функция");
		if(!strval(inputtext)) return D(playerid,D_BAND_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета MC:\n\n","Снять","Закрыть");
		new dengi = strval(inputtext);
		if(dengi < 1) return D(playerid,D_BAND_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета MC:\n\n"NO"*"G" От $1\n\n","Снять","Закрыть");
		if(FI[PI[playerid][pMember]][fBank] < dengi) return SendClientMessage(playerid, COLOR_GREY, "В банке MC нет такой суммы");
		if (FI[PI[playerid][pMember]][fBankCash] + dengi > 200000)
		{
			static const f_bad_stock_money[] = "\
		    Суточный лимит на перевод/снятие средств с общака - $200.000. Доступный лимит: $%d";
			new str_bad_stock_money[sizeof(f_bad_stock_money) + (-2 + 12) + 120];
			format(str_bad_stock_money, sizeof(str_bad_stock_money), f_bad_stock_money, 200000 - FI[PI[playerid][pMember]][fBankCash]);
			SendClientMessage(playerid,COLOR_GREY, f_bad_stock_money);
			return 1;
		}
		FI[PI[playerid][pMember]][fBank] -= dengi;
		UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);

		FI[PI[playerid][pMember]][fBankCash] += dengi;
		UpdateFraction(PI[playerid][pMember],"BankCash",FI[PI[playerid][pMember]][fBankCash]);
		GiveMoney(playerid, dengi,"снял со счета банды");

		static const f_str[] = "[F] %s[%d] снял(а) с банка MC: "GREEN"$%d";
		new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 6)];

		format(string,sizeof(string),f_str,player_name[playerid],playerid,dengi);
		SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		MeAction(playerid,"взял(а) деньги со склада");
		return 1;
	}
	case D_BIKERS_STOCK_PUT_MATS:
	{
		if(!response) return 1;
		if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_PUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Положить материалы на склад:\n\n","Положить","Закрыть");
		new mats = strval(inputtext);
		if(mats < 1 || mats > 500) return D(playerid,D_BAND_STOCK_PUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Положить материалы на склад:\n\n"NO"*"G" От 1 и до 500\n\n","Положить","Закрыть");
		if(PI[playerid][pMats] < mats) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько материалов");
		if(FI[PI[playerid][pMember]][fMats] +mats > 300000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон");
		FI[PI[playerid][pMember]][fMats] += mats;
		UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);

		static const f_str[] = "[F] %s[%d] положил(а) %d материалов на склад";
		new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 +3)];

		format(string,sizeof(string),f_str,player_name[playerid],playerid,mats);
		SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		MeAction(playerid,"положил(а) материалы на склад");

		PI[playerid][pMats] -= mats;
		UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
		return  1;
	}
	case D_BIKERS_STOCK_INPUT_MATS:
	{
		if(!response) return 1;
		if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
		if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Взять материалы со склада:\n\n","Взять","Закрыть");
		new mats = strval(inputtext);
		if(mats < 1 || mats > 2000) return D(playerid,D_BAND_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Взять материалы со склада:\n\n"NO"*"G" От 1 и до 2000\n\n","Взять","Закрыть");
		if(FI[PI[playerid][pMember]][fSklad] == 0) return SendClientMessage(playerid, COLOR_GREY, "Лидер MC закрыл доступ к складу");
		if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
			new str[128];
			format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
			SendClientMessage(playerid, COLOR_GREY,str);
			return 1;
		}
		if(FI[PI[playerid][pMember]][fMats] < mats) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов");
		FI[PI[playerid][pMember]][fMats] -= mats;
		UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);

		PI[playerid][pMats] += mats;
		UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);

		static const f_str[] = "[F] %s[%d] взял(а) %d материалов со склада";
		new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 3)];

		format(string,sizeof(string),f_str,player_name[playerid],playerid,mats);
		SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		MeAction(playerid,"взял(а) материалы со склада");
		return true;
	}
	case D_BIKERS_STOCK_PUT_DRUGS:
	{

		if(!response) return 1;
		if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_PUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n","Положить","Закрыть");
		new drugs = strval(inputtext);
		if(drugs < 1 || drugs > 500) return D(playerid,D_BAND_STOCK_PUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n"NO"*"G" От 1 и до 500\n\n","Положить","Закрыть");
		if(PI[playerid][pDrugs] < drugs) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько наркотиков");
		if(FI[PI[playerid][pMember]][fDrugs]+drugs > 10000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон");
		FI[PI[playerid][pMember]][fDrugs] += drugs;
		UpdateFraction(PI[playerid][pMember],"Drugs",FI[PI[playerid][pMember]][fDrugs]);
		static const f_str[] = "[F] %s[%d] положил(а) %d наркотик(ов) на склад";
		new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 +3)];

		format(string,sizeof(string),f_str,player_name[playerid],playerid,drugs);
		SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		MeAction(playerid,"положил(а) наркотики на склад");
		PI[playerid][pDrugs] -= drugs;
		UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
		return  1;
	}
	case D_BIKERS_STOCK_INPUT_DRUGS:
	{
		if(!response) return 1;
		if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
		if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_INPUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n","Взять","Закрыть");
		new drugs = strval(inputtext);
		if(drugs < 1 || drugs > 50) return D(playerid,D_BAND_STOCK_INPUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n"NO"*"G" От 1 и до 50\n\n","Взять","Закрыть");
		if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер MC закрыл доступ к складу");
		if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
			new str[128];
			format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
			SendClientMessage(playerid, COLOR_GREY,str);
			return 1;
		}
		if(FI[PI[playerid][pMember]][fDrugs] < drugs) return SendClientMessage(playerid, COLOR_GREY, "На складе нет наркотиков");
		FI[PI[playerid][pMember]][fDrugs] -= drugs;
		UpdateFraction(PI[playerid][pMember],"Drugs",FI[PI[playerid][pMember]][fDrugs]);

		static const f_str[] = "[F] %s[%d] взял(а) %d наркотик(ов) со склада";
		new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 3)];

		format(string,sizeof(string),f_str,player_name[playerid],playerid,drugs);
		SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		MeAction(playerid,"взял(а) наркотики со склада");

		PI[playerid][pDrugs] += drugs;
		UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
		return true;
	}
		//
	case D_BAND_STOCK: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					D(playerid,D_BAND_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета банды:\n\n","Пополнить","Закрыть");
				}
			case 1: {
					if(!PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная функция");
					D(playerid,D_BAND_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета банды:\n\n","Снять","Закрыть");
				}
			case 2: D(playerid,D_BAND_STOCK_PUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Положить материалы на склад:\n\n","Положить","Закрыть");
			case 3: {
					if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
					if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
						new str[128];
						format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
						SendClientMessage(playerid, COLOR_GREY,str);
						return 1;
					}
					D(playerid,D_BAND_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Взять материалы со склада:\n\n","Взять","Закрыть");
				}
			case 4: D(playerid,D_BAND_STOCK_PUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n","Положить","Закрыть");
			case 5: {
					if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
					if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
						new str[128];
						format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
						SendClientMessage(playerid, COLOR_GREY,str);
						return 1;
					}
					D(playerid,D_BAND_STOCK_INPUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n","Взять","Закрыть");
				}
			case 6: {
					if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
					if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
						new str[128];
						format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
						SendClientMessage(playerid, COLOR_GREY,str);
						return 1;
					}
					D(playerid, D_BAND_GUN, DSL, ""P"Склад оружия",""P"1."W" SD Pistol\n"P"2."W" Desert Eagle\n"P"3."W" MP5\n"P"4."W" Shotgun\n"P"5."W" M4\n"P"6."W" AK-47\n"P"7."W" Rifle", "Выбрать", "Назад");
				}
			}
		}
	case D_BAND_DRUGS: {
			if(!response) return 1;
			new drugs = strval(inputtext);
			if(drugs < 500 || drugs > 10000) {
				new string[300];
				format(string,sizeof(string),""W"Введите кол-во наркотиков, которое желаете заказать:"GREEN" (1г = %d$)"W"\nВ общаке сейчас "P"%d г наркотиков\n\n"NO"*"G" От 500 и до 10000\n\n",gBusiness[56][bizzPrice],FI[PI[playerid][pMember]][fDrugs]);
				return D(playerid,D_BAND_DRUGS,DSI,""P"Заказ наркотиков",string,"Далее","Назад");
			}
			if(FI[PI[playerid][pMember]][fDrugs]+drugs > 10000) {
				new string[300];
				format(string,sizeof(string),""W"Введите кол-во наркотиков, которое желаете заказать:"GREEN" (1г = %d$)"W"\nВ общаке сейчас "P"%d г наркотиков\n\n"NO"*"G" На Ваш склад не поместится столько наркотиков\n\n",gBusiness[56][bizzPrice],FI[PI[playerid][pMember]][fDrugs]);
				return D(playerid,D_BAND_DRUGS,DSI,""P"Заказ наркотиков",string,"Далее","Назад");
			}
			if(FI[PI[playerid][pMember]][fBank] < gBusiness[56][bizzPrice]*drugs) return SendClientMessage(playerid, COLOR_GREY, "В общаке недостаточно денег");
			FI[PI[playerid][pMember]][fBank]-=(gBusiness[56][bizzPrice]*drugs);
			UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);
			FI[PI[playerid][pMember]][fDrugsBuy] = drugs;
			gBusiness[56][bizzBankDay] += gBusiness[56][bizzPrice]*drugs;
			UpdateFraction(PI[playerid][pMember],"DrugsBuy",FI[PI[playerid][pMember]][fDrugsBuy]);
			gBusiness[56][bizzBank] += gBusiness[56][bizzPrice]*drugs;
			UpdateBusinessData(57,"bank",gBusiness[56][bizzBank]);
			SendOk(playerid,"Наркотики успешно заказаны. Ожидайте, когда мафия Вам их доставит");
		}
	case D_BAND_GUN: {
			if(!response) return 1;
			switch(listitem) {
			case 0: D(playerid, D_BAND_GUN_1, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"SD Pistol"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
			case 1: D(playerid, D_BAND_GUN_2, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Desert Eagle"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
			case 2: D(playerid, D_BAND_GUN_3, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"MP5"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
			case 3: D(playerid, D_BAND_GUN_4, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Shotgun"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
			case 4: D(playerid, D_BAND_GUN_5, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"M4"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
			case 5: D(playerid, D_BAND_GUN_6, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"AK-47"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
			case 6: D(playerid, D_BAND_GUN_7, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Rifle"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
			}
		}
	case D_BAND_GUN_1: {
			if(!response) return 1;
			if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
				SendClientMessage(playerid, COLOR_GREY,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_1, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"SD Pistol"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
			SetPVarInt(playerid,"noneedgun",0);
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 23) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[PI[playerid][pMember]][fMats]<(gun+MakeGunData[0][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_1, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"SD Pistol"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");
			if(FI[PI[playerid][pMember]][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_1, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"SD Pistol"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");

			MeAction(playerid,"взял(а) оружие со склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[PI[playerid][pMember]][fMats] -= MakeGunData[0][mgunamount];
			SetPVarInt(playerid,"noneedgun",0);
			
			FI[PI[playerid][pMember]][fMats] -= gun;
			UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);

			GivePlayerWeapon(playerid,MakeGunData[0][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		}
	case D_BAND_GUN_2: {
			if(!response) return 1;
			if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
				SendClientMessage(playerid, COLOR_GREY,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_2, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Desert Eagle"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
			SetPVarInt(playerid,"noneedgun",0);
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 24) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[PI[playerid][pMember]][fMats]<(gun+MakeGunData[1][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_2, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Desert Eagle"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");
			if(FI[PI[playerid][pMember]][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_2, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Desert Eagle"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");

			MeAction(playerid,"взял(а) оружие со склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[PI[playerid][pMember]][fMats] -= MakeGunData[1][mgunamount];
			SetPVarInt(playerid,"noneedgun",0);
			
			FI[PI[playerid][pMember]][fMats] -= gun;
			UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);

			GivePlayerWeapon(playerid,MakeGunData[1][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		}
	case D_BAND_GUN_3: {
			if(!response) return 1;
			if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
				SendClientMessage(playerid, COLOR_GREY,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_3, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"MP5"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
			SetPVarInt(playerid,"noneedgun",0);
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 29) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[PI[playerid][pMember]][fMats]<(gun+MakeGunData[2][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_3, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"MP5"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");
			if(FI[PI[playerid][pMember]][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_3, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"MP5"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");

			MeAction(playerid,"взял(а) оружие со склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[PI[playerid][pMember]][fMats] -= MakeGunData[2][mgunamount];
			DeletePVar(playerid,"noneedgun");
			
			FI[PI[playerid][pMember]][fMats] -= gun;
			UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);

			GivePlayerWeapon(playerid,MakeGunData[2][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		}
	case D_BAND_GUN_4: {
			if(!response) return 1;
			if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
				SendClientMessage(playerid, COLOR_GREY,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_4, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Shotgun"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
			DeletePVar(playerid,"noneedgun");
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 25) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[PI[playerid][pMember]][fMats]<(gun+MakeGunData[3][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_4, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Shotgun"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");
			if(FI[PI[playerid][pMember]][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_4, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Shotgun"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");

			MeAction(playerid,"взял(а) оружие со склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[PI[playerid][pMember]][fMats] -= MakeGunData[3][mgunamount];
			DeletePVar(playerid,"noneedgun");
			
			FI[PI[playerid][pMember]][fMats] -= gun;
			UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);

			GivePlayerWeapon(playerid,MakeGunData[3][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		}
	case D_BAND_GUN_5: {
			if(!response) return 1;
			if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
				SendClientMessage(playerid, COLOR_GREY,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_5, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"M4"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
			DeletePVar(playerid,"noneedgun");
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 31) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[PI[playerid][pMember]][fMats]<(gun+MakeGunData[4][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_5, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"M4"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");
			if(FI[PI[playerid][pMember]][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_5, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"M4"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");

			MeAction(playerid,"взял(а) оружие со склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[PI[playerid][pMember]][fMats] -= MakeGunData[4][mgunamount];
			DeletePVar(playerid,"noneedgun");
			
			FI[PI[playerid][pMember]][fMats] -= gun;
			UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);

			GivePlayerWeapon(playerid,MakeGunData[4][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		}
	case D_BAND_GUN_6: {
			if(!response) return 1;
			if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
				SendClientMessage(playerid, COLOR_GREY,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_6, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"AK-47"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
			DeletePVar(playerid,"noneedgun");
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 30) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[PI[playerid][pMember]][fMats]<(gun+MakeGunData[5][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_6, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"AK-47"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");
			if(FI[PI[playerid][pMember]][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_6, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"AK-47"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");

			MeAction(playerid,"взял(а) оружие со склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[PI[playerid][pMember]][fMats] -= MakeGunData[5][mgunamount];
			DeletePVar(playerid,"noneedgun");
			
			FI[PI[playerid][pMember]][fMats] -= gun;
			UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);

			GivePlayerWeapon(playerid,MakeGunData[5][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		}
	case D_BAND_GUN_7: {
			if(!response) return 1;
			if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
				SendClientMessage(playerid, COLOR_GREY,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_7, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Rifle"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
			DeletePVar(playerid,"noneedgun");
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 33) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[PI[playerid][pMember]][fMats]<(gun+MakeGunData[6][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_7, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Rifle"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");
			if(FI[PI[playerid][pMember]][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_7, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Rifle"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно материалов\n\n", "Взять", "Отмена");

			MeAction(playerid,"взял(а) оружие со склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[PI[playerid][pMember]][fMats] -= MakeGunData[6][mgunamount];
			DeletePVar(playerid,"noneedgun");
			
			FI[PI[playerid][pMember]][fMats] -= gun;
			UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);

			GivePlayerWeapon(playerid,MakeGunData[6][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		}
	case D_BAND_STOCK_PUT_MONEY: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета банды:\n\n","Пополнить","Закрыть");
			new dengi = strval(inputtext);
			if(dengi < 1 || dengi > 500000) return D(playerid,D_BAND_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета банды:\n\n"NO"*"G" От $1 и до $500.000\n\n","Пополнить","Закрыть");
			if(PI[playerid][pCash] < dengi) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег");
			if(FI[PI[playerid][pMember]][fBank]+dengi > 3000000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя хранить более $3.000.000");
			FI[PI[playerid][pMember]][fBank] += dengi;
			UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);
			GiveMoney(playerid, -dengi,"положил на счета банды");
			
			static const f_str[] = "[F] %s[%d] положил(а) в банк банды: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,strval(inputtext));
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"положил(а) деньги на склад");
		}
	case D_BAND_STOCK_INPUT_MONEY: {
			if(!response) return 1;
			if(!PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная функция");
			if(!strval(inputtext)) return D(playerid,D_BAND_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета банды:\n\n","Снять","Закрыть");
			new dengi = strval(inputtext);
			if(dengi < 1) return D(playerid,D_BAND_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета банды:\n\n"NO"*"G" От $1\n\n","Снять","Закрыть");
			if(FI[PI[playerid][pMember]][fBank] < dengi) return SendClientMessage(playerid, COLOR_GREY, "В банке банды нет такой суммы");
			if (FI[PI[playerid][pMember]][fBankCash] + dengi > 200000)
			{
				static const f_bad_stock_money[] = "\
			    Суточный лимит на перевод/снятие средств с общака - $200.000. Доступный лимит: $%d";
				new str_bad_stock_money[sizeof(f_bad_stock_money) + (-2 + 12) + 120];
				format(str_bad_stock_money, sizeof(str_bad_stock_money), f_bad_stock_money, 200000 - FI[PI[playerid][pMember]][fBankCash]);
				SendClientMessage(playerid,COLOR_GREY, f_bad_stock_money);
				return 1;
			}
			FI[PI[playerid][pMember]][fBank] -= dengi;
			UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);
			
			FI[PI[playerid][pMember]][fBankCash] += dengi;
			UpdateFraction(PI[playerid][pMember],"BankCash",FI[PI[playerid][pMember]][fBankCash]);
			GiveMoney(playerid, dengi,"снял со счета банды");
			
			static const f_str[] = "[F] %s[%d] снял(а) с банка банды: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 6)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,dengi);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взял(а) деньги со склада");
			return 1;
		}
	case D_BAND_STOCK_PUT_MATS: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_PUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Положить материалы на склад:\n\n","Положить","Закрыть");
			new mats = strval(inputtext);
			if(mats < 1 || mats > 500) return D(playerid,D_BAND_STOCK_PUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Положить материалы на склад:\n\n"NO"*"G" От 1 и до 500\n\n","Положить","Закрыть");
			if(PI[playerid][pMats] < mats) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько материалов");
			if(FI[PI[playerid][pMember]][fMats] +mats > 300000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон");
			FI[PI[playerid][pMember]][fMats] += mats;
			UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);
			
			static const f_str[] = "[F] %s[%d] положил(а) %d материалов на склад";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 +3)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,mats);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"положил(а) материалы на склад");
			
			PI[playerid][pMats] -= mats;
			UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
			return  1;
		}
	case D_BAND_STOCK_INPUT_MATS: {
			if(!response) return 1;
			if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Взять материалы со склада:\n\n","Взять","Закрыть");
			new mats = strval(inputtext);
			if(mats < 1 || mats > 2000) return D(playerid,D_BAND_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Взять материалы со склада:\n\n"NO"*"G" От 1 и до 2000\n\n","Взять","Закрыть");
			if(FI[PI[playerid][pMember]][fSklad] == 0) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
				SendClientMessage(playerid, COLOR_GREY,str);
				return 1;
			}
			if(FI[PI[playerid][pMember]][fMats] < mats) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов");
			FI[PI[playerid][pMember]][fMats] -= mats;
			UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);
			
			PI[playerid][pMats] += mats;
			UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);

			static const f_str[] = "[F] %s[%d] взял(а) %d материалов со склада";
			new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 3)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,mats);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взял(а) материалы со склада");
			return true;
		}
	case D_BAND_STOCK_PUT_DRUGS: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_PUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n","Положить","Закрыть");
			new drugs = strval(inputtext);
			if(drugs < 1 || drugs > 500) return D(playerid,D_BAND_STOCK_PUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n"NO"*"G" От 1 и до 500\n\n","Положить","Закрыть");
			if(PI[playerid][pDrugs] < drugs) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько наркотиков");
			if(FI[PI[playerid][pMember]][fDrugs]+drugs > 10000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон");
			FI[PI[playerid][pMember]][fDrugs] += drugs;
			UpdateFraction(PI[playerid][pMember],"Drugs",FI[PI[playerid][pMember]][fDrugs]);
			static const f_str[] = "[F] %s[%d] положил(а) %d наркотик(ов) на склад";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 +3)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,drugs);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"положил(а) наркотики на склад");
			PI[playerid][pDrugs] -= drugs;
			UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
			return  1;
		}
	case D_BAND_STOCK_INPUT_DRUGS: {
			if(!response) return 1;
			if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_INPUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n","Взять","Закрыть");
			new drugs = strval(inputtext);
			if(drugs < 1 || drugs > 50) return D(playerid,D_BAND_STOCK_INPUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n"NO"*"G" От 1 и до 50\n\n","Взять","Закрыть");
			if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
				SendClientMessage(playerid, COLOR_GREY,str);
				return 1;
			}
			if(FI[PI[playerid][pMember]][fDrugs] < drugs) return SendClientMessage(playerid, COLOR_GREY, "На складе нет наркотиков");
			FI[PI[playerid][pMember]][fDrugs] -= drugs;
			UpdateFraction(PI[playerid][pMember],"Drugs",FI[PI[playerid][pMember]][fDrugs]);

			static const f_str[] = "[F] %s[%d] взял(а) %d наркотик(ов) со склада";
			new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 3)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,drugs);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взял(а) наркотики со склада");
			
			PI[playerid][pDrugs] += drugs;
			UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
			return true;
		}
	case D_MAFIA_STOCK: {
			if(!response) return 1;
			switch(listitem) {
			case 0: D(playerid,D_MAFIA_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета мафии:\n\n","Пополнить","Закрыть");
			case 1: {
					if(!PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная функция");
					D(playerid,D_MAFIA_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета мафии:\n\n","Снять","Закрыть");
				}
			case 2: D(playerid,D_MAFIA_STOCK_PUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Положить материалы на склад:\n\n","Положить","Закрыть");
			case 3: {
					if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей мафии закрыл доступ к складу");
					D(playerid,D_MAFIA_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Взять материалы со склада:\n\n","Взять","Закрыть");
				}
			case 4: D(playerid,D_MAFIA_STOCK_PUT_NARKO,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n","Положить","Закрыть");
			case 5: {
					if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей мафии закрыл доступ к складу");
					D(playerid,D_MAFIA_STOCK_INPUT_NARKO,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n","Взять","Закрыть");
				}
			}
		}
	case D_MAFIA_STOCK_PUT_MONEY: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета мафии:\n\n","Пополнить","Закрыть");
			new dengi = strval(inputtext);
			if(dengi < 1 || dengi > 100000) return D(playerid,D_MAFIA_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета мафии:\n\n"NO"*"G" От $1 и до $100000\n\n","Пополнить","Закрыть");
			if(PI[playerid][pCash] < dengi) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег");
			if(FI[PI[playerid][pMember]][fBank]+dengi > 4000000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя хранить более $4.000.000");
			FI[PI[playerid][pMember]][fBank] += dengi;
			UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);
			GiveMoney(playerid, -dengi,"положил на счета мафии");
			
			static const f_str[] = "[F] %s[%d] положил(а) в банк мафии: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,strval(inputtext));
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"положил(а) деньги на склад");
		}
	case D_MAFIA_STOCK_INPUT_MONEY: {
			if(!response) return 1;
			if(!PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная функция");
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета мафии:\n\n","Снять","Закрыть");
			new dengi = strval(inputtext);
			if(dengi < 1 || dengi > 300000) return D(playerid,D_MAFIA_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета мафии:\n\n"NO"*"G" От $1 и до $300.000\n\n","Снять","Закрыть");
			if(FI[PI[playerid][pMember]][fBank] < dengi) return SendClientMessage(playerid, COLOR_GREY, "В банке мафии нет такой суммы");
			if (FI[PI[playerid][pMember]][fBankCash] + dengi > 200000)
			{
				static const f_mafia_stock_money[] = "\
			Суточный лимит на перевод/снятие средств с общака - $200.000. Доступный лимит: $%d";
				new str_mafia_stock_money[sizeof(f_mafia_stock_money) + 160];
				format(str_mafia_stock_money, sizeof(str_mafia_stock_money), f_mafia_stock_money, 200000 - FI[PI[playerid][pMember]][fBankCash]);
				SendClientMessage(playerid,COLOR_GREY, str_mafia_stock_money);
				return 1;
			}
			FI[PI[playerid][pMember]][fBank] -= dengi;
			UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);
			FI[PI[playerid][pMember]][fBankCash] += dengi;
			UpdateFraction(PI[playerid][pMember],"BankCash",FI[PI[playerid][pMember]][fBankCash]);
			GiveMoney(playerid, dengi,"снял со счета мафии");
			
			static const f_str[] = "[F] %s[%d] снял(а) с банка фракции: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 6)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,dengi);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"снял(а) деньги со склада");
			return 1;
		}
	case D_MAFIA_STOCK_PUT_NARKO: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_PUT_NARKO,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n","Положить","Закрыть");
			new drugs = strval(inputtext);
			if(drugs < 1 || drugs > 500) return D(playerid,D_MAFIA_STOCK_PUT_NARKO,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n"NO"*"G" От 1 и до 500\n\n","Положить","Закрыть");
			if(PI[playerid][pDrugs] < drugs) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько наркотиков");
			if(FI[PI[playerid][pMember]][fDrugs]+drugs > 20000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон");
			FI[PI[playerid][pMember]][fDrugs] += drugs;
			UpdateFraction(PI[playerid][pMember],"Drugs",FI[PI[playerid][pMember]][fDrugs]);
			
			static const f_str[] = "[F] %s[%d] положил(а) %d наркотик(ов) на склад";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 +3)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,drugs);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"положил(а) наркотики на склад");
			
			PI[playerid][pDrugs] -= drugs;
			UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
			return  1;
		}
	case D_MAFIA_STOCK_INPUT_NARKO: {
			if(!response) return 1;
			if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_INPUT_NARKO,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n","Взять","Закрыть");
			new drugs = strval(inputtext);
			if(drugs < 1 || drugs > 5) return D(playerid,D_MAFIA_STOCK_INPUT_NARKO,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n"NO"*"G" От 1 и до 5\n\n","Взять","Закрыть");
			if(FI[PI[playerid][pMember]][fSklad] == 0) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей мафии закрыл доступ к складу");
			if(FI[PI[playerid][pMember]][fDrugs] < drugs) return SendClientMessage(playerid, COLOR_GREY, "На складе нет наркотиков");
			FI[PI[playerid][pMember]][fDrugs] -= drugs;
			UpdateFraction(PI[playerid][pMember],"Drugs",FI[PI[playerid][pMember]][fDrugs]);
			
			static const f_str[] = "[F] %s[%d] взял(а) %d наркотик(ов) со склада";
			new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 3)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,drugs);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взял(а) наркотики со склада");
			
			PI[playerid][pDrugs] += drugs;
			UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
			return true;
		}
	case D_MAFIA_STOCK_PUT_MATS: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_PUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Положить материалы на склад:\n\n","Положить","Закрыть");
			new mats = strval(inputtext);
			if(mats < 1 || mats > 500) return D(playerid,D_MAFIA_STOCK_PUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Положить материалы на склад:\n\n"NO"*"G" От 1 и до 500\n\n","Положить","Закрыть");
			if(PI[playerid][pMats] < mats) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько материалов");
			if(FI[PI[playerid][pMember]][fMats] +mats > 300000) return SendClientMessage(playerid, COLOR_GREY, "Склад полон");
			FI[PI[playerid][pMember]][fMats] += mats;
			UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);

			static const f_str[] = "[F] %s[%d] положил(а) %d материалов на склад";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 +3)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,mats);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"положил(а) материалы на склада");
			
			PI[playerid][pMats] -= mats;
			UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
			return  1;
		}
	case D_MAFIA_STOCK_INPUT_MATS: {
			if(!response) return 1;
			if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Взять материалы со склада:\n\n","Взять","Закрыть");
			new mats = strval(inputtext);
			if(mats < 1 || mats > 2000) return D(playerid,D_MAFIA_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во материалов","\n\n"W"Взять материалы со склада:\n\n"NO"*"G" От 1 и до 2000\n\n","Взять","Закрыть");
			if(FI[PI[playerid][pMember]][fSklad] == 0) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей мафии закрыл доступ к складу");
			if(FI[PI[playerid][pMember]][fMats] < mats) return SendClientMessage(playerid, COLOR_GREY, "На складе нет материалов");
			FI[PI[playerid][pMember]][fMats] -= mats;
			UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);
			
			PI[playerid][pMats] += mats;
			UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
			
			static const f_str[] = "[F] %s[%d] взял(а) %d материалы со склада";
			new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 3)];
			
			format(string,sizeof(string),f_str,player_name[playerid],playerid,mats);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взял(а) материалы со склада");
			return true;
		}
	case D_REPORT: {
			if(!response) return 1;
			if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
			if(GetPVarInt(playerid,"report") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Жалобу/вопрос можно писать только раз в 30 секунд.");
			if(!strlen(inputtext) || strlen(inputtext) > 250) {
				D(playerid,D_REPORT,DSI, ""P"Поддержка", ""W"Вы собираетесь отправить запрос Администраторам\n\nПожалуйста, не грубите, и соблюдайте адекватность.\nОписывайте свою проблему четко и ясно:", "Отправить", "Закрыть");
				return true;
			}
			if(!rep_system) {
				new string_1[175], str[300];
				format(string_1, sizeof(string_1), "Жалоба от игрока %s[%d]:{FFFFFF} %s",player_name[playerid],playerid,inputtext);
				SendAdminMessage(0xfB9DF4Eff,string_1);
				format(str,sizeof(str),"Ваша жалоба:"ORANGE" %s",inputtext);
				SendOk(playerid,str);
				SendOk(playerid,"Ожидайте, в ближайшее время вам ответит Администратор");
				SetPVarInt(playerid,"report",gettime()+30);
			}
			else
			{
				new bool:report = false,reps = 0;
				for(new i;i<MAX_REPORTS;i++) {
					if(PlayerReport[i] != -1) reps++;
				}
				for(new i;i<MAX_REPORTS;i++) {
					if(PlayerReport[reps] != -1) {
						reps++;
						continue;
					}
					PlayerReport[reps] = playerid;
					strmid(TextReport[reps], (inputtext),0,strlen(inputtext),150);
					new string_1[175];
					format(string_1, sizeof(string_1), "Жалоба от игрока %s[%d]:{FFFFFF} %s",player_name[playerid],playerid,inputtext);
					SendAdminMessage(0xfB9DF4Eff,string_1);
					new string[150];
					format(string, sizeof string, "Ваша жалоба: "ORANGE"%s", inputtext, reps+1);
					SendOk(playerid, string);
					format(string, sizeof string, "В скором времени Вам ответит администратор. Вы в очереди: "ORANGE"%d", reps+1);
					SendOk(playerid, string);
					report = true;
					SetPVarInt(playerid,"report_ac",1);
					break;
				}
				if(!report) return SendClientMessage(playerid, COLOR_GREY, "Попробуйте позже");
			}
			return true;
		}
	case D_REPORT_1: {
			new i = ReportID[playerid];
			if(!response) {
				ReportSlot[i] = -1, ReportID[playerid] = -1;
				return 1;
			}
			if(!strlen(inputtext) || strlen(inputtext)>134) {
				new string[300];
				format(string, sizeof(string), ""W"Жалоба от %s[%i]\n\n"W"%s\n\n"NO"*"G" От 1 до 134 символов", player_name[PlayerReport[i]], PlayerReport[i], TextReport[i]);
				D(playerid,D_REPORT_1,DSI, ""P"Репорт",string,"Принять","Отмена");
				return 1;
			}
			if(!IsPlayerConnected(PlayerReport[i])) {
				ReportDell(i);
				ReportID[playerid] = -1;
				SendClientMessage(playerid, COLOR_GREY, "Игрок вышел с игры");
				return 1;
			}
			new string[400];
			if(GetPVarInt(PlayerReport[i],"adchecking_fix")) {
				gAdvert[GetPVarInt(PlayerReport[i],"adchecking_fix")-1][adCheking]=false;
				DeletePVar(PlayerReport[i],"adchecking_fix");
			}
			format(string, sizeof(string), "Администратор %s[%i] ответил:"W" %s",player_name[playerid],playerid,inputtext);
			SendClientMessage(PlayerReport[i], COLOR_LIGHTRED, string);
			
			format(string, sizeof(string), "Администратор %s[%d] ответил %s[%d]:"W" %s",player_name[playerid],playerid,player_name[PlayerReport[i]],PlayerReport[i],inputtext);
			SendAdminMessage(COLOR_LIGHTRED, string);
			PlayerPlaySound(PlayerReport[i], 4203, 0.0, 0.0, 0.0);
			gAdmin[playerid][ADMIN_PM] ++;
			strmid(TextReportAdmin[i], (inputtext),0,strlen(inputtext),130);
			DeletePVar(PlayerReport[i], "report_ac");
			ReportDell(i);
			ReportID[playerid] = -1;
			return 1;
		}
	case D_LOGIN: {
			if(!response) return KickEx(playerid);
			new hour, minute, second, htxt[13], string[450];
			gettime(hour, minute, second);
			if(hour >= 6 && hour < 12)  format(htxt,sizeof(htxt),"Доброе утро");
			if(hour >= 12 && hour < 18) format(htxt,sizeof(htxt),"Добрый день");
			if(hour >= 18 && hour < 24) format(htxt,sizeof(htxt),"Добрый вечер");
			if(hour >= 0 && hour < 6)  format(htxt,sizeof(htxt),"Доброй ночи");
			if(!strlen(inputtext) || !CheckPassword(inputtext)) {
				if(!CheckPassword(inputtext)) SendClientMessage(playerid, COLOR_GREY, "Смените раскладку клавиатуры");
				format(string,sizeof(string),""W"%s,{F1DE2E} %s!"W"\nЭтот аккаунт зарегистрирован на нашем сервере\n\nВведите ниже пароль для авторизации:",htxt, player_name[playerid]);
				D(playerid, D_LOGIN, DSP, ""P"Авторизация", string, "Далее", "Закрыть");
				return true;
			}
			else {
				new hash[75];
				SHA256_PassHash(inputtext, player_salt[playerid], hash, 75);
				if(strcmp(hash,  player_pass[playerid])) {
					if(GetPVarInt(playerid, "wrongPass") == 2) return SendClientMessage(playerid, COLOR_GREY, "Неверный пароль. Используйте /q для выхода"), KickEx(playerid);
					SetPVarInt(playerid, "wrongPass", GetPVarInt(playerid, "wrongPass")+1);
					static const f_str_1[] = "Внимание! Вы ввели неправильный пароль. У Вас осталось "NO"%d попыток";
					new string_1[sizeof(f_str_1) + 3];
					format(string_1,sizeof(string_1), f_str_1,3-GetPVarInt(playerid, "wrongPass"));
					SendClientMessage(playerid, COLOR_GREY, string_1);
					format(string,sizeof(string),""W"%s,{F1DE2E} %s!"W"\nЭтот аккаунт зарегистрирован на нашем сервере\n\nВведите ниже пароль для авторизации:",htxt, player_name[playerid]);
					D(playerid, D_LOGIN, DSP, ""P"Авторизация", string, "Далее", "Закрыть");
				}
				else {
					if(PI[playerid][pGoogleSec] && strcmp(player_ip_check[playerid], player_ip[playerid]) != 0) {
						TI[playerid][tLoginTime] = 90;
						D(playerid, D_GOOGLE_2, DSI, ""P"Google Authenticator","\n\n"W"Введите код Google Authenticator:","Далее","Отмена");
						return 1;
					}
					else if(!GetString(PI[playerid][pKeyip], "-")) load_captcha(playerid);
					else load_load(playerid);
				}
			}
		}
	case D_GOOGLE_2: {
			if(!response) return KickEx(playerid);
			if(strlen(inputtext) != 6 || isNumeric(inputtext)) return D(playerid, D_GOOGLE_2, DSI, ""P"Google Authenticator", "\n\n"W"Введите код Google Authenticator:\n\n"NO"*"G" Ключ должен состоять из 6 цифр\n\n","Далее","Закрыть");
			new colvo = strval(inputtext);
			new heh = GoogleAuthenticatorCode(PI[playerid][pGoogle], gettime());
			if(heh == colvo) return load_load(playerid);
			else {
				if(GetPVarInt(playerid, "wrongGoogle") == 2) return SendClientMessage(playerid, COLOR_GREY, "Неверный код. Используйте /q для выхода"), KickEx(playerid);
				SetPVarInt(playerid, "wrongGoogle", GetPVarInt(playerid, "wrongGoogle")+1);
				static const f_str_1[] = "\n\n"W"Введите код Google Authenticator:\n\n"NO"*"G" Вы ввели неправильный код, осталось попыток: %d\n\n";
				new string_1[sizeof(f_str_1) + 3];
				format(string_1,sizeof(string_1), f_str_1,3-GetPVarInt(playerid, "wrongGoogle"));
				D(playerid, D_GOOGLE_2, DSI, ""P"Google Authenticator",string_1,"Далее","Закрыть");
				return 1;
			}
		}
	case D_GOOGLE_3: {
			if(!response) return true;
			if(!strlen(inputtext)) {
				new string[400];
				format(string,sizeof(string),""W"Инструкция по установке:\n\n1. Скачайте и установите Google Authenticator\n2. Запустите приложение\n3. В поле 'Название аккаунта' введите - %s\n4. В поле 'Ключ' введите ключ - %s",player_name[playerid],PI[playerid][pGenGoogle]);
				D(playerid, D_GOOGLE_3, DSI, ""P"Google Authenticator",string,"Далее","Отмена");
				return true;
			}
			new heh = GoogleAuthenticatorCode(PI[playerid][pGenGoogle], gettime());
			if(strval(inputtext) != heh) SendClientMessage(playerid,-1,"Ключ указан неверно");
			else {
				PI[playerid][pGoogleSec] = 1;
				UpdatePlayerData(playerid,"pGoogle",1);
				SendOk(playerid,"Google Authenticator успешно установлен");
				SendOk(playerid,"Одноразовый пароль будет запрашиваться при каждой смене IP адреса");
				new query[200];
				mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `GoogleCode` = '%s' WHERE `pID` = '%d' LIMIT 1",PI[playerid][pGenGoogle],PI[playerid][pID]);
				mysql_tquery(connects,query);
			}
		}
	case D_REG: {
			if(!response) return KickEx(playerid);
			new string[450];
			if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 30 || !CheckPassword(inputtext)) {
				format(string,sizeof(string),""W"Добро пожаловать,{F1DE2E} %s"W"\nЭтот аккаунт{F87427} не зарегистрирован"W" на нашем сервере.\n\nВведите ниже пароль для регистрации, при авторизации\nэтот пароль будет запрашиваться.\n\n\
			\tПримечания:\n\t - Длина пароля от 6 до 30 символов\n\t - Пароль должен состоять из букв и цифр\n\t - Пароль чувствителен к регистру",player_name[playerid]);
				D(playerid,D_REG,DSI, ""P"Регистрация",string, "Далее", "Закрыть");
				return true;
			}
			mysql_escape_string(inputtext, player_pass[playerid], 128);
			D(playerid, D_REG_FRIEND, DSI, ""P"Реферал", ""W"Введите ник игрока, пригласившего Вас на сервер\n\nПри достижении 3 уровня он получит {8FD318}награду", "Далее", "Пропуск");
			return true;
		}
	case D_REG_FRIEND: {
			if(!response) {
				strmid(PI[playerid][pDrug], "-", 0, strlen("-"), strlen("-")+5);
				D(playerid,D_REG_SEX,DSM, ""P"Регистрация", "\n"G"Выберите пол "ORANGE"Вашего"G" персонажа:\n", "Мужской", "Женский");
				return true;
			}
			if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 25)
			{
				D(playerid, D_REG_FRIEND, DSI, ""P"Реферал", ""W"Введите ник игрока, пригласившего Вас на сервер\n\nПри достижении 3 уровня он получит {8FD318}награду", "Далее", "Пропуск");
				return 1;
			}
			for(new i = strlen(inputtext); i != 0; --i)
			{
				switch(inputtext[i])
				{
				case 'А'..'Я', 'а'..'я', ' ':
					return D(playerid, D_REG_FRIEND, DSI, ""P"Реферал", "{F87427}* В базе данных нет такого аккаунта"W"\n\nВведите ник игрока, пригласившего Вас на сервер\n\nПри достижении 3 уровня он получит {8FD318}награду", "Далее", "Пропуск");
				}
			}
			MYSQL_GLOBAL[0] = EOS;
			mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL), "SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",inputtext);
			mysql_tquery(connects, MYSQL_GLOBAL, "friend_detectd","is", playerid,inputtext);
			return true;
		}
	case D_REG_SEX: {
			if(response) PI[playerid][pSex] = 1;
			else PI[playerid][pSex] = 2;
			ChosePlayerSkin(playerid);
		}
	case D_CLIST: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					if(PI[playerid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите во фракции");
					SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
				}
			case 1: SetPlayerColor(playerid, TEAM_HIT_COLOR);
			case 2: SetPlayerColor(playerid,0x089401FF);
			case 3: SetPlayerColor(playerid,0x56FB4EFF);
			case 4: SetPlayerColor(playerid,0x49E789FF);
			case 5: SetPlayerColor(playerid,0x2A9170FF);
			case 6: SetPlayerColor(playerid,0x9ED201FF);
			case 7: SetPlayerColor(playerid,0x279B1EFF);
			case 8: SetPlayerColor(playerid,0x003366FF);
			case 9: SetPlayerColor(playerid,0xFF0606FF);
			case 10: SetPlayerColor(playerid,0xFF6600FF);
			case 11: SetPlayerColor(playerid,0xF45000FF);
			case 12: SetPlayerColor(playerid,0xBE8A01FF);
			case 13: SetPlayerColor(playerid,0xB30000FF);
			case 14: SetPlayerColor(playerid,0x954F4FFF);
			case 15: SetPlayerColor(playerid,0xE7961DFF);
			case 16: SetPlayerColor(playerid,0xE6284EFF);
			case 17: SetPlayerColor(playerid,0xFF9DB6FF);
			case 18: SetPlayerColor(playerid,0x110CE7FF);
			case 19: SetPlayerColor(playerid,0x0CD7E7FF);
			case 20: SetPlayerColor(playerid,0x139BECFF);
			case 21: SetPlayerColor(playerid,0x2C9197FF);
			case 22: SetPlayerColor(playerid,0x114D71FF);
			case 23: SetPlayerColor(playerid,0x8813E7FF);
			case 24: SetPlayerColor(playerid,0xB313E7FF);
			case 25: SetPlayerColor(playerid,0x758C9DFF);
			case 26: SetPlayerColor(playerid,0xFFDE24FF);
			case 27: SetPlayerColor(playerid,0xFFEE8AFF);
			case 28: SetPlayerColor(playerid,0xDDB201FF);
			case 29: SetPlayerColor(playerid,0xDDA701FF);
			case 30: SetPlayerColor(playerid,0xB0B000FF);
			case 31: SetPlayerColor(playerid,0x868484FF);
			case 32: SetPlayerColor(playerid,0xB8B6B6FF);
			case 33: SetPlayerColor(playerid,0x333333FF);
			case 34: SetPlayerColor(playerid,0xFAFAFAFF);
			}
			return 1;
		}
	case D_CHANGE_PASS: {
			if(!TI[playerid][tLogin]) return 0;
			if(!response) return D(playerid, D_CONTROL_EDIT, DSL, ""P"Безопасность", ""P"1."W" Изменить пароль\n"P"2."W" Защитный ключ\n"P"3."W" E-Mail адрес\n"P"4."W" Google Authenticator", "Выбрать", "Назад");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 20) return D(playerid,D_CHANGE_PASS,DSI, ""P"Смена пароля","\n\n"W"Введите свой новый пароль для этого аккаунта:\n\n", "Ввод", "Назад");
			if(!CheckPassword(inputtext)) return D(playerid,D_CHANGE_PASS,DSI, ""P"Смена пароля","\n\n"W"Введите свой новый пароль для этого аккаунта:\n\n", "Ввод", "Назад");
			if(!TI[playerid][tLogin]) return 0;
			new pass[67];
			SHA256_PassHash(inputtext, "mary2land", pass, 70);
			new query[200],string[100];
			mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pKey` = '%s',`pSalt` = 'mary2land' WHERE `pID` = '%d' LIMIT 1",pass,PI[playerid][pID]);
			mysql_tquery(connects,query);
			format(string, sizeof(string), "Ваш новый пароль: "W"%s", inputtext);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			SendClientMessage(playerid, COLOR_YELLOW, ""G"[Совет]"YELLOW" Мы рекомендуем Вам сделать скриншот. Клавиша "W"F8");
			return 1;
		}
	case D_CONTROL_EDIT: {
			if(!response) return pc_cmd_menu(playerid,"");
			switch(listitem) {
			case 0: D(playerid,D_CHANGE_PASS,DSI, ""P"Смена пароля","\n\n"W"Введите свой новый пароль для этого аккаунта:\n\n", "Ввод", "Назад");
			case 1: {
					if(GetString(PI[playerid][pKeyip],"-")) {
						D(playerid, dCode, DSI, ""P"Защитный ключ", "\n\n"W"Придумайте новый защитный ключ:\n"G"Защитный ключ будет запрашиваться после каждого входа в игру\n\n","Далее","Назад");
					}
					else D(playerid, dChangeCode, DSL, ""P"Защитный ключ",""P"1."W" Сменить ключ\n"P"2."W" Отключить ключ\n"P"3."W" История входов","Выбрать", "Назад");
				}
			case 2: {
					if(!GetString(PI[playerid][pEmail],"no")) {
						new query[128],control;
						mysql_format(connects, query, sizeof(query),"SELECT * FROM `email_success` WHERE BINARY `Account` = '%s' LIMIT 1", player_name[playerid]);
						new Cache:result = mysql_query(connects, query);
						new rows = cache_num_rows();
						if(rows > 0) {
							cache_get_value_name_int(0, "Type", control);
							if(control == 1) D(playerid, DIALOG_NONE, DSM, ""P"E-Mail", "\n\n"W"E-Mail адрес на Вашем аккаунте уже подтвержден. Изменить его нельзя\n\n","Закрыть","");
							else D(playerid,D_MAIL_CONTROL,DSI, ""P"E-Mail",""W"Укажите Вашу "GREEN"почту"W"\n\nУкажите ваш реальный "P"Email"W". C помощью него вы сможете восстановить пароль","Далее","Назад");
						}
						else D(playerid, DIALOG_NONE, DSM, ""P"E-Mail", "\n\n"W"Подтвердите Ваш E-Mail адрес на сайте "YELLOW"ml-rp.ru\n\n","Закрыть","");
						cache_delete(result);
					}
					else D(playerid,D_MAIL_CONTROL,DSI, ""P"E-Mail",""W"Укажите Вашу "GREEN"почту"W"\n\nУкажите ваш реальный "P"Email"W". C помощью него вы сможете восстановить пароль","Далее","Назад");
				}
			case 3: {
					D(playerid, D_GOOGLE, DSL, ""P"Google Authenticator", ""P"1."W" Запрашивать пароль при каждой смене IP адреса\n"P"2."W" Отключить Google Authenticator","Выбрать","Назад");
				}
		
			}
		}

	case D_GOOGLE: {
			if(!response) return D(playerid, D_CONTROL_EDIT, DSL, ""P"Безопасность", ""P"1."W" Изменить пароль\n"P"2."W" Защитный ключ\n"P"3."W" E-Mail адрес\n"P"4."W" Google Authenticator", "Выбрать", "Назад");
			switch(listitem) {
			case 0: {
					if(PI[playerid][pGoogleSec]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже подключена данная опция");
					if(!GetString(PI[playerid][pKeyip], "-")) return SendClientMessage(playerid, COLOR_GREY, "Для защиты Google Authenticator отключите защитный ключ");
					new string[400];
					for(new i = 0; i < 17; i ++) strcat(PI[playerid][pGenGoogle], biglet1ters[random(sizeof(biglet1ters))]);
					format(string,sizeof(string),""W"Инструкция по установке:\n\n1. Скачайте и установите Google Authenticator\n2. Запустите приложение\n3. В поле 'Название аккаунта' введите - %s\n4. В поле 'Ключ' введите ключ - %s",player_name[playerid],PI[playerid][pGenGoogle]);
					D(playerid, D_GOOGLE_3, DSI, ""P"Google Authenticator",string,"Далее","Отмена");
				}
			case 1: {
					if(!PI[playerid][pGoogleSec]) return SendClientMessage(playerid, COLOR_GREY, "Google Authenticator уже отключен / не установлен");
					PI[playerid][pGoogleSec] = 0;
					UpdatePlayerData(playerid,"pGoogle",0);
					SendOk(playerid,"Защита Google Authenticator была отключена");
				}
			}
		}
	case D_MAIL_CONTROL: {
			if(!response) return D(playerid, D_CONTROL_EDIT, DSL, ""P"Безопасность", ""P"1."W" Изменить пароль\n"P"2."W" Защитный ключ\n"P"3."W" E-Mail адрес\n"P"4."W" Google Authenticator", "Выбрать", "Назад");
			if(strfind(inputtext,"|") != -1) {
				SendClientMessage(playerid, COLOR_GREY, "У Вас в почте пристуствуют запрещенные символы");
				D(playerid,D_MAIL_CONTROL,DSI, ""P"E-Mail",""W"Укажите Вашу "GREEN"почту"W"\n\nУкажите ваш реальный "P"Email"W". C помощью него вы сможете восстановить пароль","Далее","Назад");
				return 1;
			}
			if(!IsValidEmail(inputtext)) {
				SendClientMessage(playerid, COLOR_GREY, "E-Mail не верный. Повторите ввод");
				D(playerid,D_MAIL_CONTROL,DSI, ""P"E-Mail",""W"Укажите Вашу "GREEN"почту"W"\n\nУкажите ваш реальный "P"Email"W". C помощью него вы сможете восстановить пароль","Далее","Назад");
				return 1;
			}
			else {
				strmid(PI[playerid][pEmail], inputtext, 0, strlen(inputtext), strlen(inputtext)+5);
				new query[156];
				mysql_format(connects, query, sizeof(query),"UPDATE accounts SET pEmail = '%s' WHERE `pID` = '%d' LIMIT 1",PI[playerid][pEmail],PI[playerid][pID]);
				mysql_tquery(connects,query);
				new string[128];
				format(string,sizeof(string),"Ваш E-Mail адрес: "W"%s. "YELLOW"Подтвердите его на сайте ml-rp.ru в личном кабинете",PI[playerid][pEmail]);
				SendClientMessage(playerid,COLOR_YELLOW,string);
			}
		}
	case dChangeCode: {
			if(!response) return D(playerid, D_CONTROL_EDIT, DSL, ""P"Безопасность", ""P"1."W" Изменить пароль\n"P"2."W" Защитный ключ\n"P"3."W" E-Mail адрес\n"P"4."W" Google Authenticator", "Выбрать", "Назад");
			switch(listitem) {
			case 0: {
					if(GetString(PI[playerid][pKeyip],"-")) D(playerid,dCode,DSI, ""P"Защитный ключ", "\n\n"W"Придумайте новый защитный ключ:\n"G"Защитный ключ будет запрашиваться после каждого входа в игру\n\n","Далее","Отмена");
					else D(playerid,dCodeChange1,3,"Защитный ключ","\n\n"W"Введите Ваш старый ключ безопасности:\n\n","Ввод","Назад");
				}
			case 1: {
					SetString(PI[playerid][pKeyip],"-");
					new query[156];
					mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pKeyip` = '-' WHERE `pID` = '%d' LIMIT 1",PI[playerid][pID]);
					mysql_tquery(connects,query);
					SendOk(playerid,"Ключ безопасности отключен");
				}
			case 2: {
					new string[164];
					mysql_format(connects, string, sizeof(string),"SELECT * FROM `captchalog` WHERE `clName` = '%s' ORDER BY `captchalog`.`clID` DESC LIMIT 10", player_name[playerid]);
					mysql_tquery(connects, string, "OnPlayerCaptchaLoaded", "i", playerid);
				}
			}
		}
	case dCodeChange1: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(!strcmp(inputtext,PI[playerid][pKeyip],false) && strlen(inputtext)) {
				D(playerid,dCode,DSI, ""P"Защитный ключ", "\n\n"W"Придумайте новый защитный ключ:\n"G"Защитный ключ будет запрашиваться после каждого входа в игру\n\n","Далее","Назад");
			}
			else D(playerid,dCodeChange1,DSI, ""P"Защитный ключ","\n\n"W"Введите Ваш старый ключ безопасности:\n\n"NO"*"G" Ключ введён неверно\n\n","Ввод","Назад");
		}
	case dCode: {
			if(!response) return D(playerid, D_CONTROL_EDIT, DSL, ""P"Безопасность", ""P"1."W" Изменить пароль\n"P"2."W" Защитный ключ\n"P"3."W" E-Mail адрес\n"P"4."W" Google Authenticator", "Выбрать", "Назад");
			if(strlen(inputtext) != 4 || isNumeric(inputtext)) return D(playerid, dCode, DSI, ""P"Защитный код:", "\n\n"W"Придумайте новый защитный ключ:\n"G"Защитный ключ будет запрашиваться после каждого входа в игру\n\n"NO"*"G" Ключ должен состоять из 4 цифр\n\n","Далее","Отмена");
			new string[200];
			format(string,sizeof(string),"Ваш новый защитный ключ: "W"%s."YELLOW" Он будет запрашиваться при входе в игру",(inputtext));
			SendClientMessage(playerid, COLOR_YELLOW,string);
			SendClientMessage(playerid, COLOR_YELLOW, ""G"[Совет]"YELLOW" Мы рекомендуем Вам сделать скриншот, восстановить ключ при утере будет невозможно. Клавиша "W"F8");
			SetString(PI[playerid][pKeyip],inputtext);
			new query[156];
			mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pKeyip` = '%s' WHERE `pID` = '%d' LIMIT 1",PI[playerid][pKeyip],PI[playerid][pID]);
			mysql_pquery(connects,query);
			return 1;
		}
	case D_CHANGE_NAME: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(!strlen(inputtext)) return D(playerid,D_CHANGE_NAME,DSI, ""P"Заявка на смену ника", ""W"Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
			if(strlen(inputtext) < 5 || strlen(inputtext) > 20) return SendClientMessage(playerid, COLOR_GREY, "Длина ника должна быть от 5 до 20 символов");
			if(strfind(inputtext, " ") != -1) return SendClientMessage(playerid, COLOR_GREY, "В Вашем нике замечен пробел");
			if(IsIP(inputtext) || CheckString(inputtext) || strcmp(inputtext, "_",true) == -1) return SendClientMessage(playerid, COLOR_GREY, "Введите новый ник по формату: Имя_Фамилия");
			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i])
			{
			case 'А'..'Я', 'а'..'я', ' ':
				return SendClientMessage(playerid, COLOR_GREY, "Ник не должен содержать русские символы");
			}
			SetPVarString(playerid,"WantNickChange", inputtext);
			new query[128];
			mysql_format(connects, query, sizeof(query),"SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s' LIMIT 1", inputtext);
			mysql_pquery(connects, query,  "CallChangeName", "d", playerid);
			return true;
		}
	case D_MENU: {
			if(!response) return 1;
			switch(listitem) {
			case 0: ShowStats(playerid,playerid,0);
			case 1: D(playerid,D_MENU_COMMANDS,DSL, ""P"Команды", ""P"1."W" Общие команды\n"P"2."W" Чаты\n"P"3."W" По работе\n"P"4."W" Фракционные\n"P"5."W" Дом\n"P"6."W" Бизнес\n"P"7."W" Автомобиль\n"P"8."W" Семья\n"P"9."W" Лидер\n"P"10."W" Автоугон\n"P"11."W" Дом на колесах", "Выбрать", "Назад");
			case 2: pc_cmd_jobskill(playerid);
			case 3: {
					if(GetPVarInt(playerid,"report_ac")) return SendClientMessage(playerid, COLOR_GREY, "Вы уже подавали жалобу, ожидайте ответа");
					D(playerid,D_REPORT,DSI, ""P"Поддержка", ""W"Вы собираетесь отправить запрос Администраторам\n\nПожалуйста, не грубите, и соблюдайте адекватность.\nОписывайте свою проблему четко и ясно:", "Отправить", "Закрыть");
				}
			case 4: pc_cmd_inv(playerid);
			case 5: ShowSettings(playerid);
			case 6: {
					if(PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Лидерам запрещено менять ник");
					if (PI[playerid][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "На вашем аккаунте есть предупреждения");
					return D(playerid,D_CHANGE_NAME,DSI, ""P"Заявка на смену ника", ""W"Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
				}
			case 7: D(playerid, D_CONTROL_EDIT, DSL, ""P"Безопасность", ""P"1."W" Изменить пароль\n"P"2."W" Защитный ключ\n"P"3."W" E-Mail адрес\n"P"4."W" Google Authenticator", "Выбрать", "Назад");
			case 8: return D(playerid, D_USE_PROMO, DSI, ""P"Промокод", ""W"Введите ниже действующий{F1CF46} промокод"W" на сервере:", "Принять", "Назад");
			case 9: return pc_cmd_quest(playerid);
			case 10: D(playerid, D_CASES, DSL, ""P"Кейсы", "1. Кейс{bdb2b5} * SILVER *\n2. Кейс {ffd700} * GOLD *\n3. Кейс {f77d6b} * VIP *", "Выбрать", "Закрыть");
			case 11: return pc_cmd_donate(playerid);
			}
		}
	case D_CASES: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					STRING_GLOBAL[0] = 0;
					format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Кейсов{bdb2b5} SILVER %dшт"W"\n\nИз кейса может выпасть:\n\n* +10.000$\n* +50.000$\n* +75.000$\n\
			* +2 EXP\n* +3 EXP\n* +3 часа Премимум-аккаунта\n* +500 наркотиков\n\n\nНажмите 'открыть' чтобы узнать что внутри кейса",PI[playerid][pCases][0]);
					D(playerid, D_CASES_1, DSM, "Кейс {bdb2b5} * SILVER *", STRING_GLOBAL, "Открыть", "Отмена");
				}
			case 1: {
					STRING_GLOBAL[0] = 0;
					format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Кейсов{ffd700} GOLD %dшт"W"\n\nИз кейса может выпасть:\n\n* +60.000$\n* +90.000$\n* +160.000$\n\
			* +4 EXP\n* +3 EXP\n* +25 рублей доната\n* +10 часов Премимум-аккаунта\n* Аксессуар 'Миниган' на спину\n* +100 аптечек\n* +5000 матов\n\n\nНажмите 'открыть' чтобы узнать что внутри кейса",PI[playerid][pCases][1]);
					D(playerid, D_CASES_2, DSM, "Кейс {ffd700} * GOLD *", STRING_GLOBAL, "Открыть", "Отмена");
				}
			case 2: {
					STRING_GLOBAL[0] = 0;
					format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Кейсов{f77d6b} VIP %dшт"W"\n\nИз кейса может выпасть:\n\n* +100.000$\n* +170.000$\n* +250.000$\n\
			* +5 EXP\n* +3 EXP\n* +45 рублей доната\n* +10 часов Премиум-аккаунта\n* +5.000 наркотиков\n* +10.000 материалов\n* +20.000 аптечек\n* Аксессуар 'Дреды' на голову\n\nНажмите 'открыть' чтобы узнать что внутри кейса",PI[playerid][pCases][2]);
					D(playerid, D_CASES_3, DSM, "Кейс {f77d6b} * VIP *", STRING_GLOBAL, "Открыть", "Отмена");
				}
			}
		}
	case D_CASES_1: {
			if(!response) return true;
			if(!PI[playerid][pCases][0]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет кейсов");
			new rand; _random_repeat_case1:
			rand = Random(1,7);
			if(GetPVarType(playerid, "rand_case_1") != PLAYER_VARTYPE_NONE && GetPVarInt(playerid, "rand_case_1") == rand)
			goto _random_repeat_case1;
			
			switch(rand) {
			case 1: GiveMoney(playerid, 10000, "выдача денег кейс"), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{bdb2b5} * SILVER *"W" | Вы получаете:"P" +10000$");
			case 2: GiveMoney(playerid, 50000, "выдача денег кейс"), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{bdb2b5} * SILVER *"W" | Вы получаете:"P" +50000$");
			case 3: GiveMoney(playerid, 75000, "выдача денег кейс"), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{bdb2b5} * SILVER *"W" | Вы получаете:"P" +75000$");
			case 4: PI[playerid][pExp] += 2, UpdateExp(playerid), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{bdb2b5} * SILVER *"W" | Вы получаете:"P" +2 EXP");
			case 5: PI[playerid][pExp] += 3, UpdateExp(playerid), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{bdb2b5} * SILVER *"W" | Вы получаете:"P" +3 EXP");
			case 6: {
					if(PI[playerid][pPremium]) return SendClientMessage(playerid, COLOR_GREY, "Кейс оказался пустым, Вам выдана повторная попытка");
					PI[playerid][pPremium] += gettime()+(3*60*60);
					UpdatePlayerData(playerid,"premium",PI[playerid][pPremium]);
					SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{bdb2b5} * SILVER *"W" | Вы получаете:"P" Премиум-аккаунт на 3 часа");
				}
			case 7: {
					PI[playerid][pDrugs] += 500;
					UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
					SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{bdb2b5} * SILVER *"W" | Вы получаете:"P" 500 наркотиков");
				}
			}
			PI[playerid][pCases][0] -= 1;
			UpdatePlayerData(playerid, "case_1", PI[playerid][pCases][0]);
			SetPVarInt(playerid,"rand_case_1",rand);
			PI[playerid][pEvent] += 1;
            UpdatePlayerData(playerid,"event",PI[playerid][pEvent]);
		}
	case D_CASES_2: {
			if(!response) return true;
			if(!PI[playerid][pCases][1]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет кейсов");
			new rand; _random_repeat_case2:
			rand = Random(1,15);
			if(GetPVarType(playerid, "rand_case_2") != PLAYER_VARTYPE_NONE && GetPVarInt(playerid, "rand_case_2") == rand)
			goto _random_repeat_case2;

			switch(rand) {
			case 1: GiveMoney(playerid, 60000, "выдача денег кейс"), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" +60000$");
			case 2: GiveMoney(playerid, 90000, "выдача денег кейс"), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" +90000$");
			case 3: GiveMoney(playerid, 160000, "выдача денег кейс"), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" +160000$");
			case 4: PI[playerid][pExp] += 4, UpdateExp(playerid), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" +4 EXP");
			case 5: PI[playerid][pExp] += 3, UpdateExp(playerid), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" +3 EXP");
			case 6: {
					GiveDonate(playerid, 25, "донат с кейса gold");
					SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" +25 рублей доната");
				}
			case 7: {
					if(PI[playerid][pPremium]) return SendClientMessage(playerid, COLOR_GREY, "Кейс оказался пустым, Вам выдана повторная попытка");
					PI[playerid][pPremium] += gettime()+(10*60*60);
					UpdatePlayerData(playerid,"premium",PI[playerid][pPremium]);
					SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" +10 часов Премиум-аккаунта");
				}
			case 8: {
  	                if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "Кейс оказался пустым, Вам выдана повторная попытка");
					AddItem(playerid, 2, 1);
					SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" Аксессуар 'Миниган' на спину");
				}
			case 9: AddItem(playerid, 1, 100), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" +100 аптечек");
			case 10: {
					PI[playerid][pMats] += 10000;
					UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
					SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" +5к матов");
				}
			case 11: GiveMoney(playerid, 60000, "выдача денег кейс"), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" +60000$");
			case 12: GiveMoney(playerid, 90000, "выдача денег кейс"), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" +90000$");
			case 13: GiveMoney(playerid, 160000, "выдача денег кейс"), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" +160000$");
			case 14: PI[playerid][pExp] += 4, UpdateExp(playerid), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" +4 EXP");
			case 15: PI[playerid][pExp] += 3, UpdateExp(playerid), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{ffd700} * GOLD *"W" | Вы получаете:"P" +3 EXP");
			}
			PI[playerid][pCases][1] -= 1;
			UpdatePlayerData(playerid, "case_2", PI[playerid][pCases][1]);
			SetPVarInt(playerid,"rand_case_2",rand);
			PI[playerid][pEvent] += 1;
            UpdatePlayerData(playerid,"event",PI[playerid][pEvent]);
		}
	case D_CASES_3: {
			if(!response) return true;
			if(!PI[playerid][pCases][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет кейсов");
			new rand; _random_repeat_case3:
			rand = Random(1,10);
			if(GetPVarType(playerid, "rand_case_3") != PLAYER_VARTYPE_NONE && GetPVarInt(playerid, "rand_case_3") == rand)
			goto _random_repeat_case3;
			
			switch(rand) {
			case 1: GiveMoney(playerid, 100000, "выдача денег кейс"), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{f77d6b} * VIP *"W" | Вы получаете:"P" +100000$");
			case 2: GiveMoney(playerid, 170000, "выдача денег кейс"), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{f77d6b} * VIP *"W" | Вы получаете:"P" +170000$");
			case 3: GiveMoney(playerid, 250000, "выдача денег кейс"), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{f77d6b} * VIP *"W" | Вы получаете:"P" +250000$");
			case 4: PI[playerid][pExp] += 5, UpdateExp(playerid), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{f77d6b} * VIP *"W" | Вы получаете:"P" +5 EXP");
			case 5: PI[playerid][pExp] += 3, UpdateExp(playerid), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{f77d6b} * VIP *"W" | Вы получаете:"P" +3 EXP");
			case 6: {
					GiveDonate(playerid, 45, "донат с кейса vip");
					SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{f77d6b} * VIP *"W" | Вы получаете:"P" +45 рублей доната");
				}
			case 7: {
					if(PI[playerid][pPremium]) return SendClientMessage(playerid, COLOR_GREY, "Кейс оказался пустым, Вам выдана повторная попытка");
					PI[playerid][pPremium] += gettime()+(10*60*60);
					UpdatePlayerData(playerid,"premium",PI[playerid][pPremium]);
					SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{f77d6b} * VIP *"W" | Вы получаете:"P" Премиум-аккаунт на 10 часов");
				}
			case 8: {
					PI[playerid][pDrugs] += 5000;
					UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
					SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{f77d6b} * VIP *"W" | Вы получаете:"P" +5 к наркотиков");
				}
			case 9: {
					PI[playerid][pMats] += 10000;
					UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
					SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{f77d6b} * VIP *"W" | Вы получаете:"P" 10 к материалов");
			}
			case 10: AddItem(playerid, 1, 20000), SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{f77d6b} * VIP *"W" | Вы получаете:"P" 20 к аптечек");
			case 11: {
  	                if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "Кейс оказался пустым, Вам выдана повторная попытка");
					AddItem(playerid, 453, 1);
					SendClientMessage(playerid, COLOR_WHITE,"Вы открыли кейс{f77d6b} * VIP *"W" | Вы получаете:"P" Аксессуар 'Дреды' на спину");
				}
			}
			PI[playerid][pCases][2] -= 1;
			UpdatePlayerData(playerid, "case_3", PI[playerid][pCases][2]);
			SetPVarInt(playerid,"rand_case_3",rand);
			PI[playerid][pEvent] += 1;
            UpdatePlayerData(playerid,"event",PI[playerid][pEvent]);
		}
	case D_MENU_SETTING: {
			if(!response) return pc_cmd_menu(playerid,"");
			listitem = listitem+1;
			switch(listitem) {
			case 1: {
					if(PI[playerid][pSettings][listitem] == 0) {
						PI[playerid][pSettings][listitem] = 1;
						SendOk(playerid,"Вы включили чат организации");
					}
					else if(PI[playerid][pSettings][listitem] == 1) {
						PI[playerid][pSettings][listitem] = 0;
						SendOk(playerid,"Вы отключили чат организации");
					}
				}
			case 2: return D(playerid, D_NEWS_SELECT, DSL, ""P"Эфиры", ""P"1."W" Радиоцентр LS\n"P"-"W" Выключить", "Выбрать", "Назад");
			case 3: return D(playerid, D_CHAT, DSL, ""P"Стиль разговора", ""P"1."W" Стандартный\n"P"2."W" Стиль 1\n"P"3."W" Стиль 2\n"P"4."W" Стиль 3\n"P"5."W" Стиль 4\n"P"6."W" Стиль 5\n"P"7."W" Стиль 6", "Выбрать", "Назад");
			case 4: return D(playerid, D_BOX, DSL, ""P"Стиль боя", ""P"1."W" Стандартный\n"P"2."W" Бокс\n"P"3."W" Кунг-Фу\n"P"4."W" Кик-Бокс", "Выбрать", "Назад");
			case 5: {
					if(PI[playerid][pSettings][6]) {
						SendOk(playerid,"Вы скрыли состояние голода");
						PI[playerid][pSettings][6] = 0;
						Hunger(playerid,1);
					}
					else {
						SendOk(playerid,"Вы включили состояние голода");
						PI[playerid][pSettings][6] = 1;
						Hunger(playerid,0);
					}
				}
			case 6: {
					if(PI[playerid][pSettings][7]) {
						SendOk(playerid,"Вы убрали демонстрацию кейса в руках");
						PI[playerid][pSettings][7] = 0;
					}
					else {
						SendOk(playerid,"Вы включили показ демонстрацию кейса в руках");
						PI[playerid][pSettings][7] = 1;
					}
				}
			case 9: return D(playerid, D_SPAWN, DSL, ""P"Выбор спавна", ""P"1."W" Вокзал\n"P"2."W" В доме/квартире\n"P"3."W" На базе организации\n"P"4."W" В доме семьи\n"P"5."W" В доме на колесах", "Выбрать", "Отмена");
			case 7: {
					if(!PI[playerid][pSettings][10]) {
						SendOk(playerid,"Вы включили дамаг информер");
						PI[playerid][pSettings][10] = 1;
					}
					else {
						SendOk(playerid,"Вы выключили дамаг информер");
						PI[playerid][pSettings][10] = 0;
					}
				}
			case 8: {
					if(!PI[playerid][pSettings][8]) {
						SendOk(playerid,"Вы включили действия Администрации в чате");
						PI[playerid][pSettings][8] = 1;
					}
					else {
						SendOk(playerid,"Вы выключили действия Администрации в чате");
						PI[playerid][pSettings][8] = 0;
					}
				}
			}
			save_settings(playerid);
			ShowSettings(playerid);
		}
	case D_MENU_MAIN: {
			if(!response) return true;
			D(playerid,D_MENU_COMMANDS,DSL, ""P"Команды", ""P"1."W" Общие команды\n"P"2."W" Чаты\n"P"3."W" По работе\n"P"4."W" Фракционные\n"P"5."W" Дом\n"P"6."W" Бизнес\n"P"7."W" Автомобиль\n"P"8."W" Семья\n"P"9."W" Лидер\n"P"10."W" Автоугон\n"P"11."W" Дом на колесах", "Выбрать", "Назад");
		}
	case D_MENU_COMMANDS: {
			if(!response) return pc_cmd_menu(playerid,"");
			new string[1512];
			switch(listitem) {
			case 0: {
					strcat(string,""P"/id"W" - узнать ид игрока по нику\n");
					strcat(string,""P"/ad"W" - подать объявление\n");
					strcat(string,""P"/radio"W" - выбрать радиостанцию\n");
					strcat(string,""P"/leaders"W" - руководители организаций (online)\n");
					strcat(string,""P"/subleaders"W" - заместители организаций (online)\n");
					strcat(string,""P"/anim"W" - список анимаций\n");
					strcat(string,""P"/number"W" - узнать номер игрока\n");
					strcat(string,""P"/с(/call)"W" - совершить вызов\n");
					strcat(string,""P"/sms"W" - написать СМС\n");
					strcat(string,""P"/book"W" - адресная книга\n");
					strcat(string,""P"/time"W" - посмотреть время\n");
					strcat(string,""P"/pass"W" - показать паспорт\n");
					strcat(string,""P"/lic"W" - показать лицензии\n");
					strcat(string,""P"/togphone"W" - выключить/включить телефон\n");
					strcat(string,""P"/pay"W" - передать деньги\n");
					strcat(string,""P"/hi"W" - пожать руку\n");
					strcat(string,""P"/buyfuel"W" - купить канистру с бензином\n");
					strcat(string,""P"/fillcar"W" - использовать канистру с бензином\n");
					strcat(string,""P"/propose"W" - сделать предложение\n");
					strcat(string,""P"/divorce"W" - развестись\n");
					strcat(string,""P"/play"W" - онлайн радио\n");
					strcat(string,""P"/top"W" - топ игроков\n");
					strcat(string,""P"/medcard"W" - показать мед. карту\n");
					strcat(string,""P"/referals"W" - список рефералов\n");
					strcat(string,""P"/leave"W" - уволиться из организации (VIP)\n");
					strcat(string,""P"/inv"W" - инвентарь с предметами\n");
					strcat(string,""P"/wbook"W" - просмотр трудовой книжки\n");
					strcat(string,""P"/report"W" - отправить жалобу Администраторам\n");
					strcat(string,""P"/eject"W" - выбросить игрока с т/с\n");
					strcat(string,""P"/viphelp"W" - информация о премиум-аккаунте\n");
					strcat(string,""P"/mycollab"W" - статистика сотрудничества\n");
					strcat(string,""P"/bonus"W" - использовать бонус-код");
					D(playerid,D_MENU_MAIN,DSM, ""P"Команды",string,"Назад","");
				}
			case 1: {
					strcat(string,""P"/b"W" - ООС чат\n");
					strcat(string,""P"/me"W" - чат действий\n");
					strcat(string,""P"/ame"W" - действий над головой\n");
					strcat(string,""P"/do"W" - чат от 3-го лица\n");
					strcat(string,""P"/ado"W" - чат от 3-го лица над головой\n");
					strcat(string,""P"/try"W" - попытка действия (Удачно, Неудачно)\n");
					strcat(string,""P"/todo"W" - разговор совмещён с действием\n");
					strcat(string,""P"/s"W" - кричать\n");
					strcat(string,""P"/w"W" - шептать\n");
					strcat(string,""P"/flip"W" - подбросить монетку\n");
					D(playerid,D_MENU_MAIN,DSM, ""P"Команды",string,"Назад","");
				}
			case 2: {
					switch(PI[playerid][pJob]) {
					case 1: {
							strcat(string,""GREEN"Чтобы начать работу водителя автобуса, необходимо арендовать автобус.\n");
							strcat(string,""GREEN"Место аренды автобусов Вы можете найти в GPS.\n");
							strcat(string,"\t\t\t"YELLOW"/gps >> работы\n");
						}
					case 2: {
							strcat(string,""P"/repairs"W" - список вызовов\n");
							strcat(string,""P"/repair"W" - починить автомобиль\n");
							strcat(string,""P"/refill"W" - заправить автомобиль\n");
							strcat(string,""P"/contract"W" - купить топливо у АЗС\n");
							strcat(string,""P"/tow"W" - буксировать автомобиль\n");
							strcat(string,""P"/untow"W" - отцепить автомобиль\n");
						} 
					case 3: {
							strcat(string, ""P"/prods"W" - список заказов продуктов/топлива\n");
							strcat(string, ""GREEN"Место аренды развозчиков продуктов/топлива Вы можете найти в GPS.\n");
							strcat(string, "\t\t\t"YELLOW"/gps >> работы\n");
						}
					case 4: {
							strcat(string,""P"/bhd"W" - купить хот-доги у закусочной\n");
							strcat(string,""P"/shd"W" - продать хот-дог игроку\n");
						}
					case 5: {
							strcat(string,""W"Место аренды Т/С для уборки улиц Вы можете найти в GPS.\n/gps > По работе");
						}
					case 6: {
							strcat(string,""P"/sewerage"W" - Список всех люков\n");
							strcat(string,""P"/loadweste"W" - Начать загрузку мусора\n");
							strcat(string,""GREEN"Место аренды Т/С для работы Вы можете найти в GPS.\n");
						} // отсутствует работа № 7
					case 8: {
							strcat(string,""P"/count"W" - Установить счетчик игроку\n");
							strcat(string,""P"/taxilist"W" - Список заказов\n");
							strcat(string,""P"/fare"W" - Установить тариф\n");
							strcat(string,""P"/taxi"W" - Запросить данные о местонахождении\n");
							strcat(string,""P"/untaxi"W" - Снять метку с карты");
						}
					case 9: {
							strcat(string,""P"/bload"W" - Начать загрузку денег\n");
							strcat(string,""P"/bunload"W" - Начать разгрузку денег");
						}
					default: return SendClientMessage(playerid, COLOR_GREY, "Вы не трудоустроены"),pc_cmd_menu(playerid,"");
					}
					D(playerid,D_MENU_MAIN,DSM, ""P"Команды",string,"Назад","");
				}
			case 3: {
					switch(PI[playerid][pMember]) {
					case fLSPD,fFBI,fRCSD: {
							strcat(string,""P"/r"W" - рация\n");
							strcat(string,""P"/rb"W" - НонРП рация\n");
							strcat(string,""P"/d"W" - рация гос. департамента\n");
							strcat(string,""P"/db"W" - НонРП рация гос. департамента\n");
							strcat(string,""P"/rr"W" - рация подфракций\n");
							strcat(string,""P"/m"W" - мегафон\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/gnews"W" - гос. новости\n");
							strcat(string,""P"/su"W" - выдать розыск\n");
							strcat(string,""P"/clear"W" - снять розыск\n");
							strcat(string,""P"/ud"W" - показать удостоверение\n");
							strcat(string,""P"/gotome"W" - тащить за собой\n");
							strcat(string,""P"/tazer"W" - поразить электрошокером\n");
							strcat(string,""P"/cuff"W" - надеть наручники\n");
							strcat(string,""P"/uncuff"W" - снять наручники\n");
							strcat(string,""P"/obc"W" - бортовой компьютер\n");
							strcat(string,""P"/patrul"W" - начать патрулирование\n");
							strcat(string,""P"/find"W" - найти преступника\n");
							strcat(string,""P"/wanted"W" - список преступников\n");
							strcat(string,""P"/arrest"W" - посадить в КПЗ\n");
							strcat(string,""P"/push"W" - затолкать в автомобиль\n");
							strcat(string,""P"/unmask"W" - снять маску\n");
							strcat(string,""P"/look"W" - обыскать игрока\n");
							strcat(string,""P"/take"W" - изъять лицензии/вещи\n");
							strcat(string,""P"/ticket"W" - выписать штраф\n");
							strcat(string,""P"/spikes"W" - выбросить шипы\n");
							strcat(string,""P"/hack"W" - взломать дверь дома\n");
							strcat(string,""P"/fences"W" - установить ограждение\n");
							strcat(string,""P"/rights"W" - вопрос об приминении своих прав\n");
							strcat(string,""P"/mark"W" - установить/снять маркировку с т/с\n");
							strcat(string,""P"/marklist"W" - проверить все маркировки на т/с\n");
							strcat(string,""P"/alc"W" - проверка заключенных на алькатрасе\n");
							strcat(string,""P"/hacker"W" - посмотреть личное дело хакера");
							if(PI[playerid][pMember] == fFBI) {
								strcat(string,""P"/fakepass"W" - показать поддельный паспорт\n");
								strcat(string,""P"/givekey"W" - выдать/забрать пропуск\n");
							}
						}
					
					case fMEDICLS,fMEDICSF,fMEDICLV: {
							strcat(string,""P"/r"W" - рация\n");
							strcat(string,""P"/rb"W" - НонРП рация\n");
							strcat(string,""P"/d"W" - рация гос. департамента\n");
							strcat(string,""P"/db"W" - НонРП рация гос. департамента\n");
							strcat(string,""P"/rr"W" - рация подфракций\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/gnews"W" - гос. новости\n");
							strcat(string,""P"/heal"W" - вылечить игрока\n");
							strcat(string,""P"/medics"W" - список вызовов\n");
							strcat(string,""P"/topmed"W" - Лучшие работники\n");
						}
					case fINSTRUCTORS:
						{
							strcat(string,""P"/sellic"W" - выдать лицензию (с 2 ранга)\n");
						}
					case fLSNEWS,fSFNEWS,fLVNEWS: {
							strcat(string,""P"/r"W" - рация\n");
							strcat(string,""P"/rb"W" - НонРП рация\n");
							strcat(string,""P"/d"W" - рация гос. департамента\n");
							strcat(string,""P"/db"W" - НонРП рация гос. департамента\n");
							strcat(string,""P"/rr"W" - рация подфракций\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/gnews"W" - гос. новости\n");
							strcat(string,""P"/ether"W" - прямой эфир\n");
							strcat(string,""P"/edit"W" - объявления\n");
							strcat(string,""P"/skip"W" - положить трубку\n");
							strcat(string,""P"/udjur"W" - показать удостоверение журналиста\n");
							strcat(string,""P"/audience"W" - рейтинг слушателей\n");
							strcat(string,""P"/topnews"W" - ТОП-10 сотрудников\n");
							strcat(string,""P"/adv"W" - Отредактированные объявления\n");
						}
					case fARMYLS: {
							strcat(string,""P"/r"W" - рация\n");
							strcat(string,""P"/rb"W" - НонРП рация\n");
							strcat(string,""P"/d"W" - рация гос. департамента\n");
							strcat(string,""P"/db"W" - НонРП рация гос. департамента\n");
							strcat(string,""P"/rr"W" - рация подфракций\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/gnews"W" - гос. новости\n");
							strcat(string,""P"/load"W" - начать загрузку боеприпасов\n");
							strcat(string,""P"/unload"W" - начать разгрузку боеприпасов\n");
							strcat(string,""P"/carm"W" - начать перевозку боеприпасов\n");
						}
					case fBikers, fBikersTwo:
					{
						strcat(string,""P"/warelock"W" - открыть/закрыть склад\n");
						strcat(string,""P"/f"W" - рация\n");
						strcat(string,""P"/fb"W" - НонРП рация\n");
						strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
					}
					case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: {
							strcat(string,""P"/f"W" - рация\n");
							strcat(string,""P"/fb"W" - НонРП рация\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/capture"W" - начать войну за территорию\n");
							strcat(string,""P"/zone"W" - узнать количество территорий\n");
							strcat(string,""P"/captstats"W" - статистика капта\n");
							strcat(string,""P"/sellgun"W" - продать оружие\n");
							strcat(string,""P"/getgun"W" - взять оружие со склада\n");
							strcat(string,""P"/load"W" - начать загрузку материалов\n");
							strcat(string,""P"/unload"W" - начать разгрузку материалов\n");
							strcat(string,""P"/mask"W" - надеть маску\n");
							strcat(string,""P"/maskoff"W" - снять маску\n");
							strcat(string,""P"/dress"W" - переодеться в военную форму\n");
							strcat(string,""P"/givekey"W" - выдать/забрать пропуск\n");
							strcat(string,""P"/robload"W" - начать загрузку фургона\n");
							strcat(string,""P"/robhouse"W" - ограбить дом\n");
							strcat(string,""P"/bankhack"W" - взлом двери в банке\n");
							strcat(string,""P"/sellzone"W" - продать территорию\n");
							strcat(string,""P"/warelock"W" - открыть/закрыть склад\n");
							strcat(string,""P"/bmarket"W" - управление черным рынком\n");
							strcat(string,""P"/gpay"W" - выдать премию\n");
							strcat(string,""P"/vhack"W" - взломать ворота нац. гвардии\n");
							strcat(string,""P"/gangtop"W" - TOP всех банд\n");
							strcat(string,""P"/unloadmat"W" - Разгрузка грузовика\n");
							strcat(string,""P"/hacker"W" - Меню хакера");
						}
					case fRM,fLCN,fYAKUZA: {
							strcat(string,""P"/f"W" - рация\n");
							strcat(string,""P"/fb"W" - НонРП рация\n");
							strcat(string,""P"/rr"W" - рация подфракций\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/bizwar"W" - начать войну за бизнес\n");
							strcat(string,""P"/bizlist"W" - посмотреть список бизнесов под контролем\n");
							strcat(string,""P"/tie"W" - связать игрока\n");
							strcat(string,""P"/push"W" - затолкать в автомобиль\n");
							strcat(string,""P"/untie"W" - развязать игрока\n");
							strcat(string,""P"/takephone"W" - забрать телефон\n");
							strcat(string,""P"/givephone"W" - вернуть телефон\n");
							strcat(string,""P"/takeradio"W" - забрать рацию\n");
							strcat(string,""P"/giveradio"W" - вернуть рацию\n");
							strcat(string,""P"/gag"W" - вставить/достать кляп\n");
							strcat(string,""P"/bag"W" - надеть/снять мешок с головы\n");
							strcat(string,""P"/warelock"W" - открыть/закрыть склад\n");
							strcat(string,""P"/makegun"W" - сделать оружие\n");
							strcat(string,""P"/load"W" - начать загрузку боеприпасов\n");
							strcat(string,""P"/unload"W" - начать разгрузку боеприпасов\n");
							strcat(string,""P"/dcarm"W" - начать развозить наркотики\n");
							strcat(string,""P"/vhack"W" - взломать ворота нац. гвардии\n");
							strcat(string,""P"/unloadmat"W" - Разгрузка грузовика\n");
							strcat(string,""P"/hacker"W" - Меню хакера");
						}
					case fWHITEHOUSE: {
							strcat(string,""P"/r"W" - рация\n");
							strcat(string,""P"/rb"W" - НонРП рация\n");
							strcat(string,""P"/d"W" - рация гос. департамента\n");
							strcat(string,""P"/db"W" - НонРП рация гос. департамента\n");
							strcat(string,""P"/lmayor"W" - управление штатом\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/gnews"W" - гос. новости\n");
							strcat(string, ""P"/free"W" - выпустить из тюрьмы\n");
							strcat(string,""P"/givekey"W" - выдать/забрать пропуск\n");
							strcat(string,""P"/fvig"W" - выдать пред. члену гос. организации\n");
							strcat(string,""P"/goscars"W" - Купить транспорт для гос.структур\n");
							
						}
					default: return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
					}
					strcat(string,""P"/fspcar"W" - спавн незанятых авто\n");
					D(playerid,D_MENU_MAIN,DSM, ""P"Команды",string,"Назад","");
				}
			case 4: {
					if(!PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома");
					strcat(string,""P"/house"W" - меню управления домом\n");
					strcat(string,""P"/safe"W" - сейф\n");
					strcat(string,""P"/hgps"W" - установить метку к дому\n");
					strcat(string,""P"/hhealme"W" - использовать аптечку\n");
					D(playerid,D_MENU_MAIN,DSM, ""P"Команды",string,"Назад","");
				}
			case 5: {
					if(!PI[playerid][pBusiness]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бизнеса");
					strcat(string,""P"/bpanel"W" - меню управления бизнесом\n");
					D(playerid,D_MENU_MAIN,DSM, ""P"Команды",string,"Назад","");
				}
			case 6: {
					strcat(string,""P"/lock"W" - открыть/закрыть Т/С\n");
					strcat(string,""P"/changecar"W" - обменять т/с\n");
					strcat(string,""P"/sellcar"W" - продать транспорт игроку/в гос\n");
					strcat(string,""P"/trunk"W" - багажник\n");
					strcat(string,""P"/slimit"W" - установить ограничение скорости Т/С\n");
					strcat(string,""P"/remp"W" - починить Т/С\n");
					strcat(string,""P"/fixcar"W" - заспавнить авто\n");
					strcat(string,""P"/pts"W" - документы на транспорт\n");
					D(playerid,D_MENU_MAIN,DSM, ""P"Команды",string,"Назад","");
				}
			case 7: {
					if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
					strcat(string,""P"/fmenu"W" - меню семьи\n");
					strcat(string,""P"/fam"W" - чат семьи\n");
					strcat(string,""P"/finvite"W" - принять в семью\n");
					strcat(string,""P"/funinvite"W" - выгнать из семьи\n");
					strcat(string,""P"/foffuninvite"W" - выгнать из семьи в оффлайн\n");
					strcat(string,""P"/frang"W" - повысить/понизить члена семьи\n");
					strcat(string,""P"/famsklad"W" - открыть/закрыть сбережения семьи\n");
					strcat(string,""P"/fampark"W" - припарковать семейный транспорт\n"); 
					strcat(string,""P"/famspcar"W" - спавн т/с на своих координатах\n");
					strcat(string,""P"/safe"W" - сбережения семьи в доме\n");
					D(playerid,D_MENU_MAIN,DSM, ""P"Команды",string,"Назад","");
				}
			case 8: {
					if(!PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Вы не лидер");
					strcat(string,""P"/invite"W" - принять игрока в организацию\n");
					strcat(string,""P"/uninvite"W" - выгнать игрока из организации\n");
					strcat(string,""P"/rang"W" - повысить/понизить ранг\n");
					strcat(string,""P"/changeskin"W" - сменить скин игроку\n");
					strcat(string,""P"/lmenu"W" - меню лидера\n");
					strcat(string,""P"/fwarn"W" - выдать выговор\n");
					strcat(string,""P"/funwarn"W" - снять выговор\n");
					strcat(string,""P"/bl"W" - управление черным списком\n");
					strcat(string,""P"/fmute"W" - выдать заглушку\n");
					strcat(string,""P"/funmute"W" - снять заглушку\n");
					strcat(string,""P"/offmembers"W" - состав оффлайн\n");
					D(playerid,D_MENU_MAIN,DSM, ""P"Команды",string,"Назад","");
				}
			case 9: { 
					strcat(string,""P"/theft"W" - управление угоном\n");
					strcat(string,""P"/theftskill"W" - навык автоугона\n");
					D(playerid,D_MENU_MAIN,DSM, ""P"Команды",string,"Назад","");
				}
			case 10: {
					if(!GetPlayerVehicles(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома на колесах!");
					strcat(string,""P"/trpark"W" - припарковать трейлер\n");
					strcat(string,""P"/trgps"W" - найти трейлер в GPS\n");
					strcat(string,""P"/selltr"W" - продать трейлер игроку или в гос\n");
					strcat(string,""P"/trdate"W" - дата оплаты дома на колесах\n");
					D(playerid,D_MENU_MAIN,DSM, ""P"Команды",string,"Назад","");
				}
			}
		}
	case D_CHAT: {
			if(!response) return ShowSettings(playerid);
			PI[playerid][pSettings][4] = listitem;
			SendOk(playerid, "Вы выбрали новый стиль разговора для своего персонажа");
			save_settings(playerid);
			ShowSettings(playerid);
		}
	case D_BOX: {
			if(!response) return ShowSettings(playerid);
			if(PI[playerid][pBox] < listitem) return SendClientMessage(playerid, COLOR_GREY, "Выбранный стиль еще не изучен. Отправляйтесь в спорт-зал"),ShowSettings(playerid);
			PI[playerid][pSettings][5] = listitem;
			SendOk(playerid, "Вы выбрали новый стиль боя для своего персонажа");
			switch(listitem) {
			case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
			case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
			case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
			case 3: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
			}
			save_settings(playerid);
			ShowSettings(playerid);
		}
	case D_NEWS_SELECT: {
			if(!response) return ShowSettings(playerid);
			switch(listitem) {
			case 0: PI[playerid][pSettings][2] = fLSNEWS, SendOk(playerid, "Радиостанция включена");
			case 1: PI[playerid][pSettings][2] = 0, SendOk(playerid, "Радиостанция выключена");
			}
			save_settings(playerid);
			ShowSettings(playerid);
		}
	case D_NEWS_SELECT_2: {
			if(!response) return 1;
			switch(listitem) {
			case 0: SendOk(playerid, "Радиостанция включена"), PI[playerid][pSettings][2] = fLSNEWS;
			case 1: SendOk(playerid, "Радиостанция отключена"), PI[playerid][pSettings][2] = 0;
			}
			save_settings(playerid);
		}
	case D_BAN_LIST: {
			if (response)
			{
				if (listitem == 20 || listitem == 21) CheckBanned(playerid, listitem);
				else
				{
					strmid(UnbanName[playerid], inputtext, 0, strlen(inputtext) );
					if (GetString(inputtext, "<<< Назад")) return CheckBanned(playerid, 21);
					new NAME_ADMIN[24], NAME_PLAYER[24], BAN_REASON[32], UNBAN_DATA = 0, query[128], string[220];
					format(query, sizeof(query), "SELECT * FROM `ban` WHERE `Name` = '%s' LIMIT 1", UnbanName[playerid]);
					new Cache: result = mysql_query(connects, query);
					new rows = cache_num_rows();
					if (rows > 0)
					{
						cache_get_value_index(0, 1, NAME_PLAYER, 24);
						cache_get_value_index(0, 2, NAME_ADMIN, 24);
						cache_get_value_index(0, 3, BAN_REASON, 24);
						cache_get_value_index_int(0, 4, UNBAN_DATA);
						//if (UNBAN_DATA > unix)
						{
							new date_ban[6];
							timestamp_to_date(UNBAN_DATA - 1, date_ban[0], date_ban[1], date_ban[2], date_ban[3], date_ban[4], date_ban[5]);

							format(string, sizeof(string), "\
						"W"Заблокирован:\t"NO"%s\n\
						"W"Заблокировал:\t"ORANGE"%s\n\
						"W"Причина:\t\t"ORANGE"%s\n\
						"W"Разблокировка:\t"ORANGE"%02d/%02d/%04d %02d:%02d:%02d",
							NAME_PLAYER, NAME_ADMIN, BAN_REASON, date_ban[2], date_ban[1], date_ban[0], date_ban[3], date_ban[4], date_ban[5]);
							D(playerid, D_UNBAN, DSM, ""P"Разблокировка", string, "Разбанить", "Отмена");
						}
						/*else
					{

						static const f_str[] = "Игрок %s уже не забанен";
						new str[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME)];

						format(str, sizeof(str), f_str, UnbanName[playerid]);
						SendClientMessage(playerid, COLOR_GREY, str);
					}*/
					}
					if (cache_is_valid(result)) cache_delete(result);
				}
			}
		}
	case D_TRUNK_LIST: {
			if(response) {
				new idofcar = idaofcar[playerid];
				switch(listitem) {
				case 0: {
						if(idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Машина не принадлежит Вам"),trunk_close(playerid);
						if(!TrunkInfo[idofcar][tOpen]) {
							TrunkInfo[idofcar][tOpen] = 1;
							pc_cmd_trunk(playerid);
						}
						else TrunkInfo[idofcar][tOpen] = 0;
						pc_cmd_trunk(playerid);
					}
				case 1: {
						nedded[playerid] = 1;
						new string[128];
						format(string,sizeof(string),""W"Достать канистру\nПоложить канистру\nДоступно: "P"[%d/2]",TrunkInfo[idofcar][tKanistra]);
						D(playerid,D_TRUNK_SELECT,DSL,""P"Багажник",string,"Принять","Отмена");
					}
				case 2: {
						nedded[playerid] = 2;
						new string[128];
						format(string,sizeof(string),""W"Достать наркотики\nПоложить наркотики\nДоступно: "P"[%d/200]",TrunkInfo[idofcar][tNarko]);
						D(playerid,D_TRUNK_SELECT,DSL,""P"Багажник",string,"Принять","Отмена");
					}
				case 3: {
						nedded[playerid] = 3;
						new string[128];
						format(string,sizeof(string),""W"Достать материалы\nПоложить материалы\nДоступно: "P"[%d/1000]",TrunkInfo[idofcar][tMats]);
						D(playerid,D_TRUNK_SELECT,DSL,""P"Багажник",string,"Принять","Отмена");
					}
				case 4: {
						nedded[playerid] = 4;
						new string[128];
						format(string,sizeof(string),""W"Достать Deagle\nПоложить Deagle\nДоступно: "P"[%d/50]",TrunkInfo[idofcar][tGun][0]);
						D(playerid,D_TRUNK_SELECT,DSL,""P"Багажник",string,"Принять","Отмена");
					}
				case 5: {
						nedded[playerid] = 5;
						new string[128];
						format(string,sizeof(string),""W"Достать AK-47\nПоложить AK-47\nДоступно: "P"[%d/50]",TrunkInfo[idofcar][tGun][1]);
						D(playerid,D_TRUNK_SELECT,DSL,""P"Багажник",string,"Принять","Отмена");
					}
				case 6: {
						nedded[playerid] = 6;
						new string[128];
						format(string,sizeof(string),""W"Достать M4\nПоложить M4\nДоступно: "P"[%d/50]",TrunkInfo[idofcar][tGun][2]);
						D(playerid,D_TRUNK_SELECT,DSL,""P"Багажник",string,"Принять","Отмена");
					}
				case 7: {
						nedded[playerid] = 7;
						new string[128];
						format(string,sizeof(string),""W"Достать ShotGun\nПоложить ShotGun\nДоступно: "P"[%d/50]",TrunkInfo[idofcar][tGun][3]);
						D(playerid,D_TRUNK_SELECT,DSL,""P"Багажник",string,"Принять","Отмена");
					}
				}
				SaveTrunk(playerid, idofcar);
			}
			else trunk_close(playerid);
		}
	case D_TRUNK_SELECT: {
			if(response) {
				new item[30];
				switch(nedded[playerid]) {
				case 1: item = "канистр";
				case 2: item = "наркотиков";
				case 3: item = "материалов";
				case 4: item = "патронов Deagle";
				case 5: item = "патронов AK47";
				case 6: item = "патронов M4";
				case 7: item = "патронов ShotGun";
				default: return false;
				}
				new string[128];
				switch(listitem) {
				case 0: {
						format(string,sizeof(string),""W"Введите кол-во %s, которое хотите достать с багажника:",item);
						D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",string,"Принять","Отмена");
					}
				case 1: {
						format(string,sizeof(string),""W"Введите кол-во %s, которое хотите положить в багажник:",item);
						D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",string,"Принять","Отмена");
					}
				}
			}
			else pc_cmd_trunk(playerid);
		}
	case D_TRUNK_INPUT: {
			if(response) {
				if(!strlen(inputtext)) return pc_cmd_trunk(playerid);
				new bitem = strval(inputtext),idofcar=idaofcar[playerid],string[156];
				if(bitem<1) return pc_cmd_trunk(playerid),SendClientMessage(playerid,COLOR_RED,"Ошибка");
				switch(nedded[playerid]) {
				case 1: {
						if(bitem>TrunkInfo[idofcar][tKanistra]) {
							return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во канистр, которое хотите достать с багажника:\n\n"NO"*"G" В багажнике нет такого кол-ва канистр","Принять","Отмена");
						}
						if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места"),trunk_close(playerid);
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт"),trunk_close(playerid);
						AddItem(playerid, 454, bitem);
						TrunkInfo[idofcar][tKanistra] -= bitem;
						pc_cmd_trunk(playerid),SendUse(playerid,"Вы взяли "ORANGE"1 "W"канистру с багажника");
					}
				case 2: {
						if(bitem>TrunkInfo[idofcar][tNarko]) {
							return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во наркотиков, которое хотите достать с багажника:\n\n"NO"*"G" В багажнике нет такого кол-ва наркотиков","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт"),trunk_close(playerid);
						TrunkInfo[idofcar][tNarko] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы взяли "ORANGE"%d "W"наркотиков с багажника",bitem);
						SendUse(playerid,string);
						PI[playerid][pDrugs] += bitem;
						UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
					}
				case 3: {
						if(bitem>TrunkInfo[idofcar][tMats]) {
							return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во материалов, которое хотите достать с багажника:\n\n"NO"*"G" В багажнике нет такого кол-ва материалов","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт"),trunk_close(playerid);
						TrunkInfo[idofcar][tMats] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы взяли "ORANGE"%d "W"материалов с багажника",bitem);
						SendUse(playerid,string);
						PI[playerid][pMats] -= bitem;
						UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
					}
				case 4: {
						if(bitem>TrunkInfo[idofcar][tGun][0]) {
							return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во патронов Deagle, которое хотите достать с багажника:\n\n"NO"*"G" В багажнике нет такого кол-ва патронов Deagle","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт"),trunk_close(playerid);
						GivePlayerWeapon(playerid, 24, bitem);
						TrunkInfo[idofcar][tGun][0] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы взяли "ORANGE"%d "W"патронов Deagle с багажника",bitem);
						SendUse(playerid,string);
					}
				case 5: {
						if(bitem>TrunkInfo[idofcar][tGun][1]) {
							return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во патронов AK-47, которое хотите достать с багажника:\n\n"NO"*"G" В багажнике нет такого кол-ва патронов AK-47","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт"),trunk_close(playerid);
						GivePlayerWeapon(playerid, 30, bitem);
						TrunkInfo[idofcar][tGun][1] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы взяли "ORANGE"%d "W"патронов AK-47 с багажника",bitem);
						SendUse(playerid,string);
					}
				case 6: {
						if(bitem>TrunkInfo[idofcar][tGun][2]) {
							return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во патронов M4, которое хотите достать с багажника:\n\n"NO"*"G" В багажнике нет такого кол-ва патронов M4","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт"),trunk_close(playerid);
						GivePlayerWeapon(playerid, 31, bitem);
						TrunkInfo[idofcar][tGun][2] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы взяли "ORANGE"%d "W"патронов M4 с багажника",bitem);
						SendUse(playerid,string);
					}
				case 7: {
						if(bitem>TrunkInfo[idofcar][tGun][3]) {
							return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во патронов ShotGun, которое хотите достать с багажника:\n\n"NO"*"G" В багажнике нет такого кол-ва патронов ShotGun","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт"),trunk_close(playerid);
						GivePlayerWeapon(playerid, 25, bitem);
						TrunkInfo[idofcar][tGun][3] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы взяли "ORANGE"%d "W"патронов ShotGun с багажника",bitem);
						SendUse(playerid,string);
					}
				default: return true;
				}
				ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);
				SaveTrunk(playerid,idofcar);
			}
			else pc_cmd_trunk(playerid);
		}
	case D_TRUNK_PUT: {
			if(response) {
				if(!strlen(inputtext)) return pc_cmd_trunk(playerid);
				new bitem = strval(inputtext),idofcar=idaofcar[playerid],string[156];
				if(bitem<1)return pc_cmd_trunk(playerid),SendClientMessage(playerid,COLOR_RED,"Ошибка");
				switch(nedded[playerid]) {
				case 1: {
						if((TrunkInfo[idofcar][tKanistra]+bitem)>2) {
							return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во канистр, которое хотите положить в багажника:\n\n"NO"*"G" В багажнике нет места для хранения канистр","Принять","Отмена");
						}
						if(GetInvent(playerid, 454) < bitem) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько наркотиков");
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт"),trunk_close(playerid);
						DeleteItem(playerid, 454, bitem);
						TrunkInfo[idofcar][tKanistra]+=bitem;
						pc_cmd_trunk(playerid),SendUse(playerid,"Вы положили "ORANGE"1 "W"канистру в багажник");
					}
				case 2: {
						if((TrunkInfo[idofcar][tDrugs]+bitem)>200) {
							return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во наркотиков, которое хотите положить в багажника:\n\n"NO"*"G" В багажнике нет места для хранения наркотиков","Принять","Отмена");
						}
						if(PI[playerid][pDrugs] < bitem) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько наркотиков");
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт"),trunk_close(playerid);
						TrunkInfo[idofcar][tNarko]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы положили "ORANGE"%d "W"наркотиков в багажник",bitem);
						SendUse(playerid,string);
						PI[playerid][pDrugs] -= bitem;
						UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
					}
				case 3: {
						if((TrunkInfo[idofcar][tMats]+bitem)>1000) {
							return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во материалов, которое хотите положить в багажника:\n\n"NO"*"G" В багажнике нет места для хранения материалов","Принять","Отмена");
						}
						if(PI[playerid][pMats] < bitem) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько материалов");
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт"),trunk_close(playerid);
						TrunkInfo[idofcar][tMats]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы положили "ORANGE"%d "W"материалов в багажник",bitem);
						SendUse(playerid,string);
						PI[playerid][pMats] -= bitem;
						UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
					}
				case 4: {
						if((TrunkInfo[idofcar][tGun][0]+bitem)>50) {
							return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов Deagle, которое хотите положить в багажника:\n\n"NO"*"G" В багажнике нет места для хранения патронов Deagle","Принять","Отмена");
						}
						if(GetPlayerWeapon(playerid) != 24 || GetPlayerAmmo(playerid) < bitem) {
							return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов Deagle, которое хотите положить в багажника:\n\n"NO"*"G" У Вас нет столько патронов Deagle","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт"),trunk_close(playerid);
						GivePlayerWeapon(playerid, 24, -bitem);
						TrunkInfo[idofcar][tGun][0]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы положили "ORANGE"%d "W"патронов Deagle в багажник",bitem);
						SendUse(playerid,string);
					}
				case 5: {
						if((TrunkInfo[idofcar][tGun][1]+bitem)>50) {
							return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов AK-47, которое хотите положить в багажника:\n\n"NO"*"G" В багажнике нет места для хранения патронов AK-47","Принять","Отмена");
						}
						if(GetPlayerWeapon(playerid) != 30 || GetPlayerAmmo(playerid) < bitem) {
							return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов AK-47, которое хотите положить в багажника:\n\n"NO"*"G" У Вас нет столько патронов AK-47","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт"),trunk_close(playerid);
						GivePlayerWeapon(playerid, 30, -bitem);
						TrunkInfo[idofcar][tGun][1]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы положили "ORANGE"%d "W"патронов AK-47 в багажник",bitem);
						SendUse(playerid,string);
					}
				case 6: {
						if((TrunkInfo[idofcar][tGun][2]+bitem)>50) {
							return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов M4, которое хотите положить в багажника:\n\n"NO"*"G" В багажнике нет места для хранения патронов M4","Принять","Отмена");
						}
						if(GetPlayerWeapon(playerid) != 31 || GetPlayerAmmo(playerid) < bitem) {
							return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов M4, которое хотите положить в багажника:\n\n"NO"*"G" У Вас нет столько патронов M4","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт"),trunk_close(playerid);
						GivePlayerWeapon(playerid, 31, -bitem);
						TrunkInfo[idofcar][tGun][2]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы положили "ORANGE"%d "W"патронов M4 в багажник",bitem);
						SendUse(playerid,string);
					}
				case 7: {
						if((TrunkInfo[idofcar][tGun][3]+bitem)>50) {
							return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов ShotGun, которое хотите положить в багажника:\n\n"NO"*"G" В багажнике нет места для хранения патронов ShotGun","Принять","Отмена");
						}
						if(GetPlayerWeapon(playerid) != 25 || GetPlayerAmmo(playerid) < bitem) {
							return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов ShotGun, которое хотите положить в багажника:\n\n"NO"*"G" У Вас нет столько патронов ShotGun","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт"),trunk_close(playerid);
						GivePlayerWeapon(playerid, 25, -bitem);
						TrunkInfo[idofcar][tGun][3]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы положили "ORANGE"%d "W"патронов ShotGun в багажник",bitem);
						SendUse(playerid,string);
					}
				default: return true;
				}
				SaveTrunk(playerid,idofcar);
				ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);
			}
			else pc_cmd_trunk(playerid);
		}
	case D_NEWS: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					if(!TI[playerid][tEther]) {
						TI[playerid][tEther] = true;
						SendOk(playerid,"Вы в прямом эфире");
						PI[playerid][pSettings][2] = PI[playerid][pMember];
						save_settings(playerid);
					}
					else {
						ether_closed(playerid);
						TI[playerid][tEther] = false;
						SendOk(playerid,"Вы вышли из прямого эфира");
					}
				}
			case 1: {
					new str[64];
					switch(PI[playerid][pMember]) {
					case fLSNEWS: {
							if(calls_news[0] == INVALID_PLAYER_ID) str = "Приём звонков - ["GREEN"Отсутствует"W"]";
							else format(str,sizeof(str),"Приём звонков - ["P"%s]",player_name[calls_news[0]]);
						}
					case fSFNEWS: {
							if(calls_news[1] == INVALID_PLAYER_ID) str = "Приём звонков - ["GREEN"Отсутствует"W"]";
							else format(str,sizeof(str),"Приём звонков - ["P"%s]",player_name[calls_news[1]]);
						}
					case fLVNEWS: {
							if(calls_news[2] == INVALID_PLAYER_ID) str = "Приём звонков - ["GREEN"Отсутствует"W"]";
							else format(str,sizeof(str),"Приём звонков - ["P"%s]",player_name[calls_news[2]]);
						}
					}
					new string[128];
					format(string,sizeof(string),""W"1. %s\n"W"2. Цена за звонки - ["GREEN"%d"W"]",str,FI[PI[playerid][pMember]][fPrice]);
					D(playerid,D_NEWS_ETHER, DSL, ""P"Меню эфира", string, "Далее", "Отмена");
				}
			}
		}
	case D_NEWS_ETHER: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					if(!TI[playerid][tEther]) return SendClientMessage(playerid, COLOR_GREY, "Для приёма звонков необходимо находиться в прямом эфире");
					switch(PI[playerid][pMember]) {
					case fLSNEWS: {
							if(calls_news[0] == INVALID_PLAYER_ID) {
								calls_news[0] = playerid;
								new string[128];
								format(string,sizeof(string),"%s начал(а) приём звонков (номер телефона: 8888)",player_name[playerid]);
								SendFamilyMessage(PI[playerid][pMember], 0x139BECFF, string);
							}
							else {
								if(calls_news[0] == playerid) {
									ether_closed(playerid);
								}
								else SendClientMessage(playerid, COLOR_GREY, "Кто-то из сотрудников уже принимает звонки");
							}
						}
					}
				}
			case 1: {
					if(PI[playerid][pMember] < 9) return SendClientMessage(playerid, COLOR_GREY, "Данная функция Вам недоступна");
					D(playerid,D_NEWS_ETHER_PRICE, DSI, ""P"Цена за звонки", ""W"Введите стоимость за звонки:", "Далее", "Отмена");
				}
			}
		}
	case D_NEWS_ETHER_PRICE: {
			if(!response) return 1;
			new price = strval(inputtext);
			if(price < 10 || price > 50) return D(playerid,D_NEWS_ETHER_PRICE,DSI, ""P"Цена за звонки",""W"Введите стоимость за звонки:\n\n"NO"*"G" От $10 до $50","Далее","Отмена");
			FI[PI[playerid][pMember]][fPrice] = price;
			new string[128];
			format(string,sizeof(string),"%s установил(а) цену звонков - %d",player_name[playerid],price);
			SendFamilyMessage(PI[playerid][pMember], 0x139BECFF, string);
		}
	case D_ADVERT_LIST: {
			if(!response) return 1;
			SetPVarInt(playerid,"editadvert",listitem);
			new id = GetPVarInt(playerid,"editadvert");
			if(!gAdvert[listitem][adBusy] || gAdvert[listitem][adCheked] || gAdvert[listitem][adCheking]) return ShowAdvertList(playerid);
			gAdvert[listitem][adCheking] = true;
			SetPVarInt(playerid,"adchecking_fix",listitem+1);
			static const f_str[] = ""W"Отправитель: {33AA33}%s"W"\n\
				Текст: {FFD700}%s"W"\n\n\
				Для публикации объявления, нажмите: {73B461}'ОТПРАВИТЬ'"W"\n\
				Чтобы отклонить или отправить сообщение администрации, нажмите: {E11C1C}'РЕДАКТОР'";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 100)];
			
			format(string,sizeof(string), f_str ,gAdvert[id][adSender],gAdvert[id][adText],gAdvert[id][adText]);
			D(playerid,D_ADVERT_LIST_EDIT,DSI, ""P"Редактирование",string,"Отправить","Редактор");
		}
	case D_ADVERT_LIST_2: {
			if(!response) {
				if(GetPVarInt(playerid,"adchecking_fix")) {
					gAdvert[GetPVarInt(playerid,"adchecking_fix")-1][adCheking]=false;
					DeletePVar(playerid,"adchecking_fix");
				}
				return 1;
			}
			DeletePVar(playerid,"adchecking_fix");
			new id = GetPVarInt(playerid,"editadvert");
			new player = GetCheckID(gAdvert[id][adSender]);

			if(listitem == 1) {
				new string[143];
				format(string, sizeof(string), "[NEWS] %s[%d]: %s", gAdvert[id][adSender],gAdvert[id][adID], gAdvert[id][adText]);
				SendAdminMessage(0x008e8cff,string);
			}
			
			static const f_str[] = "Ваше объявление было отклонено редактором: {33AA33}%s";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 100)];
			format(string,sizeof(string),f_str,player_name[playerid]);
			SendOk(player,string);
			
			strdel(gAdvert[id][adSender],0,24);
			gAdvert[id][adPhone] = 0;
			strdel(gAdvert[id][adText],0,100);
			gAdvert[id][adBusy] = false;
			gAdvert[id][adCheked] = false;
			gAdvert[id][adCheking] = false;
			if(gAdvertCount > 0) gAdvertCount--;
			return ShowAdvertList(playerid);
		}
	case D_ADVERT_LIST_EDIT: {
			if(!response) return D(playerid,D_ADVERT_LIST_2,DSL, ""P"Редактирование",""P"1."W" Отклонить объявление\n"P"2."W" Отклонить и отправить администрации","Выбрать","Отмена");
			new id = GetPVarInt(playerid,"editadvert");
			switch(PI[playerid][pMember]) {
			case fLSNEWS: gAdvert[id][adNews] = "LS";
			case fSFNEWS: gAdvert[id][adNews] = "SF";
			case fLVNEWS: gAdvert[id][adNews] = "LV";
			}
			if(strlen(inputtext)) format(gAdvert[id][adText],100,"%s",inputtext);
			format(gAdvert[id][adCheker],24,"%s",player_name[playerid]);
			
			PI[playerid][pAdvert]++;
			UpdatePlayerData(playerid,"Advert", PI[playerid][pAdvert]);

			FI[PI[playerid][pMember]][fBank] += gAdvert[id][adMoney];
			UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);
			PI[playerid][pSalary] += 50;
			
			UpdatePlayerData(playerid,"salary",PI[playerid][pSalary]);
			gAdvert[id][adTime] = gAdvertTime;
			gAdvertTime += 30;
			
			gAdvert[id][adCheking] = false;
			gAdvert[id][adCheked] = true;
			ShowAdvertList(playerid);
		}
	case D_ADVERT_START: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			new text[100];
			GetPVarString(playerid,"advert",text,100);
			DeletePVar(playerid,"advert");
			new price = GetPVarInt(playerid,"ad_price");
			DeletePVar(playerid,"ad_price");
			if(PI[playerid][pCash] < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			gAdvertCount ++;
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			GiveMoney(playerid,-price,"подача объявления");
			gAdvert[slot][adMoney] = price;
			format(gAdvert[slot][adSender],24,"%s",player_name[playerid]);
			gAdvert[slot][adID] = playerid;
			gAdvert[slot][adPhone] = PI[playerid][pPhone];
			format(gAdvert[slot][adText],100,"%s",text);
			gAdvert[slot][adBusy] = true;
			gAdvert[slot][adTime] = gAdvertTime;
			gAdvertTime += 30;
			SetPVarInt(playerid, #pAdvertTime, gettime()+60);
			new mes[90];
			format(mes, sizeof mes, "[ ! ] Поступило новое объявление от %s | Отредактируйте: /edit", gAdvert[slot][adSender]);
			SendFamilyMessage(fLSNEWS, 0x139BECFF, mes);
			SendFamilyMessage(fSFNEWS, 0x139BECFF, mes);
			SendFamilyMessage(fLVNEWS, 0x139BECFF, mes);
			SendOk(playerid,"Объявление подано в редакцию. Ожидайте проверки");
		}
	case D_ADMIN_PANEL: {
			if(response) {
				if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
				switch(listitem) {
				case 0: pc_cmd_admins(playerid);
				case 1: pc_cmd_spawn(playerid,"");
				case 2: D(playerid,D_JOB,DSTH,""P"Трудоустройство",""W"Работа\t"W"Требуемый уровень\n1. Водитель автобуса\t"P"2 лвл\n2. Механик\t"P"3 лвл\n3. Развозчик еды\t"P"3 лвл\t"P"4 лвл\n4. Мойщик дорог\t"P"4 лвл\n5. Чистильщик канализаций\t"P"3 лвл\n6. Таксист\t"P"2 лвл\n7. Инкассатор\t"P"2 лвл\n8. Развозчик продуктов/топлива\t"P"2 лвл\n"NO"Уволиться с работы", "Выбрать", "Закрыть");
				case 3: pc_cmd_prisoners(playerid,"");
				case 4: pc_cmd_mutelist(playerid,"");
				case 5: PI[playerid][pAdmMSG] = (!PI[playerid][pAdmMSG])?(1):(0),UpdatePlayerData(playerid,"pAdmMSG",PI[playerid][pAdmMSG]),pc_cmd_apanel(playerid,"");
				case 6: {
						PI[playerid][pAdmKL] = (!PI[playerid][pAdmKL])?(1):(0),UpdatePlayerData(playerid,"pAdmKL",PI[playerid][pAdmKL]),pc_cmd_apanel(playerid,"");
					}
				case 7: {
						if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return 1;
						new frac_online[MAX_FRACTIONS+1];
						foreach(new i:Player) {
							if(!TI[i][tLogin]) continue;
							if(!PI[i][pMember]) continue;
							switch(PI[i][pMember]) {
							case fLSPD: frac_online[fLSPD] ++;
							case fBikers: frac_online[fBikers] ++;
							case fBikersTwo: frac_online[fBikersTwo] ++;
							case fFBI: frac_online[fFBI] ++;
							case fRCSD: frac_online[fRCSD] ++;
							case fARMYLS: frac_online[fARMYLS] ++;
							case fMEDICLS: frac_online[fMEDICLS] ++;
							case fMEDICSF: frac_online[fMEDICSF] ++;
							case fMEDICLV: frac_online[fMEDICLV] ++;
							case fLSNEWS: frac_online[fLSNEWS] ++;
							case fSFNEWS: frac_online[fSFNEWS] ++;
							case fLVNEWS: frac_online[fLVNEWS] ++;
							case fINSTRUCTORS: frac_online[fINSTRUCTORS] ++;
							case fLCN: frac_online[fLCN] ++;
							case fYAKUZA: frac_online[fYAKUZA] ++;
							case fRM: frac_online[fRM] ++;
							case fBALLAS: frac_online[fBALLAS] ++;
							case fVAGOS: frac_online[fVAGOS] ++;
							case fGROVE: frac_online[fGROVE] ++;
							case fAZTEC: frac_online[fAZTEC] ++;
							case fRIFA: frac_online[fRIFA] ++;
							case fWHITEHOUSE: frac_online[fWHITEHOUSE] ++;
							}
						}
						static const f_str[] = "Фракция\tИгроки\nПолиция ЛС\t%d\nAngels MC\t%d\nBandidos MC\t%d\nФБР\t%d\n\
														RCSD\t%d\nНац. Гвардия\t%d\n\
														Больница ЛС\t%d\nБольница СФ\t%d\nБольница ЛВ\t%d\n\
														Радиоцентр ЛС\t%d\nРадиоцентр СФ\t%d\nРадиоцентр ЛВ\t%d\n\
														Автошкола\t%d\nИтальянская мафия\t%d\nЯпонская мафия\t%d\n\
														Русская мафия\t%d\nThe Ballas\t%d\nThe Vagos\t%d\n\
														The Grove\t%d\nThe Aztec\t%d\nThe Rifa\t%d\nПравительство\t%d";
						new string[sizeof(f_str) +1 + (31)];
						format(string,sizeof(string),f_str,frac_online[fLSPD],frac_online[fBikers],frac_online[fBikersTwo],frac_online[fFBI],frac_online[fRCSD],frac_online[fARMYLS],frac_online[fMEDICLS],frac_online[fMEDICSF],frac_online[fMEDICLV],
						frac_online[fLSNEWS],frac_online[fSFNEWS],frac_online[fLVNEWS],frac_online[fINSTRUCTORS],frac_online[fLCN],frac_online[fYAKUZA],frac_online[fRM],frac_online[fBALLAS],frac_online[fVAGOS],frac_online[fGROVE],
						frac_online[fAZTEC],frac_online[fRIFA],frac_online[fWHITEHOUSE]);
						D(playerid, D_AMEMBERS, DSTH, "Онлайн организаций", string, "Закрыть", "");
						
					}
				case 8: {
						if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return 1;
						if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в автомобиле"),pc_cmd_apanel(playerid,"");
						pc_cmd_fv(playerid,"");
					}
				case 9: pc_cmd_awarehouse(playerid,"");
				case 10: {
						if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return 1;
						new year[9], month[9], day[9], hour[9], minute[9], second[9];
						if(fracmoroz[0] >= unix) {
							timestamp_to_date(fracmoroz[0]-unix, year[0], month[0], day[0], hour[0], minute[0], second[0]);
						}
						else hour[0] = minute[0] = second[0] = 0;
						if(fracmoroz[1] >= unix) {
							timestamp_to_date(fracmoroz[1]-unix, year[1], month[1], day[1], hour[1], minute[1], second[1]);
						}
						else hour[1] = minute[1] = second[1] = 0;
						if(fracmoroz[2] >= unix) {
							timestamp_to_date(fracmoroz[2]-unix, year[2], month[2], day[2], hour[2], minute[2], second[2]);
						}
						else hour[2] = minute[2] = second[2] = 0;
						if(fracmoroz[3] >= unix) {
							timestamp_to_date(fracmoroz[3]-unix, year[3], month[3], day[3], hour[3], minute[3], second[3]);
						}
						else hour[3] = minute[3] = second[3] = 0;
						if(fracmoroz[4] >= unix) {
							timestamp_to_date(fracmoroz[4]-unix, year[4], month[4], day[4], hour[4], minute[4], second[4]);
						}
						else hour[4] = minute[4] = second[4] = 0;
						if(fracmoroz[5] >= unix) {
							timestamp_to_date(fracmoroz[5]-unix, year[5], month[5], day[5], hour[5], minute[5], second[5]);
						}
						else hour[5] = minute[5] = second[5] = 0;
						if(fracmoroz[6] >= unix) {
							timestamp_to_date(fracmoroz[6]-unix, year[6], month[6], day[6], hour[6], minute[6], second[6]);
						}
						else hour[6] = minute[6] = second[6] = 0;
						if(fracmoroz[7] >= unix) {
							timestamp_to_date(fracmoroz[7]-unix, year[7], month[7], day[7], hour[7], minute[7], second[7]);
						}
						else hour[7] = minute[7] = second[7] = 0;
						static const f_str[] = ""P"1."W" The Ballas\t\t\t"ORANGE"%dч %dмин %dсек\n\
												"P"2."W" The Vagos\t\t"ORANGE"%dч %dмин %dсек\n\
												"P"3."W" The Grove\t\t"ORANGE"%dч %dмин %dсек\n\
												"P"4."W" The Rifa\t\t"ORANGE"%dч %dмин %dсек\n\
												"P"5."W" The Aztec\t\t"ORANGE"%dч %dмин %dсек\n\
												"P"6."W" Итальянская мафия\t\t"ORANGE"%dч %dмин %dсек\n\
												"P"7."W" Японская мафия\t\t"ORANGE"%dч %dмин %dсек\n\
												"P"8."W" Русская мафия\t\t\t"ORANGE"%dч %dмин %dсек";
						new string[sizeof(f_str) + 90];
						format(string,sizeof(string),f_str,hour[0], minute[0], second[0],hour[1], minute[1], second[1],hour[2], minute[2], second[2],hour[3], minute[3], second[3],
						hour[4], minute[4], second[4],hour[5], minute[5], second[5],hour[6], minute[6], second[6],hour[7], minute[7], second[7], hour[8], minute[8], second[8]);
						D(playerid,DIALOG_NONE,DST, "Информация о заморозках", string, "Закрыть", "");
					}
				case 11: {
						if (PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return 1;
						new names[24], string[450], rows;
						new Cache: result = mysql_query(connects, "SELECT `Name` FROM `ban` ORDER BY `ID` DESC LIMIT 0 , 20");
						cache_get_row_count(rows);
						if (rows == 0) {
							if (cache_is_valid(result)) cache_delete(result);
							return SendClientMessage(playerid, COLOR_GREY, "Список забаненных пуст");
						}
						FirstBL[playerid] = 0;
						for (new i; i < rows; i ++)
						{
							cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
							format(string, sizeof(string), "%s%s\n", string, names);
						}
						if (rows == 20) format(string, sizeof(string), "%s{AFAFAF}Далее >>>\n", string);
						if (cache_is_valid(result)) cache_delete(result);
						if (!D(playerid, D_BAN_LIST, DSL, ""P"Забаненые", string, "Выбрать", "Назад"))SendClientMessage(playerid, COLOR_GREY, "Недоступно в данный момент.");
					}
				case 12: {
						new string[3024],id = 0;
						string = ""P"Ник:\t"P"IP при регистрации\t"P"IP\n";
						foreach(new i:Player) {
							if(!TI[i][tLogin]) continue;
							if(!GetString(player_ip[i],PI[i][pIpReg])) format(string, sizeof(string), "%s"W"%s\tL-IP: %s\tR-IP: %s\n", string, player_name[i],PI[i][pIpReg],player_ip[i]),id++;
						}
						if(id == 0) return SendClientMessage(playerid, COLOR_GREY, "Не найдено");
						else D(playerid, DIALOG_NONE, DSTH, ""P"Возможно взломаны", string, "Закрыть", "");
					}
				case 13: {
						if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return 1;
						new string[3200] = ""P"Место размещения\t"P"Статус\t"P"Владелец", str[124];
						for(new x; x<MAX_BILLBORDS; x++) {
							if(!BildInfo[x][bOwned]) format(str,124,"\n%s\t"GREEN"Свободен\t"GREEN"Отсутствует",BildInfo[x][bPosText]);
							else format(str,124,"\n%s\t"NO"Арендован\t"G"%s",BildInfo[x][bPosText],BildInfo[x][bOwner]);
							strcat(string,str);
						}
						return D(playerid,D_BILL_ADMIN,DSTH,""P"Мониторинг билбордов",string,"Выбрать","Закрыть");
					}
				case 14: {
						if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
						casino = (!casino)?(1):(0),UpdateOtherData("casino",casino),pc_cmd_apanel(playerid,"");
					}
				case 15: {
						if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
						FI[fBALLAS][fMats] = 300000,UpdateFraction(fBALLAS,"Mats",FI[fBALLAS][fMats]);
						FI[fVAGOS][fMats] = 300000,UpdateFraction(fVAGOS,"Mats",FI[fVAGOS][fMats]);
						FI[fGROVE][fMats] = 300000,UpdateFraction(fGROVE,"Mats",FI[fGROVE][fMats]);
						FI[fAZTEC][fMats] = 300000,UpdateFraction(fAZTEC,"Mats",FI[fAZTEC][fMats]);
						FI[fRIFA][fMats] = 300000,UpdateFraction(fRIFA,"Mats",FI[fRIFA][fMats]);

						FI[fLCN][fMats] = 300000,UpdateFraction(fLCN,"Mats",FI[fLCN][fMats]);
						FI[fYAKUZA][fMats] = 300000,UpdateFraction(fYAKUZA,"Mats",FI[fYAKUZA][fMats]);
						FI[fRM][fMats] = 300000,UpdateFraction(fRM,"Mats",FI[fRM][fMats]);
						SendOk(playerid,"Склады банд/мафий успешно пополнены");
					}
				case 16: {
						if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
						static const f_str[] =  ""P"Орагнизация\t"P"Уровень вступления\nПолиция\t%d\nФБР\t%d\nАрмии\t%d\nБольница\t%d\nНовости\t%d\nМафии\t%d\nБанды\t%d\nПравительство\t%d";
						new string[sizeof(f_str) +19];
						format(string,sizeof(string),f_str,invite_frac[0],invite_frac[1],invite_frac[2],invite_frac[3],invite_frac[4],invite_frac[5],invite_frac[6],invite_frac[7]);
						return D(playerid,D_ADMIN_INVITE,DSTH,""P"Ограничение Invite",string,"Выбрать","Закрыть");
					}
				case 17: {
						if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return 1;
						D(playerid, D_PROMO, DSL, ""P"Промокоды", ""P"1."W" Список промокодов\n"P"2."W" Создать промокод\n"P"3."W" Удалить промокод", "Выбрать", "Назад");
					}
				case 18: {
						if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
						for(new i = 0; i < gBusinessCount; i ++) {
							if(gBusiness[i][bizzProdOrder] == 0) continue;
							gBusiness[i][bizzProduct] += gBusiness[i][bizzProdOrder];	
							gBusiness[i][bizzProdOrder] = 0;		
							gBusiness[i][bizzProdOrderPrice] = 0;
							SaveBusiness(i);
						}
						SendOk(playerid,"Продукты по бизнесам доставлены");
					}
				}
			}
		}
	case D_ADMIN_INVITE: {
			if(!response) return 1;
			SetPVarInt(playerid,"invite_admin",listitem);
			D(playerid,D_ADMIN_INVITE_2,DSI, ""P"Ограничение Invite","\n\n"W"Введите ограничение на INVITE игроков в организацию:\n\n"NO"*"G" От 1 до 8\n\n","Изменить", "Отмена");
		}
	case D_ADMIN_INVITE_2: {
			if(!response) return DeletePVar(playerid,"invite_admin");
			if(strval(inputtext) < 1 || strval(inputtext) > 8) {
				D(playerid,D_ADMIN_INVITE_2,DSI, ""P"Ограничение Invite","\n\n"W"Введите ограничение на INVITE игроков в организацию:\n\n"NO"*"G" От 1 до 8\n\n","Изменить", "Отмена");
				return 1;
			}
			invite_frac[GetPVarInt(playerid,"invite_admin")] = strval(inputtext);

			new query[90];
			mysql_format(connects, query, sizeof(query),"UPDATE `others` SET `invite_frac%d` = '%d' LIMIT 1",GetPVarInt(playerid,"invite_admin"),invite_frac[GetPVarInt(playerid,"invite_admin")]);
			mysql_tquery(connects, query);

			DeletePVar(playerid,"invite_admin");
			SendOk(playerid,"Ограничение установлено");
		}
	case D_TP_LIST: {
			if(!response) return 1;
			new str[1024];
			if(listitem == 3) {
				SetPlayerPosAC(playerid, 233.4456,-1710.9520,24.5282, 7, 0);
				SetPlayerFacingAngle(playerid, 87.7254);
				SetCameraBehindPlayer(playerid);
				FreezePlayerForTime(playerid,1);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,7);
				return true;
			}
			for(new i = 0; i < MAX_TELEPORTS; i++) {
				if(TPLIST[i][tList] != listitem) continue;
				format(str, sizeof(str), "%s%s\n", str, TPLIST[i][tName]);
			}
			D(playerid, D_TP_LIST_2, DSL,""P"Телепорт", str, "Выбрать", "Отмена");
			SetPVarInt(playerid,"adm_tp",listitem);
		}
	case D_TP_LIST_2: {
			if(!response) return 1;
			new list = GetPVarInt(playerid,"adm_tp"),lis;
			switch(list) {
			case 0: lis = listitem;
			case 1: lis = (listitem+19);
			case 2: lis = (listitem+26);
			}
			if(GetPlayerState(playerid) == 2) {
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, TPLIST[lis][tPos][0],TPLIST[lis][tPos][1],TPLIST[lis][tPos][2]);
			}
			else {
				SetPlayerPosAC(playerid, TPLIST[lis][tPos][0],TPLIST[lis][tPos][1],TPLIST[lis][tPos][2], 0, 0);
			}
		}
	case D_OBC_LIST: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					new total_player_online = 0;
					tick_wanted{total_player_online} = 0;
					static const dialog_put_fmt[] = "%s\t%i\n";

					const string_length =
					sizeof(dialog_put_fmt) + 1 +
					(- 2 + MAX_PLAYER_NAME) + // Имя игрока
					(- 2 + 1);  // Уровень розыска

					goto skip_array_init;
					new onestring[(string_length * 30) / 4],
					tempstring[string_length];
					skip_array_init:

					new Float:pos[3];
					GetPlayerPos(playerid,pos[0],pos[1],pos[2]); 

					onestring = !""W"Имя игрока\t"W"Уровень розыска\n";
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(PI[i][pSearch] > 0) {
							if(!IsPlayerInRangeOfPoint(i, 200.0, pos[0],pos[1],pos[2])) continue;
							format(tempstring, sizeof(tempstring), dialog_put_fmt, player_name[i], PI[i][pSearch]);
							strcat(onestring, tempstring);
							tick_wanted{total_player_online} = i;
							total_player_online = total_player_online + 1;
						}
					}
					if(!total_player_online) return SendClientMessage(playerid, COLOR_GREY, "Преступников в радиусе 200 метров не обнаружено");
					return D(playerid,D_OBC_WANTED,DSTH,"Бортовой компьютер",onestring,"Выбрать","Отмена");
				}
			case 1: D(playerid, D_OBC_BD, DSL, ""P"База данных", ""P"1."W" Пробить по имени\n"P"2."W" Пробить по гос. номеру авто", "Выбрать", "Отмена");
			case 2: {
					new bool:callers = false;
					new string[700],str[30];
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(!GetPVarInt(i,"call_police")) continue;
						format(str,sizeof(str),"%s\n",player_name[i]),strcat(string,str);
						callers = true;
					}
					if(!callers) return SendClientMessage(playerid, COLOR_GREY, "Вызовы не поступали");
					D(playerid,D_OBC_SERVICESS,DSL,""P"Поступившие вызовы",string,"Выбрать","Отмена");
				}
			}
		}
	case D_OBC_BD: {
			if(!response) return pc_cmd_obc(playerid);
			switch(listitem) {
			case 0: D(playerid,D_OBC_BD_NAME,DSI, ""P"База данных","\n\n"W"Введите ник игрока:\n\n","Выбрать","Отмена");
			case 1: D(playerid,D_OBC_BD_NUMBER,DSI, ""P"База данных","\n\n"W"Введите гос. номер автомобиля:\n"G"Примечание: X XXX XX - формат номера\n\n","Выбрать","Отмена");
			}
		}
	case D_OBC_BD_NAME: {
			if(!response) return pc_cmd_obc(playerid);
			if(strval(inputtext) >= 0 && strval(inputtext) < MAX_PLAYERS) {
				if(!IsPlayerConnected(strval(inputtext))) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			}
			if(GetPlayerID(inputtext) == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
			new id = GetPlayerID(inputtext);
			if(PI[id][pSearch] == 0) return SendClientMessage(playerid, COLOR_GREY, "Человек не имеет розыска");
			static const f_str[] = ""W"Имя игрока:\t\t\t"YELLOW"%s\n\n\
				"W"Уровень розыска:\t\t"P"%d\n\
				"W"Сообщил:\t\t\t"P"%s\n\
				"W"Причина:\t\t\t"P"%s";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 2) + (-2 + MAX_PLAYER_NAME) + (-2 + 42)];
			format(string,sizeof(string), f_str, player_name[id], PI[id][pSearch], PI[id][pVictim],PI[id][pAccusedof]);
			D(playerid,DIALOG_NONE,DSM, ""P"База данных",string,"Закрыть","");
		}
	case D_OBC_BD_NUMBER: {
			if(!response) return pc_cmd_obc(playerid);
			new number[36];
			if(sscanf(inputtext, "s[26]", number)) return D(playerid,D_OBC_BD_NUMBER,DSI, ""P"База данных","\n\n"W"Введите гос. номер автомобиля:\n"G"Примечание: X XXX XX - формат номера\n\n","Выбрать","Отмена");
			new query[128];
			mysql_format(connects, query, sizeof(query),"SELECT * FROM `"TABLE_CARS"` WHERE `number`='%s'",number);
			mysql_tquery(connects,query,"ShowNumber","ds",playerid,number);
		}
	case D_OBC_SERVICESS: {
			if(!response) return 1;
			SetPVarInt(playerid,"police_id",GetPlayerID(inputtext));
			new str[190];
			format(str,sizeof(str),"\t"YELLOW"==== ИНФОРМАЦИЯ ====\n\n\
									"W"Имя: "P"%s\n\
									"W"Расстояние: "P"%.2f метров\n\n\
									"W"Вы действительно хотите принять вызов?",inputtext,GetDistanceBetweenPlayers(playerid,GetPlayerID(inputtext)));
			D(playerid, D_OBC_SERVICESS_INV, DSM, ""P"Вызов", str, "Принять", "Отмена");
		}
	case D_OBC_SERVICESS_INV: {
			if(!response) return DeletePVar(playerid,"police_id"),pc_cmd_obc(playerid);
			DeletePVar(GetPVarInt(playerid,"police_id"),"call_police");
			if(playerid == GetPVarInt(playerid,"police_id")) return SendClientMessage(playerid, COLOR_GREY, "Нельзя принять вызов от самого себя");
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(GetPVarInt(playerid,"police_id"), X, Y, Z);
			EnableGPSForPlayer(playerid, X, Y, Z);
			SendOk(playerid,"Вызов принят. Местоположение указано на вашей карте");
			SendOk(GetPVarInt(playerid,"police_id"),"Полицейский принял Ваш вызов. Для быстрого нахождения Вас полицейским, оставайтесь на данном месте");
			
			if(QuestProgress[playerid][37] < 10 && AcceptQuest[playerid][37] != 0) QuestProgress[playerid][37] ++,save_quest(playerid,37);
			if(QuestProgress[playerid][37] == 10 && AcceptQuest[playerid][37] != 0) {
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Экстренный вызов'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
			}
		}
	case D_OBC_WANTED: {
			if(!response) return 1;
			patrul_id[playerid] = tick_wanted{listitem};
			
			static const f_str[] = ""W"Имя игрока:\t\t\t"YELLOW"%s\n\n\
				"W"Уровень розыска:\t\t"P"%d\n\
				"W"Сообщил:\t\t\t"P"%s\n\
				"W"Причина:\t\t\t"P"%s";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 2) + (-2 + MAX_PLAYER_NAME) + (-2 + 32)];
			format(string,sizeof(string), f_str, player_name[patrul_id[playerid]], PI[patrul_id[playerid]][pSearch], PI[patrul_id[playerid]][pVictim],PI[patrul_id[playerid]][pAccusedof]);
			D(playerid,D_OBC_PATRUL,DSM, ""P"Бортовой компьютер",string,"Слежка","Назад");
		}
	case D_OBC_PATRUL: {
			if(!response) return pc_cmd_obc(playerid);
			if(GetPlayerInterior(patrul_id[playerid]) != 0) return SendClientMessage(playerid, COLOR_GREY, "Не удалось обнаружить цель (объект в здании)");
			if(patrul_id[playerid] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете начать слежку за собой");

			static const f_str[] = ""W"[ПАТРУЛИРОВАНИЕ]"G" %s(%d) начал преследование за %s";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + MAX_PLAYER_NAME)];
			
			format(string, sizeof(string), f_str, player_name[playerid],playerid,player_name[patrul_id[playerid]]);
			SendFamilyMessage(PI[playerid][pMember], 0x99CC00FF, string);
			
			if(QuestProgress[playerid][35] < 10 && AcceptQuest[playerid][35] != 0) QuestProgress[playerid][35] ++,save_quest(playerid,35);
			if(QuestProgress[playerid][35] == 10 && AcceptQuest[playerid][35] != 0) {
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Патрулирование'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
			}
			
			SetPVarInt(playerid,"Patrul",1);
			SetPVarInt(patrul_id[playerid],"patrulid",1);
			time_wanted[playerid] = SetTimerEx("CopsWanted",3000,true,"ff",playerid,patrul_id[playerid]);
		}
	case D_MEDICS: {
			if(!response) return 1;
			SetPVarInt(playerid,"medic_id",GetPlayerID(inputtext));
			new str[190];
			format(str,sizeof(str),"\t"YELLOW"==== ИНФОРМАЦИЯ ====\n\n\
									"W"Имя: "P"%s\n\
									"W"Расстояние: "P"%.2f метров\n\n\
									"W"Вы действительно хотите принять вызов?",inputtext,GetDistanceBetweenPlayers(playerid,GetPlayerID(inputtext)));
			D(playerid, D_MEDICS_INV, DSM, ""P"Вызов", str, "Принять", "Отмена");
		}
	case D_MEDICS_INV: {
			if(!response) return DeletePVar(playerid,"medic_id"),pc_cmd_obc(playerid);
			DeletePVar(GetPVarInt(playerid,"medic_id"),"call_medics");
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(GetPVarInt(playerid,"medic_id"), X, Y, Z);
			EnableGPSForPlayer(playerid, X, Y, Z);
			SendOk(playerid,"Вызов принят. Местоположение указано на карте");
			SendOk(GetPVarInt(playerid,"medic_id"),"Медик принял Ваш вызов. Для быстрого нахождения Вас медиком, оставайтесь на данном месте");
		}
	case D_REPAIRS: {
			if(!response) return 1;
			SetPVarInt(playerid,"repair_id",GetPlayerID(inputtext));
			new str[190];
			format(str,sizeof(str),"\t"YELLOW"==== ИНФОРМАЦИЯ ====\n\n\
									"W"Имя: "P"%s\n\
									"W"Расстояние: "P"%.2f метров\n\n\
									"W"Вы действительно хотите принять вызов?",inputtext,GetDistanceBetweenPlayers(playerid,GetPlayerID(inputtext)));
			D(playerid, D_REPAIRS_INV, DSM, ""P"Вызов", str, "Принять", "Отмена");
		}
	case D_REPAIRS_INV: {
			if(!response) return DeletePVar(playerid,"repair_id");
			DeletePVar(GetPVarInt(playerid,"repair_id"),"call_mechanics");
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(GetPVarInt(playerid,"repair_id"), X, Y, Z);
			EnableGPSForPlayer(playerid, X, Y, Z);
			SendOk(playerid,"Вызов принят. Местоположение указано на карте");
			SendOk(GetPVarInt(playerid,"repair_id"),"Механик принял Ваш вызов. Для быстрого нахождения Вас механиком, оставайтесь на данном месте");
		}
	case D_MAKELEADER_INFO: {
			if(!response) return 1;
			new frac_id = 0;
			static const f_str[] = ""P"%s "W"| "ORANGE"%s";
			new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME)];
			switch(listitem) {
			case 0: frac_id = fLSPD;
			case 1: frac_id = fBikers;
			case 2: frac_id = fBikersTwo;
			case 3: frac_id = fFBI;
			case 4: frac_id = fRCSD;
			case 5: frac_id = fARMYLS;
			case 6: frac_id = fWHITEHOUSE;
			case 7: frac_id = fMEDICLS;
			case 8: frac_id = fLSNEWS;
			case 9: frac_id = fINSTRUCTORS;
			case 10: frac_id = fLCN;
			case 11: frac_id = fYAKUZA;
			case 12: frac_id = fRM;
			case 13: frac_id = fBALLAS;
			case 14: frac_id = fVAGOS;
			case 15: frac_id = fGROVE;
			case 16: frac_id = fAZTEC;
			case 17: frac_id = fRIFA;
			}
			SetPVarInt(playerid, "use_frac", frac_id);
			format(string,sizeof(string),f_str,FI[GetPVarInt(playerid, "use_frac")][fName],FI[GetPVarInt(playerid, "use_frac")][fLeader]);
			D(playerid,D_MAKELEADER_LIST,DSL,string,""P"1."W" Информация о фракции\n"P"2."W" Назначить лидера\n"P"3."W" Снять лидера\n"P"4."W" Вступить в организацию","Выбрать","Отмена");
		}
	case D_MAKELEADER_LIST: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					if(!strcmp(FI[GetPVarInt(playerid, "use_frac")][fLeader],"None",true)) return SendClientMessage(playerid, COLOR_GREY, "У данной организации нет лидера");
					new ID = GetPVarInt(playerid, "use_frac");
					new query[200];
					mysql_format(connects, query, sizeof(query),"SELECT `Name`,`pRank` FROM `accounts` WHERE `pMember` = '%i'", ID);
					mysql_pquery(connects, query, "info_fraction", "ii", playerid,ID);
				}
			case 1: {
					if(strcmp(FI[GetPVarInt(playerid, "use_frac")][fLeader],"None",true)) return SendClientMessage(playerid, COLOR_GREY, "У данной организации уже есть лидер");
					
					static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на должность лидера "P"%s";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];
					
					format(string,sizeof(string),f_str,FI[GetPVarInt(playerid, "use_frac")][fName]);
					D(playerid,D_MAKELEADER_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
				}
			case 2: {
					if(!strcmp(FI[GetPVarInt(playerid, "use_frac")][fLeader],"None",true)) return SendClientMessage(playerid, COLOR_GREY, "У данной организации нет лидера");
					static const f_str[] = ""W"Вы действительно хотите снять "NO"%s "W"с поста лидера организации "P"%s";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];
					
					format(string,sizeof(string),f_str,FI[GetPVarInt(playerid, "use_frac")][fLeader],FI[GetPVarInt(playerid, "use_frac")][fName]);
					D(playerid,D_MAKELEADER_CLEAR,DSM, ""P"Снятие",string,"Выбрать","Отмена");
				}
			case 3: {
					new frac = GetPVarInt(playerid, "use_frac");
					if(IsAGang(playerid) && GetPVarInt(playerid, "ppkz")) {
						EndCapt(playerid);
					}
					PI[playerid][pLeader] = frac;
					PI[playerid][pMember] = frac;
					PI[playerid][pRank] = FI[frac][fMaxRang];
					UpdatePlayerData(playerid,"pMember",PI[playerid][pMember]);
					UpdatePlayerData(playerid,"pLeader",PI[playerid][pLeader]);
					UpdatePlayerData(playerid,"pRank",PI[playerid][pRank]);
					if(PI[playerid][pfWarn] > 0) PI[playerid][pfWarn] = 0;
					UpdatePlayerData(playerid,"fwarn",PI[playerid][pfWarn]);
					static const f_str[] = ""W"Вы успешно вступили в организацию "P"%s(ID: %d)";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 3)];
					
					format(string, sizeof(string), f_str, FI[frac][fName], frac);
					SendOk(playerid, string);
					SendOk(playerid, "Для увольнения введите: /uval");
					PI[playerid][pFracSkin] = FI[frac][fSkin];
					start_work[playerid] = 1;
					A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
					UpdatePlayerData(playerid,"pModel",PI[playerid][pFracSkin]);
					UpdatePlayerData(playerid,"FracDuty",start_work[playerid]);
					SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
					//NickName(playerid);
				}
			}
		}
	case D_MAKELEADER_ADD: {
			if(!response) return 1;
			if(!strlen(inputtext)) {
				static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на должность лидера "P"%s";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
				
				format(string,sizeof(string),f_str,FI[GetPVarInt(playerid, "use_frac")][fName]);
				D(playerid,D_MAKELEADER_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
				return 1;
			}
			if(!IsPlayerConnected(strval(inputtext))) return SendClientMessage(playerid, COLOR_GREY, "Игрок оффлайн");
			if(!TI[strval(inputtext)][tLogin]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не авторизован на сервере");
			if(PI[strval(inputtext)][pLeader] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже лидер организации");
			if(PI[strval(inputtext)][pMember] != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок состоит в организации");
			SetPVarInt(playerid, "use_leader", strval(inputtext));
			
			static const f_str[] = ""W"Вы действительно хотите назначить "ORANGE"%s"W" на поста лидера организации "P"%s";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 24)];
			
			format(string,sizeof(string),f_str,player_name[GetPVarInt(playerid, "use_leader")],FI[GetPVarInt(playerid, "use_frac")][fName]);
			D(playerid,D_MAKELEADER,DSM, ""P"Назначение",string,"Назначить","Отмена");
		}
	case D_MAKELEADER: {
			if(!response) return 1;
			new ID = GetPVarInt(playerid, "use_leader");
			new frac = GetPVarInt(playerid, "use_frac");
			format(FI[frac][fLeader], 24, "%s", player_name[ID]);
			format(FI[frac][fAdmin],  24, "%s", player_name[playerid]);

			new year, month, day;
			getdate(year, month, day);
			format(FI[frac][fTime],  53, "%02i/%02i/%02i", day, month, year);

			PI[ID][pLeader] = FI[frac][fID];
			PI[ID][pMember] = FI[frac][fID];
			PI[ID][pRank] 	= FI[frac][fMaxRang];
			UpdatePlayerData(ID,"pMember",PI[ID][pMember]);
			UpdatePlayerData(ID,"pLeader",PI[ID][pLeader]);
			UpdatePlayerData(ID,"pRank",PI[ID][pRank]);
			if(PI[ID][pfWarn] > 0) PI[ID][pfWarn] = 0;
			UpdatePlayerData(ID,"fwarn",PI[ID][pfWarn]);
			static const f_str[] = ""ORANGE"%s"W" назначил Вас лидером организации "P"%s";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 24)];
			
			format(string,sizeof(string),f_str,player_name[playerid],FI[frac][fName]);
			SendOk(ID,string);

			format(string, sizeof(string), "[A] %s[%d] назначил %s[%d] на пост лидера %s",player_name[playerid],playerid,player_name[ID],ID,FI[frac][fName]);
			AdmMSG(0xAFAFAFAA, string);
			
			PI[ID][pFracSkin] = FI[frac][fSkin];
			PI[ID][pJob] 		= 0;
			A_SetPlayerSkin(ID,PI[ID][pFracSkin]);
			SetPlayerColor(ID,gFractionSpawn[PI[ID][pMember]][fracColor]);
			start_work[ID] = 1;
			UpdatePlayerData(ID,"pJob",PI[ID][pJob]);
			UpdatePlayerData(ID,"FracDuty",start_work[ID]);
			PI[ID][pSpawn] = 2;
			SaveFraction(frac);
			add_datefrac(ID);
			UpdatePlayerData(ID,"spawn",PI[ID][pSpawn]);
			UpdatePlayerData(ID, "pModel", PI[ID][pFracSkin]);
			//NickName(ID);
		}
	case D_MAKELEADER_CLEAR: {
			if(!response) return 1;
			new ID = GetCheckID(FI[GetPVarInt(playerid, "use_frac")][fLeader]);
			if(ID != INVALID_PLAYER_ID) {
				if(IsAGang(ID) && GetPVarInt(ID, "ppkz")) EndCapt(ID);
				add_jobinfo(ID,"Снят с поста лидера");
				PI[ID][pLeader] = 0;
				PI[ID][pMember] = 0;
				PI[ID][pRank] = 0;
				PI[ID][pZahvat] = 0;
				start_work[ID] = 0;
				UpdatePlayerData(ID,"pMember",PI[ID][pMember]);
				UpdatePlayerData(ID,"pLeader",PI[ID][pLeader]);
				
				PI[ID][pAdvert] = 0;
				UpdatePlayerData(ID,"Advert", PI[ID][pAdvert]);
				
				PI[ID][pMedHeal] = 0;
				ResetPlayerWeapons(ID);
				UpdatePlayerData(ID,"MedHeal",0);
				static const f_str[] = ""ORANGE"%s"W" забрал у Вас полномочия лидера организации";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
				
				format(string,sizeof(string),f_str,player_name[playerid]);
				SendOk(ID,string);

				format(string, sizeof(string), "[A] %s[%d] снял %s[%d] с поста лидера %s",player_name[playerid],playerid,player_name[ID],ID,FI[GetPVarInt(playerid, "use_frac")][fName]);
				AdmMSG(0xAFAFAFAA, string);
				if(PI[playerid][pHouse] > 0) PI[ID][pSpawn] = 1;
				else PI[ID][pSpawn] = 0;
				UpdatePlayerData(ID,"pRank",PI[ID][pRank]);
				UpdatePlayerData(ID,"FracDuty",start_work[ID]);
				UpdatePlayerData(ID,"spawn",PI[ID][pSpawn]);
				UpdatePlayerData(ID,"zahvat",PI[ID][pZahvat]);
				skin_player(ID);
				PlayerSpawn(ID);
			}
			else {
				new string[128];
				format(string, sizeof(string), "[A] %s[%d] снял %s с поста лидера %s",player_name[playerid],playerid,FI[GetPVarInt(playerid, "use_frac")][fLeader],FI[GetPVarInt(playerid, "use_frac")][fName]);
				AdmMSG(0xAFAFAFAA, string);
				off_add_jobinfo(FI[GetPVarInt(playerid, "use_frac")][fName],"Недееспособен");
				SendOk(playerid, "Лидер организации успешно снят в оффлайн");
				new query[180];
				mysql_format(connects,query, sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET pLeader = '0',pMember = '0',pRank = '0',pModel = '0',Advert = '0',zahvat = '0' WHERE Name = '%s'",FI[GetPVarInt(playerid, "use_frac")][fLeader]);
				mysql_tquery(connects, query, "", "");
			}
			format(FI[GetPVarInt(playerid, "use_frac")][fLeader], 5, "None");
			SaveFraction(GetPVarInt(playerid, "use_frac"));
		}
	case D_BLACK_MARKET: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					static const f_str[] = ""W"Введите стоимость за "P"1г"W" наркотика\nСейчас стоимость составляет: "GREEN"$%d";
					new string[sizeof(f_str) +1 +(-2 + 5)];
					format(string,sizeof(string),f_str,black_prods[5]);
					D(playerid,D_BLACK_MARKET_DRUGS,DSI, ""P"Стоимость наркотиков", string, "Изменить", "Назад");
				}
			case 1: {
					static const f_str[] = ""W"Введите стоимость за "P"1"W" материал\nСейчас стоимость составляет: "GREEN"$%d";
					new string[sizeof(f_str) +1 +(-2 + 5)];
					format(string,sizeof(string),f_str,black_prods[6]);
					D(playerid,D_BLACK_MARKET_MATS,DSI, ""P"Стоимость материалов", string, "Изменить", "Назад");
				}
			case 2: {
					static const f_str[] = ""W"Введите стоимость за "P"1"W" бронежилет\nСейчас стоимость составляет: "GREEN"$%d";
					new string[sizeof(f_str) +1 +(-2 + 5)];
					format(string,sizeof(string),f_str,black_prods[7]);
					D(playerid,D_BLACK_MARKET_ARMOUR,DSI, ""P"Стоимость бронежилет", string, "Изменить", "Назад");
				}
			case 3: {
					static const f_str[] = ""W"Введите стоимость за "P"1"W" армейскую форму\nСейчас стоимость составляет: "GREEN"$%d";
					new string[sizeof(f_str) +1 +(-2 + 5)];
					format(string,sizeof(string),f_str,black_prods[8]);
					D(playerid,D_BLACK_MARKET_SKIN,DSI, ""P"Стоимость армейской формы", string, "Изменить", "Назад");
				}
			}
		}
	case D_BLACK_MARKET_DRUGS: {
			if(!response) return pc_cmd_bmarket(playerid);
			if(strval(inputtext) < 1 || strval(inputtext) > 50) {
				static const f_str[] = ""W"Введите стоимость за "P"1г"W" наркотика\nСейчас стоимость составляет: "GREEN"$%d\n\n"NO"*"G" От $1 до $50";
				new string[sizeof(f_str) +1 +(-2 + 5)];
				format(string,sizeof(string),f_str,black_prods[5]);
				D(playerid,D_BLACK_MARKET_DRUGS,DSI, ""P"Стоимость наркотиков", string, "Изменить", "Назад");
				return 1;
			}
			black_prods[5] = strval(inputtext);
			SaveMarket();
			new string[128];
			format(string,sizeof(string),"Стоимость "P"1г "W"наркотиков составляет "ORANGE"$%d",black_prods[5]);
			SendUse(playerid,string);
			pc_cmd_bmarket(playerid);
		}
	case D_BLACK_MARKET_MATS: {
			if(!response) return pc_cmd_bmarket(playerid);
			if(strval(inputtext) < 10 || strval(inputtext) > 15) {
				static const f_str[] = ""W"Введите стоимость за "P"1"W" материал\nСейчас стоимость составляет: "GREEN"$%d\n\n"NO"*"G" От $10 до $15";
				new string[sizeof(f_str) +1 +(-2 + 5)];
				format(string,sizeof(string),f_str,black_prods[6]);
				D(playerid,D_BLACK_MARKET_MATS,DSI, ""P"Стоимость материалов", string, "Изменить", "Назад");
				return 1;
			}
			black_prods[6] = strval(inputtext);
			SaveMarket();
			new string[128];
			format(string,sizeof(string),"Стоимость "P"1 "W"материала составляет "ORANGE"$%d",black_prods[6]);
			SendUse(playerid,string);
			pc_cmd_bmarket(playerid);
		}
	case D_BLACK_MARKET_ARMOUR: {
			if(!response) return pc_cmd_bmarket(playerid);
			if(strval(inputtext) < 1 || strval(inputtext) > 10000) {
				static const f_str[] = ""W"Введите стоимость за "P"1"W" бронежилет\nСейчас стоимость составляет: "GREEN"$%d\n\n"NO"*"G" От $1 до $10.000";
				new string[sizeof(f_str) +1 +(-2 + 5)];
				format(string,sizeof(string),f_str,black_prods[7]);
				D(playerid,D_BLACK_MARKET_ARMOUR,DSI, ""P"Стоимость бронежилета", string, "Изменить", "Назад");
				return 1;
			}
			black_prods[7] = strval(inputtext);
			SaveMarket();
			new string[128];
			format(string,sizeof(string),"Стоимость "P"1 "W"бронежилета составляет "ORANGE"$%d",black_prods[7]);
			SendUse(playerid,string);
			pc_cmd_bmarket(playerid);
		}
	case D_BLACK_MARKET_SKIN: {
			if(!response) return 1;
			if(strval(inputtext) < 1 || strval(inputtext) > 10000) {
				static const f_str[] = ""W"Введите стоимость за "P"1"W" армейскую форму\nСейчас стоимость составляет: "GREEN"$%d\n\n"NO"*"G" От $1 до $10.000";
				new string[sizeof(f_str) +1 +(-2 + 5)];
				format(string,sizeof(string),f_str,black_prods[8]);
				D(playerid,D_BLACK_MARKET_SKIN,DSI, ""P"Стоимость армейской формы", string, "Изменить", "Назад");
				return 1;
			}
			black_prods[8] = strval(inputtext);
			SaveMarket();
			new string[128];
			format(string,sizeof(string),"Стоимость "P"1 "W"армейской формы составляет "ORANGE"$%d",black_prods[8]);
			SendUse(playerid,string);
			pc_cmd_bmarket(playerid);
		}
	case D_MARKET_NARKO: {
			if(!response) return 1;
			if(strval(inputtext) < 1 || strval(inputtext) > 500) {
				static const f_str[] = ""W"Укажите количество наркотиков для покупки:\n\n\
				"O"Примечание:"W"\n\
				\tСтоимость "P"1г"W" наркотиков: "GREEN"$%d"W"\n\
				\tДоступно грамм на складе: "P"%d"W"\n\n"NO"*"W" За раз можно приобрести до 500 гр";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];
				format(string,sizeof(string),f_str,black_prods[5],black_prods[1]);
				D(playerid,D_MARKET_NARKO,DSI, ""P"Покупка наркотиков", string, "Купить", "Отмена");
				return 1;
			}
			if(black_prods[1] < strval(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "На складе закончился товар");
			if(GetPlayerMoneyEx(playerid) < black_prods[5]*strval(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			GiveMoney(playerid,-black_prods[5]*strval(inputtext),"покупка нарко ЧР");
			black_prods[1] -= strval(inputtext);
			SaveMarket();
			FI[black_prods[0]][fBank] += black_prods[5]*strval(inputtext);
			new string[128];
			format(string,sizeof(string),"Вы приобрели "P"%dг "W"наркотиков за "ORANGE"$%d",strval(inputtext),black_prods[5]*strval(inputtext));
			SendUse(playerid,string);
			
			PI[playerid][pDrugs] += strval(inputtext);
			UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
		}
	case D_ROB_CAR: {
			if(!response) return true;
			D(playerid,DIALOG_NONE,DSM, ""P"Ограбление домов",""W"Бери фургон и ищи дом в опасном районе\nНе забудь про отмычки, без них ты не сможешь взломать дверь дома\n\n"P"Загрузка фургона: /robload", "Ок", "");
			rob_veh[playerid] = A_CreateVehicle(413, 2364.0947,-2012.7079,13.0650,89.2284, 150, -1, -1,VEHICLE_TYPE_NONE);
			VehicleInfo[rob_veh[playerid]][vFuel] = 100;
			VehicleInfo[rob_veh[playerid]][vAkum] = 100;
			VehicleInfo[rob_veh[playerid]][vRobHouse] = true;
			SetVehicleParamsEx(rob_veh[playerid],false,false,false,false,false,false,false);
			SendOk(playerid,"Загрузка фургона: /robload");
		}
	case D_MARKET_BUY: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					new Float:armour;
					GetPlayerArmour(playerid,armour);
					if(GetInvent(playerid, 452) < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бронежилета");
					if(black_prods[3]+1 > 50) return SendClientMessage(playerid, COLOR_GREY, "На складе черного рынка недостаточно места");
					if(FI[black_prods[0]][fBank] < floatround(black_prods[7]/4)) return SendClientMessage(playerid, COLOR_GREY, "На данный момент мы не можем приобрести Ваш товар");
					FI[black_prods[0]][fBank] -= floatround(black_prods[7]/4);
					UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
					black_prods[3] += 1;
					SaveMarket();
					GiveMoney(playerid,floatround(black_prods[7]/4),"продажа армора ЧР");
					DeleteItem(playerid, 452, 1);
				}
			case 1: {
					if(!GetInvent(playerid, 427)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет армейской формы");
					if(black_prods[4]+1 > 50) return SendClientMessage(playerid, COLOR_GREY, "На складе черного рынка недостаточно места");
					if(FI[black_prods[0]][fBank] < floatround(black_prods[8]/4)) return SendClientMessage(playerid, COLOR_GREY, "На данный момент мы не можем приобрести Ваш товар");
					FI[black_prods[0]][fBank] -= floatround(black_prods[8]/4);
					UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
					black_prods[4] += 1;
					SaveMarket();
					GiveMoney(playerid,floatround(black_prods[8]/4),"продажа формы ЧР");
					DeleteItem(playerid, 427, 1);
				}
			case 2: {
					static const f_str[] = ""W"Укажите количество наркотиков для продажи:\n\n\
						"O"Примечание:"W"\n\
						\tСтоимость "P"1г"W" наркотиков: "GREEN"$%d"W"\n\
						\tДоступно грамм в кармане: "P"%d"W"\n\
						\tНа склад поместится: "P"%d"W"\n";
					new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

					format(string,sizeof(string),f_str,floatround(black_prods[5]/4),PI[playerid][pDrugs],2500-black_prods[1]);
					D(playerid,D_MARKET_NARKO_SELL,DSI, ""P"Продажа наркотиков", string, "Продать", "Отмена");
				}
			case 3: {
					static const f_str[] = ""W"Укажите количество материалов для продажи:\n\n\
						"O"Примечание:"W"\n\
						\tСтоимость "P"1"W" материала: "GREEN"$%d"W"\n\
						\tДоступно материалов в кармане: "P"%d"W"\n\
						\tНа склад поместится: "P"%d"W"\n";
					new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

					format(string,sizeof(string),f_str,floatround(black_prods[6]/4),PI[playerid][pMats],50000-black_prods[2]);
					D(playerid,D_MARKET_MATS_SELL,DSI, ""P"Продажа материалов", string, "Продать", "Отмена");
				}
			}
		}
	case D_MARKET_NARKO_SELL: {
			if(!response) return 1;
			if(!PI[playerid][pDrugs]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет наркотиков");
			if(strval(inputtext) < 1 || strval(inputtext) > 5) {
				static const f_str[] = ""W"Укажите количество наркотиков для продажи:\n\n\
						"O"Примечание:"W"\n\
						\tСтоимость "P"1г"W" наркотиков: "GREEN"$%d"W"\n\
						\tДоступно грамм в кармане: "P"%d"W"\n\
						\tНа склад поместится: "P"%d"W"\n";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];
				format(string,sizeof(string),f_str,floatround(black_prods[5]/4),PI[playerid][pDrugs],2500-black_prods[1]);
				D(playerid,D_MARKET_NARKO_SELL,DSI, ""P"Продажа наркотиков", string, "Продать", "Отмена");
				return 1;
			}
			if(black_prods[1]+strval(inputtext) >= 2500) return SendClientMessage(playerid, COLOR_GREY, "На складе черного рынка недостаточно места");
			if(PI[playerid][pDrugs] < strval(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно наркотиков");
			if(FI[black_prods[0]][fBank] < floatround(black_prods[5]/4)) return SendClientMessage(playerid, COLOR_GREY, "На данный момент мы не можем приобрести Ваш товар");
			GiveMoney(playerid,floatround((black_prods[5]*strval(inputtext))/4),"продажа нарко ЧР");
			black_prods[1] += strval(inputtext);
			SaveMarket();
			FI[black_prods[0]][fBank] -= floatround((black_prods[5]*strval(inputtext))/4);
			UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
			new string[128];
			format(string,sizeof(string),"Вы продали "P"%dг "W"наркотиков за "ORANGE"$%d",strval(inputtext),floatround((black_prods[5]*strval(inputtext))/4));
			SendUse(playerid,string);
			PI[playerid][pDrugs] -= strval(inputtext);
			UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
		}
	case D_MARKET_MATS_SELL: {
			if(!response) return 1;
			if(strval(inputtext) < 1 || strval(inputtext) > 501) {
				static const f_str[] = ""W"Укажите количество материалов для продажи:\n\n\
						"O"Примечание:"W"\n\
						\tСтоимость "P"1"W" материала: "GREEN"$%d"W"\n\
						\tДоступно материалов в кармане: "P"%d"W"\n\
						\tНа склад поместится: "P"%d"W"\n";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

				format(string,sizeof(string),f_str,floatround(black_prods[6]/4),PI[playerid][pMats],50000-black_prods[2]);
				D(playerid,D_MARKET_MATS_SELL,DSI, ""P"Продажа материалов", string, "Продать", "Отмена");
				return 1;
			}
			if(black_prods[2]+strval(inputtext) >= 50000) return SendClientMessage(playerid, COLOR_GREY, "На складе черного рынка недостаточно места");
			if(PI[playerid][pMats] < strval(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно материалов");
			if(FI[black_prods[0]][fBank] < floatround(black_prods[6]/4)) return SendClientMessage(playerid, COLOR_GREY, "На данный момент мы не можем приобрести Ваш товар");
			GiveMoney(playerid,floatround((black_prods[6]*strval(inputtext))/4),"продажа матов ЧР");
			black_prods[2] += strval(inputtext);
			SaveMarket();
			FI[black_prods[0]][fBank] -= floatround((black_prods[6]*strval(inputtext))/4);
			UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
			new string[128];
			format(string,sizeof(string),"Вы продали "P"%dг "W"материалов за "ORANGE"$%d",strval(inputtext),floatround((black_prods[6]*strval(inputtext))/4));
			SendUse(playerid,string);
			PI[playerid][pMats] -= floatround((black_prods[6]*strval(inputtext))/4);
			UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
		}
	case D_MARKET: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					static const f_str[] = ""W"Вы действитлеьно хотите купить бронежилет?\n\n\
						"O"Примечание:"W"\n\
						\tСтоимость бронежилет "GREEN"$%d"W"\n\
						\tДоступно на складе: "P"%d"W"";
					new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5)];
					format(string,sizeof(string),f_str,black_prods[7],black_prods[3]);
					D(playerid,D_MARKET_ARMOUR,DSM, ""P"Покупка бронежилет", string, "Купить", "Отмена");
				}
			case 1: {
					static const f_str[] = ""W"Вы действитлеьно хотите купить армейскую форму?\n\n\
						"O"Примечание:"W"\n\
						\tСтоимость армейской формы "GREEN"$%d"W"\n\
						\tДоступно на складе: "P"%d"W"";
					new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5)];
					format(string,sizeof(string),f_str,black_prods[8],black_prods[4]);
					D(playerid,D_MARKET_SKIN,DSM, ""P"Покупка армейской формы", string, "Купить", "Отмена");
				}
			}
		}
	case D_MARKET_ARMOUR: {
			if(!response) return 1;
			if(GetPlayerMoneyEx(playerid) < black_prods[7]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			if(black_prods[3] < 1) return SendClientMessage(playerid, COLOR_GREY, "На складе закончился товар");
			if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
			GiveMoney(playerid,-black_prods[7],"покупка брони ЧР");
			black_prods[3] -= 1;
			SaveMarket();
			FI[black_prods[0]][fBank] += black_prods[7];
			UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
			AddItem(playerid, 452, 1);
			new string[100];
			format(string,sizeof(string),"Вы приобрели бронежилет за "ORANGE"$%d",black_prods[7]);
			SendUse(playerid,string);
		}
	case D_MARKET_SKIN: {
			if(!response) return 1;
			if(GetPlayerMoneyEx(playerid) < black_prods[8]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			if(black_prods[4] < 1) return SendClientMessage(playerid, COLOR_GREY, "На складе закончился товар");
			if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
			GiveMoney(playerid,-black_prods[8],"покупка формы ЧР");
			black_prods[4] -= 1;
			SaveMarket();
			FI[black_prods[0]][fBank] += black_prods[8];
			UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
			new string[100];
			format(string,sizeof(string),"Вы приобрели армейскую форму за "ORANGE"$%d",black_prods[8]);
			SendUse(playerid,string);
			AddItem(playerid, 427, 1);
		}
	case D_MARKET_GUN: {
			if(!response) return 1;
			if(strval(inputtext) < 1 || strval(inputtext) > 500) {
				static const f_str[] = ""W"Укажите количество материалов для покупки:\n\n\
				"O"Примечание:"W"\n\
				\tСтоимость "P"1"W" материала: "GREEN"$%d"W"\n\
				\tДоступно материалов на складе: "P"%d"W"";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];
				format(string,sizeof(string),f_str,black_prods[6],black_prods[2]);
				D(playerid,D_MARKET_GUN,DSI, ""P"Покупка материалов", string, "Купить", "Отмена");
				return 1;
			}
			if(black_prods[2] < strval(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "На складе закончился товар");
			if(GetPlayerMoneyEx(playerid) < black_prods[6]*strval(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
			GiveMoney(playerid,-black_prods[6]*strval(inputtext),"покупка матов ЧР");
			black_prods[2] -= strval(inputtext);
			SaveMarket();
			FI[black_prods[0]][fBank] += black_prods[6]*strval(inputtext);
			new string[128];
			format(string,sizeof(string),"Вы приобрели "P"%d "W"материалов за "ORANGE"$%d",strval(inputtext),black_prods[6]*strval(inputtext));
			SendUse(playerid,string);
			
			PI[playerid][pMats] += strval(inputtext);
			UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
		}
	case D_JOB: {
			if(!response) return true;
			//if(start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Необходимо закончить рабочий день в организации");
			switch(listitem) {
			case 0: {
					if(PI[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Доступно со 2 уровня");
					PI[playerid][pJob] = 1;
				}
			case 1: {
					if(PI[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно со 3 уровня");
					PI[playerid][pJob] = 2;
				}
			case 2: {
					if(PI[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно со 3 уровня");
					PI[playerid][pJob] = 4;
				}
			case 3: {
					if(PI[playerid][pLevel] < 4) return SendClientMessage(playerid, COLOR_GREY, "Доступно со 4 уровня");
					PI[playerid][pJob] = 5;
				}
			case 4: {
					if(PI[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 уровня");
					PI[playerid][pJob] = 6;
				}
			case 5: {
					if(PI[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 2 уровня");
					PI[playerid][pJob] = 8;
				}
			case 6: {
					if(PI[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 2 уровня");
					if(IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы состоите в банде. Вам нельзя здесь работать");
					PI[playerid][pJob] = 9;
				}
			case 7: {
					if(PI[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 2 уровня");
					PI[playerid][pJob] = 3;
				}
			case 8: {
					if(!PI[playerid][pJob]) return SendClientMessage(playerid, COLOR_GREY, "Вы не устроены на работу");
					PI[playerid][pJob] = 0;
					SendOk(playerid,"Вы уволились с работы");
					UpdatePlayerData(playerid,"pJob",PI[playerid][pJob]);
					return true;
				}
			}
			UpdatePlayerData(playerid,"pJob",PI[playerid][pJob]);
			SendOk(playerid,"Вы успешно трудоустроились!");
			SendOk(playerid,"Для просмотра доступных команд, введите: /menu > Команды сервера > По работе");
		}
	case D_FARM: {
			if(!response) return 1;
			switch(listitem)
			{
			case 0: {
					static const f_str[] = "\n\n"W"Вы действительно хотите начать работу в "ORANGE"яблоневом саду?\n"W"Стоимость сбора яблок с 1 дерева - "GREEN"$%d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,SALARY_APPLE);
					D(playerid,D_JOB_SAD,DSM, ""P"Яблоневый сад",string,"Да","Нет");
				}
			case 1: {
					static const f_str[] = "\n\n"W"Вы действительно хотите начать работу "ORANGE"сборщиком яиц у куриц?\n"W"Стоимость за 1 яйцо - "GREEN"$%d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,SALARY_EGG);
					D(playerid,D_JOB_EGG,DSM, ""P"Сбор яиц",string,"Да","Нет");
				}
			}
		}
	case D_FARM_EGG: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					new g = PlayerEgg[playerid];
					if(!PlayerToPoint(1.0,playerid,Egg[g][gX],Egg[g][gY],Egg[g][gZ])) return true;
					if(Egg[PlayerEgg[playerid]][gCount] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Курицы не снесли еще яица");
					JobTempProcess[playerid] = 17;
					TI[playerid][tProcess][0] = 0;
					TI[playerid][tProcess][1] = 10;
					PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
					for(new YN = 0;YN < 3;YN++) {
						TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
						if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
					}
					RandomYareNforJOBS(playerid);
				}
			case 1: {
					if(!PlayerKorm[playerid]) {
						SendClientMessage(playerid, COLOR_GREY, "Вы не взяли корм");
						EnableGPSForPlayer(playerid,-86.4977,-0.3041,3.1172);
						return true;
					}
					new g = PlayerEgg[playerid];
					if(Egg[g][gKorm] >= 10) {
						SendClientMessage(playerid, COLOR_GREY, "Курицы сыты");
						RemovePlayerAttachedObject(playerid,8);
						PlayerKorm[playerid] = 0;
						return true;
					}
					if(PI[playerid][pFamily]) {
						gFamily[PI[playerid][pFamily]-1][famTalon] += 1;
						UpdateFamily(PI[playerid][pFamily],"talon",gFamily[PI[playerid][pFamily]-1][famTalon]);
						PI[playerid][pFamTalon] += 1, UpdatePlayerData(playerid, "talon_fam", PI[playerid][pFamTalon]);
					}
					Egg[g][gKorm] += 1;
					Egg[g][gTime] = unix+60;
					SendOk(playerid,"Вы покормили куриц");
					EggUpdate(playerid);
					RemovePlayerAttachedObject(playerid,8);
					PlayerKorm[playerid] = 0;
				}
			case 2: {
					SendOk(playerid,"Ухаживание за курицами закончено");
					EndEgg(playerid);
				}
			}
		}
	case D_JOB_EGG: {
			if(!response) return 1;
			SendOk(playerid,"Поздравляем. Вы успешно устроились на ферму");
			SendOk(playerid,"Чтобы начать работу, пройдите к курятнику");
			EnableGPSForPlayer(playerid, -81.0577,2.4603,3.1172);
			if(PI[playerid][pSex] == 1) A_SetPlayerSkin(playerid,132);
			else A_SetPlayerSkin(playerid, 131);
			for(new i = 0;i < 4;i++) PlayerTextDrawShow(playerid,work_td[playerid][i]);
			PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
			SetPVarInt(playerid,"egg_start",1);
		}
	case D_JOB_SAD: {
			if(!response) return true;
			if(!TI[playerid][tJobSad][0])
			{
				TI[playerid][tJobSad][0] = 1;
				TI[playerid][tJobSad][2] = 0;
				TI[playerid][tJobSad][3] = 0;
				TI[playerid][tJobSalary] = 0;
				SendOk(playerid,"Поздравляем. Вы успешно устроились на ферму");
				SendOk(playerid,"Для ухода за деревом, возьмите лейку и полейте дерево");
				if(PI[playerid][pSex] == 1) A_SetPlayerSkin(playerid,35);
				else A_SetPlayerSkin(playerid, 157);
				for(new i = 0;i < 4;i++) {
					PlayerTextDrawShow(playerid,work_td[playerid][i]);
				}
				PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
				//D(playerid,D_JOB_SAD_2,DSM, ""P"Яблочный сад","\n\n"W"Желаете пройти FAQ?\n\n","Да","Нет");
			}
			else {
				if(!TI[playerid][tJobSalary]) EndSad(playerid);
				else D(playerid,D_JOB_SAD_1,DSM, ""P"Завершение работы","\n\n\t"YELLOW"Выберите способ оплаты\n\n"G"При выборе оплаты на банковский счёт,\nзаработная плата придёт во время PayDay\n\n","Наличными","Банк");
			}
		}
	case D_JOB_SAD_1: {
			if(!response) return EndSad(playerid);
			SetPVarInt(playerid,"sad_salary",1);
			EndSad(playerid);
		}
	case D_FARM_END_1: {
			if(!response) return EggEnd(playerid);
			SetPVarInt(playerid,"sad_salary",1);
			EggEnd(playerid);
		}
	case D_JOB_PORTN: {
			if(!response) return true;
			if(!TI[playerid][tClothesWork][0]) {
				SendOk(playerid,"Вы устроились на работу портного. Подойдите к столу, чтобы начать работу");
				TI[playerid][tClothesWork][0] = 1;
				TI[playerid][tClothesWork][1] = 1;
				TI[playerid][tJobSalary] = 0;
				for(new i = 0;i < 4;i++) {
					PlayerTextDrawShow(playerid,work_td[playerid][i]);
				}
				PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
			}
			else {
				SendOk(playerid,"Работа портного завершена.");
				GiveMoney(playerid, GetPVarInt(playerid,"zp_clothes"), "з/п портного");
				DeletePVar(playerid,"zp_clothes");
				DisablePlayerRaceCheckpoint(playerid);
				for(new i = 0;i < 4;i++) PlayerTextDrawHide(playerid,work_td[playerid][i]);
				TI[playerid][tClothesWork][0] = 0;
				TI[playerid][tClothesWork][1] = 0;
			}
		}
	case D_JOB_GUNS: {
			if(!response) return true;
			if(!TI[playerid][tJobGun][0]) {
				TI[playerid][tJobGun][0] = 1;
				SendOk(playerid,"Поздравляем. Вы успешно устроились на оружейный завод");
				SendOk(playerid,"Возьмите заготовку на складе и займите свободный стол для сборки оружия");
				TI[playerid][tJobGun][1] = 1;
				TI[playerid][tJobSalary] = 0;
				if(PI[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 73);
				else A_SetPlayerSkin(playerid, 53);
				for(new i = 0;i < 4;i++) {
					PlayerTextDrawShow(playerid,work_td[playerid][i]);
				}
				PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
			}
			else {
				if(!TI[playerid][tJobSalary]) EndGun(playerid);
				else D(playerid,D_JOB_GUNS_1,DSM, ""P"Завершение работы","\n\n\t"YELLOW"Выберите способ оплаты\n\n"G"При выборе оплаты на банковский счёт,\nзаработная плата придёт во время PayDay\n\n","Наличными","Банк");
			}
		}
	case D_JOB_GUNS_1: {
			if(!response) return EndGun(playerid);
			SetPVarInt(playerid,"gun_salary",1);
			EndGun(playerid);
		}
	case D_JOB_WOOD: {
			if(!response) return true;
			if(!TI[playerid][tJobWood][0]) {
				TI[playerid][tJobWood][0] = 1;
				TI[playerid][tJobWood][3] = 1;
				TI[playerid][tJobSalary] = 0;
				SendOk(playerid,"Поздравляем. Вы успешно устроились на лесопилку");
				SendOk(playerid,"Чтобы напилить древесины, подойдите к основанию дерева");
				EnableGPSForPlayer(playerid, 1094.5377, -283.6824, 73.9922);
				if(PI[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 260);
				else A_SetPlayerSkin(playerid, 131);
				SetPlayerAttachedObject(playerid,8,341,6);
				for(new i = 0;i < 4;i++) {
					PlayerTextDrawShow(playerid,work_td[playerid][i]);
				}
				PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
			}
			else {
				if(!TI[playerid][tJobSalary]) EndWood(playerid);
				else D(playerid,D_JOB_WOOD_1,DSM, ""P"Завершение работы","\n\n\t"YELLOW"Выберите способ оплаты\n\n"G"При выборе оплаты на банковский счёт,\nзаработная плата придёт во время PayDay\n\n","Наличными","Банк");
			}
		}
	case D_JOB_WOOD_1: {
			if(!response) return EndWood(playerid);
			SetPVarInt(playerid,"wood_salary",1);
			EndWood(playerid);
		}
	case D_STOP_LOAD: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			else {
				new vehicleid = GetPlayerVehicleID(playerid);
				if(!vehicleid) return true;
				if(VG[vehicleid][vgLoading] == false && VG[vehicleid][vgUnloading] == false && !VG[vehicleid][vgWeste] && !VG[vehicleid][vgAtm]) return true;
				VG[vehicleid][vgLoading] = false;
				VG[vehicleid][vgUnloading] = false;
				VG[vehicleid][vgWeste] = 0;
				VG[vehicleid][vgAtm] = 0;
				VG[vehicleid][vgNarko] = 0;
				if(IsValid3DTextLabel(VG[vehicleid][vgText])) DestroyDynamic3DTextLabelEx(VG[vehicleid][vgText]);
				DestroyDynamicPickup(VG[vehicleid][vgPickup]);
				VG[vehicleid][vgPickup] = 0;
			}
		}
	case D_STOP_LOAD_ROBHOUSE: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			else {
				new vehicleid = GetPlayerVehicleID(playerid);
				if(!vehicleid) return true;
				if(VG[vehicleid][vgRobHouse] == false) return true;
				VG[vehicleid][vgRobHouse] = false;
				
				if(IsValid3DTextLabel(VG[vehicleid][vgText])) DestroyDynamic3DTextLabelEx(VG[vehicleid][vgText]);
				DestroyDynamicPickup(VG[vehicleid][vgPickup]);
				VG[vehicleid][vgPickup] = 0;
				DestroyDynamicArea(VG[vehicleid][vgArea]);
				VG[vehicleid][vgArea] = 0;
				SendOk(playerid,"Награбленное можно продать на чёрном рынке");
			}
		}
	case D_BIZZ_BUY: {
			new businessid = TI[playerid][tSelectedBusinessID];
			if(businessid < 0) return true;
			if(!response) {
				new bint = gBusiness[businessid][bizzBint]-1;
				if(bint < 0 || bint >= BINT_COUNT) return 1;
				if(businessid == 57) 
				{
					if(PI[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вход в казино возможен с 3 уровня");
					if(!casino) return SendClientMessage(playerid, COLOR_GREY, "Вход в казино временно закрыт");
				}
				TI[playerid][tTPpick] = true;
				SetPlayerInterior(playerid,gBints[bint][bintInterior]);
				SetPlayerVirtualWorld(playerid,businessid+1);
				SetPlayerPosAC(playerid, gBints[bint][bintX],gBints[bint][bintY],gBints[bint][bintZ], businessid+1, gBints[bint][bintInterior]);
				SetPlayerFacingAngle(playerid,gBints[bint][bintR]);
				gBusiness[businessid][bizzVisitors]++;
				SetCameraBehindPlayer(playerid);
				FreezePlayerForTime(playerid,4);
			}
			else {
				if(businessid < 0) return true;
				if(gBusiness[businessid][bizzOwnerID]) return SendClientMessage(playerid, COLOR_GREY, "Этот бизнес уже кто-то купил");
				new mes[128];
				format(mes,sizeof(mes),""W"Вы действительно хотите купить этот бизнес за "GREEN"$%d"W"?",gBusiness[businessid][bizzSellPrice]);
				D(playerid,D_BIZZ_UPDATE,DSM, ""P"Бизнес",mes,"Да","Нет");
				return 1;
			}
		}
	case D_BIZZ_BUY_2: {
			if(!response) {
				if(GetPVarInt(playerid,"bizzProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"bizzPokupaet")-1;
					SendOk(playerid,"Вы отказались от покупки бизнеса");
					SendOk(id_prodaet,"Игрок отказался от покупки Вашего бизнеса");
					DeletePVar(playerid,"bizzProdaet");
					DeletePVar(playerid,"bizzCena");
					DeletePVar(id_pokupaet,"bizzPokupaet");
				}
			}
			else {
				if(GetPVarInt(playerid,"bizzProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"bizzPokupaet")-1;
					new bizz_cena = GetPVarInt(playerid,"bizzCena");
					if(id_pokupaet == playerid) {
						if(PI[playerid][pCash] < bizz_cena) {
							SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег на руках");
							SendClientMessage(id_prodaet, COLOR_GREY,"У покупателя недостаточно денег на руках");
							DeletePVar(playerid,"bizzProdaet");
							DeletePVar(playerid,"bizzCena");
							DeletePVar(id_pokupaet,"bizzPokupaet");
						}
						else {
							new string[128];
							format(string,64,"покупка бизнеса у %s",player_name[id_prodaet]);
							string[0] = EOS;
							GiveMoney(playerid,-bizz_cena,string);
							string[0] = EOS;
							format(string,64,"продажа бизнеса %s",player_name[playerid]);
							GiveMoney(id_prodaet,bizz_cena,string);
							PI[playerid][pBusiness] = PI[id_prodaet][pBusiness];
							PI[id_prodaet][pBusiness] = 0;
							UpdatePlayerData(id_prodaet, "bussiness", 0);
							UpdatePlayerData(playerid, "bussiness", PI[playerid][pBusiness]);
							strmid(gBusiness[PI[playerid][pBusiness]-1][bizzOwner],player_name[playerid],0,strlen(player_name[playerid]),MAX_PLAYER_NAME);
							new query[256];
							mysql_format(connects, query, sizeof(query),"UPDATE `business` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",PI[playerid][pID],player_name[playerid],PI[playerid][pBusiness]);
							mysql_tquery(connects, query);
							new bizid = PI[playerid][pBusiness]-1;
							switch(gBusiness[bizid][bizzType]){
								case 14,30..33:
								{
									PI[playerid][bizz_status] = 3;
									PI[playerid][bizz_work] = gBusiness[bizid][bizzID];
									UpdatePlayerData(playerid,"bizz_status",PI[playerid][bizz_status]);
									UpdatePlayerData(playerid,"bizz_work",gBusiness[bizid][bizzID]);
									PI[playerid][bizz_cash] = 0;
									UpdatePlayerData(playerid,"bizz_cash",0);
									PI[playerid][bizz_lcash] = 0;
									UpdatePlayerData(playerid,"bizz_lcash",0);

									PI[id_prodaet][bizz_work] = 0;
									UpdatePlayerData(id_prodaet,"bizz_work",0);
									PI[id_prodaet][bizz_status] = 0;
									UpdatePlayerData(id_prodaet,"bizz_status",0);
								}
							}
							UpdateBusinessText(bizid);
							format(string,sizeof(string),"Вы приобрели бизнес у "P"%s"W" за "ORANGE"$%i",player_name[id_prodaet],bizz_cena);
							SendUse(playerid,string);
							format(string,sizeof(string),"Вы продали бизнес "P"%s"W" за "ORANGE"$%i",player_name[playerid],bizz_cena);
							SendUse(id_prodaet,string);
							DeletePVar(playerid,"bizzProdaet");
							DeletePVar(playerid,"bizzCena");
							DeletePVar(id_pokupaet,"bizzPokupaet");
						}
					}
					else {
						SendClientMessage(playerid, COLOR_GREY, "Игрок оффлайн");
						DeletePVar(playerid,"bizzProdaet");
						DeletePVar(playerid,"bizzCena");
					}
				}
			}
		}
	case D_BIZZ_BUY_FILL: {
			if(!response) return true;
			new businessid = GetPVarInt(playerid,"bfillingid");
			DeletePVar(playerid,"bfillingid");
			if(businessid < 0) return true;
			if(gBusiness[businessid][bizzOwnerID]) return SendClientMessage(playerid, COLOR_GREY, "Этот бизнес уже кто-то купил");
			new price = gBusiness[businessid][bizzSellPrice];
			if(PI[playerid][pCash] < price) return  SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег для покупки этого бизнеса");
			if(PI[playerid][pBusiness]) return  SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть бизнес");
			new query[128];
			mysql_format(connects, query, sizeof(query),"UPDATE `business` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",PI[playerid][pID],player_name[playerid],businessid+1);
			mysql_tquery(connects, query,"","");
			gBusiness[businessid][bizzOwnerID] = PI[playerid][pID];
			SetString(gBusiness[businessid][bizzOwner],player_name[playerid]);
			SendClientMessage(playerid,CGOLD,"Поздравляем, Вы купили бизнес. Не забывайте оплачивать его, иначе его продадут государству!");
			SendClientMessage(playerid,CGOLD,"Панель управления бизнесом: "W"/bpanel");

			gBusiness[businessid][bizzDay] = unix + 60*60*24;

			mysql_format(connects, query, sizeof(query),"UPDATE `business` SET `deliving` = '%d' WHERE id = '%d'",gBusiness[businessid][bizzDay],gBusiness[businessid][bizzID]);
			mysql_tquery(connects, query,"","");
			
			if(gBusiness[businessid][bizzType] == 20) {

			}

			gBusiness[businessid][bizzBank] = 0;
			gBusiness[businessid][bizzBankDay] = 0;
			gBusiness[businessid][bizzProduct] = 100;
			gBusiness[businessid][bizzPrice] = 12;
			gBusiness[businessid][bizzProdOrder] = 0;
			gBusiness[businessid][bizzProdOrderPrice] = 0;
			SaveBusiness(businessid);
			UpdateBusinessText(businessid);
			UpdatePlayerData(playerid, "bussiness", businessid + 1);
			PI[playerid][pBusiness] = gBusiness[businessid][bizzID];
			GiveMoney(playerid, -price,"покупка бизнеса");
		}
	case D_BIZZ_UPDATE: {
			if(!response) return true;
			new businessid = TI[playerid][tSelectedBusinessID];
			if(businessid < 0) return true;
			if(gBusiness[businessid][bizzOwnerID]) return SendClientMessage(playerid, COLOR_GREY, "Этот бизнес уже кто-то купил");
			new price = gBusiness[businessid][bizzSellPrice];
			if(PI[playerid][pCash] < price) return  SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег для покупки этого бизнеса");
			if(PI[playerid][pBusiness]) return  SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть бизнес");
			new query[128];
			mysql_format(connects, query, sizeof(query),"UPDATE `business` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",PI[playerid][pID],player_name[playerid],businessid+1);
			mysql_tquery(connects, query,"","");
			gBusiness[businessid][bizzOwnerID] = PI[playerid][pID];
			SetString(gBusiness[businessid][bizzOwner],player_name[playerid]);
			
			SendClientMessage(playerid,CGOLD,"Поздравляем, Вы купили бизнес. Не забывайте оплачивать его, иначе его продадут государству!");
			SendClientMessage(playerid,CGOLD,"Панель управления бизнесом - "W"/bpanel");
			
			
			if(gBusiness[businessid][bizzType] == 26)
			{
                PI[playerid][bizz_status] = 11;
				PI[playerid][bizz_cash] = 0;
				PI[playerid][bizz_lcash] = 0;
				PI[playerid][bizz_work] = gBusiness[businessid][bizzID];
				UpdatePlayerData(playerid,"bizz_status",PI[playerid][bizz_status]);
				UpdatePlayerData(playerid,"bizz_work",gBusiness[businessid][bizzID]);
				UpdatePlayerData(playerid,"bizz_cash",0);
				UpdatePlayerData(playerid,"bizz_lcash",0);
			}

			switch(gBusiness[businessid][bizzType]){
				case 14,30..33:
				{
					PI[playerid][bizz_status] = 3;
					PI[playerid][bizz_cash] = 0;
					PI[playerid][bizz_lcash] = 0;
					PI[playerid][bizz_work] = gBusiness[businessid][bizzID];
					UpdatePlayerData(playerid,"bizz_status",PI[playerid][bizz_status]);
					UpdatePlayerData(playerid,"bizz_work",gBusiness[businessid][bizzID]);
					UpdatePlayerData(playerid,"bizz_cash",0);
					UpdatePlayerData(playerid,"bizz_lcash",0);
				}
			}

			gBusiness[businessid][bizzDay] = unix + 60*60*24;
			UpdateBusinessData(businessid+1,"deliving",gBusiness[businessid][bizzDay]);

			gBusiness[businessid][bizzBank] = 0;
			gBusiness[businessid][bizzBankDay] = 0;
			gBusiness[businessid][bizzProduct] = 500;
			gBusiness[businessid][bizzPrice] = 1;
			SaveBusiness(businessid);
			UpdateBusinessText(businessid);
			UpdatePlayerData(playerid, "bussiness", businessid + 1);
			PI[playerid][pBusiness] = gBusiness[businessid][bizzID];
			GiveMoney(playerid, -price,"покупка бизнеса");
		}
	case D_GOSCAR:{
		if(!response) return 1;
		dialog_goscar(playerid, listitem, 0);
	}
	case D_GOSCAR_2:{
		if(!response) return DeletePVar(playerid, "GosTryk");
		dialog_goscar(playerid, listitem, 1);
		
	}
	case D_GOSCAR_3:
	{
		if(!response) return DeletePVar(playerid, "IDgosCar");
		dialog_goscar(playerid, listitem, 2);
		
	}
	case D_GOSCAR_4:
	{
		if(!response) return 1;
		dialog_goscar(playerid, listitem, 3);
		
	}
	case D_BIZZ: {
			if(!response) return true;
			new bizz = PI[playerid][pBusiness]-1;
			if(bizz < 0) return true;
			switch(listitem) {
			case 0..5: dialog_business(playerid,bizz,listitem);
			case 6: dialog_business(playerid,bizz,7);
			case 7: dialog_business(playerid,bizz,8);
			}
		}
	case D_BIZZ_2: {
			if(!response) return true;
			new bizz = PI[playerid][pBusiness]-1;
			if(bizz < 0) return true;
			dialog_business(playerid,bizz,listitem);
		}
	case D_BIZZ_3: {
			if(!response) return true;
			new bizz = PI[playerid][pBusiness]-1;
			if(bizz < 0) return true;
			switch(listitem) {
			case 0: dialog_business(playerid,bizz,0);
			case 1: dialog_business(playerid,bizz,1);
			case 2: dialog_business(playerid,bizz,2);
			case 3: dialog_business(playerid,bizz,3);
			case 4: dialog_business(playerid,bizz,6);
			case 5: dialog_business(playerid,bizz,7);
			case 6: dialog_business(playerid,bizz,4);
			case 7: dialog_business(playerid,bizz,8);
			}
		}
	case D_BIZZ_4: {
			if(!response) return true;
			new bizz = PI[playerid][pBusiness]-1;
			if(bizz < 0) return true;
			switch(listitem) {
			case 0..4: dialog_business(playerid,bizz,listitem);
			case 5: dialog_business(playerid,bizz,7);
			case 6: dialog_business(playerid,bizz,8);
			}
		}
	case D_BIZZ_5: {
			if(!response) return true;
			new bizz = PI[playerid][pBusiness]-1;
			if(bizz < 0) return true;
			switch(listitem) {
			case 0..2: dialog_business(playerid,bizz,listitem);
			case 3: dialog_business(playerid,bizz,4);
			case 4: dialog_business(playerid,bizz,5);
			case 5: dialog_business(playerid,bizz,7);
			case 6: dialog_business(playerid,bizz,8);
			}
		}
	case D_BIZZ_6: {
			if(!response) return true;
			new bizz = PI[playerid][pBusiness]-1;
			if(bizz < 0) return true;
			switch(listitem) {
			case 0..2: dialog_business(playerid,bizz,listitem);
			case 3: dialog_business(playerid,bizz,3);
			case 4: dialog_business(playerid,bizz,7);
			case 5: dialog_business(playerid,bizz,8);
			}
		}
	case D_BIZZ_10:{
		if(!response) return true;
		new bizz = PI[playerid][pBusiness]-1;
		if(bizz < 0) return true;
		switch(listitem) {
			case 0: dialog_business(playerid,bizz,listitem);
			case 1: dialog_business(playerid,bizz,7);
			case 2: dialog_business(playerid,bizz,8);
		}
	}
	case D_BIZZ_11:{
		if(!response) return true;
		new bizz = PI[playerid][pBusiness]-1;
		if(bizz < 0) return true;
		switch(listitem) {
			case 0: dialog_business(playerid,bizz,listitem);
			case 1: dialog_business(playerid,bizz,7);
			case 2: dialog_business(playerid,bizz,9);
			case 3: dialog_business(playerid,bizz,8);
		}
	}
	case D_BIZZ_MICRO_PROCENT:{
		if(!response) return 1;
		new value = strval(inputtext);
		if(value < 1 || value > 10) return SPD(playerid, D_BIZZ_MICRO_PROCENT, DSI, "Изменение процента", ""R"Процент не может быть, меньше 1 и больше 10.\n"W"Введите в поле ниже, под какой процент, вы хотите занимать деньги.",">>>","x"); 
		gBusiness[63][bizzPr] = value;
		UpdateBusinessData(64, "procent", gBusiness[63][bizzPr]);
		new str[64];
		format(str, sizeof(str), "Вы успешно изменили процент займа на "GREEN"%d!", gBusiness[63][bizzPr]);
		SCM(playerid, COLOR_WHITE,str);
	}
	case D_BIZZ_UPGRADE: {
			if(!response) return pc_cmd_bpanel(playerid);
			if(!PI[playerid][pBusiness]) return 1;
			new bizid = PI[playerid][pBusiness]-1;
			switch(listitem) {
			case 0: {
					if(gBusiness[bizid][bizzBank] < 100000) return SendClientMessage(playerid, COLOR_GREY, "На счету бизнеса недостаточно средств");
					if(gBusiness[bizid][bizzUpgrade][0] >= 10000) return SendClientMessage(playerid, COLOR_GREY, "У Вас приобретено данное улучшение");
					gBusiness[bizid][bizzUpgrade][0] = 10000;
					gBusiness[bizid][bizzBank] -= 100000;
				}
			case 1: {
					if(gBusiness[bizid][bizzBank] < 200000) return SendClientMessage(playerid, COLOR_GREY, "На счету бизнеса недостаточно средств");
					if(gBusiness[bizid][bizzUpgrade][1] == 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас приобретено данное улучшение");
					gBusiness[bizid][bizzUpgrade][1] = 1;
					gBusiness[bizid][bizzBank] -= 200000;
				}
			case 2: {
					if(gBusiness[bizid][bizzBank] < 200000) return SendClientMessage(playerid, COLOR_GREY, "На счету бизнеса недостаточно средств");
					if(gBusiness[bizid][bizzUpgrade][2] == 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас приобретено данное улучшение");
					gBusiness[bizid][bizzUpgrade][2] = 1;
					gBusiness[bizid][bizzBank] -= 200000;
				}
			}
			SendClientMessage(playerid,CGOLD,"Поздравляем с покупкой улучшения в Ваш бизнес");
			UpdateBusinessData(bizid+1,"bank",gBusiness[bizid][bizzBank]);
			UpdateBizzUpgrade(bizid);
		}
	case D_BIZZ_SELL:
	{
		if(!response) return true;
		if(PI[playerid][pBusiness] < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бизнеса");
		new id = PI[playerid][pBusiness] - 1;
		new procent = floatround((gBusiness[id][bizzSellPrice]/100) *Nalog[3]);
		new sum = (gBusiness[id][bizzSellPrice]-procent);
		
		FI[fWHITEHOUSE][fBank] += procent;
		UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

		if(UpdateBusinessData(id+1,"ownerid",0)) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #21");
		gBusiness[id][bizzOwnerID] = 0;
		if(gBusiness[id][bizzType] != 26) gBusiness[id][bizzStatus] = 11;
		else gBusiness[id][bizzStatus] = 1;
		gBusiness[id][bizzUpgrade][0] = 5000;
		if(gBusiness[id][bizzType] != 16) gBusiness[id][bizzUpgrade][1] = 0;
		gBusiness[id][bizzUpgrade][2] = 0;
		gBusiness[id][bizzPrice] = 5;
		SetString(gBusiness[id][bizzOwner],"");
		if(gBusiness[id][bizzType] != 16) {
			new query[282];
			mysql_format(connects, query, sizeof(query),"UPDATE `business` SET `ownerid` = '0', `owner` = '', `status` = '1', `price` = '5',`order` = '0',`orderprice` = '0',`upgrade` = '5000|0|0' WHERE `id` = '%d'",id+1);
			mysql_tquery(connects, query,"","");
		}
		if(gBusiness[id][bizzType] == 16) {
			new query[282];
			mysql_format(connects, query, sizeof(query),"UPDATE `business` SET `ownerid` = '0', `owner` = '', `status` = '1', `price` = '5',`order` = '0',`orderprice` = '0',`upgrade` = '5000|1|0' WHERE `id` = '%d'",id+1);
			mysql_tquery(connects, query,"","");
		}
		else if(gBusiness[id][bizzType] == 14) {
			sell_bizztaxi(id+1);
		}
		UpdateBusinessText(id);
		PI[playerid][pBusiness] = 0;
		UpdatePlayerData(playerid, "bussiness", 0);
		GiveMoney(playerid,sum,"продажа бизнеса");
		SendOk(playerid,"Бизнес продан государству");
	}
	case D_BIZZ_BUY_GARAGE:
	{
	    if(!response) return 1;
 		D(playerid,D_BIZZ_BUY_GARAGE_2,DSTH,""P"Покупка гаража","Выберите какой гараж хотите приобрести:\n\
		"ORANGE"1. "W"Низкий класс.\n\
		"ORANGE"2. "W"Средний класс.\n\
		"ORANGE"3. "W"Высокий класс.","Далее","Назад");
	}
	case D_BIZZ_BUY_GARAGE_2:{
		if(!response) return 1;
		
	    if(GetPVarInt(playerid, "BuyGarage")) return SendClientMessage(playerid, COLOR_GREY, "Вы уже купили заброшенный гараж!");
        switch(listitem)
		{
			case 0: {
				if(PI[playerid][pCash] < 150000) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно средств на руках!");
				for(new i = 1; i <= MAX_GARAGE; i++)
				{
					if(FG[i][gTypes] != 1) continue;
                    if(FG[i][gActive] != 1) continue;
				    SetPVarInt(playerid, "BuyGarage", FG[i][gGID]);
				    new id = GetPVarInt(playerid, "BuyGarage");
				    FG[id][gOwnerID] = PI[playerid][pID];
					SetPlayerCheckpoint(playerid, FG[i][posX], FG[i][posY], FG[i][posZ], 4.0);
				    FG[id][gActive] = 0;
				    SendClientMessage(playerid, COLOR_GREY, "Отправляйтесь на заброшенный гараж!");
				    SendClientMessage(playerid, COLOR_GREY, "Геолокация была отправлена вам на навигатор!");
				    STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"{F9C7A1}Гараж\n\n"W"Класс:{F9C7A1} %s"W"\nВладелец:{F9C7A1} %s"W"\n\nДля взаимодействия нажмите{F87427} ALT",GetNameClassG(FG[id][gTypes]),player_name[playerid]);
					Update3DTextLabelText(FGarage[FG[id][gGID]], -1, STRING_GLOBAL);
					GiveMoney(playerid, -150000, "Покупка заброшенного гаража!");
					bizz_pay(63,floatround(150000 * 0.095)); 
					break;
				}
				
			}
			case 1: {
                if(PI[playerid][pCash] < 250000) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно средств на руках!");
                for(new i = 1; i <= MAX_GARAGE; i++)
				{
				 
	                if(FG[i][gTypes] != 2) continue;
                    if(FG[i][gActive] != 1) continue;
					SetPVarInt(playerid, "BuyGarage", FG[i][gGID]);
					new id = GetPVarInt(playerid, "BuyGarage");
				    FG[id][gOwnerID] = PI[playerid][pID];
					SetPlayerCheckpoint(playerid, FG[i][posX], FG[i][posY], FG[i][posZ], 4.0);
				    FG[id][gActive] = 0;
  					SendClientMessage(playerid, COLOR_GREY, "Отправляйтесь на заброшенный гараж!");
				    SendClientMessage(playerid, COLOR_GREY, "Геолокация была отправлена вам на навигатор!");
				    STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"{F9C7A1}Гараж\n\n"W"Класс:{F9C7A1} %s"W"\nВладелец:{F9C7A1} %s"W"\n\nДля взаимодействия нажмите{F87427} ALT",GetNameClassG(FG[id][gTypes]), player_name[playerid]);
					Update3DTextLabelText(FGarage[id], -1, STRING_GLOBAL);
					GiveMoney(playerid, -250000, "Покупка заброшенного гаража!");
					bizz_pay(63,floatround(250000 * 0.075)); 
					break;
				}
			}
			case 2: {
                if(PI[playerid][pCash] < 500000) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно средств на руках!");
                for(new i = 1; i <= MAX_GARAGE; i++)
				{
				   
	                if(FG[i][gTypes] != 3) continue;
                    if(FG[i][gActive] != 1) continue;
  					SetPVarInt(playerid, "BuyGarage", FG[i][gGID]);
  					new id = GetPVarInt(playerid, "BuyGarage");
				    FG[id][gOwnerID] = PI[playerid][pID];
					SetPlayerCheckpoint(playerid, FG[i][posX], FG[i][posY], FG[i][posZ], 4.0);
				    FG[id][gActive] = 0;
    				SendClientMessage(playerid, COLOR_GREY, "Отправляйтесь на заброшенный гараж!");
				    SendClientMessage(playerid, COLOR_GREY, "Геолокация была отправлена вам на навигатор!");
				    STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"{F9C7A1}Гараж\n\n"W"Класс:{F9C7A1} %s"W"\nВладелец:{F9C7A1} %s"W"\n\nДля взаимодействия нажмите{F87427} ALT",GetNameClassG(FG[id][gTypes]), player_name[playerid]);
					Update3DTextLabelText(FGarage[FG[id][gGID]], -1, STRING_GLOBAL);
					GiveMoney(playerid, -500000, "Покупка заброшенного гаража!");
					bizz_pay(63,floatround(500000 * 0.495)); 
					break;
				}
			}
		}
	}
	case D_BIZZ_BANK: {
			if(!response) return pc_cmd_bpanel(playerid);
			if(!PI[playerid][pBusiness]) return 1;
			switch(listitem) {
			case 0: {
					static const f_str[] = ""W"Состояние счета: "GREEN"$%d\n"P"1."W" Снять деньги\n"P"2."W" Положить деньги";
					new string[sizeof(f_str) +1 + (-2 + 10)];
					format(string,sizeof(string),f_str,gBusiness[PI[playerid][pBusiness] - 1][bizzBank]);
					D(playerid,D_BIZZ_BANK,DSL,""P"Управление кассой",string,"Далее","Назад");
				}
			case 1: D(playerid,D_BIZZ_BANK_INPUT,1,"Бизнес","\n\n"W"Введите сумму, которую хотите взять с кассы бизнеса:\n\n","Взять","Отмена");
			case 2: D(playerid,D_BIZZ_BANK_PUT,1,"Бизнес","\n\n"W"Введите сумму, которую хотите положить в кассу бизнеса:\n\n","Положить","Отмена");
			}
		}
	case D_BIZZ_BANK_INPUT: {
			if(!response) return true;
			if(!PI[playerid][pBusiness]) return 1;
			new id = PI[playerid][pBusiness] - 1;
			new sum = strval(inputtext);
			if(sum < 1 || sum > 1000000) return D(playerid,D_BIZZ_BANK_INPUT,1,"Бизнес","\n\n"W"Введите сумму, которую хотите взять с кассы бизнеса:\n\n"NO"*"G" От $1 до $1.000.000\n\n","Взять","Отмена");
			if(gBusiness[id][bizzBank] < sum) return D(playerid,D_BIZZ_BANK_INPUT,1,"Бизнес","\n\n"W"Введите сумму, которую хотите взять с кассы бизнеса:\n\n"NO"*"G" В кассе недостаточно средств\n\n","Взять","Отмена");	
			if(UpdateBusinessData(id+1,"bank",gBusiness[id][bizzBank] - sum)) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #20");
			gBusiness[id][bizzBank] -= sum;
			UpdateBusinessData(id+1,"bank",gBusiness[id][bizzBank]);
			GiveMoney(playerid,sum,"прибыль с бизнеса");
			
			new string[128];
			format(string,sizeof(string),"Вы взяли с кассы бизнеса: "ORANGE"$%d",sum);
			SendUse(playerid,string);
		}
	case D_BIZZ_BANK_PUT: {
			if(!response) return true;
			if(!PI[playerid][pBusiness]) return 1;
			new id = PI[playerid][pBusiness] - 1;
			new sum = strval(inputtext);
			if(sum < 1 || sum > 1000000) return D(playerid,D_BIZZ_BANK_PUT,1,"Бизнес","\n\n"W"Введите сумму, которую хотите положить в кассу бизнеса:\n\n"NO"*"G" От $1 до $1.000.000\n\n","Положить","Отмена");
			if(GetPlayerMoneyEx(playerid) < sum) return D(playerid,D_BIZZ_BANK_PUT,1,"Бизнес","\n\n"W"Введите сумму, которую хотите положить в кассу бизнеса:\n\n"NO"*"G" У Вас недостаточно средств\n\n","Положить","Отмена");	
			if(UpdateBusinessData(id+1,"bank",gBusiness[id][bizzBank] + sum)) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #20");
			gBusiness[id][bizzBank] += sum;
			UpdateBusinessData(id+1,"bank",gBusiness[id][bizzBank]);
			GiveMoney(playerid,-sum,"положил в банк бизнеса");
			
			new string[128];
			format(string,sizeof(string),"Вы положили в кассу бизнеса: "ORANGE"$%d",sum);
			SendUse(playerid,string);
		}
	case D_BIZZ_PRICE: {
			if(!response) return true;
			new id = PI[playerid][pBusiness] - 1;
			if(id < 0) return true;
			new price = strval(inputtext);
			if(gBusiness[id][bizzType] == 7) {
				if(price < 30 || price > 50) return D(playerid,D_BIZZ_PRICE,DSI, ""P"Бизнес","\n\n"W"Введите цену за 1 литр\nПримечание: от "GREEN"$30"W" до "GREEN"$50\n\n","Изменить","Отмена");
			}
			else {
				if(price < 5 || price > 10) return D(playerid,D_BIZZ_PRICE,DSI, ""P"Бизнес","\n\n"W"Введите цену за "P"1"W" ед. товара\nПримечание: от "GREEN"$5"W" до "GREEN"$10\n\n","Изменить","Отмена");
			}
			gBusiness[id][bizzPrice] = price;
			UpdateBusinessData(id+1,"price",price);
			UpdateBusinessText(id);
			new string[128];
			if(gBusiness[id][bizzType] == 7) format(string,sizeof(string),"Цена за "P"1"W" литр установлена: "ORANGE"$%d",price);
			else format(string,sizeof(string),"Цена за "P"1"W" ед. товара установлена: "ORANGE"$%d",price);
			SendUse(playerid,string);
		}
	case D_BIZZ_ENTER: {
			if(!response) return true;
			new id = PI[playerid][pBusiness] - 1;
			if(id < 0) return true;
			new price = strval(inputtext);
			if(price < 0 || price > 5000) return D(playerid,D_BIZZ_ENTER,DSI, ""P"Бизнес","\n\n"W"Введите цену за вход\nПримечание: от "GREEN"$0"W" до "GREEN"$5000\n\n","Изменить","Отмена");
			gBusiness[id][bizzEnter] = price;
			UpdateBusinessData(id+1,"enter",price);
			UpdateBusinessText(id);
			new string[128];
			format(string,sizeof(string),"Цена за вход установлена: "ORANGE"$%d",price);
			SendUse(playerid,string);
		}
	case D_BIZZ_ENTERS: {
			if(!response) return 1;
			new businessid = TI[playerid][tSelectedBusinessID];
			if(businessid < 0) return true;
			new price = gBusiness[businessid][bizzEnter];
			new bint = gBusiness[businessid][bizzBint]-1;
			if(bint < 0 || bint >= BINT_COUNT) return 1;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			if(businessid == 57) {
				if(PI[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вход в казино возможен с 3 уровня");
				if(!casino) return SendClientMessage(playerid, COLOR_GREY, "Вход в казино временно закрыт");
			}
			GiveMoney(playerid,-price,"вход в бизнес");
			bizz_pay(businessid,price);
			TI[playerid][tTPpick] = true;
			SetPlayerPosAC(playerid, gBints[bint][bintX],gBints[bint][bintY],gBints[bint][bintZ], businessid+1, gBints[bint][bintInterior]);

			SetPlayerFacingAngle(playerid,gBints[bint][bintR]);
			gBusiness[businessid][bizzVisitors]++;
			SetCameraBehindPlayer(playerid);
			new freezeSeconds = 0;
			switch (GetPlayerPing(playerid)) {
			case 0 .. 49: freezeSeconds = 2;
			case 50 .. 199: freezeSeconds = 3;
			case 200 .. 499: freezeSeconds = 4;
			default: freezeSeconds = 5;
			}
			FreezePlayerForTime(playerid, freezeSeconds);
		}
	case dBusinessProd: {
			if (!response) return pc_cmd_bpanel(playerid);
			new put = strval(inputtext);
			new bizid = PI[playerid][pBusiness] - 1;
			if (gBusiness[bizid][bizzProdOrder]) return SendClientMessage(playerid, COLOR_GREY, "Вы уже заказали продукты, ожидайте когда развозчики доставят его в Ваш бизнес");
			if (put < 500 || put > gBusiness[bizid][bizzUpgrade][0])
			{
				static const f_str[] = "\n\n"W"Введите кол-во продуктов, которое хотите заказать:\n\n"NO"*"G" Минимум 500 максимум %d\n\n";
				new string[sizeof(f_str) + 1 + (-2 + 6)];
				format(string, sizeof(string), f_str, gBusiness[bizid][bizzUpgrade][0]);
				D(playerid, dBusinessProd, DSI, ""P"Заказ продуктов", string, "Далее", "Отмена");
				return 1;
			}
			if (gBusiness[bizid][bizzProduct] + put > gBusiness[bizid][bizzUpgrade][0])
			return D(playerid, dBusinessProd, DSI, ""P"Заказ продуктов", "\n\n"W"Введите кол-во продуктов, которое хотите заказать:\n\n"NO"*"G" На Вашем складе достаточно продуктов\n\n", "Далее", "Отмена");

			PlayerBuyProdFix[playerid] = put;
			D(playerid, dBusinessProd2, DSI, ""P"Заказ продуктов", "\n\n"W"Введите цену за "P"10"W" продуктов:\nПримечание: от "GREEN"$2"W" до "GREEN"$4\n\n", "Заказать", "Отмена");
			return 1;
		}
	case dBusinessProd2: {
			if (!response) return pc_cmd_bpanel(playerid), PlayerBuyProdFix[playerid] = 0;
			new put;
			new bizid = PI[playerid][pBusiness] - 1;
			if (sscanf(inputtext, "i", put)) return D(playerid, dBusinessProd2, DSI, ""P"Заказ продуктов", "\n\n"W"Введите цену за "P"10"W" продуктов:\nПримечание: от "GREEN"$2"W" до "GREEN"$4\n\n", "Заказать", "Отмена");
			if (put < 2 || put > 4) return D(playerid, dBusinessProd2, DSI, ""P"Заказ продуктов", "\n\n"W"Введите цену за "P"10"W" продуктов:\nПримечание: от "GREEN"$2"W" до "GREEN"$4\n\n", "Заказать", "Отмена");

			new string[144];
			new prod = PlayerBuyProdFix[playerid] * put / 10;
			if (gBusiness[bizid][bizzBank] < prod)
			{
				format(string, sizeof(string), "Недостаточно средств на счету бизнеса. Для оплаты необходимо: "NO"$%d", prod);
				SendClientMessage(playerid, COLOR_GREY, string);
				PlayerBuyProdFix[playerid] = 0;
				return 1;
			}
			gBusiness[bizid][bizzBank] -= prod;
			gBusiness[bizid][bizzProdOrder] = PlayerBuyProdFix[playerid];
			gBusiness[bizid][bizzProdOrderPrice] = put;

			SaveBusiness(bizid);

			format(string, sizeof(string), ""W"Заказано продуктов: "O"%d\n"W"Оплачено со счёта бизнеса: "GREEN"$%d", gBusiness[bizid][bizzProdOrder], gBusiness[bizid][bizzProdOrderPrice]*gBusiness[bizid][bizzProdOrder]);
			D(playerid, DIALOG_NONE, DSM, ""P"Заказ продуктов", string, "Закрыть", "");
			PlayerBuyProdFix[playerid] = 0;
			return 1;
		}
	case D_BIZZ_STATS: return true; 
	case D_AMMO: {
			if(!response) return 1;
			switch(listitem) {
			case 0..4,11,12,13: {
					new bizid = TI[playerid][tSelectedBusinessID];
					new slot = listitem, string[128];
					if(PI[playerid][pCash] < gSellGunPrice[slot]*gBusiness[bizid][bizzPrice]) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно денег");
					else if(listitem == 13) {
						if(PI[playerid][pCash] < gSellGunPrice[12] * gBusiness[bizid][bizzPrice]) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно денег");
						format(string, sizeof(string), "Вы купили "P"пропуск в тир "W"за "ORANGE"$%i."W" Поднимитесь на второй этаж",gSellGunPrice[12] * gBusiness[bizid][bizzPrice]);
						SendUse(playerid, string);
						TI[playerid][tTir] = true; 
						GiveMoney(playerid,-gSellGunPrice[12] * gBusiness[bizid][bizzPrice],"пропуск в тир");
						if(gBusiness[bizid][bizzProduct]-gSellGunProds[slot] > 0) {
							gBusiness[bizid][bizzProduct] -= gSellGunProds[slot];
							bizz_pay(bizid, 1000);
						}
						return true;
					}
					new result_weapon = 0, ammow = 0, weap = 0;
					switch(listitem) {
					case 0: result_weapon = 6;
					case 1: result_weapon = 5;
					case 2: result_weapon = 8;
					case 3: result_weapon = 1;
					case 4: result_weapon = 17;
					case 5: result_weapon = 46;
					}
					if(result_weapon > 0) {
						for(new i = 0; i < 13; i++) 
						{
							GetPlayerWeaponData(playerid,i, weap,ammow);
							if(weap == result_weapon) {
								SendUse(playerid, "У Вас уже есть данный вид оружия");
								return true;
							}
						}
					}
					new gun_name[32 + 1];
					GetWeaponName(gSellGun[slot],gun_name,32);
					if(gBusiness[bizid][bizzProduct]-gSellGunProds[slot] > 0) {
						gBusiness[bizid][bizzProduct] -= gSellGunProds[slot];
						bizz_pay(bizid,(gSellGunPrice[slot] * gBusiness[bizid][bizzPrice]));
					} 
					
					
					UpdateBusinessText(bizid);
					if(listitem < 12) {
						format(string, sizeof(string), "Вы купили "P"%s "W"за "ORANGE"$%i",gun_name, gSellGunPrice[slot] * gBusiness[bizid][bizzPrice]);
						SendUse(playerid, string);
						GivePlayerWeapon(playerid,gSellGun[slot],1);
					}
					else if(listitem == 12) {
						SetArmour(playerid,100);
						format(string, sizeof(string), "Вы купили "P"Armour "W"за "ORANGE"$%i", gSellGunPrice[slot] * gBusiness[bizid][bizzPrice]);
						SendUse(playerid, string);
					}
					GiveMoney(playerid,-gSellGunPrice[slot] * gBusiness[bizid][bizzPrice],"покупка оружия(аммо)");
				}
			case 5..10: {
					D(playerid,D_AMMO_2, DSI, "Меню аммо", ""W"Введите количество патрон, которое хотите купить:", "Далее", "Отмена");
					SetPVarInt(playerid,"slot_ammo", listitem);
				}
			}
			return 1;
		}
	case D_AMMO_2: {
			if(!response) return DeletePVar(playerid,"slot_ammo");
			new slot = GetPVarInt(playerid,"slot_ammo");
			new bizid = TI[playerid][tSelectedBusinessID];
			new patron = strval(inputtext);
			if(patron <= 0 || patron > 1000) return D(playerid,D_AMMO_2, DSI, "Меню аммо", ""W"Введите количество патрон, которое хотите купить:\n\n"NO"*"G" От 1 до 1000 патрон", "Далее", "Отмена");
			if(PI[playerid][pCash] < gSellGunPrice[slot]*gBusiness[bizid][bizzPrice] * patron) return D(playerid,D_AMMO_2, DSI, "Меню аммо", ""W"Введите количество патрон, которое хотите купить:\n\n"NO"*"G" Недостаточно средств", "Далее", "Отмена");
			new gun_name[32 + 1],string[128];
			GetWeaponName(gSellGun[slot],gun_name,32);
			format(string, sizeof(string), "Вы купили "P"%s [%i пат.] "W"за "ORANGE"$%i",gun_name,patron, gSellGunPrice[slot] * gBusiness[bizid][bizzPrice] * patron);
			SendUse(playerid, string);
			if(gBusiness[bizid][bizzProduct]-gSellGunProds[slot] * patron > 0) {
				gBusiness[bizid][bizzProduct] -= gSellGunProds[slot]*patron;
				bizz_pay(bizid,(gSellGunPrice[slot] * gBusiness[bizid][bizzPrice] * patron));
			} 

			GivePlayerWeapon(playerid,gSellGun[slot],patron);
			GiveMoney(playerid,-gSellGunPrice[slot] * gBusiness[bizid][bizzPrice] * patron,"покупка оружия(аммо)");
			DeletePVar(playerid,"slot_ammo");
			return 1;
		}
	case D_BOX_2: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			switch(listitem) {
			case 0: {
					if(GetPlayerMoneyEx(playerid) < gBusiness[id][bizzPrice]*150) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
					bizz_pay(id,gBusiness[id][bizzPrice]*150);
					GiveMoney(playerid, -gBusiness[id][bizzPrice]*150,"покупка в спортзале");
					if(PI[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 80);
					else A_SetPlayerSkin(playerid,192);
					SendOk(playerid,"Выйти на ринг с противником -"P" /fight");
					TI[playerid][tGym] = true;
				}
			case 1..3: {
					if(!TI[playerid][tGym]) return SendClientMessage(playerid, COLOR_GREY, "Для начала приобретите спортивную форму");
					if(TI[playerid][tGymSkill]) return SendClientMessage(playerid, COLOR_GREY, "Вы уже изучаете стиль боя");
					if(PI[playerid][pBox] == listitem) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже изучен данный стиль боя");
					if(PI[playerid][pBox]+1 < listitem) return SendClientMessage(playerid, COLOR_GREY, "Для начала изучите предыдущий стиль боя");
					if(GetPlayerMoneyEx(playerid) < 5000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
					if(gBusiness[id][bizzProduct]-130 > 0) {
						gBusiness[id][bizzProduct] -= 130;
						bizz_pay(id,5000);
					}
					GiveMoney(playerid, -5000,"покупка в спортзале");
					SendOk(playerid,"Вы начали тренировку, бейте по грушам для прокачки навыка боя");
					TI[playerid][tGymSkill] = listitem;
					TI[playerid][tGym] = true;
				}
			case 4: {
					if(GetPlayerMoneyEx(playerid) < 200) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
					if(TI[playerid][tGyms] + 250 > 1000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя взять больше 1 литра шейкера");
					if(gBusiness[id][bizzProduct]-20 > 0) {
						gBusiness[id][bizzProduct] -= 20;
						bizz_pay(id,200);
					}
					GiveMoney(playerid, -200,"покупка в спортзале");
					TI[playerid][tGyms] += 250;
					SendOk(playerid,"Вы купили шейкер Smart 250мл на 250 ударов");
				}
			case 5: {
					if(GetPlayerMoneyEx(playerid) < 350) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
					if(TI[playerid][tGyms] + 500 > 1000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя взять больше 1 литра шейкера");
					if(gBusiness[id][bizzProduct]-35 > 0) {
						gBusiness[id][bizzProduct] -= 35;
						bizz_pay(id,350);
					}
					GiveMoney(playerid, -350,"покупка в спортзале");
					TI[playerid][tGyms] += 500;
					SendOk(playerid,"Вы купили шейкер BSN 500мл на 500 ударов");
				}
			case 6: {
					if(GetPlayerMoneyEx(playerid) < 500) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
					if(TI[playerid][tGyms] + 750 > 1000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя взять больше 1 литра шейкера");
					if(gBusiness[id][bizzProduct]-50 > 0) {
						gBusiness[id][bizzProduct] -= 50;
						bizz_pay(id,500);
					}
					GiveMoney(playerid, -500,"покупка в спортзале");
					TI[playerid][tGyms] += 750;
					SendOk(playerid,"Вы купили шейкер Biotech 750мл на 750 ударов");
				}
			case 7: {
					D(playerid,DIALOG_NONE,DSM, ""P"Информация",""W"Шейкер поможет тебе ускорить прокачку стиля боя на "ORANGE"30%.\n"W"Для наиоблее эффективной тренировки рекомендуем приобрести "ORANGE"1000мл шейкера.\n\n"NO"Внимание!"W" Если Вы вышли из игры не закончив тренировку, Ваш прогресс сохранится.\nЗа форму, тренировку и шейкер придётся заплатить снова. Удачной тренировки!\n\n","Закрыть","");
				}
			case 8: {
					if(PI[playerid][pMember] && start_work[playerid]) {
						A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
						SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
					}
					else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
					TI[playerid][tGym] = false;
					SendOk(playerid,"Вы закончили тренировку");
				}
			}
		}
	case D_BIZZ_24: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			new price = gShopPrice[listitem]*gBusiness[id][bizzPrice];
			if(gBusiness[id][bizzProduct]-gShopProduct[listitem] <= 0) return SendClientMessage(playerid, COLOR_GREY, "В бизнесе нет продуктов!");
			if(PI[playerid][pCash] < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			switch(listitem)
			{
			case 0: {
					if(PI[playerid][pPhone]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть телефон"),show_24(playerid,id);
					new number;
					number = Random(100000,999999);
					new query[220];
					mysql_format(connects, query, sizeof(query),"SELECT * FROM `accounts` WHERE `pPhone` = '%i'", number);
					mysql_tquery(connects, query, "check_phone", "ii", playerid, number);
				}
			case 1: {
					GivePlayerWeapon(playerid,43,20);
					SendUse(playerid,"Поздравляем с покупкой камеры! Вы можете запечатлить 20 кадров");
				}
			case 2: {
					if(PI[playerid][pWatch]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть часы"),show_24(playerid,id);
					PI[playerid][pWatch] = 1;
					UpdatePlayerData(playerid,"watch",1);
					SendUse(playerid,"Поздравляем с приобретением часов! Посмотреть время - "ORANGE"/time");
				}
			case 3: {
					if(PI[playerid][pBook]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже телефонная книга"),show_24(playerid,id);
					PI[playerid][pBook] = 1;
					UpdatePlayerData(playerid,"book",1);
					SendUse(playerid,"Поздравляем с приобретением телефонной книги! Контакты - "ORANGE"/book");
				}
			case 4: {
					if(!PI[playerid][pPhone]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет телефона"),show_24(playerid,id);
					return D(playerid,D_BIZZ_SIM,DSI, ""P"Покупка номера","\n\n"W"Введите номер, который хотите использовать (6 цифр):\n\n","Купить","Закрыть");
				}
			case 5: return D(playerid,D_BIZZ_MASK,DSI, ""P"Покупка масок",""W"Введите кол-во масок, которое хотите приобрести:","Купить","Закрыть");
			case 6: return D(playerid,D_BIZZ_MEDKIT,DSL, ""P"Покупка аптечки",""P"1."W" Себе\n"P"2."W" В дом\n"P"3."W" В банду","Купить","Закрыть");
			case 7: {
					for(new i; i <= 11; i++) {
						new gunid, ammo;
						GetPlayerWeaponData(playerid, i, gunid,ammo);
						if(gunid == 14) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть цветы"),show_24(playerid,id);
					}
					GivePlayerWeapon(playerid,14,1);
					SendUse(playerid,"Поздравляем с покупкой цветов! Подарить цветы - "ORANGE"/flowers");
				}
			case 8: {
					if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
					AddItem(playerid, 121,1);
					GiveMoney(playerid, -gShopPrice[8]*gBusiness[id][bizzPrice]*strval(inputtext),"покупка ремкомплекта");
				}
			case 9: {
					GivePlayerWeapon(playerid,41,5000);
					SendUse(playerid,"Поздравляем с покупкой балончика с краской!");
				}
			case 10: {
					if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
					return D(playerid,D_BIZZ_OTM,DSI, ""P"Покупка отмычек",""W"Введите кол-во отмычек, которое хотите приобрести:","Купить","Закрыть");
				}
			case 11:{
					PI[playerid][pKeyCar]++;
					UpdatePlayerData(playerid, "pKeyCar", PI[playerid][pKeyCar]);
					SendUse(playerid,"Поздравляем с покупкой электронной отмычки!");
			}
			}
			if(gBusiness[id][bizzProduct]-gShopProduct[listitem] > 0) {
				gBusiness[id][bizzProduct] -= gShopProduct[listitem];
				bizz_pay(id,price);
			} 
			if(QuestProgress[playerid][43] == 0 && AcceptQuest[playerid][43] != 0)
			{
				QuestProgress[playerid][43] ++;
				save_quest(playerid,43);
				SendOk(playerid,"Вы закончили выполнение ежедневного квеста. Квест можно завершить в (/quest)");
			}

			if(listitem != 0) show_24(playerid,id);

			GiveMoney(playerid, -price,"покупка в 24-7");
			show_24(playerid,id);
		}
	case D_BIZZ_OTM: {
			if(!response) return true;
			new id = TI[playerid][tSelectedBusinessID];
			if(!strval(inputtext)) return D(playerid,D_BIZZ_OTM,DSI, ""P"Покупка отмычек",""W"Введите кол-во отмычек, которое хотите приобрести:\n\n"NO"*"W" За раз можно приобрести до 5 отмычек","Купить","Закрыть");
			if(strval(inputtext) < 0 || strval(inputtext) > 5) return D(playerid,D_BIZZ_OTM,DSI, ""P"Покупка отмычек",""W"Введите кол-во отмычек, которое хотите приобрести:\n\n"NO"*"W" За раз можно приобрести до 5 отмычек","Купить","Закрыть");
			if(GetPlayerMoneyEx(playerid) < gShopPrice[5]*gBusiness[id][bizzPrice]*strval(inputtext)) return D(playerid,D_BIZZ_OTM,DSI, ""P"Покупка отмычек",""W"Введите кол-во отмычек, которое хотите приобрести:\n\n"NO"*"W" За раз можно приобрести до 5 отмычек","Купить","Закрыть");
			if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");

			GiveMoney(playerid, -gShopPrice[5]*gBusiness[id][bizzPrice]*strval(inputtext), "покупка в 24-7");
			if(gBusiness[id][bizzProduct]-(gShopProduct[5]*strval(inputtext)) > 0) {
				gBusiness[id][bizzProduct]-= gShopProduct[5]*strval(inputtext);
				bizz_pay(id,gShopPrice[5]*gBusiness[id][bizzPrice]*strval(inputtext));
			}
			if(QuestProgress[playerid][43] == 0 && AcceptQuest[playerid][43] != 0)
			{
				QuestProgress[playerid][43] ++;
				save_quest(playerid,43);
				SendOk(playerid,"Вы закончили выполнение ежедневного квеста. Квест можно завершить в (/quest)");
			}
			SendUse(playerid,"Поздравляем с покупкой отмычки! Она понадобится Вам при взломе дверного замка");
			UpdateBusinessText(id);
			show_24(playerid,id);
			AddItem(playerid, 122, strval(inputtext));
		}
		
		
	case D_BIZZ_SIM: {
			if(!response) return true;
			if(isNumeric(inputtext) || strlen(inputtext) != 6 || inputtext[0] == '0') {
				D(playerid,D_BIZZ_SIM,DSI, ""P"Покупка номера","\n\n"W"Введите номер, который хотите использовать (6 цифр):\n\n"NO"*"G" Номер должен состоять из 6 цифр. Первая цифра не должны быть \"ноль\"\n\n","Купить","Закрыть");
				return true;
			}
			new query[128], id = TI[playerid][tSelectedBusinessID], price = gShopPrice[4]*gBusiness[id][bizzPrice];
			mysql_format(connects, query, sizeof(query),"SELECT `pPhone` FROM `accounts` WHERE `pPhone` = '%i'",strval(inputtext));
			mysql_tquery(connects, query, "sim_shop", "dddd", playerid, strval(inputtext), id, price);
		}
	case D_BIZZ_MEDKIT: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			switch(listitem) {
			case 0: D(playerid,D_BIZZ_MEDKIT_2,DSI, ""P"Покупка аптечки",""W"Введите кол-во аптечек, которое хотите приобрести:","Купить","Закрыть");
			case 1: {
					if(!PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома"),show_24(playerid,id);
					if(gHouses[PI[playerid][pHouse]-1][houseHealth] == 500) return SendClientMessage(playerid, COLOR_GREY, "Нельзя хранить больше 500 аптечек в сейфе дома"),show_24(playerid,id);
					static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nВ сейф дома поместится: "P"%d"W" аптечек";
					new string[sizeof(f_str) + 5];
					format(string,sizeof(string),f_str,500-gHouses[PI[playerid][pHouse]-1][houseHealth]);
					return D(playerid,D_BIZZ_MEDKIT_4,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
				}
			case 2: {
					if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в банде"),show_24(playerid,id);
					if(FI[PI[playerid][pMember]][fHealth] == 500) return SendClientMessage(playerid, COLOR_GREY, "Нельзя хранить больше 500 аптечек на складе банды"),show_24(playerid,id);
					static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nНа склад банды поместится: "P"%d"W" аптечек";
					new string[sizeof(f_str) + 5];
					format(string,sizeof(string),f_str,500-FI[PI[playerid][pMember]][fHealth]);
					return D(playerid,D_BIZZ_MEDKIT_3,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
				}
			}
		}
	case D_BIZZ_MEDKIT_2: {
			if(!response) return true;
			new id = TI[playerid][tSelectedBusinessID];
			if(!strval(inputtext)) return D(playerid,D_BIZZ_MEDKIT_2,DSI, ""P"Покупка аптечки",""W"Введите кол-во аптечек, которое хотите приобрести:\n\n"NO"*"W" За раз можно приобрести до 5 аптечек","Купить","Закрыть");
			if(strval(inputtext) < 0 || strval(inputtext) > 5) return D(playerid,D_BIZZ_MEDKIT_2,DSI, ""P"Покупка аптечки",""W"Введите кол-во аптечек, которое хотите приобрести:\n\n"NO"*"W" За раз можно приобрести до 5 аптечек","Купить","Закрыть");
			if(GetPlayerMoneyEx(playerid)<gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext)) return D(playerid,D_BIZZ_MEDKIT_2,DSI, ""P"Покупка аптечки",""W"Введите кол-во аптечек, которое хотите приобрести:\n\n"NO"*"G" У Вас недостаточно средств","Купить","Закрыть");
			if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
			if(gBusiness[id][bizzProduct]-(gShopProduct[6]*strval(inputtext)) > 0) {
				gBusiness[id][bizzProduct]-= gShopProduct[6]*strval(inputtext);
				bizz_pay(id,gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext));
			}
			if(QuestProgress[playerid][43] == 0 && AcceptQuest[playerid][43] != 0)
			{
				QuestProgress[playerid][43] ++;
				save_quest(playerid,43);
				SendOk(playerid,"Вы закончили выполнение ежедневного квеста. Квест можно завершить в (/quest)");
			}
			UpdateBusinessText(id);
			show_24(playerid,id);
			AddItem(playerid, 1, strval(inputtext));
			GiveMoney(playerid, -gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext), "покупка в 24-7");
		}
	case D_BIZZ_MEDKIT_3: {
			if(!response) return true;
			if(strval(inputtext) < 1 || strval(inputtext) > 500) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nНа склад банды поместится: "P"%d"W" аптечек\n\n"NO"*"G" От 1 и до 500";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-FI[PI[playerid][pMember]][fHealth]);
				return D(playerid,D_BIZZ_MEDKIT_3,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			if(FI[PI[playerid][pMember]][fHealth]+strval(inputtext)>500) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nНа склад банды поместится: "P"%d"W" аптечек\n\n"NO"*"G" На склад банды не поместится столько аптечек";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-FI[PI[playerid][pMember]][fHealth]);
				return D(playerid,D_BIZZ_MEDKIT_3,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			new id = TI[playerid][tSelectedBusinessID];
			if(GetPlayerMoneyEx(playerid)<gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext)) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nНа склад банды поместится: "P"%d"W" аптечек\n\n"NO"*"G" У Вас недостаточно средств";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-FI[PI[playerid][pMember]][fHealth]);
				return D(playerid,D_BIZZ_MEDKIT_3,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			GiveMoney(playerid, -gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext), "покупка в 24-7");
			if(gBusiness[id][bizzProduct]-(gShopProduct[6]*strval(inputtext)) > 0) {
				gBusiness[id][bizzProduct]-= gShopProduct[6]*strval(inputtext);
				bizz_pay(id,gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext));
			}
			UpdateBusinessText(id);
			show_24(playerid,id);
			FI[PI[playerid][pMember]][fHealth] += strval(inputtext);
			UpdateFraction(PI[playerid][pMember],"Health",FI[PI[playerid][pMember]][fHealth]);
			SendUse(playerid, "Поздравляем с покупкой аптечек!");
		}
	case D_BIZZ_MEDKIT_4: {
			if(!response) return true;
			if(!PI[playerid][pHouse]) return 1;
			new houseid = PI[playerid][pHouse]-1;
			if(strval(inputtext) < 1 || strval(inputtext) > 500) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nВ сейф дома поместится: "P"%d"W" аптечек\n\n"NO"*"G" От 1 и до 500";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-gHouses[houseid][houseHealth]);
				return D(playerid,D_BIZZ_MEDKIT_4,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			if(gHouses[houseid][houseHealth]+strval(inputtext)>500) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nВ сейф дома поместится: "P"%d"W" аптечек\n\n"NO"*"G" В сейф дома не поместится столько аптечек";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-gHouses[houseid][houseHealth]);
				return D(playerid,D_BIZZ_MEDKIT_4,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			new id = TI[playerid][tSelectedBusinessID];
			if(GetPlayerMoneyEx(playerid)<gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext)) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nВ сейф дома поместится: "P"%d"W" аптечек\n\n"NO"*"G" У Вас недостаточно средств";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-gHouses[houseid][houseHealth]);
				return D(playerid,D_BIZZ_MEDKIT_4,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			GiveMoney(playerid, -gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext), "покупка в 24-7");
			if(gBusiness[id][bizzProduct]-(gShopProduct[6]*strval(inputtext)) > 0) {
				gBusiness[id][bizzProduct]-= gShopProduct[6]*strval(inputtext);
				bizz_pay(id,gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext));
			}
			UpdateBusinessText(id);
			show_24(playerid,id);
			gHouses[houseid][houseHealth] += strval(inputtext);
			new query[128];
			mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `medkit` = '%d' WHERE id = '%d'",gHouses[houseid][houseHealth],houseid+1);
			mysql_tquery(connects, query);
			SendUse(playerid, "Поздравляем с покупкой аптечек! Использовать аптечку в доме: /hhealme");
		}
	case D_BIZZ_MASK: {
			if(!response) return true;
			new id = TI[playerid][tSelectedBusinessID];
			if(!strval(inputtext)) return D(playerid,D_BIZZ_MASK,DSI, ""P"Покупка масок",""W"Введите кол-во масок, которое хотите приобрести:\n\n"NO"*"W" За раз можно приобрести до 5 масок","Купить","Закрыть");
			if(strval(inputtext) < 0 || strval(inputtext) > 5) return D(playerid,D_BIZZ_MASK,DSI, ""P"Покупка масок",""W"Введите кол-во масок, которое хотите приобрести:\n\n"NO"*"W" За раз можно приобрести до 5 масок","Купить","Закрыть");
			if(GetPlayerMoneyEx(playerid) < gShopPrice[5]*gBusiness[id][bizzPrice]*strval(inputtext)) return D(playerid,D_BIZZ_MASK,DSI, ""P"Покупка масок",""W"Введите кол-во масок, которое хотите приобрести:\n\n"NO"*"W" У Вас недостаточно денег","Купить","Закрыть");
			if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
			
			GiveMoney(playerid, -gShopPrice[5]*gBusiness[id][bizzPrice]*strval(inputtext), "покупка в 24-7");
			if(gBusiness[id][bizzProduct]-(gShopProduct[5]*strval(inputtext)) > 0) {
				gBusiness[id][bizzProduct]-= gShopProduct[5]*strval(inputtext);
				bizz_pay(id,gShopPrice[5]*gBusiness[id][bizzPrice]*strval(inputtext));
			}
			if(QuestProgress[playerid][43] == 0 && AcceptQuest[playerid][43] != 0)
			{
				QuestProgress[playerid][43] ++;
				save_quest(playerid,43);
				SendOk(playerid,"Вы закончили выполнение ежедневного квеста. Квест можно завершить в (/quest)");
			}
			UpdateBusinessText(id);
			show_24(playerid,id);
			AddItem(playerid, 120, strval(inputtext));
		}
	case D_BIZZ_FISH: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			if(listitem != 4) if(GetPlayerMoneyEx(playerid) < gFishCosts[listitem]*gBusiness[id][bizzPrice]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			switch(listitem) {
			case 0: {
					if(PI[playerid][pRod]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть удочка");
					PI[playerid][pRod] = 1;
					UpdatePlayerData(playerid,"pRod",1);
					SendUse(playerid,"Поздравляем с приобретением удочки!");
				}
			case 1: {
					if(PI[playerid][pRopes]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть снасти");
					PI[playerid][pRopes] = 1;
					UpdatePlayerData(playerid,"pRopes",1);
					SendUse(playerid,"Поздравляем с приобретением снастей для удочки!");
				}
			case 2: {
					if(PI[playerid][pWorms] + 10 > 30) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете купить наживку более 30 шт.");
					PI[playerid][pWorms] += 10;
					UpdatePlayerData(playerid,"pWorms",PI[playerid][pWorms]);
					SendUse(playerid,"Поздравляем с приобретением наживки!");
				}
			case 3: {
					if(GetPVarInt(playerid,"fish_yes")) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть пропуск на ловлю рыбы");
					if(!lic[playerid][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет лицензии на водный транспорт");
					SetPVarInt(playerid,"fish_yes",1);
					SendUse(playerid,"Поздравляем с приобретением одноразового пропуска для ловли рыбы!");
				}
			case 4: {
					D(playerid, DIALOG_NONE, DSM, ""P"Информация", ""W"Пойманую рыбу Вы можете продать на складе\n возле рыболовного магазина по курсу "ORANGE"$150 - 1кг"W",\n или положить в холодильник в доме.\n\n\
						"NO"Внимание! "W"Для наиболее эффективной и выгодной рыбалки рекомендуем приобрести 30шт.\n Наживки. Пропуск одноразовый. Удочка и снасти покупаются раз и навсегда.\nУдачной рыбалки!", "Закрыть", "");
					return 1;
				}
			}
			GiveMoney(playerid, -gFishCosts[listitem]*gBusiness[id][bizzPrice],"покупка в рыб.бизнесе");
			if(gBusiness[id][bizzProduct]-(gFishCosts[listitem] / 10) > 0) {
				gBusiness[id][bizzProduct] -= gFishCosts[listitem] / 10;
				bizz_pay(id,gFishCosts[listitem]*gBusiness[id][bizzPrice]);
			} 
			show_fish(playerid);
		}
	case D_BIZZ_POISK: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			if(listitem != 2) if(GetPlayerMoneyEx(playerid) < gPoiskCosts[listitem]*gBusiness[id][bizzPrice]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			switch(listitem) {
			case 0: {
					if(PI[playerid][pMag]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть магнит");
					PI[playerid][pMag] = 1;
					UpdatePlayerData(playerid,"pMag",1);
					SendUse(playerid,"Поздравляем с приобретением магнита!");
				}
			case 1: {
					if(PI[playerid][pRope]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть веревка");
					PI[playerid][pRope] = 1;
					UpdatePlayerData(playerid,"pRope",1);
					SendUse(playerid,"Поздравляем с приобретением веревки!");
				}
			case 2: {
					D(playerid, DIALOG_NONE, DSM, ""P"Информация", ""W"Найденые предметы Вы можете продать скупшику в кассе на против.\n\nЦены найденых вещей:\n\n\
						Гвозди - 250$\n\
						Металл - 500$\n\
						Метал. ящик - 900$\n\
						Ящик с патронами - 1.500$\n\
						Нож - 2.000$\n\
						Военная винтовка - 3.200\n\
						Японский меч - 5.000\n\
						Боеголовка - 7.000$\n\
						Кейс - 10.000\n\
						Старинная монета - 20.000$\n\n\
						Место нахождение озера /gps - 1 - 12. Удачного поиска!", "Закрыть", "");
					return 1;
				}
			}
			GiveMoney(playerid, -gPoiskCosts[listitem]*gBusiness[id][bizzPrice],"покупка в рыб.бизнесе");
			if(gBusiness[id][bizzProduct]-(gPoiskCosts[listitem] / 10) > 0) {
				gBusiness[id][bizzProduct] -= gPoiskCosts[listitem] / 10;
				bizz_pay(id,gPoiskCosts[listitem]*gBusiness[id][bizzPrice]);
			}
			show_poisk(playerid);
		}
	case D_BIZZ_BAR: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			new price = gBarCosts[listitem] * 10 * gBusiness[id][bizzPrice];
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			GiveMoney(playerid, -price,"покупка в баре");
			if(gBusiness[id][bizzProduct] - (gBarCosts[listitem]) > 0){
				gBusiness[id][bizzProduct] -= gBarCosts[listitem];
				bizz_pay(id,price);
			} 
			if(QuestProgress[playerid][41] == 0 && AcceptQuest[playerid][41] != 0)
			{
				QuestProgress[playerid][41] ++;
				save_quest(playerid,41);
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
			}
			if(listitem == 0) SetPlayerSpecialAction(playerid, 22);
			else SetPlayerSpecialAction(playerid, 20);
		}
	case D_BIZZ_TAVERN: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			new price = gTavernCosts[listitem] * gBusiness[id][bizzPrice] * 10;
			if(id < 0) return 1;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			if(PI[playerid][pSatiety] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не голодны");
			new amount = gTavernCosts[listitem];
			if(gBusiness[id][bizzProduct] -amount > 0) {
				gBusiness[id][bizzProduct]-= amount;
				bizz_pay(id,price);
			}
			GiveMoney(playerid, -price,"покупка в закусочной");	
			new name[32],string[64];
			switch(listitem) {
			case 0: {
					strcat(name,"салат");
					GiveFullness(playerid, 25);
				}
			case 1: {
					strcat(name,"наггетсы");
					GiveFullness(playerid, 35);
				}
			case 2: {
					strcat(name,"бургер");
					GiveFullness(playerid, 45);
				}
			case 3: {
					strcat(name,"пиццу");
					GiveFullness(playerid, 55);
				}
			}
			format(string,sizeof(string),"съел(а) %s", name);
			MeAction(playerid,string);
			ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
			show_tavern(playerid,id);
			if(QuestProgress[playerid][42] == 0 && AcceptQuest[playerid][42] != 0)
			{
				QuestProgress[playerid][42] ++;
				save_quest(playerid,42);
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
			}
		}
	case D_BOOK: {
			if(!response) return 1;
			SetPVarInt(playerid,"select_idphone",listitem);
			if(PI[playerid][pPhoneNumber][listitem] == 0) return  D(playerid, D_BOOK_2, DSI, ""P"Новый контакт", ""W"Введите номер телефона:", "Далее", "Отмена");
			D(playerid, D_BOOK_3, DSL, ""P"Телефонная книга", ""P"1."W" Позвонить\n"P"2."W" Написать сообщение\n"P"3."W" Удалить контакт", "Выбрать", "Отмена");
			return 1;
		}
	case D_BOOK_2: {
			if(!response) return DeletePVar(playerid,"select_idphone");
			if(isNumeric(inputtext) || strlen(inputtext) < 2 || strlen(inputtext) > 6) {
				D(playerid,D_BOOK_2,DSI, ""P"Новый контакт",""W"Введите номер телефона:\n\n"NO"*"G" Номер должен состоять до 6 цифр","Далее","Отмена");
				return 1;
			}
			new number = strval(inputtext), count = 0;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[i][pPhone] == number)
				{
					new id = GetPVarInt(playerid,"select_idphone");
					PI[playerid][pPhoneNumber][id] = number;
					strmid(pPhoneName[playerid][id],player_name[i],0,strlen(player_name[i]),MAX_PLAYER_NAME);
					SavePlayerNumber(playerid);
					count++;
					SendOk(playerid,"Контакт успешно добавлен");
					break;
				}
			}
			if(count == 0) return D(playerid,D_BOOK_2,DSI, ""P"Новый контакт",""W"Введите номер телефона:\n\n"NO"*"G" Игрока с таким номером нет на сервере","Далее","Отмена");
		}
	case D_BOOK_3: {
			if(!response) return 1;
			new id = GetPVarInt(playerid,"select_idphone");
			switch(listitem) {
			case 0: {
					new string[24];
					format(string, sizeof(string), "%i",PI[playerid][pPhoneNumber][id]);
					pc_cmd_call(playerid,string);
				}
			case 1: D(playerid,D_BOOK_4,DSI, ""P"Сообщение",""W"Введите текст СМС сообщения:\nПримечание: Длинна текста от 1 до 120 символов","Далее","Закрыть");
			case 2: {
					PI[playerid][pPhoneNumber][id] = 0;
					strmid(pPhoneName[playerid][id], "Нет", 0, strlen("Нет"), MAX_PLAYER_NAME);
					SavePlayerNumber(playerid);
					SendOk(playerid,"Контакт успешно удалён");
					pc_cmd_book(playerid);
				}
			}
		}
	case D_BOOK_4: {
			if(!response) return 1;
			if(NonSym(inputtext,120,1)) return D(playerid,D_BOOK_4,DSI, ""P"Сообщение",""W"Введите текст СМС сообщения:\n\n"NO"*"G" Запрещены некорректные символы","Далее","Закрыть");
			if(strlen(inputtext) < 1 || strlen(inputtext) > 120) return D(playerid,D_BOOK_4,DSI, ""P"Сообщение",""W"Введите текст СМС сообщения:\n\n"NO"*"G" Длинна текста от 1 до 120 символов","Далее","Закрыть");
			new id = GetPVarInt(playerid,"select_idphone");
			new string[146];
			format(string, sizeof(string), "%i %s",PI[playerid][pPhoneNumber][id],inputtext);
			pc_cmd_sms(playerid,string);
			return 1;
		}
	case D_HOUSE: {
			if(!response) return true;
			new houseid = TI[playerid][tSelectHouse];
			if(!gHouses[houseid][houseOwner]) {
				if(PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть дом");
				if(PI[playerid][pRoom]) return SendClientMessage(playerid, COLOR_GREY, "Чтобы купить этот дом, Вы должны продать свою квартиру");
				new string[128];
				format(string,sizeof(string),""W"Вы действительно хотите купить этот дом за "GREEN"$%d?",gHouses[houseid][housePrice]);
				D(playerid, D_HOUSE_BUY, DSM, ""P"Покупка дома",string,"Да","Нет");
			}
			else {
				if(PI[playerid][pHouse] != houseid+1 && gHouses[houseid][houseClose]) return GameTextForPlayer(playerid,"~r~closed",2000,1);				
				SetPlayerPosAC(playerid, hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][0],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][1],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][2], houseid+1, hinterior_info[gHouses[houseid][houseHint]][h_interior]);
				SetPlayerFacingAngle(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][3]);
				TI[playerid][tInHouse] = true;
			}
		}
	case D_HOUSE_BUY: {
			if(!response) return true;
			new houseid = TI[playerid][tSelectHouse];
			if(PI[playerid][pRoom]) return SendClientMessage(playerid, COLOR_GREY, "У Вас есть квартира, продайте ее");
			if(PI[playerid][pTempKey]) return SendClientMessage(playerid, COLOR_GREY, "У Вас есть прописка в доме, выселитесь из дома /house");
			if(!gHouses[houseid][houseOwner]) {
				new price = gHouses[houseid][housePrice];
				if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег на руках");
				new query[256];
				mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",PI[playerid][pID],player_name[playerid],gHouses[houseid][houseID]);
				mysql_tquery(connects, query,"","");
				UpdatePlayerData(playerid, "house", gHouses[houseid][houseID]);
				gHouses[houseid][houseOwnerID] = PI[playerid][pID];
				format(gHouses[houseid][houseOwner],MAX_PLAYER_NAME,"%s",player_name[playerid]);
				PI[playerid][pHouse] = gHouses[houseid][houseID];
				gHouses[houseid][houseDay] = unix + 60*60*24;
				mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `day` = '%d' WHERE id = '%d'",gHouses[houseid][houseDay],gHouses[houseid][houseID]);
				mysql_tquery(connects, query,"","");
				SendClientMessage(playerid,CGOLD,"Поздравляем, Вы купили дом. Не забывайте оплачивать его, иначе его продадут государству!");
				SendClientMessage(playerid,CGOLD,"Панель управления домом: "W"/house");
				
				GiveMoney(playerid,-price,"покупка дома");
				
				DestroyDynamicPickup(gHousePickup[houseid]);
				gHousePickup[houseid] = CreateDynamicPickup(1272,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
				DestroyDynamicMapIcon(gHouseIcon[houseid]);
				gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],32,CWHITE);
				PI[playerid][pSpawn] = 1;
				UpdatePlayerData(playerid,"spawn",PI[playerid][pSpawn]);
				if(QuestProgress[playerid][13] == 0 && AcceptQuest[playerid][13] != 0)
				{
					QuestProgress[playerid][13] ++;
					D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Мой дом'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
					NextStapQI(playerid,13);
				}
				loading_cars(playerid,0);
			}
		}
	case D_HOUSE_BUY_2: {
			if(!response) {
				if(GetPVarInt(playerid,"houseSeller")) {
					new id_prodaet = GetPVarInt(playerid,"houseSeller")-1;
					SendOk(playerid,"Вы отказались от покупки дома");
					SendOk(id_prodaet,"Игрок отказался от покупки Вашего дома");
					DeletePVar(playerid,"houseSeller");
					DeletePVar(playerid,"housePrices");
					DeletePVar(id_prodaet,"houseBuyer");
				}
			}
			else {
				if(GetPVarInt(playerid,"houseSeller")) {
					new id_prodaet = GetPVarInt(playerid,"houseSeller")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"houseBuyer")-1;
					new house_price = GetPVarInt(playerid,"housePrices");
					if(id_pokupaet == playerid) {
						if(PI[playerid][pCash] < house_price) {
							SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег на руках");
							SendClientMessage(id_prodaet, COLOR_GREY,"У покупателя недостаточно денег на руках");
							DeletePVar(playerid,"houseSeller");
							DeletePVar(playerid,"housePrices");
							DeletePVar(id_prodaet,"houseBuyer");
						}
						else {
							new houseid = GetPVarInt(playerid,"houseIDs");
							new query[256];
							mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `ownerid` = '%d', owner = '%s',peopleid1 = '0',peopleid2 = '0',people1='',people2='',family = '0',family_id = '0' WHERE `id` = '%d'",PI[playerid][pID],player_name[playerid],houseid+1);
							mysql_tquery(connects, query,"","");
							if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #14");
							
							UpdatePlayerData(id_prodaet, "house", 0);
							UpdatePlayerData(playerid, "house", houseid + 1);
							
							PI[playerid][pHouse] = houseid+1;
							PI[id_prodaet][pHouse] = 0;
							new string[156];
							format(string,64,"покупка дома у %s",player_name[id_prodaet]);
							GiveMoney(playerid,-house_price,string);
							string[0] = EOS;
							format(string,64,"продажа дома %s",player_name[playerid]);
							GiveMoney(id_prodaet,house_price,string);

							gHouses[houseid][houseOwnerID] = PI[playerid][pID];
							format(gHouses[houseid][houseOwner],MAX_PLAYER_NAME,"%s",player_name[playerid]);
							strmid(gHouseArendator[houseid][0],"None",0,strlen("None"),MAX_PLAYER_NAME);
							strmid(gHouseArendator[houseid][1],"None",0,strlen("None"),MAX_PLAYER_NAME);
							gHouses[houseid][houseHabitID][0] = 0;
							gHouses[houseid][houseHabitID][1] = 0;
							gHouses[houseid][houseHabitID][2] = 0;
							if(PI[id_prodaet][pMember] && !start_work[id_prodaet]) {
								A_SetPlayerSkin(id_prodaet,PI[id_prodaet][pFracSkin]);
								SendOk(id_prodaet,"Рабочий день начат");
								TI[playerid][tMasked] = 0;
								SetPlayerColor(id_prodaet,gFractionSpawn[PI[id_prodaet][pMember]][fracColor]);
								start_work[id_prodaet] = 1;
								PI[id_prodaet][pJob] = 0;
								UpdatePlayerData(id_prodaet,"pJob",PI[id_prodaet][pJob]);
								UpdatePlayerData(id_prodaet,"FracDuty",start_work[id_prodaet]);
							}
							if(gHouses[houseid][houseImprove][2] == 1) {
								loading_cars(playerid,0);
								loading_cars(playerid,1);
							}
							else loading_cars(playerid,0);
							if(house_car[id_prodaet][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[id_prodaet][0]),house_car[id_prodaet][0] = INVALID_VEHICLE_ID;
							if(house_car[id_prodaet][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[id_prodaet][1]),house_car[id_prodaet][1] = INVALID_VEHICLE_ID;
							format(string,sizeof(string),"Вы приобрели дом у "P"%s"W" за "ORANGE"$%i",player_name[id_prodaet],house_price);
							SendUse(playerid,string);
							SendOk(playerid,"Панель управления домом - "ORANGE"/house");
							format(string,sizeof(string),"Вы продали дом "P"%s"W" за "ORANGE"$%i",player_name[playerid],house_price);
							SendUse(id_prodaet,string);
							DeletePVar(playerid,"houseSeller");
							DeletePVar(playerid,"housePrices");
							DeletePVar(id_prodaet,"houseBuyer");
						}
					}
					else {
						SendClientMessage(playerid, COLOR_GREY, "Игрок оффлайн");
						DeletePVar(playerid,"houseSeller");
						DeletePVar(playerid,"housePrices");
					}
				}
			}
		}
	case D_HOUSE_SELL: {
			if(!response) return true;
			if(!PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома");
			if(PI[playerid][pCredit]) return SCM(playerid, COLOR_GREY, "У вас не выплачен кредит. Продажа Т/C запрещена!");
			new houseid = PI[playerid][pHouse]-1;
			if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #1");
			new query[512];
			mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `ownerid` = '0', `owner` = '', improve = '0|0|0|0|0|0', gun = '0|0|0|0|0|0|0|0|0',safecode='0', safemoney='0', drugs='0', medkit='0', products='0',peopleid1 = '0',peopleid2 = '0',people1='',people2='',family = '0',family_id = '0' WHERE `id` = '%d'",houseid+1);
			mysql_tquery(connects, query);
			if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #2");
			UpdatePlayerData(playerid, "house", 0);
			PI[playerid][pHouse] = 0;
			gHouses[houseid][houseOwnerID] = 0;
			strdel(gHouses[houseid][houseOwner],0,24);
			arendaor_closed(houseid);
			strmid(gHouseArendator[houseid][0],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(gHouseArendator[houseid][1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			gHouses[houseid][houseHabitID][0] = 0;
			gHouses[houseid][houseHabitID][1] = 0;
			gHouses[houseid][houseHabitID][2] = 0;
			for(new i;i<9;i++)
			{
				if(PI[playerid][pMember] && !start_work[playerid]) {
					A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
					SendOk(playerid,"Рабочий день начат");
					TI[playerid][tMasked] = 0;
					SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
					start_work[playerid] = 1;
					PI[playerid][pJob] = 0;
					UpdatePlayerData(playerid,"pJob",PI[playerid][pJob]);
					UpdatePlayerData(playerid,"FracDuty",start_work[playerid]);
				}
				if(i < 4) gHouses[houseid][houseImprove][i] = 0;
				gHouses[houseid][houseGun][i] = 0;
				SaveHouseGun(houseid);
			}
			if(gHouses[houseid][houseFamily])
			{
				new fam = gHouses[houseid][houseFamilyID];
				for(new c = 0; c < 5; c++)
				{
					if(CarFamily[fam][c][LoadCar] == INVALID_VEHICLE_ID) continue;
					A_DestroyVehicle(CarFamily[fam][c][LoadCar]);
					CarFamily[fam][c][LoadCar] = INVALID_VEHICLE_ID;
				}

				new str[350];
				mysql_format(connects, str, sizeof(str),"UPDATE `family` SET `house` = '0',`poscar1` = '0',`poscar2` = '0',`poscar3` = '0',`poscar4` = '0',`poscar5` = '0' WHERE `id` = '%d'",fam+1);
				mysql_tquery(connects, str,"","");

				gFamily[fam][famHouse] = 0;
				gHouses[houseid][houseFamily] = 0;
				gHouses[houseid][houseFamilyID] = 0;
			}
			gHouses[houseid][houseSafeCode] = 0;
			gHouses[houseid][houseSafeMoney] = 0;
			gHouses[houseid][houseDrugs] = 0;
			gHouses[houseid][houseHealth] = 0;
			gHouses[houseid][houseProducts] = 0;
			gHouses[houseid][houseFamilyID] = 0;
			
			new procent = floatround((gHouses[houseid][housePrice]/100)*Nalog[0]);
			new sum = (gHouses[houseid][housePrice]-procent);
			
			GiveMoney(playerid,sum,"продажа дома");
			FI[fWHITEHOUSE][fBank] += procent;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
			
			DestroyDynamicPickup(gHousePickup[houseid]);
			gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
			DestroyDynamicMapIcon(gHouseIcon[houseid]);
			gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
			SendOk(playerid,"Дом успешно продан государству!");
			if(house_car[playerid][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
			if(house_car[playerid][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;

			PI[playerid][pSpawn] = 0;
			UpdatePlayerData(playerid,"spawn",PI[playerid][pSpawn]);
			return true;
		}
	case D_HOUSE_MENU: {
			if(!response) return true;
			new houseid = PI[playerid][pHouse] - 1;
			switch(listitem) {
			case 0:{					
					if(!gHouses[houseid][houseClose]) {
						gHouses[houseid][houseClose] = 1;
						GameTextForPlayer(playerid,"~r~closed",2000,3);
					}
					else {
						gHouses[houseid][houseClose] = 0;
						GameTextForPlayer(playerid,"~g~opened",2000,3);
					}
					new query[256];					
					mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `close` = '%d' WHERE `id` = '%d'",gHouses[houseid][houseClose],houseid+1);
					mysql_tquery(connects, query);
					return pc_cmd_house(playerid);
				}
			case 1: {
					new classname[20],status[12];
					switch(gHouses[houseid][houseClass]) {
					case 0:classname = "Эконом";
					case 1:classname = "Cредний";
					case 2:classname = "Элитный";
					case 3:classname = "Особняк";
					default: classname = "Неизвестно";
					}					
					new cnt;
					for(new i;i<3;i++) {
						if(gHouses[houseid][houseHabitID][i]) cnt++;
					}					
					if(gHouses[houseid][houseClose]) strcat(status,"Закрыт");
					else strcat(status,"Открыт");
					new improve[128];
					if(gHouses[houseid][houseImprove][0]) strcat(improve,"1. Автоматические двери\n");
					if(gHouses[houseid][houseImprove][1]) strcat(improve,"2. Снижение субсидий\n");
					if(gHouses[houseid][houseImprove][3]) strcat(improve,"3. Подвал\n");
					if(gHouses[houseid][houseImprove][0] == 0 && gHouses[houseid][houseImprove][1] == 0 && gHouses[houseid][houseImprove][3] == 0) strcat(improve,"Отсутствуют");

					new day;
					day = (gHouses[houseid][houseDay]-gettime())/86400;
					static const f_str[] = ""W"Номер дома: \t\t"ORANGE"%d\n\
											"W"Класс: \t\t\t"ORANGE"%s\n\
											"W"К-во жильцов: \t"ORANGE"%d/%d\n\
											"W"Аренда дома: \t\t"ORANGE"%iд\n\
											"W"Статус: \t\t"ORANGE"%s\n\
											"W"Гос. цена: \t\t"ORANGE"%d\n\n\
											"W"Гараж: \t\t"ORANGE"%s\n\n\
											"W"Улучшения:\n\
											"ORANGE"%s";
					new string[512];
					format(string,sizeof(string),f_str,houseid+1,classname,cnt,gHouses[houseid][houseClass],day,status,gHouses[houseid][housePrice],(gHouses[houseid][houseImprove][2] ? ("Есть") : ("Нет")),
					improve);
					return D(playerid,D_HOUSE_STATS,DSM, ""P"Управление домом",string,"Назад","");
				}
			case 2: {
					new mes[210];
					for(new i;i<4;i++) {
						new c[12];
						if(gHouses[houseid][houseImprove][i]) c = ""GREEN"";
						else if(!i || gHouses[houseid][houseImprove][i-1]) c = ""G"";
						else c = ""G"";
						if(!i) format(mes,sizeof(mes),"%s%d. %s",c,i+1,gHouseImproveName[i]);
						else format(mes,sizeof(mes),"%s\n%s%d. %s",mes,c,i+1,gHouseImproveName[i]);
					}
					return D(playerid,D_HOUSE_IMPROVE,DSL,""P"Управление домом",mes,"Купить","Отмена");
				}
			case 3: {
					if(gHouses[houseid][houseClass] == 0) return SendClientMessage(playerid, COLOR_GREY, "Недоступно для класса Вашего дома");
					new string[512];
					string = "№\tАрендатор\tСтатус\n";
					for(new i = 0; i < 2; i++)
					{
						if(!strcmp(gHouseArendator[houseid][i],"None")) {
							format(string,sizeof(string),"%s%i\tОтсутствует\tСвободно\n", string,i+1);
						}
						else format(string,sizeof(string),"%s%i\t%s\tЗанято\n",string,i+1,gHouseArendator[houseid][i]);
					}
					D(playerid,dArendator,DSTH,"Управление жителями",string,"Выбрать","Закрыть");
				}
			case 4: {
					new mes[1024];
					format(mes,sizeof(mes),""P"1."W" Наркотики "P"[%d г.]\n"P"2."W" Аптечки "P"[%d шт.]\n"P"3."W" Деньги "P"[$%d]\n"P"4."W" Sniper Rifle "P"[%d пт.]\n"P"5."W" Country Rifle "P"[%d пт.]\n"P"6."W" M4 "P"[%d пт.]\n"P"7."W" AK-47 "P"[%d пт.]\n"P"8."W" MP5 "P"[%d пт.]\n"P"9."W" Shotgun "P"[%d пт.]\n"P"10."W" Desert Eagle "P"[%d пт.]\n"P"11."W" SD Pistol "P"[%d пт.]\n"P"12."W" Baseball Bat "P"[%d шт.]",gHouses[houseid][houseDrugs],gHouses[houseid][houseHealth],gHouses[houseid][houseSafeMoney],gHouses[houseid][houseGun][0],gHouses[houseid][houseGun][1],gHouses[houseid][houseGun][2],gHouses[houseid][houseGun][3],gHouses[houseid][houseGun][4],gHouses[houseid][houseGun][5],gHouses[houseid][houseGun][6],gHouses[houseid][houseGun][7],gHouses[houseid][houseGun][8]);
					D(playerid,dSafeAction,DSL,"Сейф",mes,"Далее","Отмена");
				}
			case 5: {
					new string[128];
					format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[CarsInfo[playerid][carModel][0]-400][trName],gTransport[CarsInfo[playerid][carModel][1]-400][trName]);
					D(playerid,D_HOUSE_CARSELL,DSL,""P"Продать домашний транспорт",string,"Выбрать","Закрыть");
				}
			case 6: {
					new string[2000],str[128],id = 1;
					string = ""P"№. Название\n";
					for(new i; i < 42; i++) {
						if(hinterior_info[i][h_type] != gHouses[houseid][houseClass]) continue;
						format:str( ""P"%d."W" %s\n", id,hinterior_info[i][h_int_name]);
						strcat(string, str);
						id++;
					}
					D(playerid, D_HOUSE_BUYINT, DIALOG_STYLE_TABLIST_HEADERS, ""P"Покупка интерьера", string, "Осмотреть", "Назад");
				}
			case 7: {
					new string[156];
					format(string,sizeof(string),""W"Вы хотите продать дом государству за "ORANGE"$%d?\n\n"G"Для продажи дома игроку введите: /sellhouse [ID игрока] [Цена]",floatround(gHouses[houseid][housePrice]/100*80));
					D(playerid,D_HOUSE_SELL,DSM, ""P"Продажа дома",string,"Да","Нет");
				}
			}
		}
	case D_HOUSE_BUYINT: {
			if(!response) return 1;
			new houseid = PI[playerid][pHouse] - 1;
			for(new i; i < 42; i++) {
				if(hinterior_info[i][h_type] != gHouses[houseid][houseClass]) continue;
				if(hinterior_info[i][h_id] == listitem) {
					SetPlayerPosAC(playerid, hinterior_info[i][h_pos_exit][0],hinterior_info[i][h_pos_exit][1],hinterior_info[i][h_pos_exit][2], houseid+1, hinterior_info[i][h_interior]);
					SetPlayerFacingAngle(playerid,hinterior_info[i][h_pos_exit][3]);
					SetCameraBehindPlayer(playerid);
					SendOk(playerid,"Для покупки данного интерьера, введите: "P"/buyint"W" и нажмите на пункт 'Купить'");
					SendOk(playerid,"Для отмены покупки данного интерьера, введите: "P"/buyint"W" и нажмите на пункт 'Отмена'");
					SetPVarInt(playerid,"buy_interior",listitem+1);
					break;
				}
			}
		}
	case D_HOUSE_BUYINT_2: {
			if(!response) {
				new house = PI[playerid][pHouse] - 1;
				new i = gHouses[house][houseHint];
				SetPlayerPosAC(playerid, hinterior_info[i][h_pos_exit][0],hinterior_info[i][h_pos_exit][1],hinterior_info[i][h_pos_exit][2], house+1, hinterior_info[i][h_interior]);
				SetPlayerFacingAngle(playerid,hinterior_info[i][h_pos_exit][3]);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid, "buy_interior");
				return 1;
			}
			new house = PI[playerid][pHouse] - 1;
			for(new x; x < 42; x++) {
				if(hinterior_info[x][h_type] != gHouses[house][houseClass]) continue;
				if(hinterior_info[x][h_id] == GetPVarInt(playerid,"buy_interior")-1) {
					if(PI[playerid][pCash] < 150000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств");
					GiveMoney(playerid,-150000,"покупка интерьера");
					gHouses[house][houseHint] = x;
					new query[156];
					mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `hint` = '%d' WHERE id = '%d'",gHouses[house][houseHint],house+1);
					mysql_tquery(connects, query);

					new i = gHouses[house][houseHint];
					SetPlayerPosAC(playerid, hinterior_info[i][h_pos_exit][0],hinterior_info[i][h_pos_exit][1],hinterior_info[i][h_pos_exit][2], house+1, hinterior_info[i][h_interior]);
					SetPlayerFacingAngle(playerid,hinterior_info[i][h_pos_exit][3]);
					SetCameraBehindPlayer(playerid);
					SendOk(playerid,"Поздравляем с покупкой нового интерьера!");
					DeletePVar(playerid,"buy_interior");
					break;
				}
			}
			Streamer_Update(playerid);
		}
	case D_HOUSE_EXIT: {
			if(!response) return 1;
			new houseid = TI[playerid][tSelectHouse];
			switch(listitem) {
			case 0: {
					TI[playerid][tTPpick] = true;
					SetPlayerPosAC(playerid, gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ], 0, 0);
					SetPlayerFacingAngle(playerid,gHouses[houseid][houseR]);
					TI[playerid][tInHouse] = false;
					TI[playerid][tSelectHouse] = 0;
					SetCameraBehindPlayer(playerid);
					switch(houseid) {
					case 425..434: FreezePlayerForTime(playerid,2);
					}
				}
			case 1: {
					SetPlayerPosAC(playerid, exitgarage[gHouses[houseid][houseClass]][0],exitgarage[gHouses[houseid][houseClass]][1],exitgarage[gHouses[houseid][houseClass]][2], TI[playerid][tVirtualWorld], TI[playerid][tInterior], true);
					SetPlayerFacingAngle(playerid,exitgarage[gHouses[houseid][houseClass]][3]);
					FreezePlayerForTime(playerid,2);
					SetCameraBehindPlayer(playerid);
				}
			case 2: {
					SetPlayerPosAC(playerid, 1126.4146,-1029.7551,1046.0126,TI[playerid][tVirtualWorld], 10, true);
					SetPlayerFacingAngle(playerid, 89.4268);
					FreezePlayerForTime(playerid,2);
					SetCameraBehindPlayer(playerid);
				}
			case 3: {
					SetPlayerPosAC(playerid,2009.4119,1031.4476,1069.0499,TI[playerid][tVirtualWorld], 25, true);
					SetPlayerFacingAngle(playerid, 359.3839);
					FreezePlayerForTime(playerid,2);
					SetCameraBehindPlayer(playerid);
				}
			}
		}
	case D_HOUSE_CARSELL: {
			if(!response) return 1;
			if(GetPVarInt(playerid,"carPokupaet")) return SendClientMessage(playerid, COLOR_GREY, "У Вас активный обмен Т/С с игроком");
			if(CarsInfo[playerid][carModel][listitem] == 481) return SendClientMessage(playerid, COLOR_GREY, "Данное т/с нельзя продать");
			new modelid = CarsInfo[playerid][carModel][listitem] - 400;
			SetPVarInt(playerid,"car_sell",listitem);
			
			new procent = floatround((gTransport[modelid][trPrice]/100)*Nalog[4]);
			new sum = (gTransport[modelid][trPrice]-procent);
			
			new string[210];
			format(string,sizeof(string),""W"Вы собираетесь продать свой автомобиль "P"%s "W"за "GREEN"$%i\n\n"NO"Продать автомобиль?\n\n"G"Для продажи авто игроку введите: /sellcar [id игрока] [авто] [цена]",gTransport[CarsInfo[playerid][carModel][listitem]-400][trName],sum);
			return D(playerid,D_HOUSE_CARSELL_2,DSM, ""P"Продажа автомобиля",string, "Да", "Нет");
		}
	case D_HOUSE_CARSELL_2: {
			if(!response) return true;
			sell_cars(playerid,GetPVarInt(playerid,"car_sell"));
		}
	case D_HOUSE_STATS: pc_cmd_house(playerid);
	case D_HOUSE_IMPROVE: {
			if(!response) return pc_cmd_house(playerid);
			new houseid = PI[playerid][pHouse] - 1;
			if(gHouses[houseid][houseImprove][listitem]) {
				SendClientMessage(playerid, COLOR_GREY, "У Вас уже установлено данное улучшение");
				pc_cmd_house(playerid);
			}
			else if((!listitem && !gHouses[houseid][houseImprove][listitem]) || (gHouses[houseid][houseImprove][listitem-1] && !gHouses[houseid][houseImprove][listitem])) {
				new mes[128];
				switch(gHouses[PI[playerid][pHouse]-1][houseClass]) {
				case 0: format(mes, sizeof(mes),""W"Улучшение: "O"%s\n"W"Стоимость "GREEN"$%d",gHouseImproveName[listitem],gHouseImprovePriceN[listitem]), SetPVarInt(playerid,"improveid_price",gHouseImprovePriceN[listitem]);
				case 1: format(mes, sizeof(mes),""W"Улучшение: "O"%s\n"W"Стоимость "GREEN"$%d",gHouseImproveName[listitem],gHouseImprovePriceD[listitem]), SetPVarInt(playerid,"improveid_price",gHouseImprovePriceD[listitem]);
				case 2: format(mes, sizeof(mes),""W"Улучшение: "O"%s\n"W"Стоимость "GREEN"$%d",gHouseImproveName[listitem],gHouseImprovePriceB[listitem]), SetPVarInt(playerid,"improveid_price",gHouseImprovePriceB[listitem]);
				case 3: format(mes, sizeof(mes),""W"Улучшение: "O"%s\n"W"Стоимость "GREEN"$%d",gHouseImproveName[listitem],gHouseImprovePriceA[listitem]), SetPVarInt(playerid,"improveid_price",gHouseImprovePriceA[listitem]);
				}
				D(playerid,D_HOUSE_IMPROVE_2,DSM, ""P"Покупка улучшений",mes,"Купить","Отмена");
				SetPVarInt(playerid,"improveid",listitem);
			}
			else {
				SendClientMessage(playerid, COLOR_GREY, "Это улучшение Вам недоступно. Откройте улучшения выше");
				pc_cmd_house(playerid);
			}
		}
	case D_HOUSE_IMPROVE_2: {
			new improveid = GetPVarInt(playerid,"improveid");
			DeletePVar(playerid,"improveid");
			if(!response) return pc_cmd_house(playerid);
			new price = GetPVarInt(playerid,"improveid_price");
			DeletePVar(playerid,"improveid_price");
			if(GetPlayerMoneyEx(playerid) < price) {
				pc_cmd_house(playerid);
				return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			}
			new houseid = PI[playerid][pHouse] - 1;
			gHouses[houseid][houseImprove][improveid] = 1;
			new data[32],query[128];
			for(new i;i<4;i++) {
				if(!i) format(data,sizeof(data),"%d",gHouses[houseid][houseImprove][i]);
				else format(data,sizeof(data),"%s|%d",data,gHouses[houseid][houseImprove][i]);
			}
			mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `improve` = '%s' WHERE id = '%d'",data,houseid+1);
			mysql_tquery(connects, query);
			if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #4");
			GiveMoney(playerid, -price,"покупка улучшения в дом");
			SendOk(playerid,"Поздравляем с приобретением улучшения в дом");
			DeletePVar(playerid,"improveid_price");
			pc_cmd_house(playerid);
		}
	case dSafe: {
			if(!response) return true;
			D(playerid,dSafePutMoney,DSI,""P"Сейф","\n\n"W"Введите количество:\n\n","Ввод","Отмена");
			SetPVarInt(playerid,"safe_idx",listitem+1);
		}
	case dSafeAction: {
			if(!response) return 1;
			SetPVarInt(playerid,"safe_select",listitem+1);
			D(playerid,dSafe,DSL,""P"Сейф",""P"1."W" Взять\n"P"2."W" Положить","Далее","Отмена");
		}
	case D_SAFE_TRAILER: {
			if(!response) return 1;
			SetPVarInt(playerid,"safe_select",listitem+1);
			D(playerid,D_SAFE_TRAILER_1,DSL,""P"Сейф",""P"1."W" Взять\n"P"2."W" Положить","Далее","Отмена");
		}
	case D_SAFE_TRAILER_1: {
			if(!response) return true;
			D(playerid,D_SAFE_TRAILER_2,DSI,""P"Сейф","\n\n"W"Введите количество:\n\n","Ввод","Отмена");
			SetPVarInt(playerid,"safe_idx",listitem+1);
		}
	case D_SAFE_TRAILER_2: {
			if(!response) return 1;
			if(!strlen(inputtext) || strval(inputtext) < 1) return D(playerid,D_SAFE_TRAILER_1,DSI,""P"Сейф","\n\n"W"Введите количество:\n\n","Ввод","Отмена");
			new i = GetPVarInt(playerid,"safe_select")-1;
			new c = GetPlayerVirtualWorld(playerid);
			new money = strval(inputtext);
			if(GetPVarInt(playerid,"safe_idx") == 1) {
				switch(i) {
				case 0: {
						if(money < 1 || money > 5) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 5 наркотиков\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carDrugs] < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно наркотиков в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						if(mysql_errno()) return SendClientMessage(playerid, COLOR_GREY, "Ошибка MySQL при сохранении наркотиков в сейфе");
						PlayerTrailer[c][carDrugs] -= money;
						PI[playerid][pDrugs] += money;
						UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
						MeAction(playerid,"взял(а) наркотики из сейфа");
						new query[128];
						mysql_format(connects, query, sizeof(query),"UPDATE `"TABLE_DNK"` SET `drugs` = '%d' WHERE id = '%d'",PlayerTrailer[c][carDrugs],PlayerTrailer[c][carID]);
						mysql_tquery(connects, query);
					}
				case 1: {
						if(money < 1 || money > 20) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во аптечек, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 20 аптечек\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carHealth] < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во аптечек, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно аптечек в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						if(mysql_errno()) return SendClientMessage(playerid, COLOR_GREY, "Ошибка MySQL при сохранении аптечек в сейфе");
						if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
						MeAction(playerid,"взял(а) аптечки из сейфа");
						AddItem(playerid, 1, money);
						PlayerTrailer[c][carHealth] -= money;
						MeAction(playerid,"взял(а) аптечки из сейфа");
						new query[128];
						mysql_format(connects, query, sizeof(query),"UPDATE `"TABLE_DNK"` SET `medkit` = '%d' WHERE id = '%d'",PlayerTrailer[c][carHealth],PlayerTrailer[c][carID]);
						mysql_tquery(connects, query);
					}
				case 2: {
						if(money < 1 || money > 1000000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите взять из сейфа:\n\n"NO"*"G" Сумма должна быть от $1 до $1.000.000\n\n","Взять","Отмена");
							return 1;
						}
						if(money > PlayerTrailer[c][carMoney]) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите взять из сейфа:\n\n"NO"*"G" В сейфе недостаточно средств\n\n","Взять","Отмена");
							return 1;
						}
						if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #6");
						PlayerTrailer[c][carMoney] -= money;
						GiveMoney(playerid, money,"взял(а) деньги с сейфа");
						MeAction(playerid,"взял(а) деньги с сейфа");

						new query[128];
						mysql_format(connects, query, sizeof(query),"UPDATE `"TABLE_DNK"` SET `safemoney` = '%d' WHERE id = '%d'",PlayerTrailer[c][carMoney],PlayerTrailer[c][carID]);
						mysql_tquery(connects, query);
					}
				case 3: {
						if(money < 1 || money > 500) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][0] < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон Sniper Rifle в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						PlayerTrailer[c][carGun][0] -= money;
						save_trailer(c);
						GivePlayerWeapon(playerid, 34, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
				case 4: {
						if(money < 1 || money > 500) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][1] < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон Country Rifle в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						PlayerTrailer[c][carGun][1] -= money;
						save_trailer(c);
						GivePlayerWeapon(playerid, 33, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
				case 5: {
						if(money < 1 || money > 500) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][2] < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон M4 в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						PlayerTrailer[c][carGun][2] -= money;
						save_trailer(c);
						GivePlayerWeapon(playerid, 31, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
				case 6: {
						if(money < 1 || money > 500) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][3] < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон AK-47 в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						PlayerTrailer[c][carGun][3] -= money;
						save_trailer(c);
						GivePlayerWeapon(playerid, 30, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
				case 7: {
						if(money < 1 || money > 500) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][4] < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон MP5 в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						PlayerTrailer[c][carGun][4] -= money;
						save_trailer(c);
						GivePlayerWeapon(playerid, 29, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
				case 8: {
						if(money < 1 || money > 500) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][5] < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон Shotgun в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						PlayerTrailer[c][carGun][5] -= money;
						save_trailer(c);
						GivePlayerWeapon(playerid, 25, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
				case 9: {
						if(money < 1 || money > 500) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][6] < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон Desert Eagle в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						PlayerTrailer[c][carGun][6] -= money;
						save_trailer(c);
						GivePlayerWeapon(playerid, 24, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
				case 10: {
						if(money < 1 || money > 500) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][7] < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон SD Pistol в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						PlayerTrailer[c][carGun][7] -= money;
						save_trailer(c);
						GivePlayerWeapon(playerid, 23, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
				case 11: {
						if(PlayerTrailer[c][carGun][8] < 1) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно Baseball Bat в сейфе");
						PlayerTrailer[c][carGun][8] -= money;
						save_trailer(c);
						GivePlayerWeapon(playerid, 5, money);
						MeAction(playerid,"взял(а) Baseball Bat из сейфа");
					}
				}
			}
			else if(GetPVarInt(playerid,"safe_idx") == 2) {
				switch(i) {
				case 0: {
						if(money < 1 || money > 5) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5 наркотиков\n\n","Положить","Отмена");
							return 1;
						}
						if(PI[playerid][pDrugs] < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно наркотиков\n\n","Положить","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carDrugs]+money > 1000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 1000г наркотиков\n\n","Положить","Отмена");
							return 1;
						}
						if(mysql_errno()) return SendClientMessage(playerid, COLOR_GREY, "Ошибка MySQL при сохранении наркотиков в сейфе");
						PlayerTrailer[c][carDrugs] += money;
						PI[playerid][pDrugs] -= money;
						UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
						new query[128];
						mysql_format(connects, query, sizeof(query),"UPDATE `"TABLE_DNK"` SET `drugs` = '%d' WHERE id = '%d'",PlayerTrailer[c][carDrugs],PlayerTrailer[c][carID]);
						mysql_tquery(connects, query);
						MeAction(playerid,"положил(а) наркотики в сейф");
					}
				case 1: {
						if(money < 1 || money > 5) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во аптечек, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5 аптечек\n\n","Положить","Отмена");
							return 1;
						}
						if(GetInvent(playerid, 1) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно аптечек");
						if(PlayerTrailer[c][carHealth]+money > 500) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во аптечек, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 500 аптечек\n\n","Положить","Отмена");
							return 1;
						}
						if(mysql_errno()) return SendClientMessage(playerid, COLOR_GREY, "Ошибка MySQL при сохранении аптечек в сейфе");
						PlayerTrailer[c][carHealth] += money;
						DeleteItem(playerid, 1, money);
						MeAction(playerid,"положил(а) аптечки в сейф");
						new query[128];
						mysql_format(connects, query, sizeof(query),"UPDATE `"TABLE_DNK"` SET `medkit` = '%d' WHERE id = '%d'",PlayerTrailer[c][carHealth],PlayerTrailer[c][carID]);
						mysql_tquery(connects, query);
					}
				case 2: {
						if(money < 1 || money > 1000000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите положить в сейф:\n\n"NO"*"G" Сумма должна быть от $1 до $1.000.000\n\n","Положить","Отмена");
							return 1;
						}
						if(GetPlayerMoneyEx(playerid) < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите положить в сейф:\n\n"NO"*"G" Недостаточно средств\n\n","Положить","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carMoney]+money > 10000000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более $10.000.000\n\n","Положить","Отмена");
							return 1;
						}
						if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #6");
						PlayerTrailer[c][carMoney] += money;
						GiveMoney(playerid, -money,"положил(а) деньги в сейф");
						MeAction(playerid,"положил(а) деньги в сейф");
						new query[128];
						mysql_format(connects, query, sizeof(query),"UPDATE `"TABLE_DNK"` SET `safemoney` = '%d' WHERE id = '%d'",PlayerTrailer[c][carMoney],PlayerTrailer[c][carID]);
						mysql_tquery(connects, query);
					}
				case 3: {
						if(money < 1 || money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 34 || GetPlayerAmmo(playerid) < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][0]+money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 34, -money);
						PlayerTrailer[c][carGun][0] += money;
						save_trailer(c);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 4: {
						if(money < 1 || money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 33 || GetPlayerAmmo(playerid) < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][1]+money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 33, -money);
						PlayerTrailer[c][carGun][1] += money;
						save_trailer(c);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 5: {
						if(money < 1 || money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 31 || GetPlayerAmmo(playerid) < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][2]+money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 31, -money);
						PlayerTrailer[c][carGun][2] += money;
						save_trailer(c);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 6: {
						if(money < 1 || money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 30 || GetPlayerAmmo(playerid) < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][3]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 30, -money);
						PlayerTrailer[c][carGun][3] += money;
						save_trailer(c);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 7: {
						if(money < 1 || money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 29 || GetPlayerAmmo(playerid) < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][4]+money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 29, -money);
						PlayerTrailer[c][carGun][4] += money;
						save_trailer(c);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 8: {
						if(money < 1 || money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 25 || GetPlayerAmmo(playerid) < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][5]+money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 25, -money);
						PlayerTrailer[c][carGun][5] += money;
						save_trailer(c);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 9: {
						if(money < 1 || money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 24 || GetPlayerAmmo(playerid) < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][6]+money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 24, -money);
						PlayerTrailer[c][carGun][6] += money;
						save_trailer(c);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 10: {
						if(money < 1 || money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 23 || GetPlayerAmmo(playerid) < money) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(PlayerTrailer[c][carGun][7]+money > 5000) {
							D(playerid,D_SAFE_TRAILER_2,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 23, -money);
						PlayerTrailer[c][carGun][7] += money;
						save_trailer(c);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 11: {
						if(GetPlayerWeapon(playerid) != 5 || GetPlayerAmmo(playerid) < money) return D(playerid,DIALOG_NONE,DSM, " ",""W"У Вас нет Baseball Bat","Закрыть","");
						if(PlayerTrailer[c][carGun][8]+money > 1) return D(playerid,DIALOG_NONE,DSM, " ",""W"В сейфе нельзя хранить более одной биты","Закрыть","");
						GivePlayerWeapon(playerid, 5, -1);
						PlayerTrailer[c][carGun][8] += 1;
						save_trailer(c);
						MeAction(playerid,"положил(а) Baseball Bat в сейф");
					}
				}
			}
		}
	case dSafePutMoney: {
			if(!response) return 1;
			if(!strlen(inputtext) || strval(inputtext) < 1) return D(playerid,dSafePutMoney,DSI,""P"Сейф","\n\n"W"Введите количество:\n\n","Ввод","Отмена");
			new i = GetPVarInt(playerid,"safe_select")-1;
			new houseid = TI[playerid][tSelectHouse];
			new money = strval(inputtext);
			if(GetPVarInt(playerid,"safe_idx") == 1) {
				switch(i) {
				case 0: {
						if(money < 1 || money > 5) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 5 наркотиков\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseDrugs] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно наркотиков в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						if(mysql_errno()) return SendClientMessage(playerid, COLOR_GREY, "Ошибка MySQL при сохранении наркотиков в сейфе");
						if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
						gHouses[houseid][houseDrugs] -= money;
						PI[playerid][pDrugs] += money;
						UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
						MeAction(playerid,"взял(а) наркотики из сейфа");
						new query[128];
						mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `drugs` = '%d' WHERE id = '%d'",gHouses[houseid][houseDrugs],houseid+1);
						mysql_tquery(connects, query);
					}
				case 1: {
						if(money < 1 || money > 20) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во аптечек, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 20 аптечек\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseHealth] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во аптечек, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно аптечек в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						if(mysql_errno()) return SendClientMessage(playerid, COLOR_GREY, "Ошибка MySQL при сохранении аптечек в сейфе");
						if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
						gHouses[houseid][houseHealth] -= money;
						MeAction(playerid,"взял(а) аптечки из сейфа");
						AddItem(playerid, 1, money);
						new query[128];
						mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `medkit` = '%d' WHERE id = '%d'",gHouses[houseid][houseHealth],houseid+1);
						mysql_tquery(connects, query);
					}
				case 2: {
						if(money < 1 || money > 1000000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите взять из сейфа:\n\n"NO"*"G" Сумма должна быть от $1 до $1.000.000\n\n","Взять","Отмена");
							return 1;
						}
						if(money > gHouses[houseid][houseSafeMoney]) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите взять из сейфа:\n\n"NO"*"G" В сейфе недостаточно средств\n\n","Взять","Отмена");
							return 1;
						}
						//if(gHouses[houseid][houseSafeMoney]+money > 5000000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя хранить более $5.000.000");
						if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #6");
						gHouses[houseid][houseSafeMoney] -= money;
						GiveMoney(playerid, money,"взял(а) деньги с сейфа");
						MeAction(playerid,"взял(а) деньги с сейфа");
						new query[128];
						mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `safemoney` = '%d' WHERE id = '%d'",gHouses[houseid][houseSafeMoney],houseid+1);
						mysql_tquery(connects, query);
					}
				case 3: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][0] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон Sniper Rifle в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][0] -= money;
						SaveHouseGun(houseid);
						GivePlayerWeapon(playerid, 34, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
				
					}
				case 4: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][1] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон Country Rifle в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][1] -= money;
						SaveHouseGun(houseid);
						GivePlayerWeapon(playerid, 33, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
				case 5: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][2] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон M4 в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][2] -= money;
						SaveHouseGun(houseid);
						GivePlayerWeapon(playerid, 31, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
				case 6: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][3] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон AK-47 в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][3] -= money;
						SaveHouseGun(houseid);
						GivePlayerWeapon(playerid, 30, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
				case 7: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][4] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон MP5 в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][4] -= money;
						SaveHouseGun(houseid);
						GivePlayerWeapon(playerid, 29, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
					
				case 8: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][5] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон Shotgun в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][5] -= money;
						SaveHouseGun(houseid);
						GivePlayerWeapon(playerid, 25, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
					
				case 9: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][6] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон Desert Eagle в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][6] -= money;
						SaveHouseGun(houseid);
						GivePlayerWeapon(playerid, 24, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
				case 10: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][7] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон SD Pistol в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][7] -= money;
						SaveHouseGun(houseid);
						GivePlayerWeapon(playerid, 23, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
					
				case 11: {
						if(gHouses[houseid][houseGun][8] < 1) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно Baseball Bat в сейфе");
						gHouses[houseid][houseGun][8] -= money;
						SaveHouseGun(houseid);
						GivePlayerWeapon(playerid, 5, money);
						MeAction(playerid,"взял(а) Baseball Bat из сейфа");
					}
				}
			}
			else if(GetPVarInt(playerid,"safe_idx") == 2) {
				switch(i) {
				case 0: {
						if(money < 1 || money > 5) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5 наркотиков\n\n","Положить","Отмена");
							return 1;
						}
						if(PI[playerid][pDrugs] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно наркотиков\n\n","Положить","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseDrugs]+money > 1000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 1000г наркотиков\n\n","Положить","Отмена");
							return 1;
						}	
						if(mysql_errno()) return SendClientMessage(playerid, COLOR_GREY, "Ошибка MySQL при сохранении наркотиков в сейфе");
						gHouses[houseid][houseDrugs] += money;
						PI[playerid][pDrugs] -= money;
						UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
						MeAction(playerid,"положил(а) наркотики в сейф");
						new query[128];
						mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `drugs` = '%d' WHERE id = '%d'",gHouses[houseid][houseDrugs],houseid+1);
						mysql_tquery(connects, query);
					}
				case 1: {
						if(money < 1 || money > 5) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во аптечек, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5 аптечек\n\n","Положить","Отмена");
							return 1;
						}
						if(GetInvent(playerid, 1) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно аптечек");
						if(gHouses[houseid][houseHealth]+money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во аптечек, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 500 аптечек\n\n","Положить","Отмена");
							return 1;
						}
						if(mysql_errno()) return SendClientMessage(playerid, COLOR_GREY, "Ошибка MySQL при сохранении аптечек в сейфе");
						gHouses[houseid][houseHealth] += money;
						DeleteItem(playerid, 1, money);
						MeAction(playerid,"положил(а) аптечки в сейф");
						new query[128];
						mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `medkit` = '%d' WHERE id = '%d'",gHouses[houseid][houseHealth],houseid+1);
						mysql_tquery(connects, query);
					}
				case 2: {
						if(money < 1 || money > 1000000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите положить в сейф:\n\n"NO"*"G" Сумма должна быть от $1 до $1.000.000\n\n","Положить","Отмена");
							return 1;
						}
						if(GetPlayerMoneyEx(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите положить в сейф:\n\n"NO"*"G" Недостаточно средств\n\n","Положить","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseSafeMoney]+money > 10000000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более $10.000.000\n\n","Положить","Отмена");
							return 1;
						}
						if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #6");
						gHouses[houseid][houseSafeMoney] += money;
						GiveMoney(playerid, -money,"положил(а) деньги в сейф");
						MeAction(playerid,"положил(а) деньги в сейф");
						new query[128];
						mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `safemoney` = '%d' WHERE id = '%d'",gHouses[houseid][houseSafeMoney],houseid+1);
						mysql_tquery(connects, query);
					}
				case 3: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 34 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][0]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 34, -money);
						gHouses[houseid][houseGun][0] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 4: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 33 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][1]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 33, -money);
						gHouses[houseid][houseGun][1] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 5: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 31 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][2]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 31, -money);
						gHouses[houseid][houseGun][2] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 6: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 30 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][3]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 30, -money);
						gHouses[houseid][houseGun][3] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 7: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 29 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][4]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 29, -money);
						gHouses[houseid][houseGun][4] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 8: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 25 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][5]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 25, -money);
						gHouses[houseid][houseGun][5] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 9: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 24 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][6]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 24, -money);
						gHouses[houseid][houseGun][6] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 10: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 23 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][7]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						GivePlayerWeapon(playerid, 23, -money);
						gHouses[houseid][houseGun][7] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
				case 11: {
						if(GetPlayerWeapon(playerid) != 5 || GetPlayerAmmo(playerid) < money) return D(playerid,DIALOG_NONE,DSM, " ",""W"У Вас нет Baseball Bat","Закрыть","");
						if(gHouses[houseid][houseGun][7]+money > 1) return  D(playerid,DIALOG_NONE,DSM, " ",""W"В сейфе нельзя хранить более одной биты","Закрыть","");
						GivePlayerWeapon(playerid, 5, -1);
						gHouses[houseid][houseGun][8] += 1;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) Baseball Bat в сейф");
					}
				}
			}
		}
	case dArendator: {
			if(!response) return pc_cmd_house(playerid);
			new house = PI[playerid][pHouse] -1;
			if(!strcmp(gHouseArendator[house][listitem],"None")) {
				D(playerid,dArendatorAction,DSI, ""P"Жители","\n\n"W"Введите ID игрока, которого хотите подеслить в дом:\n\n","Ввод","Закрыть");
			}
			else D(playerid,dZhitelSettings,DSL,""P"Жители","Выселить жителя","Выбрать","Закрыть");
			SetPVarInt(playerid,"arenda_listitem",listitem+1);
			return 1;
		}
	case dZhitelSettings: {
			if(!response) return 1;
			new house = PI[playerid][pHouse] -1;
			new id_rent = GetPVarInt(playerid,"arenda_listitem")-1;
			new string[128];
			format(string, sizeof(string), "Вы выселили жителя из комнаты "ORANGE"№%i", id_rent+1);
			SendUse(playerid,string);
			new bool:check_online = false;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(!strcmp(gHouseArendator[house][id_rent],player_name[i])) {
					PI[i][pTempKey] = 0;
					UpdatePlayerData(i,"tempkey",0);
					SendOk(i,"Владелец выселил Вас из дома");
					check_online = true;
					if(house_car[i][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[i][0]),house_car[i][0] = INVALID_VEHICLE_ID;
					if(house_car[i][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[i][1]),house_car[i][1] = INVALID_VEHICLE_ID;
					break;
				}
			}
			if(!check_online) {
				new query[128];
				mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `tempkey` = '0' WHERE `Name` = '%s' LIMIT 1",gHouseArendator[house][id_rent]);
				mysql_tquery(connects, query, "", "");
			}
			strmid(gHouseArendator[house][id_rent],"None",0,strlen("None"),MAX_PLAYER_NAME);
			SaveHome(house);
			return 1;
		}
	case dArendatorAction: {
			if(!response) return 1;
			new house = PI[playerid][pHouse] -1;
			new id_rent = GetPVarInt(playerid,"arenda_listitem")-1;

			if(isNumeric(inputtext)) {
				D(playerid,dArendatorAction,DSI, ""P"Жители","\n\n"W"Введите ID игрока, которого хотите подеслить в дом:\n\n"NO"*"G" Произошла ошибка при вводе ID. Попробуйте заного\n\n","Ввод","Закрыть");
				return 1;
			}
			if(!IsPlayerConnected(strval(inputtext)) && !TI[strval(inputtext)][tLogin]) {
				D(playerid,dArendatorAction,DSI, ""P"Жители","\n\n"W"Введите ID игрока, которого хотите подеслить в дом:\n\n"NO"*"G" Данный игрок не авторизован на сервере\n\n","Ввод","Закрыть");
				return 1;
			}
			if(!ProxDetectorS(5.0, playerid, strval(inputtext))) {
				D(playerid,dArendatorAction,DSI, ""P"Жители","\n\n"W"Введите ID игрока, которого хотите подеслить в дом:\n\n"NO"*"G" Игрок далеко от Вас\n\n","Ввод","Закрыть");
				return 1;
			}
			if(PI[strval(inputtext)][pTempKey] || PI[strval(inputtext)][pHouse] || PI[strval(inputtext)][pRoom]) {
				D(playerid,dArendatorAction,DSI, ""P"Жители","\n\n"W"Введите ID игрока, которого хотите подеслить в дом:\n\n"NO"*"G" У игрока уже есть дом/квартира/подселен в одном из домов\n\n","Ввод","Закрыть");
				return 1;
			}
			PI[strval(inputtext)][pTempKey] = house+1;
			UpdatePlayerData(strval(inputtext),"tempkey",PI[strval(inputtext)][pTempKey]);
			PI[strval(inputtext)][pSpawn] = 1;
			UpdatePlayerData(strval(inputtext),"spawn",PI[strval(inputtext)][pSpawn]);
			SendUse(strval(inputtext),"Вас прописали в доме, используйте: "ORANGE"/house");
			SetString(gHouseArendator[house][id_rent],player_name[strval(inputtext)]);
			new string[144];
			format(string,sizeof(string),"Вы добавили нового жителя: "P"%s "W"в комнату "ORANGE"№%i",gHouseArendator[house][id_rent],id_rent+1);
			SendUse(playerid,string);
			new query[128];
			mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `people1` = '%s',`people2` = '%s' WHERE `id` = '%i'",gHouseArendator[house][0],gHouseArendator[house][1], house+1);
			mysql_tquery(connects, query,"","");
			//SaveHome(house);
			return 1;
		}
	case dRentMenu: {
			if(!response) return 1;
			switch(listitem) {
			case 0:
				{
					new tempkey = PI[playerid][pTempKey]-1;
					for(new i; i < 3; i++) {
						if(!strcmp(gHouseArendator[tempkey][i],player_name[playerid])) {
							strmid(gHouseArendator[tempkey][i],"None",0,strlen("None"),MAX_PLAYER_NAME);
							break;
						}
					}
					SendOk(playerid,"Вы выселились из дома");
					PI[playerid][pTempKey] = 0;
					UpdatePlayerData(playerid,"tempkey",0);
					if(house_car[playerid][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][0]);
					if(house_car[playerid][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][1]);
					SaveHome(tempkey);
				}
			case 1: pc_cmd_fixcar(playerid);
			}
			return 1;
		}
	case D_FAMILY_CREATE: {
			if(!response) return 1;
			if(PI[playerid][pFamily] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы состоите в семье");
			if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 30) {
				D(playerid,D_FAMILY_CREATE,DSI, ""P"Создание семьи","\n\n"W"Название семьи должно состоять от 6 до 30 символов.\n\nСтоимость создания семьи - "GREEN"2.000.000$\n\n"W"Введите ниже название семьи:","Создать","Отмена");
				return true;
			}
			if(isnull(inputtext)) {
				D(playerid,D_FAMILY_CREATE,DSI, ""P"Создание семьи","\n\n"W"Название семьи должно состоять от 6 до 30 символов.\n\nСтоимость создания семьи - "GREEN"2.000.000$\n\n"W"Введите ниже название семьи:","Создать","Отмена");
				return true;
			}
			if(PI[playerid][pCash] < 2000000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			create_family(playerid, inputtext);
			GiveMoney(playerid,-2000000,"создание семьи");
		}
	case D_FAMILY: {
			if(!response) return 1;
			new fam = PI[playerid][pFamily]-1;
			new nationality_string[28], str_s[500];
			switch(listitem) {
			case 0: {
					switch ( gFamily [ fam ] [ famNation ] )
					{
					case 1:nationality_string = "Американцы";
					case 2:nationality_string = "Японцы";
					case 3:nationality_string = "Итальянцы";
					case 4:nationality_string = "Мексиканцы";
					case 5:nationality_string = "Латиноамериканцы";
					case 6:nationality_string = "Испанцы";
					case 7:nationality_string = "Русские";
					case 8:nationality_string = "Португальцы";
					case 9:nationality_string = "Французы";
					default:nationality_string = "Неизвестно";
					}
					
					new str[24];
					if(gFamily[fam][famHouse] && gHouses[gFamily[fam][famHouse]-1][houseFamily] == gFamily[fam][famHouse]) format(str,sizeof(str),"Дом №%d",gHouses[gFamily[fam][famHouse]-1][houseFamily]);
					else str = "Отсутствует";
					
					format(str_s, sizeof(str_s), ""W"Название семьи:"P" %s\n\
								"W"Основатель:"P" %s\n\
								"W"Национальность:"P" %s\n\
								"W"Галочка:"P" %s\n\
								"W"Дата основания:"P" %s\n\n\
								"W"Слоган семьи:"P" %s\n\n\
								"W"Численность:"P" %d / 250\n\
								"W"Рейтинг семьи:"P" %d\n\
								"W"Семейных талонов:"P" %d\n\
								"W"Место жительства:"P" %s", gFamily[fam][famName],gFamily[fam][famOwner],
					nationality_string,(gFamily[fam][famType] == 0)?("Нет"):("Есть"), gFamily[fam][famDate],
					gFamily[fam][famMessage],fam_members(fam+1),gFamily[fam][famPoint],gFamily[fam][famTalon], str);
					return D(playerid,D_FAMILY_INFO,DSM, ""P"Информация",str_s,"Назад","");
				}
			case 1: {
					new string[700], str[700];
					strcat(str,""W"Имя:\t"W"Уровень:\t"W"Ранг\n");
					strcat(string,str);
					foreach(new i:Player)
					{
						if(!TI[i][tLogin]) continue;
						if(PI[playerid][pFamily] == PI[i][pFamily]) {
							format(str,sizeof(str),""P"%i."W" %s\t%d\t%s\n",i,player_name[i],PI[i][pLevel],GetFamName(PI[playerid][pFamily]-1,PI[i][pFamRank]));
							strcat(string,str);
						}
					}
					return D(playerid,D_FAMILY_INFO,DSTH,""P"Семья online",string,"Назад","");
				}
			case 2: {
					PageFirst[playerid][0] = 0;
					PageFirst[playerid][1] = 20; 

					new query[200];
					mysql_format(connects, query, sizeof(query),"SELECT `family`,`pOnline`,`pFamRank`,`Name` FROM `accounts` WHERE `family` = '%i' AND `online_status` = '1001' LIMIT %i, %i", PI[playerid][pFamily], PageFirst[playerid][0],PageFirst[playerid][1]);
					mysql_pquery(connects, query, "family_offline", "i", playerid);
				}
			case 3: {
					if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return pc_cmd_fmenu(playerid), SendClientMessage(playerid, COLOR_GREY, "Доступно только владельцу семьи");
					family_setting(playerid);
				}
			case 4:
				{
					if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return pc_cmd_fmenu(playerid), SendClientMessage(playerid, COLOR_GREY, "Доступно только владельцу семьи");
					D(playerid,D_FAMILY_TRANSFER,DSI,""P"Передача прав семьи",""W"Введите ниже ID игрока, которому хотите передать права владения семьей\n\
					После передачи прав, Вы не сможете больше управлять семьей","Далее","Закрыть");
				}
			case 5: {
					new string[750];
					format(string,sizeof(string),""W"Улучшение\t"W"Стоимость\t"W"Статус\n\
					"P"1."W" Галочка\t1000\t%s\n"P"2."W" Место жительства\t1500\t%s\n"P"3."W" 2-й слот под автомобиль\t2500\t%s\n"P"4."W" 3-й слот под автомобиль\t3200\t%s\n"P"5."W" 4-й слот под автомобиль\t4500\t%s\n"P"6."W" 5-й слот под автомобиль\t5000\t%s\n"G"Информация о получении талонов",(gFamily[fam][famType] == 1) ? (""ORANGE"Куплено") : (""NO"Не куплено"),
					(gFamily[fam][famUlushHouse] == 1) ? (""ORANGE"Куплено") : (""NO"Не куплено"), (gFamily[fam][famUlushCar][1] == 1) ? (""ORANGE"Куплено") : (""NO"Не куплено"),(gFamily[fam][famUlushCar][2] == 1) ? (""ORANGE"Куплено") : (""NO"Не куплено"),(gFamily[fam][famUlushCar][3] == 1) ? (""ORANGE"Куплено") : (""NO"Не куплено"),
					(gFamily[fam][famUlushCar][4] == 1) ? (""ORANGE"Куплено") : (""NO"Не куплено"));
					D(playerid,D_FAMILY_UPGRADE,DSTH,""P"Улучшения семьи",string,"Выбрать","Назад");
				}
			case 6: {
					if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return pc_cmd_fmenu(playerid), SendClientMessage(playerid, COLOR_GREY, "Доступно только владельцу семьи");
					D(playerid,D_FAMILY_RASFORM,DSM,""P"Расформирование состава",""W"\nВы действительно хотите расформировать свою семью?\n\n* Восстановить участников семьи будет {BC2C2C}невозможно","Далее","Назад");
				}
			case 7: {
					if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return pc_cmd_fmenu(playerid), SendClientMessage(playerid, COLOR_GREY, "Доступно только владельцу семьи");
					D(playerid,D_FAMILY_BL,DSL,""P"Чёрный список", ""P"1."W" Внести в ЧС\n"P"2."W" Вычеркнуть из ЧС\n"P"3."W" Очистить полный список ЧС\n"P"4."W" Список занесенных в ЧС", "Выбрать", "Закрыть");
				}
			case 8: {
					if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return pc_cmd_fmenu(playerid), SendClientMessage(playerid, COLOR_GREY, "Доступно только владельцу семьи");
					D(playerid,D_FAMILY_NATION,DSL,""P"Национальность семьи","- Американцы\n- Японцы\n- Итальянцы\n- Мексиканцы\n- Латиноамериканцы\n- Испанцы\n- Русские\n- Португальцы\n- Французы","Выбрать","Назад");
				}
			case 9: {
					if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return SendClientMessage(playerid, COLOR_GREY, "Доступно только владельцу семьи");
					new string[250];
					format(string,sizeof(string),""W"Автомобиль\t"W"Статус\n");
					for(new i = 0; i < 5; i++)
					{
						format(string,sizeof(string),"%s%s\t%s\n",string, gTransport[CarFamily[fam][i][carID]-400][trName],CarFamily[fam][i][LoadCar] != INVALID_VEHICLE_ID ? (""GREEN"В игре"):("{C34D45}Не загружен"));
					}
					D(playerid,D_FAMILY_CAR,DSTH,""P"Транспорт семьи",string,"Далее","Отмена");
				}
			case 10: {
					if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return pc_cmd_fmenu(playerid), SendClientMessage(playerid, COLOR_GREY, "Доступно только владельцу семьи");
					if(!gFamily[fam][famUlushHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не куплено улучшение 'Место жительства'");
					if(!PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома");
					D(playerid,D_FAMILY_HOUSE,DSM,""P"Дом семьи","\n\n"W"Вы действительно хотите выбрать Ваш дом, спавном своей семьи?\n\n","Да","Отмена");
				}
			case 11: {
					if(!response) return true;
					new query[200];
					mysql_format(connects, query, sizeof(query),"SELECT `talon_fam`,`Name` FROM `accounts` WHERE `family` = '%i' ORDER BY `talon_fam` DESC LIMIT 30", PI[playerid][pFamily]);
					mysql_pquery(connects, query, "top_talon", "i", playerid);
				}
			case 12: {
					if(GetString(gFamily[fam][famOwner],player_name[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете покинуть семью, так как владелец");
					new string[128];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} покинул семью",player_name[playerid],FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
					if(gFamily[PI[playerid][pFamily]-1][famHouse]) {
						PI[playerid][pSpawn] = 0;
						UpdatePlayerData(playerid,"spawn",PI[playerid][pSpawn]);
					}
					PI[playerid][pFamily] = 0;
					UpdatePlayerData(playerid,"family",0);
					PI[playerid][pFamRank] = 0;
					UpdatePlayerData(playerid,"pFamRank",0);
				}
			}
		}
	case D_FAMILY_SET: {
			if(!response) return family_dialog(playerid);
			new fam = PI[playerid][pFamily]-1;
			if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return SendClientMessage(playerid, COLOR_GREY, "Доступно только владельцу семьи");
			switch(listitem) {
			case 0..6: {
					new string[1256];
					for(new i = 1; i <= 8; i++) {
						new frac_rank_check = -1;
						if(listitem == 0) frac_rank_check = gFamily[fam][famInvRang];
						else if(listitem == 1) frac_rank_check = gFamily[fam][famUninvRang];
						else if(listitem == 2) frac_rank_check = gFamily[fam][famGiveRang];
						else if(listitem == 3) frac_rank_check = gFamily[fam][famSklad];
						else if(listitem == 4) frac_rank_check = gFamily[fam][famSkladMoney];
						else if(listitem == 5) frac_rank_check = gFamily[fam][famSpawnCar];
						else if(listitem == 6) frac_rank_check = gFamily[fam][famBuyCar];
						if(frac_rank_check == -1) return true;
						format(string,sizeof(string),"%s%i. %s%s\n", string,i,(i == frac_rank_check)?(""P""):(""W""),GetFamName(fam,i));
					}
					SetPVarInt(playerid,"fam_rank", listitem);
					D(playerid,D_FAMILY_SET_RANK,DSL,""P"Выберите ранг",string,"Выбрать", "Закрыть");
				}
			case 7: {
					new string[1256];
					strcat(string, ""W"");
					for(new i = 1; i <= 8; i++) {
						format(string,sizeof(string),"%s%s\n",string,GetFamName(fam,i));
					}
					D(playerid,D_FAMILY_ERANK_1,DSL,""P"Выберите ранг",string,"Выбрать","Назад");
					return 1;
				}
			case 8: {
					new string[256];
					format(string,sizeof(string),"{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---",FamilyColor[0],
					FamilyColor[1],FamilyColor[2],FamilyColor[3],FamilyColor[4],FamilyColor[5],FamilyColor[6],FamilyColor[7],FamilyColor[8],FamilyColor[9],FamilyColor[10],FamilyColor[11],FamilyColor[12]);
					D(playerid,D_FAMILY_COLOR,DSL,""P"Изменение цвета",string,"Выбрать","Отмена");
				}
				
			case 9: {
					if(gFamily[fam][famTalon] < 200) return SendClientMessage(playerid, COLOR_GREY, "У Вашей семьи недостаточно талонов");
					D(playerid,D_FAMILY_NAME,DSI,""P"Изменение названия","\n\n"W"Введите новое название семьи:\n\nСтоимость смены названия семьи"GREEN" 200"W" талонов","Изменить","Назад");
				}
			case 10: D(playerid,D_FAMILY_TEXT, DSI, ""P"Слоган семьи", "\n\n"W"Введите основной слоган семьи, которое будет показано членам Вашей семьи в статистике семьи\nДля удаления сообщения введите: "ORANGE"None\n\n", "Ввод", "Отмена");
			}
		}
	case D_FAMILY_TEXT: {
			if(!response) {
				if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
				family_dialog(playerid);
				return true;
			}
			new message[71];
			if(NonSym(inputtext,70,1)) return D(playerid,D_FAMILY_TEXT, DSI, ""P"Слоган семьи", "\n\n"W"Введите основной слоган семьи, которое будет показано членам Вашей семьи в статистике семьи\nДля удаления сообщения введите: "ORANGE"None\n\n"NO"* "G"Запрещены некорректные символы\n\n", "Ввод", "Отмена");
			if(sscanf(inputtext,"s[70]",message)) return D(playerid,D_FAMILY_TEXT, DSI, ""P"Слоган семьи", "\n\n"W"Введите основной слоган семьи, которое будет показано членам Вашей семьи в статистике семьи\nДля удаления сообщения введите: "ORANGE"None\n\n"NO"* "G"От 1 до 70 символов\n\n", "Ввод", "Отмена");
			strmid(gFamily[PI[playerid][pFamily]-1][famMessage],message,0,strlen(message),70);

			new query[350];
			mysql_format(connects, query, sizeof(query),"UPDATE `family` SET message = '%s' WHERE `id` = '%d' LIMIT 1",gFamily[PI[playerid][pFamily]-1][famMessage],PI[playerid][pFamily]);
			mysql_tquery(connects,query);

			new string[128];
			format(string,sizeof(string),"Сообщение: "ORANGE"%s "W"успешно установлено",message);
			SendOk(playerid,string);
		}
	case D_FAMILY_HOUSE: {
			if(!response) {
				if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
				family_dialog(playerid);
				return true;
			}
			if(!PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома");
			gFamily[PI[playerid][pFamily]-1][famHouse] = PI[playerid][pHouse];
			UpdateFamily(PI[playerid][pFamily],"house",PI[playerid][pHouse]);
			gHouses[PI[playerid][pHouse]-1][houseFamily] = PI[playerid][pHouse];
			gHouses[PI[playerid][pHouse]-1][houseFamilyID] = PI[playerid][pFamily]-1;
			
			new query[128];
			mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `family` = '%d',`family_id` = '%d' WHERE id = '%d'",gHouses[PI[playerid][pHouse]-1][houseFamily],gHouses[PI[playerid][pHouse]-1][houseFamilyID],PI[playerid][pHouse]);
			mysql_tquery(connects, query);
			SendOk(playerid,"Дом семьи успешно выбран");
		}
	case D_FAM_RANK: {
			if(!response) return 1;
			if(listitem == -1) return 1;
			if(PI[playerid][pFamRank] <= listitem) return SendClientMessage(playerid, COLOR_GREY, "Ваш ранг недостаточен");
			new rank_id = GetPVarInt(playerid,"id_fgiverank"),string[128];
			new fam = PI[playerid][pFamily]-1;
			format(string,sizeof(string),"Вы повысили/понизили "W"%s{%s} до ранга "W"%s",player_name[rank_id],FamilyColor[gFamily[fam][famColor]],GetFamName(fam,listitem+1));
			SendClientMessage(playerid,FamilyColorG[gFamily[fam][famColor]],string);

			format(string,sizeof(string),"Вас повысил/понизил "W"%s{%s} до ранга "W"%s",player_name[playerid],FamilyColor[gFamily[fam][famColor]],GetFamName(fam,listitem+1));
			SendClientMessage(rank_id,FamilyColorG[gFamily[fam][famColor]],string);

			PI[rank_id][pFamRank] = listitem + 1;
			UpdatePlayerData(rank_id,"pFamRank",PI[rank_id][pFamRank]);

			DeletePVar(playerid,"id_fgiverank");
			return 1;
		}
	case D_FAMILY_COLOR: {
			if(!response) return family_dialog(playerid);
			if(!PI[playerid][pFamily]) return 1;
			new fam = PI[playerid][pFamily]-1;
			gFamily[fam][famColor] = listitem;
			UpdateFamily(fam+1,"color",listitem);

			new string[128];
			format(string,sizeof(string),"Вы успешно изменили цвет Вашей семье на - {%s}ЦВЕТ СЕМЬИ",FamilyColor[gFamily[fam][famColor]]);
			SendUse(playerid,string);

			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[playerid][pFamily] != PI[i][pFamily]) continue;
				new famtext[50];
				if(gFamily[fam][famType]) format(famtext,sizeof(famtext),"[$] {%s}%s",FamilyColor[gFamily[PI[i][pFamily]-1][famColor]],gFamily[PI[i][pFamily]-1][famName]);
				else format(famtext,sizeof(famtext),"{%s}%s",FamilyColor[gFamily[PI[i][pFamily]-1][famColor]],gFamily[PI[i][pFamily]-1][famName]);
				UpdateDynamic3DTextLabelText(fam_lable[i], -1, famtext);
			}
			family_setting(playerid);
		}
	case D_FAMILY_SET_RANK: {
			if(!response) return DeletePVar(playerid,"fam_rank"),family_dialog(playerid);
			if(!PI[playerid][pFamily]) return 1;
			new fam = PI[playerid][pFamily]-1;
			new select_listitem = GetPVarInt(playerid,"fam_rank");UpdateFamily(fam+1,"invite",listitem + 1);
			if(select_listitem == 0) gFamily[fam][famInvRang] = listitem + 1,UpdateFamily(fam+1,"invite",listitem + 1);
			else if(select_listitem == 1) gFamily[fam][famUninvRang] = listitem + 1,UpdateFamily(fam+1,"uninvite",listitem + 1);
			else if(select_listitem == 2) gFamily[fam][famGiveRang] = listitem + 1,UpdateFamily(fam+1,"giverank",listitem + 1);
			else if(select_listitem == 3) gFamily[fam][famSklad] = listitem + 1,UpdateFamily(fam+1,"sklad",listitem + 1);
			else if(select_listitem == 4) gFamily[fam][famSkladMoney] = listitem + 1,UpdateFamily(fam+1,"money_rank",listitem + 1);
			else if(select_listitem == 5) gFamily[fam][famSpawnCar] = listitem + 1,UpdateFamily(fam+1,"spawn_rank",listitem + 1);
			else if(select_listitem == 6) gFamily[fam][famBuyCar] = listitem + 1,UpdateFamily(fam+1,"car_rank",listitem + 1);
			else return true;
			DeletePVar(playerid,"fam_rank");
			family_setting(playerid);
			return 1;
		}
	case D_FAMILY_ERANK_1: {
			if(!response) return family_dialog(playerid);
			if(!PI[playerid][pFamily]) return 1;
			SetPVarInt(playerid,"edit_frank",listitem);
			D(playerid, D_FAMILY_ERANK_2, DSI, ""P"Смена названия ранга", "\n\n"W"Введите новое название ранга:\n\n", "Изменить", "Отмена");
			return 1;
		}
	case D_FAMILY_ERANK_2: {
			if(!response) return family_dialog(playerid);
			if(!PI[playerid][pFamily]) return 1;
			new fam = PI[playerid][pFamily]-1;
			if(strlen(inputtext) <= 1 || strlen(inputtext) >= 24) return D(playerid, D_FAMILY_ERANK_2, DSI, ""P"Смена названия ранга", "\n\n"W"Введите новое название ранга:\n\n"NO"*"G" От 2 и до 24 симолов\n\n", "Изменить", "Отмена");
			string_replace(inputtext, "'", ' ');
			new slot = GetPVarInt(playerid, "edit_frank");

			new string[128];
			format(string,sizeof(string),"Ранг №%d переименован с %s на %s",slot+1,GetFamName(fam,slot+1),inputtext);
			SendClientMessage(playerid,FamilyColorG[gFamily[fam][famColor]],string);

			strmid(FamRanks[fam][slot], inputtext, 0, strlen(inputtext));
			SavefRank(slot+1,fam);
			family_setting(playerid);
			return 1;
		}
	case D_FAMILY_INFO: {
			if(response) {
				if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
				family_dialog(playerid);
				return true;
			}
		}
	case D_FAMILY_NAME: {
			if(!response) {
				if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
				family_dialog(playerid);
				return true;
			}
			new fam = PI[playerid][pFamily]-1;
			if(strlen(inputtext) < 6 || strlen(inputtext) > 30) {
				D(playerid,D_FAMILY_NAME,DSI, ""P"Название","\n\n"W"Введите новое название семьи:\n\nСтоимость смены названия семьи"GREEN" 200"W" талонов","Изменить","Отмена");
				return true;
			}
			if(isnull(inputtext)) {
				D(playerid,D_FAMILY_CREATE,DSI, ""P"Создание семьи","\n\n"W"Название семьи должно состоять от 6 до 30 символов.\n\n"W"Введите новое название семьи:\n\nСтоимость смены названия семьи"GREEN" 200"W" талонов","Создать","Отмена");
				return true;
			}
			new query[128];
			mysql_format(connects, query, sizeof(query),"SELECT * FROM family WHERE BINARY name = '%s'", inputtext);
			new Cache:result = mysql_query(connects, query);
			if(cache_num_rows()) {
				SendClientMessage(playerid, COLOR_GREY, "Семья с таким именем уже существует");
				cache_delete(result);
				return 1;
			}
			cache_delete(result);
			strmid(gFamily[fam][famName],inputtext,0,strlen(inputtext),strlen(inputtext)+1);
			new str[300];
			mysql_format(connects, str, sizeof(str),"UPDATE `family` SET name = '%s' WHERE id = '%d'", gFamily[fam][famName],gFamily[fam][famID]);
			mysql_tquery(connects, str, "","");
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[playerid][pFamily] != PI[i][pFamily]) continue;
				new famtext[50];
				if(gFamily[PI[playerid][pFamily]-1][famType]) format(famtext,sizeof(famtext),"[$] {%s}%s",FamilyColor[gFamily[PI[playerid][pFamily]-1][famColor]],gFamily[PI[playerid][pFamily]-1][famName]);
				else format(famtext,sizeof(famtext),"{%s}%s",FamilyColor[gFamily[PI[playerid][pFamily]-1][famColor]],gFamily[PI[playerid][pFamily]-1][famName]);
				UpdateDynamic3DTextLabelText(fam_lable[i], -1, famtext);
			}
			new string[128];
			format(string,sizeof(string),"Вы успешно изменили название Вашей семье на - "ORANGE"%s",gFamily[fam][famName]);
			SendClientMessage(playerid,FamilyColorG[gFamily[fam][famColor]],string);
			gFamily[fam][famTalon] -= 200;
			UpdateFamily(PI[playerid][pFamily],"talon",gFamily[fam][famTalon]);
			return 1;
		}
	case D_BUY_SKIN: {
			if(!response) return true;
			new price = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1];
			new invent = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][2];
			new id = TI[playerid][tSelectedBusinessID];
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
			if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
			GiveMoney(playerid,-price,"покупка скина");
			if(QuestProgress[playerid][4] == 0 && AcceptQuest[playerid][4] != 0)
			{
				QuestProgress[playerid][4] ++;
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Шоппинг'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
				NextStapQI(playerid,4);
			}
			if(gBusiness[id][bizzProduct] - 10 > 0) {
				bizz_pay(id,floatround(price * 0.5));
				gBusiness[id][bizzProduct] -= 10;
			}
			SetPVarInt(playerid,"ChangingSkin",0);
			SendOk(playerid,"Вы купили на себя новую одежду");
			if(PI[playerid][pMember]) A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
			else A_SetPlayerSkin(playerid,PI[playerid][pSkin]); 
			AddItem(playerid, invent, 1);
			cancel_skin(playerid);
		}
	case D_AUTOSCHOOL_1: {
			if(!response) return DeletePVar(playerid,"use_test");
			new question = TestASKMassive[playerid][0];
			return D(playerid,D_AUTOSCHOOL_2,QueInfo[question][dDialog],QueInfo[question][dQuestion],QueInfo[question][dAnswers],"Далее","");
		}
	case D_AUTOSCHOOL_2: {
			if(!response)
			{
				DeletePVar(playerid,"error_test");
				DeletePVar(playerid,"use_test");
				DeletePVar(playerid,"pTestQNumber");
				TI[playerid][tAutoSchool] = 0;
			}
			new que, question;
			que = GetPVarInt(playerid,"pTestQNumber");
			question = TestASKMassive[playerid][que];
			if(QueInfo[question][dSuccesQwe] != -1 && listitem != QueInfo[question][dSuccesQwe]) SetPVarInt(playerid,"error_test",GetPVarInt(playerid,"error_test")+1);
			SetPVarInt(playerid,"pTestQNumber",GetPVarInt(playerid,"pTestQNumber")+1);
			que = GetPVarInt(playerid,"pTestQNumber");
			if(que < 7) {
				question = TestASKMassive[playerid][que];
				D(playerid,D_AUTOSCHOOL_2,QueInfo[question][dDialog],QueInfo[question][dQuestion],QueInfo[question][dAnswers],"Далее","");
			}
			else
			{
				if(GetPVarInt(playerid,"error_test") > 2) {
					new string[156];
					format(string,sizeof(string),""NO"Экзамен завален!\n\n"W"Ошибок допущено: "NO"%d\nСоветуем подготовиться лучше!",GetPVarInt(playerid,"error_test"));
					D(playerid,DIALOG_NONE,DSM, ""P"Экзамен",string,"Закрыть","");
					DeletePVar(playerid,"error_test");
					DeletePVar(playerid,"use_test");
					DeletePVar(playerid,"pTestQNumber");
					TI[playerid][tAutoSchool] = 0;
					return 1;
				}
				else {
					D(playerid,DIALOG_NONE,DSM, ""P"Экзамен",""GREEN"Поздравляем с успешной сдачей теоретической части!\n\n\
												"W"Для прохождения практической части займите свободный автомобиль на парковке АвтоШколы","Хорошо","");
					SendOk(playerid,"Выйдите на улицу, займите свободный автомобиль");
					SetPVarInt(playerid,"WaitExam", true);
					SetPVarInt(playerid,"pWaitingExam", true);
					DeletePVar(playerid,"use_test");
				}
			}
		}
	case D_AUTOSCHOOL_3: {
			if(!response) return 1;
			if(TI[playerid][tAutoSchool] == 2) {
				car_autoschool[playerid] = A_CreateVehicle(447, 723.2933,-1462.0024,22.1908,269.4681, -1, -1, -1,VEHICLE_TYPE_AUTOSCHOOL);
				SetPlayerVirtualWorld(playerid,playerid+1);
				SetVehicleVirtualWorld(car_autoschool[playerid],playerid+1);
				SetPlayerInterior(playerid,0);
				t_PutPlayerInVehicle(playerid, car_autoschool[playerid], 0);
				SetPlayerRaceCheckpoint(playerid, 3, AutoCPMav[0][0], AutoCPMav[0][1], AutoCPMav[0][2], AutoCPMav[1][0], AutoCPMav[1][1], AutoCPMav[1][2], 5.0);
			}
			else if(TI[playerid][tAutoSchool] == 3) {
				car_autoschool[playerid] = A_CreateVehicle(452, 729.7314,-1498.4343,-0.6426,180.3360, -1, -1, -1,VEHICLE_TYPE_AUTOSCHOOL);
				SetPlayerVirtualWorld(playerid,playerid+1);
				SetVehicleVirtualWorld(car_autoschool[playerid],playerid+1);
				SetPlayerInterior(playerid,0);
				t_PutPlayerInVehicle(playerid, car_autoschool[playerid], 0);
				SetPlayerRaceCheckpoint(playerid, 0, AutoCPBoat[0][0], AutoCPBoat[0][1], AutoCPBoat[0][2], AutoCPBoat[1][0], AutoCPBoat[1][1], AutoCPBoat[1][2], 4.5);
			}
			return 1;
		}
	case D_BANK_OPLATA_DNK: {
			if(!response) return dialog_bank(playerid);
			if(!GetPlayerVehicles(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома на колесах!");
			new amount = strval(inputtext), day, oplata = 5000;
			day = (PlayerTrailer[playerVehicleID[playerid]][carDay]-gettime())/86400;
			if(amount < 1 || amount > 10) {
				static const f_str[] = "\n\n"W"Введите кол-во дней на которое хотите продлить аренду за дом на колесах\nПримечание: "ORANGE"1"W" день = "GREEN"5000"W" | Оплачено на "P"%d"W" дней\n\n";
				new string[sizeof(f_str) +1 + (-2 + 17)];
				format(string,sizeof(string),f_str,day);
				D(playerid,D_BANK_OPLATA_DNK,DSI, ""P"Оплата дома на колесах",string,"Оплатить","Отмена");
				return 1;
			} 
			if(day + amount > 10) return SendClientMessage(playerid, COLOR_GREY, "Максимальное кол-во оплаченных дней 10");
			if(GetPlayerMoneyEx(playerid) < amount*oplata) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
			PlayerTrailer[playerVehicleID[playerid]][carDay] += 86400 * amount;
			new query[128];
			mysql_format(connects, query, sizeof(query),"UPDATE `"TABLE_DNK"` SET `day` = '%d' WHERE id = '%d'",PlayerTrailer[playerVehicleID[playerid]][carDay],PlayerTrailer[playerVehicleID[playerid]][carID]);
			mysql_tquery(connects, query,"","");
			GiveMoney(playerid,-(amount*oplata),"оплата за днк");
			static const f_str[] = ""W"Оплачено дней:\t\t"O"%d\n\
									"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PI[playerid][pCash]);
			return D(playerid,DIALOG_NONE,DSM, ""P"Оплата дома на колесах",string,"Закрыть","");
		}
	case D_BANK_OPLATA_HOUSE: {
			if(!response) return dialog_bank(playerid);
			if(!PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома");
			new amount = strval(inputtext);
			new houseid = PI[playerid][pHouse] - 1,oplata;
			oplata = floatround(gHouses[houseid][housePrice]*0.1/70);
			new day;
			day = (gHouses[houseid][houseDay]-gettime())/86400;
			if(amount < 1 || amount > 20) {
				static const f_str[] = "\n\n"W"Введите кол-во дней на которое хотите продлить аренду за дом:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" | Оплачено на "P"%d"W" дней\n\n";
				new string[sizeof(f_str) +1 + (-2 + 17)];
				format(string,sizeof(string),f_str,oplata,day);
				D(playerid,D_BANK_OPLATA_HOUSE,DSI, ""P"Оплата дома",string,"Оплатить","Отмена");
				return 1;
			}
			if(day + amount > 20) return SendClientMessage(playerid, COLOR_GREY, "Максимальное кол-во оплаченных дней 20");
			if(GetPlayerMoneyEx(playerid) < amount*oplata) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
			gHouses[houseid][houseDay] += 86400 * amount;
			new query[128];
			mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `day` = '%d' WHERE id = '%d'",gHouses[houseid][houseDay],houseid+1);
			mysql_tquery(connects, query,"","");
			GiveMoney(playerid,-(amount*oplata),"оплата за дом");
			static const f_str[] = ""W"Оплачено дней:\t\t"O"%d\n\
									"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PI[playerid][pCash]);
			return D(playerid,DIALOG_NONE,DSM, ""P"Оплата дома",string,"Закрыть","");
		}
	case D_BANK_OPLATA_BIZZ: {
			if(!response) return dialog_bank(playerid);
			if(!PI[playerid][pBusiness]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бизнеса");
			new amount = strval(inputtext);
			new bizid = PI[playerid][pBusiness] - 1,oplata;
			oplata = floatround(gBusiness[bizid][bizzSellPrice]*0.1/100);
			new day;
			day = (gBusiness[bizid][bizzDay]-gettime())/86400;
			if(amount < 1 || amount > 20) {
				static const f_str[] = "\n\n"W"Бизнес:"P" %s\n\n"W"Введите кол-во дней на которое хотите продлить аренду за бизнес:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" | Оплачено на "P"%d"W" дней\n\n";
				new string[sizeof(f_str) +1 + (-2 + 30)];
				format(string,sizeof(string),f_str,gBusiness[bizid][bizzName], oplata, day);
				return D(playerid,D_BANK_OPLATA_BIZZ,DSI, ""P"Оплата бизнеса",string,"Оплатить","Отмена");
			}
			if(day + amount > 20) return SendClientMessage(playerid, COLOR_GREY, "Максимальное кол-во оплаченных дней 20");
			if(GetPlayerMoneyEx(playerid) < amount*oplata) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
			gBusiness[bizid][bizzDay] += 86400 * amount;
			UpdateBusinessData(bizid+1,"deliving",gBusiness[bizid][bizzDay]);
			GiveMoney(playerid,-(amount*oplata),"оплата за бизнес");
			static const f_str[] = ""W"Оплачено дней:\t\t"O"%d\n\
									"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PI[playerid][pCash]);
			return D(playerid,DIALOG_NONE,DSM, ""P"Оплата бизнеса",string,"Закрыть","");
		}
	case dBusRent: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(GetPlayerMoneyEx(playerid) < BUS_PRICE_RENT) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств"),RemovePlayerFromVehicleAC(playerid);
			new vehicleid = GetPlayerVehicleID(playerid);
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			SetPVarInt(playerid,"bus_id",vehicleid);
			switch(VehicleInfo[GetPlayerVehicleID(playerid)][vBus]) {
			case 1: D(playerid,dBusPrice,2,"Выберите маршрут:","1. АВЛС - Завод - Ферма\n2. АВЛС - Лесопилка\n3. АВЛС - Банк - Автошкола","Выбрать","Отмена");
			case 2: {
					new string[156];
					new model = GetVehicleModel(vehicleid);
					if(vehicleid == INVALID_VEHICLE_ID || (model != 431 && model != 437)) return 1;
					SetString(gRouteName[5], "ЖДЛВ - АВЛС");
					format(string,sizeof(string),""P"%s\n"W"Стоимость билета: "GREEN"$%i",gRouteName[5],100);
					gPlayerBusText[playerid] = CreateDynamic3DTextLabel(string,-1, 0.0, 0.0, 0.0, 50.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));

					SetPVarInt(playerid,"route",6);
					SetNextBusCP(playerid);
				}
			case 3: {
					new string[156];
					new model = GetVehicleModel(vehicleid);
					if(vehicleid == INVALID_VEHICLE_ID || (model != 431 && model != 437)) return 1;
					SetString(gRouteName[6], "ЖДСФ - АВЛС");
					format(string,sizeof(string),""P"%s\n"W"Стоимость билета: "GREEN"$%i",gRouteName[6],100);
					gPlayerBusText[playerid] = CreateDynamic3DTextLabel(string,-1, 0.0, 0.0, 0.0, 50.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));

					SetPVarInt(playerid,"route",7);
					SetNextBusCP(playerid);
				}
			}
			GiveMoney(playerid,-BUS_PRICE_RENT,"аренда автобуса");
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerBusText[playerid],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerBusText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 3.0);
			SetPVarFloat(playerid,"bus_damage", 1000.0);
			return 1;
		}
	case dBusPrice: {
			if(!response) {
				D(playerid,dBusPrice,2,"Выберите маршрут:","1. АВЛС - Завод - Ферма\n2. АВЛС - Лесопилка\n3. АВЛС - Банк - Автошкола","Выбрать","Отмена");
				return 1;
			}
			SetPVarInt(playerid,"route_item",listitem);
			new route = GetPVarInt(playerid,"route_item");
			DeletePVar(playerid,"route_item");
			new string[156];
			new vehicleid = GetPlayerVehicleID(playerid);
			new model = GetVehicleModel(vehicleid);
			if(vehicleid == INVALID_VEHICLE_ID || (model != 431 && model != 437)) return 1;

			switch(route) {
			case 0: SetString(gRouteName[0], "АВЛС - Завод - Ферма");
			case 1: SetString(gRouteName[1], "АВЛС - Лесопилка");
			case 2: SetString(gRouteName[2], "АВЛС - Банк - Автошкола");
			case 3: SetString(gRouteName[3], "Внутригородской ЛС");
				//  4 маршрут
			}

			format(string,sizeof(string),""P"%s\n"W"Стоимость билета: "GREEN"$%i",gRouteName[route],100);

			gPlayerBusText[playerid] = CreateDynamic3DTextLabel(string,-1, 0.0, 0.0, 0.0, 50.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerBusText[playerid],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerBusText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 3.0);

			SetPVarInt(playerid,"route",route + 1);
			SetNextBusCP(playerid);
			SetPVarInt(playerid,"bus_id",vehicleid);
			SetPVarFloat(playerid,"bus_damage", 1000.0);
			return 1;
		}
	case D_SPAWN: {
			if(!response) return 1;
			switch(listitem) {
			case 0: SendOk(playerid,"Вы выбрали местом спавна: вокзал");
			case 1: {
					if(PI[playerid][pHouse] == 0 && PI[playerid][pTempKey] == 0 && PI[playerid][pRoom] == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома/квартиры");
					SendOk(playerid,"Вы выбрали местом спавна: дом/квартира");
				}
			case 2:	{
					if(!PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
					if(!IsAGang(playerid) || !IsAMafia(playerid))
					{
						if(!start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Необходимо начать рабочий день в организации");
					}
					SendOk(playerid,"Вы выбрали местом спавна: организация");
				}
			case 3: {
					if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
					if(PI[playerid][pFamily] && !gFamily[PI[playerid][pFamily]-1][famHouse]) return SendClientMessage(playerid, COLOR_GREY, "Дом семьи не выбран");
					SendOk(playerid,"Вы выбрали местом спавна: дом семьи");
				}
			case 4: {
					if(!GetPlayerVehicles(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома на колесах!");
					SendOk(playerid,"Вы выбрали местом спавна: дом на колесах");
				}
			}
			PI[playerid][pSpawn] = listitem;
			UpdatePlayerData(playerid,"spawn",PI[playerid][pSpawn]);
		}
	case D_MAFIA_CARM: {
			if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return SendClientMessage(playerid, COLOR_GREY, "Вы не в фургоне для развозки наркотиков");
			switch(listitem) {
			case 0: {
					new vehicleid = GetPlayerVehicleID(playerid);
					VG[vehicleid][vgID] = vehicleid;
					VG[vehicleid][vgLoading] = true;
					VG[vehicleid][vgNarko] = 1;
					RemovePlayerFromVehicleAC(playerid);
					new Float:x, Float:y, Float:z, Float:a;
					GetVehiclePos(vehicleid,x,y,z);
					GetVehicleZAngle(vehicleid,a);
					x = x - (-4.0*floatsin(a,degrees));
					y = y - 4.0*floatcos(a,degrees);
					VG[vehicleid][vgPickup] = CreateDynamicPickup(2358,1,x,y,z-0.5);
					VG[vehicleid][vgArea] = CreateDynamicSphere(x,y,z,1.0);
					new string[64];
					format(string,sizeof(string),"Наркотиков: "O"%i/2000",VG[vehicleid][vgAmount][0]);
					VG[vehicleid][vgText] = CreateDynamic3DTextLabel(string,COLOR_WHITE,x,y,z+0.5,20.0);
				}
			case 1,2: SetPlayerCheckpoint(playerid, 2182.4041,-1663.5164,14.8395, 5);
			case 3: SetPlayerCheckpoint(playerid, 2643.5884,-2023.2747,13.5469, 5),SetPVarInt(playerid,"DrugsMafiaCar",1);
			case 4: SetPlayerCheckpoint(playerid, 2753.4912,-1176.2693,69.4065, 5),SetPVarInt(playerid,"DrugsMafiaCar",2);
			case 5: SetPlayerCheckpoint(playerid, 2500.5557,-1681.2760,13.3686, 5),SetPVarInt(playerid,"DrugsMafiaCar",3);
			case 6: SetPlayerCheckpoint(playerid, 1672.8441,-2141.0789,13.5469, 5),SetPVarInt(playerid,"DrugsMafiaCar",4);
			case 7: SetPlayerCheckpoint(playerid, 2728.3887,-1946.3820,13.5469, 5),SetPVarInt(playerid,"DrugsMafiaCar",5);
			case 8: {
					new string_gung[512] = ""P"Банда\t"P"Кол-во наркотиков\n";
					if(FI[fBALLAS][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{CC00FF}The Ballas\t"P"%d\n",string_gung,FI[fBALLAS][fDrugsBuy]);
					}
					if(FI[fVAGOS][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{ffff00}The Vagos\t"P"%d\n",string_gung,FI[fVAGOS][fDrugsBuy]);
					}
					if(FI[fGROVE][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{009900}The Grove\t"P"%d\n",string_gung,FI[fGROVE][fDrugsBuy]);
					}
					if(FI[fAZTEC][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{00CCFF}The Aztecas\t"P"%d\n",string_gung,FI[fAZTEC][fDrugsBuy]);
					}
					if(FI[fRIFA][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{6666FF}The Rifa\t"P"%d\n",string_gung,FI[fRIFA][fDrugsBuy]);
					}
					D(playerid,DIALOG_NONE,DSTH,"Заказы",string_gung,"Скрыть","");
					return 1;
				}
			}
			if(listitem) SendOk(playerid, "Место разгрузки помечено на радаре");
			return 1;
		}
	case D_MAFIA_CARM_2: {
			if(!response) return 1;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return SendClientMessage(playerid, COLOR_GREY, "Вы не в фургоне для развозки наркотиков");
			new drugs = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(!strval(inputtext)) {
				static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите загрузить в грузовик:\n\n\
									Доступно наркотиков: "ORANGE"%d\n\
									"W"В грузовик поместится: "ORANGE"%d";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,gBusiness[56][bizzProduct],2000-VG[vehicleid][vgDrugs]);
				D(playerid, D_MAFIA_CARM_2, DSI, ""P"Загрузка наркотиков",string, "Загрузить", "Отмена");
				return 1;
			}
			if(strval(inputtext) < 0 || gBusiness[56][bizzProduct] - drugs < 0) {
				static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите загрузить в грузовик:\n\n\
									Доступно наркотиков: "ORANGE"%d\n\
									"W"В грузовик поместится: "ORANGE"%d\n\n\
									"NO"*"G" На складе недостаточно наркотиков";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,gBusiness[56][bizzProduct],2000-VG[vehicleid][vgDrugs]);
				D(playerid, D_MAFIA_CARM_2, DSI, ""P"Загрузка наркотиков",string, "Загрузить", "Отмена");
				return 1;
			}
			if(VG[vehicleid][vgDrugs] + drugs > 2000) {
				static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите загрузить в грузовик:\n\n\
									Доступно наркотиков: "ORANGE"%d\n\
									"W"В грузовик поместится: "ORANGE"%d\n\n\
									"NO"*"G" В фургоне недостаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,gBusiness[56][bizzProduct],2000-VG[vehicleid][vgDrugs]);
				D(playerid, D_MAFIA_CARM_2, DSI, ""P"Загрузка наркотиков",string, "Загрузить", "Отмена");
				return 1;
			}
			VG[vehicleid][vgDrugs] += drugs;
			gBusiness[56][bizzProduct] -= drugs;
			UpdateBusinessData(57,"product",gBusiness[56][bizzProduct]);
			new string[128];
			format(string,sizeof(string),"Наркотики успешно загружены. В фургоне доступно: "ORANGE"%d"W" наркотиков",VG[vehicleid][vgDrugs]);
			SendOk(playerid,string);
		}
	case D_MAFIA_CARM_3: {
			if(!response) return DeletePVar(playerid,"sell_gdrugs");
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return SendClientMessage(playerid, COLOR_GREY, "Вы не в фургоне для развозки наркотиков");
			new gung,name[24]; 
			switch(GetPVarInt(playerid,"sell_gdrugs"))
			{
			case 1: gung = fBALLAS, name = "The Ballas";
			case 2: gung = fVAGOS, name = "The Vagos";
			case 3: gung = fGROVE, name = "The Grove";
			case 4: gung = fAZTEC, name = "The Aztec";
			case 5: gung = fRIFA, name = "The Rifa";
			default: return SendClientMessage(playerid, COLOR_GREY, "Попробуйте позже");
			}
			if(!FI[gung][fDrugsBuy]) return SendClientMessage(playerid, COLOR_GREY, "Банда не нуждается в покупке наркотиков");
			new drugs = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(drugs < 100 || drugs > 500) {
				static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать %s:\n\n\
										Доступно наркотиков: "ORANGE"%dг\n\
										Склад банды: "ORANGE"%dг"W"\n\
										"W"Заказ банды: "ORANGE"%dг\n\n\
										"NO"*"G" Продать можно от 100 и до 500 грамм";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7) + 5 + 5];
				format(string,sizeof(string),f_str,name,VG[vehicleid][vgDrugs],FI[gung][fDrugs],FI[gung][fDrugsBuy]);
				D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
				return 1;
			}
			if(strval(inputtext) < 0 || VG[vehicleid][vgDrugs] - drugs < 0) {
				static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать %s:\n\n\
										В фургоне доступно: "ORANGE"%dг\n\
										Склад банды: "ORANGE"%dг"W"\n\
										"W"Заказ банды: "ORANGE"%dг\n\n\
										"NO"*"G" В фургоне недостаточно наркотиков";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7) + 5 + 5];
				format(string,sizeof(string),f_str,name,VG[vehicleid][vgDrugs],FI[gung][fDrugs],FI[gung][fDrugsBuy]);
				D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
				return 1;
			}
			if(FI[gung][fDrugs] + drugs > 10000) {
				static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать %s:\n\n\
										Доступно наркотиков: "ORANGE"%dг\n\
										Склад банды: "ORANGE"%dг"W"\n\
										"W"Заказ банды: "ORANGE"%dг\n\n\
										"NO"*"G" На склад банды не поместится столько наркотиков";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7) + 5 + 5];
				format(string,sizeof(string),f_str,name,VG[vehicleid][vgDrugs],FI[gung][fDrugs]);
				D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
				return 1;
			}
			VG[vehicleid][vgDrugs] -= drugs;
			FI[gung][fDrugs] +=drugs;
			UpdateFraction(gung,"Drugs",FI[gung][fDrugs]);

			FI[PI[playerid][pMember]][fBank] += (FI[gung][fDrugsPrice] * drugs);
			UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);

			new string[128];
			format(string,sizeof(string),"Наркотики успешно разгружены. В фургоне доступно: "ORANGE"%d"W" наркотиков",(FI[gung][fDrugsPrice] * drugs),VG[vehicleid][vgDrugs]);
			SendOk(playerid,string);

			FI[gung][fDrugsBuy]-=drugs;
			UpdateFraction(gung,"DrugsBuy",FI[gung][fDrugsBuy]);
			if(FI[gung][fDrugsBuy] == 0) {
				FI[gung][fDrugsPrice] = 0;
				UpdateFraction(gung,"DrugsPrice",FI[gung][fDrugsPrice]);
			}
			DeletePVar(playerid,"sell_gdrugs");
		}
	case D_ARMY_CARM: {
			if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SendClientMessage(playerid, COLOR_GREY, "Вы не в матовозе");
			switch(listitem) {
			case 0: {
					SetPlayerCheckpoint(playerid, -22.8073,-273.1954,5.4297, 5.0);
					SendOk(playerid, "Место разгрузки помечено на радаре");
					SetPVarInt(playerid,"MatsArmyCar",6);
				}
			case 1: SetPlayerCheckpoint(playerid, 1535.8534,-1674.4445,13.3828, 5), SetPVarInt(playerid,"MatsArmyCar",1);
			case 2: SetPlayerCheckpoint(playerid, 1611.7229,-1262.0503,17.4984, 5), SetPVarInt(playerid,"MatsArmyCar",2);
			case 3: SetPlayerCheckpoint(playerid, 2756.4651,-2467.2695,13.4252, 5), SetPVarInt(playerid,"MatsArmyCar",3);
			case 4: SetPlayerCheckpoint(playerid, 637.0894,-570.6320,16.1875, 5),   SetPVarInt(playerid,"MatsArmyCar",4);
			case 5: {
					new string[300];
					format(string, sizeof(string), "Организация\tБоеприпасы\n"W"Нац. Гвардия:\t"P"%d\n"W"Полиция ЛС:\t"P"%d\n"W"ФБР:\t"P"%d\n"W"RCSD:\t"P"%d",
					FI[fARMYLS][fMats],FI[fLSPD][fMats],FI[fFBI][fMats],FI[fRCSD][fMats]);
					D(playerid, DIALOG_NONE, DST,""P"Склады организаций",string,"Скрыть","");
					return 1;
				}
			case 6: pc_cmd_load(playerid);
			}
			return 1;
		}
	case D_ARMY_CARM_SF: {
			if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return SendClientMessage(playerid, COLOR_GREY, "Вы не в матолёте");
			switch(listitem) {
			case 0: D(playerid, D_ARMY_CARM_SF_2, DSL, ""P"Загрузка боеприпасов",""P"1."W" Загрузка оружейный завод\n"P"2."W" Загрузка склад Army SF", "Выбрать", "Отмена");
			case 1: D(playerid, D_ARMY_CARM_SF_3, DSL, ""P"Разгрузка боеприпасов",""P"1."W" Разгрузка Army SF\n"P"2."W" Разгрузка Army LV", "Выбрать", "Отмена");
			}
			return 1;
		}
	case D_ARMY_CARM_SF_2: {
			if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return SendClientMessage(playerid, COLOR_GREY, "Вы не в матолёте");
			switch(listitem) {
			case 0: {
					SetPlayerCheckpoint(playerid, -22.8073,-273.1954,5.4297, 15.0);
					SendOk(playerid, "Место загрузки (оружейный завод) помечено на радаре");
					SetPVarInt(playerid,"MatsArmyCar",5);
				}
			case 1: {
					SetPlayerCheckpoint(playerid, -1607.3578,285.5919,7.1875, 15.0);
					SendOk(playerid, "Место загрузки (склад Army SF) помечено на радаре");
					SetPVarInt(playerid,"MatsArmyCar",6);
				}
			}
			return 1;
		}
	case D_ARMY_CARM_SF_3: {
			if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return SendClientMessage(playerid, COLOR_GREY, "Вы не в матолёте");
			switch(listitem) {
			case 0: {
					SetPlayerCheckpoint(playerid, -1607.3578,285.5919,7.1875, 5);
					SendOk(playerid, "Место разгрузки (Army SF) помечено на радаре");
					SetPVarInt(playerid,"MatsArmyCar",7);
				}
			case 1: {
					SetPlayerCheckpoint(playerid, 310.7923,1801.0048,17.6406, 5);
					SendOk(playerid, "Место загрузки (Army LV) помечено на радаре");
					SetPVarInt(playerid,"MatsArmyCar",8);
				}
			}
			return 1;
		}
	case D_ARMY_CARM_SF_4: {
			if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SendClientMessage(playerid, COLOR_GREY, "Вы не в грузовике");
			new mats = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(strval(inputtext) < 0)
			{
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите загрузить в грузовик:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"В грузовик поместится: "ORANGE"%d\n\
									"NO"*"G" В грузовике недостаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,zavodsklad,70-VG[vehicleid][vgAmount][0]);
				D(playerid, D_ARMY_CARM_SF_4, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				return true;
			}
			if(zavodsklad - mats < 0) {
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите загрузить в грузовик:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"В грузовик поместится: "ORANGE"%d\n\
									"NO"*"G" На оружейном складе недостаточно боеприпасов";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,zavodsklad,70-VG[vehicleid][vgAmount][0]);
				D(playerid, D_ARMY_CARM_SF_4, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				return 1;
			}
			if(VG[vehicleid][vgAmount][0] + mats > 70) {
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите загрузить в грузовик:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"В грузовик поместится: "ORANGE"%d\n\
									"NO"*"G" В грузовике недостаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,zavodsklad,70-VG[vehicleid][vgAmount][0]);
				D(playerid, D_ARMY_CARM_SF_4, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				return 1;
			}
			VG[vehicleid][vgAmount][0] += mats;
			zavodsklad -= mats;
			UpdateOtherData("gun_mats",zavodsklad);
			new string[128];
			format(string,sizeof(string),"Боеприпасы успешно загружены. В грузовике доступно: "ORANGE"%d"W" боеприпасов",VG[vehicleid][vgAmount][0]);
			SendOk(playerid,string);
		}
	case D_ARMY_CARM_SF_5: {
			if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return SendClientMessage(playerid, COLOR_GREY, "Вы не в матолёте");
			new mats = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(FI[fARMYLS][fMats] - mats < 0) {
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите загрузить в матолёт:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"В матолёт поместится: "ORANGE"%d\n\
									"NO"*"G" На складе Army SF недостаточно боеприпасов";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,FI[fARMYLS][fMats],70-VG[vehicleid][vgAmount][0]);
				D(playerid, D_ARMY_CARM_SF_5, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				return 1;
			}
			if(VG[vehicleid][vgAmount][0] + mats > 30000) {
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите загрузить в матолёт:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"В матолёт поместится: "ORANGE"%d\n\
									"NO"*"G" В матолёте недостаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,FI[fARMYLS][fMats],30000-VG[vehicleid][vgAmount][0]);
				D(playerid, D_ARMY_CARM_SF_5, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				return 1;
			}
			VG[vehicleid][vgAmount][0] += mats;
			FI[fARMYLS][fMats] -= mats;
			UpdateFraction(fARMYLS,"Mats",FI[fARMYLS][fMats]);
			new string[128];
			format(string,sizeof(string),"Боеприпасы успешно загружены. В матолёте доступно: "ORANGE"%d"W" боеприпасов",VG[vehicleid][vgAmount][0]);
			SendOk(playerid,string);
		}
	case D_ARMY_CARM_SF_6: {
			if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return SendClientMessage(playerid, COLOR_GREY, "Вы не в матолёте");
			new mats = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(VG[vehicleid][vgAmount][0] - mats < 0) {
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите разгрузить на склад:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"На склад поместится: "ORANGE"%d\n\
									"NO"*"G" В матолёте недостаточно боеприпасов";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYLS][fMats]);
				D(playerid, D_ARMY_CARM_SF_6, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				DeletePVar(playerid,"MatsArmyCar");
				return 1;
			}
			if(FI[fARMYLS][fMats] + mats > 1000000) {
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите разгрузить на склад:\n\n\
										Доступно боеприпасов: "ORANGE"%d\n\
										"W"На склад поместится: "ORANGE"%d\n\
										"NO"*"G" На складе недосаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYLS][fMats]);
				D(playerid, D_ARMY_CARM_SF_6, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				DeletePVar(playerid,"MatsArmyCar");
				return 1;
			}
			VG[vehicleid][vgAmount][0] -= mats;
			FI[fARMYLS][fMats] += mats;
			UpdateFraction(fARMYLS,"Mats",FI[fARMYLS][fMats]);
			new string[128];
			format(string,sizeof(string),"Боеприпасы успешно разгружены. В матолёте доступно: "ORANGE"%d"W" боеприпасов",VG[vehicleid][vgAmount][0]);
			SendOk(playerid,string);
		}
	case dProdList: {
			if (!response) return 1;
			new veh = GetPlayerVehicleID(playerid);
			new car = GetVehicleModel(veh);
			switch (listitem)
			{
			case 0: {
					//if (GetVehicleModel(veh) == 403 && !GetVehicleTrailer(veh)) return ErrorMessage(playerid,"У Вас нет цистерны с топливом");

					STRING_GLOBAL[0] = EOS;
					strcat(STRING_GLOBAL, ""YELLOW"№\t"GREEN"Название бизнеса\t"GREEN"Цена за ед продукта\t"GREEN"Требуется продуктов\n");

					new count_est = 0;
					for (new i; i < gBusinessCount; i++)
					{
						if (!gBusiness[i][bizzOwnerID]) continue;
						if (gBusiness[i][bizzProdOrder] <= 0) continue;
						if (count_est >= 30) break;
						switch (car)
						{
						case 456: if (gBusiness[i][bizzType] == 7) continue;//24-7
						case 403: if (gBusiness[i][bizzType] != 7) continue;//АЗС
						}
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s%d\t%s\t%d\t%d\n", STRING_GLOBAL, i + 1, gBusiness[i][bizzName], gBusiness[i][bizzProdOrderPrice], gBusiness[i][bizzProdOrder]);
						count_est++;
					}
					if (count_est == 0) return SendClientMessage(playerid,COLOR_GREY, "Бизнесмены не оставляли заявки на доставку продуктов");
					D(playerid, dProdPut, DSTH, "Бизнес", STRING_GLOBAL, "Выбрать", "Отмена");
				}
			case 1: {
					switch (car)
					{
					case 456: EnableGPSForPlayer(playerid, 1354.6313,363.6651,19.9837);
					case 403: EnableGPSForPlayer(playerid, -215.4123, -246.7570, 2.0283);
					}
					SendOk(playerid, "Метка для покупки была отмечена на радаре.");
				}
			}
		}
	case dProdPut: {
			if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			new veh = GetPlayerVehicleID(playerid);
			new car = GetVehicleModel(veh);
			if (GetVehicleModel(veh) == 403 && !GetVehicleTrailer(veh)) return SendClientMessage(playerid,COLOR_GREY, "У Вас нет цистерны с топливом");
			if (!response) return 1;
			prod_id[playerid] = strval(inputtext);
			new biz = prod_id[playerid] - 1;

			if (!GetPVarInt(playerid, "count_prod")) return SendClientMessage(playerid,COLOR_GREY, "В Вашей машине отсутствуют продукты");
			switch (car)
			{
			case 456: if (gBusiness[biz][bizzType] == 7) return SendClientMessage(playerid,COLOR_GREY, "Неверно указан номер бизнеса");
			case 403: if (gBusiness[biz][bizzType] != 7) return SendClientMessage(playerid,COLOR_GREY, "Неверно указан номер бизнеса");
			}
			new string[256];
			format(string, sizeof(string), ""W"Бизнес: "O"%s\n"W"Цена за 1 продукт: "GREEN"$%d\n"W"Требуется продуктов: "O"%d", gBusiness[biz][bizzName], gBusiness[biz][bizzProdOrderPrice], gBusiness[biz][bizzProdOrder]);
			D(playerid, DIALOG_NONE, DSM, ""P"Бизнес", string, "Закрыть", "");

			format(string, 144, ""W"%s: "GREEN"%d/2000\n"W"Бизнес: "GREEN"%s", (car == 456) ? ("Продукты") : ("Бензин"), GetPVarInt(playerid, "count_prod"), gBusiness[biz][bizzName]);
			UpdateDynamic3DTextLabelText(gPlayerProdText[playerid], COLOR_BLUE, string);

			SetPVarInt(playerid, "prod_id", biz + 1);
			if (gBusiness[biz][bizzID] != 20)
			{
				gPlayerProdCP[playerid] = CreateDynamicCP(gBusiness[biz][bizzX] + (3.5 * floatsin(-gBusiness[biz][bizzR], degrees)), gBusiness[biz][bizzY] + (3.5 * floatcos(-gBusiness[biz][bizzR], degrees)), gBusiness[biz][bizzZ], 8.0, -1, -1, playerid, 100.0);
				EnableGPSForPlayer(playerid, gBusiness[biz][bizzX] + (3.5 * floatsin(-gBusiness[biz][bizzR], degrees)), gBusiness[biz][bizzY] + (3.5 * floatcos(-gBusiness[biz][bizzR], degrees)), gBusiness[biz][bizzZ]);
			}
			else
			{
				gPlayerProdCP[playerid] = CreateDynamicCP(693.7745, 1948.5906, 5.5432, 8.0, -1, -1, playerid, 100.0);
				EnableGPSForPlayer(playerid, 693.7745, 1948.5906, 5.5432);
			}
			return 1;
		}
	case dProdRent: {
			if (GetPlayerState(playerid) != 2) return 1;
			if (!response) return RemovePlayerFromVehicleAC(playerid);
			if (GetPlayerMoneyEx(playerid) < 50) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств"), RemovePlayerFromVehicleAC(playerid);
			GiveMoney(playerid, -50, "аренда транспорта(развозчики)");
			new veh = GetPlayerVehicleID(playerid);
			DeletePVar(playerid, "prod_id");
			SetPVarInt(playerid, "prod_vehicle_id", veh);
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 403)
			{
				new string[128];
				format(string, sizeof(string), "Загружено: "GREEN"%d/2000\n"W"Бизнес: "GREEN"Отсутствует", GetPVarInt(playerid, "count_prod"));
				gPlayerProdText[playerid] = CreateDynamic3DTextLabel(string, -1, 0.0, 0.0, 0.0, 15.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
				Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL, gPlayerProdText[playerid], E_STREAMER_ATTACH_OFFSET_Y, -0.5);
				Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL, gPlayerProdText[playerid], E_STREAMER_ATTACH_OFFSET_Z, 2.0);
			}
			SendOk(playerid, "Транспорт для развозки продуктов/бензина арендован. Управление заказами - "W"/prods");
			return 1;
		}
	case D_BUKSIR: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(PI[playerid][pCash] < 500) {
				SendClientMessage(playerid, COLOR_GREY, "У Вас не достаточно денег для аренды буксира");
				RemovePlayerFromVehicleAC(playerid);
				return 0;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			SendOk(playerid, "Для просмотра доступных заказов, введите - /repairs");
			GiveMoney(playerid,-500,"аренда буксира");
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			SetPVarInt(playerid,"mehjob", GetPlayerVehicleID(playerid));
			PlayerMehText[playerid] = CreateDynamic3DTextLabel(""G"Топлива нет",-1,0.0,0.0,0.0,15.0,INVALID_PLAYER_ID,GetPlayerVehicleID(playerid));
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,PlayerMehText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 2.0);
			return 1;
		}
	case dEatRent: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(PI[playerid][pCash] < 500) {
				SendClientMessage(playerid, COLOR_GREY, "У Вас не достаточно денег для аренды авто для продажи еды");
				RemovePlayerFromVehicleAC(playerid);
				return 0;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			GiveMoney(playerid,-500,"аренда развозчика еды");
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			SetPVarInt(playerid,"eatjob", GetPlayerVehicleID(playerid));
			PlayerEatText[playerid] = CreateDynamic3DTextLabel(""G"Хот-догов: "P"0 ед.",-1,0.0,0.0,0.0,15.0,INVALID_PLAYER_ID,GetPlayerVehicleID(playerid));
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,PlayerEatText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 2.0);
			return 1;
		}
	case D_MEDCARD:{
			if(!response) return 1;
			if(PI[playerid][pCash] < 5000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			PI[playerid][pMedCard] = 1;
			UpdatePlayerData(playerid,"MedCard",1);
			D(playerid,DIALOG_NONE,DSM, ""P"Медицинская карта",""W"Поздравляем с покупкой мед. карты!\n\nЧтобы показать мед. карту, используйте"ORANGE" /medcard","Закрыть","");
			GiveMoney(playerid,-5000,"покупка мед карты");
		}
	case D_MEDSEX:{
			if(!response) return D(playerid,D_HOSPITAL,DSL,""P"Регистратура", ""P"1."W" Что это за место?\n"P"2."W" Трансгендерный переход\n"P"3."W" Получение медицинской карты\n"P"4."W" Лечение наркозависимости","Выбрать","Отмена");
			if(GetPlayerMoneyEx(playerid) < 50000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег для операции. Стоимость операции - $50.000");
			use_medsex(playerid);
			GiveMoney(playerid,-50000,"смена пола");
		}
	case D_SU: {
			if(!response) return 1;
			SetPVarInt(playerid,"su_listitem",listitem);
			D(playerid,D_SU_2,DSL,""P"Преступление",suspect_player[listitem][suspect_name_reason],"Выбрать","Назад");
			return 1;
		}
	case D_SU_2: {
			new params[2];
			params[1] = GetPVarInt(playerid,"su_listitem");
			new string[1024]; 
			if(!response || suspect_player[params[1]][suspect_level][listitem] == -1) {
				strcat(string, ""W"");
				for(new i=0; i<14; i++) {
					format(string,sizeof(string),"%s%s\n",string,suspect_player[i][suspect_name_folder]);
				}
				D(playerid,D_SU,DSL,""P"Преступление",string,"Выбрать","Закрыть");
				DeletePVar(playerid,"su_listitem");
				return 1;
			}
			params[0] = GetPVarInt(playerid,"su_player");
			format(string,128,"%s объявил Вас в розыск. Причина: %s",player_name[playerid],(inputtext));
			SendClientMessage(params[0],CBADINFO,string);
			PI[params[0]][pSearch] += suspect_player[params[1]][suspect_level][listitem];
			UpdatePlayerData(params[0],"pSearch",PI[params[0]][pSearch]);
			
			SetPlayerCriminal(params[0],player_name[playerid], (inputtext));
			format(string,220,"[Внимание] %s объявлен(а) в розыск [%d/6]. Обвинитель: %s. Причина: %s",player_name[params[0]],PI[params[0]][pSearch],player_name[playerid],(inputtext));
			SendTeamMessage(CDEPARTMENT,string);
			SetPlayerWantedLevel(params[0], PI[params[0]][pSearch]);
			DeletePVar(playerid,"su_player");
			DeletePVar(playerid,"su_listitem");
			return 1;
		}
	case D_TAZER: {
			if(!response ) return 1;
			for(new i; i <= 11; i++) {
				new gunid, ammo, storeslot = -1,string[200];
				GetPlayerWeaponData(playerid, i, gunid,ammo);
				new gun_text[32];
				GetWeaponName(gunid,gun_text,32);
				switch(gunid) {
				case 24,25: if(strfind(inputtext,gun_text) != -1) storeslot ++;
				}
				if(!gunid || !ammo || storeslot == -1) continue;
				if(storeslot != -1) {
					format(string,sizeof(string),""P"%s"W" успешно заряжено парализующими патронами [2 шт]",gun_text);
					SendUse(playerid,string);

					format(string, sizeof(string),"заряжает %s парализующими патронами",gun_text);
					MeAction(playerid,string);

					TI[playerid][tTazers][0] = 2;
					TI[playerid][tTazers][1] = gunid;
					break;
				}
			}
			return 1;
		}
	case dInviteSkin: {
			new string[156];
			format(string, sizeof(string), ""P"%s"W" предложил Вам вступить в организацию "ORANGE"%s",player_name[playerid],FI[PI[playerid][pMember]][fName]);
			SendUse(GetPVarInt(playerid,"invkot"), string);
			SendClientMessage(GetPVarInt(playerid,"invkot"), COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

			format(string, sizeof(string),"Вы предложили "P"%s"W" вступить в организацию "ORANGE"%s",player_name[GetPVarInt(playerid,"invkot")],FI[PI[playerid][pMember]][fName]);
			SendUse(playerid, string);
			
			SetPVarInt(GetPVarInt(playerid,"invkot"),"invstat",GetPVarInt(playerid,"invkot"));
			SetPVarInt(GetPVarInt(playerid,"invkot"),"invinv",playerid);
			SetPVarInt(GetPVarInt(playerid,"invkot"),"invskin",gFractionSkin[PI[playerid][pMember]][listitem]);
			
			DeletePVar(playerid, "invkot");
		}
	case dFractionSkin: {
			if(!response) return 1;
			new actplayerid = GetPVarInt(playerid,"params[0]");
			if(!IsPlayerConnected(actplayerid) || PI[actplayerid][pMember] != PI[playerid][pMember]) return 1;
			new fractionid = PI[actplayerid][pMember];
			new skinid = gFractionSkin[fractionid][listitem];
			if(skinid == PI[actplayerid][pFracSkin]) return 1;
			new mes[213];
			format(mes,sizeof(mes),"Ваша внешность была изменена лидером организации "P"%s[%d]",player_name[playerid],playerid);
			SendUse(actplayerid,mes);
			format(mes,sizeof(mes),"Вы изменили внешность игрока "P"%s[%d]",player_name[actplayerid],actplayerid);
			SendUse(playerid,mes);
			PI[actplayerid][pFracSkin] = skinid;
			UpdatePlayerData(actplayerid,"pModel",skinid);
			if(start_work[actplayerid]) A_SetPlayerSkin(actplayerid,skinid);
		}
	case dRank: {
			if(!response) return 1;
			if(listitem == -1) return 1;
			if(PI[playerid][pRank] <= listitem) return SendClientMessage(playerid, COLOR_GREY, "Ваш ранг недостаточен");
			new rank_id = GetPVarInt(playerid,"id_giverank"),string[128];

			format(string,sizeof(string),"Вы повысили/понизили "P"%s"W" до ранга "ORANGE"%s",player_name[rank_id],GetRankName(PI[playerid][pMember],listitem+1));
			SendUse(playerid,string);

			format(string,sizeof(string),"Вас повысил/понизил "P"%s"W" до ранга "ORANGE"%s",player_name[playerid],GetRankName(PI[playerid][pMember],listitem+1));
			SendUse(rank_id,string);

			PI[rank_id][pRank] = listitem + 1;
			UpdatePlayerData(rank_id,"pRank",PI[rank_id][pRank]);

			new rangs[4];
			format(rangs,sizeof(rangs),"%d",PI[rank_id][pRank]);
			FracLog(LOGS_RANK,player_name[playerid],player_name[rank_id],rangs);
			DeletePVar(playerid,"id_giverank");
			return 1;
		}
	case D_CALL_SERVICESS: {
			if(!response) return 1;
			if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "Для вызова служб спасения выйдите из помещения");
			new Float:pos[3];
			GetPlayerPos(playerid,pos[0],pos[1],pos[2]); 
			switch(listitem) {
			case 0: {
					new bool:online = false;
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(!IsACop(i) && !start_work[playerid]) continue;
						if(!IsPlayerInRangeOfPoint(i, 7000.0, pos[0],pos[1],pos[2])) continue;
						online = true;
					}
					if(!online) return SendClientMessage(playerid, COLOR_GREY, "Диспетчер: в данный момент, нет полицейских поблизости");
					SendOk(playerid, "Диспетчер: Ваш вызов принят, ожидайте...");
					new string[220];
					format(string,220,"[CALL CENTER] Поступил новый вызов от %s",player_name[playerid]);
					SendTeamMessage(0x31cf63FF,string);
					SetPVarInt(playerid,"call_police",1);
				}
			case 1: {
					new bool:online = false;
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(!IsAMedic(i) && !start_work[playerid]) continue;
						if(!IsPlayerInRangeOfPoint(i, 7000.0, pos[0],pos[1],pos[2])) continue;
						online = true;
					}
					if(!online) return SendClientMessage(playerid, COLOR_GREY, "Диспетчер: в данный момент, нет медиков поблизости");
					SendOk(playerid, "Диспетчер: Ваш вызов принят, ожидайте...");
					SetPVarInt(playerid,"call_medics",1);
				}
			case 2: {
					new online = 0;
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(PI[i][pJob] != 2) continue;
						if(!IsPlayerInRangeOfPoint(i, 7000.0, pos[0],pos[1],pos[2])) continue;
						online = true;
					}
					if(!online) return SendClientMessage(playerid, COLOR_GREY, "Диспетчер: в данный момент, нет механиков поблизости");
					SendOk(playerid, "Диспетчер: Ваш вызов принят, ожидайте...");
					SetPVarInt(playerid,"call_mechanics",1);
				}
			}
		}
	case D_TOW: {
			if(!response) return true;
			new trailer = GetPlayerVehicleID(playerid);
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || !trailer) return true;
			new offer = GetPVarInt(playerid,"towoffer");
			new offee = GetPVarInt(playerid,"towoffee");
			if(offee != playerid) return SendClientMessage(playerid, COLOR_GREY, "Ошибка 125");
			if(!IsPlayerInAnyVehicle(offer)) {
				SendClientMessage(offer, COLOR_GREY,"Игрок должен находится в т/с");
				SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в т/с");
				return true;
			}
			if(GetPlayerDistanceToPlayer(playerid,offer) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(offer)) {
				SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");
				SendClientMessage(offer, COLOR_GREY,"Вы далеко друг от друга");
				return true;
			}
			RemovePlayerFromVehicleAC(playerid);			
			new vehicleid = TI[offer][tArendaCar];
			SetTimerEx("AttachTrailerToVehicleEx",3000,false,"ii",trailer,vehicleid);
			SetPVarInt(playerid,"towvid",vehicleid);
			SetPVarInt(playerid,"towactvid",trailer);
			SendOk(playerid,"Т.С. будет прицеплено через 3 секунды. Чтобы отцепить, используйте /untow");
		}
	case D_MAKEGUN: {
			if(!response) return 1;
			new needgun = MakeGunData[listitem][mgunamount];
			new bool:noneedgun;
			SetPVarInt(playerid,"noneedgun",0);
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == MakeGunData[listitem][mgunid]) {noneedgun = true; SetPVarInt(playerid,"noneedgun",1); break;}
			}
			if(PI[playerid][pMats] < needgun && !noneedgun) {
				new string[64];
				format(string, sizeof(string), "Вам нужно %d ед. оружия для сборки этого оружия",needgun);
				SendClientMessage(playerid, COLOR_GREY,string);
				return 1;
			}
			D(playerid,D_MAKEGUN_2,DSI, ""P"Сборка оружия","\n\n"W"Сколько патронов вы хотите использовать для этого оружия?\n\n","Собрать","Отмена");
			SetPVarInt(playerid,"makegun_listitem",listitem);
			return 1;
		}
	case D_MAKEGUN_2: {
			if(!response) return 1;
			new ammos = strval(inputtext);
			new listitem_gun = GetPVarInt(playerid,"makegun_listitem");
			if(ammos < 1 || ammos > 200) return D(playerid,D_MAKEGUN_2,DSI, ""P"Сборка оружия","\n\n"W"Сколько патронов вы хотите использовать для этого оружия?\n\n"NO"*"G" От 1 до 200 патронов\n\n","Собрать","Отмена");
			if(PI[playerid][pMats] < (ammos+MakeGunData[listitem_gun][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно боеприпасов");
			if(PI[playerid][pMats] < ammos && GetPVarInt(playerid,"noneedgun")) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно боеприпасов");
			DeletePVar(playerid,"makegun_listitem");
			MeAction(playerid,"собрал(а) оружие");
			if(!GetPVarInt(playerid,"noneedgun")) PI[playerid][pMats] -= MakeGunData[listitem_gun][mgunamount];
			SetPVarInt(playerid,"noneedgun",0);
			UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
			GivePlayerWeapon(playerid,MakeGunData[listitem_gun][mgunid],ammos);
			return 1;
		}
	case D_BIZWAR: {
			if(response) {
				D(playerid, D_BIZWAR_LIST, DSL, ""P"Выбор места", ""P"1."W" Вестоун\n"P"2."W" Лесопилка\n"P"3."W" Мантговери\n"P"4."W" Угольная шахта\n"P"5."W" Химзавод\n"P"6."W" Мясокомбинат\n"P"7."W" Ферма", "Выбрать", "Отмена");
			}
			else {
				SendClientMessage(playerid, COLOR_GREY, "Вы отменили захват");
				DeletePVar(playerid, "bizwar_id");
			}
			return 1;
		}
	case D_BIZWAR_LIST: {
			if(response) {
				new i = GetPVarInt(playerid,"bizwar_id");
				DeletePVar(playerid, "bizwar_id");

				if(BizWarTime[0] > 0 || BizWarTime[1] > 0) return SendClientMessage(playerid, COLOR_GREY, "Война за бизнес уже идет");
				if(BizHourTime > 0) return SendClientMessage(playerid, COLOR_GREY, "Стрелы за бизнес проходят 1 раз в 30 минут");
				if(PI[playerid][pMember] == gBusiness[i][bizzMafia]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете захватить собственный бизнес");
				if(!IsPlayerInBandOnline(gBusiness[i][bizzMafia])) return SendClientMessage(playerid, COLOR_GREY, "Мафия на которую Вы собираетесь напасть нет в сети / Меньше трёх человек");
				new gang1 = -1;
				switch(PI[playerid][pMember]) {
				case fLCN: gang1 = MOROZ_LCN;
				case fYAKUZA: gang1 = MOROZ_YAKUZA;
				case fRM: gang1 = MOROZ_RM;
				}
				if(gang1 != -1) {
					if(fracmoroz[gang1] > unix) return SendClientMessage(playerid, COLOR_GREY, "Ваша мафия не может принимать участия в войнах. (заморожена администратором)");
				}
				war_gangzone = listitem;
				biz_war_gangzone = GangZoneCreate(mafia_zone[war_gangzone][0], mafia_zone[war_gangzone][1], mafia_zone[war_gangzone][2], mafia_zone[war_gangzone][3]);
				GangZoneShowForAll(biz_war_gangzone, gFractionSpawn[MZInfo[bFrakVlad]][fracColor]);

				BizWarTime[0] = 60*5;
				MZInfo[bNapad] = PI[playerid][pMember];
				MZInfo[bFrakVlad] = gBusiness[i][bizzMafia];
				MZInfo[bBiz] = i;
				MZInfo[bCountDead][MZInfo[bNapad]] = 0;
				MZInfo[bCountDead][MZInfo[bFrakVlad]] = 0;

				GangZoneFlashForAll(biz_war_gangzone, gFractionSpawn[MZInfo[bNapad]][fracColor]);
				
				new strela[32];
				switch(war_gangzone) {
				case 0: strela = "Вестоун";
				case 1: strela = "Лесопилка";
				case 2: strela = "Мантговери";
				case 3: strela = "Угольная шахта";
				case 4: strela = "Химзавод";
				case 5: strela = "Мясокомбинат";
				case 6: strela = "Ферма";
				}
				
				if(QuestProgress[playerid][28] < 5 && AcceptQuest[playerid][28] != 0) QuestProgress[playerid][28] ++,save_quest(playerid,28);
				if(QuestProgress[playerid][28] == 5 && AcceptQuest[playerid][28] != 0) {
					D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Провокация захвата'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
				}
				
				new string[186];
				format(string,sizeof(string), "%s забила стрелу Вашей мафии за бизнес %s. Место встречи: %s", GetMN(PI[playerid][pMember]),gBusiness[i][bizzName],strela);
				SendFamilyMessage(gBusiness[i][bizzMafia],0xFF0000FF,string);
				SendFamilyMessage(gBusiness[i][bizzMafia],0xFF0000FF,"Встреча состоится через 5 минут");
				format(string,sizeof(string),"Начал захват бизнеса: %s",player_name[playerid]);
				SendFamilyMessage(gBusiness[i][bizzMafia],-1,string);

				format(string,sizeof(string), "Ваша мафия забила стрелу %s за бизнес %s. Место встречи: %s", GetMN(gBusiness[i][bizzMafia]),gBusiness[i][bizzName],strela);
				SendFamilyMessage(PI[playerid][pMember],0xFF0000FF,string);
				SendFamilyMessage(PI[playerid][pMember],0xFF0000FF,"Встреча состоится через 5 минут");
				format(string,sizeof(string),"Начал захват бизнеса: %s",player_name[playerid]);
				SendFamilyMessage(PI[playerid][pMember],-1,string);
			}
			else {
				SendClientMessage(playerid, COLOR_GREY, "Вы отменили захват");
				DeletePVar(playerid, "bizwar_id");
			}
			return 1;
		}
	case D_ANIM: {
			if(!response) return 1;
			switch(listitem) {
			case 0: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
			case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
			case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
			case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
			case 4: ApplyAnimation(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
			case 5: ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
			case 6: ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
			case 7: ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
			case 8: ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
			case 9: ApplyAnimation(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
			case 10: ApplyAnimation(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
			case 11: ApplyAnimation(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
			case 12: ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
			case 13: ApplyAnimation(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
			case 14: ApplyAnimation(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
			case 15: ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
			case 16: ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
			case 17: ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
			case 18: ApplyAnimation(playerid,"PED","handsup",4.1,1,0,0,0,0,0);
			case 19: ApplyAnimation(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
			case 20: ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
			case 21: ApplyAnimation(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
			case 22: ApplyAnimation(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
			case 23: ApplyAnimation(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
			case 24: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
			case 25: ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
			case 26: ApplyAnimation(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
			case 27: ApplyAnimation(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
			case 28: ApplyAnimation(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
			case 29: ApplyAnimation(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
			case 30: ApplyAnimation(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
			case 31: ApplyAnimation(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
			case 32: ApplyAnimation(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
			case 33: ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
			case 34: ApplyAnimation(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
			case 35: ApplyAnimation(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
			case 36: ApplyAnimation(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
			case 37: ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
			case 38: ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
			case 39: ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
			case 40: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
			case 41: ApplyAnimation(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
			case 42: ApplyAnimation(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
			case 43: ApplyAnimation(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
			case 44: ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
			case 45: ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
			case 46: ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
			case 47: ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
			case 48: ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
			case 49: ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
			case 50: ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
			case 51: ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
			case 52: ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
			case 53: ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
			case 54: ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
			case 55: ApplyAnimation(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
			case 56: ApplyAnimation(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
			case 57: ApplyAnimation(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
			case 58: ApplyAnimation(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
			case 59: ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
			case 60: ApplyAnimation(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
			case 61: ApplyAnimation(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
			case 62: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
			case 63: ApplyAnimation(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
			}
			SetPVarInt(playerid,"Animation", 2);
			TextDrawShowForPlayer(playerid, AnimDraw);
			return 1;
		}
	case D_TAKE: {
			if(!response) return DeletePVar(playerid,"takelic");
			new acter = GetPVarInt(playerid,"takelic");
			if(!IsPlayerStream(10.0, playerid, acter)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с Вами");
			if(listitem < 4) {
				if(!lic[acter][listitem]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет этой лицензии");
			}
			new string[156];
			if(listitem >= 4) {
				switch(listitem) {
				case 4: {
						if(!GetInvent(acter, 2)) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет наркотиков");
						format(string, sizeof(string), "Вы изъяли у "P"%s"W" наркотики", player_name[acter]);
						SendUse(playerid, string);
						format(string, sizeof(string), "Сотрудник "P"%s"W" изъял у Вас наркотики", player_name[playerid]);
						SendUse(acter, string);
						format(string, sizeof(string), "изъял(а) наркотики у %s", player_name[acter]);
						MeAction(playerid,string);
						DeleteItem(acter, 2, GetInvent(acter, 2));
					}
				case 5: {
						if(!GetInvent(acter, 453)) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет материалов");
						format(string, sizeof(string), "Вы изъяли у "P"%s"W" материалы", player_name[acter]);
						SendUse(playerid, string);
						format(string, sizeof(string), "Сотрудник "P"%s"W" изъял у Вас материалы", player_name[playerid]);
						SendUse(acter, string);
						format(string, sizeof(string), "изъял(а) материалы у %s", player_name[acter]);
						MeAction(playerid,string);
						DeleteItem(acter, 453, GetInvent(acter, 453));
					}
				}
				DeletePVar(playerid,"takelic");
				return 1;
			}
			new lics[28];
			switch(listitem) {
			case 0: lics = "водительские права";
			case 1: lics = "пилота";
			case 2: lics = "водного транспорта";
			case 3: lics = "на оружие";
			}
			format(string, sizeof(string), "Вы изъяли у "P"%s"W" лицензию %s", player_name[acter],lics);
			SendUse(playerid, string);
			format(string, sizeof(string), "Сотрудник "P"%s"W" изъял у Вас лицензию %s", player_name[playerid],lics);
			SendUse(acter, string);
			format(string, sizeof(string), "изъял(а) лицензию %s у %s",lics, player_name[acter]);
			MeAction(playerid,string);
			lic[acter][listitem]=0;
			UpdateLicenses(acter);
			DeletePVar(playerid,"takelic");
			return 1;
		}
	case D_ATM: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					static const f_str[] = ""W"На Вашем основном банковском счету доступно: "ORANGE"$%d\n\n"W"Введите сумму, которую хотите снять с основного банковского счёта:";
					new string[sizeof(f_str) +1 + (-2 + 11)];
					format(string,sizeof(string),f_str,PI[playerid][pBank]);
					D(playerid,D_ATM_INPUT,DSI, ""P"Снять деньги",string,"Снять","Отмена");
				}
			case 1: {
					static const f_str[] = ""W"На Вашем счету доступно: "ORANGE"$%d\n\n"W"Введите сумму, которую хотите положить на основной банковский счёт:";
					new string[sizeof(f_str) +1 + (-2 + 11)];
					format(string,sizeof(string),f_str,PI[playerid][pCash]);
					D(playerid,D_ATM_PUT,DSI, ""P"Положить деньги",string,"Положить","Отмена");
				}
			case 2: {
					if(!PI[playerid][pPhone]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет мобильного телефона");
					static const f_str[] = ""W"Доступно средств наличными: "ORANGE"$%d\n\
											"W"На Вашем мобильном счету доступно: "ORANGE"$%d\n\n\
											"W"Введите сумму, которую хотите положить на мобильный счёт:";
					new string[sizeof(f_str) +1 + (-2 + 11)];
					format(string,sizeof(string),f_str,PI[playerid][pCash],PI[playerid][pMobile]);
					D(playerid,D_ATM_PHONE,DSI, ""P"Оплата мобильного",string,"Снять","Отмена");
				}
			}
		}
	case D_ATM_INPUT: {
			if(!response) return ShowATMMenu(playerid);
			new amount = strval(inputtext);
			new atmID = GetPVarInt(playerid,"atm_id");
			
			if(ATMData[atmID][atm_cash] < amount) return D(playerid,DIALOG_NONE,DSM, ""P"Выдача наличных",""W"В банкомате недостаточно средств","Закрыть","");
			if(amount < 1 || amount > 50000) return D(playerid,D_ATM_INPUT,DSI, ""P"Выдача наличных","\n\n"W"Введите сумму, которую хотите снять с основного банковского счёта:\n\n"NO"*"G" От 1$ до 50000$\n\n","Снять","Назад");
			if(ATMData[atmID][atm_cash] < amount) return D(playerid,D_ATM_INPUT,DSI, ""P"Выдача наличных",""W"Введите сумму, которую хотите снять с основного банковского счёта:\n\n"NO"*"G" Недостаточно средств","Снять","Назад");
			if(PI[playerid][pBank] < amount) return D(playerid,D_ATM_INPUT,DSI, ""P"Выдача наличных",""W"Введите сумму, которую хотите снять с основного банковского счёта:\n\n"NO"*"G" Недостаточно средств","Снять","Назад");

			PI[playerid][pBank] -= amount;
			UpdatePlayerData(playerid,"pBank",PI[playerid][pBank]);
			GiveMoney(playerid, amount,"снятие с банк счета");
			
			ATMData[atmID][atm_cash] -= amount;
			UpdateATMLabel(atmID);
			
			new query[128];
			mysql_format(connects, query, sizeof(query),"UPDATE `atms` SET `cash` = '%d' WHERE `ID` = '%d'", ATMData[atmID][atm_cash], atmID);
			mysql_tquery(connects, query);

			static const f_str[] = ""W"Снято средств:\t\t"ORANGE"$%d"W"\n\
								"W"Баланс:\t\t\t"ORANGE"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PI[playerid][pBank]);
			D(playerid,DIALOG_NONE,DSM, ""P"Выдача наличных",string,"Закрыть","");
		}
	case D_ATM_PUT: {
			if(!response) return ShowATMMenu(playerid);
			new amount = strval(inputtext);
			new atmID = GetPVarInt(playerid,"atm_id");
			if(amount < 1 || amount > 50000) return D(playerid,D_ATM_PUT,DSI, ""P"Пополнение счёта","\n\n"W"Введите сумму которую хотите положить на основной банковский счёт:\n\n"NO"*"G" От 1$ до 50000$\n\n","Положить","Назад");
			if(PI[playerid][pCash] < amount) return D(playerid,D_ATM_PUT,DSI, ""P"Пополнение счёта",""W"Введите сумму которую хотите положить на основной банковский счёт:\n\n"NO"*"G" Недостаточно средств","Положить","Назад");
			PI[playerid][pBank] += amount;
			UpdatePlayerData(playerid,"pBank",PI[playerid][pBank]);
			GiveMoney(playerid, -amount,"пополнение банк счета");
			
			ATMData[atmID][atm_cash] += amount;
			UpdateATMLabel(atmID);
			
			new query[128];
			mysql_format(connects, query, sizeof(query),"UPDATE `atms` SET `cash` = '%d' WHERE `ID` = '%d'", ATMData[atmID][atm_cash], atmID);
			mysql_tquery(connects, query);

			static const f_str[] = ""W"Внесено средств:\t\t"ORANGE"$%d\n\
								"W"Баланс:\t\t\t"ORANGE"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,amount,PI[playerid][pBank]);
			D(playerid,DIALOG_NONE,DSM, ""P"Пополнение счёта",string,"Закрыть","");
		}
	case D_ATM_PHONE: {
			if(!response) return ShowATMMenu(playerid);
			new amount = strval(inputtext);
			if(amount < 1 || amount > 10000) return D(playerid,D_ATM_PHONE,DSI, ""P"Оплата мобильного счёта",""W"Введите сумму которую хотите положить:\n\n"NO"*"G" От $1 до $10.000","Положить","Назад");
			if(GetPlayerMoneyEx(playerid) < amount) return D(playerid,D_ATM_PHONE,DSI, ""P"Оплата мобильного счёта",""W"Введите сумму которую хотите положить:\n\n"NO"*"G" Недостаточно средств","Положить","Назад");
			GiveMoney(playerid,-amount,"пополнение моб.телефона");
			PI[playerid][pMobile] += amount; 
			UpdatePlayerData(playerid,"pMobile",PI[playerid][pMobile]);
			static const f_str[] = ""W"Внесено средств:\t\t"ORANGE"$%d"W"\n\
								"W"На мобильном счёте:\t\t"ORANGE"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PI[playerid][pMobile]);
			D(playerid,DIALOG_NONE,DSM, ""P"Оплата мобильного счёта",string,"Закрыть","");
		}
	case D_TICKET: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					new price;
					for(new i = 0; i < TOTALTICKETS[playerid]; i++) price += TL[playerid][i][tPrice];
					static const f_str[] = ""W"Вы собираетесь оплатить "YELLOW"%i"W" штрафов на сумму: "GREEN"$%i\n"W"Вы действительно хотите произвести оплату?";
					new string[sizeof(f_str) +1 + (-2 + 5)];
					format(string,sizeof(string),f_str,TOTALTICKETS[playerid],price);
					D(playerid,D_TICKET_1,DSM, ""P"Оплата штрафа",string,"Оплатить","Назад");
				}
			default: SetPVarInt(playerid,"ticket",listitem), D(playerid,D_TICKET_2,DSL,""P"Штрафы",""GREEN"1."W" Оплатить штраф\n"GREEN"2."W" Информация о штрафе","Далее","Назад");
			}
		}
	case D_TICKET_1: {
			if(!response) return GetTickets(playerid);
			new price;
			for(new i = 0; i < TOTALTICKETS[playerid]; i++) price += TL[playerid][i][tPrice];
			if(PI[playerid][pBank] < price) return SendClientMessage(playerid, COLOR_GREY, "На основном банковском счету недостаточно средств"), GetTickets(playerid);
			PI[playerid][pBank] -= price;
			UpdatePlayerData(playerid,"pBank",PI[playerid][pBank]);
			new query[128];
			for(new i = 0; i < TOTALTICKETS[playerid]; i++) {
				mysql_format(connects, query, sizeof(query),"DELETE FROM `"TABLE_TICKETS"` WHERE `id` = '%i'",TL[playerid][i][tID]);
				mysql_tquery(connects,query,"","");
			}
			static const f_str[] = "Вы оплатили "P"%i"W" штрафов на сумму "ORANGE"$%i";
			new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 8)];
			format(string,sizeof(string),f_str, TOTALTICKETS[playerid],price);
			SendUse(playerid,string);
			return 1;
		}
	case D_TICKET_2: {
			if(!response) return GetTickets(playerid);
			new i = GetPVarInt(playerid,"ticket")-1;
			switch(listitem) {
			case 0: {
					if(PI[playerid][pBank] < TL[playerid][i][tPrice]) return SendClientMessage(playerid, COLOR_GREY, "На основном банковском счету недостаточно средств"), GetTickets(playerid);
					PI[playerid][pBank] -= TL[playerid][i][tPrice];
					UpdatePlayerData(playerid,"pBank",PI[playerid][pBank]);
					new query[128];
					mysql_format(connects, query, sizeof(query),"DELETE FROM `"TABLE_TICKETS"` WHERE `id` = '%i'",TL[playerid][i][tID]);
					mysql_tquery(connects,query,"","");
					static const f_str[] = "Вы оплатили штраф: №%i";
					new string[sizeof(f_str) +1 + (-2 + 7)];
					format(string,sizeof(string),f_str, i+1);
					SendOk(playerid,string);
					return GetTickets(playerid);
				}
			case 1: {
					static const f_str[] = ""W"Штраф №%i\n\n\
										Причина: "NO"%s\n\
										"W"Сумма штрафа: {FACC2E}%i вирт\n\
										"W"Кем был выдан: {1DADF0}%s\n\
										"W"Дата выдачи: {04B404}%s";
					new string[sizeof(f_str) +1 + (-2 + 64) + (-2 + 7) + (-2 + MAX_PLAYER_NAME) + (-2 + 32)];
					format(string,sizeof(string),f_str,i+1,TL[playerid][i][tReason],TL[playerid][i][tPrice],
					TL[playerid][i][tName],TL[playerid][i][tDate]);
					return D(playerid,D_TICKET_3,DSM, ""P"Информация",string,"Назад","");
				}
			}
			return true;
		}
	case D_TICKET_3: return GetTickets(playerid);
	case D_TIPSTER: {
			new veh = GetPVarInt(playerid,"veh");
			if(!response) {
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,false,objective);
				DeletePVar(playerid,"veh");
				return 1;
			}
			switch(listitem) {
			case 0: {
					if(GetPVarInt(playerid,"tipster")) {
						SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть жучок");
						GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,false,objective);
						return 1;
					}
					SendUse(playerid, "Вы взяли "P"1"W" жучок. Для использования,введите: "W"/tipster");
					SetPVarInt(playerid,"tipster", true);
					MeAction(playerid,"взял(а) жучок");
				}
			}
			GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,false,objective);
			DeletePVar(playerid,"veh");
			return 1;
		}
	case D_FUEL: {
			if(!response) return 1;
			new fuel = GetPVarInt(playerid,"azs_id");
			new vehicleid = GetPlayerVehicleID(playerid);
			new modelid = GetVehicleModel(vehicleid) - 400;
			new tank = strval(inputtext);
			if(tank < 1 || tank > 100 || VehicleInfo[vehicleid][vFuel]+tank > gTransport[modelid][trTank]) {
				static const f_str[] = "\n"W"Укажите на сколько литров заправить ваше Т/С:\n\nДоступно литров в баке: {FF9968}%.0f"W"\nВместимость бака: {FF9968}%d"W"\nМожно заправить на: {FF9968}%.0fл"W"\nСтоимость 1л: "GREEN"$%d\n";
				new string[sizeof(f_str) +1 + 30];
				format(string, sizeof(string), f_str, VehicleInfo[vehicleid][vFuel],gTransport[modelid][trTank],gTransport[modelid][trTank]-VehicleInfo[vehicleid][vFuel],gBusiness[fuel][bizzPrice]);
				D(playerid,D_FUEL,DSI, ""P"Заправка",string,"Заправить", "Отмена");
				return 1;
			}
			SetPVarInt(playerid,"tank_fill",tank);
			new string[128];
			format(string, sizeof(string), " \n  \n"W"Вы действительно хотите заправиться на "CA"%d"W" литров?\nСтоимость: "GREEN"$%d\n\n",
			tank,tank*gBusiness[fuel][bizzPrice]);
			D(playerid,D_FUEL_2,DSM, ""P"Заправка",string,"Да", "Нет");
			return 1;
		}
	case D_FUEL_2: {
			if(!response) return DeletePVar(playerid,"tank_fill");
			new fuel = GetPVarInt(playerid,"azs_id");
			new price = GetPVarInt(playerid,"tank_fill")*gBusiness[fuel][bizzPrice];
			if(PI[playerid][pCash] < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			GiveMoney(playerid,-price,"заправка авто АЗС");
			if(gBusiness[fuel][bizzProduct] - GetPVarInt(playerid,"tank_fill") > 0) {
				gBusiness[fuel][bizzProduct] -= GetPVarInt(playerid,"tank_fill");
				bizz_pay(fuel,price);
			}
			if(QuestProgress[playerid][44] == 0 && AcceptQuest[playerid][44] != 0)
			{
				QuestProgress[playerid][44] ++;
				save_quest(playerid,44);
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
			}
			SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, lights, alarm, doors, bonnet, boot, objective);
			
			SetPVarInt(playerid,"tank_vfuel", floatround(VehicleInfo[GetPlayerVehicleID(playerid)][vFuel])); 
			SetTimerEx("FuelCar",500,0,"i",playerid);
			TogglePlayerControllable(playerid,false);
		}
	case D_BUY_FUEL: {
			if(!response) return 1;
			new fuel = GetNearestTrunckFuel(playerid);
			if(fuel==-1) return 1;
			new price = 10*gBusiness[fuel][bizzPrice];
			if(PI[playerid][pCash] < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			if(gBusiness[fuel][bizzProduct] - 10 > 0) {
				gBusiness[fuel][bizzProduct] -= 10;
				bizz_pay(fuel,price);
			}
			if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
			GiveMoney(playerid,-price,"покупка канистры");
			UpdateBusinessText(fuel);
			AddItem(playerid, 454, 1);
			SendOk(playerid,"Вы купили канистру с бензином. Для заправки Т/С, введите: /fillcar");
		}
	case D_SELL_CAR: {
			new id_pokupaet = GetPVarInt(playerid,"car_pokupaet")-1;
			if(!response) {
				DeletePVar(id_pokupaet,"car_prodaet");
				DeletePVar(id_pokupaet,"carCena");
				
				DeletePVar(id_pokupaet,"car_pokupaet");
				DeletePVar(id_pokupaet,"car_number");
				return true;
			}
			new string[350];
			format(string, sizeof(string), ""P"%s"W" предложил(а) купить свой автомобиль"P" %s."W" Цена: "ORANGE"%i$",player_name[playerid],gTransport[CarsInfo[playerid][carModel][GetPVarInt(playerid,"carnumber")]-400][trName], GetPVarInt(id_pokupaet,"carCena"));
			SendUse(id_pokupaet, string);
			SendClientMessage(id_pokupaet,COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
			format(string, sizeof(string), "Вы предложили "P"%s "W"купить автомобиль "W"%s"W". Цена: "ORANGE"%i$",player_name[id_pokupaet],gTransport[CarsInfo[playerid][carModel][GetPVarInt(playerid,"carnumber")]-400][trName], GetPVarInt(id_pokupaet,"carCena"));
			SendUse(playerid, string);
			DeletePVar(playerid,"sellcar");
			SetPVarInt(id_pokupaet,"sellcar",1);
		}
	case D_SELL_CAR_2: {
			new id_prodaet = GetPVarInt(playerid,"car_prodaet")-1;
			new id_pokupaet = GetPVarInt(id_prodaet,"car_pokupaet")-1;
			new car_cena = GetPVarInt(playerid,"carCena");
			new car = GetPVarInt(id_prodaet,"carnumber");
			if(!response)
			{
				SendOk(playerid,"Вы отказались от предложения покупки транспорта");
				SendOk(id_prodaet,"Игрок отказался от покупки транспорта");
				sellcar_carncel(playerid,id_prodaet);
				return 1;
			}
			if(id_pokupaet == playerid) 
			{
				new slot_car = -1;
				for(new i = 0; i < 2; i++) {
					if(CarsInfo[playerid][carModel][i] != 481) continue;
					slot_car = i;
					break;
				}
				if(slot_car == -1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет свободных мест под автомобиль");
				if(PI[playerid][pCash] < car_cena) {
					SendClientMessage(playerid, COLOR_GREY, "У Вас не достаточно денег наличными");
					SendOk(id_prodaet,"У покупателя недостаточно денег наличными");
					sellcar_carncel(playerid,id_prodaet);
					return 1;
				}
				if(!PI[id_prodaet][pHouse] && !PI[id_prodaet][pRoom] && !PI[id_prodaet][pTempKey]) {
					SendClientMessage(id_prodaet, COLOR_GREY,"У Вас нет дома/номера в отеле");
					SendOk(playerid,"У продавца обмен нет дома/номера в отеле");
					sellcar_carncel(playerid,id_prodaet);
					return 1;
				}
				if(!PI[playerid][pHouse] && !PI[playerid][pRoom] && !PI[id_prodaet][pTempKey]) {
					SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома/номера в отеле");
					SendOk(id_prodaet,"У покупателя нет дома/номера в отеле");
					sellcar_carncel(playerid,id_prodaet);
					return 1;
				}
				if(house_car[playerid][0] == INVALID_VEHICLE_ID && house_car[playerid][1] == INVALID_VEHICLE_ID) {
					SendClientMessage(playerid, COLOR_GREY, "Ваш автомобиль не создан/не на парковочном месте");
					SendOk(id_prodaet,"У покупателя автомобиль не создан/не на парковочном месте");
					sellcar_carncel(playerid,id_prodaet);
					return 1;
				}
				if(house_car[id_prodaet][0] == INVALID_VEHICLE_ID && house_car[id_prodaet][1] == INVALID_VEHICLE_ID) {
					SendClientMessage(id_prodaet, COLOR_GREY,"Ваш автомобиль не создан/не на парковочном месте");
					SendOk(playerid,"У продавца автомобиль не создан/не на парковочном месте");
					sellcar_carncel(playerid,id_prodaet);
					return 1;
				}
				
				GiveMoney(playerid, -car_cena,"Покупка авто");
				GiveMoney(id_prodaet, car_cena,"Продажа авто"); // инициатор
				
				CarsInfo[playerid][carModel][slot_car] = CarsInfo[id_prodaet][carModel][car];
				CarsInfo[playerid][carColor_one][slot_car] = CarsInfo[id_prodaet][carColor_one][car];
				CarsInfo[playerid][carColor_two][slot_car] = CarsInfo[id_prodaet][carColor_two][car];
				CarsInfo[playerid][carDrived][slot_car] = CarsInfo[id_prodaet][carDrived][car];
				CarsInfo[playerid][carFuel][slot_car] = CarsInfo[id_prodaet][carFuel][car];
				CarsInfo[playerid][carAkum][slot_car] = CarsInfo[id_prodaet][carAkum][car];
				
				CarsInfo[playerid][carKanistra][slot_car] = CarsInfo[id_prodaet][carKanistra][car];
				CarsInfo[playerid][carNarko][slot_car] = CarsInfo[id_prodaet][carNarko][car];
				CarsInfo[playerid][carMats][slot_car] = CarsInfo[id_prodaet][carMats][car];
				CarsInfo[playerid][carDeagle][slot_car] = CarsInfo[id_prodaet][carDeagle][car];
				CarsInfo[playerid][carShot][slot_car] = CarsInfo[id_prodaet][carShot][car];
				CarsInfo[playerid][carM4][slot_car] = CarsInfo[id_prodaet][carM4][car];
				CarsInfo[playerid][carAK47][slot_car] = CarsInfo[id_prodaet][carAK47][car];
				CarsInfo[playerid][carPaintJob][slot_car] = CarsInfo[id_prodaet][carPaintJob][car];
				
				// tuning
				CarsInfo[playerid][carVehcom_1][slot_car] = CarsInfo[id_prodaet][carVehcom_1][car];
				CarsInfo[playerid][carVehcom_2][slot_car] = CarsInfo[id_prodaet][carVehcom_2][car];
				CarsInfo[playerid][carVehcom_3][slot_car] = CarsInfo[id_prodaet][carVehcom_3][car];
				CarsInfo[playerid][carVehcom_4][slot_car] = CarsInfo[id_prodaet][carVehcom_4][car];
				CarsInfo[playerid][carVehcom_5][slot_car] = CarsInfo[id_prodaet][carVehcom_5][car];
				CarsInfo[playerid][carVehcom_6][slot_car] = CarsInfo[id_prodaet][carVehcom_6][car];
				CarsInfo[playerid][carVehcom_7][slot_car] = CarsInfo[id_prodaet][carVehcom_7][car];
				CarsInfo[playerid][carVehcom_8][slot_car] = CarsInfo[id_prodaet][carVehcom_8][car];
				CarsInfo[playerid][carVehcom_9][slot_car] = CarsInfo[id_prodaet][carVehcom_9][car];
				CarsInfo[playerid][carVehcom_10][slot_car] = CarsInfo[id_prodaet][carVehcom_10][car];
				CarsInfo[playerid][carVehcom_11][slot_car] = CarsInfo[id_prodaet][carVehcom_11][car];
				CarsInfo[playerid][carVehcom_12][slot_car] = CarsInfo[id_prodaet][carVehcom_12][car];
				CarsInfo[playerid][carVehcom_13][slot_car] = CarsInfo[id_prodaet][carVehcom_13][car];
				CarsInfo[playerid][carVehcom_14][slot_car] = CarsInfo[id_prodaet][carVehcom_14][car];

				
				if(house_car[playerid][slot_car] != INVALID_VEHICLE_ID) {
					A_DestroyVehicle(house_car[playerid][slot_car]);
					house_car[playerid][slot_car] = INVALID_VEHICLE_ID;
				}
				
				if(house_car[id_prodaet][car] != INVALID_VEHICLE_ID) {
					A_DestroyVehicle(house_car[id_prodaet][car]);
					house_car[id_prodaet][car] = INVALID_VEHICLE_ID;
				}
				
				CarsInfo[id_prodaet][carModel][car] = 481;
				CarsInfo[id_prodaet][carColor_one][car] = 1;
				CarsInfo[id_prodaet][carColor_two][car] = 1;
				CarsInfo[id_prodaet][carDrived][car] = 0;
				
				CarsInfo[id_prodaet][carFuel][car] = 0;
				CarsInfo[id_prodaet][carAkum][car] = 0;
				CarsInfo[id_prodaet][carKanistra][car] = 0;
				CarsInfo[id_prodaet][carNarko][car] = 0;
				CarsInfo[id_prodaet][carMats][car] = 0;
				CarsInfo[id_prodaet][carDeagle][car] = 0;
				CarsInfo[id_prodaet][carShot][car] = 0;
				CarsInfo[id_prodaet][carM4][car] = 0;
				CarsInfo[id_prodaet][carAK47][car] = 0;
				CarsInfo[id_prodaet][carPaintJob][car] = -1;
				
				CarsInfo[id_prodaet][carVehcom_1][car] = 0;
				CarsInfo[id_prodaet][carVehcom_2][car] = 0;
				CarsInfo[id_prodaet][carVehcom_3][car] = 0;
				CarsInfo[id_prodaet][carVehcom_4][car] = 0;
				CarsInfo[id_prodaet][carVehcom_5][car] = 0;
				CarsInfo[id_prodaet][carVehcom_6][car] = 0;
				CarsInfo[id_prodaet][carVehcom_7][car] = 0;
				CarsInfo[id_prodaet][carVehcom_8][car] = 0;
				CarsInfo[id_prodaet][carVehcom_9][car] = 0;
				CarsInfo[id_prodaet][carVehcom_10][car] = 0;
				CarsInfo[id_prodaet][carVehcom_11][car] = 0;
				CarsInfo[id_prodaet][carVehcom_12][car] = 0;
				CarsInfo[id_prodaet][carVehcom_13][car] = 0;
				CarsInfo[id_prodaet][carVehcom_14][car] = 0;
				
				save_car(id_prodaet, car);
				save_car(playerid, slot_car);
				
				new query_str[128];
				format(query_str,sizeof(query_str),"SELECT * FROM `"TABLE_CARS"` WHERE BINARY `owner` = '%s'",player_name[playerid]);
				mysql_tquery(connects,query_str,"load_cars","i",playerid);

				format(query_str,sizeof(query_str),"SELECT * FROM `"TABLE_CARS"` WHERE BINARY `owner` = '%s'",player_name[id_prodaet]);
				mysql_tquery(connects,query_str,"load_cars","i",id_prodaet);
				
				sellcar_carncel(playerid,id_prodaet);
			}
		}
	case D_CHANGECAR: {
			new id_pokupaet = GetPVarInt(playerid,"carPokupaet")-1;
			if(!response) {
				DeletePVar(id_pokupaet,"carProdaet");
				DeletePVar(id_pokupaet,"carCena");

				DeletePVar(playerid,"carPokupaet");
				DeletePVar(playerid,"numbercar1");
				DeletePVar(playerid,"numbercar2");
				DeletePVar(playerid,"sellcar_type");
				return 1;
			}
			new string[350];
			format(string, sizeof(string), ""P"%s"W" предложил(а) обмен "W"[%s] на [%s]"W". Доплата: "ORANGE"$%i",player_name[playerid],gTransport[CarsInfo[playerid][carModel][GetPVarInt(playerid,"numbercar1")-1]-400][trName],gTransport[CarsInfo[id_pokupaet][carModel][GetPVarInt(playerid,"numbercar2")-1]-400][trName], GetPVarInt(id_pokupaet,"carCena"));
			SendUse(id_pokupaet, string);
			SendClientMessage(id_pokupaet,COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
			format(string, sizeof(string), "Вы предложили "P"%s "W"обмен [%s] на [%s]. Доплата: "ORANGE"$%i",player_name[id_pokupaet],gTransport[CarsInfo[playerid][carModel][GetPVarInt(playerid,"numbercar1")-1]-400][trName],gTransport[CarsInfo[id_pokupaet][carModel][GetPVarInt(playerid,"numbercar2")-1]-400][trName], GetPVarInt(id_pokupaet,"carCena"));
			SendUse(playerid, string);
			DeletePVar(playerid,"sellcar_type");
			SetPVarInt(id_pokupaet,"sellcar_type",1);
		}
	case D_CAR_BUY: {
			if(!response) {
				if(GetPVarInt(playerid,"carProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"carProdaet")-1;
					SendOk(playerid,"Вы отказались от предложения на обмен транспортом");
					SendOk(id_prodaet,"Игрок отказался от предложения на обмен транспортом");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
			}
			new id_prodaet = GetPVarInt(playerid,"carProdaet")-1;
			new id_pokupaet = GetPVarInt(id_prodaet,"carPokupaet")-1;
			new car_cena = GetPVarInt(playerid,"carCena");
			new car1 = GetPVarInt(id_prodaet,"numbercar1")-1;
			new car2 = GetPVarInt(id_prodaet,"numbercar2")-1;
			if(!response) return change_carcancel(playerid,id_prodaet);
			if(id_pokupaet == playerid) {
				if(PI[playerid][pCash] < car_cena) {
					SendClientMessage(playerid, COLOR_GREY, "У Вас не достаточно денег наличными");
					SendOk(id_prodaet,"У покупателя недостаточно денег наличными");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				if(!PI[id_prodaet][pHouse] && !PI[id_prodaet][pRoom] && !PI[id_prodaet][pTempKey]) {
					SendClientMessage(id_prodaet, COLOR_GREY,"У Вас нет дома/номера в отеле");
					SendOk(playerid,"У продавца обмен нет дома/номера в отеле");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				if(!PI[playerid][pHouse] && !PI[playerid][pRoom] && !PI[playerid][pTempKey]) {
					SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома/квартиры");
					SendOk(id_prodaet,"У покупателя нет дома/квартиры");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				if(house_car[playerid][0] == INVALID_VEHICLE_ID && house_car[playerid][1] == INVALID_VEHICLE_ID) {
					SendClientMessage(playerid, COLOR_GREY, "Ваш автомобиль не создан/не на парковочном месте");
					SendOk(id_prodaet,"У покупателя автомобиль не создан/не на парковочном месте");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				if(house_car[id_prodaet][0] == INVALID_VEHICLE_ID && house_car[id_prodaet][1] == INVALID_VEHICLE_ID) {
					SendClientMessage(id_prodaet, COLOR_GREY,"Ваш автомобиль не создан/не на парковочном месте");
					SendOk(playerid,"У продавца автомобиль не создан/не на парковочном месте");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				GiveMoney(playerid, -car_cena,"Покупка авто");
				GiveMoney(id_prodaet, car_cena,"Продажа авто");

				new string[156];
				format(string,sizeof(string),"Вы обменялись Т/С с "P"%s"W". Ваша доплата "ORANGE"$%i",player_name[id_prodaet],car_cena);
				SendUse(playerid,string);
				format(string,sizeof(string),"Вы обменялись Т/С с "P"%s"W". Доплата с его стороны: "ORANGE"$%i",player_name[playerid],car_cena);
				SendUse(id_prodaet,string);

				SetPVarInt(id_prodaet,"car",CarsInfo[playerid][carID][car2]);
				CarsInfo[playerid][carID][car2] = CarsInfo[id_prodaet][carID][car1];
				CarsInfo[id_prodaet][carID][car1] = GetPVarInt(id_prodaet,"car");
				DeletePVar(id_prodaet,"car");

				if(house_car[id_prodaet][0] != INVALID_VEHICLE_ID) {
					A_DestroyVehicle(house_car[id_prodaet][0]);
					house_car[id_prodaet][0] = INVALID_VEHICLE_ID;
				}
				if(house_car[id_prodaet][1] != INVALID_VEHICLE_ID) {
					A_DestroyVehicle(house_car[id_prodaet][1]);
					house_car[id_prodaet][1] = INVALID_VEHICLE_ID;
				}

				if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
					A_DestroyVehicle(house_car[playerid][0]);
					house_car[playerid][0] = INVALID_VEHICLE_ID;
				}
				if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
					A_DestroyVehicle(house_car[playerid][1]);
					house_car[playerid][1] = INVALID_VEHICLE_ID;
				}
				
				save_car(id_prodaet,0);
				save_car(id_prodaet,1);
				save_car(playerid,0);
				save_car(playerid,1);

				new query_str[128];
				format(query_str,sizeof(query_str),"SELECT * FROM `"TABLE_CARS"` WHERE BINARY `owner` = '%s'",player_name[playerid]);
				mysql_tquery(connects,query_str,"load_cars","i",playerid);

				format(query_str,sizeof(query_str),"SELECT * FROM `"TABLE_CARS"` WHERE BINARY `owner` = '%s'",player_name[id_prodaet]);
				mysql_tquery(connects,query_str,"load_cars","i",id_prodaet);

				change_carcancel(playerid,id_prodaet);
				return 1;
			}
			else {
				SendClientMessage(playerid, COLOR_GREY, "Игрок оффлайн");
				DeletePVar(playerid,"carProdaet");
				DeletePVar(playerid,"carCena");
				DeletePVar(playerid,"sellcar_type");
			}
		}
	case D_SET_BET: {
			if(!response) return true;
			new s = Casino_Flag[playerid][select_casino_table];
			if(s==-1) return 1;
			if(InfoDice[s][dice_game_start]) return SendClientMessage(playerid, COLOR_GREY, "В данный момент идёт игра");
			if(InfoDice[s][dice_bank] != 0) return SendClientMessage(playerid, COLOR_GREY, "Кто то из игроков уже поставил ставку");
			new stavka;
			if(sscanf(inputtext,"i",stavka)) return D(playerid, D_SET_BET, DSI, ""P"Ставка", ""W"Введите сумму ставки!\nСтавка должна быть не менее "ORANGE""#MIN_STAVKA" фишек\n"W"и не более "ORANGE""#MAX_STAVKA" фишек", "Далее", "Отмена");
			if(stavka < MIN_STAVKA || stavka > MAX_STAVKA) return SendClientMessage(playerid, COLOR_GREY, "Неверная ставка"),D(playerid, D_SET_BET, DSI, ""P"Ставка", ""W"Введите сумму ставки!\nСтавка должна быть не менее "ORANGE""#MIN_STAVKA" фишек\n"W"и не более "ORANGE""#MAX_STAVKA" фишек", "Далее", "Отмена");
			if(InfoDice[s][dice_game_start]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете изменить ставку в процессе игры");
			InfoDice[s][dice_stavka] = stavka;
			SendOk(playerid,"Ставка успешно установлена");
			UpdateTextCasino(s);
			new string_set_bet[180];
			format(string_set_bet, 179, ""P"%s "W"установил ставку "ORANGE"%d фишек. "W"Нажмите "P"SET BET "W"чтобы её поддержать", player_name[playerid], stavka);
			for(new p = 0; p < 5; p++) {
				if(InfoDice[s][dice_gamer][p]==INVALID_PLAYER_ID) continue;
				SendUse(InfoDice[s][dice_gamer][p],string_set_bet);
			}
			if(InfoDice[s][dice_crup]!=INVALID_PLAYER_ID) SendUse(InfoDice[s][dice_crup],string_set_bet);
		}
	case dBizList: {
			if(!response) return 1;
			new fracid = -1;
			new count_business = 1,string[3000];
			switch(PI[playerid][pMember]) {
			case fLCN: fracid = 0;
			case fYAKUZA: fracid = 1;
			case fRM: fracid = 2;
			}
			string = ""W"№\t"W"Название бизнеса\t"W"Доход за сегодня\n";
			for(new i; i<gBusinessCount; i++) {
				if(gBusiness[i][bizzMafia] != PI[playerid][pMember]) continue;
				if(fracid != -1) {
					if(count_business <= 50) {
						count_business++;
						continue;
					}
					format(string, sizeof(string), "%s"P"%i"W"\t%s\t$%d\n",string, gBusiness[i][bizzID], gBusiness[i][bizzName],gBankMafia[fracid][i]);
				}
			}
			D(playerid, DIALOG_NONE, DSTH, ""P"Бизнесы мафии", string, "Закрыть", "");
			return 1;
		}
	case D_LMENU: {
			if(!response) return 1;
			switch(listitem) {
			case 0..2: dialog_lmenu(playerid,listitem);
			case 3..8,9: dialog_lmenu(playerid,listitem+1);
			}
		}
	case D_LMENU_2: {
			if(!response) return 1;
			dialog_lmenu(playerid,listitem);
		}
	case D_GANGTOP: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					new gz_total[5];
					for (new i = 0; i < TOTALGZ; i++) {
						if(GZInfo[i][gFrakVlad] == fBALLAS) gz_total[0]++;
						if(GZInfo[i][gFrakVlad] == fVAGOS) gz_total[1]++;
						if(GZInfo[i][gFrakVlad] == fGROVE) gz_total[2]++;
						if(GZInfo[i][gFrakVlad] == fAZTEC) gz_total[3]++;
						if(GZInfo[i][gFrakVlad] == fRIFA) gz_total[4]++;
					}
					static const f_str[] = "{8813E7}Ballas"W"\t{8813E7}%d/130"W"\n\
											{DBD604}Vagos"W"\t{DBD604}%d/130"W"\n\
											{009F00}Grove"W"\t{009F00}%d/130"W"\n\
											{01FCFF}Aztecas"W"\t{01FCFF}%d/130"W"\n\
											{83BFBF}Rifa"W"\t{83BFBF}%d/130"W"";
					new string[sizeof(f_str) + 40];
					format(string,sizeof(string),f_str,gz_total[0],gz_total[1],gz_total[2],gz_total[3],gz_total[4]);
					D(playerid, DIALOG_NONE, DIALOG_STYLE_TABLIST, ""P"Территории",string, "Закрыть", "");
				}
			case 1: {
					new graff[5];
					for(new i; i<CountGraffity; i++) {
						if(GrafInfo[i][gFrak] == fBALLAS) graff[0]++;
						if(GrafInfo[i][gFrak] == fVAGOS) graff[1]++;
						if(GrafInfo[i][gFrak] == fGROVE) graff[2]++;
						if(GrafInfo[i][gFrak] == fAZTEC) graff[3]++;
						if(GrafInfo[i][gFrak] == fRIFA) graff[4]++;
					}
					static const f_str[] = "{8813E7}Ballas"W"\t{8813E7}%d/120"W"\n\
											{DBD604}Vagos"W"\t{DBD604}%d/120"W"\n\
											{009F00}Grove"W"\t{009F00}%d/120"W"\n\
											{01FCFF}Aztecas"W"\t{01FCFF}%d/120"W"\n\
											{83BFBF}Rifa"W"\t{83BFBF}%d/120"W"";
					new string[sizeof(f_str) + 40];
					format(string,sizeof(string),f_str,graff[0],graff[1],graff[2],graff[3],graff[4]);
					D(playerid, DIALOG_NONE, DIALOG_STYLE_TABLIST, ""P"Граффити",string, "Закрыть", "");
				}
			case 2: {
					static const f_str[] = "{8813E7}Ballas"W"\t{8813E7}%d"W"\n\
											{DBD604}Vagos"W"\t{DBD604}%d"W"\n\
											{009F00}Grove"W"\t{009F00}%d"W"\n\
											{01FCFF}Aztecas"W"\t{01FCFF}%d"W"\n\
											{83BFBF}Rifa"W"\t{83BFBF}%d"W"";
					new string[sizeof(f_str) + 40];
					format(string,sizeof(string),f_str,FI[fBALLAS][fRating],FI[fVAGOS][fRating],FI[fGROVE][fRating],FI[fAZTEC][fRating],FI[fRIFA][fRating]);
					D(playerid, DIALOG_NONE, DIALOG_STYLE_TABLIST, ""P"Рейтинг",string, "Закрыть", "");
				}
			}
		}
	case D_DIPLOMATION: {
			if (!response) {
				for (new i = 0 ; i < 7; i ++) {
					new pvar_string[8];
					format(pvar_string, 8, "d_%d",i);
					DeletePVar(playerid, pvar_string);
				}
				return 1;
			}
			new header_string[64]; 
			format(header_string, 8, "d_%d", listitem);
			new fr_id = GetPVarInt(playerid, header_string);
			SetPVarInt ( playerid, "d_listitem", listitem ) ;

			header_string[0] = EOS;
			strcat(header_string, "{");
			strcat(header_string, GetColorFrac(fr_id));
			strcat(header_string, "}");
			strcat(header_string, FI[fr_id][fName]);
			D(playerid, D_DIPLOMATION_2, DSL, header_string, ""P"1."W" Нейтралитет\n"P"2."W" Война\n"P"3."W" Союз", "Выбрать", "Закрыть" ) ;
		}
	case D_DIPLOMATION_2: {
			//	if(capture_start[PI[playerid][pMember]]) return SendClientMessage(playerid, COLOR_GREY, "Запрещено изменять дипломатию во время захвата территории");
			if(!response) return dialog_diplom(playerid,true);
			new pvar_string[8];
			format(pvar_string, 8, "d_%d", GetPVarInt(playerid, "d_listitem"));
			DeletePVar(playerid, "d_listitem");
			new fr_id = GetPVarInt(playerid, pvar_string);
			if(listitem == 2) {
				if (f_diplomacy[PI[playerid][pMember] - 15][fr_id - 15] == dip_status_alliance_get_invite) {
					f_diplomacy[PI[playerid][pMember] - 15][fr_id - 15] = dip_status_alliance;
					f_diplomacy[fr_id - 15][PI[playerid][pMember] - 15] = dip_status_alliance;

					dialog_diplom(playerid,true);
					save_diplomation(playerid,PI[playerid][pMember]);
					save_diplomation(playerid,fr_id);
					return 1;
				}
				f_diplomacy[PI[playerid][pMember] - 15][fr_id - 15] = dip_status_alliance_invite;
				f_diplomacy[fr_id - 15][PI[playerid][pMember] - 15] = dip_status_alliance_get_invite;

				dialog_diplom(playerid,true);
				save_diplomation(playerid,PI[playerid][pMember]);
				save_diplomation(playerid,fr_id);
				return 1 ;
			}
			f_diplomacy[PI[playerid][pMember] - 15][fr_id - 15] = listitem;
			f_diplomacy[fr_id - 15][PI[playerid][pMember] - 15] = listitem;

			dialog_diplom(playerid,true);
			save_diplomation(playerid,PI[playerid][pMember]);
			save_diplomation(playerid,fr_id);
		}
	case D_LMENU_BANK: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					static const f_str[] = ""W"Состояние счета: "ORANGE"$%d\n"P"1."W" Снять деньги";
					new string[sizeof(f_str) +1 + (-2 + 10)];
					format(string,sizeof(string),f_str,FI[PI[playerid][pMember]][fBank]);
					D(playerid,D_LMENU_BANK,DSL,""P"Управление банком фракции",string,"Далее","Закрыть");
				}
			case 1: D(playerid,D_LMENU_BANK_INPUT,DSI, ""P"Управление банком фракции","\n\n"W"Введите сумму, которую хотите взять с банка фракции:\n\n","Взять","Отмена");
			}
		}
	case D_LMENU_BANK_INPUT: {
			if(!response) return 1;
			if(!PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная функция");
			if(!strlen(inputtext)) return D(playerid,D_LMENU_BANK_INPUT,DSI, ""P"Управление банком фракции","\n\n"W"Введите сумму, которую хотите взять с банка фракции:\n\n","Взять","Отмена");
			new dengi = strval(inputtext),maxmoney = 0;
			switch(PI[playerid][pMember]) {
			case fLSPD, fFBI, fARMYLS, fMEDICLS, fMEDICSF, fMEDICLV, fLSNEWS, fSFNEWS, fLVNEWS, fINSTRUCTORS: maxmoney = 300000;
		    case fRM, fBikers,fBikersTwo, fLCN, fYAKUZA, fBALLAS, fVAGOS, fGROVE, fAZTEC, fRIFA: maxmoney = 200000;
		    case fWHITEHOUSE: maxmoney = 500000;
			}
			if(dengi < 1 || dengi > maxmoney) {
				static const f_str[] = "\n\n"W"Введите сумму, которую хотите взять с банка фракции:\n\n"NO"* "G"От $1 до $%d\n\n";
				new string[sizeof(f_str) +1 + (-2 + 9)];
				format(string,sizeof(string),f_str,maxmoney);
				D(playerid,D_LMENU_BANK_INPUT,DSI, ""P"Управление банком фракции",string,"Взять","Отмена");
				return 1;
			}
			if (FI[PI[playerid][pMember]][fBankCash] + dengi > maxmoney)
			{
				new string[550];
				format(string, sizeof(string), "\n\n"W"Введите сумму, которую хотите взять с банка фракции:\n\n"NO"* "G"Суточный лимит на перевод/снятие средств с общака - $%d. Доступный лимит: $%d\n\n", maxmoney, maxmoney - FI[PI[playerid][pMember]][fBankCash]);
				ShowPlayerDialog(playerid, D_LMENU_BANK_INPUT, DSI, ""P"Управление банком фракции", string, "Взять", "Отмена");
				return 1;
			}
			if(FI[PI[playerid][pMember]][fBank] < dengi) return D(playerid,D_LMENU_BANK_INPUT,DSI, ""P"Управление банком фракции","\n\n"W"Введите сумму, которую хотите взять с банка фракции:\n\n"NO"* "G"В банке фракции нет такой суммы\n\n","Взять","Отмена");
			FI[PI[playerid][pMember]][fBank] -= dengi;
			UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);
			FI[PI[playerid][pMember]][fBankCash] += dengi;
			UpdateFraction(PI[playerid][pMember],"BankCash",FI[PI[playerid][pMember]][fBankCash]);
			GiveMoney(playerid, dengi,"снял со счета фракции");
			new string[128];
			format(string,sizeof(string),"Вы сняли с банка фракции: "ORANGE"$%d",dengi);
			SendOk(playerid,string);
		}
	case D_LMENU_RANK: {
			if(!response) return DeletePVar(playerid,"leader_rank");
			if(!PI[playerid][pMember]) return 1;
			new select_listitem = GetPVarInt(playerid,"leader_rank");
			if(select_listitem == 0) FI[PI[playerid][pMember]][fInviteRang] = listitem + 1,UpdateFraction(PI[playerid][pMember],"RangInvite",listitem + 1);
			else if(select_listitem == 1) FI[PI[playerid][pMember]][fUninviteRang] = listitem + 1,UpdateFraction(PI[playerid][pMember],"RangUninvite",listitem + 1);
			else if(select_listitem == 2) FI[PI[playerid][pMember]][fGiveRang] = listitem + 1,UpdateFraction(PI[playerid][pMember],"GiveRang",listitem + 1);
			else if(select_listitem == 3) FI[PI[playerid][pMember]][fUseStock] = listitem + 1,UpdateFraction(PI[playerid][pMember],"UseStock",listitem + 1);
			else if(select_listitem == 4) FI[PI[playerid][pMember]][fSpawnRang] = listitem + 1,UpdateFraction(PI[playerid][pMember],"SpawnRang",listitem + 1);
			else return true;
			DeletePVar(playerid,"leader_rank");
			pc_cmd_lmenu(playerid);
			return 1;
		}
	case D_EDIT_RANK_1: {
			if(!response) return pc_cmd_lmenu(playerid);
			if(!PI[playerid][pMember]) return 1;
			SetPVarInt(playerid,"edit_rank",listitem);
			D(playerid, D_EDIT_RANK_2, DSI, ""P"Смена названия ранга", "\n\n"W"Введите новое название ранга:\n\n", "Изменить", "Отмена");
			return 1;
		}
	case D_EDIT_RANK_2: {
			if(!response) return 1;
			if(!PI[playerid][pMember]) return 1;
			if(strlen(inputtext) <= 5 || strlen(inputtext) >= 24) return D(playerid, D_EDIT_RANK_2, DSI, ""P"Смена названия ранга", "\n\n"W"Введите новое название ранга:\n\n"NO"*"G" От 6 и до 24 симолов\n\n", "Изменить", "Отмена");
			string_replace(inputtext, "'", ' ') ;
			new slot = GetPVarInt(playerid, "edit_rank");

			new string[156];
			format(string,sizeof(string),"Ранг "P"№%d"W" переименован с"P" %s"W" на "P"%s",slot+1,GetRankName(PI[playerid][pMember],slot+1),inputtext);
			SendUse(playerid,string);

			strmid(RankName[PI[playerid][pMember]][slot], inputtext, 0, strlen(inputtext));
			SaveRank(slot+1,PI[playerid][pMember]);
			return 1;
		}
	case D_CASINO: {
			if(!response) return 1;
			if(!GetPVarInt(playerid,"krup")) {
				new null = 0;
				foreach(new i:Player) {
					if(!TI[i][tLogin]) continue;
					if(GetPVarInt(i,"krup")) null++;
				}
				if(null > 10) return SendClientMessage(playerid, COLOR_GREY, "Уже работают достаточно крупье (10 человек)");
				SetPVarInt(playerid,"oldskinkrup",GetPlayerSkin(playerid));
				Casino_Flag[playerid][casino_crup] = 1;
			}
			else Casino_Flag[playerid][casino_crup] = 0;
			new skin_fix = (PI[playerid][pSex] == 1) ? (171) : (194);
			if(PI[playerid][pMember] > 0) A_SetPlayerSkin(playerid,(GetPVarInt(playerid,"krup")) ? (PI[playerid][pFracSkin]) : (skin_fix));
			else A_SetPlayerSkin(playerid,(GetPVarInt(playerid,"krup")) ? (GetPVarInt(playerid,"oldskinkrup")) : (skin_fix));
			SetPVarInt(playerid,"krup",(GetPVarInt(playerid,"krup")) ? (false) : (true));
			SendOk(playerid,(!GetPVarInt(playerid,"krup")) ? ("Вы закончили работу крупье") : ("Вы устроились на работу крупье"));
			return 1;
		}
	case D_COP_ARREST: {
			if(!response) return 1;
			PI[playerid][pJail] = 1;
			PI[playerid][pJailTime] = (PI[playerid][pSearch] * 600)/2;
			UpdatePlayerData(playerid,"pJail",PI[playerid][pJail]);
			UpdatePlayerData(playerid,"pJailTime",PI[playerid][pJailTime]);
			PI[playerid][pSearch] = 0;
			UpdatePlayerData(playerid,"pSearch",PI[playerid][pSearch]);
			SetPlayerWantedLevel(playerid, PI[playerid][pSearch]);
			PlayerSpawn(playerid);
		}
	case D_DONATE: {
			if(!response) return 1;
			switch(listitem) {
			case 0: D(playerid, D_DONATE_CONVERT, DSI, ""P"Покупка игровой валюты", ""W"Введите ниже сумму, которую хотите обменять на вирты\n{F2BB68}(1 руб = 2000$)", "Купить", "Назад");
			case 1: {
					if(PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Лидерам запрещено менять ник");
					D(playerid, D_DONATE_CHANGENAME, DSI, ""P"Смена игрового ника", ""W"Введите ниже ник-нейм, на который хотите изменить\n\n{F2BB68}Стоимость услуги: 20 руб", "Сменить", "Назад");
				}
			case 2: {
					if(PI[playerid][pPremium]) return D(playerid, DIALOG_NONE, DSM, " ", ""G"На вашем аккаунте уже есть активный премиум-аккаунт", "Закрыть", "");
					SetPVarInt(playerid,"premium_",1);
					D(playerid, D_DONATE_VIP, DSM, ""P"Премиум-аккаунт", ""W"Список основных возможностей"ORANGE" премиум-аккаунта:"W"\n\n- Доступ к общему чату среди премиум игроков (/v)\n- +1 семейное очко каждый PayDay\n- Лечение в больницах в 2 раза быстрее\n\
				- Просмотр администраторов в сети (/admins)\n- Время в КПЗ и Деморгане истекает в два раза быстрее\n- Дополнительное очко опыта каждый час\n\
			- Отсутствие голода\n- Увольнение из любой организации (/leave)\n\nСтоимость:"P" 200 руб"W"\nСрок действия:"P" 2 недели"W"\n\nВы действительно хотите купить"ORANGE" премиум аккаунт?", "Купить", "Назад");
				}
			case 3: {
					if(PI[playerid][pPremium]) return D(playerid, DIALOG_NONE, DSM, " ", ""G"На вашем аккаунте уже есть активный премиум-аккаунт", "Закрыть", "");
					SetPVarInt(playerid,"premium_",2);
					D(playerid, D_DONATE_VIP, DSM, ""P"Премиум-аккаунт", ""W"Список основных возможностей"ORANGE" премиум-аккаунта:"W"\n\n- Доступ к общему чату среди премиум игроков (/v)\n- +1 семейное очко каждый PayDay\n- Лечение в больнице в 2 раза быстрее\n\
				- Просмотр администраторов в сети (/admins)\n- Время в КПЗ и Деморгане истекает в два раза быстрее\n- Дополнительное очко опыта каждый час\n\
			- Отсутствие голода\n- Увольнение из любой организации (/leave)\n\nСтоимость:"P" 350 руб"W"\nСрок действия:"P" 4 недели"W"\n\nВы действительно хотите купить"ORANGE" премиум аккаунт?", "Купить", "Назад");
				}
			case 4: {
					if(PI[playerid][pPremium]) return D(playerid, DIALOG_NONE, DSM, " ", ""G"На вашем аккаунте уже есть активный премиум-аккаунт", "Закрыть", "");
					SetPVarInt(playerid,"premium_",3);
					D(playerid, D_DONATE_VIP, DSM, ""P"Премиум-аккаунт", ""W"Список основных возможностей"ORANGE" премиум-аккаунта:"W"\n\n- Доступ к общему чату среди премиум игроков (/v)\n- +1 семейное очко каждый PayDay\n- Лечение в больнице в 2 раза быстрее\n\
				- Просмотр администраторов в сети (/admins)\n- Время в КПЗ и Деморгане истекает в два раза быстрее\n- Дополнительное очко опыта каждый час\n\
			- Отсутствие голода\n- Увольнение из любой организации (/leave)\n\nСтоимость:"P" 700 руб"W"\nСрок действия:"P" 3 месяца"W"\n\nВы действительно хотите купить"ORANGE" премиум аккаунт?", "Купить", "Назад");
				}
			case 5: {
					D(playerid, D_DONATE_UNWARN, DSM, ""P"Снятие предупреждения", ""W"Вы действительно хотите снять одно предупреждение?\n\n{F2BB68}Стоимость: 50 руб", "Далее", "Назад");
				}
			case 6: D(playerid,D_DONATE_NUMBER,DSI,""P"Элитный номера телефона",""W"Введите ниже желаемый номер телефона\n- 5-и значный номер: 250р\n- 4-х значный номер: 300р","Купить","Назад");
			case 7: D(playerid, D_DONATE_BOX, DSM, ""P"Навыки боевых искусств", ""W"Вы действительно хотите купить все навыки боевых искусств?\n\n{F2BB68}Стоимость: 200 руб", "Купить", "Назад");
			case 8: D(playerid, D_DONATE_SKILLS, DSM, ""P"Навыки владения оружием", ""W"Вы действительно хотите купить все навыки владения оружием?\n\n{F2BB68}Стоимость: 300 руб", "Купить", "Назад");
			case 9: D(playerid, D_COMPLETE_1, DSTH, ""P"Игровые комплекты", ""W"Описание\t"W"Стоимость\n1. Начальный\t299 руб\n2. Продвинутый\t950 руб\n3. Максимальный\t3000 руб", "Купить", "Закрыть");
			case 10: D(playerid, D_DONATE_SKIN, DSI, ""P"Уникальный скин", ""W"Введите ниже номер скина от 1 до 311\n\nСтоимость: 250р", "Купить", "Назад");
			case 11: D(playerid, D_DONATE_LICENSES, DSM, ""P"Комплект лицензий", ""W"Вы действительно хотите купить комплект лицензий?\n\n{F2BB68}Стоимость: 70 руб", "Купить", "Назад");
			case 12: {
					new string[900];
					format(string, sizeof(string),""W"Описание\t"W"Стоимость\n");
					for(new i = 0; i < 26; i++)
					{
						format(string, 900,"%s%d. %s\t{F2BB68}%d руб\n",string,i+1,Donate[i][dName],Donate[i][dRub]);
					}
					D(playerid, D_DONATE_ACS_1, DSTH, ""P"Уникальные аксессуары",string, "Купить", "Закрыть");
				}
			case 13: D(playerid, D_DONATE_CASE, DSTH, ""P"Покупка кейсов", ""W"Описание\t"W"Стоимость\n1. Кейс 'SILVER'\t30 руб\n2. Кейс 'GOLD'\t59 руб\n3. Кейс 'VIP'\t99 руб", "Выбрать", "Закрыть");
   			#if defined _roulette_included
				case 14: roulette_Show(playerid);
  			#endif
			case 15: {
					new query[120];
					mysql_format(connects, query, sizeof(query),"SELECT `donatemoney` FROM `accounts` WHERE `pID` = '%d'", PI[playerid][pID]);
					mysql_pquery(connects, query, "UpdatePlayerDonate","d",playerid);
				}
			}
		}
	case D_DONATE_CASE: {
			if(!response) return true;
			switch(listitem) {
			case 0: D(playerid, D_DONATE_CASE_1, DSM, ""P"Кейс 'SILVER'", ""W"Вы действительно хотите купить кейс 'SILVER'?\n\n{F2BB68}Стоимость: 30 руб", "Купить", "Назад");
			case 1: D(playerid, D_DONATE_CASE_2, DSM, ""P"Кейс 'SILVER'", ""W"Вы действительно хотите купить кейс 'GOLD'?\n\n{F2BB68}Стоимость: 59 руб", "Купить", "Назад");
			case 2: D(playerid, D_DONATE_CASE_3, DSM, ""P"Кейс 'SILVER'", ""W"Вы действительно хотите купить кейс 'VIP'?\n\n{F2BB68}Стоимость: 99 руб", "Купить", "Назад");
			}
		}
	case D_DONATE_CASE_1: {
			if(!response) return D(playerid, D_DONATE_CASE, DSTH, ""P"Покупка кейсов", ""W"Описание\t"W"Стоимость\n1. Кейс 'SILVER'\t30 руб\n2. Кейс 'GOLD'\t59 руб\n3. Кейс 'VIP'\t99 руб", "Выбрать", "Закрыть");
			if(PI[playerid][pRouble] < 30) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			PI[playerid][pCases][0] += 1;
			UpdatePlayerData(playerid, "case_1", PI[playerid][pCases][0]);
			SendClientMessage(playerid, COLOR_GREY, "Вы купили 'SILVER' кейс! (/mm -> Кейсы)");
			GiveDonate(playerid, -30, "покупка silver кейса");
		}
	case D_DONATE_CASE_2: {
			if(!response) return D(playerid, D_DONATE_CASE, DSTH, ""P"Покупка кейсов", ""W"Описание\t"W"Стоимость\n1. Кейс 'SILVER'\t30 руб\n2. Кейс 'GOLD'\t59 руб\n3. Кейс 'VIP'\t99 руб", "Выбрать", "Закрыть");
			if(PI[playerid][pRouble] < 59) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			PI[playerid][pCases][1] += 1;
			UpdatePlayerData(playerid, "case_2", PI[playerid][pCases][1]);
			SendClientMessage(playerid, COLOR_GREY, "Вы купили 'GOLD' кейс! (/mm -> Кейсы)");
			GiveDonate(playerid, -59, "покупка gold кейса");
		}
	case D_DONATE_CASE_3: {
			if(!response) return D(playerid, D_DONATE_CASE, DSTH, ""P"Покупка кейсов", ""W"Описание\t"W"Стоимость\n1. Кейс 'SILVER'\t30 руб\n2. Кейс 'GOLD'\t59 руб\n3. Кейс 'VIP'\t99 руб", "Выбрать", "Закрыть");
			if(PI[playerid][pRouble] < 99) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			PI[playerid][pCases][2] += 1;
			UpdatePlayerData(playerid, "case_3", PI[playerid][pCases][2]);
			SendClientMessage(playerid, COLOR_GREY, "Вы купили 'VIP' кейс! (/mm -> Кейсы)");
			GiveDonate(playerid, -99, "покупка vip кейса");
		}
	case D_DONATE_ACS_1: {
			if(!response) return true;
			new string[150];
			format(string,150,""W"Вы собираетесь купить уникальный аксессуар\n\nНазвание аксессуара:{F2BB68} %s"W"\nСтоимость:{F2BB68} %d руб",
			Donate[listitem][dName],Donate[listitem][dRub]);
			D(playerid, D_DONATE_ACS_2, DSM, ""P"Покупка аксессуара", string, "Купить", "Назад");
			SetPVarInt(playerid,"id_donate",listitem+1);
		}
	case D_DONATE_ACS_2: {
			if(!response) {
				new string[650];
				format(string, sizeof(string),""W"Описание\t"W"Стоимость\n");
				for(new i = 0; i < 23; i++)
				{
					format(string, 650,"%s%d. %s\t{F2BB68}%d руб\n",string,i+1,Donate[i][dName],Donate[i][dRub]);
				}
				D(playerid, D_DONATE_ACS_1, DSTH, ""P"Уникальные аксессуары",string, "Купить", "Закрыть");
				DeletePVar(playerid,"id_donate");
				return true;
			}
			new id = GetPVarInt(playerid,"id_donate")-1;
			if(PI[playerid][pRouble] < Donate[id][dRub]) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
			AddItem(playerid, Donate[id][dModel],1);
			D(playerid,DIALOG_NONE,DSM," ",""W"Поздравляем с покупкой нового аксессуара!","Закрыть","");
			GiveDonate(playerid, -Donate[id][dRub], "покупка аксессуара");
			DeletePVar(playerid,"id_donate");
			PI[playerid][pEvent] += 5;
            UpdatePlayerData(playerid,"event",PI[playerid][pEvent]);
		}
	case D_DONATE_NUMBER: {
			if(!response) return pc_cmd_donate(playerid);
			new result;
			new str[120];
			if(strval(inputtext) < 0 || isNumeric(inputtext) || strval(inputtext) == 5555 || inputtext[0] == '0') return D(playerid,D_DONATE_NUMBER,DSI,""P"Элитный номера телефона",""W"Введите ниже желаемый номер телефона\n- 5-и значный номер: 250р\n- 4-х значный номер: 300р","Купить","Назад");
			if(strlen(inputtext) == 4) {
				SetPVarInt(playerid,"n_rub",300);
				SetPVarInt(playerid,"number",strval(inputtext));
				format(str,120,""W"\nНомер телефона: %i\nСтоимость:{F2BB68} 300р"W"\n\nВы хотите купить этот номер телефона?",strval(inputtext));
				D(playerid,D_DONATE_NUMBER_2,DSM,""P"Элитный номера телефона",str,"Купить","Назад");
				
				result++;
				return true;
			}
			if(strlen(inputtext) == 5) {
				SetPVarInt(playerid,"n_rub",250);
				SetPVarInt(playerid,"number",strval(inputtext));
				
				format(str,120,""W"\nНомер телефона: %i\nСтоимость:{F2BB68} 250р"W"\n\nВы хотите купить этот номер телефона?",strval(inputtext));
				D(playerid,D_DONATE_NUMBER_2,DSM,""P"Элитный номера телефона",str,"Купить","Назад");
				result++;
				return true;
			}
			if(result == 0) D(playerid,D_DONATE_NUMBER,DSI,""P"Элитный номера телефона",""W"Введите ниже желаемый номер телефона\n- 5-и значный номер: 250р\n- 4-х значный номер: 300р","Купить","Назад");
		}
	case D_DONATE_NUMBER_2: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < GetPVarInt(playerid,"n_rub")) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			new query[120];
			mysql_format(connects, query, sizeof(query),"SELECT `pPhone` FROM `accounts` WHERE `pPhone` = '%d'",GetPVarInt(playerid,"number"));
			mysql_tquery(connects, query, "sim_donate", "iii", playerid, GetPVarInt(playerid,"n_rub"),GetPVarInt(playerid,"number"));
			return true;
		}
	case D_COMPLETE_1: {
			if(!response) return true;
			switch(listitem) {
			case 0: D(playerid,D_COMPLETE_2,DSM,""P"Комплект 'Новичок'",""W"При покупке данного комплекта Вы получите:\n\n- 500.000$ на игровой счет\n- Комплект всех лицензий\n- Премимум-аккаунт на 3 дня\n\n{F2BB68}Стоимость комплекта: 299 руб","Купить","Назад");
			case 1: D(playerid,D_COMPLETE_3,DSM,""P"Комплект 'Продвинутый'",""W"При покупке данного комплекта Вы получите:\n\n- 1.000.000$ на игровой счет\n- Комплект всех лицензий\n- Максимальный навык стрельбы\n- Премимум-аккаунт на 5 дней\n\n{F2BB68}Стоимость комплекта: 950 руб","Купить","Назад");
			case 2: D(playerid,D_COMPLETE_4,DSM,""P"Комплект 'Максимальный'",""W"При покупке данного комплекта Вы получите:\n\n- 3.000.000$ на игровой счет\n- Комплект всех лицензий\n- Максимальный навык стрельбы\n- Максимальные навыки искусств\n- Премиум-аккаунт на 4 месяца\n\n{F2BB68}Стоимость комплекта: 3000 руб","Купить","Назад");
			}
		}
	case D_COMPLETE_2: {
			if(!response) return D(playerid, D_COMPLETE_1, DSTH, ""P"Игровые комплекты", ""W"Описание\t"W"Стоимость\n1. Начальный\t299 руб\n2. Продвинутый\t950 руб\n3. Максимальный\t3000 руб", "Купить", "Закрыть");
			if(PI[playerid][pRouble] < 299) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			GiveMoney(playerid,500000, "комплект новичок");
			lic[playerid][0] =
			lic[playerid][1] =
			lic[playerid][2] =
			lic[playerid][3] = 1;
			UpdateLicenses(playerid);
			
			PI[playerid][pPremium] = gettime()+(3*24*60*60);
			UpdatePlayerData(playerid,"premium",PI[playerid][pPremium]);
			D(playerid, DIALOG_NONE, DSM, " ", ""W"Комплект{F2BB68} 'Начальный'"W" успешно собран и активирован", "Закрыть", "");
			GiveDonate(playerid, -299, "покупка пакет начальный");
		}
	case D_COMPLETE_3: {
			if(!response) return D(playerid, D_COMPLETE_1, DSTH, ""P"Игровые комплекты", ""W"Описание\t"W"Стоимость\n1. Начальный\t299 руб\n2. Продвинутый\t950 руб\n3. Максимальный\t3000 руб", "Купить", "Закрыть");
			if(PI[playerid][pRouble] < 950) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			GiveMoney(playerid,1000000, "комплект продвинутый");
			lic[playerid][0] =
			lic[playerid][1] =
			lic[playerid][2] =
			lic[playerid][3] = 1;
			UpdateLicenses(playerid);
			
			PI[playerid][pGunSkill][0] = 100;
			PI[playerid][pGunSkill][1] = 100;
			PI[playerid][pGunSkill][2] = 100;
			PI[playerid][pGunSkill][3] = 100;
			PI[playerid][pGunSkill][4] = 100;
			PI[playerid][pGunSkill][5] = 100;
			save_skill(playerid);
			
			PI[playerid][pPremium] = gettime()+(5*24*60*60);
			UpdatePlayerData(playerid,"premium",PI[playerid][pPremium]);

			D(playerid, DIALOG_NONE, DSM, " ", ""W"Комплект{F2BB68} 'Продвинутый'"W" успешно собран и активирован", "Закрыть", "");
			GiveDonate(playerid, -950, "покупка пакет продвинутый");
		}
	case D_COMPLETE_4: {
			if(!response) return D(playerid, D_COMPLETE_1, DSTH, ""P"Игровые комплекты", ""W"Описание\t"W"Стоимость\n1. Начальный\t299 руб\n2. Продвинутый\t950 руб\n3. Максимальный\t3000 руб", "Купить", "Закрыть");
			if(PI[playerid][pRouble] < 3000) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			GiveMoney(playerid,3000000, "комплект максимальный");
			lic[playerid][0] =
			lic[playerid][1] =
			lic[playerid][2] =
			lic[playerid][3] = 1;
			UpdateLicenses(playerid);

			PI[playerid][pGunSkill][0] = 100;
			PI[playerid][pGunSkill][1] = 100;
			PI[playerid][pGunSkill][2] = 100;
			PI[playerid][pGunSkill][3] = 100;
			PI[playerid][pGunSkill][4] = 100;
			PI[playerid][pGunSkill][5] = 100;
			save_skill(playerid);
			
			PI[playerid][pPremium] = gettime()+(120*24*60*60);
			UpdatePlayerData(playerid,"premium",PI[playerid][pPremium]);
			
			PI[playerid][pBox] = 3;
			UpdatePlayerData(playerid,"pBox",PI[playerid][pBox]);

			D(playerid, DIALOG_NONE, DSM, " ", ""W"Комплект{F2BB68} 'Максимальный'"W" успешно собран и активирован", "Закрыть", "");
			GiveDonate(playerid, -3000, "покупка пакет максимальный");
		}
	case D_DONATE_BOX: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 200) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			if(PI[playerid][pBox] == 3) return D(playerid, DIALOG_NONE, DSM, " ", ""G"У Вас максимальный навык боевых искусств", "Закрыть", "");
			PI[playerid][pBox] = 3;
			UpdatePlayerData(playerid,"pBox",PI[playerid][pBox]);
			GiveDonate(playerid, -200, "покупка навык боевых искусств");
			D(playerid,DIALOG_NONE,DSM," ",""W"Все навыки боевых искусств прокачены на 100%","Закрыть","");
		}
	case D_DONATE_SKIN: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 250) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			if(GetInvSet(playerid) >= 40) return D(playerid, DIALOG_NONE, DSM, " ", ""W"В ващем инвентаре недостаточно места", "Закрыть", "");
			if(strval(inputtext) == 74 || strval(inputtext) < 1 || strval(inputtext) > 311) return D(playerid, D_DONATE_SKIN, DSI, ""P"Уникальный скин", ""W"Введите ниже номер скина от 1 до 311\n\nСтоимость: 250р", "Купить", "Назад");
			GiveDonate(playerid, -250, "покупка уникальный скин");
			AddItem(playerid, skin_undress[strval(inputtext)][0], 1);
			D(playerid,DIALOG_NONE,DSM," ",""W"Вы успешно купили уникальный скин, используйте /inv","Закрыть","");
		}
	case D_DONATE_LICENSES: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 70) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			if(lic[playerid][0] == 1 && lic[playerid][1] == 1 && lic[playerid][2] == 1 && lic[playerid][3] == 1) {
				D(playerid, DIALOG_NONE, DSM, " ", ""G"У Вас уже есть все комплекты лицензий", "Закрыть", "");
				return true;
			}
			lic[playerid][0] =
			lic[playerid][1] =
			lic[playerid][2] =
			lic[playerid][3] = 1;
			UpdateLicenses(playerid);
			GiveDonate(playerid, -70, "покупка комплекта лицензий");
			D(playerid,DIALOG_NONE,DSM," ",""W"Вы успешно купили полный комплект лицензий","Закрыть","");
		}
	case D_DONATE_SKILLS: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 300) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			if(PI[playerid][pGunSkill][0] == 100 && PI[playerid][pGunSkill][1] == 100 && PI[playerid][pGunSkill][2] == 100 &&
					PI[playerid][pGunSkill][3] == 100 && PI[playerid][pGunSkill][4] == 100 && PI[playerid][pGunSkill][5] == 100) {
				D(playerid, DIALOG_NONE, DSM, " ", ""G"У Вас максимальный навык владения оружием", "Закрыть", "");
				return true;
			}
			PI[playerid][pGunSkill][0] = 100;
			PI[playerid][pGunSkill][1] = 100;
			PI[playerid][pGunSkill][2] = 100;
			PI[playerid][pGunSkill][3] = 100;
			PI[playerid][pGunSkill][4] = 100;
			PI[playerid][pGunSkill][5] = 100;
			save_skill(playerid);
			SetPlayerSkills(playerid);
			GiveDonate(playerid, -300, "покупка навыка владения оружием");
			D(playerid,DIALOG_NONE,DSM," ",""W"Все навыки владения оружием прокачены на 100%","Закрыть","");
		}
	case D_DONATE_UNWARN: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 50) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			if(PI[playerid][pWarns] == 0) return D(playerid, DIALOG_NONE, DSM, " ", ""G"На вашем аккаунте нет предупреждений", "Закрыть", "");
			GiveDonate(playerid, -50, "снятие варна");
			D(playerid, DIALOG_NONE, DSM, " ", ""W"На вашем аккаунте теперь снято одно предупреждение", "Закрыть", "");
			PI[playerid][pWarns] --;
			UpdatePlayerData(playerid, "pWarns", PI[playerid][pWarns]);
		}
	case D_DONATE_VIP: {
			if(!response) return pc_cmd_donate(playerid), DeletePVar(playerid,"premium_");
			new premium = GetPVarInt(playerid,"premium_");
			switch(premium) {
			case 1:
				{
					if(PI[playerid][pRouble] < 200) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
					GiveDonate(playerid, -200, "покупка премиум-аккаунта на 2 недели");
					PI[playerid][pPremium] = gettime()+(14*24*60*60);
				}
			case 2:
				{
					if(PI[playerid][pRouble] < 350) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
					GiveDonate(playerid, -350, "покупка премиум-аккаунта на 4 недели");
					PI[playerid][pPremium] = gettime()+(21*24*60*60);
				}
			case 3:
				{
					if(PI[playerid][pRouble] < 700) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
					PI[playerid][pPremium] = gettime()+(90*24*60*60);
					GiveDonate(playerid, -700, "покупка премиум-аккаунта на 3 месяца");
					UpdatePlayerData(playerid,"premium",PI[playerid][pPremium]);
				}
			}
			new string[200];
			new esc = floatround((PI[playerid][pPremium]-gettime())/3600/24, floatround_ceil);
			format(string,sizeof(string),"\n\n"W"Поздравляем с покупкой"ORANGE" премиум-аккаунта!"W"\n\nСрок действия премимум-аккаунта на"P" %i дней\n\n",esc);
			D(playerid, DIALOG_NONE, DSM, " ", string, "Закрыть", "");
			UpdatePlayerData(playerid,"premium",PI[playerid][pPremium]);
			DeletePVar(playerid,"premium_");
		}
	case D_DONATE_CONVERT: {
			if(!response) return pc_cmd_donate(playerid);
			new moneys;
			if(sscanf(inputtext,"i", moneys)) return D(playerid, D_DONATE_CONVERT, DSI, ""P"Покупка игровой валюты", ""W"Введите ниже сумму, которую хотите обменять на вирты\n{F2BB68}(1 руб = 2000$)", "Купить", "Назад");
			if(PI[playerid][pRouble] < moneys) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			if(moneys < 1) return D(playerid, D_DONATE_CONVERT, DSI, ""P"Покупка игровой валюты", ""W"Введите ниже сумму, которую хотите обменять на вирты\n{F2BB68}(1 руб = 2000$)", "Купить", "Назад");
			GiveMoney(playerid,moneys*2000,"донат конверт");
			D(playerid, DIALOG_NONE, DSM, " ", ""W"Ваш игровой счет успешно пополнен", "Закрыть", "");
			GiveDonate(playerid, -moneys, "донат-конверт");
			return 1;
		}
	case D_DONATE_CHANGENAME: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pWarns] >= 1) return D(playerid, DIALOG_NONE, DSM, " ", ""G"На вашем аккаунте присутствуют предупреждения", "Закрыть", "");
			if(!strlen(inputtext)) return D(playerid, D_DONATE_CHANGENAME, DSI, ""P"Смена игрового ника", ""W"Введите ниже ник-нейм, на который хотите изменить\n\n{F2BB68}Стоимость услуги: 20 руб", "Сменить", "Назад");
			if(PI[playerid][pRouble] < 20) return D(playerid, DIALOG_NONE, DSM, " ", ""W"Недостаточно денег на аккаунте\n\nПополнить свой счет можно на сайте{F2BB68} ml-rp.ru/donate", "Закрыть", "");
			if(!strlen(inputtext) || IsTextInvalid(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 20 || !IsARPName(inputtext) || strfind(inputtext, " ") != -1) return D(playerid, D_DONATE_CHANGENAME, DSI, ""P"Смена игрового ника", ""W"Введите ниже ник-нейм, на который хотите изменить\n\n{F2BB68}Стоимость услуги: 20 руб", "Сменить", "Назад");
			SetPVarString(playerid,"WantNickChange", inputtext);
			new query[128];
			mysql_format(connects, query, sizeof(query),"SELECT `Name` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", inputtext);
			mysql_tquery(connects, query, "GrandChangeName", "d", playerid);
			GiveDonate(playerid, -20, "смена ника");
			return 1;
		}
	case D_SELL_SIM: {
			if(response) {
				new sell_sim_id = GetPVarInt(playerid, "sim_id_sell")-1;
				new sell_sim_sum = GetPVarInt(playerid, "sim_summ");
				DeletePVar(playerid, "sim_id_sell");
				DeletePVar(playerid, "sim_summ");
				if(!IsPlayerConnected(sell_sim_id)) return SendClientMessage(playerid, COLOR_GREY, "Игрок который хотел продать Вам SIM-карту оффлайн");
				if(PI[playerid][pCash] < sell_sim_sum) {
					SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег");
					SendOk(sell_sim_id,"У покупателя недостаточно средств");
					return 1;
				}
				new string[128];
				format(string, sizeof(string), "Вы приобрели SIM-карту у "P"%s "W"за "ORANGE"$%i", player_name[sell_sim_id],sell_sim_sum);
				SendUse(playerid, string);
				format(string, sizeof(string), ""P"%s "W"купил у Вас SIM-карту за "ORANGE"$%i", player_name[playerid],sell_sim_sum);
				SendUse(sell_sim_id, string);
				
				string[0] = EOS;
				format(string,64,"продал симку %s",player_name[playerid]);
				GiveMoney(sell_sim_id, sell_sim_sum, string);
				string[0] = EOS;
				format(string,64,"купил симку у %s",player_name[sell_sim_id]);
				GiveMoney(playerid, -sell_sim_sum, string);

				PI[playerid][pPhone] = PI[sell_sim_id][pPhone];
				PI[sell_sim_id][pPhone] = 0;
				UpdatePlayerData(playerid,"pPhone",PI[playerid][pPhone]);
				UpdatePlayerData(sell_sim_id,"pPhone",PI[sell_sim_id][pPhone]);
				format(string, sizeof(string), "Ваш новый номер: "W"%i",PI[playerid][pPhone]);
				SendClientMessage(playerid, CGOLD, string);
			}
			else {
				SendOk(GetPVarInt(playerid, "sim_id_sell")-1, "Игрок отказался от покупки SIM-карты");
				SendOk(playerid, "Вы отказались от покупки SIM-карты");
				DeletePVar(playerid, "sim_id_sell");
				DeletePVar(playerid, "sim_summ");
			}
		}
	case D_TAXI_CALL: {
			if(!response) return true;
			if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "Для вызова такси выйдите из помещения");
			if(GetPVarInt(playerid,"taxi_time") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Вы уже вызвали такси, попробуйте позже");
			SendOk(playerid,"Вы вызвали такси, ожидайте подтверждения заказа");
			foreach(new i:Player)
			{
				if(!TI[i][tLogin] && PI[i][pJob] != 8) continue;
				if(GetPlayerVirtualWorld(i) != 0) continue;
				if(GetPlayerState(i) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(i) != GetPVarInt(i,"veh_id_taxi")) continue;
				static const f_str[] = ""W"%s"YELLOW" вызывает такси. "YELLOW"Расстояние: "W"%.2f м";
				new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 12) + (-2 + 6)];
				format(str,sizeof(str),f_str,player_name[playerid],GetDistanceBetweenPlayers(playerid,i));
				SendClientMessage(i,COLOR_YELLOW,str);
				SendClientMessage(i,COLOR_YELLOW,"Введите "W"/taxilist"YELLOW" для просмотра заказов");
			}
			SetPVarInt(playerid,"taxi_st",1);
			SetPVarInt(playerid,"taxi_time",gettime()+60);
		}
	case D_TAXIST: {
			if(!response) return 1;
			new id = GetPlayerID(inputtext[3]);
			DeletePVar(id,"taxi_st");
			DeletePVar(id,"taxi_time");
			if(playerid == id) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете принять свой заказ");
			static const f_str[] = "[TAXI] "W"%s"YELLOW" принял Ваш заказ. Автомобиль: "W"%s";
			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 12)];
			format(str,sizeof(str),f_str,player_name[playerid],gTransport[GetVehicleModel(GetPlayerVehicleID(playerid))-400][trName]);
			SendClientMessage(id,COLOR_YELLOW,str);
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(id, X, Y, Z);
			EnableGPSForPlayer(playerid, X, Y, Z);
		}
	case D_TAXI_COUNT: {
			if(!response) return 1;
			new id = GetPlayerID(inputtext[3]);
			TI[playerid][tTaxiGoing] = true;
			TI[playerid][tTaxiPass] = id;
			TI[playerid][tTaxiStart] = VehicleInfo[GetPlayerVehicleID(playerid)][vDrived];
			SendOk(playerid,"Вы включили счётчик");
			SendOk(playerid,""ORANGE"/taxi"W" запросить у пассажира место назначения");
		}
	case D_GPS: {
		if(!response) return 1;
		switch(listitem) {
			case 0:{
				D(playerid,D_GPS_O,DSL,""CS"Общественные места",""CS"1."W" Центр занятости\n\
												"CS"2."W" Банк\n\
												"CS"3."W" Автошкола\n\
												"CS"4."W" Военкомат\n\
												"CS"5."W" ЖД Вокзал г. ЛС\n\
												"CS"6."W" Церковь\n\
												"CS"7."W" Казино\n\
												"CS"8."W" Ловля рыбы\n\
												"CS"9."W" Спорт-Зал\n\
												"CS"10."W" Риэлторское агенство\n\
												"CS"11."W" Тир\n\
												"CS"12."W" Озеро 'место поиска предметов'","Выбрать","Назад");
			}
			case 1: {
					D(playerid,D_GPS_WORK,DSL,""CS"Работы",""CS"1."W" Яблочный сад\n\
											"CS"2."W" Оружейный завод\n\
											"CS"3."W" Лесопилка\n\
											"CS"4."W" Чистильщик канализаций\n\
											"CS"5."W" Работа на стройке\n\
											"CS"6."W" Работа инкассатора\n\
											"CS"7."W" Развозчик пиццы\n\
											"CS"8."W" Транспортная компания","Выбрать","Назад");
			}
			case 2: {
					D(playerid,D_GPS_WORK_2,DSL,""CS"Аренда транспортного средства",""CS"1."W" Аренда автобусов\n\
											"CS"2."W" Аренда развозчиков еды\n\
											"CS"3."W" Аренда транспорта механиков г. ЛС №1\n\
											"CS"4."W" Аренда транспорта механиков г. ЛС №2\n\
											"CS"5."W" Аренда транспорта для уборки улиц\n\
											"CS"6."W" Аренда развозчиков продуктов\n\
											"CS"7."W" Аренда развозчиков топлива\n\
											"CS"8."W" Аренда такси","Выбрать","Назад");
			}
			case 3: D(playerid,D_GPS_ORG,DSL,""CS"Организации", ""CS"1."W" Государственные организации\n"CS"2."W" Нелегальные организации","Выбрать","Отмена");
			case 4: D(playerid,D_GPS_AUTOSALON,DSL,""CS"Автосалоны и тюнинги",""CS"1."W" Автосалон эконом/средний класс\n"CS"2."W" Автосалон спорт класса\n"CS"3."W" Мото-Вело салон\n"CS"4."W" Дома на колесах\n"CS"5."W" Тюнинг г. ЛС\n","Выбрать","Назад");
			case 5: {
					new string[2512];
					new count_business = 0;
					for(new i = 0; i < gBusinessCount; i ++) {
						//if(gBusiness[i][bizzType] == 7 || gBusiness[i][bizzType] == 21 || gBusiness[i][bizzType] == 22 || gBusiness[i][bizzType] == 23 || gBusiness[i][bizzType] == 8 || gBusiness[i][bizzType] == 14 || gBusiness[i][bizzType] == 18) continue;
						count_business++;
						format(string,sizeof(string),"%s"CS"%d."W" %s\n",string,count_business,gBusiness[i][bizzName]);
					}
					D(playerid, D_GPS_BIZZ, DSL, ""CS"Бизнесы", string, "Выбрать", "Назад");
				}
			case 6: D(playerid,D_GPS_HOTEL,DSL,""CS"Многоквартирные дома",""CS"1."W" Район Ganton\n"CS"2."W" Район Verona Beach","Выбрать","Назад");
			case 7: {
					EnableGPSForPlayer(playerid,386.0006,-1910.2733,7.8359);
					SendClientMessage(playerid,CGOLD,"Местоположение Центрального рынка отмечено в вашем GPS");
				}
			case 8: {
					EnableGPSForPlayer(playerid,1495.2009,-1279.9304,14.5749);
					SendClientMessage(playerid,CGOLD,"Местоположение Семейного офиса отмечено в вашем GPS");
				}
			case 9:{
					static const f_str[] = ""CS"1. "W"Контейнеры\n\
											"CS"2. "W"Центр развлечений\n\
											"CS"3. "W"Аукцион гаражей";

					new string[sizeof(f_str)];
					format(string,sizeof(string),"%s",f_str);
					D(playerid, D_GPS_RAZ, DSL, ""CS"Развлечения", string, "Выбрать", "Назад");
			}
			case 10: {
					new string[2512];
					new count_business = 0;
					for(new i = 0; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzType] != 7) continue;
						count_business++;
						format(string,sizeof(string),"%s"CS"%d."W" %s\n",string,count_business,gBusiness[i][bizzName]);
					}
					D(playerid, D_GPS_BIZZ_1, DSL, ""CS"АЗС", string, "Выбрать", "Назад");
			}
			case 11: {
					D(playerid,D_GPS_RAZN,DSL,""CS"Разное",""CS"1."W" Аэропорт г. ЛС\n\
					"CS"2."W" Наркопритон\n\
					"CS"3."W" Автоугон\n\
					"CS"4."W" Ограбление домов\n\
					"CS"5."W" Ограбление банка\n\
					"CS"6."W" Черный рынок\n\
					"CS"7."W" Магазин одежды\n\
					"CS"8."W" Магазин аксессуаров\n\
					"CS"9."W" Дуэли [OG]\n\
					"CS"10."W" Квестовая линия Хакера", "Выбрать", "Назад");
			}
		}
	}
	/*case D_GPS_2: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					new max_distance = 100000;
					new id_biz = -1;
					for(new i = 0; i < gBusinessCount; i ++) {

						if(gBusiness[i][bizzType] != 7) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]));
						if(here_distance < max_distance) {
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					SendClientMessage(playerid,CGOLD,"Местоположение ближайшей АЗС успешно отмечено в вашем GPS");
					EnableGPSForPlayer(playerid,gBusiness[id_biz][bizzX],gBusiness[id_biz][bizzY],gBusiness[id_biz][bizzZ]);
					return 1;
				}
			case 1: {
					new max_distance = 100000;
					new id_biz = -1;
					for(new i = 0; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzType] != 1) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]));
						if(here_distance < max_distance) {
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					SendClientMessage(playerid,CGOLD,"Местоположение ближайшей Закусочной успешно отмечено в вашем GPS");
					EnableGPSForPlayer(playerid,gBusiness[id_biz][bizzX],gBusiness[id_biz][bizzY],gBusiness[id_biz][bizzZ]);
					return 1;
				}
			case 2: {
					new max_distance = 100000;
					new id_biz = -1;
					for(new i = 0; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzType] != 2) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]));
						if(here_distance < max_distance) {
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					SendClientMessage(playerid,CGOLD,"Местоположение ближайшего 24-7 успешно отмечено в вашем GPS");
					EnableGPSForPlayer(playerid,gBusiness[id_biz][bizzX],gBusiness[id_biz][bizzY],gBusiness[id_biz][bizzZ]);
					return 1;
				}
			case 3: {
					new max_distance = 100000;
					new id_atm = -1;
					for(new i = 0; i < MAX_ATM; i++) {
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, ATMData[i][ATM_Pos][0],ATMData[i][ATM_Pos][1],ATMData[i][ATM_Pos][2])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), ATMData[i][ATM_Pos][0],ATMData[i][ATM_Pos][1],ATMData[i][ATM_Pos][2]));
						if(here_distance < max_distance) {
							id_atm = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_atm == -1) return 1;
					SendClientMessage(playerid,CGOLD,"Местоположение ближайшего банкомата успешно отмечено в вашем GPS");
					EnableGPSForPlayer(playerid,ATMData[id_atm][ATM_Pos][0],ATMData[id_atm][ATM_Pos][1],ATMData[id_atm][ATM_Pos][2]);
					return 1;
				}
	

		}*/
	case D_GPS_RAZ:
	{
		if(!response) return 1;
		switch(listitem)
		{
			case 0:
			{
					EnableGPSForPlayer(playerid,2391.0027,-2606.1868,13.6786);
					SendClientMessage(playerid,CGOLD,"Местоположение контейнеров отмечено в вашем GPS");
			}
			case 1: 
			{
					EnableGPSForPlayer(playerid,1208.4152,-1747.0403,13.593);
					SendClientMessage(playerid,CGOLD,"Местоположение Центра развлечений отмечено в вашем GPS");
			}
			case 2:
			{
					EnableGPSForPlayer(playerid,1025.6093,-1770.7714,13.5469);
					SendClientMessage(playerid,CGOLD,"Местоположение Аукциона гаражей отмечено в вашем GPS");
			}
		}
	}
	case D_GPS_ORG: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					D(playerid,D_GPS_GOS,DSL,""CS"Государственные организации","\
											"CS"1."W" Правительство\n\
											"CS"2."W" Полицейский участок г. ЛС\n\
											"CS"3."W" Полицейский участок RCSD\n\
											"CS"4."W" Больница г. ЛС\n\
											"CS"5."W" ФБР\n\
											"CS"6."W" Нац. Гвардия\n\
											"CS"7."W" Радиоцентр г. ЛС\n\
											"CS"8."W" Автошкола\n\
											","Выбрать","Назад");
				}
			case 1: {
					D(playerid,D_GPS_NOLEGAL,DSL,""CS"Нелегальные организации","\
											"CS"1."W" The Ballas Gang\n\
											"CS"2."W" The Vagos Gang\n\
											"CS"3."W" The Grove Gang\n\
											"CS"4."W" The Aztecas Gang\n\
											"CS"5."W" The Rifa Gang\n\
											"CS"6."W" Итальянская мафия\n\
											"CS"7."W" Японская мафия\n\
											"CS"8."W" Русская мафия\n\
											"CS"9."W" Angels MC\n\
											"CS"10."W"Bandidos MC","Выбрать","Назад");
				}
			}
		}
	case D_GPS_RAZN: { 
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[28];
			switch(listitem) {
			case 0: EnableGPSForPlayer(playerid,1910.6567,-2326.6270,13.5469), str = "Аэропорта г. ЛС";
			case 1: EnableGPSForPlayer(playerid,2169.8020,-1674.0913,15.0859), str = "Наркопритона";
			case 2: EnableGPSForPlayer(playerid,2493.9075,-1461.5183,24.0230), str = "Автоугона";
			case 3: EnableGPSForPlayer(playerid,2358.3342,-2010.1589,13.5453), str = "Ограбления домов";
			case 4: EnableGPSForPlayer(playerid,2453.2373,-1899.4130,13.5469), str = "Ограбления банка";
			case 5: EnableGPSForPlayer(playerid,2314.2937,-2003.0448,13.5481), str = "Черного рынка";
			case 6: EnableGPSForPlayer(playerid,2245.4104,-1661.9368,15.4690), str = "Магазина одежды";
			case 7: EnableGPSForPlayer(playerid,1422.5580,-1623.7877,13.5469), str = "Магазина аксессуаров";
			case 8: EnableGPSForPlayer(playerid,2057.6580,-1898.5250,13.5538), str = "Дуэлей";
			case 9: EnableGPSForPlayer(playerid,CHECK_HACKER), str = "Квестовая линия хакера";
			}
			format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
	case D_GPS_O: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[28];
			switch(listitem) {
			case 0: EnableGPSForPlayer(playerid,1411.5740,-1699.5056,13.5395), str = "Центра занятости";
			case 1: EnableGPSForPlayer(playerid,1310.1082,-1372.9125,13.6081-0.5), str = "Банка";
			case 2: EnableGPSForPlayer(playerid,738.9437,-1414.0231,13.5187), str = "Автошколы";
			case 3: EnableGPSForPlayer(playerid,1241.3760,325.8867,19.7555), str = "Военкомата";
			case 4: EnableGPSForPlayer(playerid,1814.4481,-1890.3649,13.4141), str = "Ж/Д Вокзала г. ЛС";
			case 5: EnableGPSForPlayer(playerid,2228.7283,-1333.2148,23.9844), str = "Церкви";
			case 6: EnableGPSForPlayer(playerid,1287.6201,-1154.8115,23.8281), str = "Казино";
			case 7: EnableGPSForPlayer(playerid,796.0737,-1821.4429,13.0234), str = "Ловли рыбы";
			case 8: EnableGPSForPlayer(playerid,2226.1067,-1724.4768,13.5577), str = "Спорт-Зала";
			case 9: EnableGPSForPlayer(playerid,606.5849,-1458.5662,14.3826), str = "Риэлторского агенства";
			case 10: EnableGPSForPlayer(playerid,1362.9243,-1279.1244,13.5469), str = "Тира";
			case 11: EnableGPSForPlayer(playerid,-785.2922,-1893.7770,8.2463), str = "Озеро";
			}
			format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
	case D_GPS_WORK_2: {
		if(!response) return pc_cmd_gps(playerid);
		new string[144],str[40];
		switch(listitem) {
		case 0: EnableGPSForPlayer(playerid,1269.4330,-1846.6799,13.3974), str = "Аренды автобусов г. лс";
		case 1: EnableGPSForPlayer(playerid,218.3788,-1443.7483,13.2123), str = "Аренды развозчиков еды г. ЛС";
		case 2: EnableGPSForPlayer(playerid,1636.6709,-1106.8654,23.9063), str = "Аренды транспорта механиков г. ЛС №1";
		case 3: EnableGPSForPlayer(playerid,-82.6767,-1155.2017,1.7500), str = "Аренды транспорта механиков г. ЛС №2";
		case 4: EnableGPSForPlayer(playerid,693.0519,-1576.1600,14.2411), str = "Аренда транспорта для уборки улиц";
		case 5: EnableGPSForPlayer(playerid, 1344.0884, 352.1465, 19.554), str = "Аренды развозчиков продуктов";
		case 6: EnableGPSForPlayer(playerid, -10.1753, -314.8848, 5.4229), str = "Аренды топлива продуктов";
		case 7: EnableGPSForPlayer(playerid,1103.6682,-1742.0496,13.4692), str = "Таксопарка";
		}
		format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
		SendClientMessage(playerid,CGOLD,string);
	}
	case D_GPS_WORK: {
			if(!response) return pc_cmd_gps(playerid);
			new string[144],str[40];
			switch(listitem) {
			case 0: EnableGPSForPlayer(playerid,-118.2737,7.1584,3.1172), str = "Яблочного сада";
			case 1: EnableGPSForPlayer(playerid,-99.5097,-305.2837,1.4297), str = "Оружейного завода";
			case 2: EnableGPSForPlayer(playerid,1099.8252,-303.9689,73.9922), str = "Лесопилки";
			case 3: EnableGPSForPlayer(playerid,2218.2473,-2524.7737,13.5469), str = "Чистильщик канализаций";
			case 4: EnableGPSForPlayer(playerid,1683.6522,400.0472,30.4022), str = "Стройки ЛС";
			case 5: EnableGPSForPlayer(playerid,1283.5035,-1344.8032,13.3856), str = "Работы инкассатора";
			case 6: EnableGPSForPlayer(playerid,792.1321,-1627.8546,13.3906), str = "Работы курьера";
			case 7: EnableGPSForPlayer(playerid,-501.7820,-525.4227,25.5234), str = "Транспортной компании";
			}
			format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
	case D_GPS_GOS: {
			if(!response) return D(playerid,D_GPS_ORG,DSL,""P"Организации", ""P"1."W" Государственные организации\n"P"2."W" Нелегальные организации","Выбрать","Отмена");
			new string[120],str[32];
			switch(listitem) {
			case 0: EnableGPSForPlayer(playerid,1481.4768,-1744.2710,13.5469), str = "Правительства";
			case 1: EnableGPSForPlayer(playerid,1539.1508,-1675.5208,13.5469), str = "Полицейского участка г. лс";
			case 2: EnableGPSForPlayer(playerid,634.6371,-571.4913,16.3359), str = "RCSD";
			case 3: EnableGPSForPlayer(playerid,1188.2722,-1325.6403,13.5595-0.5), str = "Больницы г. лс";
			case 4: EnableGPSForPlayer(playerid,1539.4984,-1276.7616,17.4080), str = "ФБР";
			case 5: EnableGPSForPlayer(playerid,2704.6938,-2399.0684,13.6328), str = "Нац. Гвардии";
			case 6: EnableGPSForPlayer(playerid,1589.3326,-1317.3939,17.5201), str = "Радиоцентра г. лс";
			case 7: EnableGPSForPlayer(playerid,739.0844,-1412.1852,13.5292), str = "Автошколы";
			}
			format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
	case D_GPS_NOLEGAL: {
			if(!response) return D(playerid,D_GPS_ORG,DSL,""P"Организации", ""P"1."W" Государственные организации\n"P"2."W" Нелегальные организации","Выбрать","Отмена");
			new string[120],str[24];
			switch(listitem) {
			case 0: EnableGPSForPlayer(playerid,2646.6877,-2008.3911,13.3828), str = "The Ballas Gang";
			case 1: EnableGPSForPlayer(playerid,2742.2312,-1177.2218,69.2422), str = "The Vagos Gang";
			case 2: EnableGPSForPlayer(playerid,2461.8611,-1658.8733,13.3047), str = "The Grove Gang";
			case 3: EnableGPSForPlayer(playerid,1696.4821,-2112.6555,13.4739), str = "The Aztecas Gang";
			case 4: EnableGPSForPlayer(playerid,2181.6118,-1806.0558,13.3716), str = "The Rifa Gang";
			case 5: EnableGPSForPlayer(playerid,653.5861,-479.7503,16.3359), str = "Итальянской мафии";
			case 6: EnableGPSForPlayer(playerid,664.7656,-1306.5183,13.4609), str = "Японской мафии";
			case 7: EnableGPSForPlayer(playerid,1362.6654,401.4814,19.5706), str = "Русской мафии";
			case 8: EnableGPSForPlayer(playerid, 320.6742,-65.9639,1.5781), str = "Angels MC";
			case 9: EnableGPSForPlayer(playerid, 2348.8169,247.4270,26.3359), str = "Bandidos MC";
			}
			format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
	case D_GPS_HOTEL: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[22];
			switch(listitem) {
			case 0: EnableGPSForPlayer(playerid,2294.0024,-1796.0762,13.5469), str = "Района Ganton";
			case 1: EnableGPSForPlayer(playerid,864.2650,-1643.5327,13.5469), str = "Района Verona Beach";
			}
			format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
	case D_GPS_BIZZ: {
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1,string[128];
			for(new i = 0; i < gBusinessCount; i ++) {
				//if(gBusiness[i][bizzType] == 7 || gBusiness[i][bizzType] == 21 || gBusiness[i][bizzType] == 22 || gBusiness[i][bizzType] == 23 || gBusiness[i][bizzType] == 8 || gBusiness[i][bizzType] == 14 || gBusiness[i][bizzType] == 18) continue;
				if((count_ammo-1) == listitem) {
					format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",gBusiness[i][bizzName]);
					SendClientMessage(playerid, CGOLD, string);
					EnableGPSForPlayer(playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
	case D_GPS_BIZZ_1: {
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1,string[128];
			for(new i = 0; i < gBusinessCount; i ++) {
				if(gBusiness[i][bizzType] != 7) continue;
				if((count_ammo-1) == listitem) {
					format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",gBusiness[i][bizzName]);
					SendClientMessage(playerid, CGOLD, string);
					EnableGPSForPlayer(playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
	case D_GPS_AUTOSALON: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[36];
			switch(listitem) {
			case 0: EnableGPSForPlayer(playerid,551.5418,-1286.2537,17.2482), str = "Автосалона эконом/среднего класса";
			case 1: EnableGPSForPlayer(playerid,1240.9624,-1486.5015,13.5469), str = "Автосалона спорт класса";
			case 2: EnableGPSForPlayer(playerid,2126.6680,-1119.6429,25.3591), str = "Мото-вело салона";
			case 3: EnableGPSForPlayer(playerid,714.3361,-546.1120,16.3359), str = "Домов на колесах";
			case 4: EnableGPSForPlayer(playerid,882.1031,-1339.8259,13.3671), str = "Тюнинга г. ЛС";
			}
			format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
	case D_ECONOMY_MENU: {
			if(!response) return true;
			dialog_mayor(playerid);
		}
	case D_ECONOMY_MENU_1: {
			if(!response) return true;
			new str[120];
			format(str,sizeof(str),""P"Правительство |"W" Губернатор: %s",FI[fWHITEHOUSE][fLeader]);
			D(playerid,D_MAYOR,DSL,str,"\
		"GREEN"-"W" Пожертвовать деньги в казну\n\
		"GREEN"-"W" Самые щедрые пожертвования\n\
		"GREEN"-"W" Информация о налогах","Выбрать","Отмена");
			return true;
		}
	case D_FAMILY_OFFICE: {
			if(!response) return true;
			switch(listitem) {
			case 0: D(playerid,D_FAMILY_CREATE,DSI, ""P"Создание семьи","\n\n"W"Название семьи должно состоять от 6 до 30 символов.\n\nСтоимость создания семьи - "GREEN"2.000.000$\n\n"W"Введите ниже название семьи:","Создать","Отмена");
			case 1: D(playerid,D_FAMILY_OFFICE_1,DSL, ""P"Рейтинг семей",""P"1."W" По рейтингу\n"P"2."W" По талонам","Выбрать","Отмена");
			}
		}
	case D_FAMILY_OFFICE_1: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					new name[750],rows, end_point, count, string[850];
					new point;
					new Cache:result = mysql_query(connects, "SELECT `name`,`point` FROM `family` WHERE `point` > 0 ORDER BY `point` DESC");
					cache_get_row_count(rows);
					if(rows) {
						string = ""W"Семья\t"W"Рейтинг\n";
						static const f_str[] = "%i. %s\t%d\n";
						new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++)
						{
							cache_get_value_name(i, "name", name, 44);
							cache_get_value_name_int(i, "point",point);
							if(end_point == point || count == 20) continue;
							end_point = point;
							count++;
							format(str, sizeof(str), f_str, count, name, point);
							strcat(string, str);
						}
						D(playerid, DIALOG_NONE, DSTH, ""P"ТОП-20 семей по рейтингу", string, "Закрыть", "");
					}
					if(count == 0) return D(playerid, DIALOG_NONE, DSM, ""P"ТОП-20 семей по рейтингу", ""W"Активных семей не найдено", "Закрыть", "");
					cache_delete(result);
				}
			case 1: {
					new name[75],rows, end_talon, count, string[850];
					new talon;
					new Cache:result = mysql_query(connects, "SELECT `name`,`talon` FROM `family` WHERE `talon` > 0 ORDER BY `talon` DESC");
					cache_get_row_count(rows);
					if(rows) {
						string = ""W"Семья\t"W"Талонов\n";
						static const f_str[] = "%i. %s\t%d\n";
						new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++)
						{
							cache_get_value_name(i, "name", name, 44);
							cache_get_value_name_int(i, "talon",talon);
							if(end_talon == talon || count == 20) continue;
							end_talon = talon;
							count++;
							format(str, sizeof(str), f_str, count, name, talon);
							strcat(string, str);
						}
						D(playerid, DIALOG_NONE, DSTH, ""P"ТОП-20 семей по талонам", string, "Закрыть", "");
					}
					if(count == 0) return D(playerid, DIALOG_NONE, DSM, ""P"ТОП-20 семей по талонам", ""W"Активных семей не найдено", "Закрыть", "");
					cache_delete(result);
				}
			}
		}
	case D_ECONOMY: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			switch(listitem) {
			case 0: {
					static const f_str[] = ""W"Текущее состояние казны: "GREEN"%d$\n\n\
											"P"Заработок в казну штата:\n\
											"W"Процент при продаже бизнеса в государство: "GREEN"%d%%\n\
											"W"Процент при продаже дома в государство: "GREEN"%d%%\n\
											"W"Процент при продаже автомобиля в государство: "GREEN"%d%%\n\
											"W"Процент адвокатских услуг: "GREEN"15%%";
					new string[sizeof(f_str) +1 + (-2 + 13) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3)];
					format(string,sizeof(string),f_str,FI[fWHITEHOUSE][fBank],Nalog[3],Nalog[0], Nalog[4]);
					D(playerid,D_ECONOMY_MENU,DSM, ""P"Информация",string,"Назад","");
				}
			case 1: {
					new string[150];
					format(string,sizeof(string),"Пособие каждый час %s\nУстановить сумму пособия "P"[%d$]",Nalog[1] ? (""GREEN"[Включено]") : ("{C34D45}[Выключено]"),Nalog[2]);
					D(playerid,D_ECONOMY_POSOBIE,DSL, ""P"Пособие",string,"Выбрать","Закрыть");
				}
			case 2: D(playerid,D_ECONOMY_PREM,DSL,""P"Перевод денег","Полиция ЛС\nRCSD\nФБР\nНац. Гвардия\nБольница г.ЛС\nРадиоцентр ЛС","Выбрать", "Отмена");
			case 3: {
					static const f_str[] = ""W"Сейчас налог на недвижимость составляет: "GREEN"%d%%\n\
					"G"Введите ниже размер налога на имущество (от "GREEN"40%%"G" до"GREEN" 60%%"G")";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,Nalog[0]);
					D(playerid,D_ECONOMY_HOUSE,DSI, ""P"Налог на бизнес",string,"Принять", "Назад");
				}
			case 4: {
					static const f_str[] = ""W"Сейчас налог на бизнес составляет: "GREEN"%d%%\n\
					"G"Введите ниже размер налога на бизнес (от "GREEN"40%%"G" до"GREEN" 60%%"G")";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,Nalog[3]);
					D(playerid,D_ECONOMY_BIZZ,DSI, ""P"Налог на бизнес",string,"Принять", "Назад");
				}
			case 5: {
					static const f_str[] = ""W"Сейчас налог на транспорт составляет: "GREEN"%d%%\n\
					"G"Введите ниже размер налога на транспорт (от "GREEN"40%%"G" до"GREEN" 60%%"G")";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,Nalog[4]);
					D(playerid,D_ECONOMY_CAR,DSI, ""P"Налог на транспорт",string,"Принять", "Назад");
				}
			case 6:  D(playerid,D_ECONOMY_PUT_MENU,DSL,""P"Казна","Положить деньги в казну\nСнять деньги с казны","Выбрать", "Отмена");
			case 55: D(playerid,D_ECONOMY_PUT,DSI,""P"Управление штатом","\n\n"W"Укажите сумму, на которую хотите пополнить казну штата\n\n","Пополнить", "Отмена");
			case 56: D(playerid,D_ECONOMY_INPUT,DSI,""P"Управление штатом","\n\n"W"Укажите сумму, которую хотите снять с казны штата\n\n","Снять", "Отмена");
			}
		}
	case D_ECONOMY_PUT_MENU: {
			if(!response) return true;
			switch(listitem) {
			case 0: D(playerid,D_ECONOMY_PUT,DSI,""P"Положить деньги в казну",""W"Введите ниже количество, которое хотите положить "G"(от"GREEN" 1$"G" до"GREEN" 500000$"W")","Пополнить", "Назад");
			case 1: {
					new string[200];
					format(string,sizeof(string),""W"Текущее состояние казны: "GREEN"%d$"W"\n\nВведите ниже количество, которое хотите снять "G"(от"GREEN" 1$"G" до"GREEN" 500000$"W")", FI[fWHITEHOUSE][fBank]);
					D(playerid,D_ECONOMY_INPUT,DSI,""P"Снять деньги с казны",string,"Снять", "Назад");
				}
			}
		}
		
	case D_ECONOMY_POSOBIE: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			switch(listitem) {
			case 0: {
					switch(Nalog[1]) {
					case 0: Nalog[1] = 1;
					case 1: Nalog[1] = 0;
					}
					UpdateEconomyData("nalog_2",Nalog[1]);
					new string[150];
					format(string,sizeof(string),"Пособие каждый час %s\nУстановить сумму пособия "P"[%d$]",Nalog[1] ? (""GREEN"[Включено]") : ("{C34D45}[Выключено]"),Nalog[2]);
					D(playerid,D_ECONOMY_POSOBIE,DSL, ""P"Пособие",string,"Выбрать","Закрыть");
				}
			case 1: {
					static const f_str[] = ""W"Здесь Вы можете установить размер пособий ежедневной выплаты пособий граждан до 3 уровня\n\
					Средства будут списываться с казны штата\n"G"Введите ниже размер пособия (от"GREEN" 100$"G" до"GREEN" 1200$"G")";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,Nalog[2]);
					D(playerid,D_ECONOMY_POSOBIE_1,DSI, ""P"Установить пособия",string,"Установить", "Назад");
				}
			}
		}
	case D_ECONOMY_POSOBIE_1: {
			if(!response) return dialog_mayor(playerid);
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 100 || salary > 1200) {
				static const f_str[] = ""W"Здесь Вы можете установить размер пособий ежедневной выплаты пособий граждан до 3 уровня\n\
				Средства будут списываться с казны штата\n"G"Введите ниже размер пособия (от"GREEN" 100$"G" до"GREEN" 1200$"G")";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,Nalog[2]);
				D(playerid,D_ECONOMY_POSOBIE_1,DSI, ""P"Установить пособия",string,"Установить", "Назад");
				return 1;
			}
			Nalog[2] = salary;
			UpdateEconomyData("nalog_3",salary);
			static const f_string[] = "Размер пособия каждый час установлено в"ORANGE" %d$"G" (до 3 уровня)";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,Nalog[2]);
			SendUse(playerid,str);
		}
	case D_ECONOMY_HOUSE: {
			if(!response) return dialog_mayor(playerid);
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 40 || salary > 60) {
				static const f_str[] = ""W"Сейчас налог на имущество составляет: "GREEN"%d%%\n\
				"G"Введите ниже размер налога на имущество (от "GREEN"40%%"G" до"GREEN" 60%%"G")";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,Nalog[0]);
				D(playerid,D_ECONOMY_HOUSE,DSI, ""P"Налог на бизнес",string,"Принять", "Назад");
				return 1;
			}
			Nalog[0] = salary;
			UpdateEconomyData("nalog_1",salary);
			static const f_string[] = "Налог на имущество в "ORANGE"%d%%"W" успешно установлен";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,Nalog[0]);
			SendUse(playerid,str);
		}
	case D_ECONOMY_BIZZ: {
			if(!response) return dialog_mayor(playerid);
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 40 || salary > 60) {
				static const f_str[] = ""W"Сейчас налог на бизнес составляет: "GREEN"%d%%\n\
				"G"Введите ниже размер налога на бизнес (от "GREEN"40%%"G" до"GREEN" 60%%"G")";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,Nalog[3]);
				D(playerid,D_ECONOMY_BIZZ,DSI, ""P"Налог на бизнес",string,"Принять", "Назад");
				return 1;
			}
			Nalog[3] = salary;
			UpdateEconomyData("nalog_4",salary);
			static const f_string[] = "Налог на бизнес в "ORANGE"%d%%"W" успешно установлен";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,Nalog[3]);
			SendUse(playerid,str);
		}
	case D_ECONOMY_CAR: {
			if(!response) return dialog_mayor(playerid);
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 40 || salary > 60) {
				static const f_str[] = ""W"Сейчас налог на транспорт составляет: "GREEN"%d%%\n\
				"G"Введите ниже размер налога на транспорт (от "GREEN"40%%"G" до"GREEN" 60%%"G")";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,Nalog[4]);
				D(playerid,D_ECONOMY_CAR,DSI, ""P"Налог на транспорт",string,"Принять", "Назад");
				return 1;
			}
			Nalog[4] = salary;
			UpdateEconomyData("nalog_5",salary);
			static const f_string[] = "Налог на транспорт в "ORANGE"%d%%"W" успешно установлен";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string, Nalog[4]);
			SendUse(playerid,str);
		}
	case D_ECONOMY_PREM: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new frac;
			switch(listitem) {
			case 0: frac = fLSPD;
			case 1: frac = fRCSD;
			case 2: frac = fFBI;
			case 3: frac = fARMYLS;
			case 4: frac = fMEDICLS;
			case 5: frac = fLSNEWS;
			}
			SetPVarInt(playerid,"prem_fration",frac);
			new string[450];
			format(string,sizeof(string),""W"Вы собираетесь перевести деньги в организацию: "ORANGE"%s\n"G"Введите ниже количество денег для перевода (от "GREEN"50000$"G" до"GREEN" 500000$"G")",FI[frac][fName]);
			D(playerid,D_ECONOMY_PREM_1,DSI, ""P"Перевод денег",string,"Перевести", "Назад");
		}
	case D_ECONOMY_PREM_1: {
			if(!response) return DeletePVar(playerid,"prem_fration"), dialog_mayor(playerid);
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 50000 || salary > 500000) {
				new string[450];
				format(string,sizeof(string),""W"Вы собираетесь перевести деньги в организацию: "ORANGE"%s\n"G"Введите ниже количество денег для перевода (от "GREEN"50000$"G" до"GREEN" 500000$"G")",FI[GetPVarInt(playerid,"prem_fration")][fName]);
				D(playerid,D_ECONOMY_PREM_1,DSI, ""P"Перевод денег",string,"Перевести", "Назад");
				return 1;
			}
			if (FI[fWHITEHOUSE][fBankCash] + salary > 500000)
			{
				new string[550];
				format(string, sizeof(string), "Суточный лимит на перевод/снятие средств с казны - $500.000. Доступный лимит: $%d", 500000 - FI[fWHITEHOUSE][fBankCash]);
				SendClientMessage(playerid,COLOR_GREY, string);
				return 1;
			}
			if(FI[fWHITEHOUSE][fBank] - salary < 0) return SendClientMessage(playerid, COLOR_GREY, "В казне недостаточно средств");
			FI[fWHITEHOUSE][fBankCash] += salary;
			UpdateFraction(fWHITEHOUSE,"BankCash",FI[fWHITEHOUSE][fBankCash]);
			FI[GetPVarInt(playerid,"prem_fration")][fBank] += salary;
			UpdateFraction(GetPVarInt(playerid,"prem_fration"),"Bank",FI[GetPVarInt(playerid,"prem_fration")][fBank]);
			FI[fWHITEHOUSE][fBank] -= salary;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
			static const f_string[] = "Перевод денежных средств в размере "ORANGE"%d$"W" организации "P"%s"W" выполнен успешно";
			new str[sizeof(f_string) +1 + (-2 + 4) + (-2 + 24)];
			format(str,sizeof(str),f_string,salary,FI[GetPVarInt(playerid,"prem_fration")][fName]);
			SendUse(playerid,str);
			DeletePVar(playerid,"prem_fration");
		}
	case D_ECONOMY_PUT: {
			if(!response) return D(playerid,D_ECONOMY_PUT_MENU,DSL,""P"Казна","Положить деньги в казну\nСнять деньги с казны","Выбрать", "Отмена");
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 1 || salary > 500000) {
				D(playerid,D_ECONOMY_PUT,DSI,""P"Положить деньги в казну",""W"Введите ниже количество, которое хотите положить "G"(от"GREEN" 1$"G" до"GREEN" 500000$"W")","Пополнить", "Назад");
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < salary) {
				D(playerid,D_ECONOMY_PUT,DSI,""P"Положить деньги в казну",""W"Введите ниже количество, которое хотите положить "G"(от"GREEN" 1$"G" до"GREEN" 500000$"W")\n\n"W"* У вас нет столько денег!","Пополнить", "Назад");
				return 1;
			}
			GiveMoney(playerid,-salary,"пополнение казны");
			FI[fWHITEHOUSE][fBank] += salary;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			FI[fWHITEHOUSE][fBankCash] -= salary;
			if(FI[fWHITEHOUSE][fBankCash] < 0) FI[fWHITEHOUSE][fBankCash] = 0;
			UpdateFraction(fWHITEHOUSE,"BankCash",FI[fWHITEHOUSE][fBankCash]);

			static const f_string[] = "Вы пополнили казну штата на "ORANGE"$%d";
			new str[sizeof(f_string) +1 + (-2 + 5)];
			format(str,sizeof(str),f_string,salary);
			SendUse(playerid,str);
		}
	case D_ECONOMY_INPUT: {
			if(!response) return D(playerid,D_ECONOMY_PUT_MENU,DSL,""P"Казна","Положить деньги в казну\nСнять деньги с казны","Выбрать", "Отмена");
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 1 || salary > 500000) {
				new string[200];
				format(string,sizeof(string),""W"Текущее состояние казны: "GREEN"%d$"W"\n\nВведите ниже количество, которое хотите снять "G"(от"GREEN" 1$"G" до"GREEN" 500000$"W")", FI[fWHITEHOUSE][fBank]);
				D(playerid,D_ECONOMY_INPUT,DSI,""P"Снять деньги с казны",string,"Снять", "Назад");
				return 1;
			}
			if(FI[fWHITEHOUSE][fBank] < salary) {
				new string[200];
				format(string,sizeof(string),""W"Текущее состояние казны: "GREEN"%d$"W"\n\nВведите ниже количество, которое хотите снять "G"(от"GREEN" 1$"G" до"GREEN" 500000$"W")\n\n* В казне недостаточно средств!", FI[fWHITEHOUSE][fBank]);
				D(playerid,D_ECONOMY_INPUT,DSI,""P"Снять деньги с казны",string,"Снять", "Назад");
				return 1;
			}
			if(FI[fWHITEHOUSE][fBankCash] + salary > 500000)
			{
				static const f_str[] = ""W"Текущее состояние казны: "GREEN"%d$"W"\n\nВведите ниже количество, которое хотите снять "G"(от"GREEN" 1$"G" до"GREEN" 500000$"W")\n\n* Суточный лимит на перевод/снятие средств с казны - $500.000. Доступный лимит: $%d";
				new string[sizeof(f_str) + 1 + (-2 + 6)];
				format(string, sizeof(string), f_str, 500000 - FI[fWHITEHOUSE][fBankCash]);
				D(playerid, D_ECONOMY_INPUT, DSI, ""P"Управление штатом", string, "Снять", "Отмена");
				return 1;
			}
			GiveMoney(playerid,salary,"снятие с казны");
			FI[fWHITEHOUSE][fBank] -= salary;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			FI[fWHITEHOUSE][fBankCash] += salary;
			UpdateFraction(fWHITEHOUSE,"BankCash",FI[fWHITEHOUSE][fBankCash]);

			static const f_string[] = "Вы сняли с казны штата "ORANGE"$%d";
			new str[sizeof(f_string) +1 + (-2 + 5)];
			format(str,sizeof(str),f_string,salary);
			SendUse(playerid,str);
		}
	case D_REC_KICK: {
			if(!response) return 1;
			if(SERIU[playerid][sID] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Произоша ошибка");
			if(!strlen(inputtext)) return D(playerid,D_REC_KICK,DSI, ""P"KICK","\n\n"W"Введите причину, по которой хотите кикнуть игрока с сервера:\n\n","Кикнуть","Отмена");
			new string[64];
			format(string,sizeof(string),"%d %s",SERIU[playerid][sID],inputtext);
			pc_cmd_kick(playerid,string);
		}
	case D_REC_WARN: {
			if(!response) return 1;
			if(SERIU[playerid][sID] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Произоша ошибка");
			if(!strlen(inputtext)) return D(playerid,D_REC_WARN,DSI, ""P"WARN","\n\n"W"Введите причину, по которой хотите выдать Warn игроку:\n\n","Варн","Отмена");
			new string[64];
			format(string,sizeof(string),"%d %s",SERIU[playerid][sID],inputtext);
			//			pc_cmd_warn(playerid,string);
		}
	case D_REC_BAN: {
			if(!response) return 1;
			if(SERIU[playerid][sID] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Произоша ошибка");
			new Days,Reason[31];
			if(sscanf(inputtext, "p<,>is[30]",Days,Reason)) return D(playerid,D_REC_BAN,DSI, ""P"BAN","\n\n"W"Введите причину, по которой хотите заблокировать аккаунт игроку:\n"NO"ВНИМАНИЕ!"W" Введите время и причину через запятую без пробелов (15,читер)\nВремя блокировки аккаунта: от 7 до 30 дней\n\n","Бан","Отмена");
			new string[78];
			format(string,sizeof(string),"%d %d %s",SERIU[playerid][sID],Days,Reason);
			//	pc_cmd_ban(playerid,string);
		}
	case D_UNBAN: {
			if(!response) return 1;
			if(!IsBannedName(UnbanName[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не заблокирован");
			new string[144];
			format(string,sizeof(string),"[A] Администратор %s разблокировал игрока %s",player_name[playerid],UnbanName[playerid]);
			AdmMSG(0xAFAFAFAA, string);
			WriteLog(LOG_UNBAN,player_name[playerid],UnbanName[playerid],"разблокировка");
			UnBanName(UnbanName[playerid]);
		}
	case D_MAYOR: {
			if(!response) return 1;
			switch(listitem) {
			case 0: D(playerid,D_MAYOR_BLAGO,DSI, ""P"Благотворительность","\n\n"W"Введите сумму, которую хотите пожертвовать в казну штата:\n\n","Перевести", "Отмена");
			case 1: {
					new name[24],rows, string[300];
					new blago, colvo = 0;
					new Cache:result = mysql_query(connects, "SELECT * FROM `accounts` WHERE `pBlago` > 0 ORDER BY `pBlago` DESC LIMIT 5");
					cache_get_row_count(rows);
					if(rows)
					{
						string = ""W"№ Имя\t"W"Пожертвовал\n\n";
						static const f_str[] = ""YELLOW"%i. "W"%s\t"GREEN"%d$\n";
						new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
							cache_get_value_name_int(i, "pBlago",blago);
							format(str, sizeof(str), f_str, i+1, name,blago);
							strcat(string, str);
							colvo++;
						}
						D(playerid, DIALOG_NONE, DSTH, ""P"Самые щедрые пожертвования", string, "Закрыть", "");
					}
					if(colvo == 0) return D(playerid, DIALOG_NONE, DSM, ""P"Самые щедрые пожертвования", ""W"Пожертвований не найдено", "Закрыть", "");
					cache_delete(result);
				}
			case 2: {
					static const f_str[] = ""W"Процент при продаже бизнеса в государство: "GREEN"%d%%\n\
											"W"Процент при продаже дома в государство: "GREEN"%d%%\n\
											"W"Процент при продаже автомобиля в государство: "GREEN"%d%%\n\
											"W"Процент адвокатских услуг: "GREEN"15%%";
					new string[sizeof(f_str) +1 + (-2 + 13) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3)];
					format(string,sizeof(string),f_str,Nalog[3],Nalog[0], Nalog[4]);
					D(playerid,D_ECONOMY_MENU_1,DSM, ""P"Информация",string,"Назад","");
				}
			}
		}
	case D_MAYOR_BLAGO: {
			if(!response) return 1;
			new salary = strval(inputtext);
			if(salary < 1000 || salary > 1000000) {
				D(playerid,D_MAYOR_BLAGO,DSI, ""P"Благотворительность","\n\n"W"Введите сумму, которую хотите пожертвовать в казну штата:\n\n"NO"*"G" От $1.000 до $1.000.000\n\n","Перевести", "Отмена");
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < salary) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств");
			GiveMoney(playerid,-salary,"пожертвование");
			PI[playerid][pBlago] += salary;
			UpdatePlayerData(playerid,"pBlago",PI[playerid][pBlago]);
			FI[fWHITEHOUSE][fBank] += salary;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
			static const f_string[] = "Вы успешно пожертвовали "ORANGE"$%d"W" в казну штата";
			new str[sizeof(f_string) +1 + (-2 + 9)];
			format(str,sizeof(str),f_string,salary);
			SendUse(playerid,str);
		}
	case dRentCar: {
			if(!response) return DeletePVar(playerid,"rent_carid");
			new arid = GetArendCarID(GetPVarInt(playerid, "rent_carid"));
			DeletePVar(playerid,"rent_carid");
			if(!lic[playerid][0]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет водительских прав");
			if(arid != -1) {
				if(TI[playerid][tArendKey] == -1) {
					if(ArendInfo[arid][aPlayerID] == INVALID_PLAYER_ID || !IsPlayerConnected(ArendInfo[arid][aPlayerID])) {
						if(PI[playerid][pCash] < ArendInfo[arid][aCost]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств");
						GiveMoney(playerid,-ArendInfo[arid][aCost],"аренда ТС");

						//bizz_pay(ArendInfo[arid][aBizz],floatround(ArendInfo[arid][aCost]));
						TI[playerid][tArendKey] = arid;

						ArendInfo[arid][aPlayerID] = playerid;
						D(playerid, DIALOG_NONE, DSM, ""P"Транспортное средство арендовано", ""W"Список доступных комманд:\n\n"YELLOW"/lock 3"W" - Закрыть/Открыть арендованный транспорт\n"YELLOW"/unrent"W" - Отказаться от аренды\n\n"NO"При отдалении от Т/С на 2км контракт автоматически расторгается", "Закрыть", "");
					}
					else SendClientMessage(playerid, COLOR_GREY, "Этот транспорт уже арендуют");
				}
				else SendClientMessage(playerid, COLOR_GREY, "Вы уже арендуете транспорт");
			}
		}
	case D_COP_GUN: {
			if(!response) return 1;
			switch(listitem) {
			case 0: GivePlayerWeapon(playerid,24,21);
			case 1: GivePlayerWeapon(playerid,25,30);
			case 2: GivePlayerWeapon(playerid,29,90);
			case 3: GivePlayerWeapon(playerid,31,150);
			case 4: GivePlayerWeapon(playerid,3,1);
			case 5: SetArmour(playerid,100);
			}

		}
	case dGiveGunTD: {
			if(!response) return true;
			if(!PI[playerid][pMember]) return 1;
			if(strfind(inputtext, "Бронежилет") != -1) {
				SetArmour(playerid, 100.0);
				return true;
			}
			if(listitem >= 13) return true;
			if(GunTickGet[playerid][listitem] > unix) return SendClientMessage(playerid, COLOR_GREY, "Нельзя брать оружие слишком часто");
			GunTickGet[playerid][listitem] = unix+20;
			new team;
			switch(GetPlayerVirtualWorld(playerid)) {
			case 31: team = fARMYLS;
			case 1: team = fLSPD;
			case 6: team = fRCSD;
			case 43: team = fFBI;
			}
			for(new i = 0 ; i < 12 ; i++) {
				if(strfind(inputtext, FW[i][team][fwName]) != -1) {
					new count_minus = 100;
					switch(FW[i][team][fwGunID]) {
					case 24: count_minus = 60;
					case 25: count_minus = 60;
					case 29: count_minus = 80;
					case 31: count_minus = 100;
					case 30: count_minus = 100;
					case 34: count_minus = 250;
					case 99: count_minus = 30;
					default: count_minus = 90;
					}
					if(FI[team][fMats] < count_minus) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно боеприпасов");
					if(IsACop(playerid) && PI[playerid][pRank] == 1 && FW[i][team][fwGunID] != 3) {
						SendClientMessage(playerid, COLOR_GREY, "Для Вашего ранга доступна только дубинка");
						return true;
					}
					FI[team][fMats] -= count_minus;
					UpdateFraction(team,"Mats",FI[team][fMats]);
					if(FW[i][team][fwGunID] == 99) {
						if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
						AddItem(playerid, 120, 1);
						return 1;
					}
					GivePlayerWeapon(playerid,FW[i][team][fwGunID],FW[i][team][fwGunAmmo]);
					break;
				}
			}
			ShowGetGun(playerid);
			return true;
		}
	case D_MATERIALS_BUY: {
			if(!response) return 1;
			if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не мафиози");
			if(GetPlayerMoneyEx(playerid) < 50000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			if(GetPlayerMoneyEx(playerid) < 50000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			if(FI[PI[playerid][pMember]][fMats]+10000 > 300000) return SendClientMessage(playerid, COLOR_GREY, "На склад Вашей мафии не поместится столько материалов");
			FI[PI[playerid][pMember]][fMats] += 10000;
			UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);
			GiveMoney(playerid,-50000,"покупка матов мафии");
			SendOk(playerid, "Вы купили 10000 материалов за 50000 вирт");
		}
	case dEContract: {
			if(!response) return 1;
			if(strval(inputtext) < 1 || strval(inputtext) > 50) {
				new string[156];
				format(string, sizeof(string), "\n\n"W"Стоимость "P"1"W" хот-дога: "GREEN"$%d\nИспользуйте количество хот-догов, которое хотите закупить:\n\n",gBusiness[GetPVarInt(playerid,"e_biz")][bizzPrice]*50);
				D(playerid,dEContract,DSI, ""P"Покупка хот-догов",string,"Купить","Отмена");
				return true;
			}
			new litres = strval(inputtext);
			new price = litres*gBusiness[GetPVarInt(playerid,"e_biz")][bizzPrice]*50;
			if(PI[playerid][pCash] < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			if(GetPVarInt(playerid,"eatcolvo") + litres > 50) return SendClientMessage(playerid, COLOR_GREY, "В машину не поместится больше 50 хот-догов");
			GiveMoney(playerid,-price,"развозчик еды контракт");
			if(gBusiness[GetPVarInt(playerid,"e_biz")][bizzProduct] - litres > 0) {
				gBusiness[GetPVarInt(playerid,"e_biz")][bizzProduct] -= litres;
				bizz_pay(GetPVarInt(playerid,"e_biz"),price);
			}
			new string[128];
			format(string, sizeof(string),""G"Хот-догов: "P"%d ед.",GetPVarInt(playerid,"eatcolvo") + litres);
			UpdateDynamic3DTextLabelText(PlayerEatText[playerid], -1, string);
			SetPVarInt(playerid,"eatcolvo",GetPVarInt(playerid,"eatcolvo") + litres);
			DeletePVar(playerid,"e_biz");
			return 1;
		}
	case dFContract: {
			if(!response) return 1;
			if(strval(inputtext) < 1 || strval(inputtext) > 1000) {
				new string[156];
				format(string, sizeof(string), "\n\n"W"Стоимость "P"1"W" литра: "GREEN"$%d\nИспользуйте количество бензина, которое хотите закупить:\n\n",gBusiness[GetPVarInt(playerid,"f_biz")][bizzPrice]);
				D(playerid,dFContract,DSI, ""P"Покупка топлива",string,"Купить","Отмена");
				return true;
			}
			new litres = strval(inputtext);
			new price = litres*gBusiness[GetPVarInt(playerid,"f_biz")][bizzPrice];
			if(PI[playerid][pCash] < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			if(GetPVarInt(playerid,"toplivo") + litres > 1000) return SendClientMessage(playerid, COLOR_GREY, "В машину не поместится больше 100л топлива");
			GiveMoney(playerid,-price,"механик контракт");
			if(gBusiness[GetPVarInt(playerid,"f_biz")][bizzProduct] - litres > 0) {
				gBusiness[GetPVarInt(playerid,"f_biz")][bizzProduct] -= litres;
				bizz_pay(GetPVarInt(playerid,"f_biz"),price);
			}
			new string[128];
			format(string, sizeof(string),""G"Топливо: "P"%d л.",GetPVarInt(playerid,"toplivo") + litres);
			UpdateDynamic3DTextLabelText(PlayerMehText[playerid], -1, string);
			SetPVarInt(playerid,"toplivo",GetPVarInt(playerid,"toplivo") + litres);
			DeletePVar(playerid,"f_biz");
			return 1;
		}
	case dRefill: {
			new id_mhnk = GetPVarInt(playerid,"id_refill")-1;
			new price_mhnk = GetPVarInt(id_mhnk,"price_refill");
			new litres = GetPVarInt(id_mhnk,"litres_refill");
			DeletePVar(id_mhnk,"id_repair");
			DeletePVar(id_mhnk,"price_repair");
			DeletePVar(playerid,"id_repair");
			if(!response) {
				SendOk(id_mhnk,"Игрок отказался от предложения");
				SendOk(playerid,"Вы отказались от предложения");
			}
			else {
				if(GetPlayerMoneyEx(playerid) < price_mhnk) {
					SendOk(id_mhnk,"У игрока недостаточно средств");
					SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств для оплаты");
					return 1;
				}
				new string[144];
				format(string,sizeof(string), "Механик "P"%s"W" заправил Вам автомобиль на "P"%d"W" литров за "ORANGE"$%i",player_name[id_mhnk],litres,price_mhnk);
				SendUse(playerid,string);

				format(string,sizeof(string), "Вы заправили автомобиль "P"%s "W"на "P"%d"W" литров за "ORANGE"$%i",player_name[playerid],litres,price_mhnk);
				SendUse(id_mhnk,string);
				
				if(PI[id_mhnk][pExpJob][7] < 400)
				{
					PI[id_mhnk][pExpJob][7] += 1;
					if(PI[id_mhnk][pExpJob][7] == 400) {
						PI[id_mhnk][pAcsJob][7] = 1;
						SendOk(id_mhnk,"Вы получили новый аксессуар за достижение! "GREEN"(/mm > навыки персонажа > полученные аксессуары)");
						save_acsjob(id_mhnk);
					}
					save_jskill(id_mhnk);
				}

				GiveMoney(playerid,-price_mhnk,"оплата механику заправка");
				GiveMoney(id_mhnk,price_mhnk,"ЗП механику заправка");
				new vehicleid = GetPlayerVehicleID(playerid);

				if(vehicleid) VehicleInfo[vehicleid][vFuel] += float(litres);
				SetPVarInt(id_mhnk,"toplivo",GetPVarInt(id_mhnk,"toplivo") - litres);

				format(string, sizeof(string),""G"Топливо: "P"%d л.",GetPVarInt(id_mhnk,"toplivo"));
				UpdateDynamic3DTextLabelText(PlayerMehText[id_mhnk], -1, string);
			}
			return 1;
		}
	case dEHotDog: {
			new id_mhnk = GetPVarInt(playerid,"id_hotdog")-1;
			new price_mhnk = GetPVarInt(id_mhnk,"price_hotdog");
			DeletePVar(id_mhnk,"id_hotdog");
			DeletePVar(id_mhnk,"price_hotdog");
			DeletePVar(playerid,"id_hotdog");
			if(!response) {
				SendOk(id_mhnk,"Игрок отказался от предложения");
				SendOk(playerid,"Вы отказались от предложения");
			}
			else {
				if(GetPlayerMoneyEx(playerid) < price_mhnk) {
					SendOk(id_mhnk,"У игрока недостаточно средств");
					SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств для оплаты");
					return 1;
				}
				new string[144];
				format(string,sizeof(string), "Продавец хот-догов "P"%s"W" продал Вам хот-дог за "ORANGE"$%i",player_name[id_mhnk],price_mhnk);
				SendUse(playerid,string);
				
				if(QuestProgress[id_mhnk][54] < 10 && AcceptQuest[id_mhnk][54] != 0) QuestProgress[id_mhnk][54] ++,save_quest(id_mhnk,54);
				if(QuestProgress[id_mhnk][54] == 10 && AcceptQuest[id_mhnk][54] != 0) {
					D(id_mhnk,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
				}
				
				if(PI[id_mhnk][pExpJob][6] < 300)
				{
					PI[id_mhnk][pExpJob][6] += 1;
					if(PI[id_mhnk][pExpJob][6] == 300) {
						PI[id_mhnk][pAcsJob][6] = 1;
						SendOk(id_mhnk,"Вы получили новый аксессуар за достижение! "GREEN"(/mm > навыки персонажа > полученные аксессуары)");
						save_acsjob(id_mhnk);
					}
					save_jskill(id_mhnk);
				}

				format(string,sizeof(string), "Вы продали хот-дог "P"%s"W" за "ORANGE"$%i",player_name[playerid],price_mhnk);
				SendUse(id_mhnk,string);

				GiveMoney(playerid,-price_mhnk,"оплата продавцу еды");
				GiveMoney(id_mhnk,price_mhnk,"ЗП продавцу еды");
				GiveFullness(playerid, 40);
				
				SetPVarInt(id_mhnk,"eatcolvo",GetPVarInt(id_mhnk,"eatcolvo") - 1);

				format(string, sizeof(string),""G"Хот-Догов: "P"%d ед.",GetPVarInt(id_mhnk,"eatcolvo"));
				UpdateDynamic3DTextLabelText(PlayerEatText[id_mhnk], -1, string);
			}
			return 1;
		}
	case D_MARRIED: {
			new id_marriage = GetPVarInt(playerid,"ProposeOffer")-1;
			DeletePVar(id_marriage,"ProposeOffer");
			if(!response) {
				SendOk(id_marriage,"Игрок отказался от предложения");
				SendOk(playerid,"Вы отказались от предложения");
			}
			else {
				if(!GetPVarInt(playerid,"ProposeOffer")) return SendClientMessage(playerid, COLOR_GREY, "Вам ни кто не предлагал выйти замуж/жениться");
				if(!PlayerToPoint(10.0, playerid, 2233.2588,-1333.1310,23.9815)) return SendClientMessage(playerid, COLOR_GREY, "Вы не у церкви");
				if(!IsPlayerConnected(id_marriage)) return SendClientMessage(playerid, COLOR_GREY, not_id);
				if(!IsPlayerStream(10.0, playerid, id_marriage)) return SendClientMessage(playerid, COLOR_GREY, "Жених/Невеста не рядом с Вам");
				new string[144];
				format(string, sizeof(string), "Вы приняли предложение от %s's", player_name[id_marriage]);
				SendOk(playerid, string);
				format(string, sizeof(string), "%s принял(а) Ваш запрос быть Вашей(ым) Женой/Мужем", player_name[playerid]);
				SendClientMessage(id_marriage, 0x6ab1ffaa, string);
				format(string, sizeof(string), "{FC6DEC}::: Поздравляем! %s и %s теперь муж и жена! :::", player_name[playerid], player_name[id_marriage]);
				SendClientMessageToAll(-1,string);

				strmid(PI[playerid][pMarried], player_name[id_marriage], 0, strlen(player_name[id_marriage]));
				strmid(PI[id_marriage][pMarried], player_name[playerid], 0, strlen(player_name[playerid]));

				new query[156];
				mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pMarried` = '%s' WHERE `pID` = '%d' LIMIT 1",PI[playerid][pMarried],PI[playerid][pID]);
				mysql_pquery(connects, query, "", "");

				mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pMarried` = '%s' WHERE `pID` = '%d' LIMIT 1",PI[id_marriage][pMarried],PI[id_marriage][pID]);
				mysql_pquery(connects, query, "", "");
			}
			return 1;
		}
	case D_BUYNARKO: {
			if(!response) return 1;
			if(strval(inputtext) < 1 || strval(inputtext) > 200) {
				static const f_str[] = ""W"Укажите количество наркотиков для покупки:\n\n\
				"O"Примечание:"W"\n\
				\tСтоимость "P"1г"W" наркотиков: "GREEN"$%d"W"\n\n"NO"*"W" За раз можно приобрести до 200 наркотиков";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5)];
				format(string,sizeof(string),f_str,gBusiness[56][bizzPrice]);
				D(playerid,D_BUYNARKO,DSI, ""P"Покупка наркотиков", string, "Купить", "Отмена");
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < gBusiness[56][bizzPrice]*strval(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			if(gBusiness[56][bizzProduct]-strval(inputtext) > 0)
			{
				PI[playerid][pDrugs] += strval(inputtext);
				UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
				gBusiness[56][bizzProduct] -= strval(inputtext);
				gBusiness[56][bizzBank] += gBusiness[56][bizzPrice]*strval(inputtext);
				UpdateBusinessData(57,"bank",gBusiness[56][bizzBank]);
				gBusiness[56][bizzBankDay] += gBusiness[56][bizzPrice]*strval(inputtext);
				UpdateBusinessData(57,"product",gBusiness[56][bizzProduct]);
				GiveMoney(playerid,-gBusiness[56][bizzPrice]*strval(inputtext),"покупка нарко притон");
				new string[128];
				format(string,sizeof(string),"Вы купили "P"%dг "W"наркотиков за "ORANGE"$%d",strval(inputtext),gBusiness[56][bizzPrice]*strval(inputtext));
				SendUse(playerid,string);
			}
			else SendClientMessage(playerid, COLOR_GREY, "К сожалению, нет столько наркотиков!");
		}
	case D_ADMC: {
			if(!response) return 1;
			if(PI[playerid][pAdmin] < listitem+1) return SendClientMessage(playerid, COLOR_GREY, "Ты еще маленький");
			new string[1500],str[120];
			for(new adm = 0;adm < MAX_ADM_CMDS;adm++) {
				if(AdminCommand[adm][cmdLVL] != listitem+1) continue;
				format(str, sizeof(str), "\n\t{70c425}%s"W" - %s", AdminCommand[adm][cmdName], AdminCommand[adm][cmdInfo]);
				strcat(string, str);
			}
			D(playerid,DIALOG_NONE,DSM, ""P"Админ команды",string,"Закрыть","");
		}
	case D_MP: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					if(!Teleport) {
						new string[200];
						if(!Teleport_Players[0]) return SendClientMessage(playerid, COLOR_GREY, "Необходимо указать кол-во участников мероприятия");
						if(strcmp(Teleport_text,"None",true) == 0) return SendClientMessage(playerid, COLOR_GREY, "Необходимо ввести название мероприятия");
						format(string,sizeof(string),""YELLOW"[МП]"W" Создано мероприятие "YELLOW"%s"W". Количество участников: "P"%d",Teleport_text,Teleport_Players[0]);
						SendClientMessageToAll(-1,string);
						SendClientMessageToAll(-1,""YELLOW"[МП]"W" Для телепорта введите: "P"'/mp'");
						GetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
						TeleportInfo[0] = GetPlayerInterior(playerid);
						TeleportInfo[1] = GetPlayerVirtualWorld(playerid);
						Teleport = true;
						format(string, sizeof(string), "[A] %s[%d] создал мероприятие",player_name[playerid],playerid);
						AdmMSG(0xAFAFAFAA, string);
						foreach(new i:Player) {
		                    if(!TI[i][tLogin]) continue;
		                    MPTeleportPlayer[i] = 0;
	                    }
					}
					else {
						new string[128];
						format(string,sizeof(string),""YELLOW"[МП]"W" Мероприятие "YELLOW"%s"W" телепорт удалён",Teleport_text);
						SendClientMessageToAll(-1,string);
						strmid(Teleport_text, "None", 0, strlen("None"), 36);
						Teleport = false;
						Teleport_Players[0] = Teleport_Players[1] = 0;
					}
				}
			case 1: D(playerid, D_MP_1, DSI, ""P"Выдача оружия", "\n\n"W"Введите "P"ID"W" оружия и патроны\nПример: 31,500\nГде 31 M4, а 500 патроны\n\n", "Выдать", "Выход");
			case 2: {
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(GetDistanceBetweenPlayers(playerid, i) > 50) continue;
						SetHealth(i, 100);
						SendOk(i, "Администратор выдал Вам жизни");
					}
				}
			case 3: {
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(GetDistanceBetweenPlayers(playerid, i) > 50) continue;
						SetArmour(i, 100);
						SendOk(i, "Администратор выдал вам броню");
					}
				}
			case 4: {
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(GetDistanceBetweenPlayers(playerid,i) > 50) continue;
						ResetPlayerWeapons(playerid);
						SendOk(i, "Администратор забрал у Вас оружие");
					}
				}
			case 5: {
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(GetDistanceBetweenPlayers(playerid,i) > 50) continue;
						SetArmour(i, 0);
						SendOk(i, "Администратор забрал у Вас броню");
					}
				}
			case 6: {
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(GetDistanceBetweenPlayers(playerid,i) > 50) continue;
						if(i == playerid) continue;
						TogglePlayerControllable(i, 0);
						SendOk(i, "Администратор заморозил Вас");
					}
					SendOk(playerid,"Игроки заморожены");
				}
			case 7: {
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(GetDistanceBetweenPlayers(playerid,i) > 50) continue;
						if(i == playerid) continue;
						TogglePlayerControllable(i, 1);
						SendOk(i, "Администратор разморозил Вас");
					}
					SendOk(playerid,"Игроки разморожены");
				}
			case 8: D(playerid, D_MP_5, DSI, "Название", "\n\n"W"Введите ID временного скина и радиус:\nПример: 299,10\nГде 299 ID скина, а 10 радиус\n\n", "Ввод", "Отмена");
			case 9: D(playerid, D_MP_2, DSI, "Название", "\n\n"W"Введите название мероприятия:\n\n", "Ввод", "Отмена");
			case 10: D(playerid, D_MP_4, DSI, "Кол-во участников", "\n\n"W"Введите количество участников:\n\n", "Ввод", "Отмена");
			}
		}
	case D_MP_5: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid, D_MP_5, DSI, "Название", "\n\n"W"Введите ID временного скина и радиус:\nПример: 299,10\nГде 299 ID скина, а 10 радиус\n\n", "Ввод", "Отмена");
			else if(strfind(inputtext,",", true) != -1) {
				new razdel[2][24];
				split(inputtext, razdel, ',');
				if(!(5 <= strval(razdel[1]) <= 50)) return D(playerid, D_MP_5, DIALOG_STYLE_INPUT, "Название", "\n\n"W"Введите ID временного скина и радиус:\nПример: 299,10\nГде 299 ID скина, а 10 радиус\n"NO"*"G" Радиус от 5 до 50\n\n", "Ввод", "Отмена");
				if(!(1 <= strval(razdel[0]) <= 311) || strval(razdel[0]) == 74) return D(playerid, D_MP_5, DSI, "Название", "\n\n"W"Введите ID временного скина и радиус:\nПример: 299,10\nГде 299 ID скина, а 10 радиус\n"NO"*"G" Скины от 1 до 311\n\n", "Ввод", "Отмена");
				foreach(new i:Player) {
					if(!TI[i][tLogin]) continue;
					if(GetDistanceBetweenPlayers(playerid, i) > strval(razdel[1])) continue;
					if(i == playerid) continue;
					A_SetPlayerSkin(i, strval(razdel[0]));
					SendOk(i, "Администратор выдал Вам временный скин");
				}
				SendOk(playerid,"Временные скины выданы");
			}
			return 1;
		}
	case D_MP_1: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid, D_MP_1, DSI, ""P"Выдача оружия", "\n\nВведите "P"ID"W" оружия и патроны\nПример: 31,500\nГде 31 M4, а 500 патроны\n\n", "Выдать", "Выход");
			else if(strfind(inputtext,",", true) != -1) {
				new razdel[2][24];
				split(inputtext, razdel, ',');
				foreach(new i:Player) {
					if(!TI[i][tLogin]) continue;
					if(GetDistanceBetweenPlayers(playerid, i) > 50) continue;
					GivePlayerWeapon(i, strval(razdel[0]), strval(razdel[1]));
					SendOk(i, "Администратор выдал вам оружие");
				}
			}
			return 1;
		}
	case D_MP_4: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid, D_MP_4, DSI, "Кол-во участников", "\n\n"W"Введите количество участников:\n\n", "Ввод", "Отмена");
			if(!(5 <= strval(inputtext) <= 100)) {
				return D(playerid, D_MP_4, DSI, "Кол-во участников", "\n\n"W"Введите количество участников:\n\n"NO"*"G" От 5 до 100 мест\n\n", "Ввод", "Отмена");
			}
			new string[128];
			format(string,sizeof(string),"Лимит участников: "P"%d"W" создан",strval(inputtext));
			SendOk(playerid,string);
			Teleport_Players[0] = strval(inputtext);
			return 1;
		}
	case D_MP_2: {
			if(!response) return 1;
			if(!strlen(inputtext)) D(playerid, D_MP_2, DSI, ""P"Название", "\n\n"W"Введите название мероприятия\n\n", "Ввод", "Отмена");
			else if(strfind(inputtext,"", true) != 0) {
				strmid(Teleport_text,inputtext,0,strlen(inputtext),36);
			}
			new string[128];
			format(string,sizeof(string),"Название: "P"%s"W" создано",inputtext);
			SendOk(playerid,string);
			return 1;
		}
	case D_PROMO: {
			if(!response) return 1;
			switch(listitem) {
			case 0: mysql_tquery(connects, "SELECT * FROM promocode", "promo_show", "i", playerid);
			case 1: D(playerid, D_PROMO_1, DSI, ""P"Создание промокода", ""W"Введите ниже название промокода, через запятую имя игрока", "Далее", "Назад");
			case 2: D(playerid, D_PROMO_2, DSI, ""P"Удаление промокода", "\n\n"W"Введите промокод который хотите удалить:\n\n", "Далее", "Назад");
			}
		}
	case D_PROMO_1: {
			if(!response) return 1;
			new promo[30], owner[24];
			if(sscanf(inputtext, "p<,>s[30]s[24]",promo, owner)) return D(playerid, D_PROMO_1, DSI, ""P"Создание промокода", "\n\n"W"Введите промокод который хотите создать\n"G"От 3 до 16 символов\n\n", "Далее", "Назад");

			SetPVarString(playerid, "promoname", promo);
			SetPVarString(playerid, "prom_nick", owner);
			
			D(playerid, D_PROMO_3, DSL, ""P"Создание промокода", ""P"1."W" SD-Pistol\n"P"2."W" Deagle\n"P"3."W" ShotGun\n"P"4."W" MP5\n"P"5."W" AK-47\n"P"6."W" M4\n"NO"7. Не выдавать", "Выбрать", "Отмена");
		}
	case D_PROMO_3: {
			if(!response) return 1;
			SetPVarInt(playerid, "promoskills", listitem);
			D(playerid, D_PROMO_4, DSL, ""P"Создание промокода", ""P"1."W" Водительское удостоверение\n"P"2."W" Лицензия на полёты\n"P"3."W" Лицензия на водный транспорт\n"P"4."W" Лицензия на оружие\n"NO"5. Не выдавать", "Выбрать", "Отмена");
		}
	case D_PROMO_4: {
			if(!response) return 1;
			SetPVarInt(playerid, "promolic", listitem);
			D(playerid, D_PROMO_5, DSI, ""P"Создание промокода", "\n\n"W"Укажите количество денег, которое будет выдано при использовании промокода\n"G"От $5.000$ до $50.000\n\n", "Готово", "Отмена");
		}
	case D_PROMO_5:  {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid, D_PROMO_5, DSI, ""P"Создание промокода", "\n\n"W"Укажите количество денег, которое будет выдано при использовании промокода\n"G"От $5.000$ до $50.000\n\n", "Готово", "Отмена");
			if(!(5000 <= strval(inputtext) <= 50000)) {
				return D(playerid, D_PROMO_5, DSI, ""P"Создание промокода", "\n\n"W"Укажите количество денег, которое будет выдано при использовании промокода\n\n"NO"*"G" От $5.000$ до $50.000\n\n", "Готово", "Отмена");
			}
			SetPVarInt(playerid, "promomoney", strval(inputtext));
			new promoname[16], pr_nick[24];
			GetPVarString(playerid, "promoname", promoname, sizeof(promoname));
			GetPVarString(playerid, "prom_nick",pr_nick, sizeof(pr_nick));
			
			new str2[7][13] = {"SD-Pistol","Deagle","ShotGun","MP5","AK-47","M4","Не выдавать"};
			new str3[5][20] = {"Вод.права","Полёты","Вод.транспорт","Оружие","Не выдавать"};

			new string[360];
			format(string, sizeof(string), "\
				"W"Создать промокод "P"%s"W" для игрока "ORANGE"%s"W"?\n\
				Количество денег: "GREEN"$%i"W"\n\
				Навыки владения оружием: "GREEN"%s"W"\n\
				Лицензия: "GREEN"%s",
			promoname,pr_nick,GetPVarInt(playerid, "promomoney"), str2[GetPVarInt(playerid, "promoskills")], str3[GetPVarInt(playerid, "promolic")]);
			D(playerid, D_PROMO_6, DSM, ""P"Создание промокода", string, "Создать", "Отмена");
		}
	case D_PROMO_6: {
			if(!response) return 1;
			new promoname[16], pr_nick[24];
			GetPVarString(playerid, "promoname", promoname, sizeof(promoname));
			GetPVarString(playerid, "prom_nick", pr_nick, sizeof(pr_nick));
			mysql_tquery(connects, "SELECT * FROM "T_PROMOCODE"", "promo_create", "iss", playerid, promoname, pr_nick);
		}
	case D_PROMO_2: {
			if (!response) return 1;
			if (!strlen(inputtext)) return D(playerid, D_PROMO_2, DSI, ""P"Удаление промокода", "\n\n"W"Введите промокод который хотите удалить:\n\n", "Далее", "Назад");
			for (new i = strlen(inputtext); i != 0; --i)
			{
				switch (inputtext[i])
				{
				case 'А'..'Я', 'а'..'я', ' ': {
						return D(playerid, D_PROMO_2, DSI, ""P"Удаление промокода", "\n\n"W"Введите промокод который хотите удалить:\n\n"NO"*"G" Включите английскую раскладку\n\n", "Далее", "Назад");
					}
				}
			}
			mysql_tquery(connects, "SELECT * FROM "T_PROMOCODE"", "promo_dell", "is", playerid, inputtext);
		}
	case D_USE_PROMO: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(!strlen(inputtext)) return D(playerid, D_USE_PROMO, DSI, ""P"Промокод", ""W"Введите ниже действующий{F1CF46} промокод"W" на сервере:", "Принять", "Назад");
			if(strlen(inputtext) < 1 || strlen(inputtext) > 15) return D(playerid, D_USE_PROMO, DSI, ""P"Промокод", ""W"Введите ниже действующий{F1CF46} промокод"W" на сервере:", "Принять", "Назад");
			if(is_text_invalid(inputtext)) return D(playerid, D_USE_PROMO, DSI, ""P"Промокод", ""W"Введите ниже действующий{F1CF46} промокод"W" на сервере:", "Принять", "Назад");
			new query[128];
			mysql_format(connects, query, 128, "SELECT * FROM "T_PROMOCODE" WHERE code LIKE '%s'", inputtext);
			mysql_tquery(connects, query, "promo_check", "is", playerid, inputtext);
		}
	case D_QUEST: {
			if(!response) return 1;
			new id = QuestShow[playerid][listitem],string[512];
			new str[54];
			if(QuestProgress[playerid][id] == 100) return SendBotMessage(playerid,"Дружище, ты уже выполнил данное задание");
			if(AcceptQuest[playerid][id] == 0)
			{
				format(str,sizeof(str),""P"%s",QI[id][QuestName]);
				format(string,sizeof(string),""W"%s",QI[id][QuestText]);
				D(playerid,D_QUEST_1,DSM, str,string,"Начать","Отмена"); 
				QuestClick[playerid] = id;
			}
			else {
				if(QuestProgress[playerid][id] == QI[id][LastProgress]) {
					switch(id) {
					case 1: GiveMoney(playerid,1000,"quest 1 (exit)");
					case 2: {
							PI[playerid][pExp] += 1;
							UpdateExp(playerid);
							GiveMoney(playerid,10000,"quest 2");
						}
					case 3: GiveMoney(playerid,6000,"quest 3");
					case 4: {
							PI[playerid][pExp] += 1;
							UpdateExp(playerid);
							GiveMoney(playerid,5000,"quest 4");
						}
					case 5: {
							GiveMoney(playerid,1000,"quest 5"); 
						}
					case 6: GiveMoney(playerid,16000,"quest 6");
					case 7: GiveMoney(playerid,5000,"quest 7");
					case 8: GiveMoney(playerid,7000,"quest 8"); 
					case 9: GiveMoney(playerid,10000,"quest 9");
					case 10: {
							PI[playerid][pExp] += 2;
							UpdateExp(playerid);
							GiveMoney(playerid,20000,"quest 10"); 
						}
					case 11: GiveMoney(playerid,30000,"quest 11");
					case 12: GiveMoney(playerid,25000,"quest 12");
					case 13: GiveMoney(playerid,10000,"quest 13");
					case 14: GiveMoney(playerid,20000,"quest 14");
					}
					SendBotMessage(playerid,"Задание выполнено. Забери свою награду!");
					if(PI[playerid][pFamily]) reputation_family(PI[playerid][pFamily]-1,1);
					QuestProgress[playerid][id] = 100;
					new query[256];
					mysql_format(connects, query, sizeof(query),"UPDATE `questsprogress` SET `progress`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], id, player_name[playerid]);
					mysql_tquery(connects, query);
				}
			}
			return 1;
		}
	case D_QUEST_HELLOW: {
			if(!response) return 1;
			new id = QuestShow[playerid][listitem],string[512], str[54];
			if(QuestProgress[playerid][id] == 100) return SendClientMessage(playerid, COLOR_GREY, "Задание уже выполнено!");
           	switch(id) {
				case 58,59,60,61: {
					if(QuestProgress[playerid][id-1] != 100) return SendBotMessage(playerid,"Для начала выполни предыдущее задание");
				}
			}
			if(AcceptQuest[playerid][id] == 0) {
				format(str,sizeof(str),"{F88539}HAllOWEEN | "W"%s",QI[id][QuestName]);
				format(string,sizeof(string),""W"%s",QI[id][QuestText]);
				D(playerid,D_QUEST_1,DSM, str,string,"Начать","Отмена");
				QuestClick[playerid] = id;
			}
			else {
				if(QuestProgress[playerid][id] == QI[id][LastProgress]) {
					switch(id) {
					   case 57: GiveMoney(playerid,7000,"quest 57");
					   case 58: GiveMoney(playerid,10000,"quest 58");
					   case 59: GiveMoney(playerid,3000,"quest 59");
					   case 60: GiveMoney(playerid,7000,"quest 60");
					   case 61: {
					       AddItem(playerid, 463, 1);
					   }
					}
					SendOk(playerid,"Задание выполнено. Забери свою награду!");
					QuestProgress[playerid][id] = 100;
					new query[256];
					mysql_format(connects, query, sizeof(query),"UPDATE `questsprogress` SET `progress`='%d',`hallow`='1' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], id, player_name[playerid]);
					mysql_tquery(connects, query);
				}
			}
			return 1;
		}
	case D_QUEST_GANG: {
			if(!response) return 1;
			new id = QuestShow[playerid][listitem],string[512], str[54];
			if(QuestProgress[playerid][id] == 100) return SendClientMessage(playerid, COLOR_GREY, "Дружище, ты уже выполнил данное задание");
			if(AcceptQuest[playerid][id] == 0) {
				format(str,sizeof(str),""P"%s",QI[id][QuestName]);
				format(string,sizeof(string),""W"%s",QI[id][QuestText]);
				D(playerid,D_QUEST_1,DSM, str,string,"Начать","Отмена");
				QuestClick[playerid] = id;
			}
			else {
				if(QuestProgress[playerid][id] == QI[id][LastProgress]) {
					switch(id) {
					case 15: GiveMoney(playerid,3000,"quest 15");
					case 16: GiveMoney(playerid,5000,"quest 16");
					case 17: GiveMoney(playerid,15000,"quest 17");
					case 18: {
							PI[playerid][pExp] += 2;
							UpdateExp(playerid);
							GiveMoney(playerid,25000,"quest 18");
						}
					case 19: {
							PI[playerid][pExp] += 1;
							UpdateExp(playerid);
							GiveMoney(playerid,8000,"quest 19");
						}
					case 20: {
							PI[playerid][pExp] += 1;
							UpdateExp(playerid);
							GiveMoney(playerid,10000,"quest 20");
						}
					case 21: GiveMoney(playerid,5000,"quest 21");
					case 22: {
							PI[playerid][pExp] += 3;
							UpdateExp(playerid);
							GiveMoney(playerid,12000,"quest 22");
						}
					case 23: {
							PI[playerid][pExp] += 2;
							UpdateExp(playerid);
							GiveMoney(playerid,30000,"quest 23");
						}
					case 24: {
							PI[playerid][pExp] += 1;
							UpdateExp(playerid);
							GiveMoney(playerid,20000,"quest 24");
						}
					}
					SendOk(playerid,"Задание выполнено. Забери свою награду!");
					if(PI[playerid][pFamily]) {
						reputation_family(PI[playerid][pFamily]-1,1);
						UpdateFamily(PI[playerid][pFamily],"talon",gFamily[PI[playerid][pFamily]-1][famTalon]);
					}
					if(PI[playerid][pMember]) add_gang_points(PI[playerid][pMember],2);
					QuestProgress[playerid][id] = 100;
					new query[256];
					mysql_format(connects, query, sizeof(query),"UPDATE `questsprogress` SET `progress`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], id, player_name[playerid]);
					mysql_tquery(connects, query);
				}
			}
			return 1;
		}
	case D_QUEST_MAFIA: {
			if(!response) return 1;
			new id = QuestShow[playerid][listitem],string[512], str[54];
			if(QuestProgress[playerid][id] == 100) return SendClientMessage(playerid, COLOR_GREY, "Дружище, ты уже выполнил данное задание");
			if(AcceptQuest[playerid][id] == 0) {
				format(str,sizeof(str),""P"%s",QI[id][QuestName]);
				format(string,sizeof(string),""W"%s",QI[id][QuestText]);
				D(playerid,D_QUEST_1,DSM, str,string,"Начать","Отмена");
				QuestClick[playerid] = id;
			}
			else {
				if(QuestProgress[playerid][id] == QI[id][LastProgress]) {
					switch(id) {
					case 25: {
							PI[playerid][pExp] += 2;
							UpdateExp(playerid);
							GiveMoney(playerid,25000,"quest 24");
						}
					case 26: {
							PI[playerid][pExp] += 1;
							UpdateExp(playerid);
							GiveMoney(playerid,2000,"quest 25");
						}
					case 27: {
							PI[playerid][pExp] += 1;
							UpdateExp(playerid);
							GiveMoney(playerid,10000,"quest 27");
						}
					case 28: GiveMoney(playerid,6000,"quest 28");
					case 29: {
							PI[playerid][pExp] += 2;
							UpdateExp(playerid);
							GiveMoney(playerid,30000,"quest 29");
						}
					case 30: {
							PI[playerid][pExp] += 3;
							UpdateExp(playerid);
							GiveMoney(playerid,15000,"quest 30");
						}
					case 31: GiveMoney(playerid,4000,"quest 31");
					case 32: GiveMoney(playerid,12000,"quest 32");
					case 33: {
							PI[playerid][pExp] += 3;
							UpdateExp(playerid);
							GiveMoney(playerid,25000,"quest 33");
						}
					}
					if(PI[playerid][pFamily]) {
						reputation_family(PI[playerid][pFamily]-1,1);
						UpdateFamily(PI[playerid][pFamily],"talon",gFamily[PI[playerid][pFamily]-1][famTalon]);
					}
					QuestProgress[playerid][id] = 100;
					new query[256];
					mysql_format(connects, query, sizeof(query),"UPDATE `questsprogress` SET `progress`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], id, player_name[playerid]);
					mysql_tquery(connects, query);
				}
			}
			return 1;
		} 
	case D_QUEST_COP: {
			if(!response) return 1;
			new id = QuestShow[playerid][listitem],string[512], str[54];
			if(QuestProgress[playerid][id] == 100) return SendClientMessage(playerid, COLOR_GREY, "Дружище, ты уже выполнил данное задание");
			if(AcceptQuest[playerid][id] == 0) {
				format(str,sizeof(str),""P"%s",QI[id][QuestName]);
				format(string,sizeof(string),""W"%s",QI[id][QuestText]);
				D(playerid,D_QUEST_1,DSM, str,string,"Начать","Отмена");
				QuestClick[playerid] = id;
			}
			else {
				if(QuestProgress[playerid][id] == QI[id][LastProgress]) {
					switch(id) {
					case 34: GiveMoney(playerid,15000,"quest 34");
					case 35: GiveMoney(playerid,10000,"quest 35");
					case 36: {
							PI[playerid][pExp] += 2;
							UpdateExp(playerid);
							GiveMoney(playerid,20000,"quest 36");
						}
					case 37: {
							PI[playerid][pExp] += 1;
							UpdateExp(playerid);
							GiveMoney(playerid,8000,"quest 37");
						}
					case 38: GiveMoney(playerid,5000,"quest 38");
					case 39: {
							PI[playerid][pExp] += 4;
							UpdateExp(playerid);
							GiveMoney(playerid,30000,"quest 39");
						}
					}
					if(PI[playerid][pFamily]) reputation_family(PI[playerid][pFamily]-1,1);
					QuestProgress[playerid][id] = 100;
					new query[256];
					mysql_format(connects, query, sizeof(query),"UPDATE `questsprogress` SET `progress`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], id, player_name[playerid]);
					mysql_tquery(connects, query);
				}
			}
			return 1;
		}
	case D_QUEST_DAILY: {
			if(!response) return 1;
			new id = QuestShow[playerid][listitem],string[512], str[54];
			if(QuestProgress[playerid][id] == 100) return SendClientMessage(playerid, COLOR_GREY, "Дружище, ты уже выполнил данное задание");
			if(AcceptQuest[playerid][id] == 0)
			{
				format(str,sizeof(str),""P"%s",QI[id][QuestName]);
				format(string,sizeof(string),""W"%s",QI[id][QuestText]);
				D(playerid,D_QUEST_1,DSM, str,string,"Начать","Отмена");
				QuestClick[playerid] = id;
			}
			else {
				if(QuestProgress[playerid][id] == QI[id][LastProgress]) {
					switch(id) {
					case 40: GiveDonate(playerid, 5, "выполнение квеста (40)");
					case 41: GiveMoney(playerid,8000,"quest quest 41");
					case 42: {
							PI[playerid][pExp] += 1;
							UpdateExp(playerid);
						}
					case 43: {
							PI[playerid][pExp] += 1;
							UpdateExp(playerid);
						}
					case 44: {
							PI[playerid][pExp] += 1;
							UpdateExp(playerid);
						}
					case 45: GiveDonate(playerid, 5, "выполнение квеста (45)");
					case 46: GiveMoney(playerid,12000,"quest quest 46");
					case 47: {
							GiveMoney(playerid,7500,"quest quest 47");
							GiveDonate(playerid, 5, "выполнение квеста (47)");
						}
					case 48: GiveMoney(playerid,9500,"quest quest 48");
					case 49: GiveMoney(playerid,9500,"quest quest 49");
					case 50: GiveMoney(playerid,8500,"quest quest 50");
					case 51: GiveMoney(playerid,8500,"quest quest 51");
					case 52: {
							PI[playerid][pCases][1] += 1;
							UpdatePlayerData(playerid, "case_2", PI[playerid][pCases][1]);
						}
					case 53: GiveMoney(playerid,7000,"quest quest 53");
					case 54: GiveMoney(playerid,7000,"quest quest 54");
					case 55: GiveMoney(playerid,7000,"quest quest 55");
					case 56: GiveMoney(playerid,7000,"quest quest 56");
					}
					SendOk(playerid,"Задание выполнено. Вы получили свою награду!");
					if(PI[playerid][pFamily]) reputation_family(PI[playerid][pFamily]-1,1);
					QuestProgress[playerid][id] = 100;
					new query[256];
					mysql_format(connects, query, sizeof(query),"UPDATE `questsprogress` SET `progress`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], id, player_name[playerid]);
					mysql_tquery(connects, query);
				}
			}
			return 1;
		}
	case D_QUEST_1: {
			if(!response) return true;
			new id = QuestClick[playerid], accept = 0, str[54], string[512];
			if(QuestProgress[playerid][id]==100) return SendBotMessage(playerid,"Вы уже выполняли у меня это задание!");//Вы уже его выполнили
			if(QuestProgress[playerid][id]>=0 && AcceptQuest[playerid][id]!=0) return SendBotMessage(playerid,"Вы уже приняли это задание!"); //Вы уже его приняли
			for(new i ; i < MAX_QUESTS;i++)
			{
				if(QuestProgress[playerid][i] >= 0 && QuestProgress[playerid][i] != 100 && AcceptQuest[playerid][i] != 0) accept++;
			}
			if(accept) return SendBotMessage(playerid,"Выполните текущее задание /quest");
			if(id == 2 && PI[playerid][pExpJob][0] >= 30)
			{
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы завершили выполнение квеста 'Первые деньги'\n\t"NO"Вы получили свою награду!","Закрыть","");
				new query[256];
				mysql_format(connects, query, sizeof(query),"INSERT IGNORE INTO `questsprogress` (`idquest`, `name`, `progress`, `accept`) VALUES ('%d', '%s', '%d', '%d')", id, player_name[playerid], 1, 1);
				mysql_tquery(connects, query, "SaveQuests", "dd", playerid, id);
				AcceptQuest[playerid][id] = 1;
				QuestProgress[playerid][id] = 100;
				PI[playerid][pExp] += 1;
				UpdateExp(playerid);
				SendBotMessage(playerid,"Задание выполнено. Забери свою награду!");
				GiveMoney(playerid,10000,"quest 3");
				return true;
			}
			if(id == 3 && lic[playerid][0])
			{
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы завершили выполнение квеста 'Вод. удостоверение'\n\t"NO"Вы получили свою награду!","Закрыть","");
				new query[256];
				mysql_format(connects, query, sizeof(query),"INSERT IGNORE INTO `questsprogress` (`idquest`, `name`, `progress`, `accept`) VALUES ('%d', '%s', '%d', '%d')", id, player_name[playerid], 1, 1);
				mysql_tquery(connects, query, "SaveQuests", "dd", playerid, id);
				AcceptQuest[playerid][id] = 1;
				QuestProgress[playerid][id] = 100;
				PI[playerid][pExp] += 2;
				UpdateExp(playerid);
				SendBotMessage(playerid,"Задание выполнено. Забери свою награду!");
				GiveMoney(playerid,6000,"quest 3");
				return true;
			}
			if(id == 5 && PI[playerid][pPhone])
			{
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы завершили выполнение квеста 'Телефон'\n\t"NO"Вы получили свою награду!","Закрыть","");
				new query[256];
				mysql_format(connects, query, sizeof(query),"INSERT IGNORE INTO `questsprogress` (`idquest`, `name`, `progress`, `accept`) VALUES ('%d', '%s', '%d', '%d')", id, player_name[playerid], 1, 1);
				mysql_tquery(connects, query, "SaveQuests", "dd", playerid, id);
				AcceptQuest[playerid][id] = 1;
				QuestProgress[playerid][id] = 100;
				SendBotMessage(playerid,"Задание выполнено. Забери свою награду!");
				GiveMoney(playerid,1000,"quest 5");
			}
			if(id == 9) {
				new count, query[256];
				mysql_format(connects, query, sizeof(query),"SELECT `Name`, `pLevel` FROM `accounts` WHERE `pDrug` = '%s' ORDER BY `pLevel` DESC LIMIT 10", player_name[playerid]);
				new Cache:result = mysql_query(connects, query);
				new rows;
				cache_get_row_count(rows);
				if(rows) {
					for(new i; i < rows; i ++) count++;
				}
				cache_delete(result);
				if(count < 5) {
					format(str,sizeof(str),""P"%s",QI[id][QuestName]);
					format(string,sizeof(string),""G"Вы не пригласили 5 друзей по реферальной системе (/referals)\n\n%s",QI[id][QuestText]);
					D(playerid,DIALOG_NONE,DSM, str,string,"Закрыть","");
				}
				else {
					D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы завершили выполнение квеста 'Друзья в деле'\n\t"NO"Вы получили свою награду!","Закрыть","");
					mysql_format(connects, query, sizeof(query),"INSERT IGNORE INTO `questsprogress` (`idquest`, `name`, `progress`, `accept`) VALUES ('%d', '%s', '%d', '%d')", id, player_name[playerid], 1, 1);
					mysql_tquery(connects, query, "SaveQuests", "dd", playerid, id);
					AcceptQuest[playerid][id] = 1;
					QuestProgress[playerid][id] = 100;
					SendBotMessage(playerid,"Задание выполнено. Забери свою награду!");
					PI[playerid][pExp] += 3;
					UpdateExp(playerid);
					GiveMoney(playerid,10000,"quest 9");
				}
				return true;
			}
			if(id == 13 && PI[playerid][pHouse])
			{
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы завершили выполнение квеста 'Мой дом'\n\t"NO"Вы получили свою награду!","Закрыть","");
				new query[256];
				mysql_format(connects, query, sizeof(query),"INSERT IGNORE INTO `questsprogress` (`idquest`, `name`, `progress`, `accept`) VALUES ('%d', '%s', '%d', '%d')", id, player_name[playerid], 1, 1);
				mysql_tquery(connects, query, "SaveQuests", "dd", playerid, id);
				AcceptQuest[playerid][id] = 1;
				QuestProgress[playerid][id] = 100;
				SendBotMessage(playerid,"Задание выполнено. Забери свою награду!");
				GiveMoney(playerid,10000,"quest 13");
				return true;
			}
			if(AcceptQuest[playerid][id]==0)
			{
				new year, month, day;
				getdate(year, month, day);
				new days = 0;
				if(id >= 40) {
					days = day;
					time_quest[playerid][id] = 1;
				}
				new query[256];
				mysql_format(connects, query, sizeof(query),"INSERT IGNORE INTO `questsprogress` (`idquest`, `name`, `progress`, `accept`, `day`) VALUES ('%d', '%s', '%d', '%d', '%d')", id, player_name[playerid], 0, 1, days);
				mysql_tquery(connects, query, "SaveQuests", "dd", playerid, id);
				AcceptQuest[playerid][id] = 1;
				QuestProgress[playerid][id] = 0;
				SendBotMessage(playerid,"Желаю удачи! Для просмотра заданий введи: /quest");
				NextStapQI(playerid,id);
			}
			return 1;
		}
	case D_QUEST_2: {
			if(!response) return true;
			new id = QuestShow[playerid][listitem];
			if(listitem == GetPVarInt(playerid,"end_quest"))
			{
				DeletePVar(playerid,"end_quest");
				for(new i ; i < MAX_QUESTS;i++)
				{
					if(QuestProgress[playerid][i] >= 0 && QuestProgress[playerid][i] != 100 && AcceptQuest[playerid][i] != 0)
					{
						if(QuestProgress[playerid][i] >= QI[i][LastProgress]) return SendClientMessage(playerid, COLOR_GREY, "Задание выполнено, завершите его в (/quest)");
						QuestProgress[playerid][i] = 0;
						AcceptQuest[playerid][i] = 0;
						new query[300];
						mysql_format(connects, query, sizeof(query),"DELETE FROM `questsprogress` WHERE `idquest` = '%d' AND `name` = '%s' LIMIT 1",i, player_name[playerid]);
						mysql_tquery(connects,query);
						SendOk(playerid,"Вы отменили текущий квест");
						break;
					}
				}
				return true;
			}
			if(QuestProgress[playerid][id]==100) return SendClientMessage(playerid, COLOR_GREY, "Выбранный квест уже выполнен");
			new string[512]; 
			if(QuestProgress[playerid][id] < QI[id][LastProgress]) format(string,sizeof(string),""G"Прогресс: "ORANGE"%d/%d"W"",QuestProgress[playerid][id],QI[id][LastProgress]);
			else format(string,sizeof(string),""G"Прогресс: "NO"Можно завершить"W"");
			format(string,sizeof(string),""W"%s\n\n%s",QI[id][QuestText],string);
			D(playerid,D_QUEST_3,DSM,QI[id][QuestName],string,"Начать","Закрыть");
			QuestClick[playerid] = id;
		}
	case D_QUEST_3: {
			if(!response) return 1;
			NextStapQI(playerid,QuestClick[playerid]);
		}
	case D_BILBORDS:{
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					if(PI[playerid][pLevel] < 4) return SendClientMessage(playerid, COLOR_GREY, "Заказ рекламного места доступен с 4 уровня");
					new string[3200] = ""P"Место размещения\t"P"Статус\t"P"Владелец", str[124];
					for(new x; x<MAX_BILLBORDS; x++) {
						if(!BildInfo[x][bOwned]) format(str,124,"\n%s\t"GREEN"Свободен\t"GREEN"Отсутствует",BildInfo[x][bPosText]);
						else format(str,124,"\n%s\t"NO"Арендован\t"G"%s",BildInfo[x][bPosText],BildInfo[x][bOwner]);
						strcat(string,str);
					}
					return D(playerid,D_BILL_MAIN,DSTH,""P"Заказ билборда",string,"Выбрать","Закрыть");
				}
			}
		}
	case D_RIELTOR: {
			if(!response) return 1;
			switch(listitem) {
			case 0: {
					drieltorka[playerid] = 0;
					new string[1512],houseidd = 0,classname[20];
					for(new i = 0; i < gHouseCount; i ++) {
						if(gHouses[i][houseOwnerID] != 0) continue;
						switch(gHouses[i][houseClass]) {
						case 0:classname = "Эконом";
						case 1:classname = "Cредний";
						case 2:classname = "Элитный";
						case 3:classname = "Особняк";
						default: classname = "Неизвестно";
						}
						format(string, sizeof(string), "%sДом "P"№%d "W"[%s]\n",string,i+1,classname);
						houseidd++;
						if(houseidd == 30) {
							format(string, sizeof(string), "%s{AFAFAF}Далее >>>\n", string);
							break;
						}
					}
					if(!houseidd) return SendClientMessage(playerid, COLOR_GREY, "Свободных домов нет");
					D(playerid, D_RIELTOR_HOUSE, DSL, ""P"Выберите дом", string, "Выбрать", "Назад");
					return 1;
				}
			case 1: {
					drieltorka[playerid] = 0;
					new string[1512],bizzid = 0;
					format(string, sizeof(string), ""W"Номер бизнеса\t"W"Название\t"W"Тип\n");
					for(new i = 0; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzOwnerID] != 0) format(string, sizeof(string), "%s"P"%d\t"P"%s\t"P"%s\n",string,i+1,gBusiness[i][bizzName],gBusinessTypeName[gBusiness[i][bizzType]-1]);
						else format(string, sizeof(string), "%s"P"%d\t%s\t%s\n",string,i+1,gBusiness[i][bizzName],gBusinessTypeName[gBusiness[i][bizzType]-1]);
						bizzid++;
						Bizz_r[i][playerid] = i;
						if(bizzid == 20) {
							format(string, sizeof(string), "%s{AFAFAF}Далее >>>\n", string);
							break;
						} 
					}
					if(!bizzid) return SendClientMessage(playerid, COLOR_GREY, "Свободных бизнесов нет");
					D(playerid, D_RIELTOR_BIZZ, DSTH, ""P"Выберите бизнес", string, "Выбрать", "Закрыть");
					return 1;
				}
			case 2: {
					new count_house, count_bizz;
					for(new i = 0; i < gHouseCount; i ++) {
						if(gHouses[i][houseOwnerID] != 0) continue;
						count_house++;
					}
					for(new b = 0; b < gBusinessCount; b ++) {
						if(gBusiness[b][bizzOwnerID] != 0) continue;
						count_bizz++;
					}
					static const f_str[] = ""W"Всего в штате:"ORANGE" %d"W" домов\n\
					Всего в штате:"ORANGE" %d"W" бизнесов\n\n\
					Свободно домов:"ORANGE" %d"W"\n\
					Свободно бизнесов:"ORANGE" %d";
					new string[sizeof(f_str) + 10];
					format(string,sizeof(string),f_str,MAX_HOUSE_COUNT,MAX_BUSINESS_COUNT, count_house, count_bizz);
					D(playerid, DIALOG_NONE, DSM, ""P"Информация",string, "Закрыть", "");
				}
			}
		}
	case D_RIELTOR_HOUSE: {
			if(!response) return 1;
			if(listitem == 30 || listitem == 31) CheckHouses(playerid,listitem);
			else {
				new bizz = TI[playerid][tSelectedBusinessID];
				if(bizz < 0) return 1;
				new price = gBusiness[bizz][bizzPrice]*150;
				new houseid = strval(inputtext[4])-1;
				SetPVarInt(playerid,"hrieltor",houseid+1);
				if(GetString(inputtext, "<<< Назад")) return CheckHouses(playerid,31);
				new classname[20];
				switch(gHouses[houseid][houseClass]) {
				case 0:classname = "Эконом";
				case 1:classname = "Cредний";
				case 2:classname = "Элитный";
				case 3:classname = "Особняк";
				default: classname = "Неизвестно";
				}
				static const f_str[] = ""W"Дом № \t\t"P"%d\n\
					"W"Класс: \t\t\t"P"%s\n\
					"W"Гос.Цена: \t\t"GREEN"$%d\n\n\
					"W"Стоимость осмотра дома - "GREEN"$%d";
				new string[sizeof(f_str) +1 + (-2 + 10) + (-2 + 20) + (-2 + 7)];

				format(string,sizeof(string),f_str,houseid+1, classname, gHouses[houseid][housePrice],price);
				D(playerid,D_RIELTOR_HOUSE_2,DSM, ""P"Риэлторское агентство",string,"Осмотреть","Отмена");
			}
		}
	case D_RIELTOR_HOUSE_2: {
			if(!response) return DeletePVar(playerid,"hrieltor");
			new bizz = TI[playerid][tSelectedBusinessID];
			if(bizz < 0) return 1;
			new price = gBusiness[bizz][bizzPrice]*150;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
			bizz_pay(bizz,price);
			GiveMoney(playerid,-price,"осмотр риэлторка");
			new houseid = GetPVarInt(playerid,"hrieltor")-1,Float:pos[3];

			GetPlayerPos(playerid,pos[0],pos[1],pos[2]);

			SetPVarFloat(playerid,"rielX",pos[0]);
			SetPVarFloat(playerid,"rielY",pos[1]);
			SetPVarFloat(playerid,"rielZ",pos[2]);
			SetPVarInt(playerid,"rielVW",GetPlayerVirtualWorld(playerid));

			SetPlayerPosAC(playerid,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]-50.0,0,0);
			TogglePlayerControllable(playerid,0);

			SetPlayerCameraPos(playerid,gHouses[houseid][houseX] + (-8.0 * floatsin(gHouses[houseid][houseR], degrees)),gHouses[houseid][houseY] + (5.0 * floatcos(gHouses[houseid][houseR], degrees)), gHouses[houseid][houseZ]+0.3);
			SetPlayerCameraLookAt(playerid, gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]);

			SendOk(playerid,"Для выхода нажмите: "ORANGE"ENTER");
			SendOk(playerid,"Отметить местоположение дома на Вашей карте: "ORANGE"/label");
		}
	case D_RIELTOR_BIZZ: {
			if(!response) return 1;
			if(listitem == 20 || listitem == 21) CheckBusiness(playerid,listitem);
			else {
				new bizzid = Bizz_r[listitem][playerid]+drieltorka[playerid];
				new bizz = TI[playerid][tSelectedBusinessID];
				if(bizz < 0) return 1;
				new price = gBusiness[bizz][bizzPrice]*150;
				SetPVarInt(playerid,"bizzrielor",bizzid+1);
				if(gBusiness[bizzid][bizzOwnerID])
				{
					SendClientMessage(playerid, COLOR_GREY, "Этот бизнес уже куплен");
					return true;
				}
				if(GetString(inputtext, "<<< Назад")) return CheckBusiness(playerid,21);
				static const f_str[] = ""W"Бизнес № \t\t"P"%d [%s]\n\
					"W"Тип: \t\t\t"P"%s\n\
					"W"Гос.Цена: \t\t"GREEN"$%d\n\n\
					"W"Стоимость осмотра бизнеса - "GREEN"$%d";
				new string[sizeof(f_str) +1 + (-2 + 15) + (-2 + 20) + (-2 + 7) + 6];

				format(string,sizeof(string),f_str,bizzid+1, gBusiness[bizzid][bizzName],gBusinessTypeName[gBusiness[bizzid][bizzType]-1], gBusiness[bizzid][bizzSellPrice],price);
				D(playerid,D_RIELTOR_BIZZ_2,DSM, ""P"Риэлторское агентство",string,"Осмотреть","Отмена");
			}
		}
	case D_RIELTOR_BIZZ_2: {
			if(!response) return DeletePVar(playerid,"bizzrielor");
			new bizz = TI[playerid][tSelectedBusinessID];
			if(bizz < 0) return 1;
			new price = gBusiness[bizz][bizzPrice]*150;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
			bizz_pay(bizz,price);
			GiveMoney(playerid,-price,"осмотр риэлторка");
			new bizzid = GetPVarInt(playerid,"bizzrielor")-1,Float:pos[3];

			GetPlayerPos(playerid,pos[0],pos[1],pos[2]);

			SetPVarFloat(playerid,"rielX",pos[0]);
			SetPVarFloat(playerid,"rielY",pos[1]);
			SetPVarFloat(playerid,"rielZ",pos[2]);
			SetPVarInt(playerid,"rielVW",GetPlayerVirtualWorld(playerid));

			SetPlayerPosAC(playerid,gBusiness[bizzid][bizzX],gBusiness[bizzid][bizzY],gBusiness[bizzid][bizzZ]-50.0,0,0);
			TogglePlayerControllable(playerid,0);

			SetPlayerCameraPos(playerid,gBusiness[bizzid][bizzX] + (-8.0 * floatsin(gBusiness[bizzid][bizzR], degrees)),gBusiness[bizzid][bizzY] + (5.0 * floatcos(gBusiness[bizzid][bizzR], degrees)), gBusiness[bizzid][bizzZ]+0.3);
			SetPlayerCameraLookAt(playerid, gBusiness[bizzid][bizzX], gBusiness[bizzid][bizzY], gBusiness[bizzid][bizzZ]);

			SendOk(playerid,"Для выхода нажмите: "ORANGE"ENTER");
			SendOk(playerid,"Отметить местоположение бизнеса на Вашей карте: "ORANGE"/label");
		}
	case D_VEH_NUMBER: {
			if(!response) return 1;
			if(!IsACarNumber(CarsInfo[playerid][carModel][listitem])) return SendClientMessage(playerid, COLOR_GREY, "На данное Т/С нельзя установить гос.номер");
			if(!GetString(NumberVehicle[playerid][listitem],"transit")) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже получен гос.номер на данное Т/С");
			new string[156];
			format(string,sizeof(string),"\n\n"W"Вы действительно хотите установить гос.номер на Т/С "P"%s"W" стоимостью - "ORANGE"15000$"W"?\n\n",gTransport[CarsInfo[playerid][carModel][listitem]-400][trName]);
			D(playerid,D_VEH_NUMBER_2,DSM, ""P"Покупка гос.номера", string, "Купить", "Закрыть");
			SetPVarInt(playerid,"buy_carnumber",listitem);
		}
	case D_VEH_NUMBER_2: {
			if(!response) return true;
			if(PI[playerid][pCash] < 15000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
			
			if(!IsACarNumber(CarsInfo[playerid][carModel][GetPVarInt(playerid,"buy_carnumber")])) return SendClientMessage(playerid, COLOR_GREY, "На данное Т/С нельзя установить гос.номер");
			if(!GetString(NumberVehicle[playerid][GetPVarInt(playerid,"buy_carnumber")],"transit")) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже получен гос.номер на данное Т/С");
			
			new numbers[64],a1[32],a2[32],a3[32];
			a1 = ABC[random(20)];
			a2 = ABC[random(20)];
			a3 = ABC[random(20)];
			format(numbers,10, "%c %i %c%c", a1, 100 + random(900), a2, a3) ;
			new query[120];
			mysql_format(connects, query, sizeof(query),"SELECT * FROM `"TABLE_CARS"` WHERE `number` = '%s' LIMIT 1", numbers);
			mysql_tquery(connects, query, "car_numbers", "is",playerid, numbers);
		}
	case D_WORK: {
			if(!response) return 1;
			if(!PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
			if(!start_work[playerid]) {
				A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
				SendOk(playerid,"Рабочий день начат");
				TI[playerid][tMasked] = 0;
				SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
				start_work[playerid] = 1;
				PI[playerid][pJob] = 0;
				UpdatePlayerData(playerid,"pJob",PI[playerid][pJob]);
				UpdatePlayerData(playerid,"FracDuty",start_work[playerid]);
				return 1;
			}
			ResetPlayerWeapons(playerid);
			SendOk(playerid, "Рабочий день окончен");
			SetPlayerColor(playerid, TEAM_HIT_COLOR);
			start_work[playerid] = 0;
			A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
			SetArmour(playerid, 0);
			UpdatePlayerData(playerid,"FracDuty",start_work[playerid]);
		}
	case D_RADIO: {
			if(!response) return 1; 
			switch(listitem) {
			case 0: PlayAudioStreamForPlayer(playerid, "http://dorognoe.hostingradio.ru:8000/dorognoe"),SendOk(playerid, "[!]Онлайн радио включено");
			case 1: PlayAudioStreamForPlayer(playerid, "http://ep256.streamr.ru"),SendOk(playerid, "[!]Онлайн радио включено");
			case 2: PlayAudioStreamForPlayer(playerid, "http://listen.myradio24.com:9000/8020"),SendOk(playerid, "[!]Онлайн радио включено");
			case 3: PlayAudioStreamForPlayer(playerid, "https://chanson.hostingradio.ru:8041/chanson256.mp3"), SendOk(playerid, "[!]Онлайн радио включено");
			case 4: PlayAudioStreamForPlayer(playerid, "https://radio-holding.ru:9433/marusya_default"), SendOk(playerid, "[!]Онлайн радио включено");
			case 5: PlayAudioStreamForPlayer(playerid, "http://listen.rpfm.ru:9000/premium128"), SendOk(playerid, "[!]Онлайн радио включено");
			case 6: D(playerid, D_RADIO_1, DSI, ""P"Своя музыка", ""W"Введите ниже ссылку на действующий поток радио/музыки:", "Играть", "Назад");
			case 7: StopAudioStreamForPlayer(playerid), SendOk(playerid,"[!]Радио выключено");
			}
		}
	case D_RADIO_1: {
			if(!response) return pc_cmd_play(playerid);
			if(!strlen(inputtext)) return D(playerid,D_RADIO_1, DSI, ""P"Своя музыка", ""W"Введите ниже ссылку на действующий поток радио/музыки:", "Играть", "Назад");
			new str[450];
			format(str,sizeof(str),"%s",strlen(inputtext));
			PlayAudioStreamForPlayer(playerid, str);
			SendOk(playerid,"Аудиопоток успешно включен");
			return true;
		}
	case D_FAMILY_BL:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: D(playerid,D_FAMILY_BLINVITE, DSI, ""P"Чёрный список", ""W"Введите ниже через запятую ID игрока, причину", "Принять", "Назад");
			case 1: D(playerid,D_FAMILY_BLUNINVITE, DSI, ""P"Чёрный список", ""W"Введите имя игрока, которого хотите удалить из чёрного списка:", "Принять", "Назад" ) ;
			case 2:
				{
					D(playerid,D_FAMILY_BLCLEAR, DSM, ""P"Чёрный список", "\
					"W"\n\nВы действительно желаете очистить чёрный список семьи?\n\n\
					"G"* Отменить данное действие будет невозможно", "Принять", "Назад");
				}
			case 3: {
					PageFirst[playerid][0] = 0;
					PageFirst[playerid][1] = 20;
					new query[200];
					mysql_format(connects, query, sizeof(query),"SELECT `bl_date`,`bl_name`,`bl_reason` FROM `family_blacklist` WHERE `bl_family` = '%i' LIMIT %i, %i", PI[playerid][pFamily], PageFirst[playerid][0],PageFirst[playerid][1]);
					mysql_pquery(connects, query, "bl_callback_4", "i", playerid);
				}
			}
		}
	case D_FAMILY_BL_1: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					PageFirst[playerid][0] += 20;
					PageFirst[playerid][1] += 20;
				}
			case 1: {
					PageFirst[playerid][0] -= 20;
					PageFirst[playerid][1] -= 20;
					if(PageFirst[playerid][0] <= 0) PageFirst[playerid][0] = 0;
					if(PageFirst[playerid][1] < 20) PageFirst[playerid][1] = 20;
				}
			}
			new query[200];
			mysql_format(connects, query, sizeof(query),"SELECT `bl_date`,`bl_name`,`bl_reason` FROM `family_blacklist` WHERE `bl_family` = '%i' LIMIT %i, %i", PI[playerid][pFamily], PageFirst[playerid][0],PageFirst[playerid][1]);
			mysql_pquery(connects, query, "bl_callback_4", "i", playerid);
		}
	case D_FAMILY_BLINVITE: 
		{
			if(!response) return pc_cmd_fmenu(playerid);
			new targetid, reason[50];
			if(sscanf(inputtext, "p<,>is[50]",targetid, reason)) return D(playerid,D_FAMILY_BLINVITE, DSI, ""P"Чёрный список", ""W""W"Введите ниже через запятую ID игрока, причину", "Принять", "Назад");
			if(!IsPlayerConnected(targetid) || targetid == playerid) return D(playerid, D_FAMILY_BLINVITE, DSI, ""P"Чёрный список", ""W""W"Введите ниже через запятую ID игрока, причину\n\n"G"Неверный ID игрока!", "Принять", "Назад");
			if(PI[targetid][pFamily] != PI[playerid][pFamily]) return D(playerid,D_FAMILY_BLINVITE, DSI, ""P"Чёрный список", ""W""W"Введите ниже через запятую ID игрока, причину\n\n"G"Игрок не состоит в вашей семье!", "Принять", "Назад");

			strmid(bl_reason[playerid], reason, 0, strlen(reason), 50);

			new sql_string[200];
			mysql_format(connects, sql_string, sizeof(sql_string),"SELECT * FROM `family_blacklist` WHERE `bl_id` = '%d' AND `bl_family` = '%d'", PI[targetid][pID], PI[playerid][pFamily]);
			mysql_pquery(connects, sql_string, "bl_callback_family", "ii", playerid, targetid);
		}
	case D_FAMILY_BLUNINVITE: {
			if(!response) return pc_cmd_fmenu(playerid);
			new names[24];
			if(sscanf(inputtext, "s[24]",names)) return D(playerid,D_FAMILY_BLUNINVITE, DSI, ""P"Чёрный список", ""W"Введите имя игрока, которого хотите удалить из чёрного списка:", "Принять", "Назад" ) ;

			new sql_string[128];
			mysql_format(connects, sql_string, sizeof(sql_string),"SELECT * FROM `family_blacklist` WHERE `bl_name` = '%s' AND `bl_family` = '%d'", names, PI[playerid][pFamily]);
			mysql_pquery(connects, sql_string, "bl_callback_3", "is", playerid, names);
			return true;
		}
	case D_FAMILY_BLCLEAR: {
			if(!response) return pc_cmd_fmenu(playerid);
			
			new sql_string[128];
			mysql_format(connects, sql_string, sizeof(sql_string),"DELETE FROM `family_blacklist` WHERE `bl_family` = '%d'",PI[playerid][pFamily]);
			mysql_tquery(connects, sql_string,"","");

			SendOk(playerid,"Вы очистили черный список семьи");
			return true;
		}
	case D_STREAMS: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					PageFirst[playerid][0] += 20;
					PageFirst[playerid][1] += 20;
				}
			case 1: {
					PageFirst[playerid][0] -= 20;
					PageFirst[playerid][1] -= 20;
					if(PageFirst[playerid][0] <= 0) PageFirst[playerid][0] = 0;
					if(PageFirst[playerid][1] < 20) PageFirst[playerid][1] = 20;
				}
			}
			new query[200];
			mysql_format(connects, query, sizeof(query),"SELECT `Name`,`stream` FROM `streamers` WHERE `live` = 1 LIMIT %i, %i", PageFirst[playerid][0],PageFirst[playerid][1]);
			mysql_pquery(connects, query, "stream_online", "i", playerid);
		}
	case D_BL:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: D(playerid,D_BLINVITE, DSI, ""P"Чёрный список", ""W"Введите ниже через запятую ID игрока, причину", "Принять", "Назад");
			case 1: D(playerid,D_BLUNINVITE, DSI, ""P"Чёрный список", ""W"Введите имя игрока, которого хотите удалить из чёрного списка:", "Принять", "Назад" ) ;
			case 2:
				{
					D(playerid,D_BLCLEAR, DSM, ""P"Чёрный список", "\
					"W"\n\nВы действительно желаете очистить чёрный список организации?\n\n\
					"G"* Отменить данное действие будет невозможно", "Принять", "Назад");
				}
			case 3: {
					PageFirst[playerid][0] = 0;
					PageFirst[playerid][1] = 20;
					
					new query[200];
					mysql_format(connects, query, sizeof(query),"SELECT `bl_date`,`bl_name`,`bl_reason` FROM `fractions_blacklist` WHERE `bl_fraction` = '%i' LIMIT %i, %i", PI[playerid][pMember], PageFirst[playerid][0],PageFirst[playerid][1]);
					mysql_pquery(connects, query, "bl_callback_2", "i", playerid);
				}
			}
		}
	case D_BL_1: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					PageFirst[playerid][0] += 20;
					PageFirst[playerid][1] += 20;
				}
			case 1: {
					PageFirst[playerid][0] -= 20;
					PageFirst[playerid][1] -= 20;
					if(PageFirst[playerid][0] <= 0) PageFirst[playerid][0] = 0;
					if(PageFirst[playerid][1] < 20) PageFirst[playerid][1] = 20;
				}
			}
			new query[200];
			mysql_format(connects, query, sizeof(query),"SELECT `bl_date`,`bl_name`,`bl_reason` FROM `fractions_blacklist` WHERE `bl_fraction` = '%i' LIMIT %i, %i", PI[playerid][pMember], PageFirst[playerid][0],PageFirst[playerid][1]);
			mysql_pquery(connects, query, "bl_callback_2", "i", playerid);
		}
	case D_BLCLEAR: {
			if(!response) return pc_cmd_bl(playerid);
			new sql_string[128];
			mysql_format(connects, sql_string, sizeof(sql_string),"DELETE FROM `fractions_blacklist` WHERE `bl_fraction` = '%d'",PI[playerid][pMember]);
			mysql_tquery(connects, sql_string,"","");

			SendOk(playerid,"Вы очистили черный список организации");
			return true;
		}
	case D_BLUNINVITE: {
			if(!response) return pc_cmd_bl(playerid);
			new names[24];
			if(sscanf(inputtext, "s[24]",names)) return D(playerid,D_BLUNINVITE, DSI, ""P"Чёрный список", ""W"Введите имя игрока, которого хотите удалить из чёрного списка:", "Принять", "Назад" ) ;

			new sql_string[128];
			mysql_format(connects, sql_string, sizeof(sql_string),"SELECT * FROM `fractions_blacklist` WHERE `bl_name` = '%s' AND `bl_fraction` = '%d'", names, PI[playerid][pMember]);
			mysql_pquery(connects, sql_string, "bl_callback_1", "is", playerid, names);
			return true;
		}
	case D_BLINVITE:
		{
			if(!response) return pc_cmd_bl(playerid);
			new targetid, reason[50];
			if(sscanf(inputtext, "p<,>is[50]",targetid, reason)) return D(playerid,D_BLINVITE, DSI, ""P"Чёрный список", ""W""W"Введите ниже через запятую ID игрока, причину", "Принять", "Назад");
			if(!IsPlayerConnected(targetid) || targetid == playerid) return D(playerid, D_BLINVITE, DSI, ""P"Чёрный список", ""W""W"Введите ниже через запятую ID игрока, причину\n\n"G"Неверный ID игрока!", "Принять", "Назад");
			if(PI[targetid][pMember] != PI[playerid][pMember]) return D(playerid,D_BLINVITE, DSI, ""P"Чёрный список", ""W""W"Введите ниже через запятую ID игрока, причину\n\n"G"Игрок не состоит в вашей организации!", "Принять", "Назад");

			strmid(bl_reason[playerid], reason, 0, strlen(reason), 50);

			new sql_string[200];
			mysql_format(connects, sql_string, sizeof(sql_string),"SELECT * FROM `fractions_blacklist` WHERE `bl_id` = '%d' AND `bl_fraction` = '%d'", PI[targetid][pID], PI[playerid][pMember]);
			mysql_pquery(connects, sql_string, "bl_callback", "ii", playerid, targetid);
		}
	case D_REFERALS: {
			if(response) FirstReferal[playerid] += 10;
			else {
				if(FirstReferal[playerid] >= 10) FirstReferal[playerid] -= 10;
				else return true;
			}
			new string[1024], Name[MAX_PLAYER_NAME], Level,rows,query[156];
			mysql_format(connects, query, sizeof(query),"SELECT `Name`,`pLevel` FROM `accounts` WHERE `pDrug` = '%s' ORDER BY `pLevel` DESC LIMIT %i, 10", player_name[playerid], FirstReferal[playerid]);
			new Cache:result = mysql_query(connects, query);
			cache_get_row_count(rows);
			if(rows) {
				for(new i; i < rows; i ++) {
					cache_get_value_name(i, "Name", Name, MAX_PLAYER_NAME);
					cache_get_value_name_int(i, "pLevel",Level);

					if(Level < 3) format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "NO"%d LEVEL\n", string, i+FirstReferal[playerid]+1, Name, Level);
					else format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "GREEN"%d LEVEL\n", string, i+FirstReferal[playerid]+1, Name, Level);
				}
				if(!D(playerid, D_REFERALS, 0, "Приглашенные", string, "Далее", "Назад")) SendClientMessage(playerid, COLOR_GREY, "Недоступно, попробуйте повторить заного");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Больше Вас никто не указывал как пригласившего на сервер");
			cache_delete(result);
		}
	case D_FAMILY_OFFLINE: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					PageFirst[playerid][0] += 20;
					PageFirst[playerid][1] += 20;
				}
			case 1: {
					PageFirst[playerid][0] -= 20;
					PageFirst[playerid][1] -= 20;
					if(PageFirst[playerid][0] <= 0) PageFirst[playerid][0] = 0;
					if(PageFirst[playerid][1] < 20) PageFirst[playerid][1] = 20;
				}
			}
			new query[200];
			mysql_format(connects, query, sizeof(query),"SELECT `family`,`pOnline`,`pFamRank`,`Name` FROM `accounts` WHERE `family` = '%i' AND `online_status` = '1001'  LIMIT %i, %i", PI[playerid][pFamily], PageFirst[playerid][0],PageFirst[playerid][1]);
			mysql_pquery(connects, query, "family_offline", "i", playerid);
		}
	case D_SPY: {
			if(!response) return 1;
			new string[1024];
			switch(listitem) {
			case 0: TI[playerid][tMasked] = fLSPD;
			case 1: TI[playerid][tMasked] = fRCSD;
			case 2: TI[playerid][tMasked] = fWHITEHOUSE;
			case 3: TI[playerid][tMasked] = fARMYLS;
			case 4: TI[playerid][tMasked] = fMEDICLS;
			case 5: TI[playerid][tMasked] = fLSNEWS;
			case 6: TI[playerid][tMasked] = fLCN;
			case 7: TI[playerid][tMasked] = fYAKUZA;
			case 8: TI[playerid][tMasked] = fRM;
			case 9: TI[playerid][tMasked] = fBALLAS;
			case 10: TI[playerid][tMasked] = fVAGOS;
			case 11: TI[playerid][tMasked] = fGROVE;
			case 12: TI[playerid][tMasked] = fAZTEC;
			case 13: TI[playerid][tMasked] = fRIFA;
			}
			for(new i = 0; i < 14; i++) {
				if(!gFractionSkin[TI[playerid][tMasked]][i]) continue;
				format(string, sizeof(string), "%s%i\n",string,gFractionSkin[TI[playerid][tMasked]][i]);
			}
			D(playerid, D_SPY_2, DSL, ""P"Выберите скин", string, "Выбрать", "Закрыть");
			return 1;
		}
	case D_SPY_2: {
			if(!response) return TI[playerid][tMasked] = 0;
			new fraction = TI[playerid][tMasked];
			A_SetPlayerSkin(playerid,gFractionSkin[fraction][listitem]);
			SetPlayerColor(playerid,gFractionSpawn[fraction][fracColor]);
			new string[128];
			format(string, sizeof(string), "Вы взяли шпионскую одежду - %s", FI[fraction][fName]);
			SendOk(playerid,string);
			SendOk(playerid,"Чтобы переодеться обратно, встаньте еще раз на пикап");
			return 1;
		}

	case D_SPY_3: {
			if(!response) return true;
			switch(listitem) {
			case 0: {
					if(TI[playerid][tMasked]) {
						A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
						SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
						TI[playerid][tMasked] = 0;
						return 1;
					}
					if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с должности Агент FBI");
					D(playerid, D_SPY, DSL, ""P"Выберите фракцию","Полиция Лос Сантос\nRCSD\nПравительство\nНац. Гвардия\nБольница г. ЛС\nРадиоцентр г. ЛС\nИтальянская мафия\n\
					Якудза\nРусская Мафия\nBallas Gang\nVagos Gang\nGrove Street Gang\nAztecas Gang\nRifa Gang", "Выбрать", "Закрыть");
				}
			case 1: ShowGetGun(playerid);
			case 2: {
					if(!start_work[playerid]) {
						A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
						SendOk(playerid,"Рабочий день начат");
						TI[playerid][tMasked] = 0;
						SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
						start_work[playerid] = 1;
						PI[playerid][pJob] = 0;
						UpdatePlayerData(playerid,"pJob",PI[playerid][pJob]);
						UpdatePlayerData(playerid,"FracDuty",start_work[playerid]);
						return 1;
					}
					ResetPlayerWeapons(playerid);
					SendOk(playerid, "Рабочий день окончен");
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					start_work[playerid] = 0;
					A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
					SetArmour(playerid, 0);
					UpdatePlayerData(playerid,"FracDuty",start_work[playerid]);
				}
			}
		}
	case D_LEAVE: {
			if(!response) return 1;
			if(PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Лидеру запрещено");
			if(!PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
			if(start_work[playerid]) {
				SendOk(playerid,"Рабочий день окончен");
				start_work[playerid] = 0;
				UpdatePlayerData(playerid,"FracDuty",start_work[playerid]);
			}
			add_jobinfo(playerid,"Собственное желание");
			PI[playerid][pRank] = 0;
			PI[playerid][pMember] = 0;
			PI[playerid][pJob] = 0;
			PI[playerid][pFracSkin] = 0;
			SetArmour(playerid, 0);
			SetPlayerColor(playerid,0xFFFFFF11);
			skin_player(playerid);
			UpdatePlayerData(playerid,"pMember",PI[playerid][pMember]);
			UpdatePlayerData(playerid,"pRank",PI[playerid][pRank]);
			UpdatePlayerData(playerid,"pJob",PI[playerid][pJob]);
			UpdatePlayerData(playerid,"pModel",PI[playerid][pFracSkin]);
			
			PI[playerid][pAdvert] = 0;
			UpdatePlayerData(playerid,"Advert", 0);
			
			ResetPlayerWeapons(playerid);
			FracLog(LOGS_LEAVE,player_name[playerid],player_name[playerid],"С/Ж LEAVE");
		}
	case D_LICENSES: {
			if(!response) return 1;
			new string[144], lic_name[24];
			if(TI[playerid][tAutoSchool])
			{
				switch(TI[playerid][tAutoSchool]-1) {
				case 0: strcat(lic_name,"наземный транспорт");
				case 1: strcat(lic_name,"воздушный транспорт");
				case 2: strcat(lic_name,"водный транспорт");
				}
				format(string,sizeof(string),"%s завершите активный экзамен (%s)",player_name[playerid],lic_name);
				SendBotMessage(playerid,string);
				return 1;
			}
			switch(listitem) {
			case 0: {
					if(lic[playerid][0]) {
						format(string,sizeof(string),"%s у вас уже имеется данная лицензия",player_name[playerid]);
						SendBotMessage(playerid,string);
						return 1;
					}
					if(PI[playerid][pCash] < 500) {
						format(string,sizeof(string),"%s у вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
						SendBotMessage(playerid,string);
						return 1;
					}
					GiveMoney(playerid,-500,"покупка лицензии");
					FI[fINSTRUCTORS][fBank] += 250;

					format(string,sizeof(string),"%s займите свободный стол для прохождения теоретической части",player_name[playerid]);
					SendBotMessage(playerid,string);
				}
			case 1: {
					if(lic[playerid][1]) {
						format(string,sizeof(string),"%s у вас уже имеется данная лицензия",player_name[playerid]);
						SendBotMessage(playerid,string);
						return 1;
					}
					if(PI[playerid][pCash] < 15000) {
						format(string,sizeof(string),"%s у вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
						SendBotMessage(playerid,string);
						return 1;
					}
					GiveMoney(playerid,-15000,"покупка лицензии");
					FI[fINSTRUCTORS][fBank] += 7500;
					format(string,sizeof(string),"%s займите свободный стол для прохождения практической части",player_name[playerid]);
					SendBotMessage(playerid,string);
				}
			case 2: {
					if(lic[playerid][2]) {
						format(string,sizeof(string),"%s у вас уже имеется данная лицензия",player_name[playerid]);
						SendBotMessage(playerid,string);
						return 1;
					}
					if(PI[playerid][pCash] < 10000) {
						format(string,sizeof(string),"%s у вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
						SendBotMessage(playerid,string);
						return 1;
					}
					GiveMoney(playerid,-10000,"покупка лицензии");
					FI[fINSTRUCTORS][fBank] += 5000;
					format(string,sizeof(string),"%s займите свободный стол для прохождения практической части",player_name[playerid]);
					SendBotMessage(playerid,string);
				}
			}
			if(listitem != 4)
			{
				if(listitem != 3) TI[playerid][tAutoSchool] = listitem + 1;
				UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
			}
		}
	case D_BILL_ADMIN: {
			if(!response) return pc_cmd_apanel(playerid,"");
			SetPVarInt(playerid,"SelectBildID",listitem);
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			SetPVarFloat(playerid, "bild_x", pos[0]);
			SetPVarFloat(playerid, "bild_y", pos[1]);
			SetPVarFloat(playerid, "bild_z", pos[2]);
			BildIntro(playerid, listitem, -30);
			D(playerid,D_BILL_AUNRENT,DSM,""P"Аренда билборда","\n\n"W"Вы уверены, что хотите разорвать аренду у данного билборда?\n\n","Да","Нет");
		}
	case D_BILL_MAIN: {
			if(!response) return 1;
			//new id = TI[playerid][tSelectedBusinessID];
			//if(id < 0) return 1;
			new price = 30000;
			SetPVarInt(playerid,"SelectBildID",listitem);

			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			SetPVarFloat(playerid, "bild_x", pos[0]);
			SetPVarFloat(playerid, "bild_y", pos[1]);
			SetPVarFloat(playerid, "bild_z", pos[2]);   
			
			if(!BildInfo[listitem][bOwned])
			{
				new z, string[256];
				for(new x; x<MAX_BILLBORDS; x++) {
					if(strfind(player_name[playerid],BildInfo[x][bOwner],false) == 0) z++;
				}
				if(z) return SendClientMessage(playerid, COLOR_GREY, "Вы уже арендуете билборд");
				BildIntro(playerid, listitem, -30);
				format(string, sizeof(string),"\n\n"W"Цена аренды рекламного щита: "ORANGE"$%d\n"W"Вы уверены, что хотите арендовать данный рекламный щит на "P"5"W" дней?\n",price);
				D(playerid,D_BILL_RENT,DSM,""P"Аренда билборда",string,"Да","Нет");
			}
			else if(GetString(BildInfo[listitem][bOwner],player_name[playerid])) ShowPlayerEditMenu(playerid);
		}
	case D_BILL_RENT: {
			if(!response) return BildExit(playerid);
			//new id = TI[playerid][tSelectedBusinessID];
			//if(id < 0) return 1;
			new price = 30000;
			new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
			if(PI[playerid][pCash] < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств"), BildExit(playerid);
			GiveMoney(playerid,-price,"аренда билборда");
			//bizz_pay(id,price);
			format(BildInfo[p_var][bOwner],MAX_PLAYER_NAME,player_name[playerid]);
			SendOk(playerid, "Вы успешно арендовали билборд на 5 дней");
			BildInfo[p_var][bOwned] = 1;
			BildInfo[p_var][bDay] = (unix + 86400 * 5);
			ShowPlayerEditMenu(playerid);
			mysql_format(connects, query, sizeof(query),"UPDATE `billboards` SET `bDay` = '%d',`bOwned` = 1, `bOwner` = '%s' WHERE `id` = '%i'",BildInfo[p_var][bDay],player_name[playerid],p_var);
			mysql_tquery(connects,query,"","");
		}
	case D_BILL_SETTING: {
			if(!response) return BildExit(playerid);
			switch(listitem) {
			case 0: D(playerid,D_BILL_TEXT,DSI,""P"Изменение текста","\n\n"W"Введите текст объявления в поле ниже:\n\n","Изменить","Назад");
			case 1: {
					new str[24],string[1524];
					for(new i, z = sizeof(Colors_LOW); i<z; i++) format(str,24,"{%s}Фон\n",Colors_LOW[i]), strcat(string, str);
					D(playerid,D_BILL_FON,DSL,""P"Цвет фона",string,"Изменить","Назад");
				}
			case 2: D(playerid,D_BILL_FONT,DSL,""P"Шрифт",""P"1."W" Arial\n"P"2."W" Calibri\n"P"3."W" Tahoma\n"P"4."W" Verdana","Выбрать","Назад");
			case 3: D(playerid,D_BILL_SIZE,DSI,""P"Размер текста","\n\n"W"Укажите размер текста (от 1 до 255):\n\n","Изменить","Назад");
			case 4: D(playerid,D_BILL_TEXT_2,DSL,""P"Выравнивания текста",""P"1."W" По левому краю\n"P"2."W" По центру\n"P"3."W" По правому краю","Выбрать","Назад");
			case 5: D(playerid,D_BILL_UNRENT,DSM,""P"Расторжение договора","\n\n"W"Вы действительно хотите разорвать договор аренды с этим билбордом?\n\n","Да","Нет");
			}
		}
	case D_BILL_TEXT: {
			if(!response) return ShowPlayerEditMenu(playerid);
			new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
			for(new i; i<5; i++) {
				new pos = strfind(inputtext,"/",false);
				if(pos != -1) strdel(inputtext, pos, pos+1), strins(inputtext, "\n", pos, 2);
			}
			format(BildInfo[p_var][bText],144,inputtext);
			SendOk(playerid,"Вы успешно изменили текст билборда");
			ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);
			mysql_format(connects, query, sizeof(query),"UPDATE `billboards` SET `bText` = '%s' WHERE `id` = %i",inputtext,p_var);
			mysql_tquery(connects,query,"","");
		}
	case D_BILL_FON: {
			if(!response) return ShowPlayerEditMenu(playerid);
			new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
			BildInfo[p_var][bBackColor] = listitem;
			SendOk(playerid,"Вы успешно изменили фон билборда");
			ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);

			mysql_format(connects, query, sizeof(query),"UPDATE `billboards` SET `bBackColor` = %i WHERE `id` = %i",listitem,p_var);
			mysql_tquery(connects,query,"","");
		}
	case D_BILL_FONT: {
			if(!response) return ShowPlayerEditMenu(playerid);
			new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
			BildInfo[p_var][bFontFace] = listitem;
			SendOk(playerid,"Вы успешно изменили шрифт билборда");
			ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);

			mysql_format(connects, query, sizeof(query),"UPDATE `billboards` SET `bFontFace` = %i WHERE `id` = %i",listitem,p_var);
			mysql_tquery(connects,query,"","");
		}
	case D_BILL_SIZE: {
			if(!response) return ShowPlayerEditMenu(playerid);
			new size = strval(inputtext), query[256], p_var = GetPVarInt(playerid,"SelectBildID");
			if(size < 0 || size > 255) return D(playerid,D_BILL_SIZE,DSI,""P"Размер текста","\n\n"W"Укажите размер текста (от 1 до 255):\n\n","Изменить","Назад");
			BildInfo[p_var][bFontSize] = size;
			SendOk(playerid,"Вы успешно изменили размер текста билборда");
			ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);

			mysql_format(connects, query, sizeof(query),"UPDATE `billboards` SET `bFontSize` = %i WHERE `id` = %i",size,p_var);
			mysql_tquery(connects,query,"","");
		}
	case D_BILL_TEXT_2: {
			if(!response) return ShowPlayerEditMenu(playerid);
			new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
			BildInfo[p_var][bAligment] = listitem;
			SendOk(playerid,"Вы успешно изменили выравнивание текста билборда");
			ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);

			mysql_format(connects, query, sizeof(query),"UPDATE `billboards` SET `bAligment` = %i WHERE `id` = %i",listitem,p_var);
			mysql_tquery(connects,query,"","");
		}
	case D_BILL_UNRENT: {
			if(!response) return ShowPlayerEditMenu(playerid);
			new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
			BildInfo[p_var][bFontSize] = 0;
			BildInfo[p_var][bBackColor] = 0;
			BildInfo[p_var][bFontFace] = 0;
			BildInfo[p_var][bOwned] = 0;
			BildInfo[p_var][bDay] = 0;
			format(BildInfo[p_var][bOwner],1,"-");
			SendOk(playerid,"Договор с одним из рекламных билбордов успешно расторгнут");
			UpdateBuildText(p_var);
			BildExit(playerid);

			mysql_format(connects, query, sizeof(query),"UPDATE `billboards` SET `bDay` = 0, `bOwned` = 0, `bOwner` = '-', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",p_var);
			mysql_tquery(connects,query,"","");
		}
	case D_BILL_AUNRENT: {
			if(!response) return SetCameraBehindPlayer(playerid),TogglePlayerControllable(playerid, 1),pc_cmd_apanel(playerid,"");
			new query[256], ID = GetPVarInt(playerid,"SelectBildID");
			BildInfo[ID][bFontSize] = 0;
			BildInfo[ID][bBackColor] = 0;
			BildInfo[ID][bFontFace] = 0;
			BildInfo[ID][bOwned] = 0;
			BildInfo[ID][bDay] = 0;
			format(BildInfo[ID][bOwner],1,"-");
			SendOk(playerid,"Договор с одним из рекламных билбордов успешно расторгнут");
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
			UpdateBuildText(ID);
			mysql_format(connects, query, sizeof(query),"UPDATE `billboards` SET `bDay` = 0, `bOwned` = 0, `bOwner` = '-', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",ID);
			mysql_tquery(connects,query,"","");
		}
	case D_ADMIN_TIME: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid, D_ADMIN_TIME, DSI, ""P"Статистика администратора", "\n\n"W"Для просмотра статистики администратора\nукажите его ник:\n\n", "Ввод", "Отмена");
			new query[200];
			mysql_format(connects, query, sizeof(query),"SELECT * FROM admin WHERE Name = '%s' LIMIT 1", inputtext);
			mysql_tquery(connects, query, "OnCheckStatsAdmin", "is", playerid, inputtext);
		}
	case D_TUNE_UPDATE: {
			if(!response) return 1;
			new str[64],value,model,vehicleid = GetPlayerVehicleID(playerid);
			format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
			model = GetGVarInt(str,CustomType[playerid]);
			format(str,64,"TUN[%d][Value]",CustomListNum[playerid]);
			value = GetGVarInt(str,CustomType[playerid]);
			if(!IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) return SendClientMessage(playerid, COLOR_GREY, "Невозможно установить данную деталь");

			if(VehicleInfo[vehicleid][vFamily])
			{
				if(family_checktun(PI[playerid][pFamily],GetFamilyCar(playerid),model)) return SendClientMessage(playerid, COLOR_GREY, "Данная деталь уже установлена");
			}
			else
			{
				if(GetVehicleModel(vehicleid) == 508) {
					if(trailer_checktun(playerVehicleID[playerid],model)) return SendClientMessage(playerid, COLOR_GREY, "Данная деталь уже установлена");
				}
				else if(CheckTuning(playerid,GetNearestCar(playerid), model)) return SendClientMessage(playerid, COLOR_GREY, "Данная деталь уже установлена");
			}
			if(PI[playerid][pCash] < value) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств");
			new string[128];
			format(string,sizeof(string),"Вы установили деталь за "ORANGE"$%d",value);
			SendOk(playerid,string);
			
			if(gBusiness[59][bizzProduct]-10 > 0) {
				gBusiness[59][bizzProduct] -= 10; 
				bizz_pay(59,floatround(value * 0.085)); // спорт
			}
			
			ACC_AddVehicleComponent(GetPlayerVehicleID(playerid),model);
			
			GiveMoney(playerid,-value,"Тюннинг");
			PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			
			if(VehicleInfo[vehicleid][vFamily])
			{
				new fam = PI[playerid][pFamily]-1;
				new idx = GetFamilyCar(playerid);
				
				CarFamily[fam][idx][famVehcom_1] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SPOILER);
				CarFamily[fam][idx][famVehcom_2] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HOOD);
				CarFamily[fam][idx][famVehcom_3] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_ROOF);
				CarFamily[fam][idx][famVehcom_4] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SIDESKIRT);
				CarFamily[fam][idx][famVehcom_5] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_LAMPS);
				CarFamily[fam][idx][famVehcom_6] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_NITRO);
				CarFamily[fam][idx][famVehcom_7] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_EXHAUST);
				CarFamily[fam][idx][famVehcom_8] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_WHEELS);
				CarFamily[fam][idx][famVehcom_9] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_STEREO);
				CarFamily[fam][idx][famVehcom_10] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HYDRAULICS);
				CarFamily[fam][idx][famVehcom_11] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_FRONT_BUMPER);
				CarFamily[fam][idx][famVehcom_12] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_REAR_BUMPER);
				CarFamily[fam][idx][famVehcom_13] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_RIGHT);
				CarFamily[fam][idx][famVehcom_14] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_LEFT);
				
				SaveFamilyCar(fam, idx);
				return 0;
			}
			
			if(PlayerTrailer[playerVehicleID[playerid]][carVehicle] == vehicleid)
			{
				SavePlayerVehicle(playerVehicleID[playerid]);
				return 0;
			}
			
			new idx = GetNearestCar(playerid);
			
			CarsInfo[playerid][carVehcom_1][idx] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SPOILER);
			CarsInfo[playerid][carVehcom_2][idx] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HOOD);
			CarsInfo[playerid][carVehcom_3][idx] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_ROOF);
			CarsInfo[playerid][carVehcom_4][idx] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SIDESKIRT);
			CarsInfo[playerid][carVehcom_5][idx] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_LAMPS);
			CarsInfo[playerid][carVehcom_6][idx] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_NITRO);
			CarsInfo[playerid][carVehcom_7][idx] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_EXHAUST);
			CarsInfo[playerid][carVehcom_8][idx] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_WHEELS);
			CarsInfo[playerid][carVehcom_9][idx] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_STEREO);
			CarsInfo[playerid][carVehcom_10][idx] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HYDRAULICS);
			CarsInfo[playerid][carVehcom_11][idx] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_FRONT_BUMPER);
			CarsInfo[playerid][carVehcom_12][idx] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_REAR_BUMPER);
			CarsInfo[playerid][carVehcom_13][idx] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_RIGHT);
			CarsInfo[playerid][carVehcom_14][idx] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_LEFT);
			
			save_tune(playerid, idx);
		}
	case D_AMEMBERS: {
			if(!response) return 1;
			new ids = 0;
			new string[3000],str[128];
			strcat(str,"ID\tРанг\tТелефон\tВыговоры\tИмя"W"\n\n");
			strcat(string,str);
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[i][pMember] != listitem+1) continue;
				if(PI[i][pRank] < 1 || PI[i][pMember] < 1) continue;
				format(str, sizeof(str), "%d\t%d\t%d\t\t%d/3\t\t%s %s %s\n",i,PI[i][pRank],PI[i][pPhone],PI[i][pfWarn],player_name[i],(start_work[i]) ? ("[На работе]") : ("[Не на работе]"),(TI[i][tAFK] > 3) ? (""P"[AFK]"W""):(""));
				strcat(string,str);
				ids++;
			}
			D(playerid, DIALOG_NONE, DSM, ""P"Члены организации онлайн", string, "Закрыть", "");
			string = "";
			format(string,128,"Всего игроков в организации: "ORANGE"%d",ids);
			SendOk(playerid,string);
		}
	case D_FAKEPASS: {
			if(!response) return 1;
			if(PI[playerid][pMember] != fFBI || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не агент FBI");
			if(!TI[playerid][tMasked]) return SendClientMessage(playerid, COLOR_GREY, "На Вас нет маскировочной формы");
			new id = GetPVarInt(playerid,"fpass2");
			DeletePVar(playerid,"fpass2");
			if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, not_id);
			if(GetPlayerDistanceToPlayer(playerid, id) > 5.0  || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
			if(active_accept(id)) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
			TI[playerid][tFakePass] = listitem;
			new string[144];
			
			format(string, sizeof(string), ""P"%s "W"хочет показать Вам паспорт", player_name[playerid]);
			SendUse(id, string);
			SendClientMessage(id,COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

			format(string, sizeof(string), "Вы предложили "P"%s "W"показать Ваш паспорт", player_name[id]);
			SendUse(playerid, string);
			SetPVarInt(id,"fpass", playerid + 1);
		}
	case D_BUYACS: {
			if(!response) {
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
				DeletePVar(playerid,"buy_accses");
				TI[playerid][tTPpick] = true;
				SetPlayerPosAC(playerid, GetPVarFloat(playerid, "posx"), GetPVarFloat(playerid, "posy"), GetPVarFloat(playerid, "posz"),80,1);
				SetPlayerFacingAngle(playerid, GetPVarInt(playerid, "posa"));
				TogglePlayerControllable(playerid, 1);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid, "posx");
				DeletePVar(playerid, "posy");
				DeletePVar(playerid, "posz");
				DeletePVar(playerid, "posa");
				return true;
			}
			new price;
			switch(listitem) {
			case 0: {
					type_acces[playerid] = 1;
					SetPVarInt(playerid, "slot_acs", 1);
					AtachPlayerAcces(playerid, acces_id_glass[0][0], GetPlayerSkin(playerid));
					InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_glass[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_glass[0][0]);
					SetPVarInt(playerid,"id_invent",acces_id_glass[0][2]);
				}
			case 1: {
					type_acces[playerid] = 2;
					SetPVarInt(playerid, "slot_acs", 0);
					AtachPlayerAcces(playerid, acces_id_hat[0][0],GetPlayerSkin(playerid));
					InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_hat[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_hat[0][0]);
					SetPVarInt(playerid,"id_invent",acces_id_hat[0][2]);
				}
			case 2: {
					type_acces[playerid] = 3;
					SetPVarInt(playerid, "slot_acs", 0);
					AtachPlayerAcces(playerid, acces_id_bonnet[0][0],GetPlayerSkin(playerid));
					InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_bonnet[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_bonnet[0][0]);
					SetPVarInt(playerid,"id_invent",acces_id_bonnet[0][2]);
				}
			case 3: {
					type_acces[playerid] = 4;
					SetPVarInt(playerid, "slot_acs", 0);
					AtachPlayerAcces(playerid, acces_id_cap[0][0],GetPlayerSkin(playerid));
					InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_cap[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_cap[0][0]);
					SetPVarInt(playerid,"id_invent",acces_id_cap[0][2]);
				}
			case 4: {
					type_acces[playerid] = 5;
					SetPVarInt(playerid, "slot_acs", 0);
					AtachPlayerAcces(playerid, acces_id_beret[0][0],GetPlayerSkin(playerid));
					InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_beret[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_beret[0][0]);
					SetPVarInt(playerid,"id_invent",acces_id_beret[0][2]);
				}
			case 5: {
					type_acces[playerid] = 6;
					SetPVarInt(playerid, "slot_acs", 3);
					AtachPlayerAcces(playerid, acces_id_bandanas[0][0],GetPlayerSkin(playerid));
					InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_bandanas[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_bandanas[0][0]);
					SetPVarInt(playerid,"id_invent",acces_id_bandanas[0][2]);
				}
			case 6: {
					type_acces[playerid] = 7;
					SetPVarInt(playerid, "slot_acs", 0);
					AtachPlayerAcces(playerid, acces_id_panam[0][0],GetPlayerSkin(playerid));
					InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_panam[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_panam[0][0]);
					SetPVarInt(playerid,"id_invent",acces_id_panam[0][2]);
				}
			case 7: {
					type_acces[playerid] = 8;
					SetPVarInt(playerid, "slot_acs", 0);
					AtachPlayerAcces(playerid, acces_id_sporthat[0][0],GetPlayerSkin(playerid));
					InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_sporthat[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_sporthat[0][0]);
					SetPVarInt(playerid,"id_invent",acces_id_sporthat[0][2]);
				}
			case 8: {
					type_acces[playerid] = 9;
					SetPVarInt(playerid, "slot_acs", 0);
					AtachPlayerAcces(playerid, acces_id_kask[0][0],GetPlayerSkin(playerid));
					InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_kask[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_kask[0][0]);
					SetPVarInt(playerid,"id_invent",acces_id_kask[0][2]);
				}
			case 9: {
					type_acces[playerid] = 10;
					SetPVarInt(playerid, "slot_acs", 3);
					AtachPlayerAcces(playerid, acces_id_mask[0][0],GetPlayerSkin(playerid));
					InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_mask[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_mask[0][0]);
					SetPVarInt(playerid,"id_invent",acces_id_mask[0][2]);
				}
			case 10: {
					type_acces[playerid] = 11;
					SetPVarInt(playerid, "slot_acs", 6);
					AtachPlayerAcces(playerid, acces_id_headphones[0][0],GetPlayerSkin(playerid));
					InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_headphones[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_headphones[0][0]);
					SetPVarInt(playerid,"id_invent",acces_id_headphones[0][2]);
				}
			case 11: {
					type_acces[playerid] = 12;
					SetPVarInt(playerid, "slot_acs", 7);
					AtachPlayerAcces(playerid, acces_id_watch[0][0],GetPlayerSkin(playerid));
					InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 211.655944, -41.365447, 1002.099304, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 216.590118, -41.735664, 1001.380371, 1300);
					price = acces_id_watch[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_watch[0][0]);
					SetPVarInt(playerid,"id_invent",acces_id_watch[0][2]);
				}
			}
			SetPVarInt(playerid, "price_acs", price);
			for(new i=0; i<9; i++) {
				TextDrawShowForPlayer(playerid,buy_skins[i]);
			}
			SetPVarInt(playerid,"buy_accses",1);
			PlayerTextDrawShow(playerid,buy_player_skins[playerid]);
			new string[12];
			format(string,sizeof(string),"$%d",price);
			PlayerTextDrawSetString(playerid,buy_player_skins[playerid],string);
			SelectTextDraw(playerid, 0x0080FFFF);
		}
	case D_GAME_DM_2: {
			if(!response) return 1;
			if(strval(inputtext) < 1000 ||strval(inputtext) > 10000) {
				new string[356];
				format(string, sizeof(string), "\n\n"W"Для регистрации, необходимо сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "P"%d "W"игроков\nОбщий взнос составляет "ORANGE"$%d\n\n"NO"*"G" Размер взноса от $1000 до $10000", players_in_game,money_in_game);
				D(playerid,D_GAME_DM_2,DSI,""P"Регистрация",string,"Внести","Закрыть");
				return 1;
			}
			if(strval(inputtext) > PI[playerid][pCash]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств");
			GiveMoney(playerid,-strval(inputtext),"взнос на сумасшедшие войны");
			TI[playerid][tCashDM] = strval(inputtext);
			SendOk(playerid, "Вы успешно зарегистрировались");
			players_in_game++;
			money_in_game += strval(inputtext);
			player_to_game[playerid] = 1;
			new query[148];
			mysql_format(connects, query, sizeof(query),"INSERT INTO `dm_arena` (Name, kills_dm) VALUES ('%s', '0')", player_name[playerid]);
			mysql_tquery(connects, query);
		}
	case D_GAME_RACE_2: {
			if(!response) return 1;
			if(strval(inputtext) < 1000 ||strval(inputtext) > 10000) {
				new string[356];
				format(string, sizeof(string), "\n\n"W""W"Для регистрации, необходимо сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "P"%d "W"игроков\n\n"W"Общий взнос составляет "ORANGE"$%d\n\n"NO"*"G" Размер взноса от $1000 до $10000", players_in_race_lv,money_in_race_lv);
				D(playerid,D_GAME_RACE_2,DSI,""P"Регистрация",string,"Внести","Закрыть");
				return 1;
			}
			if(strval(inputtext) > PI[playerid][pCash]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств");
			GiveMoney(playerid,-strval(inputtext),"взнос на безумные гонки");
			TI[playerid][tCashRace] = strval(inputtext);
			SendOk(playerid, "Вы успешно зарегистрировались");
			players_in_race_lv ++;
			money_in_race_lv += strval(inputtext);
			player_to_race_lv[playerid] = 1;
			player_to_race_lv_id[playerid] = players_in_race_lv;
		}
	case D_REPAIR_LIST: {
			if(!response) return true;
			if(!GetInvent(playerid, 121)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет инструментов");
			new veh = GetPVarInt(playerid,"MechOsmotrVEHID");
			new Float:vhealth;
			GetVehicleHealth(veh, vhealth);
			new panels_job,doors_job,lights_job,tires_job;
			GetVehicleDamageStatus(veh,panels_job,doors_job,lights_job,tires_job);
			switch(listitem) {
			case 0: {
					if(!doors_job) return SendClientMessage(playerid, COLOR_GREY, "Починка дверей не требуется");
					D(playerid,D_REPAIR,DSM,""P"Починка дверей","\n\n"W"Вы уверены, что хотите починить двери?\n\n","Да","Нет");
				}
			case 1: {
					if(!panels_job) return SendClientMessage(playerid, COLOR_GREY, "Починка корпуса не требуется!");
					D(playerid,D_REPAIR,DSM,""P"Починка корпуса","\n\n"W"Вы уверены, что хотите починить корпус?\n\n","Да","Нет");
				}
			case 2: {
					if(!lights_job) return SendClientMessage(playerid, COLOR_GREY, "Починка фар не требуется");
					new Float:pos[6];
					GetCoordBonnetVehicle(veh, pos[0], pos[1], pos[2]);
					GetCoordBootVehicle(veh, pos[3], pos[4], pos[5]);
					if(!IsPlayerInRangeOfPoint(playerid,2.5,pos[0], pos[1], pos[2]) && !IsPlayerInRangeOfPoint(playerid,3.5,pos[3], pos[4], pos[5])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от фар Т/С");
					D(playerid,D_REPAIR,DSM,""P"Починка фар","\n\n"W"Вы уверены, что хотите починить фары?\n\n","Да","Нет");
				}
			case 3: {
					if(!tires_job) return SendClientMessage(playerid, COLOR_GREY, "Починка колёс не требуется");
					D(playerid,D_REPAIR,DSM,""P"Починка колес","\n\n"W"Вы уверены, что хотите заменить колеса?\n\n","Да","Нет"),SetPVarInt(playerid,"JOBOSMOTR",4);
				}
			case 4: {
					if(vhealth >= 1000) return SendClientMessage(playerid, COLOR_GREY, "Починка двигателя не требуется");
					new Float:pos[6];
					GetCoordBonnetVehicle(veh, pos[0], pos[1], pos[2]);
					GetCoordBootVehicle(veh, pos[3], pos[4], pos[5]);
					if(!IsPlayerInRangeOfPoint(playerid,2.5,pos[0], pos[1], pos[2]) && !IsPlayerInRangeOfPoint(playerid,3.5,pos[3], pos[4], pos[5])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от двигателя Т/С");
					D(playerid,D_REPAIR,DSM,""P"Починка двигателя","\n\n"W"Вы уверены, что хотите починить двигатель?\n\n","Да","Нет"),SetPVarInt(playerid,"JOBOSMOTR",5);
				}
			case 5:
			{
			    new Float:pos[6];
				GetCoordBonnetVehicle(veh, pos[0], pos[1], pos[2]);
				GetCoordBootVehicle(veh, pos[3], pos[4], pos[5]);
                if(!IsPlayerInRangeOfPoint(playerid,2.5,pos[0], pos[1], pos[2]) && !IsPlayerInRangeOfPoint(playerid,3.5,pos[3], pos[4], pos[5])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от двигателя Т/С");
                D(playerid,D_REPAIR,DSM,""P"Замена аккумулятора","\n\n"W"Вы уверены, что хотите заменить аккумулятор?\n\n","Да","Нет"),SetPVarInt(playerid,"JOBOSMOTR",6);
			}
			case 6: pc_cmd_remp(playerid);
			}
			SetPVarInt(playerid,"JOBOSMOTR",listitem+1);
			return 1;
		}
	case D_REPAIR: {
			if(!response) return true;
			new vehydid = GetPVarInt(playerid,"MechOsmotrVEHID");
			switch(GetPVarInt(playerid,"JOBOSMOTR"))
			{
				case 1: SetPlayerChatBubble(playerid, "осматривает двери транспорта", COLOR_PURPLE, 15, 5000);
				case 2: SetPlayerChatBubble(playerid, "осматривает копус транспорта", COLOR_PURPLE, 15, 5000);
				case 3: SetPlayerChatBubble(playerid, "осматривает фары транспорта", COLOR_PURPLE, 15, 5000);
				case 4: SetPlayerChatBubble(playerid, "осматривает колёса транспорта", COLOR_PURPLE, 15, 5000);
				case 5:
				{
						SetPlayerChatBubble(playerid, "осматривает двигатель транспорта", COLOR_PURPLE, 15, 5000);
						GetVehicleParamsEx(vehydid,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(vehydid,engine,lights,alarm,doors,true,boot,objective);
				}
				case 6:
				{
					SetPlayerChatBubble(playerid, "осматривает аккумулятор транспорта", COLOR_PURPLE, 15, 5000);
					GetVehicleParamsEx(vehydid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vehydid,engine,lights,alarm,doors,true,boot,objective);
				}
			}
			TI[playerid][tProcess][0] = 0;
			TI[playerid][tProcess][1] = 10;
			JobTempProcess[playerid] = 8;
			RandomYareNforJOBS(playerid);
			PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
			for(new YN = 0;YN < 3;YN++) {
				TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
			}
			return true;
		}
	case D_OBJ: {
			if(!response) return 1;
			switch(listitem) {
			case 0: D(playerid,D_OBJ_2,DSL,""P"Ограждения",""P"1."W" Преграда №1\n"P"2."W" Преграда №2\n"P"3."W" Отбойник\n"P"4."W" Конус\n"P"5."W" Табличка\n"P"6."W" Лежачий полицеский\n"P"7."W" Железный забор №1\n"P"8."W" Железный забор №2","Выбрать","Отмена");
			case 1: D(playerid,D_OBJ_3,DSL,""P"Ограждения",""P"1."W" Ограничение скорости\n"P"2."W" Запрет движения прямо\n"P"3."W" Закрыто\n"P"4."W" Стоп\n"P"5."W" Уступить дорогу\n"P"6."W" Ремонт дороги\n"P"7."W" Направление движения прямо\n"P"8."W" Поворот налево\n"P"9."W" Поворот направо","Выбрать","Отмена");
			case 2: D(playerid,D_OBJ_4,DSL,""P"Ограждения",""P"1."W" Радар","Выбрать","Отмена");
			case 3: {
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid, x, y, z);
					for(new i;i<MAX_OGRAD;i++) {
						if(object[i]!=-1) {
							GetDynamicObjectPos(object[i],x,y,z);
							if(IsPlayerInRangeOfPoint(playerid,2,x,y,z)) {
								if(objectrot[i] != -1) {
									DestroyDynamicObject(objectrot[i]);
									objectrot[i]=-1;
								}
								DestroyDynamicObject(object[i]);
								object[i]=-1;
								SendOk(playerid,"Ограждение успешно убрано");
								return 1;
							}
						}
					}
				}
			}
		}
	case D_OBJ_2: {
			if(!response) return pc_cmd_fences(playerid,"");
			new idobject;
			for(idobject = 0;idobject<MAX_OGRAD;idobject++) {
				if(object[idobject]==-1) break;
			}
			if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return SendClientMessage(playerid, COLOR_GREY, "Запрещено использовать в здании");
			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			switch(listitem) {
			case 0: object[idobject] = CreateDynamicObject(1423, x, y, z-0.25, 0, 0, angle);
			case 1: object[idobject] = CreateDynamicObject(1282, x,y,z-0.3,0, 0, angle-90);
			case 2: object[idobject] = CreateDynamicObject(1237, x,y,z-1.0,0, 0, angle);
			case 3: object[idobject] = CreateDynamicObject(1238, x,y,z-0.65,0, 0, angle);
			case 4: D(playerid,D_OBJ_5,DSI,""P"Ограждения","\n\n"W"Введите текст, который будет отображаться на ограждении\n\n","Ввод","Отмена");
			case 5: object[idobject] = CreateDynamicObject(19425, x,y,z-0.9,0, 0, angle);
			case 6: object[idobject] = CreateDynamicObject(983, x,y,z-0.3,0, 0, angle-90);
			case 7: object[idobject] = CreateDynamicObject(970, x,y,z-0.5,0, 0, angle);
			}
			if(listitem != 4) ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0),Streamer_Update(playerid);
		}
	case D_OBJ_3: {
			if(!response) return pc_cmd_fences(playerid,"");
			new idobject;
			for(idobject = 0;idobject<MAX_OGRAD;idobject++) {
				if(object[idobject]==-1) break;
			}
			if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return SendClientMessage(playerid, COLOR_GREY, "Запрещено использовать в здании");
			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			switch(listitem) {
			case 0: object[idobject] = CreateDynamicObject(11699, x,y,z-1.1,0, 0, angle);
			case 1: object[idobject] = CreateDynamicObject(19950, x,y,z-1.1,0, 0, angle);
			case 2: object[idobject] = CreateDynamicObject(19967, x,y,z-1.1,0, 0, angle);
			case 3: object[idobject] = CreateDynamicObject(19966, x,y,z-1.1,0, 0, angle);
			case 4: object[idobject] = CreateDynamicObject(19976 , x,y,z-1.1,0, 0, angle);
			case 5: object[idobject] = CreateDynamicObject(19974, x,y,z-1.1,0, 0, angle);
			case 6: object[idobject] = CreateDynamicObject(19957, x,y,z-1.1,0, 0, angle);
			case 7: object[idobject] = CreateDynamicObject(19955, x,y,z-1.1,0, 0, angle);
			case 8: object[idobject] = CreateDynamicObject(19956, x,y,z-1.1,0, 0, angle);
			}
			Streamer_Update(playerid);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
		}
	case D_OBJ_4: {
			if(!response) return pc_cmd_fences(playerid,"");
			new idobject;
			for(idobject = 0;idobject<MAX_OGRAD;idobject++) {
				if(object[idobject]==-1) break;
			}
			if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return SendClientMessage(playerid, COLOR_GREY, "Запрещено использовать в здании");
			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			switch(listitem) {
			case 0: object[idobject] = CreateDynamicObject(18880, x,y,z-1.3,0, 0, angle);
			}
			Streamer_Update(playerid);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
		}
	case D_OBJ_5: {
			if(!response) return pc_cmd_fences(playerid,"");
			if(strlen(inputtext) < 5 || strlen(inputtext) > 40) {
				D(playerid,D_OBJ_5,DSI,""P"Ограждения","\n\n"W"Введите текст, который будет отображаться на ограждении\n\n"NO"*"G" От 5 до 40 символов","Ввод","Отмена");
				return 1;
			}
			new idobject;
			for(idobject = 0;idobject<MAX_OGRAD;idobject++) {
				if(object[idobject]==-1) break;
			}
			if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return SendClientMessage(playerid, COLOR_GREY, "Запрещено использовать в здании");
			new Float:x, Float:y, Float:z, Float:angle,Float:rx, Float:ry, Float:rz,Float:ox, Float:oy, Float:oz;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			object[idobject] = CreateDynamicObject(19980, x,y,z-1.0,0, 0, angle);
			SetDynamicObjectMaterial(object[idobject], 2, 2823, "gb_kitchtake", "deep_red64", 0);
			GetDynamicObjectPos(object[idobject], ox, oy, oz);
			GetDynamicObjectRot(object[idobject], rx, ry, rz);
			objectrot[idobject] = CreateDynamicObject(19477,ox - 0.05 * floatsin(-rz, degrees), oy - 0.05 * floatcos(-rz, degrees), oz + 2.6, 0.000, 0.000, rz - 90.0);
			SetDynamicObjectMaterialText(objectrot[idobject], 0, inputtext,  120, "Ariel", 15, 1, COLOR_WHITE, 0 , 1);
			Streamer_Update(playerid);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
		}
	case D_GANG_PAY: {
			if(!response) return DeletePVar(playerid, "prem_gang_money");
			new money = GetPVarInt(playerid, "prem_gang_money");
			DeletePVar(playerid, "prem_gang_money");
			
			new count = 0 ;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[i][pMember] != PI[playerid][pMember] || playerid == i) continue;
				count ++;
			}
			if(PI[playerid][pCash] < count*money) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств");
			GiveMoney(playerid, -count*money,"выдача премии банде");
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[i][pMember] != PI[playerid][pMember] || playerid == i) continue;
				GiveMoney(i, money,"получение премии в банде");
				
				new string[128];
				format(string, sizeof(string), "%s выдал Вам премию в размере "ORANGE"$%d", player_name[playerid], money);
				SendOk(i,string);
			}
			SendOk(playerid, "Премиальные успешно выданы членам Вашей банды");
		}
	case D_AUTONEWS: {
			if(!response) return 1;
			switch(listitem)
			{
			case 0: {
					new query[128], string[200], name[24], advert;
					mysql_format(connects, query, sizeof(query), "SELECT `Name`, `Advert` FROM `accounts` WHERE `pMember` = %d ORDER BY `Advert` DESC LIMIT 10", PI[playerid][pMember]);
					new Cache:result = mysql_query(connects, query);
					new rows;
					cache_get_row_count(rows);
					if(rows)
					{
						format(string, sizeof(string),""W"Номер\t"W"Имя\t"W"Обработано объявлений\n");
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
							cache_get_value_name_int(i, "Advert",advert);
							if(advert > 0) format(string, sizeof(string),"%s%d\t%s\t%d\n",string,i+1, name, advert);
						}
						cache_delete(result);
						D(playerid, DIALOG_NONE, DSTH, ""P"Лучшие работники",string, "Закрыть", "");
					}
					if(!rows) return D(playerid, DIALOG_NONE, DSM, ""P"ТОП-10 сотрудников",""W"Список сотрудников пуст", "Закрыть", "");
				}
			case 1:
				{
					if(!PI[playerid][pPhone]) return SendBotMessage(playerid,"У Вас нет мобильного телефона");
					new bool:online = false;
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(IsANews(i) && start_work[playerid]) continue;
						online = true;
					}
					if(!online) return SendClientMessage(playerid, COLOR_GREY, "На сервере присутвутют редакторы. Отправьте объявление: /ad [текст]");
					D(playerid, D_AUTONEWS_1, DSL, ""P"Объявление",""P"1."W" Купить\n"P"2."W" Продать\n"P"3."W" Обменять\n"P"4."W" Услуги", "Выбрать", "Отмена");
				}
			}
		}
	case D_AUTONEWS_1: {
			if(!response) return 1;
			switch(listitem) {
			case 0: D(playerid, D_AUTONEWS_BUY, DSL, ""P"Объявление | Купить", ""P"1."W" Дом\n"P"2."W" Бизнес\n"P"3."W" Аэропорт\n"P"4."W" Автомобиль\n"P"5."W" Мотоцикл\n"P"6."W" Сим-Карту", "Выбрать", "Отмена");
			case 1: D(playerid, D_AUTONEWS_SELL, DSL, ""P"Объявление | Продать", ""P"1."W" Дом\n"P"2."W" Бизнес\n"P"3."W" Аэропорт\n"P"4."W" А/М\n"P"5."W" М/Ц\n"P"6."W" Сим-Карту", "Выбрать", "Отмена");
			case 2: D(playerid, D_AUTONEWS_CHANGE, DSL, ""P"Объявление | Обменять", ""P"1."W" Дом\n"P"2."W" Бизнес\n"P"3."W" Аэропорт\n"P"4."W" А/М\n"P"5."W" М/Ц\n"P"6."W" Сим-Карту", "Выбрать", "Отмена");
			case 3: D(playerid, D_AUTONEWS_SERVICES, DSL, ""P"Объявление | Услуги", ""P"1."W" Объявить о собеседовании", "Выбрать", "Отмена");
			}
		}
	case D_AUTONEWS_SERVICES: {
			if(!response) return 1;
			switch(listitem) {
			case 0: D(playerid, D_AUTONEWS_SERVICES_2, DSL, ""P"Объявление | Услуги | Собеседования", ""P"1."W" Русская Мафия\n"P"2."W" Японская мафия\n"P"3."W" Итальянская мафия\n"P"4."W" The Ballas\n"P"5."W" The Vagos\n"P"6."W" The Grove\n"P"7."W" The Aztec\n"P"8."W" The Rifa", "Выбрать", "Отмена");
			}
		}
	case D_AUTONEWS_SERVICES_2: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			switch(listitem) {
			case 0: format(gAdvert[slot][adText],100,"Проходит собеседование в \"Русское посольство\". Подробности по телефону");
			case 1: format(gAdvert[slot][adText],100,"Идет набор официантов в \"Японский ресторан\". Подробности по телефону");
			case 2: format(gAdvert[slot][adText],100,"Итальянская сувенирная лавка ищет сотрудников. Подробности по телефону");
			case 3: format(gAdvert[slot][adText],100,"Проходит набор в баскетбольную команду \"Ballas\". Желающим прибыть на площадку");
			case 4: format(gAdvert[slot][adText],100,"Проходит набор в баскетбольную команду \"Vagos\". Желающим прибыть на площадку");
			case 5: format(gAdvert[slot][adText],100,"Проходит набор в баскетбольную команду \"Grove\". Желающим прибыть на площадку");
			case 6: format(gAdvert[slot][adText],100,"Проходит набор в баскетбольную команду \"Aztec\". Желающим прибыть на площадку");
			case 7: format(gAdvert[slot][adText],100,"Проходит набор в баскетбольную команду \"Rifa\". Желающим прибыть на площадку");
			}
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");
			auto_news(slot,playerid);
		}
	case D_AUTONEWS_BUY: {
			if(!response) return 1;
			switch(listitem) {
			case 0: D(playerid, D_AUTONEWS_BUY_HOUSE, DSL, ""P"Объявление | Купить | Дом", ""P"1."W" Пропустить\n"P"2."W" Эконом\n"P"3."W" Cредний\n"P"4."W" Элитный\n"P"5."W" Особняк", "Выбрать", "Отмена");
			case 1: D(playerid, D_AUTONEWS_BUY_BIZZ, DSL, ""P"Объявление | Купить | Бизнес", ""P"1."W" Пропустить\n"P"2. "W"Закусочная\n"P"3. "W"24/7\n"P"4. "W"Бар\n"P"5. "W"Клуб\n"P"6. "W"Магазин одежды\n"P"7. "W"АММО\n"P"8. "W"АЗС\n"P"9. "W"Автосалон\n"P"10. "W"Рыболовный бизнес\n"P"11. "W"Компьютерный клуб\n"P"12. "W"Риэлторское агентство\n"P"13. "W"Спорт-Зал\n"P"14. "W"Банк\n"P"15. "W"Рекламное агентство\n"P"16. "W"Магазин Аксессуаров\n"P"17. "W"Perfomance Tune", "Выбрать", "Отмена");
			case 2: D(playerid, D_AUTONEWS_BUY_AIRPORT, DSI, ""P"Объявление | Купить | Аэропорт", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести аэропорт:\n\n", "Ввод", "Отмена");
			case 3: D(playerid, D_AUTONEWS_BUY_CAR, DSL, ""P"Объявление | Купить | Автомобиль", ""P"1."W" Без тюнинга\n"P"2."W" FT\n"P"3."W" PT\n"P"4."W" FT and PT", "Выбрать", "Отмена");
			case 4: D(playerid, D_AUTONEWS_BUY_MOTO, DSL, ""P"Объявление | Купить | Мотоцикл", ""P"1."W" Пропустить\n"P"2."W" Bike\n"P"3."W" BMX\n"P"4."W" Fagio\n"P"5."W" FCR-900\n"P"6."W" Freeway\n"P"7."W" Mountain-Bike\n"P"8."W" NRG-500\n"P"9."W" PCJ-600\n"P"10."W" Quad\n"P"11."W" Sanchez\n"P"12."W" Wayfarer", "Выбрать", "Отмена");
			case 5: D(playerid, D_AUTONEWS_BUY_SIM, DSL, ""P"Объявление | Купить | Сим-Карту", ""P"1."W" Без формата\n"P"2."W" Указать формат", "Выбрать", "Отмена");
			}
		}
	case D_AUTONEWS_SELL: {
			if(!response) return 1;
			switch(listitem) {
			case 0: D(playerid, D_AUTONEWS_SELL_HOUSE, DSL, ""P"Объявление | Продать | Дом", ""P"1."W" Пропустить\n"P"2."W" Эконом\n"P"3."W" Cредний\n"P"4."W" Элитный\n"P"5."W" Особняк", "Выбрать", "Отмена");
			case 1: D(playerid, D_AUTONEWS_SELL_BIZZ, DSL, ""P"Объявление | Продать | Бизнес", ""P"1."W" Пропустить\n"P"2. "W"Закусочная\n"P"3. "W"24/7\n"P"4. "W"Бар\n"P"5. "W"Клуб\n"P"6. "W"Магазин одежды\n"P"7. "W"АММО\n"P"8. "W"АЗС\n"P"9. "W"Автосалон\n"P"10. "W"Рыболовный бизнес\n"P"11. "W"Компьютерный клуб\n"P"12. "W"Риэлторское агентство\n"P"13. "W"Спорт-Зал\n"P"14. "W"Банк\n"P"15. "W"Рекламное агентство\n"P"16. "W"Магазин Аксессуаров\n"P"17. "W"Perfomance Tune", "Выбрать", "Отмена");
			case 2: D(playerid, D_AUTONEWS_SELL_AIRPORT, DSL, ""P"Объявление | Продать | Аэропорт", "\n\n"W"Введите стоимость, за которую Вы хотите продать аэропорт:\n\n", "Ввод", "Отмена");
			case 3: D(playerid, D_AUTONEWS_SELL_CAR, DSL, ""P"Объявление | Продать | Автомобиль", ""P"1."W" Без тюнинга\n"P"2."W" FT\n"P"3."W" PT\n"P"4."W" FT and PT", "Выбрать", "Отмена");
			case 4: D(playerid, D_AUTONEWS_SELL_MOTO, DSL, ""P"Объявление | Продать | Мотоцикл", ""P"1."W" Пропустить\n"P"2."W" Bike\n"P"3."W" BMX\n"P"4."W" Fagio\n"P"5."W" FCR-900\n"P"6."W" Freeway\n"P"7."W" Mountain-Bike\n"P"8."W" NRG-500\n"P"9."W" PCJ-600\n"P"10."W" Quad\n"P"11."W" Sanchez\n"P"12."W" Wayfarer", "Выбрать", "Отмена");
			case 5: D(playerid, D_AUTONEWS_SELL_SIM, DSL, ""P"Объявление | Продать | Сим-Карту", ""P"1."W" Без формата\n"P"2."W" Указать формат", "Выбрать", "Отмена");
			}
		}
	case D_AUTONEWS_CHANGE: {
			if(!response) return 1;
			switch(listitem) {
			case 0: D(playerid, D_AUTONEWS_CHANGE_HOUSE, DSL, ""P"Объявление | Обменять | Дом", ""P"1."W" Пропустить\n"P"2."W" Эконом\n"P"3."W" Cредний\n"P"4."W" Элитный\n"P"5."W" Особняк", "Выбрать", "Отмена");
			case 1: D(playerid, D_AUTONEWS_CHANGE_BIZZ, DSL, ""P"Объявление | Обменять | Бизнес", ""P"1."W" Пропустить\n"P"2. "W"Закусочная\n"P"3. "W"24/7\n"P"4. "W"Бар\n"P"5. "W"Клуб\n"P"6. "W"Магазин одежды\n"P"7. "W"АММО\n"P"8. "W"АЗС\n"P"9. "W"Автосалон\n"P"10. "W"Рыболовный бизнес\n"P"11. "W"Компьютерный клуб\n"P"12. "W"Риэлторское агентство\n"P"13. "W"Спорт-Зал\n"P"16. "W"Банк\n"P"14. "W"Рекламное агентство\n"P"15. "W"Магазин Аксессуаров\n"P"16. "W"Perfomance Tune", "Выбрать", "Отмена");
			case 2: {
					if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
					if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
					new slot = -1;
					for(new i;i<MAX_ADVERT_COUNT;i++) {
						if(!gAdvert[i][adBusy]) {slot = i; break;}
					}
					if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
					gAdvertCount ++;
					GiveMoney(playerid,-1000,"подача объявления");

					format(gAdvert[slot][adText],100,"Обменяю аэропорт",strval(inputtext));
					auto_news(slot,playerid);
				}
			case 3: D(playerid, D_AUTONEWS_CHANGE_CAR, DSL, ""P"Объявление | Обменять | Автомобиль", ""P"1."W" Без тюнинга\n"P"2."W" FT\n"P"3."W" PT\n"P"4."W" FT and PT", "Выбрать", "Отмена");
			case 4: D(playerid, D_AUTONEWS_CHANGE_MOTO, DSL, ""P"Объявление | Обменять | Мотоцикл", ""P"1."W" Пропустить\n"P"2."W" Bike\n"P"3."W" BMX\n"P"4."W" Fagio\n"P"5."W" FCR-900\n"P"6."W" Freeway\n"P"7."W" Mountain-Bike\n"P"8."W" NRG-500\n"P"9."W" PCJ-600\n"P"10."W" Quad\n"P"11."W" Sanchez\n"P"12."W" Wayfarer", "Выбрать", "Отмена");
			case 5: D(playerid, D_AUTONEWS_CHANGE_SIM, DSL, ""P"Объявление | Обменять | Сим-Карту", ""P"1."W" Без формата\n"P"2."W" Указать формат", "Выбрать", "Отмена");
			}
		}
	case D_AUTONEWS_BUY_HOUSE: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_house_class", listitem);
			D(playerid, D_AUTONEWS_BUY_HOUSE_2, DSL, ""P"Объявление | Купить | Дом", ""P"1."W" г. Лос Сантос\n"P"2."W" г. Сан Фиерро\n"P"3."W" г. Лас Вентурас\n"P"4."W" Гетто\n"P"5."W" Паломино-Крик\n"P"6."W" Диллимор\n"P"7."W" Блуберри\n"P"8."W" Монтгомери\n"P"9."W" Форт Карсон\n"P"10."W" Лас-Паясадас\n"P"11."W" Энджел-Пайн\n"P"12."W" Бэйсайд\n"P"13."W" Лас-Барранкас\n"P"14."W" Валле-Окультадо\n"P"15."W" Эль-Квебрадос", "Выбрать", "Отмена");
		}
	case D_AUTONEWS_BUY_HOUSE_2: {
			if(!response) return DeletePVar(playerid, "auto_house_class");
			SetPVarInt(playerid, "auto_house_city", listitem);
			D(playerid, D_AUTONEWS_BUY_HOUSE_3, DSI, ""P"Объявление | Купить | Дом", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести дом:\n\n", "Ввод", "Отмена");
		}
	case D_AUTONEWS_BUY_HOUSE_3: {
			if(!response) return DeletePVar(playerid, "auto_house_city");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_HOUSE_3, DSI, ""P"Объявление | Купить | Дом", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести дом:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new house_class[5][13] = {"no","эконом","средний","элитный","особняк"};
			new house_city[15][17] = {"г. Лос Сантос","г. Сан Фиерро","г. Лас Вентурас","опасном районе","Паломино-Крик","Диллимор","Блуберри","Монтгомери","Форт Карсон","Лас-Паясадас","Энджел-Пайн","Бэйсайд","Лас-Барранкас","Валле-Окультадо","Эль-Квебрадос"};

			if(!GetPVarInt(playerid, "auto_house_class")) {
				format(gAdvert[slot][adText],100,"Куплю дом в %s. Цена: $%d",house_city[GetPVarInt(playerid, "auto_house_city")],strval(inputtext));
			}
			else format(gAdvert[slot][adText],100,"Куплю дом класса \"%s\" в %s. Цена: $%d",house_class[GetPVarInt(playerid, "auto_house_class")],house_city[GetPVarInt(playerid, "auto_house_city")],strval(inputtext));
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_house_city");
			DeletePVar(playerid, "auto_house_class");
		}
	case D_AUTONEWS_SELL_HOUSE: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_house_class", listitem);
			D(playerid, D_AUTONEWS_SELL_HOUSE_2, DSL, ""P"Объявление | Продать | Дом", ""P"1."W" г. Лос Сантос\n"P"2."W" г. Сан Фиерро\n"P"3."W" г. Лас Вентурас\n"P"4."W" Гетто\n"P"5."W" Паломино-Крик\n"P"6."W" Диллимор\n"P"7."W" Блуберри\n"P"8."W" Монтгомери\n"P"9."W" Форт Карсон\n"P"10."W" Лас-Паясадас\n"P"11."W" Энджел-Пайн\n"P"12."W" Бэйсайд\n"P"13."W" Лас-Барранкас\n"P"14."W" Валле-Окультадо\n"P"15."W" Эль-Квебрадос", "Выбрать", "Отмена");
		}
	case D_AUTONEWS_SELL_HOUSE_2: {
			if(!response) return DeletePVar(playerid, "auto_house_class");
			SetPVarInt(playerid, "auto_house_city", listitem);
			D(playerid, D_AUTONEWS_SELL_HOUSE_3, DSI, ""P"Объявление | Продать | Дом", "\n\n"W"Введите стоимость, за которую Вы хотите продать дом:\n\n", "Ввод", "Отмена");
		}
	case D_AUTONEWS_SELL_HOUSE_3: {
			if(!response) return DeletePVar(playerid, "auto_house_city");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_HOUSE_3, DSI, ""P"Объявление | Продать | Дом", "\n\n"W"Введите стоимость, за которую Вы хотите продать дом:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new house_class[5][13] = {"no","эконом","средний","элитный","особняк"};
			new house_city[15][17] = {"г. Лос Сантос","г. Сан Фиерро","г. Лас Вентурас","опасном районе","Паломино-Крик","Диллимор","Блуберри","Монтгомери","Форт Карсон","Лас-Паясадас","Энджел-Пайн","Бэйсайд","Лас-Барранкас","Валле-Окультадо","Эль-Квебрадос"};

			if(!GetPVarInt(playerid, "auto_house_class")) {
				format(gAdvert[slot][adText],100,"Продам дом в %s. Цена: $%d",house_city[GetPVarInt(playerid, "auto_house_city")],strval(inputtext));
			}
			else format(gAdvert[slot][adText],100,"Продам дом класса \"%s\" в %s. Цена: $%d",house_class[GetPVarInt(playerid, "auto_house_class")],house_city[GetPVarInt(playerid, "auto_house_city")],strval(inputtext));
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_house_city");
			DeletePVar(playerid, "auto_house_class");
		}
	case D_AUTONEWS_CHANGE_HOUSE: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_house_class", listitem);
			D(playerid, D_AUTONEWS_CHANGE_HOUSE_2, DSL, ""P"Объявление | Обменять | Дом", ""P"1."W" г. Лос Сантос\n"P"2."W" г. Сан Фиерро\n"P"3."W" г. Лас Вентурас\n"P"4."W" Гетто\n"P"5."W" Паломино-Крик\n"P"6."W" Диллимор\n"P"7."W" Блуберри\n"P"8."W" Монтгомери\n"P"9."W" Форт Карсон\n"P"10."W" Лас-Паясадас\n"P"11."W" Энджел-Пайн\n"P"12."W" Бэйсайд\n"P"13."W" Лас-Барранкас\n"P"14."W" Валле-Окультадо\n"P"15."W" Эль-Квебрадос", "Выбрать", "Отмена");
		}
	case D_AUTONEWS_CHANGE_HOUSE_2: {
			if(!response) return DeletePVar(playerid, "auto_house_city");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new house_class[5][13] = {"no","эконом","средний","элитный","особняк"};
			new house_city[15][17] = {"г. Лос Сантос","г. Сан Фиерро","г. Лас Вентурас","опасном районе","Паломино-Крик","Диллимор","Блуберри","Монтгомери","Форт Карсон","Лас-Паясадас","Энджел-Пайн","Бэйсайд","Лас-Барранкас","Валле-Окультадо","Эль-Квебрадос"};

			if(!GetPVarInt(playerid, "auto_house_class")) {
				format(gAdvert[slot][adText],100,"Обменяю дом в %s",house_city[GetPVarInt(playerid, "auto_house_city")]);
			}
			else format(gAdvert[slot][adText],100,"Обменяю дом класса %s в %s",house_class[GetPVarInt(playerid, "auto_house_class")],house_city[GetPVarInt(playerid, "auto_house_city")]);
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_house_city");
			DeletePVar(playerid, "auto_house_class");
		}
	case D_AUTONEWS_BUY_BIZZ: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_bizz_type", listitem);
			D(playerid, D_AUTONEWS_BUY_BIZZ_2, DSI, ""P"Объявление | Купить | Бизнес", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести бизнес:\n\n", "Ввод", "Отмена");
		}
	case D_AUTONEWS_BUY_BIZZ_2: {
			if(!response) return DeletePVar(playerid, "auto_bizz_type");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_BIZZ_2, DSI, ""P"Объявление | Купить | Бизнес", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести бизнес:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new bizz_type[17][28] = {"no","Закусочная","24/7","Бар","Клуб","Магазин одежды","АММО","АЗС","Автосалон","Рыболовный бизнес","Компьютерный клуб","Риэлторское агентство","Спорт-Зал","Банк","Рекламное агентство","Магазин Аксессуаров","Perfomance Tune"};
			if(!GetPVarInt(playerid, "auto_bizz_type")) format(gAdvert[slot][adText],100,"Куплю прибыльное предприятие. Цена: $%d",strval(inputtext));
			else format(gAdvert[slot][adText],100,"Куплю предприятие \"%s\". Цена: $%d",bizz_type[GetPVarInt(playerid, "auto_bizz_type")],strval(inputtext));
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_bizz_type");
		}
	case D_AUTONEWS_SELL_BIZZ: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_bizz_type", listitem);
			D(playerid, D_AUTONEWS_SELL_BIZZ_2, DSI, ""P"Объявление | Продать | Бизнес", "\n\n"W"Введите стоимость, за которую Вы хотите продать бизнес:\n\n", "Ввод", "Отмена");
		}
	case D_AUTONEWS_SELL_BIZZ_2: {
			if(!response) return DeletePVar(playerid, "auto_bizz_type");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_BIZZ_2, DSI, ""P"Объявление | Продать | Бизнес", "\n\n"W"Введите стоимость, за которую Вы хотите продать бизнес:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");
			new bizz_type[17][28] = {"no","Закусочная","24/7","Бар","Клуб","Магазин одежды","АММО","АЗС","Автосалон","Рыболовный бизнес","Компьютерный клуб","Риэлторское агентство","Спорт-Зал","Банк","Рекламное агентство","Магазин Аксессуаров","Perfomance Tune"};
			if(!GetPVarInt(playerid, "auto_bizz_type")) format(gAdvert[slot][adText],100,"Продам предприятие. Цена: $%d",strval(inputtext));
			else format(gAdvert[slot][adText],100,"Продам предприятие \"%s\". Цена: $%d",bizz_type[GetPVarInt(playerid, "auto_bizz_type")],strval(inputtext));
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_bizz_type");
		}
	case D_AUTONEWS_CHANGE_BIZZ: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new bizz_type[17][28] = {"no","Закусочная","24/7","Бар","Клуб","Магазин одежды","АММО","АЗС","Автосалон","Рыболовный бизнес","Компьютерный клуб","Риэлторское агентство","Спорт-Зал","Банк","Рекламное агентство","Магазин Аксессуаров","Perfomance Tune"};
			if(!listitem) format(gAdvert[slot][adText],100,"Обменяю предприятие");
			else format(gAdvert[slot][adText],100,"Обменяю предприятие \"%s\"",bizz_type[listitem]);
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_bizz_type");
		}
	case D_AUTONEWS_BUY_AIRPORT: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_AIRPORT, DSI, ""P"Объявление | Купить | Аэропорт", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести аэропорт:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			format(gAdvert[slot][adText],100,"Куплю аэропорт. Цена: $%d",strval(inputtext));
			auto_news(slot,playerid);
		}
	case D_AUTONEWS_SELL_AIRPORT: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_AIRPORT, DSI, ""P"Объявление | Продать | Аэропорт", "\n\n"W"Введите стоимость, за которую Вы хотите продать аэропорт:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			format(gAdvert[slot][adText],100,"Продам аэропорт. Цена: $%d",strval(inputtext));
			auto_news(slot,playerid);
		}
	case D_AUTONEWS_BUY_CAR: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_tune", listitem);
			D(playerid, D_AUTONEWS_BUY_CAR_2, DSL, ""P"Объявление | Купить | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Эконом\n"P"3."W" Средний\n"P"4."W" Спорт", "Выбрать", "Отмена");
		}
	case D_AUTONEWS_BUY_CAR_2: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class", listitem);
			switch(listitem) {
			case 0: D(playerid, D_AUTONEWS_BUY_CAR_4, DSI, ""P"Объявление | Купить | Автомобиль", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести автомобиль:\n\n", "Ввод", "Отмена");
			case 1: D(playerid, D_AUTONEWS_BUY_CAR_3, DSL, ""P"Объявление | Купить | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Chevrolet Impala\n"P"3."W" Broadway\n"P"4."W" Chevrolet SS 454\n"P"5."W" Lincoln Town Car\n"P"6."W" Glendale\n"P"7."W" Dodge Charger\n"P"8."W" Hermes\n"P"9."W" Hustler\n"P"10."W" Buick Grand\n"P"11."W" Mitsubishi 3000GT\n"P"12."W" Oceanic\n"P"13."W" Volvo V90\n"P"14."W" Picador\n"P"15."W" Chevrolet Caprice\n"P"16."W" Ford F150\n"P"17."W" Ford Mustang Mach\n"P"18."W" Pontiac GTO\n"P"19."W" Ford Mustang Boss 429\n"P"20."W" Voodoo", "Выбрать", "Отмена");
			case 2: D(playerid, D_AUTONEWS_BUY_CAR_3, DSL, ""P"Объявление | Купить | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Admiral\n"P"3."W" Blist-Compact\n"P"4."W" Pontiac Solstice\n"P"5."W" Club\n"P"6."W" BMW M3 Cabriolet\n"P"7."W" Mercedes-Benz G-Класс 500\n"P"8."W" Landstalker\n"P"9."W" Jeep Wrangler\n"P"10."W" Phoenix\n"P"11."W" Premier\n"P"12."W" Rancher\n"P"13."W" Lincoln Continental\n"P"14."W" Plymouth Barracuda\n"P"15."W" Savanna\n"P"16."W" Sentinel\n"P"17."W" Slamvan\n"P"18."W" Solair\n"P"19."W" Stafford\n"P"20."W" Chrysler\n"P"20."W" Bmw M3 E46\n"P"20."W" Washington\n"P"20."W" BMW Z4\n"P"20."W" GMC Sierra", "Выбрать", "Отмена");
			case 3: D(playerid, D_AUTONEWS_BUY_CAR_3, DSL, ""P"Объявление | Купить | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Chevrolet Corvette GS\n"P"3."W" Ferrari 360\n"P"4."W" Audio R8\n"P"5."W" Ford GT40\n"P"6."W" Cheetah\n"P"7."W" Ferrari 458\n"P"8."W" BMW 320i\n"P"9."W" Euros\n"P"10."W" Hotknife\n"P"11."W" Hotring\n"P"12."W" Bugatti Veyron\n"P"13."W" Toyota Supra\n"P"14."W" Land Rover LRX\n"P"15."W" Mitsubishi Lancer\n"P"16."W" Koenigsegg CCX\n"P"17."W" Pagani Zonda\n"P"18."W" Nissan 240SX", "Выбрать", "Отмена");
			}
		}
	case D_AUTONEWS_BUY_CAR_3: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class_2", listitem);
			D(playerid, D_AUTONEWS_BUY_CAR_4, DSI, ""P"Объявление | Купить | Автомобиль", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести автомобиль:\n\n", "Ввод", "Отмена");
		}
	case D_AUTONEWS_BUY_CAR_4: {
			if(!response) return DeletePVar(playerid, "auto_bizz_type");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_CAR_4, DSI, ""P"Объявление | Купить | Автомобиль", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести автомобиль:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new car_tune[4][8] = {"No Tune","FT","PT","FT/PT"};
			new car_class[4][8] = {"no","эконом","средний","спорт"};
			if(!GetPVarInt(playerid, "auto_car_class")) {
				format(gAdvert[slot][adText],100,"Куплю автомобиль [%s]. Цена: $%d",car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
			}
			else if(!GetPVarInt(playerid, "auto_car_class_2")) {
				format(gAdvert[slot][adText],100,"Куплю автомобиль [%s] класса \"%s\". Цена: $%d",car_tune[GetPVarInt(playerid, "auto_car_tune")],car_class[GetPVarInt(playerid, "auto_car_class")],strval(inputtext));
			}
			else {
				switch(GetPVarInt(playerid, "auto_car_class")) {
				case 1: {
						new car_name[20][40] = {"No","Chevrolet Impala","Broadway","Chevrolet SS 454","Lincoln Town Car","Glendale","Dodge Charger","Hermes","Hustler","Buick Grand","Mitsubishi 3000GT","Oceanic","Volvo V90","Picador","Chevrolet Caprice","Ford F150","Ford Mustang Mach","Pontiac GTO","Ford Mustang Boss 429","Voodoo"};
						format(gAdvert[slot][adText],100,"Куплю автомобиль марки \"%s\" [%s]. Цена: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
				case 2: {
						new car_name[24][35] = {"No","Admiral","Blist-Compact","Pontiac Solstice","Volkswagen Golf","BMW M3 Cabriolet","Mercedes-Benz G-Класс 500","Landstalker","Jeep Wrangler","Phoenix","Premier","Rancher","Lincoln Continental","Plymouth Barracuda","Savanna","Sentinel","Slamvan","Solair","Stafford","Chrysler","Bmw M3 E46","Washington","BMW Z4","GMC Sierra"};
						format(gAdvert[slot][adText],100,"Куплю автомобиль марки \"%s\" [%s]. Цена: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
				case 3: {
						new car_name[18][35] = {"No","Chevrolet Corvette GS","Ferrari 360","Audio R8","Ford GT40","Cheetah","Ferrari 458","BMW 320i","Euros","Hotknife","Hotring","Bugatti Veyron","Toyota Supra","Land Rover LRX","Mitsubishi Lancer","Koenigsegg CCX","Pagani Zonda","Nissan 240SX"};
						format(gAdvert[slot][adText],100,"Куплю автомобиль марки \"%s\" [%s]. Цена: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
				}
			}
			auto_news(slot,playerid);
		}
	case D_AUTONEWS_SELL_CAR: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_tune", listitem);
			D(playerid, D_AUTONEWS_SELL_CAR_2, DSL, ""P"Объявление | Продать | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Эконом\n"P"3."W" Средний\n"P"4."W" Спорт", "Выбрать", "Отмена");
		}
	case D_AUTONEWS_SELL_CAR_2: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class", listitem);
			switch(listitem) {
			case 0: D(playerid, D_AUTONEWS_SELL_CAR_4, DSI, ""P"Объявление | Продать | Автомобиль", "\n\n"W"Введите стоимость, за которую Вы хотите продать автомобиль:\n\n", "Ввод", "Отмена");
			case 1: D(playerid, D_AUTONEWS_SELL_CAR_3, DSL, ""P"Объявление | Продать | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Chevrolet Impala\n"P"3."W" Broadway\n"P"4."W" Chevrolet SS 454\n"P"5."W" Lincoln Town Car\n"P"6."W" Glendale\n"P"7."W" Dodge Charger\n"P"8."W" Hermes\n"P"9."W" Hustler\n"P"10."W" Buick Grand\n"P"11."W" Mitsubishi 3000GT\n"P"12."W" Oceanic\n"P"13."W" Volvo V90\n"P"14."W" Picador\n"P"15."W" Chevrolet Caprice\n"P"16."W" Ford F150\n"P"17."W" Ford Mustang Mach\n"P"18."W" Pontiac GTO\n"P"19."W" Ford Mustang Boss 429\n"P"20."W" Voodoo", "Выбрать", "Отмена");
			case 2: D(playerid, D_AUTONEWS_SELL_CAR_3, DSL, ""P"Объявление | Продать | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Admiral\n"P"3."W" Blist-Compact\n"P"4."W" Pontiac Solstice\n"P"5."W" Volkswagen Golf\n"P"6."W" BMW M3 Cabriolet\n"P"7."W" Mercedes-Benz G-Класс 500\n"P"8."W" Landstalker\n"P"9."W" Jeep Wrangler\n"P"10."W" Phoenix\n"P"11."W" Premier\n"P"12."W" Rancher\n"P"13."W" Lincoln Continental\n"P"14."W" Plymouth Barracuda\n"P"15."W" Savanna\n"P"16."W" Sentinel\n"P"17."W" Slamvan\n"P"18."W" Solair\n"P"19."W" Stafford\n"P"20."W" Chrysler\n"P"20."W" Bmw M3 E46\n"P"20."W" Washington\n"P"20."W" BMW Z4\n"P"20."W" GMC Sierra", "Выбрать", "Отмена");
			case 3: D(playerid, D_AUTONEWS_SELL_CAR_3, DSL, ""P"Объявление | Продать | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Chevrolet Corvette GS\n"P"3."W" Ferrari 360\n"P"4."W" Audio R8\n"P"5."W" Ford GT40\n"P"6."W" Cheetah\n"P"7."W" Ferrari 458\n"P"8."W" BMW 320i\n"P"9."W" Euros\n"P"10."W" Hotknife\n"P"11."W" Hotring\n"P"12."W" Bugatti Veyron\n"P"13."W" Toyota Supra\n"P"14."W" Land Rover LRX\n"P"15."W" Mitsubishi Lancer\n"P"16."W" Koenigsegg CCX\n"P"17."W" Pagani Zonda\n"P"18."W" Nissan 240SX", "Выбрать", "Отмена");
			}
		}
	case D_AUTONEWS_SELL_CAR_3: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class_2", listitem);
			D(playerid, D_AUTONEWS_SELL_CAR_4, DSI, ""P"Объявление | Продать | Автомобиль", "\n\n"W"Введите стоимость, за которую Вы хотите продать автомобиль:\n\n", "Ввод", "Отмена");
		}
	case D_AUTONEWS_SELL_CAR_4: {
			if(!response) return DeletePVar(playerid, "auto_car_class_2");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_CAR_4, DSI, ""P"Объявление | Продать | Автомобиль", "\n\n"W"Введите стоимость, за которую Вы хотите продать автомобиль:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new car_tune[4][8] = {"No Tune","FT","PT","FT/PT"};
			new car_class[4][8] = {"no","эконом","средний","спорт"};
			if(!GetPVarInt(playerid, "auto_car_class")) {
				format(gAdvert[slot][adText],100,"Продам автомобиль [%s]. Цена: $%d",car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
			}
			else if(!GetPVarInt(playerid, "auto_car_class_2")) {
				format(gAdvert[slot][adText],100,"Продам автомобиль [%s] класса \"%s\". Цена: $%d",car_tune[GetPVarInt(playerid, "auto_car_tune")],car_class[GetPVarInt(playerid, "auto_car_class")],strval(inputtext));
			}
			else {
				switch(GetPVarInt(playerid, "auto_car_class")) {
				case 1: {
						new car_name[20][30] = {"No","Chevrolet Impala","Broadway","Chevrolet SS 454","Lincoln Town Car","Glendale","Dodge Charger","Hermes","Hustler","Buick Grand","Mitsubishi 3000GT","Oceanic","Volvo V90","Picador","Chevrolet Caprice","Ford F150","Ford Mustang Mach","Pontiac GTO","Ford Mustang Boss 429","Voodoo"};
						format(gAdvert[slot][adText],100,"Продам автомобиль марки \"%s\" [%s]. Цена: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
				case 2: {
						new car_name[24][35] = {"No","Admiral","Blist-Compact","Pontiac Solstice","Volkswagen Golf","BMW M3 Cabriolet","Mercedes-Benz G-Класс 500","Landstalker","Jeep Wrangler","Phoenix","Premier","Rancher","Lincoln Continental","Plymouth Barracuda","Savanna","Sentinel","Slamvan","Solair","Stafford","Chrysler","Bmw M3 E46","Washington","BMW Z4","GMC Sierra"};
						format(gAdvert[slot][adText],100,"Продам автомобиль марки \"%s\" [%s]. Цена: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
				case 3: {
						new car_name[18][35] = {"No","Chevrolet Corvette GS","Ferrari 360","Audio R8","Ford GT40","Cheetah","Ferrari 458","BMW 320i","Euros","Hotknife","Hotring","Bugatti Veyron","Toyota Supra","Land Rover LRX","Mitsubishi Lancer","Koenigsegg CCX","Pagani Zonda","Nissan 240SX"};
						format(gAdvert[slot][adText],100,"Продам автомобиль марки \"%s\" [%s]. Цена: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
				}
			}
			auto_news(slot,playerid);
		}
	case D_AUTONEWS_CHANGE_CAR: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_tune", listitem);
			D(playerid, D_AUTONEWS_CHANGE_CAR_2, DSL, ""P"Объявление | Обменять | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Эконом\n"P"3."W" Средний\n"P"4."W" Спорт", "Выбрать", "Отмена");
		}
	case D_AUTONEWS_CHANGE_CAR_2: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class", listitem);
			switch(listitem) {
			case 0: {
					if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
					if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
					new slot = -1;
					for(new i;i<MAX_ADVERT_COUNT;i++) {
						if(!gAdvert[i][adBusy]) {slot = i; break;}
					}
					if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
					gAdvertCount ++;
					GiveMoney(playerid,-1000,"подача объявления");

					new car_tune[4][8] = {"No Tune","FT","PT","FT/PT"};
					format(gAdvert[slot][adText],100,"Обменяю автомобиль [%s]",car_tune[GetPVarInt(playerid, "auto_car_tune")]);
					auto_news(slot,playerid);
				}
			case 1: D(playerid, D_AUTONEWS_CHANGE_CAR_3, DSL, ""P"Объявление | Обменять | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Chevrolet Impala\n"P"3."W" Broadway\n"P"4."W" Chevrolet SS 454\n"P"5."W" Lincoln Town Car\n"P"6."W" Glendale\n"P"7."W" Dodge Charger\n"P"8."W" Hermes\n"P"9."W" Hustler\n"P"10."W" Buick Grand\n"P"11."W" Mitsubishi 3000GT\n"P"12."W" Oceanic\n"P"13."W" Volvo V90\n"P"14."W" Picador\n"P"15."W" Chevrolet Caprice\n"P"16."W" Ford F150\n"P"17."W" Ford Mustang Mach\n"P"18."W" Pontiac GTO\n"P"19."W" Ford Mustang Boss 429f\n"P"20."W" Voodoo", "Выбрать", "Отмена");
			case 2: D(playerid, D_AUTONEWS_CHANGE_CAR_3, DSL, ""P"Объявление | Обменять | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Admiral\n"P"3."W" Blist-Compact\n"P"4."W" Pontiac Solstice\n"P"5."W" Volkswagen Golf\n"P"6."W" BMW M3 Cabriolet\n"P"7."W" Mercedes-Benz G-Класс 500\n"P"8."W" Landstalker\n"P"9."W" Jeep Wrangler\n"P"10."W" Phoenix\n"P"11."W" Premier\n"P"12."W" Rancher\n"P"13."W" Lincoln Continental\n"P"14."W" Plymouth Barracuda\n"P"15."W" Savanna\n"P"16."W" Sentinel\n"P"17."W" Slamvan\n"P"18."W" Solair\n"P"19."W" Stafford\n"P"20."W" Chrysler\n"P"20."W" BMW M3 E46\n"P"20."W" Washington\n"P"20."W" BMW Z4\n"P"20."W" GMC Sierra", "Выбрать", "Отмена");
			case 3: D(playerid, D_AUTONEWS_CHANGE_CAR_3, DSL, ""P"Объявление | Обменять | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Chevrolet Corvette GS\n"P"3."W" Ferrari 360\n"P"4."W" Audio R8\n"P"5."W" Ford GT40\n"P"6."W" Cheetah\n"P"7."W" Ferrari 458\n"P"8."W" BMW 320i\n"P"9."W" Euros\n"P"10."W" Hotknife\n"P"11."W" Hotring\n"P"12."W" Bugatti Veyron\n"P"13."W" Toyota Supra\n"P"14."W" Land Rover LRX\n"P"15."W" Mitsubishi Lancer\n"P"16."W" Koenigsegg CCX\n"P"17."W" Pagani Zonda\n"P"18."W" Nissan 240SX", "Выбрать", "Отмена");
			}
		}
	case D_AUTONEWS_CHANGE_CAR_3: {
			if(!response) return DeletePVar(playerid, "auto_car_class_2");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new car_tune[4][8] = {"No Tune","FT","PT","FT/PT"};
			new car_class[4][8] = {"no","эконом","средний","спорт"};
			if(!GetPVarInt(playerid, "auto_car_class")) {
				format(gAdvert[slot][adText],100,"Обменяю автомобиль [%s]",car_tune[GetPVarInt(playerid, "auto_car_tune")]);
			}
			else if(!GetPVarInt(playerid, "auto_car_class_2")) {
				format(gAdvert[slot][adText],100,"Обменяю автомобиль [%s] класса \"%s\"",car_tune[GetPVarInt(playerid, "auto_car_tune")],car_class[GetPVarInt(playerid, "auto_car_class")]);
			}
			else {
				switch(GetPVarInt(playerid, "auto_car_class")) {
				case 1: {
						new car_name[20][30] = {"No","Chevrolet Impala","Broadway","Chevrolet SS 454","Lincoln Town Car","Glendale","Dodge Charger","Hermes","Hustler","Buick Grand","Mitsubishi 3000GT","Oceanic","Volvo V90","Picador","Chevrolet Caprice","Ford F150","Ford Mustang Mach","Pontiac GTO","Ford Mustang Boss 429","Voodoo"};
						format(gAdvert[slot][adText],100,"Обменяю автомобиль марки \"%s\" [%s]",car_name[listitem],car_tune[GetPVarInt(playerid, "auto_car_tune")]);
					}
				case 2: {
						new car_name[24][35] = {"No","Admiral","Blist-Compact","Pontiac Solstice","Volkswagen Golf","BMW M3 Cabriolet","Mercedes-Benz G-Класс 500","Landstalker","Jeep Wrangler","Phoenix","Premier","Rancher","Lincoln Continental","Plymouth Barracuda","Savanna","Sentinel","Slamvan","Solair","Stafford","Chrysler","BMW M3 E46","Washington","BMW Z4","GMC Sierra"};
						format(gAdvert[slot][adText],100,"Обменяю автомобиль марки \"%s\" [%s]",car_name[listitem],car_tune[GetPVarInt(playerid, "auto_car_tune")]);
					}
				case 3: {
						new car_name[18][35] = {"No","Chevrolet Corvette GS","Ferrari 360","Audio R8","Ford GT40","Cheetah","Ferrari 458","BMW 320i","Euros","Hotknife","Hotring","Bugatti Veyron","Toyota Supra","Land Rover LRX","Mitsubishi Lancer","Koenigsegg CCX","Pagani Zonda","Nissan 240SX"};
						format(gAdvert[slot][adText],100,"Обменяю автомобиль марки \"%s\" [%s]",car_name[listitem],car_tune[GetPVarInt(playerid, "auto_car_tune")]);
					}
				}
			}
			auto_news(slot,playerid);
		}
	case D_AUTONEWS_BUY_SIM: {
			if(!response) return 1;
			if(listitem == 0) {
				SetPVarString(playerid, "auto_sim_format", "NONE");
				D(playerid, D_AUTONEWS_BUY_SIM_3, DSI, ""P"Объявление | Купить | Сим-Карту", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести сим-карту:\n\n", "Ввод", "Отмена");
			}
			else D(playerid, D_AUTONEWS_BUY_SIM_2, DSI, ""P"Объявление | Купить | Сим-Карту", "\n\n"W"Введите формат номера сим-карты:\n"NO"*"G" Примечание: формат сим-карты: ABCDEF (6 букв)\n\n", "Ввод", "Отмена");
		}
	case D_AUTONEWS_BUY_SIM_2: {
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext) != 6 || !CheckSim(inputtext)) return D(playerid, D_AUTONEWS_BUY_SIM, DSI, ""P"Объявление | Купить | Сим-Карту", "\n\n"W"Введите формат номера сим-карты:\n"NO"*"G" Примечание: формат сим-карты: ABCDEF (6 букв)\n\n", "Ввод", "Отмена");
			SetPVarString(playerid, "auto_sim_format", inputtext);
			D(playerid, D_AUTONEWS_BUY_SIM_3, DSI, ""P"Объявление | Купить | Сим-Карту", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести сим-карту:\n\n", "Ввод", "Отмена");
		}
	case D_AUTONEWS_BUY_SIM_3: {
			if(!response) return DeletePVar(playerid, "auto_sim_format");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_SIM_3, DSI, ""P"Объявление | Купить | Сим-Карту", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести сим-карту:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new format_sim[7];
			GetPVarString(playerid,"auto_sim_format",format_sim,15);
			if(GetString(format_sim,"NONE")) {
				format(gAdvert[slot][adText],100,"Куплю сим-карту. Цена: $%d",strval(inputtext));
			}
			else format(gAdvert[slot][adText],100,"Куплю сим-карту формата \"%s\". Цена: $%d",format_sim,strval(inputtext));
			auto_news(slot,playerid);
		}
	case D_AUTONEWS_SELL_SIM: {
			if(!response) return 1;
			if(listitem == 0) {
				SetPVarString(playerid, "auto_sim_format", "NONE");
				D(playerid, D_AUTONEWS_SELL_SIM_3, DSI, ""P"Объявление | Продать | Сим-Карту", "\n\n"W"Введите стоимость, за которую Вы хотите продать сим-карту:\n\n", "Ввод", "Отмена");
			}
			else D(playerid, D_AUTONEWS_SELL_SIM_2, DSI, ""P"Объявление | Продать | Сим-Карту", "\n\n"W"Введите формат номера сим-карты:\n"NO"*"G" Примечание: формат сим-карты: ABCDEF (6 букв)\n\n", "Ввод", "Отмена");
		}
	case D_AUTONEWS_SELL_SIM_2: {
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext) != 6 || !CheckSim(inputtext)) return D(playerid, D_AUTONEWS_SELL_SIM, DSI, ""P"Объявление | Продать | Сим-Карту", "\n\n"W"Введите формат номера сим-карты:\n"NO"*"G" Примечание: формат сим-карты: ABCDEF (6 букв)\n\n", "Ввод", "Отмена");
			SetPVarString(playerid, "auto_sim_format", inputtext);
			D(playerid, D_AUTONEWS_SELL_SIM_3, DSI, ""P"Объявление | Продать | Сим-Карту", "\n\n"W"Введите стоимость, за которую Вы хотите продать сим-карту:\n\n", "Ввод", "Отмена");
		}
	case D_AUTONEWS_SELL_SIM_3: {
			if(!response) return DeletePVar(playerid, "auto_sim_format");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_SIM_3, DSI, ""P"Объявление | Продать | Сим-Карту", "\n\n"W"Введите стоимость, за которую Вы хотите продать сим-карту:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new format_sim[7];
			GetPVarString(playerid,"auto_sim_format",format_sim,15);
			if(GetString(format_sim,"NONE")) {
				format(gAdvert[slot][adText],100,"Продам сим-карту. Цена: $%d",strval(inputtext));
			}
			else format(gAdvert[slot][adText],100,"Продам сим-карту формата \"%s\". Цена: $%d",format_sim,strval(inputtext));
			auto_news(slot,playerid);
		}
	case D_AUTONEWS_CHANGE_SIM: {
			if(!response) return 1;
			if(listitem == 0) {
				if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
				if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
				new slot = -1;
				for(new i;i<MAX_ADVERT_COUNT;i++) {
					if(!gAdvert[i][adBusy]) {slot = i; break;}
				}
				if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
				gAdvertCount ++;
				GiveMoney(playerid,-1000,"подача объявления");
				format(gAdvert[slot][adText],100,"Обменяю сим-карту");
				auto_news(slot,playerid);
			}
			else D(playerid, D_AUTONEWS_CHANGE_SIM_2, DSI, ""P"Объявление | Обменять | Сим-Карту", "\n\n"W"Введите формат номера сим-карты:\n"NO"*"G" Примечание: формат сим-карты: ABCDEF (6 букв)\n\n", "Ввод", "Отмена");
		}
	case D_AUTONEWS_CHANGE_SIM_2: {
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext) != 6 || !CheckSim(inputtext)) return D(playerid, D_AUTONEWS_CHANGE_SIM_2, DSI, ""P"Объявление | Обменять | Сим-Карту", "\n\n"W"Введите формат номера сим-карты:\n"NO"*"G" Примечание: формат сим-карты: ABCDEF (6 букв)\n\n", "Ввод", "Отмена");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			format(gAdvert[slot][adText],100,"Обменяю сим-карту формата %s",inputtext);
			auto_news(slot,playerid);
		}
	case D_AUTONEWS_BUY_MOTO: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_moto_class", listitem);
			D(playerid, D_AUTONEWS_BUY_MOTO_2, DSI, ""P"Объявление | Купить | Мотоцикл", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести мотоцикл:\n\n", "Ввод", "Отмена");
		}
	case D_CNN_PHOTO: {
			if(!response) return true;
			if(GetPlayerWeapon(playerid) == 43) return SendClientMessage(playerid, COLOR_GREY, "Вы не использовали фотоаппарат");
			GivePlayerWeapon(playerid,43,30);
		}
	case D_AUTONEWS_BUY_MOTO_2: {
			if(!response) return DeletePVar(playerid, "auto_moto_class");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_MOTO_2, DSI, ""P"Объявление | Купить | Мотоцикл", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести мотоцикл:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			if(!GetPVarInt(playerid, "auto_moto_class")) {
				format(gAdvert[slot][adText],100,"Куплю мотоцикл. Цена: $%d",strval(inputtext));
			}
			else {
				new car_name[12][14] = {"No","Bike","BMX","Fagio","FCR-900","Freeway","Mountain-Bike","NRG-500","PCJ-600","Quad","Sanchez","Wayfarer"};
				format(gAdvert[slot][adText],100,"Куплю мотоцикл марки \"%s\". Цена: $%d",car_name[GetPVarInt(playerid, "auto_moto_class")],strval(inputtext));
			}
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_moto_class");
		}
	case D_AUTONEWS_SELL_MOTO: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_moto_class", listitem);
			D(playerid, D_AUTONEWS_SELL_MOTO_2, DSI, ""P"Объявление | Продать | Мотоцикл", "\n\n"W"Введите стоимость, за которую Вы хотите продать мотоцикл:\n\n", "Ввод", "Отмена");
		}
	case D_AUTONEWS_SELL_MOTO_2: {
			if(!response) return DeletePVar(playerid, "auto_moto_class");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_MOTO_2, DSI, ""P"Объявление | Продать | Мотоцикл", "\n\n"W"Введите стоимость, за которую Вы хотите продать мотоцикл:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			if(!GetPVarInt(playerid, "auto_moto_class")) {
				format(gAdvert[slot][adText],100,"Продам мотоцикл. Цена: $%d",strval(inputtext));
			}
			else {
				new car_name[12][14] = {"No","Bike","BMX","Fagio","FCR-900","Freeway","Mountain-Bike","NRG-500","PCJ-600","Quad","Sanchez","Wayfarer"};
				format(gAdvert[slot][adText],100,"Продам мотоцикл марки \"%s\". Цена: $%d",car_name[GetPVarInt(playerid, "auto_moto_class")],strval(inputtext));
			}
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_moto_class");
		}
	case D_AUTONEWS_CHANGE_MOTO: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			if(PI[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			if(!listitem) {
				format(gAdvert[slot][adText],100,"Обменяю мотоцикл");
			}
			else {
				new car_name[12][14] = {"No","Bike","BMX","Fagio","FCR-900","Freeway","Mountain-Bike","NRG-500","PCJ-600","Quad","Sanchez","Wayfarer"};
				format(gAdvert[slot][adText],100,"Обменяю мотоцикл марки \"%s\"",car_name[listitem]);
			}
			auto_news(slot,playerid);
		}
	case D_JOB_CLEAR: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(PI[playerid][pCash] < 500) {
				SendClientMessage(playerid, COLOR_GREY, "У Вас не достаточно денег для аренды авто для продажи еды");
				RemovePlayerFromVehicleAC(playerid);
				return true;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			GiveMoney(playerid,-500,"аренда уборщик улиц");
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			D(playerid, D_JOB_CLEAR_2, DSL,""P"Выбор маршрута",""P"1."W" Лос-Сантос №1\n"P"2."W" Лос-Сантос №2", "Выбрать", "Отмена");
		}
	case D_JOB_CLEAR_2: {
			if(!response) return D(playerid, D_JOB_CLEAR_2, DSL,""P"Выбор маршрута",""P"1."W" Лос-Сантос №1\n"P"2."W" Лос-Сантос №2", "Выбрать", "Отмена");
			SetPVarInt(playerid,"clear_id",GetPlayerVehicleID(playerid));
			switch(listitem) {
			case 0: SendOk(playerid,"Вы выбрали маршрут: Лос-Сантос №1. Начинайте уборку");
			case 1: SendOk(playerid,"Вы выбрали маршрут: Лос-Сантос №2. Начинайте уборку");
			}
			SetPVarInt(playerid,"route_job_cleaner",listitem);
			SetNextJobClearCP(playerid,GetPVarInt(playerid, "route_job_cleaner"));
		}
	case D_JOB_CLEAR_3: {
			if(response) return D(playerid, D_JOB_CLEAR_2, DSL,""P"Выбор маршрута",""P"1."W" Лос-Сантос №1\n"P"2."W" Лос-Сантос №2" , "Выбрать", "Отмена");
			SetVehicleToRespawn(TI[playerid][tArendaCar]);
		}
		
	}
	#if defined _hacker_inc
	if(hacker_OnDialogResponse(playerid, dialogid, response, listitem, inputtext)) return 1;
	#endif
	while(strfind(inputtext, "%s",true)!=-1) {
		strdel(inputtext,strfind(inputtext, "%s",true),strfind(inputtext, "%s",true)+2);
	}
	return true;
}//диалоги
public OnPlayerEnterDynamicCP(playerid, checkpointid) {
	if(SERIU[playerid][sID] != INVALID_PLAYER_ID) return 1;
	if (checkpointid == gPlayerProdCP[playerid] && GetPVarInt(playerid, "prod_id") && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 403 && !GetVehicleTrailer(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет цистерны с топливом");
		new string[286];
		new bizid = GetPVarInt(playerid, "prod_id") - 1;
		format(string, sizeof(string), ""W"Бизнес: "P"%s\n\n\
					"W"Требуется продуктов: "O"%d\n\
					"W"Доступно для разгрузки: "O"%d\n\
					"W"Введите кол-во продуктов для продажи:"
		, gBusiness[bizid][bizzName], gBusiness[bizid][bizzProdOrder], GetPVarInt(playerid, "count_prod"));
		return D(playerid, dProdSell, DSI, ""P"Доставка", string, "Продать", "Отмена");
	}
	if(checkpointid == EggSklad[playerid]) {
		new money = 2*SALARY_EGG;
		TI[playerid][tJobSalary] += money;
		new string[102];
		format(string,sizeof(string),""W"Вы принесли"P" 2 шт"W" яиц. Всего принесено:"P" %d шт",EggCount[playerid]);
		SendUse(playerid,string);
		new s_[24];
		format(s_,sizeof(s_),"MONEY:_$%d",TI[playerid][tJobSalary]);
		PlayerTextDrawSetString(playerid,work_td[playerid][1],s_);
		DestroyDynamicCP(EggSklad[playerid]);
	}
	return 1;
}
public OnPlayerLeaveDynamicCP(playerid, checkpointid) {
	return true;
}
public OnPlayerEnterDynamicArea(playerid, areaid) {
	if(!TI[playerid][tLogin]) return 1;
	if(SERIU[playerid][sID] != INVALID_PLAYER_ID) return 1;
	if(GetPVarInt(playerid,"ChangingSkin")) {
		A_SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
		cancel_skin(playerid);
	}
	new pstate = GetPlayerState(playerid);
	if(areaid >= TeleportPickup[0] && areaid <= TeleportPickup[sizeof(gTeleportsToD)-1] && pstate == PLAYER_STATE_ONFOOT) {
		new tp = areaid - TeleportPickup[0];
		switch(tp) {
		case 1: if(TI[playerid][tJobGun][0]) return SendClientMessage(playerid, COLOR_GREY, "Закончите работу на оружейном заводе");
		case 3: {
				if(PI[playerid][pHospital]) return SendClientMessage(playerid, COLOR_GREY, "Вы не прошли полный курс лечения");
				TI[playerid][tHeal] = false;
			}
		case 4: {
				if(!IsAMedic(playerid) && PI[playerid][pMember] != fWHITEHOUSE) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступен вход на крышу");
				if(PI[playerid][pHospital]) return SendClientMessage(playerid, COLOR_GREY, "Вы не прошли полный курс лечения");
				TI[playerid][tHeal] = false;
			}
		case 6: FreezePlayerForTime(playerid,3);
		case 7: {
				D(playerid, D_NEWS_EXI, DSL, ""P"Выход", "- На улицу\n- На крышу", "Выбрать", "Закрыть");
				return true;
			} 
		case 14: if(PI[playerid][pMember] != fFBI && PI[playerid][pMember] != fWHITEHOUSE && !TI[playerid][tEnter][fFBI]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в данной организации/У Вас нет пропуска");
		case 38: {
				if(!IsACop(playerid) && PI[playerid][pMember] != fWHITEHOUSE && !TI[playerid][tEnter][fWHITEHOUSE]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в гос. организациях/У Вас нет пропуска");
				SetPlayerWeather(playerid,27);
			}
		case 22: {
				if(PI[playerid][pMember] != fLCN && TI[playerid][tMasked] != fLCN && !TI[playerid][tEnter][fLCN]) {
					SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа");
					return true;
				}
				FreezePlayerForTime(playerid,2);
			}
		case 24, 62: if(PI[playerid][pMember] != fYAKUZA && TI[playerid][tMasked] != fYAKUZA && !TI[playerid][tEnter][fYAKUZA]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа");
		case 26: if(PI[playerid][pMember] != fRM && TI[playerid][tMasked] != fRM && !TI[playerid][tEnter][fRM]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа");
		case 28: {
				if(PI[playerid][pMember] != fBALLAS && !TI[playerid][tEnter][fBALLAS]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в данной организации/У Вас нет пропуска");
				new freezeSeconds = 0;
				switch (GetPlayerPing(playerid))
				{
				case 0 .. 49: freezeSeconds = 2;
				case 50 .. 199: freezeSeconds = 3;
				case 200 .. 499: freezeSeconds = 4;
				default: freezeSeconds = 5;
				}
				FreezePlayerForTime(playerid, freezeSeconds);
			}
		case 30: {
				if(PI[playerid][pMember] != fVAGOS && !TI[playerid][tEnter][fVAGOS]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в данной организации/У Вас нет пропуска");
				new freezeSeconds = 0;
				switch (GetPlayerPing(playerid))
				{
				case 0 .. 49: freezeSeconds = 2;
				case 50 .. 199: freezeSeconds = 3;
				case 200 .. 499: freezeSeconds = 4;
				default: freezeSeconds = 5;
				}
				FreezePlayerForTime(playerid, freezeSeconds);
			}
		case 32: {
				if(PI[playerid][pMember] != fGROVE && !TI[playerid][tEnter][fGROVE]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в данной организации/У Вас нет пропуска");
				new freezeSeconds = 0;
				switch (GetPlayerPing(playerid))
				{
				case 0 .. 49: freezeSeconds = 2;
				case 50 .. 199: freezeSeconds = 3;
				case 200 .. 499: freezeSeconds = 4;
				default: freezeSeconds = 5;
				}
				FreezePlayerForTime(playerid, freezeSeconds);
			}
		case 34: {
				if(PI[playerid][pMember] != fAZTEC && !TI[playerid][tEnter][fAZTEC]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в данной организации/У Вас нет пропуска");
				new freezeSeconds = 0;
				switch (GetPlayerPing(playerid))
				{
				case 0 .. 49: freezeSeconds = 2;
				case 50 .. 199: freezeSeconds = 3;
				case 200 .. 499: freezeSeconds = 4;
				default: freezeSeconds = 5;
				}
				FreezePlayerForTime(playerid, freezeSeconds);
			}
		case 36: {
				if(PI[playerid][pMember] != fRIFA && !TI[playerid][tEnter][fRIFA]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в данной организации/У Вас нет пропуска");
				new freezeSeconds = 0;
				switch (GetPlayerPing(playerid))
				{
				case 0 .. 49: freezeSeconds = 2;
				case 50 .. 199: freezeSeconds = 3;
				case 200 .. 499: freezeSeconds = 4;
				default: freezeSeconds = 5;
				}
				FreezePlayerForTime(playerid, freezeSeconds);
			}
		case 39: if(PI[playerid][pMember] != fWHITEHOUSE && !TI[playerid][tEnter][fWHITEHOUSE]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в данной организации/У Вас нет пропуска");
		case 40: FreezePlayerForTime(playerid,2);
		case 41: {
				if(player_to_race_lv[playerid] || player_to_game[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Участнику мероприятий запрещено покидать помещение");
			}
		case 74: if(!IsACop(playerid) && PI[playerid][pMember] != fWHITEHOUSE && !TI[playerid][tEnter][fWHITEHOUSE]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в гос. организациях/У Вас нет пропуска");
		case 44,72: if(!IsAArm(playerid) && !IsAMafiaAndGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете войти в служебное помещение");
		case 64: if(!TI[playerid][tTir]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет пропуска в тир");
		case 66: if(PI[playerid][pMember] != fLSPD) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете войти в служебное помещение");
		case 46: if(!TI[playerid][tTir]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет пропуска");
		case 47: {
				if(GetPVarInt(playerid,"gun_weap")) return SendClientMessage(playerid, COLOR_GREY, "Вы не закончили тренировку");
				TI[playerid][tTir] = false;
			}
		case 71: FreezePlayerForTime(playerid,2);
		case 70:
			{
				FreezePlayerForTime(playerid,2);
				TI[playerid][tSelectedBusinessID] = 1;
			}
		case 84: Enter_WareHouse(playerid);
		case 86: Enter_WareHouse(playerid);
		case 88: Enter_WareHouse(playerid);
		}
		FreezePlayerForTime(playerid,1);
		SetPlayerFacingAngle(playerid, gTeleportsToD[tp][tpExitPos_A]);
		SetPlayerPosAC(playerid, gTeleportsToD[tp][tpExitPos_X], gTeleportsToD[tp][tpExitPos_Y], gTeleportsToD[tp][tpExitPos_Z],gTeleportsToD[tp][tpExitWorld],gTeleportsToD[tp][tpExitInt]);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	if(areaid >= gPickID[0] && areaid <= gPickID[PICKUPS_COUNT-1] && pstate == PLAYER_STATE_ONFOOT) { // ПИКАПЫ
		new pick = areaid - gPickID[0];
		switch(pick) {
		case 0: {
				if(PI[playerid][pJob] != 9) return SendClientMessage(playerid, COLOR_GREY, "Вы не устраивались на работу инкассатора");
				if(!GetPVarInt(playerid,"inc_start")) {
					D(playerid,D_JOB_INC,DSM,""P"Работа инкассатора",""W"Вы действительно хотите начать работу?", "Да", "Нет");
				}
				else D(playerid,D_JOB_INC,DSM,""P"Работа инкассатора",""W"Вы хотите завершить рабочий день?", "Да", "Нет");
			}
		case 1: D(playerid,D_JOB,DSTH,""P"Трудоустройство",""W"Работа\t"W"Требуемый уровень\n1. Водитель автобуса\t"P"2 лвл\n2. Механик\t"P"3 лвл\n3. Развозчик еды\t"P"3 лвл\t"P"4 лвл\n4. Мойщик дорог\t"P"4 лвл\n5. Чистильщик канализаций\t"P"3 лвл\n6. Таксист\t"P"2 лвл\n7. Инкассатор\t"P"2 лвл\n8. Развозчик продуктов/топлива\t"P"2 лвл\n{F0BF39}Уволиться с работы", "Выбрать", "Закрыть");
		case 2: {
				new price_car,price_boat,price_air;
				price_car = 500;
				price_air = 15000;
				price_boat = 10000;
				new string[512];
				format(string,sizeof(string),""P"1."W" Водительское удостоверение [%s] - "ORANGE"$%d\n"P"2."W" Лицензия на полёты [%s] - "ORANGE"$%d\n"P"3."W" Лицензия на водный транспорт [%s] - "ORANGE"$%d",lic[playerid][0] == 1 ? (""P"Имеется"W""):(""G"Отсутствует"W""),price_car,lic[playerid][1] == 1 ? (""P"Имеется"W""):(""G"Отсутствует"W""),price_air,lic[playerid][2] == 1 ? (""P"Имеется"W""):(""G"Отсутствует"W""),price_boat,lic[playerid][3] == 1 ? (""P"Имеется"W""):(""G"Отсутствует"W""));
				D(playerid,D_LICENSES,DSL,""P"Покупка лицензий",string, "Купить", "Отмена");
			}
		case 3: {
				D(playerid,D_TRAILER_BUY,DSM, ""P"Дом на колесах",""W"\n\nСтоимость: "ORANGE"1000000$"W"\n\nВ доме на колесах можно пользоваться шкафом, парковать в удобном месте,\nа также использовать его, как основное место жительства\n\nВы действительно хотите купить"GREEN" дом на колесах?\n\n", "Купить", "Закрыть");
			}
		case 4: {
				if(PI[playerid][pJob] != 6) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете чистильщиком канализаций");
				if(GetPVarInt(playerid,"kanal_skin") == 0) D(playerid,D_JOB_KANAL_2,DSM, ""P"Раздевалка",""W"Вы хотите переодеться в рабочую одежду?","Да","Закрыть");
				else D(playerid,D_JOB_KANAL_2,DSM, ""P"Раздевалка",""W"Вы хотите переодеться в повседневнюю одежду?","Да","Закрыть");
			}
		case 5: {
				if(TI[playerid][tBuild] > 0 || PI[playerid][pJob] == 3) {
					D(playerid, D_JOB_CONST, DSM, ""P"Работа", ""W"Вы действительно хотите завершить работу на стройке?", "Да", "Закрыть");
					return true;
				}
				D(playerid, D_JOB_CONST, DSTH, ""P"Список доступных работ", ""W"Название работы\t"W"Опыт работы\nУборщик\tНе требуется\nГрузчик\t100 опыта\nСварщик\t300 опыта", "Далее", "Закрыть");
			}
		case 6: {
				if(!IsValidVehicle(TI[playerid][tBoatEnter]))
				{
					SetCameraBehindPlayer(playerid);
					TI[playerid][tBoatEnter] = INVALID_VEHICLE_ID;
					SetPlayerPosAC(playerid,GetPVarFloat(playerid,"ex_cord_x"),GetPVarFloat(playerid,"ex_cord_y"),GetPVarFloat(playerid,"ex_cord_z"), 0, 0);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					FreezePlayerForTime(playerid,3);
					DeletePVar(playerid,"ex_cord_x"),DeletePVar(playerid,"ex_cord_y"),DeletePVar(playerid,"ex_cord_z");
					SendClientMessage(playerid, COLOR_GREY, "Владелец лодки вышел с сервера, Вы возвращены на место захода в яхту");
					return true;
				}
				new Float:bd_x, Float:bd_y, Float:bd_z, Float:vehicle_angle;
				GetBoatDoorPos(TI[playerid][tBoatEnter], bd_x, bd_y, bd_z);
				GetVehicleZAngle(TI[playerid][tBoatEnter], vehicle_angle);
				SetPlayerPosAC(playerid, bd_x, bd_y, bd_z, 0, 0);
				SetPlayerFacingAngle(playerid, vehicle_angle + 180);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				FreezePlayerForTime(playerid,3);
				SetCameraBehindPlayer(playerid);
				TI[playerid][tBoatEnter] = INVALID_VEHICLE_ID;
			}
		case 7,13,17,42,50: {
				if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в банде");
				D(playerid,D_FAQ_BAND,DSL, ""P"FAQ Помощь",""ORANGE"-"W" TOП захватчиков банды\n"ORANGE"-"W" Квесты\n"ORANGE"-"W" Чем заняться в банде?","Выбрать","Закрыть");
			}
		case 8: {
				D(playerid,D_HOSPITAL,DSL,""P"Регистратура", ""P"1."W" Что это за место?\n"P"2."W" Трансгендерный переход\n"P"3."W" Получение медицинской карты\n"P"4."W" Лечение наркозависимости","Выбрать","Отмена");
			}
		case 9: {
				new string[105];
				format(string,sizeof(string),""W"Вы хотите "ORANGE"%s"W" работу крупье?", (GetPVarInt(playerid,"krup")) ? ("закончить") : ("начать"));
				D(playerid,D_CASINO,DSM, ""P"Казино",string,"Да","Нет");
			}
		case 10: {
				D(playerid,DIALOG_INFO,DSL, ""P"Информация","1. О проекте\n2. Защита аккаунта\n3. Основы игры","Выбрать","Закрыть");
			}
		case 11: {
				if(!IsANews(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник новостей");
				D(playerid, D_CNN_PHOTO, DSM, ""P"CNN",""W" Вы хотите взять фотоаппарат на 30 снимков?", "Да", "Нет");
			}
		case 12: {
				if(PI[playerid][pLevel] != 1) return SendClientMessage(playerid, COLOR_GREY, "Только для новичков (1 уровень)");
				if(GetPVarInt(playerid,"anti_eat") > unix) return SendClientMessage(playerid, COLOR_GREY, "Можно перекусить один раз в минуту");
				if(PI[playerid][pSatiety] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не голодны");
				SetHealth(playerid, 100);
				GiveFullness(playerid, 30);
				MeAction(playerid,"перекусил(а)");
				ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
				SetPVarInt(playerid, "anti_eat", unix+60);
			}
		case 14: GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~TAKE:~g~ Y~w~ / PUT:~r~ N", 3000, 3);
		case 15: {
				new room = TI[playerid][tSelectedRoom];
				SetPlayerPosAC(playerid,Apartment[room][aX], Apartment[room][aY], Apartment[room][aZ], Apartment[room][apID], 4);
				TI[playerid][tTPpick] = true;
				FreezePlayerForTime(playerid,3);
			}
		case 16: {
				if(!GetPVarInt(playerid,"gun_weap")) D(playerid, D_AMMOSG, DSM, ""P"Тир",""W" Вы действительно хотите начать тренировку?", "Да", "Нет");
				else D(playerid, D_AMMOSG, DSM, ""P"Тир",""W" Вы действительно хотите закончить тренировку?", "Да", "Нет");
			}
		case 19: {
				if(!TI[playerid][tJobGun][0]) {
					static const f_str[] = "\n\n"W"Вы действительно хотите начать работу "ORANGE"сборщик оружия?\n"W"Стоимость сборки 1 ящика - "GREEN"$%d\n"W"Примерное время работы - "P"25 сек\n\n";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,SALARY_ARMS);
					D(playerid,D_JOB_GUNS,DSM, ""P"Сборщик оружия",string,"Да","Нет");
				}
				else {
					static const f_str[] = "\n\n"W"Вы хотите закончить работу и забрать "GREEN"$%d?\n\n";
					new string[sizeof(f_str) +1 + (-2 + 7)];
					format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
					D(playerid,D_JOB_GUNS,DSM, ""P"Завершение работы",string,"Да","Нет");
				}
			}
		case 20: {
				if(!TI[playerid][tJobGun][0]) return 1;
				if(TI[playerid][tJobGun][1] != 1 || TI[playerid][tJobGun][2]) return 1;
				SendOk(playerid,"Вы взяли заготовку. Пройдите к свободному столу для сборки оружия");
				new objectmodel = GunWorkWeapon[Random(0,6)];
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 8)) SetPlayerAttachedObject(playerid,8,objectmodel,6);
				SetPVarInt(playerid,"pgunmodel",objectmodel);
				TI[playerid][tJobGun][1] = 2;
			}
		case 22: {
				if(!TI[playerid][tJobSad][0]) return 1;
				if(GetPVarInt(playerid,"bailer_1") == 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас в руках лейка");
				if(GetPVarInt(playerid,"bailer_2") == 1 || GetPVarInt(playerid,"bailer_3") == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже взяли ящик");
				SetPlayerAttachedObject(playerid, 4, 19639, 5, 0.342999,-0.158999,0.041999, 0.000000,177.799957,-0.300001, 1.000000,0.520000,0.699000);
				SetPVarInt(playerid,"bailer_2",1);
			}
		case 23: {
				if(!TI[playerid][tJobSad][0]) return SendClientMessage(playerid, COLOR_GREY, "Необходимо надеть рабочую форму");
				if(GetPVarInt(playerid,"bailer") == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже взяли лейку");
				SetPlayerAttachedObject(playerid, 7, 19621, 6, 0.068000, 0.040999, 0.001000, 0.000000, 0.000000, 94.299972, 1.000000, 1.000000, 1.000000); //
				SetPVarInt(playerid,"bailer",1);
			}
		case 24:
			{
				if(TI[playerid][tJobSad][0] == 1)
				{
					static const f_str[] = "\n\n"W"Вы хотите закончить работу и забрать "GREEN"$%d?\n\n";
					new string[sizeof(f_str) +1 + (-2 + 7)];
					format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
					D(playerid,D_JOB_SAD,DSM, ""P"Завершение работы",string,"Да","Нет");
					return true;
				}
				if(GetPVarInt(playerid,"egg_start") == 1) return D(playerid,D_FARM_END_1,DSM, ""P"Завершение работы","\n\n\t"YELLOW"Выберите способ оплаты\n\n"G"При выборе оплаты на банковский счёт,\nзаработная плата придёт во время PayDay\n\n","Наличными","Банк");
				D(playerid,D_FARM,DSL, ""P"Ферма",""P"1."W" Работа в яблочном саду\n"P"2."W" Сборщик яиц","Далее","Закрыть");
			}
		case 25: {
				static const f_str[] =
				""GREEN"1.Общие положения:"W"\n\
				1.1 Участники дорожного движения обязаны знать и неукоснительно выполнять требования этих Правил,\n\
				\tа также быть взаимно вежливыми.\n\
				1.2 Обгон транспортного средства разрешен только с левой стороны, при этом водитель обязан убедиться,\n\
				\tчто встречная полоса свободна на достаточном для обгона расстоянии.\n\
				1.3 Управлять транспортным средством имеет право особа достигшая возраста 18 лет при этом имея вод.удостоверение.\n\
				1.4 При ДТП водители обязаны немедленно остановиться на месте случившегося, вызвать и дождаться полицию.\n\
				1.5 Ближний свет фар требуется включать в любое время суток.\n\
				1.6 Гос. Номера должны быть всегда видимыми спереди и сзади.\n\n\
				"GREEN"2.Скорость движения:"W"\n\
				2.1 В пределах города разрешается движение транспортных средств со скоростью не более 60 км/ч\n\
				2.2 За пределами города разрешается движение транспортных средств со скоростью не более 120 км/ч\n\n\
				"GREEN"3. Остановка и стоянка:"W"\n\
				3.1 Остановка на магистрали разрешена только на спец. площадках для стоянки\n\n\
				"GREEN"4. Спец. Сигналы:"W"\n\
				4.1 В случае приближения транспортного средства с включенным проблесковым маячком и (или)\n\
				\tспециальным звуковым сигналом водители других транспортных средств,\n\
				\tкоторые могут создавать ему препятствие для движения, обязаны уступить ему дорогу.";
				new strings[sizeof(f_str)];
				format(strings,sizeof(strings),"%s",f_str);
				D(playerid,DIALOG_NONE,DSM, ""P"Правила Дорожного Движения",strings,"Закрыть","");
			}
		case 28: ShowGetGun(playerid);
		case 29: D(playerid,D_COP_DIALOG,DSL,""P"Отдел полиции г. ЛС",""P"1."W" Получить номерные знаки\n"P"2."W" Купить лицензию на оружие ("O"50.000$"W")\n"P"3."W" Сдаться с повинной" ,"Выбрать","Закрыть");
		case 30: return true;
		case 31: return true;
		case 32, 69: {
				if(PI[playerid][pMember] != fLSPD && PI[playerid][pMember] != fRCSD) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в полицейском департаменте");
				new string[128];
				format(string,sizeof(string),"- %s"W" рабочий день\n- Взять оружие\n- Снаряжение",(!start_work[playerid]) ? (""ORANGE"Начать") : (""ORANGE"Закончить"));
				D(playerid,D_LSPD_WEAP, DSL, ""P"Раздевалка",string, "Выбрать", "Закрыть");
			}
		case 21,33..36: {
				new vw = GetPlayerVirtualWorld(playerid);
				if(pick == 32 && PI[playerid][pMember] != fLSPD) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Полиции г. ЛС");
				if(pick == 33 && PI[playerid][pMember] != fFBI) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в ФБР");
				if(pick == 34 && vw == 20 && PI[playerid][pMember] != fMEDICLS) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Больнице г. ЛС");
				if(pick == 34 && vw == 21 && PI[playerid][pMember] != fMEDICSF) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Больнице г. СФ");
				if(pick == 34 && vw == 22 && PI[playerid][pMember] != fMEDICLV) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Больнице г. ЛВ");
				if(pick == 35 && vw == 59 && PI[playerid][pMember] != fARMYLS) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Армии г. СФ");
				if(pick == 36 && PI[playerid][pMember] != fLSNEWS) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Радиоцентре г. ЛС");
				if(pick == 36 && vw == 11 && PI[playerid][pMember] != fSFNEWS) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Радиоцентре г. СФ");
				if(pick == 36 && vw == 12 && PI[playerid][pMember] != fLVNEWS) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Радиоцентре г. ЛВ");
				if(pick == 21 && PI[playerid][pMember] != fINSTRUCTORS) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Автошколе");
				new string[128];
				format(string,sizeof(string),"\n\n"W"Вы действительно хотите %s"W" рабочий день?\n\n",(!start_work[playerid]) ? (""ORANGE"начать") : (""ORANGE"закончить"));
				D(playerid,D_WORK,DSM, ""P"Раздевалка",string,"Да","Нет");
			}
		case 37: {
				TI[playerid][tSelectedBusinessID] = 51;
				new id = TI[playerid][tSelectedBusinessID];
				new string[128];
				format(string,sizeof(string),""W"Наименование\t"W"Стоимость\nПиво \t$%d\nВодка \t$%d\nШампанское \t$%d\nВино \t$%d\nТекила \t$%d\nКоньяк \t$%d", gBusiness[id][bizzPrice] * 10 * gBarCosts[0],gBusiness[id][bizzPrice] * 10 * gBarCosts[1],gBusiness[id][bizzPrice] * 10 * gBarCosts[2],gBusiness[id][bizzPrice] * 10 * gBarCosts[3],gBusiness[id][bizzPrice] * 10 * gBarCosts[4],gBusiness[id][bizzPrice] * 10 * gBarCosts[5]);
				D(playerid, D_BIZZ_BAR, DSTH, ""P"Меню", string, "Купить", "Отмена");
				return true;
			}
		case 38: {
				if(GetPlayerVirtualWorld(playerid) == 59) {
					D(playerid,D_VIEW_CARS,DSM, ""P"Автосалон",""W"Добро пожаловать в Автосалон"GREEN" спорт класса"W"\n\nВ нашем автосалоне присутствует большой выбор транспорта\n\n"G">>"W" Вы хотите перейти к выбору автомобилей?","Далее","Закрыть");
					SetPVarInt(playerid,"get_class",1);
				}
				if(GetPlayerVirtualWorld(playerid) == 42) {
					D(playerid,D_VIEW_CARS_1,DSL, ""P"Выберите класс",""P"1."W" Эконом класс\n"P"2."W" Средний класс","Далее","Отмена");
				}
				if(GetPlayerVirtualWorld(playerid) == 43) {
					D(playerid,D_VIEW_CARS,DSM, ""P"Автосалон",""W"Добро пожаловать в"GREEN" мото-вело"W" салон\n\nВ нашем автосалоне присутствует большой выбор транспорта\n\n"G">>"W" Вы хотите перейти к выбору автомобилей?","Далее","Закрыть");
					SetPVarInt(playerid,"get_class",4);
				}
			}
		case 39:
			{
				new string[250], nam_r[30], nam_t[30];
				if(RingInfo[0][rgPlayer][0] == -1) format(nam_r,sizeof(nam_r),"None");
				else format(nam_r,sizeof(nam_r),"%s",player_name[RingInfo[0][rgPlayer][0]]);
				if(RingInfo[0][rgPlayer][1] == -1) format(nam_t,sizeof(nam_t),"None");
				else format(nam_t,sizeof(nam_t),"%s",player_name[RingInfo[0][rgPlayer][1]]);
				format(string,sizeof(string),""W"На ринге сейчас"NO" %s"W" VS"NO" %s"W"\n\nВсего боев: "NO"%d"W"\nКоличество выигранных боев: "NO"%d"W"\nКоличество проигранных боев: "NO"%d",nam_r,nam_t,PI[playerid][pFight_on]+PI[playerid][pFight_off],PI[playerid][pFight_on],PI[playerid][pFight_off]);
				D(playerid,DIALOG_NONE,DSM, ""P"Информация",string,"Скрыть","");
				return true;
			}
		case 40: {
				if(PI[playerid][pMember] != fWHITEHOUSE) return 1;
				new string[128];
				format(string,sizeof(string),"- %s"W" рабочий день\n- Взять оружие",(!start_work[playerid]) ? (""ORANGE"Начать") : (""ORANGE"Закончить"));
				D(playerid,D_MAYOR_INFO, DSL, ""P"Правительство",string, "Выбрать", "Закрыть");
			}
		case 41: {
				if(!TI[playerid][tJobWood][0]) {
					static const f_str[] = "\n\n"W"Вы действительно хотите начать работу "ORANGE"лесоруб?\n"W"Стоимость спила 1 дерева - "GREEN"$%d\n"W"Примерное время работы - "P"30 сек\n\n";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,SALARY_WOOD);
					D(playerid,D_JOB_WOOD,DSM, ""P"Лесопилка",string,"Да","Нет");
				}
				else {
					static const f_str[] = "\n\n"W"Вы хотите закончить работу и забрать "GREEN"$%d?\n\n";
					new string[sizeof(f_str) +1 + (-2 + 7)];
					format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
					D(playerid,D_JOB_WOOD,DSM, ""P"Завершение работы",string,"Да","Нет");
				}
			}
		case 43: {
				if(PI[playerid][pMember] != fFBI) return SendClientMessage(playerid, COLOR_GREY, "Вы не агент FBI");
				D(playerid, D_SPY_3, DSL, ""P"FBI", "- Маскировка\n- Взять оружие\n- Переодеться", "Выбрать", "Закрыть");
			}
		case 44..48: {
				switch(pick) {
				case 44: if(PI[playerid][pMember] != fBALLAS) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к этому складу");
				case 45: if(PI[playerid][pMember] != fVAGOS) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к этому складу");
				case 46: if(PI[playerid][pMember] != fGROVE) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к этому складу");
				case 47: if(PI[playerid][pMember] != fAZTEC) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к этому складу");
				case 48: if(PI[playerid][pMember] != fRIFA) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к этому складу");
				}
				if(GetPVarInt(playerid,"ograbl_") == 1)
				{
					RemovePlayerAttachedObject(playerid,5);
					DeletePVar(playerid,"ograbl_");
					FI[PI[playerid][pMember]][fBank] += 75000;
					UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);

					static const f_str[] = "[F] %s[%d] положил(а) в банк банды: "GREEN"$%d";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];

					format(string,sizeof(string),f_str,player_name[playerid],playerid,75000);
					SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
					MeAction(playerid,"положил(а) деньги на склад");
					return true;
				}
				new gunamount = GetPVarInt(playerid,"carrygun")*1000;
				if(gunamount) {
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(FI[PI[playerid][pMember]][fMats] + gunamount > 300000) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно места");
					FI[PI[playerid][pMember]][fMats] += gunamount;
					UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);
					InLoadFrac[PI[playerid][pMember]] = false;
					return 1;
				}
				else if(IsAGang(playerid)) return D(playerid,D_BAND_STOCK,DSL,""P"Склад",""P"1."W" Положить деньги в банк банды\n"P"2."W" Снять деньги с банка банды\n"P"3."W" Положить материалы на склад\n"P"4."W" Взять материалы со склада\n"P"5."W" Положить наркотики на склад\n"P"6."W" Взять наркотики со склада\n"P"7."W" Взять оружие", "Выбрать", "Закрыть");
			}
        case 77,78: {
				if(GetPVarInt(playerid,"ograbl_") == 1)
				{
					RemovePlayerAttachedObject(playerid,5);
					DeletePVar(playerid,"ograbl_");
					FI[PI[playerid][pMember]][fBank] += 75000;
					UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);

					static const f_str[] = "[F] %s[%d] положил(а) в банк MC: "GREEN"$%d";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];

					format(string,sizeof(string),f_str,player_name[playerid],playerid,75000);
					SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
					MeAction(playerid,"положил(а) деньги на склад");
					return true;
				}
				new gunamount = GetPVarInt(playerid,"carrygun")*1000;
				if(gunamount) {
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(FI[PI[playerid][pMember]][fMats] + gunamount > 300000) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно места");
				 	FI[PI[playerid][pMember]][fMats] += gunamount;
					UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);
					InLoadFrac[PI[playerid][pMember]] = false;
					return 1;
				}
				else if(IsABikers(playerid)) {
					if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
					return D(playerid,D_BIKER_STOCK,DSL,""P"Склад",""P"1."W" Положить деньги в банк MC\n"P"2."W" Снять деньги с банка MC\n"P"3."W" Положить материалы на склад\n"P"4."W" Взять материалы со склада\n"P"5."W" Положить наркотики на склад\n"P"6."W" Взять наркотики со склада\n"P"7."W" Взять оружие", "Выбрать", "Закрыть");
				}
			}
			case 79:
			{
				if(IsABikers(playerid))
				{
					SetPlayerPos(playerid, 789.3809,2507.1846,1502.0000);
					SetPlayerVirtualWorld(playerid, 92);
					SetPlayerInterior(playerid, 92);
					
				}
			}
			case 80: {
				if(IsABikers(playerid))
				{
					SetPlayerPos(playerid, 2353.5300,247.3599,26.4466);
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid, 0);

				}
			}
		case 26,49,27: {
				switch(pick) {
				case 26: if(PI[playerid][pMember] != fLCN) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к этому складу");
				case 49: if(PI[playerid][pMember] != fYAKUZA) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к этому складу");
				case 27: if(PI[playerid][pMember] != fRM) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к этому складу");
				}
				if(GetPVarInt(playerid,"ograbl_") == 1)
				{
					RemovePlayerAttachedObject(playerid,5);
					DeletePVar(playerid,"ograbl_");
					FI[PI[playerid][pMember]][fBank] += 75000;
					UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);

					static const f_str[] = "[F] %s[%d] положил(а) в банк банды: "GREEN"$%d";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];

					format(string,sizeof(string),f_str,player_name[playerid],playerid,75000);
					SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
					MeAction(playerid,"положил(а) деньги на склад");
					return true;
				}
				new gunamount = GetPVarInt(playerid,"carrygun")*500;
				if(gunamount) {
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(FI[PI[playerid][pMember]][fMats] + gunamount > 300000) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно места");
					else FI[PI[playerid][pMember]][fMats] += gunamount;
					UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);
					InLoadFrac[PI[playerid][pMember]] = false;
					return 1;
				}
				if(IsAMafia(playerid)) return D(playerid,D_MAFIA_STOCK,DSL,""P"Склад",""P"1."W" Положить деньги в банк мафии\n"P"2."W" Снять деньги с банка мафии\n"P"3."W" Положить материалы на склад\n"P"4."W" Взять материалы со склада\n"P"5."W" Положить наркотики на склад\n"P"6."W" Взять наркотики со склада", "Выбрать", "Закрыть");
			}
		case 51,52,53: return dialog_bank(playerid);
		case 54..57,72,75: {
				new houseid = TI[playerid][tSelectHouse];
				SetPlayerPosAC(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][0],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][1],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][2],houseid+1,hinterior_info[gHouses[houseid][houseHint]][h_interior]);
				SetPlayerFacingAngle(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][3]);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, hinterior_info[gHouses[houseid][houseHint]][h_interior]);
				SetPlayerVirtualWorld(playerid, houseid+1);
				TI[playerid][tInHouse] = true;
			}
		case 58: return true;
		case 59,70,71: D(playerid,D_FAQ_MAFIA,DSL, ""P"FAQ Помощь",""ORANGE"-"W" TOП захватчиков мафии\n"ORANGE"-"W" Квесты\n"ORANGE"-"W" Чем заняться в мафии?","Выбрать","Закрыть");
		case 60: {
				SetPlayerPosAC(playerid,1680.2532,693.7829,589.5544,GetPlayerVirtualWorld(playerid),4);
				SetPlayerFacingAngle(playerid,179.9865);
				SetCameraBehindPlayer(playerid);
				FreezePlayerForTime(playerid,2);
			}
		case 61: {
				SetPlayerPosAC(playerid,748.7523,-113.2910,1180.7050,GetPlayerVirtualWorld(playerid),4);
				SetPlayerFacingAngle(playerid,85.3832);
				SetCameraBehindPlayer(playerid);
				FreezePlayerForTime(playerid,3);
			}
		case 62..66: {
				switch(pick) {
				case 62: if(PI[playerid][pMember] != fBALLAS) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к этой аптечки");
				case 63: if(PI[playerid][pMember] != fVAGOS) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к этой аптечки");
				case 64: if(PI[playerid][pMember] != fGROVE) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к этой аптечки");
				case 65: if(PI[playerid][pMember] != fAZTEC) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к этой аптечки");
				case 66: if(PI[playerid][pMember] != fRIFA) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к этой аптечки");
				}
				if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
				if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
					new str[128];
					format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
					SendClientMessage(playerid, COLOR_GREY, str);
					return 1;
				}
				if(!FI[PI[playerid][pMember]][fHealth]) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно аптечек");
				if(GetPVarInt(playerid, "gang_heal") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Брать аптечку можно один раз в 15 секунд");
				new Float:health;
				GetPlayerHealth(playerid,health);
				if(health >= 160) return SendClientMessage(playerid, COLOR_GREY, "Вы здоровы");
				if(health + 60.0 < 160.0 ) health += 60.0;
				else health = 160.0;
				SetHealth(playerid,health);
				MeAction(playerid,"использовал(а) аптечку");
				SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
				ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
				FI[PI[playerid][pMember]][fHealth] --;
				UpdateFraction(PI[playerid][pMember],"Health",FI[PI[playerid][pMember]][fHealth]);
				SetPVarInt(playerid, "gang_heal", gettime()+15);

				static const f_str[] = "[F] %s[%d] использовал аптечку";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];
				
				format(string,sizeof(string),f_str,player_name[playerid],playerid);
				SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
				return 1;
			}
		case 73:
			{
				if(!TI[playerid][tClothesWork][0]) {
					static const f_str[] = "\n\n"W"Вы действительно хотите начать работу "ORANGE"портного?\n"W"Стоимость изготовления одной одежды - "GREEN"$20\n"W"Примерное время работы - "P"10 сек"W"\n\nПри изготовлении 1 одежды, уменьшается "G"10 секунд"W" срока заключения\n";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str);
					D(playerid,D_JOB_PORTN,DSM, ""P"Работа портного",string,"Да","Нет");
				}
				else {
					static const f_str[] = "\n\n"W"Вы хотите закончить работу и забрать "GREEN"$%d?\n\n";
					new string[sizeof(f_str) +1 + (-2 + 7)];
					format(string,sizeof(string),f_str,GetPVarInt(playerid,"zp_clothes"));
					D(playerid,D_JOB_PORTN,DSM, ""P"Завершение работы",string,"Да","Нет");
				}
			}
		case 74: {
				if(!PI[playerid][pJailTime]) return true;
				if(PI[playerid][pJailTime] <= 250) return SendClientMessage(playerid, COLOR_GREY, "Вас освободят скоро досрочно!");
				D(playerid,D_JAIL_3,DSM, ""P"Взлом двери",""W"Вы действительно хотите взломать дверь ключем?\n\n"G"* Об этом узнают государственные структуры!","Далее","Закрыть");
			}
		case 76:{
	 			D(playerid, D_BILBORDS, DSL, ""P"Рекамное агентство", ""P"1."W" Арендовать билборд", "Выбрать", "Отмена");
			}
		case 67,68: {
				if(!TI[playerid][tJobWood][1]) return 1;
				ClearAnimations(playerid);
				RemovePlayerAttachedObject(playerid,9);
				DisablePlayerCheckpoint(playerid);
				TI[playerid][tJobWood][1] = 0;
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				SetPlayerAttachedObject(playerid,8,341,6);
				
				if(pick == 67) {
					new obj = CreateDynamicObject(1463, 1062.2775, -304.3090, 74.2226, 0.000000, 0.000000, 49.499992);
					SetGVarInt("WoodConv",1,obj);
					MoveDynamicObject(obj,1056.8375, -304.3090, 74.2226, 1, 0.000000, 0.000000, 49.499992);
				}
				else if(pick == 68) {
					new obj = CreateDynamicObject(1463, 1062.5474, -296.1025, 74.2431, 0.000000, 0.000000, 49.499992);
					SetGVarInt("WoodConv",1,obj);
					MoveDynamicObject(obj,1056.8074, -296.1025, 74.2431, 1, 0.000000, 0.000000, 49.499992);
				}
				TI[playerid][tJobWood][3] = 1;
				TI[playerid][tJobSalary] += SALARY_WOOD;
				
				PI[playerid][pDress] += 1;
				UpdatePlayerData(playerid,"dress",PI[playerid][pDress]);
				
				if(PI[playerid][pFamily]) {
					gFamily[PI[playerid][pFamily]-1][famTalon] += 1;
					UpdateFamily(PI[playerid][pFamily],"talon",gFamily[PI[playerid][pFamily]-1][famTalon]);
					PI[playerid][pFamTalon] += 1, UpdatePlayerData(playerid, "talon_fam", PI[playerid][pFamTalon]);
				}

				if(QuestProgress[playerid][49] < 10 && AcceptQuest[playerid][49] != 0) QuestProgress[playerid][49] ++,save_quest(playerid,49);
				if(QuestProgress[playerid][49] == 10 && AcceptQuest[playerid][49] != 0) {
					D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
				}
				
				new string[24];
				format(string,sizeof(string),"MONEY:_$%d",TI[playerid][tJobSalary]);
				PlayerTextDrawSetString(playerid,work_td[playerid][1],string);
			}
		}
	}
	else if(areaid >= gHouseArea[0] && areaid <= gHouseArea[gHouseCount-1] && pstate == PLAYER_STATE_ONFOOT) {
		if(TI[playerid][tTPpick]) {
			TI[playerid][tTPpick] = false;
			return 1;
		}
		new houseid = areaid - gHouseArea[0];
		if(houseid == -1) return true;
		TI[playerid][tSelectHouse] = houseid;
		if(gHouses[houseid][houseRob] == playerid && GetPVarInt(playerid,"load_rob"))
		{
			if(RobPlayer[playerid][AttachObj]) return 1;
			ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
			switch(random(14)) {
			case 0: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2317, 4, 0.1169, -0.4219, 0.0739, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV5"
			case 1: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 1518, 4, 0.0829, -0.4219, 0.0739, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV4"
			case 2: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2648, 4, 0.0689, -0.4219, 0.0739, -68.1999, -115.2999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV3"
			case 3: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2318, 4, 0.0689, -0.4219, 0.0739, -68.1999, -115.2999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV2"
			case 4: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2320, 4, 0.1299, -0.4219, 0.0739, -68.1999, -115.2999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV1"
			case 5: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 19921, 4, 0.3669, -0.5089, 0.0979, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "yashik"
			case 6: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 1738, 4, 0.1219, -0.4249, 0.0419, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "truba"
			case 7: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2124, 4, 0.1580, -0.4499, 0.0710, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "stul2"
			case 8: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2120, 4, 0.2660, -0.3600, 0.1139, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "stul"
			case 9: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2102, 4, 0.3619, -0.3669, 0.1609, -64.8999, -120.6999, -72.7999, 0.9789, 0.9900, 1.0000, 0, 0); // "muzlo"
			case 10: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2421, 4, 0.2540, -0.1539, 0.3339, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "Mikrov"
			case 11: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 1727, 4, 0.5619, -0.2700, -0.1969, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "kreslo"
			case 12: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 19614, 4, 0.3109, -0.2999, 0.1609, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "huyznaetcheeto"
			case 13: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2226, 4, 0.3699, -0.3359, 0.1049, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "bumbox"
			case 14: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 11743, 4, 0.3109, -0.2999, 0.1609, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "blender"
			}
			return true;
		}
		//TI[playerid][tTPpick] = true;
		new classname[20], mes2[200];
		switch(gHouses[houseid][houseClass]) {
		case 0:classname = "Эконом";
		case 1:classname = "Cредний";
		case 2:classname = "Элитный";
		case 3:classname = "Особняк";
		default: classname = "Неизвестно";
		}
		if(!gHouses[houseid][houseOwner]) {			
			format(mes2,sizeof(mes2),""W"Цена: "ORANGE"$%d\n\
									"W"Класс: "P"%s\n\
									"W"Номер дома: "P"№%d",
			gHouses[houseid][housePrice],
			classname,
			gHouses[houseid][houseID]);
			D(playerid,D_HOUSE,DSM, ""P"Дом",mes2,"Купить","Отмена");
		}
		else {
			format(mes2,sizeof(mes2),""W"Владелец: "ORANGE"%s\n\
									"W"Цена: "P"%d$\n\
									"W"Дом: "P"№%d\n\
									"W"Класс: "P"%s",
			gHouses[houseid][houseOwner],
			gHouses[houseid][housePrice],
			gHouses[houseid][houseID],
			classname
			);
			D(playerid,D_HOUSE,DSM, ""P"Дом",mes2,"Войти","Отмена");
		}
	}
	else if(areaid >= aArea[0] && areaid <= aArea[gAparmentCount - 1] && pstate == PLAYER_STATE_ONFOOT) {
		if(TI[playerid][tTPpick]) {
			TI[playerid][tTPpick] = false;
			return 1;
		}
		new room = areaid - aArea[0];
		TI[playerid][tSelectedRoom] = room;
		new mes2[160];
		if(GetString("None",Apartment[room][aOwner])) {
			format(mes2,sizeof(mes2),"\n\n"W"Квартира:"P" №%d\n"W"Стоимость:"P" %d$"W"\n\nВы действительно хотите приобрести данную квартиру?",room+1,Apartment[room][aMoney]);
			D(playerid,D_APART_BUY,DSM, ""P"Информация",mes2,"Купить","Закрыть");
		}
		else
		{
			format(mes2,sizeof(mes2),"\n\n"W"Квартира:"P" №%d\n"W"Владелец:"P" %s"W"\n\nВы действительно хотите войти в данную квартиру?",room+1,Apartment[room][aOwner]);
			D(playerid,D_APART_ENTER,DSM, ""P"Информация",mes2,"Войти","Закрыть");
		}
	}
	else if(areaid >= b_area[0] && areaid <= b_area[gBusinessCount - 1] && pstate == PLAYER_STATE_ONFOOT) {
		if(TI[playerid][tTPpick]) {
			TI[playerid][tTPpick] = false;
			return 1;
		}	
		new businessid = areaid - b_area[0];
		new mes2[128];
		if(businessid < 0) return SendClientMessage(playerid, COLOR_GREY, "Ошибка (#100)");
		if((!gBusiness[businessid][bizzStatus])) return true;
		TI[playerid][tSelectedBusinessID] = businessid;
		if((!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] == 26))
		{
			format(mes2,sizeof(mes2),""W"Ферма продается за "GREEN"$%d",gBusiness[businessid][bizzSellPrice]);
			return D(playerid,D_BIZZ_BUY,DSM, ""P"Бизнес",mes2,"Купить","Закрыть");
		}
		if((!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] == 14))
		{
			format(mes2,sizeof(mes2),""W"Транспорта компания продается за "GREEN"$%d",gBusiness[businessid][bizzSellPrice]);
			return D(playerid,D_BIZZ_BUY,DSM, ""P"Бизнес",mes2,"Купить","Закрыть");
		}
		if((!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] == 18))
		{
			format(mes2,sizeof(mes2),""W"Этот тюнинг центр продается за "GREEN"$%d",gBusiness[businessid][bizzSellPrice]);
			return D(playerid,D_BIZZ_BUY,DSM, ""P"Бизнес",mes2,"Купить","Закрыть");
		}
		if((!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] == 31))
		{
			format(mes2,sizeof(mes2),""W"Данный микрозайм продается за "GREEN"$%d",gBusiness[businessid][bizzSellPrice]);
			return D(playerid,D_BIZZ_BUY,DSM, ""P"Бизнес",mes2,"Купить","Закрыть");
		}
		if((!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] == 30))
		{
			format(mes2,sizeof(mes2),""W"Данный бизнес продается за "GREEN"$%d",gBusiness[businessid][bizzSellPrice]);
			return D(playerid,D_BIZZ_BUY,DSM, ""P"Бизнес",mes2,"Купить","Закрыть");
		}
		if((!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 7) && (!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 22) && (!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 11)) {
			format(mes2,sizeof(mes2),""W"Данный бизнес продается за "GREEN"$%d",gBusiness[businessid][bizzSellPrice]);
			return D(playerid,D_BIZZ_BUY,DSM, ""P"Бизнес",mes2,"Купить","Войти");
		}
		else
		{
			if(gBusiness[businessid][bizzEnter] && gBusiness[businessid][bizzOwnerID] != PI[playerid][pID]) {
				new string[128];
				format(string,sizeof(string),""W"Стоимость входа "GREEN"$%d",gBusiness[businessid][bizzEnter]);
				D(playerid,D_BIZZ_ENTERS,DSM, ""P"Бизнес",string,"Войти","Отмена");
				return 1;
			}
			new bint = gBusiness[businessid][bizzBint]-1;
			if(bint < 0 || bint >= BINT_COUNT) return 1;
			TI[playerid][tTPpick] = true;
			SetPlayerPosAC(playerid,gBints[bint][bintX],gBints[bint][bintY],gBints[bint][bintZ],businessid+1,gBints[bint][bintInterior]);
	
			SetPlayerFacingAngle(playerid,gBints[bint][bintR]);
			gBusiness[businessid][bizzVisitors]++;
			SetCameraBehindPlayer(playerid);
			new freezeSeconds = 0;
			switch (GetPlayerPing(playerid)) {
			case 0 .. 49: freezeSeconds = 2;
			case 50 .. 199: freezeSeconds = 3;
			case 200 .. 499: freezeSeconds = 4;
			default: freezeSeconds = 5;
			}
			FreezePlayerForTime(playerid, freezeSeconds);
		}
	}
	else if(areaid >= gBintEnterArea[0] && areaid <= gBintEnterArea[BINT_COUNT-1]) {
		if(TI[playerid][tTPpick]) {
			TI[playerid][tTPpick] = false;
			return 1;
		}
		new id = TI[playerid][tSelectedBusinessID];
		if(id < 0) return true;
		if(id == 44 && TI[playerid][tGym]) return SendClientMessage(playerid, COLOR_GREY, "Необходимо закончить тренировку");
		if(id == 57 && GetPVarInt(playerid,"krup")) return SendClientMessage(playerid, COLOR_GREY, "Необходимо закончить работу крупье");
		TI[playerid][tTPpick] = true;
		SetPlayerPosAC(playerid,gBusiness[id][bizzX],gBusiness[id][bizzY],gBusiness[id][bizzZ], 0, 0);
		SetPlayerFacingAngle(playerid,gBusiness[id][bizzR]);
		SetCameraBehindPlayer(playerid);
		switch(id) {
		case 51, 50, 55, 49: FreezePlayerForTime(playerid,2);
		}
	}
	else if(areaid >= gBintBuyArea[0] && areaid <= gBintBuyArea[BINT_COUNT-1]) {
		new id = TI[playerid][tSelectedBusinessID];
		if(id < 0) return true;
		new products = gBusiness[id][bizzProduct];
		if(!products) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, товара не осталось");
		new type = gBusiness[id][bizzType];
		switch(type) {
		case 1: show_tavern(playerid,id);// закусочная
		case 2:	show_24(playerid,id);
		case 3..4: {
				new string[128];
				format(string,sizeof(string),""W"Наименование\t"W"Стоимость\nПиво \t$%d\nВодка \t$%d\nШампанское \t$%d\nВино \t$%d\nТекила \t$%d\nКоньяк \t$%d", gBusiness[id][bizzPrice] * 10 * gBarCosts[0],gBusiness[id][bizzPrice] * 10 * gBarCosts[1],gBusiness[id][bizzPrice] * 10 * gBarCosts[2],gBusiness[id][bizzPrice] * 10 * gBarCosts[3],gBusiness[id][bizzPrice] * 10 * gBarCosts[4],gBusiness[id][bizzPrice] * 10 * gBarCosts[5]);
				D(playerid, D_BIZZ_BAR, DSTH, ""P"Меню", string, "Купить", "Отмена");
			}
		case 5: {
				if(TI[playerid][tTPpick]) {
					TI[playerid][tTPpick] = false;
					return 1;
				}
				else {
					if(PI[playerid][pSkin] != GetPlayerSkin(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Закончите рабочий день на текущей работе");
					if(GetPVarInt(playerid,"ChangingSkin") == 0) {
						SetPVarInt(playerid,"ChangingSkin",1);
						new Float: pos[4];
						GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
						GetPlayerFacingAngle(playerid, pos[3]);
						SetPVarFloat(playerid, "posx", pos[0]);
						SetPVarFloat(playerid, "posy", pos[1]);
						SetPVarFloat(playerid, "posz", pos[2]);
						SetPVarFloat(playerid, "posa", pos[3]);
						SetPVarInt(playerid, "interior", GetPlayerInterior(playerid));
						SetPVarInt(playerid, "vw", GetPlayerVirtualWorld(playerid));
						TogglePlayerControllable(playerid, 0);
						SetPlayerPosAC(playerid, 258.7497, -41.3828, 1002.0234,playerid + 1,14);
						SetPlayerFacingAngle(playerid, 70.0);
						SetPlayerCameraPos(playerid, 258.7498 + (2.5 * floatsin(-70.0, degrees)), -41.3828 + (2.5 * floatcos(-70.0, degrees)), 1002.5);
						SetPlayerCameraLookAt(playerid, 258.7497, -41.3828, 1002.0234);
					}
					SetPVarInt(playerid, "curskin", GetPlayerSkin(playerid));
					switch(PI[playerid][pSex]) {
					case 1: SetPVarInt(playerid,"join_ped_item",0);
					case 2: SetPVarInt(playerid,"join_ped_item",71);
					}
					A_SetPlayerSkin(playerid,ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][0]);

					for(new i=0; i<9; i++) {
						TextDrawShowForPlayer(playerid,buy_skins[i]);
					}
					PlayerTextDrawShow(playerid,buy_player_skins[playerid]);
					new string[12];
					format(string,sizeof(string),"$%d",ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]);
					PlayerTextDrawSetString(playerid,buy_player_skins[playerid],string);
					SelectTextDraw(playerid, 0x0080FFFF);
				}
			}
		case 6: {
				if(!lic[playerid][3]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет лицензии на оружие");
				new gun_name[32 + 1],string[512];
				string = ""W"Оружие\t"W"Стоимость\n";
				for(new i = 0; i < 12; i++) {
					GetWeaponName(gSellGun[i],gun_name,32);
					format(string, 1500, "%s\t%s\t$%i\n",string, gun_name, gSellGunPrice[i] * gBusiness[id][bizzPrice]);
				}
				new str[90];
				format(str, sizeof(str), "Armour\t$%i\n"O"Пропуск в тир\t$%i", gSellGunPrice[11] * gBusiness[id][bizzPrice], gSellGunPrice[12] * gBusiness[id][bizzPrice]);
				strcat(string, str);
				D(playerid, D_AMMO, DSTH, "Меню аммо", string, "Далее", "Отмена");
			}
		case 7: return true;//авиа
		case 9: show_fish(playerid);
		case 10: return true;
		case 12: D(playerid, D_RIELTOR, DSL, ""P"Риэлторское агентство", ""P"1."W" Дома\n"P"2."W" Бизнесы\n"P"3."W" Информация", "Выбрать", "Отмена");
		case 13: {
				if(TI[playerid][tGym]) {
					static const f_str[] = ""P"Наименование\t"P"Стоимость\n"P"1."W" Спортивная форма\t"ORANGE"$%d\n"P"2."W" Стиль боя Бокс\t"ORANGE"$5000\n"P"3."W" Стиль боя Кунг-Фу\t"ORANGE"$5000\n"P"4."W" Стиль боя Кик-Бокс\t"ORANGE"$5000\n"P"5."W" Шейкер Smart [0.25л/250ударов]\t"ORANGE"$200\n"P"6."W" Шейкер BSN [0.5л/500ударов]\t"ORANGE"$350\n"P"7."W" Шейкер Biotech [0.75л/750ударов]\t"ORANGE"$500\n"P"-"W" Информация\n"P"-"W" Закончить тренировку";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,gBusiness[id][bizzPrice]*150);
					D(playerid,D_BOX_2,DSTH, "Спорт-Зал",string,"Выбрать","Отмена");
				}
				else {
					static const f_str[] = ""P"Наименование\t"P"Стоимость\n"P"1."W" Спортивная форма\t"ORANGE"$%d\n"P"2."W" Стиль боя Бокс\t"ORANGE"$5000\n"P"3."W" Стиль боя Кунг-Фу\t"ORANGE"$5000\n"P"4."W" Стиль боя Кик-Бокс\t"ORANGE"$5000\n"P"5."W" Шейкер Smart [0.25л/250ударов]\t"ORANGE"$200\n"P"6."W" Шейкер BSN [0.5л/500ударов]\t"ORANGE"$350\n"P"7."W" Шейкер Biotech [0.75л/750ударов]\t"ORANGE"$500\n"P"-"W" Информация";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,gBusiness[id][bizzPrice]*150);
					D(playerid,D_BOX_2,DSTH, "Спорт-Зал",string,"Выбрать","Отмена");
				}
			}
		case 17: {
				if(TI[playerid][tTPpick]) {
					TI[playerid][tTPpick] = false;
					return 1;
				}
				if(!GetPVarInt(playerid,"buy_accses")) {
					SetPVarInt(playerid,"buy_accses",1);
					new Float: pos[4];
					GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
					GetPlayerFacingAngle(playerid, pos[3]);
					SetPVarFloat(playerid, "posx", pos[0]);
					SetPVarFloat(playerid, "posy", pos[1]);
					SetPVarFloat(playerid, "posz", pos[2]);
					SetPVarFloat(playerid, "posa", pos[3]);
					TogglePlayerControllable(playerid, 0);
					SetPlayerPosAC(playerid, 212.5107,-41.5253,1002.0234,playerid + 1,1);
					SetPlayerFacingAngle(playerid, 89.8527);
					SetPlayerCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234);
					SetPlayerCameraLookAt(playerid, 212.5107,-41.5253,1002.0234);
					buyacces(playerid);
					for(new i=0; i < 10; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
				}
			}

		}
	}
	else if(areaid == gAreas[arZavod] && TI[playerid][tJobGun][0] && TI[playerid][tJobGun][2] && pstate == PLAYER_STATE_ONFOOT) {
		if(GetPVarInt(playerid,"pOff9") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Подождите");
		ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
		TI[playerid][tJobSalary] += SALARY_ARMS;
		
		PI[playerid][pMetal] += 1;
		UpdatePlayerData(playerid,"metal",PI[playerid][pMetal]);
		
		if(QuestProgress[playerid][48] < 10 && AcceptQuest[playerid][48] != 0) QuestProgress[playerid][48] ++,save_quest(playerid,48);
		if(QuestProgress[playerid][48] == 10 && AcceptQuest[playerid][48] != 0) {
			D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
		}

		new string[24];
		format(string,sizeof(string),"MONEY:_$%d",TI[playerid][tJobSalary]);
		PlayerTextDrawSetString(playerid,work_td[playerid][1],string);
		
		if(PI[playerid][pFamily]) {
			gFamily[PI[playerid][pFamily]-1][famTalon] += 1;
			UpdateFamily(PI[playerid][pFamily],"talon",gFamily[PI[playerid][pFamily]-1][famTalon]);
			PI[playerid][pFamTalon] += 1, UpdatePlayerData(playerid, "talon_fam", PI[playerid][pFamTalon]);
		}
		
		zavodsklad += 500;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
		TI[playerid][tJobGun][2] = 0;
		SetPVarInt(playerid,"pOff9",gettime()+20);
		TI[playerid][tJobGun][1] = 1;
	}
	else if(areaid >= sad_area[0] && areaid <= sad_area[119-1] && pstate == PLAYER_STATE_ONFOOT) {
		if(!TI[playerid][tJobSad][0]) return 1;
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
		new id = areaid - sad_area[0];
		if(SI[id][sad_temp] != 0 && !GetString(SI[id][sad_fermer],player_name[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Вы не ухаживаете за этим деревом");
		if(SI[id][sad_temp] == 0 || SI[id][sad_temp] == 4) {
			if(SI[id][sad_temp] == 0) {
				if(GetPVarInt(playerid,"sad_uxod") == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже ухаживаете за деревом");
				if(!GetPVarInt(playerid,"bailer")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет лейки в руках");
				if(GetPVarInt(playerid,"bailer_3")) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете полить дерево с ящиком яблок в руках");
				JobTempProcess[playerid] = 1;
				SI[id][sad_temp] = 1;
				SetString(SI[id][sad_fermer],player_name[playerid]);
				new string[70];
				format(string,sizeof(string),"Дерево\nСтадия - сохнет\nФермер - %s",SI[id][sad_fermer]);
				UpdateDynamic3DTextLabelText(SI[id][sad_3dtext],-1,string);
			}
			if(SI[id][sad_temp] == 4 && GetString(SI[id][sad_fermer],player_name[playerid])) {
				if(!GetPVarInt(playerid,"bailer_2")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет ящика для сбора яблок в руках");
				JobTempProcess[playerid] = 2;
				if(SI[id][sad_temp] == 4) {
					if(GetPVarInt(playerid,"bailer_4")) return 1;
					SetPVarInt(playerid,"bailer_4",1);
				}
			}
			TI[playerid][tJobSad][1] = id+1;
			TI[playerid][tProcess][0] = 0;
			TI[playerid][tProcess][1] = 10;
			PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
			for(new YN = 0;YN < 3;YN++) {
				TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
			}
			RandomYareNforJOBS(playerid);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Ожидайте стадии - сбор яблок");
	}
	else if(areaid >= gAreas[arTurma][0] && areaid <= gAreas[arTurma][6] && TI[playerid][tClothesWork][0] == 1 && TI[playerid][tClothesWork][1] == 1) {
		JobTempProcess[playerid] = 24;
		TI[playerid][tProcess][0] = 0;
		TI[playerid][tProcess][1] = 10;
		PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
		for (new YN = 0; YN < 3; YN++)
		{
			TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
			if (YN < 2) PlayerTextDrawShow(playerid, YandNsysTDPlayer[playerid][YN]);
		}
		RandomYareNforJOBS(playerid);
	}
	else if(areaid >= gAreas[arSkladTurm])
	{
		if(TI[playerid][tClothesWork][1] == 2)
		{
			if (GetPVarInt(playerid, "pOff9") > gettime()) return 1;
			ApplyAnimation(playerid, "CARRY", "putdwn", 4.0, 0, 1, 1, 0, 0, 1);
			SetPVarInt(playerid, "zp_clothes", GetPVarInt(playerid, "zp_clothes") + 120);
			new string[24];
			format(string, sizeof(string), "MONEY:_$%d", GetPVarInt(playerid, "zp_clothes"));
			PlayerTextDrawSetString(playerid, work_td[playerid][1], string);
			if (IsPlayerAttachedObjectSlotUsed(playerid, 8))RemovePlayerAttachedObject(playerid, 8);
			TI[playerid][tClothesWork][1] = 1;
			SetPVarInt(playerid, "pOff9", gettime() + 10);
			if(PI[playerid][pJailTime] > 10) PI[playerid][pJailTime] -= 10;
			UpdatePlayerData(playerid,"pJailTime", PI[playerid][pJailTime]);
		}
	}
	else if (areaid == gAreas[arLoadProds][0])
	{
		if(PI[playerid][pJob] != 3) return 1;
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 456)
		{
			D(playerid, dProdGet, DSI, ""P"Покупка продуктов", "\n\n"W"Введите количество продуктов для покупки:\nПримечание: "ORANGE"10"W" продукт = "GREEN"$1\n\n", "Купить", "Отмена");
		}
	}
	else if(areaid == gAreas[arLoadProds][1])
	{
		if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 403)
		{
			D(playerid, dProdGet, DSI, ""P"Покупка бензина", "\n\n"W"Введите количество литров для покупки:\nПримечание: "ORANGE"10"W" литр = "GREEN"$1\n\n", "Купить", "Отмена");
		}
	}
	else if(areaid == gAreas[arSad] && pstate == PLAYER_STATE_ONFOOT) {
		if(!TI[playerid][tJobSad][0]) return 1;
		if(!GetPVarInt(playerid,"bailer_3")) return SendClientMessage(playerid, COLOR_GREY, "Вы не собрали урожай");
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid,4);
		ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
		DeletePVar(playerid,"bailer_3");
		TI[playerid][tJobSalary] += TI[playerid][tJobSad][2] * SALARY_APPLE;
		
		PI[playerid][pCloth] += 1;
		UpdatePlayerData(playerid,"cloth",PI[playerid][pCloth]);
		
		if(PI[playerid][pFamily]) {
			gFamily[PI[playerid][pFamily]-1][famTalon] += 1;
			UpdateFamily(PI[playerid][pFamily],"talon",gFamily[PI[playerid][pFamily]-1][famTalon]);
			PI[playerid][pFamTalon] += 1, UpdatePlayerData(playerid, "talon_fam", PI[playerid][pFamTalon]);
		}
		
		TI[playerid][tJobSad][2] = 0;
		new string[24];
		format(string,sizeof(string),"MONEY:_$%d",TI[playerid][tJobSalary]);
		PlayerTextDrawSetString(playerid,work_td[playerid][1],string);
	}
	else if(WD::[0][woodZone] <= areaid <= WD::[MAX_WOODS - 1][woodZone] && pstate == PLAYER_STATE_ONFOOT) {
		new j = areaid - WD::[0][woodZone];
		if(TI[playerid][tJobWood][1]) return 1;
		if(TI[playerid][tJobWood][0]) {
			if(TI[playerid][tJobWood][3]) {
				if(WD::[j][woodUse] != false) return SendClientMessage(playerid, COLOR_GREY, "Дерево уже кто-то пилит");
				TI[playerid][tJobWood][2] = j;
				WD::[j][woodUse] = true;
				JobTempProcess[playerid] = 5;
				TI[playerid][tProcess][0] = 0;
				TI[playerid][tProcess][1] = 10;
				PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
				for(new YN = 0;YN < 3;YN++) {
					TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
					if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
				}
				RandomYareNforJOBS(playerid);
			}
		}
	}
	if(IsAGang(playerid) || IsAArm(playerid) || IsAMafia(playerid) || PI[playerid][pJob] == 6 || GetPVarInt(playerid,"inc_start")) {
		for(new i = GetVehiclePoolSize()+1; --i != 0;) {
			if(areaid == VG[i][vgArea]) {
				if(VG[i][vgLoading] == true && GetPVarInt(playerid,"carrygun")) {
					new gunamount = GetPVarInt(playerid,"carrygun");
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					switch(GetVehicleModel(i)) {
					case 433: if(VG[i][vgAmount][0] + gunamount > 70) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно места"),FI[fARMYLS][fMats] += 500;
					case 482: if(VG[i][vgAmount][0] + gunamount > 15) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно места"),FI[fARMYLS][fMats] += 500;
					case 573: if(VG[i][vgAmount][0] + gunamount > 200) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно места");
					}
					if(gunamount) VG[i][vgAmount][0] += gunamount;
					new string[64];
					switch(GetVehicleModel(i)) {
					case 433: format(string,sizeof(string),"Ящиков: "O"%i/70",VG[i][vgAmount][0]);
					case 482: {
							format(string,sizeof(string),"Ящиков: "O"%i/15",VG[i][vgAmount][0]);
							if(QuestProgress[playerid][20] < 50 && AcceptQuest[playerid][20] != 0) QuestProgress[playerid][20] ++,save_quest(playerid,20);
							if(QuestProgress[playerid][20] == 50 && AcceptQuest[playerid][20] != 0) {
								D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Снабжение материалами'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
							}
							if(QuestProgress[playerid][27] < 50 && AcceptQuest[playerid][27] != 0) QuestProgress[playerid][27] ++,save_quest(playerid,27);
							if(QuestProgress[playerid][27] == 50 && AcceptQuest[playerid][27] != 0) {
								D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Снабжение материалами'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
							}
						}
					case 573: format(string,sizeof(string),"Ящиков: "O"%i/200",VG[i][vgAmount][0]);
					}
					UpdateDynamic3DTextLabelText(VG[i][vgText],COLOR_WHITE,string);
				}
				else if(VG[i][vgNarko] == 1 && GetPVarInt(playerid,"vg_narko")) {
					new string[45];
					if(VG[i][vgDrugs] < 2000) {
						VG[i][vgDrugs] += 100;
					}
					if(VG[i][vgDrugs] == 2000) {
						SendUse(playerid, "Фургон заполнен, отвезите наркотики в наркопритон");
					}
					format(string,sizeof(string),"Наркотиков: "O"%i/2000",VG[i][vgDrugs]);
					UpdateDynamic3DTextLabelText(VG[i][vgText],COLOR_WHITE,string);
					DeletePVar(playerid,"vg_narko");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
				}
				else if(VG[i][vgAtm] == 2 && GetPVarInt(playerid,"unload_atm") == 0) {
					if(GetPVarInt(playerid,"veh_id_inc") != i) return SendClientMessage(playerid, COLOR_GREY, "Это не ваш фургон!");
					new string[45];
					if(VG[i][vgAmount][0] == 0) return SendClientMessage(playerid, COLOR_GREY, "В фургоне нет денег");
					if(VG[i][vgAmount][0] > 1) VG[i][vgAmount][0] -= 1;
					else if(VG[i][vgAmount][0] > 0) VG[i][vgAmount][0] = 0;
					SetPVarInt(playerid,"unload_atm",1);
					SetPlayerAttachedObject(playerid, 5, 1550, 1, 0.0, -0.3, 0, 90, 90, 0.0);
					format(string,sizeof(string),"Загружено: %i/20 мешков",VG[i][vgAmount][0]);
					UpdateDynamic3DTextLabelText(VG[i][vgText],COLOR_WHITE,string);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
				}
				else if(VG[i][vgAtm] == 1 && GetPVarInt(playerid,"vg_atm") == 1) {
					new string[45];
					if(VG[i][vgAmount][0] < 20) {
						VG[i][vgAmount][0] += 1;
						if(QuestProgress[playerid][50] < 10 && AcceptQuest[playerid][50] != 0) QuestProgress[playerid][50] ++,save_quest(playerid,50);
						if(QuestProgress[playerid][50] == 10 && AcceptQuest[playerid][50] != 0) {
							D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
						}
					}
					if(VG[i][vgAmount][0] == 20)
					{
						SendUse(playerid, "Рабочая машина заполнена, развозите деньги по банкоматам");
					}
					format(string,sizeof(string),"Загружено: %i/20 мешков",VG[i][vgAmount][0]);
					UpdateDynamic3DTextLabelText(VG[i][vgText],COLOR_WHITE,string);
					DeletePVar(playerid,"vg_atm");
					DeletePVar(playerid,"unload_atm");
					RemovePlayerAttachedObject(playerid,7);
					ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
				}
				else if(VG[i][vgWeste] == 1 && GetPVarInt(playerid,"_musor")) {
					new string[45];
					if(VG[i][vgAmount][0] < 15) {
						VG[i][vgAmount][0] += 1;
						if(QuestProgress[playerid][51] < 5 && AcceptQuest[playerid][51] != 0) QuestProgress[playerid][51] ++,save_quest(playerid,51);
						if(QuestProgress[playerid][51] == 5 && AcceptQuest[playerid][51] != 0) {
							D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
						}
					}
					if(VG[i][vgAmount][0] == 15) {
						SendUse(playerid, "Рабочая машина заполнена, отвезите мусор на утилизацию");
						EnableGPSForPlayer(playerid,2214.1709,-2545.4482,13.5469);
					}
					format(string,sizeof(string),"Загрузка мусора: "O"%i/15",VG[i][vgAmount][0]);
					UpdateDynamic3DTextLabelText(VG[i][vgText],COLOR_WHITE,string);
					DeletePVar(playerid,"_musor");
					RemovePlayerAttachedObject(playerid,8);
					ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
				}
				else if(VG[i][vgUnloading] == true && !GetPVarInt(playerid,"carrygun")) {
					if(InLoadFrac[PI[playerid][pMember]]) return SCM(playerid, COLOR_GREY, "боеприпасы уже были взяты.");
					if(VG[i][vgAmount][0] < 1) return SendClientMessage(playerid, COLOR_GREY, "В автомобиле недостаточно боеприпасов");
					SetPVarInt(playerid,"carrygun", VG[i][vgAmount][0]);
					new string[64];
					VG[i][vgAmount][0] = 0;
					switch(GetVehicleModel(i)) {
					case 433: format(string,sizeof(string),"Ящиков: "O"%i/70",VG[i][vgAmount][0]);
					case 482: format(string,sizeof(string),"Ящиков: "O"%i/15",VG[i][vgAmount][0]);
					}
					InLoadFrac[PI[playerid][pMember]] = true;
					UpdateDynamic3DTextLabelText(VG[i][vgText],COLOR_WHITE,string);

					ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
					SetTimerEx("CarryDelay",1000,false,"i",playerid);
					SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				}
				else if(VG[i][vgRobHouse] == true && RobPlayer[playerid][AttachObj]) {
					new gunamount = RobPlayer[playerid][AttachObj];
					if(VG[i][vgAmount][0] < 6) VG[i][vgAmount][0] += gunamount;
					new string[120];
					format(string,sizeof(string),"Техника: "O"%i ед/6 ед",VG[i][vgAmount][0]);
					UpdateDynamic3DTextLabelText(VG[rob_veh[playerid]][vgText], COLOR_WHITE, string);
					if(QuestProgress[playerid][19] < 24 && AcceptQuest[playerid][19] != 0) QuestProgress[playerid][19] ++,save_quest(playerid,19);
					if(QuestProgress[playerid][19] == 24 && AcceptQuest[playerid][19] != 0) {
						D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Ограбление домов'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
					}
					if(VG[i][vgAmount][0] == 6) {
						SendUse(playerid, "Отвезите награбленное на черный рынок");
						DeletePVar(playerid,"load_rob");
						if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) {
							ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
							RemovePlayerAttachedObject(playerid,0);
						}
						return true;
					}
					RemovePlayerAttachedObject(playerid,0);
					ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
					RobPlayer[playerid][AttachObj] = 0;
				}
				return true;
			}
		}
	}
	new state_ship = GetPlayerState(playerid);
	new state_vehicle = GetPlayerVehicleID(playerid);
	foreach(new x:Player) {
		if(!TI[x][tLogin]) continue;
		if(areaid == GetPVarInt(x,"Ships") && state_ship == PLAYER_STATE_DRIVER) {
			new panels, tires;
			GetVehicleDamageStatus(state_vehicle, panels, doors, lights, tires);
			UpdateVehicleDamageStatus(state_vehicle, panels, doors, lights, 15);
			GameTextForPlayer(playerid, "~r~stalling", 1000, 6);
			break;
		}
	}
	for(new c = 0; c < MAX_TABLES_DICE; c++) {
		if(areaid==InfoDice[c][dice_area]) GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~PRESS ENTER",3000,3);
	}
	return true;
}
public OnPlayerLeaveDynamicArea(playerid, areaid) {
	if(areaid >= gHouseArea[0] && areaid <= gHouseArea[gHouseCount]) {
		TI[playerid][tSelectHouse] = 0;
	}
	else if(areaid >= b_area[0] && areaid <= b_area[gBusinessCount - 1]) {
		if(TI[playerid][tTPpick] == false) TI[playerid][tSelectedBusinessID] = -1;
	}
	else if(areaid >= sad_area[0] && areaid <= sad_area[119-1]) {
		if(!TI[playerid][tJobSad][0] || !TI[playerid][tJobSad][1]) return 1;
		new field = TI[playerid][tJobSad][1]-1;
		if(SI[field][sad_temp] == 1) {
			UpdateDynamic3DTextLabelText(SI[field][sad_3dtext],-1,"Дерево\nСтадия - сохнет\nФермер - Отсутствует");
			SI[field][sad_temp] = 0;
		}
		TI[playerid][tJobSad][1] = 0;
		DeletePVar(playerid,"bailer_4");
		TI[playerid][tProcess][0] = -1;
		TI[playerid][tProcess][1] = -1;
		for(new YN = 0;YN < 3;YN++) {
			TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
			if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
		}
		JobTempProcess[playerid] = 0;
	}
	else if(Casino_Flag[playerid][select_casino_table] != -1) {
		if(!InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start]) {
			ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
			Casino_Flag[playerid][select_casino_table] = -1;
		}
	}
	else if(areaid == gAreas[arNews] && TI[playerid][tEther]) {
		ether_closed(playerid);
		TI[playerid][tEther] = false;
		SendOk(playerid,"Вы вышли из прямого эфира");
	}
	else if(WD::[0][woodZone] <= areaid <= WD::[MAX_WOODS - 1][woodZone]) {
		if(TI[playerid][tJobWood][2] != -1) {
			WD::[TI[playerid][tJobWood][2]][woodUse] = false;
			TI[playerid][tProcess][0] = -1;
			TI[playerid][tProcess][1] = -1;
			for(new YN = 0;YN < 3;YN++) {
				TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
			}
			JobTempProcess[playerid] = 0;
			if(TI[playerid][tJobWood][1]) TogglePlayerControllable(playerid,true);
			TI[playerid][tJobWood][2] = -1;
		}
	}
	else if(areaid >= gAreas[arJob][0] && areaid <= gAreas[arJob][3]) {
		if(TI[playerid][tJobGun][0]) EndGun(playerid);
		if(GetPVarInt(playerid,"fish_place")) EndFish(playerid);
		if(TI[playerid][tJobWood][0]) EndWood(playerid);
	}
	return 1;
}

public OnDynamicObjectMoved(objectid) {
	for(new id = 0; id < MAX_OBJECT_MOVED; id++) {
		if(objectid == moved_info[id][moved_id] && moved_info[id][status_moved]) {
			ServerMovedEx[id] = 1;
			moved_info[id][status_moved] = false;
			ServerMovedFix[id] = gettime() + 6;
			return 1;
		}
	}
	if(objectid == l_casino[2] && l_start == 1) { // лифт закрыл двери
		MoveDynamicObject(l_casino[0], 300.390136, -139.715637, 1036.076904,1, 0.000000, 0.000000, 270.000000);

		l2_casino = CreateDynamicObject(19325,300.430572, -137.912704, 1029.311523, 0.000000, 0.000000, 90.000000, 58, 7, -1, 300.00, 300.00);
		MoveDynamicObject(l2_casino, 300.430572, -137.912704, 1035.946533,1, 0.000000, 0.000000, 90.000000);

		l_start = 2;
		
	}
	if(objectid == l2_casino && l_start == 2) {  // приехал на базу
		DestroyDynamicObject(l2_casino);
		MoveDynamicObject(l_casino[3], 301.800598, -135.845367, 1036.103027,1, 0.000029, 0.000000, 89.999908);
		MoveDynamicObject(l_casino[4], 298.997772, -139.651321, 1036.103027,1, -0.000029, 0.000000, -89.999908);
		stats_lift = 1;
		l_start = 3;
	}
	if(objectid == l_casino[4] && l_start == 4)
	{
		MoveDynamicObject(l_casino[0],  300.390136, -139.715637, 1030.315795,1, 0.000000, 0.000000, 270.000000);

		l2_casino = CreateDynamicObject(19325,300.430572, -137.912704, 1035.946533,0.000000, 0.000000, 90.000000, 58, 7, -1, 300.00, 300.00);
		MoveDynamicObject(l2_casino, 300.430572, -137.912704, 1029.311523,1, 0.000000, 0.000000, 90.000000);

		l_start = 5;
	}
	if(objectid == l_casino[0] && l_start == 5)
	{
		DestroyDynamicObject(l2_casino);
		MoveDynamicObject(l_casino[1],  301.800598, -135.845367, 1030.287597,1, 0.000014, 0.000000, 89.999954);
		MoveDynamicObject(l_casino[2],  298.997772, -139.651321, 1030.287597,1, -0.000014, 0.000000, -89.999954);
		stats_lift = 0;
		l_start = 0;
	}
	if(GetGVarType("WoodConv",objectid) == 1) {
		DeleteGVar("WoodConv",objectid);
		DestroyDynamicObject(objectid);
		new rand = Random(10,15);
		woodsklad += rand;
		new string[72];
		format(string,sizeof(string),"Древесины на складе: "ORANGE"%d кг",woodsklad);
		UpdateDynamic3DTextLabelText(wood_3dtext,-1,string);
	}
	return 1;
}

public OnPlayerDisconnect(playerid, reason) 
{
	DeletePVar(playerid, "NoBot");
	if(pame_text[playerid] != Text3D:-1)
	{
		Delete3DTextLabel(pame_text[playerid]);
		pame_text[playerid] = Text3D:-1;
	}
	if (PlayerSecondTimer[playerid] != -1) 
	{
		KillTimer(PlayerSecondTimer[playerid]);
		PlayerSecondTimer[playerid] = -1;
	}
	if(TI[playerid][tDM] > 0)
	{
		if(players_dm[TI[playerid][tDM]-1] > 0) players_dm[TI[playerid][tDM]-1]--;
		TI[playerid][tDM] = 0;
	}
	if(Welding[playerid] != 0) {
		DestroyPlayerObject(playerid,Welding[playerid]);
		Welding[playerid] = 0;
	}
	if(GetPVarInt(playerid, "BuyGarage"))
	{
	    FG[GetPVarInt(playerid, "BuyGarage")][gOwnerID] = -1;
        DeletePVar(playerid, "BuyGarage");
	}
	if(PI[playerid][pPalatka] > 0) EndTrade(playerid);
	if(GetPVarInt(playerid,"ppkz") == 1)
	{
		for(new c = 0; c < 6; c++) PlayerTextDrawDestroy(playerid, CaptPlayer[playerid][c]);
	}
	
	for(new i = 0; i < 13; i++) PlayerTextDrawDestroy(playerid, hack_numbers[playerid][i]);
	for(new i = 0; i < 46; i++) PlayerTextDrawDestroy(playerid, inventory_slot[playerid][i]); // del inv
	for(new i = 0; i < 8; i++) PlayerTextDrawDestroy(playerid, inventory_PTD[playerid][i]); // del inv

	ghetto_HideGUI(playerid);
	if(skill_gun[playerid] == 1) {
		save_skill(playerid);
		skill_gun[playerid] = 0;
	}
	if (GetPlayerVehicles(playerid)) {
		new player_vehicleid = playerVehicleID[playerid];
		if (PlayerTrailer[player_vehicleid][carOwnerID] == playerid) {
			PlayerTrailer[player_vehicleid][carOwnerID] = INVALID_PLAYER_ID;
		}
	}
	PlayerSpeedFix[playerid] = 0;
	if(car_shop[playerid] != INVALID_VEHICLE_ID) A_DestroyVehicle(car_shop[playerid]);
	leave_robhouse(playerid);
	for(new i;i<10;i++) {
		if(ChetInfo[i][cheatid1]==playerid) {
			TextDrawSetString(CheatText[i], "-");
			Cheat1 ++;
			if(Cheat1 > 9) Cheat1 = 0;
		}
	}
    
	new str[350];
	mysql_format(connects,str,sizeof(str), "UPDATE `"TABLE_ACCOUNTS"` SET `pPlayTime_one` = '%d',`pPlayTime_two` = '%d',`dm_k` = '%d',`dm_d` = '%d' WHERE pID = '%d'",PI[playerid][pPlayTime][0],PI[playerid][pPlayTime][1],
	TI[playerid][tDM_k],TI[playerid][tDM_d], PI[playerid][pID]);
	mysql_tquery(connects, str, "", "");
	
	if(TI[playerid][tDuel] != -1) {
		if(DI[TI[playerid][tDuel]][duel_start] == true) end_duel(playerid,1);
		else duel_delete(TI[playerid][tDuel],false);
	}
	if(player_to_race_lv[playerid] != 0) {
		players_in_race_lv--;
		player_to_race_lv[playerid] = 0;
		if(player_to_race_lv_id[playerid] != INVALID_VEHICLE_ID) {
			A_DestroyVehicle(player_car_race_lv_id[playerid]);
			player_to_race_lv_id[playerid] = INVALID_VEHICLE_ID;
		}
	}
	if(TI[playerid][tCashRace]) {
		money_in_race_lv -= TI[playerid][tCashRace];
		GiveMoney(playerid,TI[playerid][tCashRace],"возвращение взнос безумных гонок");
		TI[playerid][tCashRace] = 0;
	}
	if(TI[playerid][tCashDM]) {
		money_in_game -= TI[playerid][tCashDM];
		GiveMoney(playerid,TI[playerid][tCashDM],"возвращение взноса сумасшедших войн");
		TI[playerid][tCashDM] = 0;
		new query[100];
		mysql_format(connects, query, sizeof(query), "DELETE FROM `dm_arena` WHERE BINARY `Name` = '%s'", player_name[playerid]);
		mysql_tquery(connects, query, "", "");
	}
	if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
		CarsInfo[playerid][carFuel][0] = VehicleInfo[house_car[playerid][0]][vFuel];
		CarsInfo[playerid][carAkum][0] = VehicleInfo[house_car[playerid][0]][vAkum];
		CarsInfo[playerid][carDrived][0] = VehicleInfo[house_car[playerid][0]][vDrived];
		save_cars(playerid, 0);
		A_DestroyVehicle(house_car[playerid][0]);
		house_car[playerid][0] = INVALID_VEHICLE_ID;
	}
	if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
		CarsInfo[playerid][carFuel][1] = VehicleInfo[house_car[playerid][1]][vFuel];
		CarsInfo[playerid][carAkum][1] = VehicleInfo[house_car[playerid][1]][vAkum];
		CarsInfo[playerid][carDrived][1] = VehicleInfo[house_car[playerid][1]][vDrived];
		save_cars(playerid, 1);
		A_DestroyVehicle(house_car[playerid][1]);
		house_car[playerid][1] = INVALID_VEHICLE_ID;
	}
	if(thef_car[playerid] != INVALID_VEHICLE_ID)
	{
		A_DestroyVehicle(thef_car[playerid]);
		thef_car[playerid] = INVALID_VEHICLE_ID;
		thef_timer[playerid] = -1;
	}
	if(TI[playerid][tBoat] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(TI[playerid][tBoat]);
		TI[playerid][tBoat] = INVALID_VEHICLE_ID;
	}
	if(TI[playerid][tMoped] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(TI[playerid][tMoped]);
		TI[playerid][tMoped] = INVALID_VEHICLE_ID;
	}
	if(TI[playerid][tYoutubcar] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(TI[playerid][tYoutubcar]);
		TI[playerid][tYoutubcar] = INVALID_VEHICLE_ID;
	}
	if(rep_system) {
		for(new i;i<MAX_REPORTS;i++) {
			if(PlayerReport[i] == -1) continue;
			if(PlayerReport[i] == playerid) ReportDell(i);
		}
	}
	PI[playerid][pAdmKL] = false;
	spec_t[playerid] = false;
	if (PI[playerid][pSearch] && reason < 2 && (GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED || TI[playerid][tTazer] == true || TI[playerid][tCuffed] == 1))
	{
		if(PI[playerid][pSearch])
		{
			PI[playerid][pJail] = 1;
			PI[playerid][pJailTime] = (PI[playerid][pSearch] * 600);
			UpdatePlayerData(playerid,"pJail",PI[playerid][pJail]);
			UpdatePlayerData(playerid,"pJailTime",PI[playerid][pJailTime]);
			PI[playerid][pArrested] += 1;
			PI[playerid][pSearch] = 0;
			UpdatePlayerData(playerid,"pArrested",PI[playerid][pArrested]);
			UpdatePlayerData(playerid,"pSearch",PI[playerid][pArrested]);
			static const f_str[] = "%s вышел из игры во время задержания и был посажен в КПЗ";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
			format(string,sizeof(string), f_str, player_name[playerid]);
			SendClientMessageToAll(CBADINFO,string);
		}
	}
	if (pl_update_speed[playerid] != -1) {
		KillTimer(pl_update_speed[playerid]);
		pl_update_speed[playerid] = -1;
	}
	TI[playerid][tDiceID] = INVALID_PLAYER_ID;
	TI[playerid][tDiceIDs] = INVALID_PLAYER_ID;
	/*if(TI[playerid][tFight] != -1)
	{
		new r = 0;
		if(QuestProgress[TI[playerid][tFight]][24] < 10 && AcceptQuest[TI[playerid][tFight]][24] != 0) QuestProgress[TI[playerid][tFight]][24] ++,save_quest(playerid,24);
		if(QuestProgress[TI[playerid][tFight]][24] == 10 && AcceptQuest[TI[playerid][tFight]][24] != 0) {
			D(TI[playerid][tFight],DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Продвинутый боец'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
		}
		PI[TI[playerid][tFight]][pFight_on] += 1;
		PI[playerid][pFight_off] += 1;
		UpdatePlayerData(playerid,"pFight_off",PI[playerid][pFight_off]);
		UpdatePlayerData(TI[playerid][tFight],"pFight_on",PI[TI[playerid][tFight]][pFight_on]);
		SetPlayerPosAC(TI[playerid][tFight],770.9481,5.4735,1000.7145, 76, 5);
		SetPlayerFacingAngle(TI[playerid][tFight],89.1145);
		if(RingInfo[r][rgStart] == 0) return true;
		GiveMoney(TI[playerid][tFight],(RingInfo[r][rgPrice]),"победа поединок");
		TI[TI[playerid][tFight]][tFight] = -1;
		TI[playerid][tFight] = -1;
		CheckPlayerRing(playerid);
	}*/
	ether_closed(playerid);
	if(car_autoschool[playerid] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(car_autoschool[playerid]);
		car_autoschool[playerid] = INVALID_VEHICLE_ID;
	}
	if(TI[playerid][tSpectr] != INVALID_PLAYER_ID && SERIU[TI[playerid][tSpectr]][sID] == playerid) {
		pc_cmd_reoff(TI[playerid][tSpectr]);
		GameTextForPlayer(TI[playerid][tSpectr], "Player Disconected", 700, 3);
	}
	if(GetPVarInt(playerid,"egg_start") == 1) {
		EndEgg(playerid);
		DeletePVar(playerid,"egg_start");
		TI[playerid][tJobSalary] = 0;
	}
	if(avir[playerid] != -1) {
		PI[playerid][pMember] = TI[playerid][preOrg];
		PI[playerid][pRank] = TI[playerid][preOrgg];
		avir[playerid] = -1;
		SERIU[playerid][sID] = -1;
		TI[playerid][preOrg] = 0;
		TI[playerid][preOrgg] = 0;
		UpdatePlayerData(playerid,"pRank",PI[playerid][pRank]);
	}
	if(TI[playerid][tJobWood][0]) {
		RemovePlayerAttachedObject(playerid,9);
		if(TI[playerid][tJobWood][2] != -1) {
			WD::[TI[playerid][tJobWood][2]][woodUse] = false;
		}
	}
	if(TI[playerid][tArendKey] != -1) {
		new v = TI[playerid][tArendKey];
		if(ArendInfo[v][aPlayerID] == playerid) {
			ArendInfo[v][aPlayerID] = INVALID_PLAYER_ID;
			SetVehicleToRespawn(ArendInfo[v][aID]);
		}
	}
	if(TI[playerid][tJobSad][1]) {
		if(SI[TI[playerid][tJobSad][1]-1][sad_temp] == 1) {
			UpdateDynamic3DTextLabelText(SI[TI[playerid][tJobSad][1]-1][sad_3dtext],-1,"Дерево\nСтадия - сохнет\nФермер - Отсутствует");
			SI[TI[playerid][tJobSad][1]-1][sad_temp] = 0;
		}
	}
	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) CheckPlayerGoCuff(playerid);
	if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID) {
		TI[GotoInfo[playerid][gtID]][tCuffed] = false;
		TI[GotoInfo[playerid][gtID]][tCuffedTime] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID],true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
		ClearAnims(GotoInfo[playerid][gtID]);
		SendOk(GotoInfo[playerid][gtID],"Вы были выпущены с конвоя");
		CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
		CheckPlayerGoCuff(playerid);
	}
	if(p_mh[playerid]!=PlayerText:-1) {
		PlayerTextDrawHide(playerid,p_mh[playerid]);
		PlayerTextDrawDestroy(playerid,p_mh[playerid]);
		p_mh[playerid]=PlayerText:-1;
	}
	CheckPlayerGoCuff(playerid);
	if(fam_lable[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabelEx(fam_lable[playerid]);
		fam_lable[playerid] = Text3D:-1;
	}
	for(new i; i<3; i++) {
		if(calls_ether[i] == playerid) {
			calls_ether[i] = INVALID_PLAYER_ID;
			SendOk(calls_news[i], "Игрок вышел из игры");
		}
		if(calls_news[i] == playerid && calls_ether[i] != INVALID_PLAYER_ID) {
			SendOk(calls_ether[i], "Ведущий вышел из игры");
			PhoneStatus(calls_ether[i],false);
			calls_ether[i] = INVALID_PLAYER_ID;
			calls_news[i] = INVALID_PLAYER_ID;
		}
	}
	if(GetPVarInt(playerid,"adchecking_fix")) {
		gAdvert[GetPVarInt(playerid,"adchecking_fix")-1][adCheking]=false;
		DeletePVar(playerid,"adchecking_fix");
	}
	if(Casino_Flag[playerid][select_casino_table] != -1 ){
		ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
		Casino_Flag[playerid][select_casino_table] = -1;
	}
	if(PTD_DiceStat[playerid]!=PlayerText:-1){
		PlayerTextDrawDestroy(playerid,PTD_DiceStat[playerid]);
		PTD_DiceStat[playerid]=PlayerText:-1;
	}
	if(buy_player_skins[playerid]!=PlayerText:-1){
		PlayerTextDrawDestroy(playerid,buy_player_skins[playerid]);
		buy_player_skins[playerid]=PlayerText:-1;
	}
	if(skill_player_td[playerid][0]!=PlayerText:-1){
		PlayerTextDrawDestroy(playerid,skill_player_td[playerid][0]);
		skill_player_td[playerid][0]=PlayerText:-1;
	}
	if(skill_player_td[playerid][1]!=PlayerText:-1){
		PlayerTextDrawDestroy(playerid,skill_player_td[playerid][1]);
		skill_player_td[playerid][1]=PlayerText:-1;
	}
	if(GetPVarInt(playerid,"block")) {
		if(ObjectShip[playerid] != 0x7F800000) {
			DestroyDynamicObject(ObjectShip[playerid]);
		}
		DestroyDynamicArea(GetPVarInt(playerid,"Ships"));
		DestroyDynamic3DTextLabelEx(ShipText[playerid]);
	}
	if(TI[playerid][tPhoneCaller] == playerid || TI[playerid][tPhoneCalled] == playerid) {
		new id;
		if(TI[playerid][tPhoneCaller] == playerid) id = TI[playerid][tPhoneCalled];
		else if(TI[playerid][tPhoneCalled] == playerid) id = TI[playerid][tPhoneCaller];
		else return SendClientMessage(playerid,COLOR_LIGHTRED,"Ошибка (#112)");
		SendOk(id,"Абонент отключился, связь прекращена");
		PhoneStatus(id,false);
		TI[playerid][tPhoneCaller] = INVALID_PLAYER_ID;
		TI[playerid][tPhoneCalled] = INVALID_PLAYER_ID;
		TI[id][tPhoneCaller] = INVALID_PLAYER_ID;
		TI[id][tPhoneCalled] = INVALID_PLAYER_ID;
		TI[playerid][tPhone] = false;
		TI[id][tPhone] = false;
	}
	for(new i=0; i < 10; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);

	format(WantNickChange[playerid],MAX_PLAYER_NAME, "");
	
	new year, month,day;
	getdate(year, month, day);
	new hour, minute, second;
	gettime(hour, minute, second);
	new query[558],string[128];
	
	GetPlayerIp(playerid,player_ip_check[playerid],16);
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pOnline` = '%02d-%02d-%02d',`pvIp` = '%s',`pSatiety` = '%d' WHERE `pID` = '%d' LIMIT 1",day, month, year,player_ip[playerid],PI[playerid][pSatiety],PI[playerid][pID]);
	mysql_pquery(connects, query, "", "");
	
	if(PI[playerid][pAdmin] > 0 && dostup[playerid] == 1) {
		static const Names_Days[7][22] = {"online_monday", "online_tuesday", "online_wednesday", "online_thursday", "online_friday", "online_saturday", "online_sunday"};

		MYSQL_GLOBAL[0] = EOS;
		mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),"UPDATE `admin` SET `%s` = '%d', `kick` = '%d', `ban` = '%d', `mute` = '%d', `pm` = '%d', `warn` = '%d', `jail` = '%d',`vig`='%d',`blockadmin`='%d',online_status = '0' WHERE `Name` = '%s' LIMIT 1",Names_Days[weekcurrent], gAdminTime[playerid],gAdmin[playerid][0],gAdmin[playerid][1],gAdmin[playerid][2],gAdmin[playerid][3],gAdmin[playerid][4],gAdmin[playerid][5],gAdmin[playerid][6],gAdmin[playerid][7],player_name[playerid]);
		mysql_pquery(connects, MYSQL_GLOBAL, "", "");

		format(string, sizeof(string), "[A-%d] «"G" %s отключился",PI[playerid][pAdmin],player_name[playerid]);
		if(gAdmin[playerid][7] != 1) SendAdminMessage(0xfF69329ff, string);
		dostup[playerid] = 0;
	}
	if(TK_Trailer[playerid] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(TK_Trailer[playerid]);
		TK_Trailer[playerid] = INVALID_VEHICLE_ID;
		Delete3DTextLabel(Gruz[playerid]);
		DeletePVar(playerid,"attach_trailer");
	}
	if(IsValid3DTextLabel(gPlayerBusText[playerid])) DestroyDynamic3DTextLabelEx(gPlayerBusText[playerid]);
	if(PlayerMehText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabelEx(PlayerMehText[playerid]);
		PlayerMehText[playerid] = Text3D:-1;
	}
	if(PlayerEatText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabelEx(PlayerEatText[playerid]);
		PlayerEatText[playerid] = Text3D:-1;
	}
	if(GetPVarInt(playerid,"veh_id_cleaner")) {
		SetVehicleToRespawn(GetPVarInt(playerid,"veh_id_cleaner"));
		DeletePVar(playerid,"veh_id_cleaner");
	}
	if(GetPVarInt(playerid,"veh_id_taxi")) {
		SetVehicleToRespawn(GetPVarInt(playerid,"veh_id_taxi"));
		EndTaxi(playerid);
	}
	if(GetPVarInt(playerid,"clear_id")) {
		SetVehicleToRespawn(GetPVarInt(playerid,"clear_id"));
		EndClear(playerid);
	}
	if(GetPVarInt(playerid,"burger_vehid")) {
		A_DestroyVehicle(GetPVarInt(playerid,"burger_vehid"));
		DeletePVar(playerid,"burger_vehid");
	}
	if(GetPVarInt(playerid,"bus_id")) {
		SetVehicleToRespawn(GetPVarInt(playerid,"bus_id"));
		EndBus(playerid);
	}
	if(GetPVarInt(playerid,"inc_start")) {
		SetVehicleToRespawn(GetPVarInt(playerid,"veh_id_inc"));
		DeletePVar(playerid,"veh_id_inc");
	}
	if(GetPVarInt(playerid,"mehjob")) {
		SetVehicleToRespawn(GetPVarInt(playerid,"mehjob"));
		EndMeh(playerid);
	}
	if(GetPVarInt(playerid,"eatjob")) {
		SetVehicleToRespawn(GetPVarInt(playerid,"eatjob"));
		EndEat(playerid);
	}
	if(TI[playerid][tJobSad][0]) EndSad(playerid);
	if(TI[playerid][tJobGun][0]) EndGun(playerid);
	
	PI[playerid][pAdmin] = 0;
	TI[playerid][tLogin] = false;
	TI[playerid][tSpawn] = false;
	TI[playerid][tJoined] = false;
	TI[playerid][tSelectSkin] = false;

	mysql_format(connects,query,sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET `pHP` = '%f', `online_status` = '1001' WHERE pID = '%d'",PI[playerid][pHP],PI[playerid][pID]);
	mysql_tquery(connects,query, "", "");
	
	PI[playerid][pPhone] = 0;
	if(gOnlinePlayer[playerid][0] > 1)
	{
		query[0] = EOS;
		format(query,256,"SELECT * FROM online_player WHERE date >= CURDATE() AND accountid = %d",PI[playerid][pID]);
		new Cache:result = mysql_query(connects, query);
		new rows = cache_num_rows();
		if(!rows) {
			query[0] = EOS;
			mysql_format(connects, query, sizeof(query),"INSERT INTO online_player (accountid,date,online_sec,afk_sec) VALUES (%d, CURDATE(), %d, %d)", PI[playerid][pID], gOnlinePlayer[playerid][0], gOnlinePlayerAFK[playerid][0]);
			mysql_tquery(connects,query);
		}
		else
		{
			query[0] = EOS;
			mysql_format(connects, query, sizeof(query),"UPDATE online_player SET online_sec = %d, afk_sec = %d WHERE accountid = %d AND date >= CURDATE()", gOnlinePlayer[playerid][0], gOnlinePlayerAFK[playerid][0], PI[playerid][pID]);
			mysql_tquery(connects,query);
		}
		if (cache_is_valid(result)) cache_delete(result);
	}
	SaveSpawnData(playerid);
	DeleteHackerPVar(playerid, 5);
	DeletePVarHack(playerid);
	//RemoveMask(playerid);
	RobLeave(playerid);
	return true;
}
public OnPlayerDeath(playerid, killerid, reason) {
	for (new i = 0; i < TOTALGZ; i++)
	{
		if(GZInfo[i][ZoneOnBattle] == 1 && killerid != INVALID_PLAYER_ID)
		{
			if(GetIDGZ(killerid) != -1 && GetIDGZ(playerid) != -1)
			{
				if(PI[killerid][pMember] == GZInfo[i][gNapad] && PI[killerid][pMember] != PI[playerid][pMember] || PI[killerid][pMember] == GZInfo[i][gFrakVlad] && PI[killerid][pMember] != PI[playerid][pMember])
				{
					if(PI[playerid][pMember] == GZInfo[i][gNapad] || PI[playerid][pMember] == GZInfo[i][gFrakVlad])
					{
						switch(reason) {
						case 0,5: CountOnZone[PI[killerid][pMember]] += 3;
						default: CountOnZone[PI[killerid][pMember]] ++;
						}
						ghetto_OnPlayerKill(killerid, playerid);
						PI[killerid][pZahvat] += 1;
						UpdatePlayerData(killerid,"zahvat",PI[killerid][pZahvat]);
						SetPVarInt(killerid,"killed_shot",GetPVarInt(killerid,"killed_shot")+1);
						SendDead(PI[killerid][pMember],PI[playerid][pMember],killerid,playerid,reason);
						if(QuestProgress[killerid][18] < 50 && AcceptQuest[killerid][18] != 0) QuestProgress[killerid][18] ++,save_quest(killerid,18);
						if(QuestProgress[killerid][18] == 50 && AcceptQuest[killerid][18] != 0) {
							D(killerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Война за территорию'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
						}
					}
				}
			}
		}
	}
	
	blackjack_LeaveGame(playerid);
	if(GetPVarInt(playerid,"inc_start"))
	{
		DeletePVar(playerid,"vg_atm");
		DeletePVar(playerid,"inc_start");
	}
	DisablePlayerCheckpoint(playerid);
	DeletePVar(playerid, "SettingGraffiti");
	if(GetPVarInt(playerid,"ChangingSkin")) {
		A_SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
		cancel_skin(playerid);
	}
	if(TK_Trailer[playerid] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(TK_Trailer[playerid]);
		TK_Trailer[playerid] = INVALID_VEHICLE_ID;
		Delete3DTextLabel(Gruz[playerid]);
		DeletePVar(playerid,"attach_trailer");
	}
	DeletePVar(playerid,"kanal_skin");
	DeletePVar(playerid,"_musor");
	gKilled[playerid] = 1;
	for(new i=0; i < 10; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);

	TI[playerid][tMasked] = 0;
	DeletePVar(playerid,"carrygun");
	DeletePVar(playerid,"use_mats");
	DeletePVar(playerid,"takephone");
	DeletePVar(playerid,"takeradio");

	if(IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicleAC(playerid);
	
	if(GetPVarInt(playerid,"adchecking_fix")) {
		gAdvert[GetPVarInt(playerid,"adchecking_fix")-1][adCheking]=false;
		DeletePVar(playerid,"adchecking_fix");
	}
	if(GotoInfo[playerid][gtGoID]!=INVALID_PLAYER_ID) CheckPlayerGoCuff(playerid);
	if(GotoInfo[playerid][gtID]!=INVALID_PLAYER_ID) {
		TI[GotoInfo[playerid][gtID]][tCuffed] = false;
		TI[GotoInfo[playerid][gtID]][tCuffedTime] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID],true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
		ClearAnims(GotoInfo[playerid][gtID]);
		SendOk(GotoInfo[playerid][gtID],"Вы были выпущены с конвоя");
		CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
		CheckPlayerGoCuff(playerid);
	}
	if(p_mh[playerid]!=PlayerText:-1) {
		PlayerTextDrawHide(playerid,p_mh[playerid]);
		PlayerTextDrawDestroy(playerid,p_mh[playerid]);
		p_mh[playerid]=PlayerText:-1;
	}
	if(GetPVarInt(playerid,"egg_start") == 1) {
		EndEgg(playerid),
		DeletePVar(playerid,"egg_start");
		for(new i = 0;i < 4;i++) {
			PlayerTextDrawHide(playerid,work_td[playerid][i]);
		}
		TI[playerid][tJobSalary] = 0;
	}
	if(GetPVarInt(playerid,"burger_job"))
	{
		if(GetPVarInt(playerid,"burger_vehid") != 0) {
			A_DestroyVehicle(GetPVarInt(playerid,"burger_vehid"));
		}
		DeletePVar(playerid,"check_pizza");
		DeletePVar(playerid,"burger_job");
		DeletePVar(playerid,"burger_vehid");
	}
	if(killerid != INVALID_PLAYER_ID)
	{
	   if(hellow[playerid] == 1 && hellow[killerid] == 1)
	   {
          PI[killerid][pEkills] += 1;
    	  UpdatePlayerData(killerid, "e_kills", PI[killerid][pEkills]);

		  new str[97];
	  	  format(str,sizeof(str),"~g~Killed:~w~ %d",PI[killerid][pEkills]);
		  PlayerTextDrawSetString(killerid, DmArenaTextDraw[killerid], str);
		  PlayerTextDrawShow(killerid, DmArenaTextDraw[killerid]);
  	   }
	}
	if(BizWarTime[1] > 0 && killerid != INVALID_PLAYER_ID) {
		if(PI[killerid][pMember] != PI[playerid][pMember]) {
			if(PI[killerid][pMember] == MZInfo[bNapad] || PI[killerid][pMember] == MZInfo[bFrakVlad]) {
				if(PI[playerid][pMember] == MZInfo[bNapad] || PI[playerid][pMember] == MZInfo[bFrakVlad]) {
					if(PlayerToKvadrat(killerid, mafia_zone[war_gangzone][0], mafia_zone[war_gangzone][1], mafia_zone[war_gangzone][2], mafia_zone[war_gangzone][3]) && PlayerToKvadrat(playerid, mafia_zone[war_gangzone][0], mafia_zone[war_gangzone][1], mafia_zone[war_gangzone][2], mafia_zone[war_gangzone][3])) {
						MZInfo[bCountDead][PI[killerid][pMember]]++;
						SendDead(PI[killerid][pMember],PI[playerid][pMember],killerid,playerid,reason);
						SetPVarInt(killerid,"m_killed_shot",GetPVarInt(killerid,"m_killed_shot") + 1);
						
						PI[killerid][pZahvat] += 1;
						UpdatePlayerData(killerid,"zahvat",PI[killerid][pZahvat]);
						
						if(QuestProgress[killerid][30] < 50 && AcceptQuest[killerid][30] != 0) QuestProgress[killerid][30] ++,save_quest(killerid,30);
						if(QuestProgress[killerid][30] == 50 && AcceptQuest[killerid][30] != 0) {
							D(killerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Война за бизнес'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
						}
						
						if(PI[killerid][pFamily]) reputation_family(PI[killerid][pFamily]-1,1);
						if(PI[playerid][pFamily]) reputation_family(PI[playerid][pFamily]-1,-1);
					}
				}
			}
		}
	}
	if(game_start == 1 && player_to_game[playerid] == 1 && player_to_game[killerid] == 1) {
		kills_player_game[killerid]++;
		new string[128];
		mysql_format(connects, string, sizeof(string),"UPDATE `dm_arena` SET `kills_dm` = '%d' WHERE `Name` = '%e'", kills_player_game[killerid], player_name[killerid]);
		mysql_tquery(connects, string, "", "");
	}
	if(TimerRobWeapon > 0 && killerid != INVALID_PLAYER_ID){
		if(IsACopAndArm(killerid)){
			if(IsAMafiaAndGang(playerid) && PI[playerid][pMember] != PI[killerid][pMember]){
				if(IsPlayerInRangeOfPoint(playerid, 150.0, 118.5647,-273.9576,1.6274)){
	                SendClientMessage(killerid, COLOR_GREY, "За 1 убийство незнакомца, который проник на запрещенную территорию, вы получаете $"G"1500");
					GiveMoney(killerid, 1500, "Убийство нелегала за проникновение.");
					KillerWarCop ++;
					foreach(Player, i)
					{
					    new str[150];
			    		format(str, sizeof(str), "%d", KillerWarCop);
					    PlayerTextDrawSetString(i, CaptPlayer[i][4], str);
					}
					
				}
			
			}
		}
		if(IsAMafiaAndGang(killerid)){
			if(IsACopAndArm(playerid) && PI[playerid][pMember] != PI[killerid][pMember]){
			    KillerWarGang ++;
                foreach(Player, i)
				{
				    new str[150];
				    format(str, sizeof(str), "%d", KillerWarGang);
					PlayerTextDrawSetString(i, CaptPlayer[i][3], str);
                }
			}
		}
	}
	if(LastAirDrop[airTime] > 0 && killerid != INVALID_PLAYER_ID)
	{
		if(IsAGang(killerid) || IsAMafia(killerid))
		{
			if(IsAGang(playerid) || IsAMafia(playerid) && PI[playerid][pMember] != PI[killerid][pMember])
			{
				if(PlayerToKvadrat(playerid,2190.609375, -662.328125, 2385.609375, -521.328125) ||
						PlayerToKvadrat(playerid, 1335.609375, -357.328125, 1483.609375, -231.328125) ||
						PlayerToKvadrat(playerid, -591.390625, 153.671875, -443.390625, 279.671875) ||
						PlayerToKvadrat(playerid, -1128.390625, -1721.328125, -980.390625, -1595.328125) ||
						PlayerToKvadrat(playerid, -956.40625, -2724.3125, -808.40625, -2598.3125) ||
						PlayerToKvadrat(playerid, -63.40625, -2779.3125, 67.59375, -2657.3125))
				{
					GiveMoney(killerid,1500,"AirDrop");
				}
			}
		}
	}
	if(IsACop(killerid) && killerid != INVALID_PLAYER_ID && TI[playerid][tPobeg] > 0)
	{
		GiveMoney(killerid,5000,"Убийство ооп");
		if(PI[playerid][pJailTime] > 0) {
			PI[playerid][pJailTime] = PI[playerid][pJailTime]*2;
			UpdatePlayerData(playerid,"pJailTime", PI[playerid][pJailTime]);
		}
	}
	if(IsAArm(killerid) && killerid != INVALID_PLAYER_ID)
	{
		if(IsAGang(playerid) || IsAMafia(playerid))
		{
			if(GetPlayerVirtualWorld(playerid) == 31 && GetPlayerVirtualWorld(killerid) == 31 &&
					GetPlayerInterior(playerid) == 6 && GetPlayerInterior(killerid) == 6) GiveMoney(killerid,500,"Убийство бандита на территории армии");
			if(PlayerToKvadrat(killerid, -1544.892, 270.5747, -1232.015, 558.557))
			{
				if(PlayerToKvadrat(playerid, -1544.892, 270.5747, -1232.015, 558.557))
				{
					GiveMoney(killerid,50000,"Убийство на тер.армии");
				}
			}
		}
	}
	if(killerid != INVALID_PLAYER_ID)
	{
		if(TI[killerid][tDM] > 0 && TI[playerid][tDM] > 0)
		{
			TI[killerid][tDM_k]++; // kill +
			TI[playerid][tDM_d]++; // kill --
			
			SetPlayerHealth(killerid, 100);
			
			new str[150];
			format(str,sizeof(str),"~g~Killed:~w~ %d~n~~r~Death:~w~ %d",TI[playerid][tDM_k],TI[playerid][tDM_d]);
			PlayerTextDrawSetString(playerid, DmArenaTextDraw[playerid], str);
			PlayerTextDrawShow(playerid, DmArenaTextDraw[playerid]);
			
			format(str,sizeof(str),"~g~Killed:~w~ %d~n~~r~Death:~w~ %d",TI[killerid][tDM_k],TI[killerid][tDM_d]);
			PlayerTextDrawSetString(killerid, DmArenaTextDraw[killerid], str);
			PlayerTextDrawShow(killerid, DmArenaTextDraw[killerid]);
		}
	}
	if(IsAGang(killerid) && killerid != INVALID_PLAYER_ID) {
		if(IsAArm(playerid) && start_work[playerid]) {
			for (new i = 0; i < TOTALGZ; i++) {
				if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) {
					if(GetPlayerSkin(playerid) != 252 || PI[playerid][pFracSkin] != 252) {
						PI[playerid][pFracSkin] = 252;
						SendOk(playerid, "вы сняли армейскую форму");
						SendOk(killerid, "Вы cняли с армейца форму, введите /dress, чтобы переодеться");
						PI[killerid][pZakonp] -= 2;
						if(PI[killerid][pZakonp] < -100) PI[killerid][pZakonp] = -100;
						UpdatePlayerData(killerid,"pZakonp",PI[killerid][pZakonp]);
						AddItem(killerid, 427, 1);
						if(QuestProgress[killerid][16] == 0 && AcceptQuest[killerid][16] != 0)
						{
							QuestProgress[killerid][16] ++;
							D(killerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Армейская форма'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
							NextStapQI(killerid,16);
						}
					}
				}
			}
		}
	}
	if(killerid != INVALID_PLAYER_ID)
	{
		if(!TI[killerid][tGym]) {
			if(PI[playerid][pSearch] > 0) {
				if(IsACop(killerid)) {
					new search,src = PI[playerid][pSearch];
					if(PI[playerid][pSearch] <= 5) search = 600;
					else search = 750;
					arrest(playerid, src*search);
					
					static const f_str_1[] = "Вы были посажены в тюрьму офицером %s на %d секунд";
					new string_1[sizeof(f_str_1)  +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];

					format(string_1,sizeof(string_1),f_str_1,player_name[killerid],(src * search));
					SendClientMessage(playerid,COLOR_LIGHTRED,string_1);

					static const f_str_2[] = "Вы посадили в тюрьму преступника %s на %d секунд";
					new string_2[sizeof(f_str_2) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];

					format(string_2,sizeof(string_2),f_str_2,player_name[playerid],(src * search));
					SendClientMessage(killerid,COLOR_LIGHTRED,string_2);
				}
			}
		}
	}
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pAdmin] > 0 && dostup[i] && PI[i][pAdmKL]) {
			SendDeathMessageToPlayer(i, killerid, playerid, reason);
		}
	}
	TI[playerid][tMaskTime] = 0;
	TI[playerid][tTazers][0] = 0;
	if(!PI[playerid][pAdmin] && !TI[playerid][tGym] && PI[playerid][pMember] == 0 && TI[playerid][tDuel] == -1) SetPlayerHospital(playerid);
	RobLeave(playerid);
	return true;
}
#if !defined _INC_WEAPON_CONFIG
public OnPlayerDamage(&playerid, &Float:amount, &issuerid, &weapon, &bodypart)
#else
public OnPlayerDamage(&playerid, &Float: amount, &issuerid, &weapon, &bodypart)
#endif
{
	if (!IsPlayerConnected(playerid) || !TI[playerid][tLogin])
	return false;
	#if !defined _INC_WEAPON_CONFIG
	new weapon = weaponid;
	#endif
	
	if(IsPlayerConnected(playerid) && IsPlayerConnected(issuerid) && IsPlayerStreamedIn(playerid,issuerid))
	{
		if(gm_player[playerid] == 1 || GetPVarInt(playerid,"gun_weap")) return 0;
		if(IsAGreenZone(playerid) && !IsACop(issuerid) && !IsAArm(issuerid) && PI[issuerid][pMember] != fWHITEHOUSE)
		{
			return 0;
		}
		if(TI[playerid][tDM] == 0)
		{
			if(GetPVarInt(playerid, "ppkz") == 1 && GetPVarInt(issuerid, "ppkz") == 0)
			{
				SendClientMessage(issuerid, COLOR_GREY, "По игроку запрещено наносить урон во время капта");
				return 0;
			}
			if(GetPVarInt(issuerid, "ppkz") == 1 && GetPVarInt(playerid, "ppkz") == 0)
			{
				SendClientMessage(issuerid, COLOR_GREY, "По игроку запрещено наносить урон во время капта");
				return 0;
			}
		}
		if(GetPVarInt(playerid, "ppkz") == 1 || PI[playerid][pMember] != PI[issuerid][pMember])  {
			ghetto_OnPlayerDMG(issuerid, playerid, amount);
		}
		if(weapon == 3 && PI[issuerid][pMember] == fWHITEHOUSE && !IsACop(playerid))
		{
			switch(GetPlayerAnimationIndex(issuerid)) {
			case 17: SetTimerEx("UnTazer",5 * 1000, 0, "i", playerid);
			case 18: SetTimerEx("UnTazer",10 * 1000, 0, "i", playerid);
			case 19: SetTimerEx("UnTazer",15 * 1000, 0, "i", playerid);
			default: SetTimerEx("UnTazer",10 * 1000, 0, "i", playerid);
			}
			TI[playerid][tTazers][2] = issuerid;
			TI[issuerid][tTazers][2] = playerid;
			TI[playerid][tTazer] = true;
			TogglePlayerControllable(playerid,false);
			ApplyAnimation(playerid, "PED", "FLOOR_hit_f", 4.0, 0, 1, 1, 1, 0, 1);
			new string[60];
			format(string,sizeof(string),"оглушил(а) %s",player_name[playerid]);
			MeAction(issuerid,string); 
			return 1;
		}
		if(PI[playerid][pMember] == PI[issuerid][pMember] && TI[playerid][tDM] == 0 && TI[issuerid][tDM] == 0 && TI[playerid][tDuel] == -1 && TI[issuerid][tDuel] == -1 && FI[PI[issuerid][pMember]][fAntiTK] && GetPVarInt(issuerid, "fight_start") != 1) {
			GameTextForPlayer(issuerid,"~r~ANTI TEAM KILL", 2500, 6);
			return 0;
		}
		if(weapon == 3 || (TI[issuerid][tTazers][0] > 0 && weapon == TI[issuerid][tTazers][1])) {
			if(!TI[playerid][tTazer] ) {
				if(IsACop(issuerid)) {
					if(TI[issuerid][tTazers][0] > 0 && weapon != 3) {
						TI[issuerid][tTazers][0]--;
						if(TI[issuerid][tTazers][0] == 0) {
							SendClientMessage(issuerid, COLOR_GREY,"Парализующие боеприпасы закончены. Следующая зарядка через 2 минуты");
							SetPVarInt(issuerid ,"tazershoottime", unix + 60*2);
							TI[issuerid][tTazers][0] = 0;
							TI[issuerid][tTazers][1] = 0;
						}
					}
					switch(GetPlayerAnimationIndex(issuerid)) {
					case 17: SetTimerEx("UnTazer",5 * 1000, 0, "i", playerid);
					case 18: SetTimerEx("UnTazer",10 * 1000, 0, "i", playerid);
					case 19: SetTimerEx("UnTazer",15 * 1000, 0, "i", playerid);
					default: SetTimerEx("UnTazer",10 * 1000, 0, "i", playerid);
					}
					SendClientMessage(issuerid, COLOR_GREY,"Нажмите "P"N"G" около игрока чтобы сковать его");
					TI[playerid][tTazers][2] = issuerid;
					TI[issuerid][tTazers][2] = playerid;
					TI[playerid][tTazer] = true;
					TogglePlayerControllable(playerid,false);
					ApplyAnimation(playerid, "PED", "FLOOR_hit_f", 4.0, 0, 1, 1, 1, 0, 1);
					new string[60];
					format(string,sizeof(string),"оглушил(а) %s",player_name[playerid]);
					MeAction(issuerid,string);
					return false;
				}
			}
		}
	}
	return true;
}

public OnPlayerGiveDamageActor(playerid, damaged_actorid, Float:amount, weaponid, bodypart)
{
	return true;
}

public OnPlayerSpawn(playerid) { 
	if(!TI[playerid][tLogin] || !TI[playerid][tJoined]) return 1;
	if(PI[playerid][pMember] == 0) start_work[playerid] = 0;
	SetPlayerColor(playerid,0xFFFFFF11);
	
	if(IsAGang(playerid) && IsAMafia(playerid)) start_work[playerid] = 1;
	if(PI[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
	}
	else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
	if(GetPVarInt(playerid, "KeyWareHouseWeapon")) DeletePVar(playerid, "KeyWareHouseWeapon");
	ResetPlayerWeapons(playerid);
	leave_robhouse(playerid);
	DeletePVar(playerid,"carrygun");
	DeletePVar(playerid,"vg_narko");
	DeletePVar(playerid,"ograbl_");
	DeletePVar(playerid,"inc_start");
	DeletePVar(playerid,"drug_time"); // kd drugs
	DeletePVar(playerid, "SettingGraffiti");
	TI[playerid][tProcess][0] = -1;
	TI[playerid][tProcess][1] = -1;
	MPTeleportPlayer[playerid] = 0;
	SetPlayerSkills(playerid);
	SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
	if(TI[playerid][tJobSad][0] > 0) EndSad(playerid);

	if(PI[playerid][pHP] < 10) SetHealth(playerid, 10);
	else SetHealth(playerid, PI[playerid][pHP]);
	
	if(GetPVarInt(playerid,"bank_rob")) CancelTextDrawBank(playerid);
	
	if(IsAGang(playerid)) {
		SetHealth(playerid, 95);
	}
	SetPVarInt(playerid, "NoBot", 1);
	if(PI[playerid][pSearch] >= 1) SetPlayerWantedLevel(playerid,PI[playerid][pSearch]);
	switch(PI[playerid][pSettings][5]) {
	case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
	case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
	case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
	case 3: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
	}
	if(SERIU[playerid][sID] != INVALID_PLAYER_ID && PI[playerid][pAdmin] != 0) {
		HideMenuForPlayer(specmenu,playerid);
		PlayerTextDrawHide(playerid,RECON[playerid]);
		TI[SERIU[playerid][sID]][tSpectr] = INVALID_PLAYER_ID;
		SERIU[playerid][sID] = INVALID_PLAYER_ID;
		if(avir[playerid] != -1) {
			PI[playerid][pMember] = TI[playerid][preOrg];
			PI[playerid][pRank] = TI[playerid][preOrgg];
			SetPlayerPosAC(playerid,TI[playerid][Admin_X],TI[playerid][Admin_Y],TI[playerid][Admin_Z],avir[playerid], aint[playerid]);
			SetPlayerVirtualWorld(playerid, avir[playerid]);
			SetPlayerInterior(playerid, aint[playerid]);
			A_SetPlayerSkin(playerid, TI[playerid][pOldSkin]);
			SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
			avir[playerid]=-1;
			TI[playerid][preOrg]=0;
			TI[playerid][preOrgg]=0;
			if(!PI[playerid][pMember]) start_work[playerid] = false,
			UpdatePlayerData(playerid,"FracDuty",start_work[playerid]);
			if(Lastspec[playerid]!=-1) {
				new str[10];
				format(str,10,"%d",Lastspec[playerid]);
				pc_cmd_goto(playerid,str);
				Lastspec[playerid]=-1;
			}
		}
		TogglePlayerControllable(playerid,true);
		return true;
	}
	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) CheckPlayerGoCuff(playerid);
	if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID) {
		TI[GotoInfo[playerid][gtID]][tCuffed] = false;
		TI[GotoInfo[playerid][gtID]][tCuffedTime] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID],true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
		ClearAnims(GotoInfo[playerid][gtID]);
		SendOk(GotoInfo[playerid][gtID],"Вы были выпущены с конвоя");
		CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
		CheckPlayerGoCuff(playerid);
	}
	else if(GetPVarInt(playerid,"duel_on") == 1) {
		SetPlayerPosAC(playerid,2323.2329,-2022.1439,13.5402, 0, 0);
		SetPlayerFacingAngle(playerid,32.0450);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		setX[playerid] = 2323.2329;
		setY[playerid] = -2022.1439;
		setZ[playerid] = 13.5402;
		DeletePVar(playerid,"duel_on");
		SetHealth(playerid, 100.0);
		ResetPlayerWeapons(playerid);
		return true;
	}
	if(game_start == 1 && player_to_game[playerid] == 1) {
		new random_spawn = random(sizeof spawns_pos_game);
		SetPlayerPosAC(playerid,spawns_pos_game[random_spawn][0],spawns_pos_game[random_spawn][1],spawns_pos_game[random_spawn][2], 201, 10);
		SetPlayerFacingAngle(playerid,spawns_pos_game[random_spawn][3]);
		TI[playerid][tVirtualWorld] = 201;
		TI[playerid][tInterior] = 10;
		SetHealth(playerid,100.0);
		SetPlayerVirtualWorld(playerid,201);
		SetPlayerInterior(playerid,10);
		new random_weapon = random(sizeof weapon_id_game);
		GivePlayerWeapon(playerid, weapon_id_game[random_weapon], 999);
		SetPlayerColor(playerid,0xBC2C2CFF);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	if(player_to_race_lv[playerid] || player_to_game[playerid])
	{
		new random_spawn = random(sizeof spawns_pos_game_end);
		SetPlayerPosAC(playerid, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],2,2);
		SetPlayerFacingAngle(playerid, spawns_pos_game_end[random_spawn][4]);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid,2);
		SetPlayerInterior(playerid,2);
		FreezePlayerForTime(playerid,2);
		return true;
	}
	if(TI[playerid][tDM] != 0) {
		dm_zone(playerid, TI[playerid][tDM]);
		return true;
	}
	if(hellow[playerid] == 1) {
		hellow_dm(playerid);
		return true;
	}
	if(GetPVarInt(playerid,"gun_weap"))
	{
		DeletePVar(playerid,"gun_weap");
		RemovePlayerAttachedObject(playerid, 7);
	}
	if (TI[playerid][tDuel] != -1)
	{
		end_duel(playerid, 0);
		return 1;
	}
	SettingSpawn(playerid);
	//NickName(playerid);
	return true;
}
SettingSpawn(playerid) {
	if(TI[playerid][tDuel] != -1 || GetPVarInt(playerid,"duel_on") == 1) return 1;
	SetFullness(playerid, PI[playerid][pSatiety]);
	DollahScoreUpdate(playerid);
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);
	if(PI[playerid][pJailTime] > 0) {
		switch(PI[playerid][pJail]) {
		case 1: {
				SetPlayerPosAC(playerid, 188.1260,-147.6629,1020.2169, 1, 6);
				SetPlayerFacingAngle(playerid,272.5084);
				FreezePlayerForTime(playerid,2);
			}
		case 2: {
				SetPlayerPosAC(playerid, -36.6973,-172.6499,1026.9912, 6, 9);
				SetPlayerFacingAngle(playerid,179.5563);
				FreezePlayerForTime(playerid,2);
			}
		default: { // +3 case prison;
				SetPlayerPosAC(playerid, 3586.3389,-696.4562,20.2399, 0, 0);
				SetPlayerFacingAngle(playerid, 87.7253);
				SetPlayerSkin(playerid, 42);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 0);
				new freezeSeconds = 0;
				switch (GetPlayerPing(playerid)) {
				case 0 .. 49: freezeSeconds = 2;
				case 50 .. 199: freezeSeconds = 3;
				case 200 .. 499: freezeSeconds = 4;
				default: freezeSeconds = 5;
				}
				if(TI[playerid][tPobeg]) {
					TI[playerid][tPobeg] = 0;
					TI[playerid][tPobeg_Z] = 0;
				}
				start_work[playerid] = 0;
				FreezePlayerForTime(playerid, freezeSeconds);
			}
		}
		ResetPlayerWeapons(playerid);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if (TI[playerid][tLastSpawn]) {
		TI[playerid][tLastSpawn] = 0;
		TI[playerid][tTPpick] = bool:PI[playerid][pSpawnTPPick];

		SetPlayerPosAC(playerid,
		PI[playerid][pSpawnPos][0], PI[playerid][pSpawnPos][1], PI[playerid][pSpawnPos][2],
		PI[playerid][pSpawnWorld], PI[playerid][pSpawnInterior]
		);
		SetPlayerFacingAngle(playerid, PI[playerid][pSpawnPos][3]);
		TI[playerid][tVirtualWorld] = PI[playerid][pSpawnWorld];
		TI[playerid][tInterior] = PI[playerid][pSpawnInterior];

		SetPlayerVirtualWorld(playerid, TI[playerid][tVirtualWorld]);
		SetPlayerInterior(playerid, TI[playerid][tInterior]);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	/*else if(TI[playerid][tFight] != -1)
	{
		if(RingInfo[0][rgStart] > 0)
		{
			if(RingInfo[0][rgLoad][1] == 1)
			{
				new r = 0;
				new player1 = RingInfo[r][rgPlayer][0];
				new player2 = RingInfo[r][rgPlayer][1];
				GiveMoney(TI[playerid][tFight],(RingInfo[r][rgPrice]*2),"победа поединок");
				if(PI[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 80);
				else A_SetPlayerSkin(playerid,192);
				if(PI[playerid][pSex] == 1) A_SetPlayerSkin(TI[playerid][tFight], 80);
				else A_SetPlayerSkin(TI[playerid][tFight],192);
				PI[TI[playerid][tFight]][pFight_off] += 1;
				PI[playerid][pFight_off] += 1;
				UpdatePlayerData(playerid,"pFight_off",PI[playerid][pFight_off]);
				UpdatePlayerData(TI[playerid][tFight],"pFight_on",PI[TI[playerid][tFight]][pFight_off]);
				if(QuestProgress[TI[playerid][tFight]][24] < 10 && AcceptQuest[TI[playerid][tFight]][24] != 0) QuestProgress[TI[playerid][tFight]][24] ++,save_quest(playerid,24);
				if(QuestProgress[TI[playerid][tFight]][24] == 10 && AcceptQuest[TI[playerid][tFight]][24] != 0) {
					D(TI[playerid][tFight],DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Продвинутый боец'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
				}
				SetPlayerPosAC(player1,770.9481,5.4735,1000.7145, 76, 5);
				SetPlayerFacingAngle(player1,89.1145);
				SetPlayerVirtualWorld(player1,76);
				SetPlayerInterior(player1,5);
				SetPlayerPosAC(player2,770.9481,5.4735,1000.7145, 76, 5);
				SetPlayerFacingAngle(player2,89.1145);
				SetPlayerVirtualWorld(player2,76);
				SetPlayerInterior(player2,5);
				CheckPlayerRing(playerid);
				DeletePVar(player1,"fight_start");
				DeletePVar(player2,"fight_start");
				return true;
			}
		}
	}*/
	if(TI[playerid][tGym] == true)
	{
		SetPlayerPosAC(playerid,770.9481,5.4735,1000.7145, 76, 5);
		SetPlayerVirtualWorld(playerid,76);
		SetPlayerInterior(playerid,5);
		if(PI[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 80);
		else A_SetPlayerSkin(playerid,192);
		return true;
	}
	else if(PI[playerid][pHospital] != 0) {
		new hosp = PI[playerid][pHospital];
		switch(PI[playerid][pHospital]) {
		case 1,2,3: {
				new rand = random(sizeof(HospitalSpawns));
				SetPlayerPosAC(playerid,HospitalSpawns[rand][0], HospitalSpawns[rand][1], HospitalSpawns[rand][2], hosp + 19, 92);
				SetPlayerFacingAngle(playerid,HospitalSpawns[rand][3]);
				TI[playerid][tVirtualWorld] = hosp + 19;
				TI[playerid][tInterior] = 92;
				SetPlayerVirtualWorld(playerid,hosp + 19);
				SetPlayerInterior(playerid, 92);
				FreezePlayerForTime(playerid,2);
			}
		case 4,5: {
				new rand = random(sizeof(HospitalArmSpawns));
				SetPlayerPosAC(playerid,HospitalArmSpawns[rand][0], HospitalArmSpawns[rand][1], HospitalArmSpawns[rand][2], hosp + 29, 90);
				SetPlayerFacingAngle(playerid,HospitalArmSpawns[rand][3]);
				TI[playerid][tVirtualWorld] = hosp + 29;
				TI[playerid][tInterior] = 90;
				SetPlayerVirtualWorld(playerid,hosp + 19);
				SetPlayerInterior(playerid, 90);
				FreezePlayerForTime(playerid,2);
			}
		}
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if (GetPlayerVehicles(playerid) && PI[playerid][pSpawn] == 4) {
		new player_vehicleid = playerVehicleID[playerid];
		if (PlayerTrailer[player_vehicleid][carOwnerID] == playerid)
		{
			SetPlayerPosAC(playerid, -667.1129,1726.8284,1376.6718, player_vehicleid, 2);
			SetPlayerFacingAngle(playerid, 88.2448);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid, player_vehicleid);
			SetPlayerInterior(playerid, 2);
			new freezeSeconds = 0;
			switch (GetPlayerPing(playerid)) {
			case 0 .. 49: freezeSeconds = 2;
			case 50 .. 199: freezeSeconds = 3;
			case 200 .. 499: freezeSeconds = 4;
			default: freezeSeconds = 5;
			}
			FreezePlayerForTime(playerid, freezeSeconds);
			return true;
		}
	}
	else if((PI[playerid][pHouse] > 0 && PI[playerid][pSpawn] == 1) || (PI[playerid][pTempKey] > 0 && PI[playerid][pSpawn] == 1)) {
		if(PI[playerid][pTempKey] > 0) {
			new interior, Float:r;
			new houseid = PI[playerid][pTempKey] - 1;
			new hint = gHouses[houseid][houseHint];
			TI[playerid][tSelectHouse] = houseid;
			x = hinterior_info[hint][h_pos_spawn][0];
			y = hinterior_info[hint][h_pos_spawn][1];
			z = hinterior_info[hint][h_pos_spawn][2];
			r = hinterior_info[hint][h_pos_spawn][3];
			interior = hinterior_info[hint][h_interior];
			SetPlayerPosAC(playerid, x,y,z, PI[playerid][pTempKey], interior);
			SetPlayerFacingAngle(playerid,r);
			SetPlayerInterior(playerid,interior);
			SetPlayerVirtualWorld(playerid,PI[playerid][pTempKey]);
			SetCameraBehindPlayer(playerid);
			TI[playerid][tVirtualWorld] = PI[playerid][pTempKey];
			TI[playerid][tInterior] = interior;
			TI[playerid][tInHouse] = true;
		}
		else {
			new interior, Float:r;
			new houseid = PI[playerid][pHouse] - 1;
			new hint = gHouses[houseid][houseHint];
			TI[playerid][tSelectHouse] = houseid;
			x = hinterior_info[hint][h_pos_spawn][0];
			y = hinterior_info[hint][h_pos_spawn][1];
			z = hinterior_info[hint][h_pos_spawn][2];
			r = hinterior_info[hint][h_pos_spawn][3];
			interior = hinterior_info[hint][h_interior];
			SetPlayerPosAC(playerid, x,y,z, PI[playerid][pHouse], interior);
			SetPlayerFacingAngle(playerid,r);
			SetPlayerInterior(playerid,interior);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid,PI[playerid][pHouse]);
			TI[playerid][tVirtualWorld] = PI[playerid][pHouse];
			TI[playerid][tInterior] = interior;
			TI[playerid][tInHouse] = true;
		}
		return 1;
	} 
	if(PI[playerid][pRoom] && PI[playerid][pSpawn] == 1)
	{
		new room = PI[playerid][pRoom]-1;
		TI[playerid][tSelectedRoom] = room;
		SetPVarInt(playerid, "selecthouse",Apartment[room][apID]);
		SetPlayerPosAC(playerid, 1262.2700,-744.1382,1164.4824, Apartment[room][aID], 4);
		SetPlayerFacingAngle(playerid,269.3052);
		FreezePlayerForTime(playerid,3);
		SetPlayerInterior(playerid, 4);
		SetPlayerVirtualWorld(playerid, Apartment[room][aID]);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if(PI[playerid][pSpawn] == 3 && PI[playerid][pFamily] && gHouses[gFamily[PI[playerid][pFamily]-1][famHouse]-1][houseFamily]) {
		new houseid = gFamily[PI[playerid][pFamily]-1][famHouse] -1;
		new interior, Float:r;
		new hint = gHouses[houseid][houseHint];
		TI[playerid][tSelectHouse] = houseid;
		x = hinterior_info[hint][h_pos_spawn][0];
		y = hinterior_info[hint][h_pos_spawn][1];
		z = hinterior_info[hint][h_pos_spawn][2];
		r = hinterior_info[hint][h_pos_spawn][3];
		interior = hinterior_info[hint][h_interior];
		SetPlayerPosAC(playerid, x,y,z, houseid, interior);
		SetPlayerFacingAngle(playerid,r);
		SetPlayerInterior(playerid, interior);
		SetPlayerVirtualWorld(playerid,houseid);
		SetCameraBehindPlayer(playerid);
		TI[playerid][tVirtualWorld] = houseid;
		TI[playerid][tInterior] = interior;
		TI[playerid][tInHouse] = true;
		return true;
	}
	if(PI[playerid][pMember] && PI[playerid][pSpawn] == 2 && start_work[playerid]) {
		new fractionid = PI[playerid][pMember];
		SetPlayerPosAC(playerid,gFractionSpawn[fractionid][fracCoordsX],gFractionSpawn[fractionid][fracCoordsY],gFractionSpawn[fractionid][fracCoordsZ],gFractionSpawn[fractionid][fracWorld],
		gFractionSpawn[fractionid][fracInt]);
		SetPlayerInterior(playerid,gFractionSpawn[fractionid][fracInt]);
		SetPlayerVirtualWorld(playerid,gFractionSpawn[fractionid][fracWorld]);
		SetPlayerFacingAngle(playerid,gFractionSpawn[fractionid][fracCoordsA]);
		TI[playerid][tVirtualWorld] = gFractionSpawn[fractionid][fracWorld];
		TI[playerid][tInterior] = gFractionSpawn[fractionid][fracInt];
		SetCameraBehindPlayer(playerid);
		SetPlayerColor(playerid,gFractionSpawn[fractionid][fracColor]);
		new freezeSeconds = 0;
		switch (GetPlayerPing(playerid))
		{
		case 0 .. 49: freezeSeconds = 2;
		case 50 .. 199: freezeSeconds = 3;
		case 200 .. 499: freezeSeconds = 4;
		default: freezeSeconds = 5;
		}
		FreezePlayerForTime(playerid, freezeSeconds);
	}
	else
	{
		new rand = random(sizeof(spawn_ls));
		SetPlayerPosAC(playerid,spawn_ls[rand][0], spawn_ls[rand][1], spawn_ls[rand][2], 0, 0);
		SetPlayerFacingAngle(playerid, spawn_ls[rand][3]);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
		TI[playerid][tVirtualWorld] = 0;
		TI[playerid][tInterior] = 0;
		SetCameraBehindPlayer(playerid);
	    TogglePlayerControllable(playerid, 0);
		SetTimerEx("SPlayer", 2222, false, "i", playerid);
	}
	return true;
}
public OnPlayerEnterCheckpoint(playerid) {
	if(TI[playerid][tJobGun][0]) {
		if(TI[playerid][tJobGun][1] != 2) return SendClientMessage(playerid, COLOR_GREY, "Необходимо взять заготовку");
		for(new id = 0;id < 24;id++) {
			if(IsPlayerInDynamicCP(playerid, gun_pickup[id])) {
				SetPVarInt(playerid,"loadid",id);

				JobTempProcess[playerid] = 3;
				TI[playerid][tProcess][0] = 0;
				TI[playerid][tProcess][1] = 10;
				PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
				for(new YN = 0;YN < 3;YN++) {
					TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
					if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
				}
				RandomYareNforJOBS(playerid);
			}
		}
	}
	new vehicleid = GetPlayerVehicleID(playerid);
	switch(GetPVarInt(playerid,"MatsArmyCar"))
	{
	case 1..4: {
			DisablePlayerCheckpoint(playerid);
			if(GetPVarInt(playerid,"MatsArmyCar") == 1 && !IsPlayerInRangeOfPoint(playerid, 10.0, 1535.8534,-1674.4445,13.3828)) return 1;
			if(GetPVarInt(playerid,"MatsArmyCar") == 2 && !IsPlayerInRangeOfPoint(playerid, 10.0, 1611.7229,-1262.0503,17.4984)) return 1;
			if(GetPVarInt(playerid,"MatsArmyCar") == 3 && !IsPlayerInRangeOfPoint(playerid, 10.0, 2756.4651,-2467.2695,13.4252)) return 1;
			if(GetPVarInt(playerid,"MatsArmyCar") == 4 && !IsPlayerInRangeOfPoint(playerid, 10.0, 637.0894,-570.6320,16.1875)) return 1;
			new string[96];
			if(VG[vehicleid][vgAmount][0] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Грузовик пуст");
			switch(GetPVarInt(playerid,"MatsArmyCar")) {
			case 1: {
					FI[fLSPD][fMats] += VG[vehicleid][vgAmount][0]*500;
					if(FI[fLSPD][fMats] > 500000) FI[fLSPD][fMats] = 500000;
					format(string,sizeof(string),"Боеприпасы успешно выгружены! На складе Полиции ЛС: %i",FI[fLSPD][fMats]);
					SendOk(playerid,string);
				}
			case 2: {
					FI[fFBI][fMats] += VG[vehicleid][vgAmount][0]*500;
					if(FI[fFBI][fMats] > 500000) FI[fFBI][fMats] = 500000;
					format(string,sizeof(string),"Боеприпасы успешно выгружены! На складе ФБР: %i",FI[fFBI][fMats]);
					SendOk(playerid,string);
				}
			case 3: {
					FI[fARMYLS][fMats] += VG[vehicleid][vgAmount][0]*500;
					if(FI[fARMYLS][fMats] > 1000000) FI[fARMYLS][fMats] = 1000000;
					format(string,sizeof(string),"Боеприпасы успешно выгружены! На складе Нац. Гвардии: %i",FI[fARMYLS][fMats]);
					SendOk(playerid,string);
				}
			case 4: {
					FI[fRCSD][fMats] += VG[vehicleid][vgAmount][0]*500;
					if(FI[fRCSD][fMats] > 1000000) FI[fRCSD][fMats] = 1000000;
					format(string,sizeof(string),"Боеприпасы успешно выгружены! На складе RCSD: %i",FI[fRCSD][fMats]);
					SendOk(playerid,string);
				}
			}
			VG[vehicleid][vgAmount][0] = 0;
			DeletePVar(playerid,"MatsArmyCar");
		}
	case 6: {
			static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите загрузить в грузовик:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"В грузовик поместится: "ORANGE"%d";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,zavodsklad,70-VG[vehicleid][vgAmount][0]);
			D(playerid, D_ARMY_CARM_SF_4, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
	case 7: {
			static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите разгрузить на склад:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"На склад поместится: "ORANGE"%d";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYLS][fMats]);
			D(playerid, D_ARMY_CARM_SF_6, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
	case 11: {
			if(VG[vehicleid][vgAmount][0]) return SendClientMessage(playerid, COLOR_GREY, "В автомобиле уже есть боеприпасы");
			if(FI[fARMYLS][fMats] < 12500) return SendClientMessage(playerid, COLOR_GREY, "На складе армии недостаточно боеприпасов");
			VG[vehicleid][vgAmount][0] = 25;
			FI[fARMYLS][fMats] -= 500*25;
			SendOk(playerid,"Боеприпасы успешно загружены! Доступно ящиков:"P" 25");
			SendOk(playerid,"Для разгрузки боеприпасов введите: /unload");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
	}
	switch(GetPVarInt(playerid,"DrugsMafiaCar")) {
	case 1: {
			if(!PlayerToPoint(2.0,playerid,2643.5884,-2023.2747,13.5469)) {
				DeletePVar(playerid,"DrugsMafiaCar");
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fBALLAS][fDrugsBuy]) return SendClientMessage(playerid, COLOR_GREY, "Банда не нуждается в покупке наркотиков") ;
			static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать The Ballas:\n\n\
									Доступно наркотиков: "ORANGE"%d"W"\n\
									Склад банды: "ORANGE"%d\n\
									"W"Заказ банды: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fBALLAS][fDrugs],FI[fBALLAS][fDrugsBuy],FI[fBALLAS][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
			SetPVarInt(playerid,"sell_gdrugs",1);
		}
	case 2: {
			if(!PlayerToPoint(2.0,playerid,2753.4912,-1176.2693,69.4065)) {
				DeletePVar(playerid,"DrugsMafiaCar");
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fVAGOS][fDrugsBuy]) return SendClientMessage(playerid, COLOR_GREY, "Банда не нуждается в покупке наркотиков") ;
			static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать The Vagos:\n\n\
									Доступно наркотиков: "ORANGE"%d"W"\n\
									Склад банды: "ORANGE"%d\n\
									"W"Заказ банды: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fVAGOS][fDrugs],FI[fVAGOS][fDrugsBuy],FI[fVAGOS][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
			SetPVarInt(playerid,"sell_gdrugs",2);
		}
	case 3: {
			if(!PlayerToPoint(2.0,playerid,2500.5557,-1681.2760,13.3686)) {
				DeletePVar(playerid,"DrugsMafiaCar");
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fGROVE][fDrugsBuy]) return SendClientMessage(playerid, COLOR_GREY, "Банда не нуждается в покупке наркотиков") ;
			static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать The Grove:\n\n\
									Доступно наркотиков: "ORANGE"%d"W"\n\
									Склад банды: "ORANGE"%d\n\
									"W"Заказ банды: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fGROVE][fDrugs],FI[fGROVE][fDrugsBuy],FI[fGROVE][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
			SetPVarInt(playerid,"sell_gdrugs",3);
		}
	case 4: {
			if(!PlayerToPoint(2.0,playerid,1672.8441,-2141.0789,13.5469)) {
				DeletePVar(playerid,"DrugsMafiaCar");
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fAZTEC][fDrugsBuy]) return SendClientMessage(playerid, COLOR_GREY, "Банда не нуждается в покупке наркотиков") ;
			static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать The Aztec:\n\n\
									Доступно наркотиков: "ORANGE"%d"W"\n\
									Склад банды: "ORANGE"%d\n\
									"W"Заказ банды: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fAZTEC][fDrugs],FI[fAZTEC][fDrugsBuy],FI[fAZTEC][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
			SetPVarInt(playerid,"sell_gdrugs",4);
		}
	case 5: {
			if(!PlayerToPoint(2.0,playerid,2728.3887,-1946.3820,13.5469)) {
				DeletePVar(playerid,"DrugsMafiaCar");
				DisablePlayerCheckpoint(playerid);
				return true;
			}
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fRIFA][fDrugsBuy]) return SendClientMessage(playerid, COLOR_GREY, "Банда не нуждается в покупке наркотиков") ;
			static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать The Rifa:\n\n\
									Доступно наркотиков: "ORANGE"%d"W"\n\
									Склад банды: "ORANGE"%d\n\
									"W"Заказ банды: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fRIFA][fDrugs],FI[fRIFA][fDrugsBuy],FI[fRIFA][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
			SetPVarInt(playerid,"sell_gdrugs",5);
		}
	}
	if(GetPVarInt(playerid, "HackerQuest4"))
	{
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, 2804.0691,-1430.0247,19.9313)) return 1;
		if(VehicleInfo[vehicleid][vTeam] != fWHITEHOUSE) return SCM(playerid, COLOR_GRAY, "Вы не в транспорте мэрии.");
		DisablePlayerCheckpoint(playerid);
		SCM(playerid, COLOR_GREY, "[Мысли]: Так... Теперь едим до хакера");
		SetPVarInt(playerid, "QuesR", 1);
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, false, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleToRespawn(vehicleid);
		EnableGPSForPlayer(playerid, 208.7502,-225.6151,1.7786);
	}
	if(GetPVarInt(playerid, "BuyGarage"))
	{
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid, COLOR_GREY, "Вскройте гараж.");
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 77.1079,13.7629,1.5549) || IsPlayerInRangeOfPoint(playerid, 3.0, -11.8827,-41.5127,4.0616)||
		IsPlayerInRangeOfPoint(playerid, 3.0, 14.9758,-90.5087,2.7312)|| IsPlayerInRangeOfPoint(playerid, 3.0, 13.4180,-54.9836,4.0540)||
		IsPlayerInRangeOfPoint(playerid, 3.0, 36.3591,9.5347,4.0278)|| IsPlayerInRangeOfPoint(playerid, 3.0, 34.0649,50.2527,4.0634)||
		IsPlayerInRangeOfPoint(playerid, 3.0, 39.2000,-82.9401,1.5511)|| IsPlayerInRangeOfPoint(playerid, 3.0, -188.4580,161.9381,6.7221)||
		IsPlayerInRangeOfPoint(playerid, 3.0, -155.8853,154.2453,4.8498)|| IsPlayerInRangeOfPoint(playerid, 3.0, -147.4659,115.0785,3.0355)||
		IsPlayerInRangeOfPoint(playerid, 3.0, -127.4424,125.9156,2.7983)|| IsPlayerInRangeOfPoint(playerid, 3.0, -174.1951,133.7972,3.8350)||
		IsPlayerInRangeOfPoint(playerid, 3.0, -201.7736,149.9974,4.6736)|| IsPlayerInRangeOfPoint(playerid, 3.0, -114.1892,121.7764,2.7774))
	{
	    new id = GetPlayerID(select_member[playerid]);
	    if(PI[id][bizz_work] != 63) return SendClientMessage(playerid, -1, "Вы не работаете на ферме");
	    if(PI[id][bizz_status] == 4 || PI[id][bizz_status] == 2){
		    static const f_str[] = "Вы получили $%d";
		    new str[64], randcash;
		    randcash = random(120)+50;
		 	format(str, sizeof(str), f_str, randcash);
			GiveMoney(playerid, randcash, "Заработок комбайнером");
			DisablePlayerCheckpoint(playerid);
		    new rand = random(sizeof(PosKomb));
		    SetPlayerCheckpoint(playerid, PosKomb[rand][0], PosKomb[rand][1], PosKomb[rand][2], 3.0);
			OperationMoney(playerid, 62, randcash);
		}
		else
		{
			SendClientMessage(playerid, -1, "Вы не можете использовать данный транспорт");
			RemovePlayerFromVehicle(playerid);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 5.0, 314.4372,-24.9238,1.6412) || IsPlayerInRangeOfPoint(playerid, 5.0, 2384.4812,247.2314,26.6396))
	{
		DisablePlayerCheckpoint(playerid);
	}
	if(GetPVarInt(playerid, "Ready") == 1)
	{
	    if(GetPVarInt(playerid, "OkeyMan") == 1) return 1;
	    else
	    {
            
	        switch(GetPVarInt(playerid, "NumberSklad"))
			{
	        	case 1: if(IsPlayerInRangeOfPoint(playerid, 5.0, SkladOne)) return CodeSkladOne(playerid);
	        	case 2: if(IsPlayerInRangeOfPoint(playerid, 5.0, SkladTwo)) return CodeSkladOne(playerid);
	        	case 3: if(IsPlayerInRangeOfPoint(playerid, 5.0, SkladThree)) return CodeSkladOne(playerid);
			}
		}
		
		
	}
	

	if(GetPVarInt(playerid,"check_pizza") == 1)
	{
		
		GiveMoney(playerid,1500,"развозчик пиццы");
		DeletePVar(playerid,"check_pizza");
		RemovePlayerAttachedObject(playerid, 7);
		SendClientMessage(playerid, COLOR_WHITE,"Пицца доставлена. Вы заработали:"GREEN" 1500$");
		SendClientMessage(playerid, COLOR_ORANGE,"На вашей карте отмечено местоположение готовых заказов");
		EnableGPSForPlayer(playerid, 794.2693,-1625.7371,13.3828);
		DisablePlayerCheckpoint(playerid);
		if(PI[playerid][pExpJob][8] < 100)
		{
			PI[playerid][pExpJob][8] += 1;
			if(PI[playerid][pExpJob][8] == 100) {
				PI[playerid][pAcsJob][8] = 1;
				SendOk(playerid,"Вы получили новый аксессуар за достижение! "GREEN"(/mm > навыки персонажа > полученные аксессуары)");
				save_acsjob(playerid);
			}
			save_jskill(playerid);
		}
		return true;
	}
	if(TI[playerid][tTrucker][0]) {
		SendOk(playerid,"Посигнальте для разгрузки груза");
		DisablePlayerCheckpoint(playerid);
		return 1;
	}
	if(gpss[playerid]) {
		gpss[playerid] = 0;
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		DisablePlayerCheckpoint(playerid);
		return 1;
	}
	return 1;
}
public OnPlayerLeaveCheckpoint(playerid) {
	if(TI[playerid][tJobGun][0]) {
		if(TI[playerid][tProcess][0] == -1) return 1;
		for(new id = 0;id < 24;id++) {
			if(!IsPlayerInDynamicCP(playerid, gun_pickup[id])) {
				TI[playerid][tProcess][0] = -1;
				TI[playerid][tProcess][1] = -1;
				for(new YN = 0;YN < 3;YN++) {
					TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
					if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
				}
				JobTempProcess[playerid] = 0;
			}
		}
	}
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid) {
	if(gpss[playerid]) {
		gpss[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		return true;
	}
	if(!GetPVarInt(playerid,"route") && !GetPVarInt(playerid,"check_job_cleaner")) DisablePlayerRaceCheckpoint(playerid);
	if(GetPVarInt(playerid,"WaitExam")) {
		if(GetPlayerState(playerid) != 2) return 1;
		new slot = GetPVarInt(playerid,"LessonSlot");
		if(slot == AUTO_CP_COUNT) {
			new Float:health;
			GetVehicleHealth(GetPlayerVehicleID(playerid),health);
			if(health >= 850) {
				SendClientMessage(playerid,CGOLD,"Поздравляем с получением водительского удостоверения");
				
				if(QuestProgress[playerid][3] == 0 && AcceptQuest[playerid][3] != 0)
				{
					QuestProgress[playerid][3] ++;
					D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Вод. удостоверение'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
					NextStapQI(playerid,3);
				}
				
				lic[playerid][0] = 1;
				UpdateLicenses(playerid);
			}
			else SendOk(playerid,"Тест завален, Вы еще плохо водите автомобиль");
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			DisablePlayerRaceCheckpoint(playerid);
			DeletePVar(playerid,"LessonSlot");
			DeletePVar(playerid,"WaitExam");
			DeletePVar(playerid,"pWaitingExam");
			TI[playerid][tAutoSchool] = 0;
		}
		//if(slot >= AUTO_CP_COUNT - 1) SetPlayerRaceCheckpoint(playerid, 1, AutoCP[AUTO_CP_COUNT - 1][0], AutoCP[AUTO_CP_COUNT - 1][1], AutoCP[AUTO_CP_COUNT - 1][2], 0.0,0.0,0.0, 3.0);
		//else SetPlayerRaceCheckpoint(playerid, 0, AutoCP[slot][0], AutoCP[slot][1], AutoCP[slot][2], AutoCP[slot+1][0], AutoCP[slot+1][1], AutoCP[slot+1][2], 3.0);
		SetPVarInt(playerid,"LessonSlot", slot + 1);
		return 1;
	}
	if(TI[playerid][tAutoSchool] == 2) {
		if(car_autoschool[playerid] == INVALID_VEHICLE_ID) return 1;
		if(GetPlayerState(playerid) != 2) return 1;
		new slot = GetPVarInt(playerid,"LessonSlotMav");
		if(slot == 16) {
			new Float:health;
			GetVehicleHealth(car_autoschool[playerid],health);
			if(health >= 850) {
				SendClientMessage(playerid,CGOLD,"Поздравляем с получением лицензии на полёты");
				lic[playerid][1] = 1;
				UpdateLicenses(playerid);
			}
			else SendOk(playerid,"Тест завален, Вы еще плохо управляете воздушным транспортом");
			SetPlayerPosAC(playerid,9.5551,-84.9727,1026.4089,5,3, true);
			SetPlayerFacingAngle(playerid, 90.8821);
			FreezePlayerForTime(playerid,2);
			SetCameraBehindPlayer(playerid);
			A_DestroyVehicle(car_autoschool[playerid]);
			car_autoschool[playerid] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(playerid);
			DeletePVar(playerid,"LessonSlotMav");
			TI[playerid][tAutoSchool] = 0;
		}
		if(slot >= 11 - 1) SetPlayerRaceCheckpoint(playerid, 4, AutoCPMav[11 - 1][0], AutoCPMav[11 - 1][1], AutoCPMav[11 - 1][2], 0.0,0.0,0.0, 5.0);
		else SetPlayerRaceCheckpoint(playerid, 3, AutoCPMav[slot][0], AutoCPMav[slot][1], AutoCPMav[slot][2], AutoCPMav[slot+1][0], AutoCPMav[slot+1][1], AutoCPMav[slot+1][2], 5.0);
		SetPVarInt(playerid,"LessonSlotMav", slot + 1);
		return true;
	}
	if(TI[playerid][tAutoSchool] == 3) {
		if(car_autoschool[playerid] == INVALID_VEHICLE_ID) return 1;
		if(GetPlayerState(playerid) != 2) return 1;
		new slot = GetPVarInt(playerid,"LessonSlotBoat");
		if(slot == 24) {
			new Float:health;
			GetVehicleHealth(car_autoschool[playerid],health);
			if(health >= 850) {
				SendClientMessage(playerid,CGOLD,"Поздравляем с получением лицензии на водный транспорт");
				lic[playerid][2] = 1;
				DisablePlayerRaceCheckpoint(playerid);
				UpdateLicenses(playerid);
			}
			else SendOk(playerid,"Тест завален, Вы еще плохо управляете водным транспортом");
			SetPlayerPosAC(playerid,9.5551,-84.9727,1026.4089,5,3, true);
			SetPlayerFacingAngle(playerid, 90.8821);
			SetCameraBehindPlayer(playerid);
			FreezePlayerForTime(playerid,2);
			A_DestroyVehicle(car_autoschool[playerid]);
			car_autoschool[playerid] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(playerid);
			DeletePVar(playerid,"LessonSlotBoat");
			TI[playerid][tAutoSchool] = 0;
		}
		if(slot >= 23) SetPlayerRaceCheckpoint(playerid, 1, AutoCPBoat[23][0], AutoCPBoat[23][1], AutoCPBoat[23][2], 0.0,0.0,0.0, 4.5);
		else SetPlayerRaceCheckpoint(playerid, 0, AutoCPBoat[slot][0], AutoCPBoat[slot][1], AutoCPBoat[slot][2], AutoCPBoat[slot+1][0], AutoCPBoat[slot+1][1], AutoCPBoat[slot+1][2], 4.5);
		SetPVarInt(playerid,"LessonSlotBoat", slot + 1);
		return true;
	}
	else if(GetPlayerState(playerid) == 2 && GetPlayerVehicleID(playerid) != 0 && GetPVarInt(playerid, "id_cp") && GetPVarInt(playerid,"route") && VehicleInfo[GetPlayerVehicleID(playerid)][vJob] == 1) {
		SetNextBusCP(playerid);
		return 1;
	}
	if (PlayerRaceFix[playerid] != 0)
	{
		SetNextRaceCP(playerid, race_type);
		return 1;
	}
	if(GetPVarInt(playerid,"check_job_cleaner") && GetPVarInt(playerid, "check_job_cleaner") && GetPlayerState(playerid) == 2 && GetPlayerVehicleID(playerid) != 0 && VehicleInfo[GetPlayerVehicleID(playerid)][vJob] == 5) {
		SetNextJobClearCP(playerid,GetPVarInt(playerid, "route_job_cleaner"));
		return 1;
	}
	return 1;
}
public OnPlayerLeaveRaceCheckpoint(playerid) {
	return 1;
}
public OnRconCommand(cmd[]) {
	return true;
}
CB: CarryDelay(playerid) ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
CB: PlayerDelayBailer(playerid) {
	SendClientMessage(playerid,CGOLD,"Вы полили дерево. Ожидайте стадии - сбор яблок");
	ClearAnimations(playerid);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 7))RemovePlayerAttachedObject(playerid, 7);
	SetPVarInt(playerid,"sad_uxod",1);
}
CB: PlayerUdostover(playerid) {
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
}
public OnRconLoginAttempt(ip[], password[], success) return false;

public OnPlayerPickUpPickup(playerid, pickupid) {
	return 1;
}
public OnPlayerPickUpDynamicPickup(playerid, pickupid) {
	if(!TI[playerid][tLogin]) return 1;
	if(pickupid == oldpickup[playerid]) return true;
	oldpickup[playerid] = pickupid;
	timepickup[playerid] = 3;
	new Float:zx;
	GetPlayerPos(playerid, PickupX[playerid], PickupY[playerid], zx);
	if(pickupid == pickups_game_dm[0]) return SetHealth(playerid,100);
	else if(pickupid == pickups_game_dm[1]) return SetHealth(playerid,100);
	else if(pickupid == pickups_game_dm[2]) return SetHealth(playerid,100);
	else if(pickupid == pickups_game_dm[3]) return SetHealth(playerid,100);
	else if(pickupid == pickups_game_dm[4]) return SetHealth(playerid,100);
	else if(pickupid == pickups_game_dm[5]) return SetHealth(playerid,100);
	else if(pickupid == pickups_game_dm[6]) return SetArmour(playerid,100);
	else if(pickupid == pickups_game_dm[7]) return SetArmour(playerid,100);
	else if(pickupid == pickups_game_dm[8]) return SetArmour(playerid,100);
	else if(pickupid == pickups_game_dm[9]) return SetArmour(playerid,100);
	else if(pickupid == pickups_game_dm[10]) return SetArmour(playerid,100);
	else if(pickupid == pickups_game_dm[11]) return SetArmour(playerid,100);
	else if(pickupid == pickups_game_dm[12]) return SetArmour(playerid,100);
	else if(pickupid == pickups_game_dm[13]) return SetArmour(playerid,100);
	return true;
}
public OnPlayerSelectedMenuRow(playerid, row) {
	new Menu:Current = GetPlayerMenu(playerid);
	if(Current == specmenu) {
		switch(row) {
		case 0: SpecPlayer(playerid,SERIU[playerid][sID]);
		case 1: return D(playerid,D_REC_KICK,DSI, ""P"KICK","\n\n"W"Введите причину, по которой хотите кикнуть игрока с сервера:\n\n","Кикнуть","Отмена"),ShowMenuForPlayer(specmenu,playerid);
			//case 2: return D(playerid,D_REC_WARN,DSI, ""P"WARN","\n\n"W"Введите причину, по которой хотите выдать Warn игроку:\n\n","Варн","Отмена"),ShowMenuForPlayer(specmenu,playerid);
		case 3: return D(playerid,D_REC_BAN,DSI, ""P"BAN","\n\n"W"Введите причину, по которой хотите заблокировать аккаунт игроку:\n"NO"ВНИМАНИЕ!"W" Введите время и причину через запятую без пробелов (15,читер)\nВремя блокировки аккаунта: от 7 до 30 дней\n\n","Бан","Отмена"),ShowMenuForPlayer(specmenu,playerid);
		case 4: {
				ShowMenuForPlayer(specmenu,playerid);
				new stm[12];
				format(stm,12,"%d",SERIU[playerid][sID]);
				pc_cmd_slap(playerid,stm);
				return 1;
			}
		case 5: return ShowStats(playerid,SERIU[playerid][sID],1),ShowMenuForPlayer(specmenu,playerid);//stats
		case 6: {
				for(new plid = SERIU[playerid][sID]+1; plid<MAX_PLAYERS; plid++) {
					if(!TI[plid][tLogin] || plid == playerid || SERIU[plid][sID] != INVALID_PLAYER_ID) continue;
					SERIU[playerid][sID]=plid;
					SpecPlayer(playerid,SERIU[playerid][sID]);
					return 1;
				}
				for(new plid; plid<=SERIU[playerid][sID]; plid++) {
					if(!TI[plid][tLogin] || plid == playerid || SERIU[plid][sID] != INVALID_PLAYER_ID) continue;
					SERIU[playerid][sID]=plid;
					SpecPlayer(playerid,SERIU[playerid][sID]);
					return 1;
				}
				return 1;
			}
		case 7:  {
				for(new plid = SERIU[playerid][sID]-1; plid>=0; plid--) {
					if(!TI[plid][tLogin] || plid == playerid || SERIU[plid][sID] != INVALID_PLAYER_ID) continue;
					SERIU[playerid][sID]=plid;
					SpecPlayer(playerid,SERIU[playerid][sID]);
					return 1;
				}
				for(new plid=MAX_PLAYERS-1; plid>=SERIU[playerid][sID]; plid--) {
					if(!TI[plid][tLogin] || plid == playerid || SERIU[plid][sID] != INVALID_PLAYER_ID) continue;
					SERIU[playerid][sID]=plid;
					SpecPlayer(playerid,SERIU[playerid][sID]);
					return 1;
				}
				return 1;
			}
		case 8: Lastspec[playerid] = SERIU[playerid][sID],pc_cmd_reoff(playerid);//exit
		}
	}
	return true;
}
public OnPlayerExitedMenu(playerid) {
	if(!IsValidMenu(GetPlayerMenu(playerid))) return true;
	ShowMenuForPlayer(GetPlayerMenu(playerid), playerid);
	TogglePlayerControllable(playerid,0);
	return true;
}
public OnPlayerStateChange(playerid, newstate, oldstate) {
	if(GetPlayerState(playerid) == 0) {SetPVarInt(playerid, "zanyatayaveh", 1);}
	else {DeletePVar(playerid, "zanyatayaveh");}
	new newcar = GetPlayerVehicleID(playerid); 
	if(newcar >= vehiclebatrak[0] && newcar <= vehiclebatrak[5]) // итальянская мафия
	{ 
		if(FI[fLCN][fID] == 17 || PI[playerid][pMember] == fLCN) { }
		else { SendClientMessage(playerid,COLOR_GREY,"* Вы не состоите в этой фракции !"); return RemovePlayerFromVehicle(playerid); } 
	}
	if(newcar >= vehiclelspd[0] && newcar <= vehiclelspd[2]) // лспд
	{
		if(FI[fLSPD][fID] == 11 || PI[playerid][pMember] == fLSPD)
		{
			if(PI[playerid][pRank] >= 8) {}
			else { SendClientMessage(playerid, COLOR_GREY, "Вы не можете использовать данное транспортное средство, Вам нужен 8 ранг!"); return RemovePlayerFromVehicle(playerid);}
		}
		else if(GetPlayerState(playerid) != 0) {}
		else { SendClientMessage(playerid,COLOR_GREY,"* Вы не состоите в этой фракции !"); return RemovePlayerFromVehicle(playerid); }
	}
	if(newcar >= vehiclelspd[3] && newcar <= vehiclelspd[4])// лспд
	{
		if(FI[fLSPD][fID] == 11 || PI[playerid][pMember] == fLSPD)
		{
			if(PI[playerid][pRank] >= 7) {}
			else { SendClientMessage(playerid, COLOR_GREY, "Вы не можете использовать данное транспортное средство, Вам нужен 7 ранг!"); return RemovePlayerFromVehicle(playerid);}
		}
		else if(GetPlayerState(playerid) != 0) {}
		else { SendClientMessage(playerid,COLOR_GREY,"* Вы не состоите в этой фракции !"); return RemovePlayerFromVehicle(playerid); }
	} 
	if(newcar >= vehiclelspd[5] && newcar <= vehiclelspd[8])// лспд
	{
		if(FI[fLSPD][fID] == 11 || PI[playerid][pMember] == fLSPD)
		{
			if(PI[playerid][pRank] >= 3) {}
			else { SendClientMessage(playerid, COLOR_GREY, "Вы не можете использовать данное транспортное средство, Вам нужен 3 ранг!"); return RemovePlayerFromVehicle(playerid);}
		}
		else if(GetPlayerState(playerid) != 0) {}
		else { SendClientMessage(playerid,COLOR_GREY,"* Вы не состоите в этой фракции !"); return RemovePlayerFromVehicle(playerid); }
	}	
	if(newcar >= vehiclelspd[10] && newcar <= vehiclelspd[12])// лспд
	{
		if(FI[fLSPD][fID] == 11 || PI[playerid][pMember] == fLSPD)
		{
			if(PI[playerid][pRank] >= 5) {}
			else { SendClientMessage(playerid, COLOR_GREY, "Вы не можете использовать данное транспортное средство, Вам нужен 5 ранг!"); return RemovePlayerFromVehicle(playerid);}
		}
		else if(GetPlayerState(playerid) != 0) {}
		else { SendClientMessage(playerid,COLOR_GREY,"* Вы не состоите в этой фракции !"); return RemovePlayerFromVehicle(playerid); }
	} 
	if(newcar == vehiclelspd[12])// лспд
	{
		if(FI[fLSPD][fID] == 11 || PI[playerid][pMember] == fLSPD)
		{
			if(PI[playerid][pRank] >= 8 ){}
			else {SendClientMessage(playerid, COLOR_GREY, "Вы не можете использовать данное транспортное средство, Вам нужен 9 ранг!"); return RemovePlayerFromVehicle(playerid);}
		}
		else if(GetPlayerState(playerid) != 0) {}
		else {SendClientMessage(playerid,COLOR_GREY,"* Вы не состоите в этой фракции !"); RemovePlayerFromVehicle(playerid); }
	} 
	if(newcar >= vehiclelspd[14] && newcar <= vehiclelspd[18])// лспд
	{
		if(FI[fLSPD][fID] == 11 || PI[playerid][pMember] == fLSPD)
		{
			if(PI[playerid][pRank] >= 1) {}
			else { SendClientMessage(playerid, COLOR_GREY, "Вы не можете использовать данное транспортное средство, Вам нужен 1 ранг!"); return RemovePlayerFromVehicle(playerid);}
		}
		else if(GetPlayerState(playerid) != 0) {}
		else {SendClientMessage(playerid,COLOR_GREY,"* Вы не состоите в этой фракции !"); return RemovePlayerFromVehicle(playerid); }
	} 
	if(newstate == PLAYER_STATE_PASSENGER && (GetPlayerWeapon( playerid ) == 24 || GetPlayerWeapon( playerid ) == 25)) SetPlayerArmedWeapon(playerid, 0);
	if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_NONE) return KickEx(playerid),printf("%d",55555);
	if(newstate == oldstate) return KickEx(playerid),printf("%d",333333);
	if(newstate == PLAYER_STATE_DRIVER) {
		LastVeh[playerid] = GetPlayerVehicleID(playerid);
		DeletePVar(playerid,"removetimer");
		new tr = GetVehicleTrailer(LastVeh[playerid]);
		if(tr != 0) VehTrailer[playerid] = tr;
	}
	if(oldstate == PLAYER_STATE_DRIVER) {
		LastVeh[playerid] = INVALID_VEHICLE_ID;
		VehTrailer[playerid] = INVALID_VEHICLE_ID;
	}
	if((oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER) && newstate == PLAYER_STATE_WASTED) {
		new vid = GetPlayerVehicleID(playerid);
		if(vid) {
			new Float:x, Float:y, Float:z;
			GetVehiclePos(vid, x, y, z),
			SetPlayerPosAC(playerid, x, y, z,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
		}
	}

	if(newstate == PLAYER_STATE_DRIVER) {
		new carid = GetPlayerVehicleID(playerid);
		if(VehicleInfo[carid][vAkum] <= 0 && !IsAPlane(carid) && !IsABoat(carid) && !IsABike(carid)&&!IsAVelik(carid))
		{
			SendClientMessage(playerid, COLOR_GREY, "В автомобиле сел аккумулятор");
			VehicleInfo[carid][vAkum] = 0;
		}
		if(VehicleInfo[carid][vFuel] <= 0 && !IsAPlane(carid) && !IsABoat(carid) && !IsABike(carid) && !IsAVelik(carid)) {
			SendClientMessage(playerid, COLOR_GREY, "В автомобиле закончился бензин");
			VehicleInfo[carid][vFuel] = 0;
		}

		if(thef_car[playerid] == carid)
		{
			SetPVarInt(playerid, "theft", 2);
			RemovePlayerMapIcon(playerid, 12);
		}
		if(IsAVelik(carid)) {
			GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(carid,true,lights,alarm,doors,bonnet,boot,objective);
		}
		if(IsAPlane(carid) || IsABoat(carid)) {
			SendClientMessage(playerid,COLOR_GREEN, "Завести/заглушить двигатель, используйте: "W"\"/e\"");
		}
		if(!IsABoat(carid) && !IsAPlane(carid) && !IsABikeSped(carid)) { 
			if(thef_car[playerid] != carid)
			{
				SendClientMessage(playerid, COLOR_GREEN, "Чтобы запустить двигатель, нажмите "W"\"N\""GREEN" или введите"W" \"/e\"");
			}
			for(new i = 0; i < 7; i++)  PlayerTextDrawShow(playerid, Speed_PTD[playerid][i]);
			for(new b = 0; b < 40; b++) TextDrawShowForPlayer(playerid, Speed_TD[b]);
			if (pl_update_speed[playerid] != -1) {
				KillTimer(pl_update_speed[playerid]);
				pl_update_speed[playerid] = -1;
			}
			if(VehicleInfo[carid][vBizz] == 61) {
				SendClientMessage(playerid, COLOR_GREEN, "Управление заказами:"W" /truck");
			}
			PlayerSpeedFix[playerid] = 1;
			pl_update_speed[playerid] = SetTimerEx("update_speedometer", 500, true, "i",playerid);
			update_speedometer(playerid);
			GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
		}
		if(GetVehicleModel(carid) == 482 && IsAMafia(playerid) && gBusiness[56][bizzMafia] == PI[playerid][pMember])
		{
			static const f_str[] = "Загружено наркотиков: "P"%d/2000";
			new string[sizeof(f_str) +4];
			format(string,sizeof(string),f_str,VG[carid][vgDrugs]);
			SendOk(playerid,string);
			SendOk(playerid,"Используйте: "P"/dcarm");
		}
		if(GetVehicleModel(carid) == 433) {
			static const f_str[] = "Загружено боеприпасов: "P"%d/70"W" ящиков";
			new string[sizeof(f_str) +4];
			format(string,sizeof(string),f_str,VG[carid][vgAmount][0]);
			SendOk(playerid,string);
			if(PI[playerid][pMember] == fARMYLS) SendOk(playerid,"Используйте: "P"/carm");
			if(IsAGang(playerid)) SendOk(playerid,"Для загрузки боеприпасов введите: "P"/load");
		} 
		if(GetVehicleModel(carid) == 548) {
			static const f_str[] = "Загружено боеприпасов: "P"%d";
			new string[sizeof(f_str) +7];

			format(string,sizeof(string),f_str,VG[carid][vgAmount][0]);
			SendOk(playerid,string);
			SendOk(playerid,"Используйте: /carm");
		}
		if(VehicleInfo[carid][vTeam] == fINSTRUCTORS && GetVehicleModel(carid) == 426) {
			if(GetPVarInt(playerid,"WaitExam")) {
				//new slot = GetPVarInt(playerid,"LessonSlot");
				//if(!slot) SetPlayerRaceCheckpoint(playerid, 0, AutoCP[slot][0], AutoCP[slot][1], AutoCP[slot][2], AutoCP[slot+1][0], AutoCP[slot+1][1], AutoCP[slot+1][2], 3.0);
				//else SetPlayerRaceCheckpoint(playerid, 0, AutoCP[slot - 1][0], AutoCP[slot - 1][1], AutoCP[slot - 1][2], AutoCP[slot][0], AutoCP[slot][1], AutoCP[slot][2], 3.0);
				return 1;
			}
		}
	
		if(VehicleInfo[carid][vTeam] != 0) {
			if(PI[playerid][pMember] == VehicleInfo[carid][vTeam] && IsABikers(playerid) && GetPVarInt(playerid, "Toms") == 1 && GetVehicleModel(carid) == 482)
			{
				
	            SetPVarInt(playerid, "VehicleMode", 1);
	            SendClientMessage(playerid, -1, "[Мысли]: Ну что ж! Поехали.");
	            DeletePVar(playerid, "Toms");
	            SetPVarInt ( playerid , "Ready" , 1 )     ;
	            switch(GetPVarInt(playerid, "NumberSklad"))
	            {
					case 1: SetPlayerCheckpoint(playerid, SkladOne, 5.0 );
					case 2: SetPlayerCheckpoint(playerid, SkladTwo, 5.0 );
					case 3: SetPlayerCheckpoint(playerid, SkladThree, 5.0 );
				}
	            SetPVarInt(playerid, "VehicleID", GetPlayerVehicleID(playerid));
	            WareHouses = CreateDynamic3DTextLabel("{FFFFFF}Склад\n\n\nНажмите: 'ALT'", 0xFFFFFFFF, 2360.8240,1839.1799,1211.6302, 4.0);
             	switch(GetPVarInt(playerid, "NumberSklad"))
				{
				    case 1:
				    {
                        WareHouse = CreatePickup(11745,23,2360.8240,1839.1799,1211.6302, 1);
						//WareHouses = CreateDynamic3DTextLabel("{FFFFFF}Склад\n\n\nНажмите: 'ALT'", 0xFFFFFFFF, 2360.8240,1839.1799,1211.6302, 4.0, 1 , 0);
					}
				    case 2:
				    {
                        WareHouse = CreatePickup(11745,23,2360.8240,1839.1799,1211.6302, 2);
						//WareHouses = CreateDynamic3DTextLabel("{FFFFFF}Склад\n\n\nНажмите: 'ALT'", 0xFFFFFFFF, 2360.8240,1839.1799,1211.6302, 4.0);
					}
				    case 3:
				    {
                        WareHouse = CreatePickup(11745,23,2360.8240,1839.1799,1211.6302, 3);
                        //WareHouses = CreateDynamic3DTextLabel("{FFFFFF}Склад\n\n\nНажмите: 'ALT'", 0xFFFFFFFF, 2360.8240,1839.1799,1211.6302, 4.0, 3 , 0);
					}
				}
    			

			}
			if(!GetPVarInt(playerid, "HackerQuest4") && PI[playerid][pHacker] < 5)
			{
				if(PI[playerid][pMember] != VehicleInfo[carid][vTeam] && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 191) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 287)) 
				{
			
					SendClientMessage(playerid, COLOR_GREY, "У Вас нет ключей");
					RemovePlayerFromVehicleAC(playerid);
					return false;
				}
			}
			if(!GetPVarInt(playerid, "HackerQuest4") && !PI[playerid][pHacker])
			{
				if(!start_work[playerid]) {
					SendClientMessage(playerid, COLOR_GREY, "Служебный транспорт Вам недоступен");
					RemovePlayerFromVehicleAC(playerid);
					return false;
				}
				else 
				{
				if(PI[playerid][pRank] < VehicleInfo[carid][vRank]) {
					SendClientMessage(playerid, COLOR_GREY, "Недоступно для Вашего ранга");
					RemovePlayerFromVehicleAC(playerid);
				}
				}
			}
			
		}
		if(VG[carid][vgWeste]) D(playerid,D_STOP_LOAD,DSM, ""P"Погрузка","\n\n"W"Вы хотите прекратить загрузку/разгрузку мусора?\n\n","Да","Нет");
		if(VG[carid][vgLoading] || VG[carid][vgUnloading]) {
			if((VehicleInfo[carid][vTeam] == fARMYLS && PI[playerid][pMember] == fARMYLS) ||
					(VehicleInfo[carid][vTeam] == fBALLAS && PI[playerid][pMember] == fBALLAS)	||
					(VehicleInfo[carid][vTeam] == fVAGOS && PI[playerid][pMember] == fVAGOS)	||
					(VehicleInfo[carid][vTeam] == fGROVE && PI[playerid][pMember] == fGROVE)	||
					(VehicleInfo[carid][vTeam] == fAZTEC && PI[playerid][pMember] == fAZTEC)	||
					(VehicleInfo[carid][vTeam] == fRIFA && PI[playerid][pMember] == fRIFA)		||
					(VehicleInfo[carid][vTeam] == fLCN && PI[playerid][pMember] == fLCN)		||
					(VehicleInfo[carid][vTeam] == fYAKUZA && PI[playerid][pMember] == fYAKUZA)	||
					(VehicleInfo[carid][vTeam] == fRM && PI[playerid][pMember] == fRM)			||
					(IsAGang(playerid) || IsAArm(playerid) || IsAMafia(playerid) || GetPlayerSkin(playerid) == 191) && (IsAGang(playerid) || GetPlayerSkin(playerid) == 287)) {
				D(playerid,D_STOP_LOAD,DSM, ""P"Погрузка","\n\n"W"Вы хотите прекратить загрузку/разгрузку?\n\n","Да","Нет");
			}
		}
		
		if(VG[carid][vgRobHouse] == true && GetVehicleModel(carid) == 413) D(playerid,D_STOP_LOAD_ROBHOUSE,DSM, ""P"Погрузка","\n\n"W"Вы хотите прекратить загрузку награбленной техники?\n\n","Да","Нет");
		
		if(VehicleInfo[carid][vType] == VEHICLE_TYPE_INVENT) {
			if(!IsAGang(playerid) && !IsAMafia(playerid) && !IsAArm(playerid)) {
				SendClientMessage(playerid, COLOR_GREY, "Данный транспорт доступен только: бандам/мафиям/армиям");
				return RemovePlayerFromVehicleAC(playerid);
			}
			SendOk(playerid,"Для загрузки/разгрузки боеприпасов введите: /load | /unload");
		}
		if(VehicleInfo[carid][vJob] > 0) {
			switch(VehicleInfo[carid][vJob]) {
			case 1: {
					if((VehicleInfo[carid][vPlayer] !=-1 ) && VehicleInfo[carid][vPlayer] != playerid) return SendClientMessage(playerid, COLOR_GREY, "Транспорт арендован другим игроком"),RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] != VehicleInfo[carid][vJob]) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете водителем автобуса"), RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							SendClientMessage(playerid, COLOR_GREY, "Вы уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						if(GetPlayerMoneyEx(playerid) < BUS_PRICE_RENT) {
							SendClientMessage(playerid, COLOR_GREY, "Для аренды автобуса необходимо $500");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[128];
						format(string, sizeof(string), ""W"Вы хотите арендовать этот автобус за "GREEN"$%i"W"?",BUS_PRICE_RENT);
						D(playerid,dBusRent,DSM, ""P"Аренда",string,"Да","Нет");
					}
					TI[playerid][tSpcarTime] = 0;
				}
			case 2: {
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return SendClientMessage(playerid, COLOR_GREY, "Транспорт арендован другим игроком"),RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] != VehicleInfo[carid][vJob]) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете механиком"), RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							SendClientMessage(playerid, COLOR_GREY, "Вы уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						D(playerid,D_BUKSIR,DSM, ""P"Аренда",""W"Вы хотите арендовать буксир за "GREEN"$500"W"?","Да","Нет");
					}
					TI[playerid][tSpcarTime] = 0;
				}
			case 3: {
					if ((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return SendClientMessage(playerid, COLOR_GREY, "Транспорт арендован другим игроком"), RemovePlayerFromVehicleAC(playerid);
					if (PI[playerid][pJob] != VehicleInfo[carid][vJob]) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете развозчиком продуктов/топлива"), RemovePlayerFromVehicleAC(playerid);
					if (PI[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid)
					{
						if (TI[playerid][tArendaCar] != -1)
						{
							SendClientMessage(playerid, COLOR_GREY, "Вы уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[128];
						format(string, sizeof(string), ""W"Вы хотите арендовать авто для развозки продуктов за "GREEN"$%i"W"?", 50);
						D(playerid, dProdRent, DSM, ""P"Аренда", string, "Да", "Нет");
					}
					TI[playerid][tSpcarTime] = 0;
				}
			case 4: {
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return SendClientMessage(playerid, COLOR_GREY, "Транспорт арендован другим игроком"),RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] != VehicleInfo[carid][vJob]) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете развозчиком еды"), RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							SendClientMessage(playerid, COLOR_GREY, "Вы уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						D(playerid,dEatRent,DSM, ""P"Аренда",""W"Вы хотите арендовать авто для развозки еды за "GREEN"$500"W"?","Да","Нет");
					}
					TI[playerid][tSpcarTime] = 0;
				}
			case 5: {
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return SendClientMessage(playerid, COLOR_GREY, "Транспорт арендован другим игроком"),RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] != VehicleInfo[carid][vJob]) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете мойщиком дорог"), RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							SendClientMessage(playerid, COLOR_GREY, "Вы уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						if(GetPlayerMoneyEx(playerid) < 500) {
							SendClientMessage(playerid, COLOR_GREY, "Для аренды рабочего транспорта необходимо $500");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[124];
						format(string,sizeof(string),""W"Вы хотите арендовать авто для мойки улиц за "GREEN"$500"W"?\n\nСостояние дорог: "P"%s",condition_of_roads[condition_of_roads_]);
						D(playerid,D_JOB_CLEAR,DSM, ""P"Аренда",string,"Да","Нет");
					}
					TI[playerid][tSpcarTime] = 0;
				}
			case 6: { // чистильщик канализаций
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return SendClientMessage(playerid, COLOR_GREY, "Транспорт арендован другим игроком"),RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] != VehicleInfo[carid][vJob]) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете чистильщиком люков"), RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							SendClientMessage(playerid, COLOR_GREY, "Вы уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						if(GetPlayerMoneyEx(playerid) < 500) {
							SendClientMessage(playerid, COLOR_GREY, "Для аренды рабочего транспорта необходимо $500");
							return RemovePlayerFromVehicleAC(playerid);
						}
						if(GetPlayerSkin(playerid) != 8) {
							SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в рабочей одежде");
							return RemovePlayerFromVehicleAC(playerid);
						}
						D(playerid,D_JOB_KANAL_1,DSM, ""P"Аренда",""W"Вы хотите арендовать авто для чистки канализаций за "GREEN"$500"W"?","Да","Нет");
					}
					TI[playerid][tSpcarTime] = 0;
				}
			case 8: { // Таксист
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return SendClientMessage(playerid, COLOR_GREY, "Транспорт арендован другим игроком"),RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] != VehicleInfo[carid][vJob]) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете таксистом"), RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							SendClientMessage(playerid, COLOR_GREY, "Вы уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						if(GetPlayerMoneyEx(playerid) < 500) {
							SendClientMessage(playerid, COLOR_GREY, "Для аренды рабочего транспорта необходимо 500$");
							return RemovePlayerFromVehicleAC(playerid);
						}
						D(playerid,D_JOB_TAXI,DSM, ""P"Аренда",""W"Вы хотите арендовать такси за "GREEN"500$?","Да","Нет");
					}
					TI[playerid][tSpcarTime] = 0;
				}
			case 9: { // Инкассатор
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return SendClientMessage(playerid, COLOR_GREY, "Транспорт арендован другим игроком"),RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] != VehicleInfo[carid][vJob] || !GetPVarInt(playerid,"inc_start")) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете инкассатором / не надели форму"), RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							SendClientMessage(playerid, COLOR_GREY, "Вы уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						if(GetPlayerMoneyEx(playerid) < 500) {
							SendClientMessage(playerid, COLOR_GREY, "Для аренды рабочего транспорта необходимо 500$");
							return RemovePlayerFromVehicleAC(playerid);
						}
						D(playerid,D_JOB_INCASS,DSM, ""P"Аренда",""W"Вы хотите арендовать автомобиль за "GREEN"500$?","Да","Нет");
					}
					if(VG[carid][vgAtm]) D(playerid,D_STOP_LOAD,DSM, ""P"Погрузка","\n\n"W"Вы хотите прекратить разгрузку денег?\n\n","Да","Нет");
					TI[playerid][tSpcarTime] = 0;
				}
			case 105: {
					if(!IsACop(playerid) || !start_work[playerid]) {
						SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник правохранительных органов!");
						RemovePlayerFromVehicleAC(playerid);
					}
				}
			}
		}
		if(IsAPlane(carid)) {
			if(TI[playerid][tAutoSchool] == 2 && GetPlayerVehicleID(playerid) == car_autoschool[playerid]) return 1;
			if(lic[playerid][1] < 1) {
				SendClientMessage(playerid, COLOR_GREY, "У Вас нет лицензии на воздушный транспорт");
				RemovePlayerFromVehicleAC(playerid);
				return true;
			}
		}
		if(CarLic(carid)) {
			if(lic[playerid][0] == 0) {
				SendClientMessage(playerid, COLOR_GREY, "У Вас нет водительских прав");
				RemovePlayerFromVehicleAC(playerid);
				return true;
			}
		}
	}
	else if(newstate == PLAYER_STATE_PASSENGER) {
		DeletePVar ( playerid,"removetimer" ) ;
		new carid = GetPlayerVehicleID(playerid);
		GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);

		if(doors == 1) return RemovePlayerFromVehicleAC(playerid);

		if(VehicleInfo[carid][vJob] == 1 && VehicleInfo[carid][vPlayer] != -1) {
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(GetPlayerVehicleID(i) != carid) continue;
				if(GetPlayerMoneyEx(playerid) < 100) {
					MeAction(playerid,"показал(а) проездной водителю");
					return 1;
				}
				GiveMoney(playerid,-100,"оплата за проезд автобус");
				if(GetPlayerState(i) == PLAYER_STATE_DRIVER) GiveMoney(i,100,"оплата за проезд автобус");
				break;
			}
		}
	}
	else if(newstate == PLAYER_STATE_ONFOOT) {
		if(TI[playerid][tMobile]) RemovePlayerWeapon(playerid, 25);
		PlayerSpeedFix[playerid] = 0;
		if (pl_update_speed[playerid] != -1) {
			KillTimer(pl_update_speed[playerid]);
			pl_update_speed[playerid] = -1;
		}
		for(new i = 0; i < 40; i++) TextDrawHideForPlayer(playerid, Speed_TD[i]);
		for(new i = 0; i < 7; i++) PlayerTextDrawHide(playerid, Speed_PTD[playerid][i]);
		if(TI[playerid][tEther]) {
			TI[playerid][tEther] = false;
			SendOk(playerid,"Вы вышли из прямого эфира");
		}
	}
	return true;
}
stock lights_status(carid,status, playerid=-1) {
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(carid,engine,status,alarm,doors,bonnet,boot,objective);

	VehicleInfo[carid][vLights] = status;

	if(playerid != -1 && !IsAVelik(carid) && !IsAPlane(carid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		if(status) {
			PlayerTextDrawHide(playerid, Speed_PTD[playerid][5]);
			PlayerTextDrawColor(playerid, Speed_PTD[playerid][5], 8388863);
			PlayerTextDrawShow(playerid, Speed_PTD[playerid][5]);
		}
		else {
			PlayerTextDrawHide(playerid, Speed_PTD[playerid][5]);
			PlayerTextDrawColor(playerid, Speed_PTD[playerid][5], -347323649);
			PlayerTextDrawShow(playerid, Speed_PTD[playerid][5]);
		}
	}
	return true;
}

stock SetVehicleDoorStatus(vehicleid, playerid = INVALID_PLAYER_ID, status = -1) {
	if (!IsValidVehicle(vehicleid))
	return 0;

	if (status == -1) {
		if (!VehicleInfo[vehicleid][vLocked])
		VehicleInfo[vehicleid][vLocked] = 1;
		else VehicleInfo[vehicleid][vLocked] = 0;
	} else {
		VehicleInfo[vehicleid][vLocked] = status;
	}
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, lights, alarm, VehicleInfo[vehicleid][vLocked], bonnet, boot, objective);
	
	if (playerid != INVALID_PLAYER_ID && !IsAVelik(vehicleid) && !IsAPlane(vehicleid))  {
		if (!VehicleInfo[vehicleid][vLocked]) {
			if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				PlayerTextDrawColor(playerid, Speed_PTD[playerid][6], 8388863);
			}
			GameTextForPlayer(playerid, "~g~UNLOCK", 5000, 3);
		} else {
			if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				PlayerTextDrawColor(playerid, Speed_PTD[playerid][6], -347323649);
			}
			GameTextForPlayer(playerid, "~r~LOCK", 5000, 3);
		}
		if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) PlayerTextDrawShow(playerid, Speed_PTD[playerid][6]);
	}
	return VehicleInfo[vehicleid][vLocked];
}
public OnPlayerExitVehicle(playerid, vehicleid) {
	if(VehicleInfo[vehicleid][vBizz]) {
		for(new i = 0; i < 20; i++) {
			if(vehicleid == FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCars][i]) FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCarID][i] = -1;
		}
	}
	if(vehicleid == car_autoschool[playerid]) {
		SetPlayerPosAC(playerid,9.5551,-84.9727,1026.4089,5,3, true);
		SetPlayerFacingAngle(playerid, 90.8821);
		FreezePlayerForTime(playerid,2);
		A_DestroyVehicle(car_autoschool[playerid]);
		car_autoschool[playerid] = INVALID_VEHICLE_ID;
		DisablePlayerRaceCheckpoint(playerid);
		SendClientMessage(playerid, COLOR_GREY, "Экзамен завален");
		TI[playerid][tAutoSchool] = 0;
		DeletePVar(playerid,"LessonSlotMav");
		DeletePVar(playerid,"LessonSlotBoat");
	}
	if(vehicleid)
	{
		if(player_to_race_lv[playerid] == 1 && GetPVarInt(playerid,"lock_race") == 0) {
			DisablePlayerRaceCheckpoint(playerid);
			for(new i=0; i<6; i++) {
				TextDrawHideForPlayer(playerid, td_game[i]);
			}
			new random_spawn = random(sizeof spawns_pos_game_end);
			SetPlayerPosAC(playerid, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],200,3,true);
			SetPlayerFacingAngle(playerid, spawns_pos_game_end[random_spawn][4]);
			FreezePlayerForTime(playerid,2);
			SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 2);
			SetCameraBehindPlayer(playerid);
			players_in_race_lv--;
			player_to_race_lv[playerid] = 0;
			SendClientMessage(playerid, COLOR_GREY, "Вы вышли из автомобиля и были дисквалифицированы с гонки");
			return true;
		}
	}
	if(GetPVarInt(playerid,"veh_id_trailer") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendClientMessage(playerid,COLOR_GREY,"У Вас есть 30 секунд чтобы вернуться в грузовик");
	}
	if(GetPVarInt(playerid,"bus_id") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendClientMessage(playerid,COLOR_GREY,"У Вас есть 30 секунд чтобы вернуться в автобус");
	}
	if(GetPVarInt(playerid,"track_id") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendClientMessage(playerid,COLOR_GREY,"У Вас есть 30 секунд чтобы вернуться в погрузчик");
	}
	if(GetPVarInt(playerid,"mehjob") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendClientMessage(playerid,COLOR_GREY,"У Вас есть 30 секунд чтобы вернуться в буксир");
	}
	if(GetPVarInt(playerid,"eatjob") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendClientMessage(playerid,COLOR_GREY,"У Вас есть 30 секунд чтобы вернуться в автомобиль для продажи еды");
	}
	if(GetPVarInt(playerid,"clear_id") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendClientMessage(playerid,COLOR_GREY,"У Вас есть 30 секунд чтобы вернуться в автомобиль для чистки улиц");
	}
	if(GetPVarInt(playerid,"veh_id_taxi") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendClientMessage(playerid,COLOR_GREY,"У Вас есть 30 секунд чтобы вернуться в такси");
	}
	return true;
}
public OnPlayerRequestSpawn(playerid) {
	if(!TI[playerid][tLogin]) {
		SendClientMessage(playerid, COLOR_GREY, "Для игры на нашем сервере введите пароль");
		KickEx(playerid);
		return false;
	}
	return true;
}
public OnPlayerRequestClass(playerid, classid) {
	if(TI[playerid][tLogin]) return PlayerSpawn(playerid);
	else if(!PI[playerid][pID])
	{
		TI[playerid][tJoined] = true;
		ac_1{playerid} = true;

		new query[500];
		mysql_format(connects, query, sizeof(query), "SELECT `pID`, `pKey`,`pSalt`, `pKeyip`, `GoogleCode`, `pGoogle`, `pvIp` FROM `accounts` WHERE `Name` = '%s' LIMIT 1",player_name[playerid]);
		mysql_tquery(connects, query, "OnPlayerRequestDetect", "d", playerid);
	}
	return true;
}

stock RemoveSettings(playerid) { // сброс настроек при авторизации/регистрации
	pl_update_speed[playerid] = -1;
	PlayerSpeedFix[playerid] = 0;
	PlayerUnFreezeFix[playerid] = 0;
	PlayerUnFreezeTimerFix[playerid] = 0;
	PlayerChatFix[playerid] = 0;
	PlayerChatExFix[playerid] = 0;
	PlayerClearAnim[playerid] = 0;
	PI[playerid][pHouse] = 0;
	PlayerHealFix[playerid] = 0;
	PlayerHealExFix[playerid] = 0;
	
	TI[playerid][tDM] = 0;
	
	PlayerRaceFix[playerid] = 0;
	
	TI[playerid][tCashRace] = 0;
	TI[playerid][tCashDM] = 0;
	
	GhettoInfo[playerid][ghettoPassLevel] = 1;
	GhettoInfo[playerid][ghettoDMG] = 0.0;

	PI[playerid][pMute] = 0;
	PI[playerid][pWarns] = 0;
	PI[playerid][punWarnstime] = 0;

	PI[playerid][pSettings][5] = 0;

	PlayerBuildFix[playerid] = 0;
	PlayerBuildExFix[playerid] = 0;

	PlayerBuild2Fix[playerid] = 0;
	PlayerBuild2ExFix[playerid] = 0;

	PI[playerid][pSearch] = 0;

	OldDialogID[playerid] = INVALID_DIALOG_ID;
	PI[playerid][pCasinoChips] = 0;
	PI[playerid][pCasinoLanguage] = 0;
	
	ResetPlayerWeapons(playerid);

	TI[playerid][tLogin] = false;
	TI[playerid][tBoatEnter] = INVALID_VEHICLE_ID;
	TI[playerid][tBoat] = INVALID_VEHICLE_ID;
	Welding[playerid] = 0;
	TI[playerid][tBuildAtt] = 0;
	TI[playerid][tBuildCount] = 0;
	TI[playerid][tBuild] = 0;
	TI[playerid][tSpawn] = false;
	PlayerArmour[playerid] 							= 0.0;
	GetPlayerIp(playerid,player_ip_check[playerid],16);

	PI[playerid][pAdmKL] = 0;

	BizzID[playerid][0] = 0;
	BizzID[playerid][1] = 0;
	BizzID[playerid][2] = 0;

	gm_player[playerid] = 0;

	for(new i = 0; i < MAX_QUESTS; i++) {
		AcceptQuest[playerid][i]=0;
		QuestShow[playerid][i]=0;
		QuestProgress[playerid][i]=0;
		time_quest[playerid][i] = 0;
	}

	for(new i = 0; i < 10; i++) {
		police_eqm[playerid][i] = 0;
	}

	for(new i = 0; i < 46; i++) {
		PI[playerid][pInventory][i] = 0;
		PI[playerid][pInventoryKolvo][i] = 0;
		PI[playerid][pActivTrade][i] = 0;
	}
	ClickInv[playerid] = -1;
	InvPage[playerid] = 0;
	
	to_default(playerid);

	gKilled[playerid] = 0;

}

CB: OnPlayerRequestDetect(playerid) {
	if(!IsPlayerConnected(playerid)) return 1;
	
	SetSpawnInfo(playerid, 255, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0);
	RemoveSettings(playerid);
	SpecPl(playerid, true);
	
	//for(new i = 0; i < 60; i++) SendClientMessage(playerid, COLOR_WHITE, "");
	//SendClientMessage(playerid,COLOR_WHITE,"Добро пожаловать на"P" MaryLand Role Play!");

	InterpolateCameraPos(playerid, 1218.2290, -2233.3933, 22.9547, 1218.2290, -2233.3933, 22.9547, 3000);
	InterpolateCameraLookAt(playerid, 1219.0100, -2234.0122, 22.8197, 1219.0100, -2234.0122, 22.8197, 3000);
	///tpcor  1220.937011, -2238.076904, 22.155000
	SetPlayerPos(playerid,1224.3334,-2236.6587,21.2289 );
	SetPlayerFacingAngle(playerid, 90.0);
	ApplyAnimation(playerid,"MISC","seat_LR",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"BAR","dnK_StndM_loop",0.0,0,0,0,0,0);
	
	SetPlayerVirtualWorld(playerid,102);
	
	new rows;
	cache_get_row_count(rows);
	if(rows) {
		cache_get_value_name_int(0, "pID", PI[playerid][pID]);
		cache_get_value_name(0, "pKey", player_pass[playerid], 75);
		cache_get_value_name(0, "pSalt",player_salt[playerid], 75);
		cache_get_value_name(0, "pKeyip", PI[playerid][pKeyip],5);
		cache_get_value_name(0, "GoogleCode", PI[playerid][pGoogle],63);
		cache_get_value_name_int(0, "pGoogle", PI[playerid][pGoogleSec]);
		cache_get_value_name(0, "pvIp", player_ip[playerid],17);
		new hour, minute, second, htxt[13], string[450];
		gettime(hour, minute, second);
		if(hour >= 6 && hour < 12)  format(htxt,sizeof(htxt),"Доброе утро");
		if(hour >= 12 && hour < 18) format(htxt,sizeof(htxt),"Добрый день");
		if(hour >= 18 && hour < 24) format(htxt,sizeof(htxt),"Добрый вечер");
		if(hour >= 0 && hour < 6)  format(htxt,sizeof(htxt),"Доброй ночи");
		format(string,sizeof(string),""W"%s,{F1DE2E} %s!"W"\nЭтот аккаунт зарегистрирован на нашем сервере\n\nВведите ниже пароль для авторизации:",htxt, player_name[playerid]);
		D(playerid, D_LOGIN, DSP, ""P"Авторизация", string, "Далее", "Закрыть");
	}
	else
	{
		new string[420];
		format(string,sizeof(string),""W"Добро пожаловать,{F1DE2E} %s"W"\nЭтот аккаунт{F87427} не зарегистрирован"W" на нашем сервере.\n\nВведите ниже пароль для регистрации, при авторизации\nэтот пароль будет запрашиваться.\n\n\
		\tПримечания:\n\t - Длина пароля от 6 до 30 символов\n\t - Пароль должен состоять из букв и цифр\n\t - Пароль чувствителен к регистру",player_name[playerid]);
		D(playerid,D_REG,DSI, ""P"Регистрация",string, "Далее", "Закрыть");
	}
	return true;
}
stock SetPlayerCriminal(playerid, const killerid[], const reason[]) {
	PI[playerid][pCrimes]++;
	UpdatePlayerData(playerid,"pCrimes",PI[playerid][pCrimes]);
	strmid(PI[playerid][pVictim], killerid, 0, strlen(killerid), MAX_PLAYER_NAME);
	strmid(PI[playerid][pAccusedof], reason, 0, strlen(reason), 43);
	if(PI[playerid][pSearch] > 6) PI[playerid][pSearch] = 6;
	new query[200];
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pVictim`= '%s',`pAccusedof`= '%s' WHERE `Name` = '%s' LIMIT 1",PI[playerid][pVictim],PI[playerid][pAccusedof],player_name[playerid]);
	mysql_tquery(connects,query);
	return 1;
}
stock other_timer() {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(SERIU[i][sID] != INVALID_PLAYER_ID) continue;
		if(Sounds == 1) {
			new distance = floatround(GetPlayerDistanceFromPoint( i, streampos[0], streampos[1], streampos[2]) );
			if(UseSound[i] == 0 && distance <= rads) {
				PlayAudioStreamForPlayer(i, stream, streampos[0], streampos[1], streampos[2], rads, 1);
				UseSound[i] = 1;
			}
			if(UseSound[i] == 1 && distance > rads) {
				UseSound[i] = 0;
			}
		}
		if(PlayerToPoint(4.5, i, -1146.7156,33.3094,1170.6606) && GetPlayerInterior(i) == 78)
		{
			if(PI[i][pJob] == 9 && GetPVarInt(i,"inc_start") || bank_vzlom[1] > 0) return true;
			new Float:health;
			GetPlayerHealth(i,health);
			SetHealth(i,health-5);
			SetPlayerPosAC(i, -1145.3989,24.0703,1169.5699, 2, 78);
			ApplyAnimation(i, "CRACK", "crckdeth2", 4.0, 0, 1, 1, 1, 0, 1);
			SetTimerEx("UnTazer",10 * 1000, 0, "i", i);
			GameTextForPlayer(i,"~r~SHOCKED", 2500, 6);
		}
	}
	update3dtext();
	return 1;
}
public OnGameModeExit() {
	mysql_close(connects);
	print("Gamemode ended.");
	if (GlobalSecondTimer != -1) {
		KillTimer(GlobalSecondTimer);
	}
	return true;
}
public OnGameModeInit() {

	gCurDay = GetDayNumber();
	SetGameModeText("World RolePlay");
	new MySQLOpt: option_id = mysql_init_options();
	mysql_set_option(option_id, AUTO_RECONNECT, true);
    connects = mysql_connect("127.0.0.1", "gs184301", "tnijqaNAoFas", "gs184301" , option_id);
	mysql_log(ERROR | WARNING);
	SendRconCommand("hostname World RolePlay");
	/*============================================================================*/
	
	mysql_set_charset("cp1251");
	mysql_tquery(connects, !"SET CHARACTER SET 'utf8'", "", "");
	mysql_tquery(connects, !"SET NAMES 'utf8'", "", "");
	mysql_tquery(connects, !"SET character_set_client = 'cp1251'", "", "");
	mysql_tquery(connects, !"SET character_set_connection = 'cp1251'", "", "");
	mysql_tquery(connects, !"SET character_set_results = 'cp1251'", "", "");
	mysql_tquery(connects, !"SET SESSION collation_connection = 'utf8_general_ci'", "", "");
	
	AddPlayerClass(36,0.0,0.0,5.0,0.0,0,0,0,0,0,0);

	new hor,m,s; 
	gettime(hor,m,s);
    SetTimer ( "min_timer", 60000, 1 ) ;

	load_vehicles();
	CreateVehicless();
	CreatePickups();
	load_fracfreez();
	load_house();
	load_family();
	load_bint();
	load_business();
	load_apartment();
	load_greenzone();
	load_gangzone();
	load_fractions();
	load_anticheat();
	load_diplomation();
	load_others();
	load_market();
	load_economy();
	load_atm();
	load_funcbizz();
	load_fracgun();
	load_bilboards();
	load_graffity();
	load_trailer();
	load_garage();
	load_goscars();
	#if defined _roulette_included
		roulette_CreateTD();
	#endif
	// mysql_tquery(connects, "SELECT * FROM `bmap`", "LoadMapping");
	// mysql_tquery(connects, "SELECT * FROM `Settings`", "LoadSettings");

	// upLoadActors(0);
	
	mysql_tquery(connects,"UPDATE `accounts` SET `online_status` = '1001'", "", "");
	
	blackjack_CreateTD();

	blackjack_CreateTable(
	290.739837, -111.020553, 1035.385009, 0.000000, 0.000007, 0.000000,
	CASINO_WORLD_ID+1, .interiorid = CASINO_INTERIOR_ID
	);

	blackjack_CreateTable(
	290.739837, -111.020553, 1035.385009, 0.000000, 0.000007, 0.000000, CASINO_WORLD_ID,
	.interiorid = CASINO_INTERIOR_ID
	);

	blackjack_CreateTable(
	287.249725, -111.020553, 1035.385009, 0.000000, 0.000007, 0.000000,
	CASINO_WORLD_ID, .interiorid = CASINO_INTERIOR_ID
	);

	blackjack_CreateTable(
	289.799468, -115.350494, 1035.385009, 0.000000, 0.000000, 270.000000,
	CASINO_WORLD_ID, .interiorid = CASINO_INTERIOR_ID
	);
	
	for(new d = 0; d < MAX_DUELS; d++) {
		DI[d][duel_owner_id] = DI[d][duel_id][0] = DI[d][duel_id][1] = DI[d][duel_id][2] = DI[d][duel_id][3] = DI[d][duel_id][4] = DI[d][duel_id][5] = INVALID_PLAYER_ID;
		DI[d][duel_gun] = 0;
		DI[d][duel_money] = 1000;
		DI[d][duel_raund] = 1;
		DI[d][duel_type] = 0;
		DI[d][duel_map] = 0;
		DI[d][duel_health] = 100;
		DI[d][duel_armour] = 0;
		DI[d][duel_start] = false;
		DI[d][duel_create] = false;
		DI[d][duel_point_1] = 0;
		DI[d][duel_point_2] = 0;
		DI[d][duel_vw] = 0;
	}

	for(new i=0;i<MAX_DROP_GUNS;i++) {
		drop_gun[i][dg_object] = -1;
		drop_gun[i][dg_gun] = -1;
		drop_gun[i][dg_ammo] = -1;
		drop_gun[i][dg_text] = Text3D:-1;
		drop_gun[i][dg_time] = -1;
	}
	
	calls_news[0] = INVALID_PLAYER_ID;
	calls_news[1] = INVALID_PLAYER_ID;
	calls_news[2] = INVALID_PLAYER_ID;
	calls_ether[0] = INVALID_PLAYER_ID;
	calls_ether[1] = INVALID_PLAYER_ID;
	calls_ether[2] = INVALID_PLAYER_ID;

	SetGravity(0.010);
	
	components_name();
	
	SetWeather(1);
	
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_STREAMED);
	ManualVehicleEngineAndLights();
	LimitGlobalChatRadius(13.0);
	LimitPlayerMarkerRadius(12.0);
	SetNameTagDrawDistance(30.0);
	
	weekcurrent = load_week();
	weeklast = weekcurrent;
	
	gettime(tmphour, tmpminute, tmpsecond);
	SetWorldTime(12);
	
    gateopen[0] = CreateDynamicObject(988, 1543.482055, -1627.324707, 13.402827, 0.000000, 0.000000, -89.999946, -1,-1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(gateopen[0], 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetDynamicObjectMaterial(gateopen[0], 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	CreateDynamic3DTextLabel(""G"'N'"W" если в машине\n"G"'ALT'"W" если пешком", -1, 1543.482055, -1627.324707, 13.402827, 10.0);
	
	gateopen[2] = CreateDynamicObject(13817, 1269.723510, -913.950134, 43.448936, 0.000000, 0.000000, 96.200035, -1, -1, -1, 300.00, 300.00); 
	CreateDynamic3DTextLabel(""G"'N'"W" если в машине\n"G"'ALT'"W" если пешком", -1, 1269.723510, -913.950134, 43.448936, 10.0);
    SetDynamicObjectMaterial(gateopen[2], 0, 6487, "councl_law2", "lanlabra1_M", 0x00000000);

	CreateDynamic3DTextLabel(""W"Для приобретения\n\n Нажмите клавишу '"G"ALT'"W"", -1, 1120.8074,-893.6594,1046.0126, 2.0);
	
	gateopen[1] = CreateDynamicObject(8229, 74.565895, -222.017242, 3.007985, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);

	SetDynamicObjectMaterial(gateopen[1], 0, 16640, "a51", "metpat64", 0x00000000);
	SetDynamicObjectMaterial(gateopen[1], 1, 14584, "ab_abbatoir01", "ab_vent1", 0x00000000);
	SetDynamicObjectMaterial(gateopen[1], 2, 16640, "a51", "sl_metalwalk", 0x00000000);
	SetDynamicObjectMaterial(gateopen[1], 3, 14584, "ab_abbatoir01", "ab_vent1", 0x00000000);
	CreateDynamic3DTextLabel(""W"Для взлома ворот\n\n Нажмите клавишу '"G"ALT'"W"", -1, 86.1299,-221.3760,1.5861, 10.0);
	
	Create3DTextLabel(""W"Для отключение сигнализации\n\n Нажмите клавишу '"G"ALT'"W"", -1, 86.8335,-235.0523,1.6274, 10.0, 0, 1);
	

	advertise_price = 2;
	condition_of_roads_ = 1;
	
	fish_zone[0] = GangZoneCreate(734.0, -1919.5, 836, -1892.5);
	/*fish_zone[1] = GangZoneCreate(-350.00006103515625, -640.0000610351562, -240.00006103515625, -540.0000610351562);
	fish_zone[2] = GangZoneCreate(-246.00006103515625, -763.0000610351562, -136.00006103515625, -673.0000610351562);*/
	
	l_casino[0] = CreateDynamicObject(18755, 300.390136, -139.715637, 1030.315795, 0.000000, 0.000000, 270.000000, 58, 7, -1, 300.00, 300.00);
	
	// первый этаж полуоткрытые двери;
	l_casino[1] = CreateDynamicObject(18756, 301.800598, -135.845367, 1030.287597, 0.000014, 0.000000, 89.999954, 58, 7, -1, 300.00, 300.00);
	l_casino[2] = CreateDynamicObject(18756, 298.997772, -139.651321, 1030.287597, -0.000014, 0.000000, -89.999954, 58, 7, -1, 300.00, 300.00);

	// 2 Этаж
	l_casino[3] =   CreateDynamicObject(18756, 300.330657, -135.845367, 1036.068481, 0.000007, 0.000000, 89.999977, 58, 7, -1, 300.00, 300.00);
	l_casino[4] =   CreateDynamicObject(18756, 300.387695, -139.651321, 1036.068481, -0.000007, -0.000000, -89.999954, 58, 7, -1, 300.00, 300.00);
	
	SFa = GangZoneCreate(2689.0, -2585.0, 2858.0, -2314.0);

	gatekpp[0] = CreateDynamicObject(988, -173.460571, 333.434265, 12.062686, 0.000000, 0.000000, -14.400010, -1, -1, -1, 300.00, 300.00);
	gatekpp[1] = CreateDynamicObject(988, -179.756500, 335.050170, 12.062686, 0.000000, 0.000000, -14.400010, -1, -1, -1, 300.00, 300.00);

	specmenu = CreateMenu("Recon", 1, 15.0, 200.0, 100.0);
	AddMenuItem(specmenu,0,"Refresh");
	AddMenuItem(specmenu,0,"Kick");
	AddMenuItem(specmenu,0,"Warn");
	AddMenuItem(specmenu,0,"Ban");
	AddMenuItem(specmenu,0,"Slap");
	AddMenuItem(specmenu,0,"Stats");
	AddMenuItem(specmenu,0,"Next");
	AddMenuItem(specmenu,0,"Back");
	AddMenuItem(specmenu,0,"-EXIT-");

	Create3dText();
	CreateTexdraw();
	
	
	
	new tmpobjid;
	Streamer_TickRate(100);

	#include "modules/old_object.pwn"
	#include "modules/object.pwn"
	#include "objects/intbak.inc"// интерьер байкеров
	#include "objects/mappingnbak.inc"//маппинг байкеров
	#include "objects/scladalko.inc"//интерьер склада
	#include "objects/tuyrma.inc" // тюрьма
	
	
	CreatePickup(1239,23,1123.7704,-892.0002,1046.0126, 62);
	
	
	
	
	CreatePickup(1239,23,1400.5125,-20.4098,1010.3695,61);
	CreateDynamic3DTextLabel(""W"Для продажи\n\n Нажмите клавишу '"G"ALT'"W"", -1, 1123.7704,-892.0002,1046.0126, 2.0);

	tmpobjid = CreateObject(4821, 1745.199951, -1882.849975, 26.140600, 0.000000, 0.000000, 0.000000,300.00);
	SetObjectMaterial(tmpobjid, 5, 18029, "genintintsmallrest", "GB_restaursmll03", 0x00000000);
	SetObjectMaterial(tmpobjid, 7, 7555, "bballcpark1", "ws_carparknew2", 0x00000000);
	SetObjectMaterial(tmpobjid, 10, 3979, "civic01_lan", "airportwall_256128", 0x00000000);
	
	// Армия LS палуба
	tmpobjid = CreateObject(10771, 2828.060058, -2439.275878, 7.000000, 0.000000, 0.000000, 270.000000, 300.00);
	
	printf("[Объекты ...] Динамических объектов: (%d шт.)",CountDynamicObjects());
	
	for(new i = 0; i < MAX_CONTAINER; i++)
	{
	    switch(gContainer[i][cClass])
	    {
			case 5:
			{
                CreateDynamicPickup(1254,23, gContainer[i][cX], gContainer[i][cY], gContainer[i][cZ]);
				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"{F9C7A1}Контейнер\n\n"W"Класс:{F9C7A1} %s"W"\nНачальная ставка:{F9C7A1} %d rub"W"\nПоследняя ставка:{F9C7A1} 0 rub"W"\n\nАукцион [{F26969}Закрыт"W"]\nНачало в 8:00, 10:00, 12:00, 14:00, 16:00, 18:00\n20:00, 22:00, 00:00",
				gContainer[i][cName],gContainer[i][cMoney]);
				gContainer[i][cText] = CreateDynamic3DTextLabel(STRING_GLOBAL,-1,gContainer[i][cX], gContainer[i][cY], gContainer[i][cZ]+1,4.0);
				conteiner[i] = 2;
				strmid(gContainer[i][cOwned], "None", 0, 30);
			}
			default:
			{
                CreateDynamicPickup(1254,23, gContainer[i][cX], gContainer[i][cY], gContainer[i][cZ]);
				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"{F9C7A1}Контейнер\n\n"W"Класс:{F9C7A1} %s"W"\nНачальная ставка:{F9C7A1} %d$"W"\nПоследняя ставка:{F9C7A1} 0$"W"\n\nАукцион [{F26969}Закрыт"W"]\nНачало в 8:00, 10:00, 12:00, 14:00, 16:00, 18:00\n20:00, 22:00, 00:00",
				gContainer[i][cName],gContainer[i][cMoney]);
				gContainer[i][cText] = CreateDynamic3DTextLabel(STRING_GLOBAL,-1,gContainer[i][cX], gContainer[i][cY], gContainer[i][cZ]+1,4.0);
				conteiner[i] = 2;
				strmid(gContainer[i][cOwned], "None", 0, 30);
			}
		}
		
	}
	
	for(new i = 0; i < MAX_MARKET; i++)
	{ 
		CreateDynamicPickup(1239, 23, Market[i][m_x], Market[i][m_y], Market[i][m_z]);
		new string[120];
		format(string,sizeof(string),""G"Прилавок"W" №%d\n"G"Арендатор:"W" нет\n"G"Нажмите"W" 'ALT'"G" чтобы арендовать",i+1);
		Market[i][m_text] = CreateDynamic3DTextLabel(string,-1,Market[i][m_x], Market[i][m_y], Market[i][m_z],6.0);
	}
	
	for(new g = 0; g < MAX_EGG; g++)
	{
		CreateDynamicObject(1451,Egg[g][gX],Egg[g][gY],Egg[g][gZ], Egg[g][grX],Egg[g][grY], Egg[g][grZ]);
		Egg[g][gText] = CreateDynamic3DTextLabel(""YELLOW"Курятник\n\n"W"Ухаживает:"P" None\n"W"Корм курицы:"P" [ 0/10 ]\n"W"Снесено яиц:"P" [ 0/20 ]\n\n"W"Начать ухаживать"P" [ ALT ]",-1,Egg[g][gX],Egg[g][gY],Egg[g][gZ]+1,4.0);
		strmid(Egg[g][gName],"None", 0, strlen("None"), 5);
	}
	for(new u = 0; u < MAX_SEWER; u++)
	{ 
		Sewer[u][seText] = CreateDynamic3DTextLabel(""ORANGE"Канализационный люк\n"W"Для входа нажмите"ORANGE" ALT",-1,Sewer[u][seX],Sewer[u][seY],Sewer[u][seZ]-0.5,2.0);
		Sewer[u][seAmmout] = 15;
	}
	CreateDynamic3DTextLabel(""ORANGE"Лифт"W"\nНажмите"ORANGE" 'F'" ,PP, 298.466552, -137.670822, 1035.534423, 3.0);
	CreateDynamic3DTextLabel(""ORANGE"Лифт"W"\nНажмите"ORANGE" 'F'" ,PP, 298.466552, -137.670822, 1035.534423, 3.0);
	

	CreateDynamic3DTextLabel(""ORANGE"Лифт"W"\nНажмите"ORANGE" 'F'" ,PP, 298.466552, -137.670822, 1035.534423, 3.0);
	CreateDynamic3DTextLabel(""ORANGE"Лифт"W"\nНажмите"ORANGE" 'F'" ,PP, 298.346527, -137.589859, 1029.644531, 3.0);
	
	/*CreateDynamic3DTextLabel("{F88539}HAllOWEEN"W"\nНажмите"W" ALT" ,PP, 1509.8147,-1661.6212,13.3226, 3.0);
	CreateDynamic3DTextLabel("Старый друг\nНажмите "ORANGE"'ALT'", PP, 1053.6957,-303.5652,73.9922, 3.0);
	CreateDynamic3DTextLabel("Фредди\nНажмите "ORANGE"'ALT'", PP, 1115.7891,-976.4371,42.7656, 3.0);
	CreateDynamic3DTextLabel("Колдунья\nНажмите "ORANGE"'ALT'", PP, 2413.9656,19.6305,26.9844, 3.0);
	CreateDynamic3DTextLabel("Могилка\nНажмите "ORANGE"'ALT'", PP, 885.3270,-1077.4008,24.2946, 3.0);*/
	
	CreateDynamic3DTextLabel("{F87427}Металл для сварки"W"\nДля взятия металла нажмите{F87427} ALT" ,PP,1701.1293,421.4013,30.6758,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0, 0);
	CreateDynamic3DTextLabel("{F87427}Приваривание"W"\nДля взаимодействия нажмите{F87427} ALT" ,PP,1702.6691,428.5308,30.6758, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0, 0);
	CreateDynamic3DTextLabel("{F87427}Приваривание"W"\nДля взаимодействия нажмите{F87427} ALT" ,PP,1693.7095,431.5305,30.6758, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0, 0);
	CreateDynamic3DTextLabel("{F87427}Приваривание"W"\nДля взаимодействия нажмите{F87427} ALT" ,PP,1704.7219,432.6099,30.6758, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0, 0);
	CreateDynamic3DTextLabel("{F87427}Приваривание"W"\nДля взаимодействия нажмите{F87427} ALT" ,PP,1708.7975,432.3958,30.6758, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0, 0);
	CreateDynamic3DTextLabel("{F87427}Приваривание"W"\nДля взаимодействия нажмите{F87427} ALT" ,PP,1714.7260,431.2768,30.6003, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0, 0);

	CreateDynamic3DTextLabel("{F87427}Цемент"W"\nДля взаимодействия нажмите{F87427} ALT" ,PP,1683.2194,378.8254,30.8809, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0, 0);
	CreateDynamic3DTextLabel("{F87427}Мешки с цементом"W"\nДля взаимодействия нажмите{F87427} ALT" ,PP,1704.5819,419.5714,30.6758, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0, 0);

	CreateDynamic3DTextLabel("{F87427}Сбор мусора"W"\nДля взаимодействия нажмите{F87427} ALT" ,PP,1725.9937,449.3317,28.4830, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0, 0);

	CreateDynamic3DTextLabel("{F87427}Мусорный бак"W"\nДля взаимодействия нажмите{F87427} ALT" ,PP,1693.4808,423.1825,30.6758, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0, 0);
	
	CreateDynamic3DTextLabel("{F87427}Меню фермы"W"\nДля взаимодействия нажмите{F87427} ALT" ,COLOR_WHITE,323.5974,-1589.5575,10.1469, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0, 0);

	CreateDynamicPickup(1239,23, -1142.2551,-288.3172,1128.3345, 2); // центр развлечений
	CreateDynamic3DTextLabel(""W"Взаимодействие:"G" 'ALT'",-1, -1142.2551,-288.3172,1128.3345,4.0);
	
	
	CreateDynamic3DTextLabel(""ORANGE"Проезжающий поезд\n"W"Взаимодействие:"G" 'ALT'",-1, -1307.6519,-1509.0223,24.0463,5.0);
	CreateDynamic3DTextLabel(""ORANGE"Пахан [FAQ Помощь]\n"W"Взаимодействие:"G" 'ALT'",-1, 3571.7920,-692.1529,20.2399,5.0);
	CreateDynamic3DTextLabel(""ORANGE"Лучший друг\n"W"Взаимодействие:"G" 'ALT'",-1, -2114.6072,-2419.0989,30.6250,5.0);

	
	CreateDynamic3DTextLabel(""W"Нажмите"G" 'ALT'",-1, 1125.4294,-1027.9141,1046.0126,4.0);
	
	CreateDynamicPickup(1239,23, 1409.3467,-16.4018,1010.3695); // центр развлечений
	CreateDynamic3DTextLabel("Взаимодействие:"G" 'ALT'",-1, 1409.3467,-16.4018,1010.3695,4.0);
	
	CreateDynamicPickup(1239,23, 124.6455,122.6624,1003.0521, 6); // Семейный центр
	CreateDynamic3DTextLabel(""W"Взаимодействие:"G" 'ALT'",-1,124.6455,122.6624,1003.0521,4.0);
	
	CreateDynamicPickup(1275,23, 793.4836,-1624.0413,13.3828); // Доставщик пиццы
	CreateDynamic3DTextLabel("{F87427}Устройство на работу\n"W"Взаимодействие:"G" 'ALT'",-1,793.4836,-1624.0413,13.3828,4.0);
	
	CreateDynamicPickup(1582,23, 794.2693,-1625.7371,13.3828); // Доставщик пиццы взять заказ
	CreateDynamic3DTextLabel("{F87427}Готовые заказы\n"W"Взаимодействие:"G" 'ALT'",-1,794.2693,-1625.7371,13.3828,4.0);

	// casino
	CreateDynamicPickup(1239,23,305.3058,-132.1072,1029.4011, 58);
	CreateDynamic3DTextLabel(""W"Взаимодействие:"G" 'ALT'",-1,305.3058,-132.1072,1029.4011,5.0);
	
	CreateDynamic3DTextLabel(""G"Правительство\n"W"Взаимодействие:"G" 'ALT'" ,-1, 1429.3641,-21.8939,1000.8815, 3.0);
	
	//// СПАВН БОМЖЕЙ
	CreateObject(984, 1791.72607, -1920.30933, 13.00160,   0.00000, 0.00000, 0.00000);
    CreateObject(984, 1791.72607, -1907.34924, 13.00160,   0.00000, 0.00000, 0.00000);
	CreateObject(1290, 1791.73547, -1900.98865, 12.38350,   0.00000, 0.00000, 0.00000);
	CreateObject(1290, 1791.74170, -1913.83252, 12.38350,   0.00000, 0.00000, 0.00000);
	CreateObject(1290, 1791.72314, -1926.70935, 12.38350,   0.00000, 0.00000, 0.00000);
	CreateObject(979, 1791.48950, -1913.83643, 12.87059,   0.00000, 0.00000, 90.00000);
	CreateObject(979, 1792.02124, -1913.91345, 12.87060,   0.00000, 0.00000, -90.00000);
	CreateObject(1257, 1793.02026, -1922.70178, 13.62180,   0.00000, 0.00000, 180.00000);
	CreateObject(1257, 1790.39441, -1904.82935, 13.62180,   0.00000, 0.00000, 1.00000);
	CreateObject(2792, 1789.47900, -1905.81921, 15.25520,   0.00000, 0.00000, 91.10800);
	CreateObject(2792, 1793.95618, -1923.72412, 15.25520,   0.00000, 0.00000, 89.39000);
	CreateObject(3522, 1791.01990, -1922.61536, 12.43570,   0.00000, 0.00000, 180.00000);
	CreateObject(3522, 1792.43884, -1904.92273, 12.43570,   0.00000, 0.00000, 0.00000);
	CreateObject(808, 1792.56372, -1906.68091, 13.78823,   0.00000, 0.00000, 325.80707);
	CreateObject(808, 1790.80481, -1920.86780, 13.78820,   0.00000, 0.00000, 180.00000);
	CreateObject(673, 1790.99036, -1924.17249, 10.23082,   0.00000, 0.00000, 0.00000);
	CreateObject(673, 1792.32678, -1903.36279, 10.23082,   0.00000, 0.00000, 345.02136);
	CreateObject(19452, 1769.7996, -1893.8873, 12.5021,   0.00000, 90.00000, 90.00000);
	CreateObject(19452, 1756.6229, -1894.0471, 12.5021,   0.00000, 90.00000, 90.00000);
	CreateObject(19452, 1763.1754, -1883.2583, 12.5021,   0.00000, 90.00000, 0.00000);
	CreateObject(19452, 1763.1908, -1892.9005, 12.5021,   0.00000, 90.00000, 0.00000);
	CreateObject(19452, 1763.1727, -1902.5267, 12.5021,   0.00000, 90.00000, 0.00000);
	CreateObject(19381, 1756.17786, -1887.48242, 12.50480,   0.00000, 90.00000, 0.00000);
	CreateObject(715, 1760.73694, -1890.00000, 20.81223,   0.00000, 0.00000, 0.00000);
	CreateObject(14400, 1754.56030, -1890.47156, 13.03845,   0.00000, 0.00000, 0.00000);
	CreateObject(673, 1754.15332, -1886.44641, 3.17806,   0.00000, 0.00000, 321.38556);
	CreateObject(867, 1758.59277, -1886.69409, 12.81272,   0.00000, 0.00000, 0.00000);
	CreateObject(3657, 1768.49561, -1884.29321, 13.01470,   0.00000, 0.00000, 0.00000);
	CreateObject(1549, 1766.44446, -1884.17090, 12.53635,   0.00000, 0.00000, 0.00000);
	CreateObject(617, 1772.39124, -1890.03625, 12.56001,   0.00000, 0.00000, 0.00000);
	CreateObject(1216, 1772.03589, -1889.92529, 13.17090,   0.00000, 0.00000, 275.00000);
	CreateObject(1216, 1772.23560, -1889.23315, 13.17090,   0.00000, 0.00000, 231.25812);
	CreateObject(1216, 1772.36865, -1890.56226, 13.17090,   0.00000, 0.00000, 318.89059);
	CreateObject(3657, 1768.49561, -1891.79456, 13.01470,   0.00000, 0.00000, 180.00000);
	CreateObject(3657, 1768.49561, -1887.89465, 13.01470,   0.00000, 0.00000, 180.00000);
	CreateObject(3657, 1768.49561, -1888.95300, 13.01470,   0.00000, 0.00000, 0.00000);
	CreateObject(8843, 1796.05273, -1913.73035, 12.41680,   -0.04000, 0.00000, 180.00000);
	CreateObject(8843, 1787.88696, -1913.73035, 12.41680,   -0.04000, 0.00000, 0.00000);
	CreateObject(10183, 1778.18323, -1925.48926, 12.43160,   0.00000, 0.00000, 135.33330);
	CreateObject(19467, 1795.75464, -1903.00195, 12.51580,   0.00000, 0.00000, 0.00000);
	CreateObject(19467, 1787.73706, -1923.71631, 12.51580,   0.00000, 0.00000, 0.00000);
	CreateObject(1319, 1774.45349, -1905.57703, 12.90486,   0.00000, 0.00000, 0.00000);
	CreateObject(1319, 1774.47058, -1910.38831, 12.90486,   0.00000, 0.00000, 0.00000);
	CreateObject(1319, 1774.45325, -1915.40515, 12.90486,   0.00000, 0.00000, 0.00000);
	CreateObject(1319, 1774.43433, -1920.44568, 12.90486,   0.00000, 0.00000, 0.00000);
	CreateObject(1319, 1774.44885, -1925.51758, 12.90486,   0.00000, 0.00000, 0.00000);
	CreateObject(1319, 1774.52100, -1930.52588, 12.90486,   0.00000, 0.00000, 0.00000);
	CreateObject(1319, 1774.46375, -1935.44800, 12.90486,   0.00000, 0.00000, 0.00000);
	CreateObject(19985, 1792.32361, -1902.74878, 12.04786,   0.00000, 0.00000, 180.00000);
	CreateObject(19985, 1790.94958, -1924.75745, 12.04790,   0.00000, 0.00000, 0.00000);
	CreateObject(19978, 1773.83008, -1890.85754, 12.24732,   0.00000, 0.00000, 90.00000);
	CreateObject(970, 1810.85974, -1882.59265, 13.09640,   0.00000, 0.00000, 112.90000);
	CreateObject(19950, 1811.67139, -1884.48193, 12.00250,   0.00000, 0.00000, 90.00000);
	CreateObject(19955, 1811.67139, -1884.48193, 12.70250,   0.00000, 0.00000, 90.00000);
	CreateObject(3504, 1768.00122, -1930.62463, 13.81120,   0.00000, 0.00000, 90.00000);
	CreateObject(7033, 1762.07935, -1919.97241, 17.02380,   0.00000, 0.00000, 90.00000);
	CreateObject(3504, 1768.00122, -1928.60461, 13.81120,   0.00000, 0.00000, 90.00000);
	CreateObject(3504, 1768.00122, -1926.60461, 13.81120,   0.00000, 0.00000, 90.00000);
	CreateObject(1227, 1767.61060, -1912.04602, 13.35440,   0.00000, 0.00000, 270.00000);
	CreateObject(0, 1767.61060, -1915.18604, 12.65440,   0.00000, 0.00000, 270.00000);
	CreateObject(1415, 1767.61060, -1915.04602, 12.65439,   0.00000, 0.00000, 270.00000);
	CreateObject(1264, 1767.44287, -1910.06995, 12.89506,   0.00000, 0.00000, 0.00000);
	CreateObject(1264, 1766.67175, -1908.86353, 12.89510,   0.00000, 0.00000, 65.28520);
	CreateObject(1264, 1767.68164, -1909.01245, 12.89510,   0.00000, 0.00000, 65.28520);
	// канализация
	CreateDynamicPickup(19135,23,2212.5579,-2545.3342,13.5469);
	CreateDynamic3DTextLabel(""ORANGE"Утилизация мусора\n"W"Для утилизации нажмите"ORANGE" 'H'"W" в машине",-1,2212.5579,-2545.3342,13.5469,5.0);
	CreateDynamic3DTextLabel(""ORANGE"Канализационный люк\n"W"Для выхода нажмите"ORANGE" ALT",-1,1471.5419,-109.9710,896.5629-0.5,2.0);
	////
	CreateDynamic3DTextLabel(""ORANGE"Очистка канализации\n"W"Для сбора мусора нажмите"ORANGE" ALT",-1,1465.0834,-101.0406,895.9769-0.5,3.0);
	CreateDynamic3DTextLabel(""ORANGE"Очистка канализации\n"W"Для сбора мусора нажмите"ORANGE" ALT",-1,1465.3014,-109.6158,895.9769-0.5,3.0);
	CreateDynamic3DTextLabel(""ORANGE"Очистка канализации\n"W"Для сбора мусора нажмите"ORANGE" ALT",-1,1465.2758,-113.7661,895.9769-0.5,3.0);
	CreateDynamic3DTextLabel(""ORANGE"Очистка канализации\n"W"Для сбора мусора нажмите"ORANGE" ALT",-1,1465.0853,-118.6356,895.9769-0.5,3.0);
	// trailer
	CreateDynamic3DTextLabel(""E"Шкаф"W" [ALT]",-1,-674.1530,1724.3579,1376.6270,4.0); // шкаф в доме на колесах

	CreateDynamic3DTextLabel(""YELLOW"Бесплатный корм для куриц\n"W"Взять корм"P" [ ALT ]",-1,-85.2639,-0.8936,3.1172,4.0);
	CreateDynamic3DTextLabel("{F7A587}Аукцион гаражей\n\n"W"Для взаимодействия нажмите{F7A587} ALT" ,-1, 1072.3623,399.6407,1856.6050, 5.0);

	GlobalSecondTimer = SetTimer("OnGameModeUpdate", 1000, false);
	ghetto_CreateTD();
	GZ_ZONE1 = GangZoneCreate(-76.171875,-400.390625,193.359375,-195.3125);
	SetTimer("TimerRobb", 1000, true);
	hacker_OnGameModeInit();
	SetTimer("CreateSphree", 5000, false);
	return true;
}

stock CreateVehicless() {
	for(new i = 0; i < sizeof(ArendInfo); i ++) {
		ArendInfo[i][aID] = A_AddStaticVehicleEx(ArendInfo[i][aModel], ArendInfo[i][aPos_X], ArendInfo[i][aPos_Y], ArendInfo[i][aPos_Z], ArendInfo[i][aPos_A], ArendInfo[i][aColor_1], ArendInfo[i][aColor_2], 100000,VEHICLE_TYPE_RENT);
		SetVehicleParamsEx(ArendInfo[i][aID],false,false,false,false,false,false,false);
		VehicleInfo[ArendInfo[i][aID]][vFuel] = gTransport[GetVehicleModel(ArendInfo[i][aID]-400)][trTank];
		VehicleInfo[ArendInfo[i][aID]][vAkum] = 100;
	}
	
	CreateJobVehicle(3, 403, -2.3778, -355.5000, 5.9873, 90.0000, -1, -1, RES_CAR_TIME); //развозчики АЗС
	CreateJobVehicle(3, 403, -2.3778, -351.0000, 5.9873, 90.0000, -1, -1, RES_CAR_TIME); //развозчики АЗС
	CreateJobVehicle(3, 403, -2.3778, -346.5000, 5.9873, 90.0000, -1, -1, RES_CAR_TIME); //развозчики АЗС
	CreateJobVehicle(3, 403, -2.3778, -342.0000, 5.9873, 90.0000, -1, -1, RES_CAR_TIME); //развозчики АЗС
	
	CreateJobVehicle(3, 456, 1345.7838, 347.6173, 20.0130, 66.2717, 1, 1, RES_CAR_TIME); // razvoz4iki
	CreateJobVehicle(3, 456, 1343.2013, 341.7430, 20.0193, 66.2767, 1, 1, RES_CAR_TIME); // razvoz4iki
	CreateJobVehicle(3, 456, 1341.3303, 337.4873, 20.0250, 66.2718, 1, 1, RES_CAR_TIME); // razvoz4iki
	CreateJobVehicle(3, 456, 1338.7329, 331.5789, 20.0272, 66.2704, 1, 1, RES_CAR_TIME); // razvoz4iki
	CreateJobVehicle(3, 456, 1336.3118, 326.0703, 20.0286, 66.2697, 1, 1, RES_CAR_TIME); // razvoz4ikiiki
	//
	
	CreateJobVehicle(9, 428, 1281.4506,-1352.5612,13.4673,91.5154, 1, 189, RES_CAR_TIME);
	CreateJobVehicle(9, 428, 1281.6013,-1356.2911,13.4582,91.8521, 1, 189, RES_CAR_TIME);
	CreateJobVehicle(9, 428, 1281.7120,-1360.9017,13.4487,92.2142, 1, 189, RES_CAR_TIME);
	CreateJobVehicle(9, 428, 1281.7985,-1365.2892,13.4613,91.5046, 1, 189, RES_CAR_TIME);
	
	// такси лс
	CreateTaxiVehicle(8, 420, 1062.1842,-1743.2438,13.2278,270.7118, 50, 0, RES_CAR_TIME);
	CreateTaxiVehicle(8, 420, 1062.2380,-1749.0417,13.2146,270.5598, 50, 0, RES_CAR_TIME);
	CreateTaxiVehicle(8, 420, 1062.1853,-1754.8960,13.1958,270.9721, 50, 0, RES_CAR_TIME);
	CreateTaxiVehicle(8, 420, 1062.2166,-1760.8433,13.1685,270.5042, 50, 0, RES_CAR_TIME);
	CreateTaxiVehicle(8, 420, 1062.3025,-1766.7914,13.1437,271.2455, 50, 0, RES_CAR_TIME);
	CreateTaxiVehicle(8, 420, 1062.5063,-1772.6552,13.1185,269.7003, 50, 0, RES_CAR_TIME);
	CreateTaxiVehicle(8, 420, 1098.9478,-1772.6052,13.1102,89.1220, 50, 0, RES_CAR_TIME);
	CreateTaxiVehicle(8, 420, 1099.0879,-1766.7766,13.1112,89.8205, 50, 0, RES_CAR_TIME);
	CreateTaxiVehicle(8, 420, 1098.7244,-1760.8503,13.1155,90.5744, 50, 0, RES_CAR_TIME);
	CreateTaxiVehicle(8, 420, 1098.8611,-1754.9343,13.1156,89.7019, 50, 0, RES_CAR_TIME);
	
	//автобусы лс
	CreateBusVehicle(1,1,431, 1275.2385, -1799.5630, 13.5189, 180.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1270.7767, -1799.5630, 13.5060, 180.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1266.0929, -1799.5630, 13.5042, 180.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1261.3867, -1799.5630, 13.5268, 180.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1277.1067, -1818.4924, 13.4896, 90.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1277.1067, -1824.2389, 13.4924, 90.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1277.1067, -1829.3267, 13.4947, 90.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1277.1067, -1834.7875, 13.4879, 90.0000, 162, 162, RES_CAR_TIME);


	///////////////////////////////////////////////////////////////////////////////////////
	CreateJobVehicle(2,525, 1648.3584, -1111.3390, 23.7807, 90.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, 1648.3584, -1107.0978, 23.7807, 90.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, 1648.3584, -1102.7109, 23.7807, 90.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, -74.6398, -1153.8937, 1.6166, 125.5000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, -70.1951, -1156.5787, 1.6166, 125.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, -1655.1967, 450.7682, 7.0438, -175.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, -1650.1825, 446.9225, 7.0438, -175.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, -1645.4277, 443.8788, 7.0438, -175.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, 2635.4714, 1070.1379, 10.7283, 90.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, 2635.4714, 1075.6338, 10.7283, 90.0000, -1, -1, RES_CAR_TIME);//механики

	CreateJobVehicle(4,588, 204.7591, -1444.2350, 13.0257, -41.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, 200.1640, -1440.1998, 13.0257, -41.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, 195.7671, -1436.1971, 13.0257, -41.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, 209.6613, -1421.3890, 13.0857, 133.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, 213.8766, -1425.7546, 13.0657, 133.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, 217.9863, -1430.0875, 13.0857, 133.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, -2400.6055, -611.9255, 132.5215, 35.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, -2392.3738, -602.4990, 132.5215, 125.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, -2395.7551, -597.6688, 132.5215, 125.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, -2399.1357, -592.8521, 132.5215, 125.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, -2402.5354, -588.0103, 132.5215, 125.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, -2416.1211, -589.9481, 132.5215, -145.0000, -1, -1, RES_CAR_TIME);//продажа еды

	CreateJobVehicle(5,574,684.9719800,-1567.9510500,14.0360000,180.0000000, -1, -1, RES_CAR_TIME);//уборщик дорог
	CreateJobVehicle(5,574,688.4539800,-1567.9189500,14.0360000,180.0000000, -1, -1, RES_CAR_TIME);//уборщик дорог
	CreateJobVehicle(5,574,691.8309900,-1567.9260300,14.0360000,180.0000000, -1, -1, RES_CAR_TIME);//уборщик дорог
	CreateJobVehicle(5,574,695.3020000,-1567.8969700,14.0360000,180.0000000, -1, -1, RES_CAR_TIME);//уборщик дорог
	CreateJobVehicle(5,574,698.7160000,-1567.9139400,14.0360000,180.0000000, -1, -1, RES_CAR_TIME);//уборщик дорог

	CreateJobVehicle(6,552,2212.1840, -2507.5449, 13.324, 270.0, -1, -1, RES_CAR_TIME);//чистка канализаций
	CreateJobVehicle(6,552,2212.1840, -2511.9021, 13.324, 270.0, -1, -1, RES_CAR_TIME);//чистка канализаций
	CreateJobVehicle(6,552,2212.1840, -2532.5749, 13.324, 270.0, -1, -1, RES_CAR_TIME);//чистка канализаций
	CreateJobVehicle(6,552,2212.1840, -2537.0109, 13.324, 270.0, -1, -1, RES_CAR_TIME);//чистка канализаций
	
	CreateJobVehicle(105,430, 3353.3655,-657.5939,0.1088,94.9636, 0, 0, 900);
	CreateJobVehicle(105,430, 3356.4080,-672.0045,-1.0868,83.6326, 0, 0, 900);
	CreateJobVehicle(105,430, 3359.2803,-682.6005,-0.6158,86.6194, 0, 0, 900);
	CreateJobVehicle(105,430, 3358.7075,-696.5663,-0.0489,92.0380, 0, 0, 900);
	
	/*CreateOrgsVehicle(fAZTEC,1,482, 1668.1003,-2115.3198,13.6635,269.9154, 2, 1,RES_CAR_TIME);
	CreateOrgsVehicle(fAZTEC,1,567, 1693.7133,-2106.5117,13.2558,217.7382, 2, 1,RES_CAR_TIME);
	CreateOrgsVehicle(fAZTEC,1,567, 1688.0653,-2106.5273,13.4164,215.1891, 2, 1,RES_CAR_TIME);
	CreateOrgsVehicle(fAZTEC,1,567, 1683.1951,-2106.7749,13.3470,216.2891, 2, 1,RES_CAR_TIME);
	CreateOrgsVehicle(fAZTEC,1,534, 1682.9250,-2119.3757,13.4348,318.7427, 2, 1,RES_CAR_TIME);
	CreateOrgsVehicle(fAZTEC,1,534, 1688.2859,-2119.6433,13.4331,322.8873, 2, 1,RES_CAR_TIME);
	CreateOrgsVehicle(fAZTEC,1,534, 1693.8523,-2119.4265,13.2578,327.7149, 2, 1,RES_CAR_TIME);
	CreateOrgsVehicle(fAZTEC,1,478, 1729.4000244,-2118.0000000,13.6000004,270.0000000, 2, 1,RES_CAR_TIME);
	
	CreateOrgsVehicle(fVAGOS,1,482, 2763.1267,-1177.7478,69.4963,89.3456,  6, 6,RES_CAR_TIME);
	CreateOrgsVehicle(fVAGOS,1,467, 2743.7043,-1166.6685,69.1304,137.3762, 6, 6,RES_CAR_TIME);
	CreateOrgsVehicle(fVAGOS,1,478, 2742.2278,-1161.8744,69.3906,136.7292, 6, 6,RES_CAR_TIME);
	CreateOrgsVehicle(fVAGOS,1,474, 2742.6250,-1156.2928,69.1879,132.3481, 6, 6,RES_CAR_TIME);
	CreateOrgsVehicle(fVAGOS,1,474, 2732.8054,-1162.2874,69.1441,178.5280, 6, 6,RES_CAR_TIME);
	CreateOrgsVehicle(fVAGOS,1,474, 2732.5696,-1177.2135,69.0494,175.6907, 6, 6,RES_CAR_TIME);
	CreateOrgsVehicle(fVAGOS,1,467, 2742.7551,-1186.1484,69.0239,180.1597, 6, 6,RES_CAR_TIME);
	
	CreateOrgsVehicle(fBALLAS,1, 482, 2655.6296,-2032.1797,13.6603,92.7819, 85, 85,RES_CAR_TIME);
	CreateOrgsVehicle(fBALLAS,1, 516, 2652.4858,-2042.6720,13.4128,1.1648, 85, 85,RES_CAR_TIME);
	CreateOrgsVehicle(fBALLAS,1, 516, 2657.5037,-2042.6095,13.3781,0.0772, 85, 85,RES_CAR_TIME);
	CreateOrgsVehicle(fBALLAS,1, 517, 2651.9038,-2009.8636,13.3404,315.8267, 85, 85,RES_CAR_TIME);
	CreateOrgsVehicle(fBALLAS,1, 517, 2660.4558,-1998.6439,13.2946,268.9876, 85, 85,RES_CAR_TIME);
	CreateOrgsVehicle(fBALLAS,1, 566, 2663.0459,-2010.4139,13.2842,314.9999, 85, 85,RES_CAR_TIME);
	CreateOrgsVehicle(fBALLAS,1, 566, 2657.4636,-2009.7177,13.2906,312.6417, 85, 85,RES_CAR_TIME);
	CreateOrgsVehicle(fBALLAS,1, 478, 2681.1000977,-2009.3000488,13.6000004,270.0000000, 85, 85,RES_CAR_TIME);
	
	CreateOrgsVehicle(fGROVE,1, 482, 2505.2205,-1694.3320,13.6723,358.9510, 86, 86,RES_CAR_TIME);
	CreateOrgsVehicle(fGROVE,1, 600, 2486.7856,-1680.8467,12.9853,333.5294, 86, 86,RES_CAR_TIME);
	CreateOrgsVehicle(fGROVE,1, 600, 2491.6892,-1680.8110,12.9905,334.3155, 86, 86,RES_CAR_TIME);
	CreateOrgsVehicle(fGROVE,1, 492, 2496.9253,-1680.3582,13.1278,335.2479, 86, 86,RES_CAR_TIME);
	CreateOrgsVehicle(fGROVE,1, 492, 2502.0142,-1679.2673,13.1104,331.8155, 86, 86,RES_CAR_TIME);
	CreateOrgsVehicle(fGROVE,1, 466, 2501.7458,-1655.4292,13.0974,56.2400, 86, 86,RES_CAR_TIME);
	CreateOrgsVehicle(fGROVE,1, 466, 2507.2712,-1663.0812,13.1530,24.3497, 86, 86,RES_CAR_TIME);
	CreateOrgsVehicle(fGROVE,1, 600, 2471.9756,-1653.3414,13.1145,88.9228, 86, 86,RES_CAR_TIME);
	CreateOrgsVehicle(fGROVE,1, 478, 2479.1999512,-1653.5999756,13.5000000,90.0000000, 86, 86,RES_CAR_TIME);
	//
	CreateOrgsVehicle(fRIFA,1, 529, 2177.5630, -1808.2943, 13.3516, -27.4200, 12, 12,RES_CAR_TIME);
	CreateOrgsVehicle(fRIFA,1, 529, 2173.5139, -1808.3468, 13.3516, -27.4200, 12, 12,RES_CAR_TIME);
	CreateOrgsVehicle(fRIFA,1, 529, 2169.4451, -1808.4357, 13.3516, -27.4200, 12, 12,RES_CAR_TIME);
	CreateOrgsVehicle(fRIFA,1, 439, 2172.6543, -1790.9640, 13.3516, -90.0000, 12, 12,RES_CAR_TIME);
	CreateOrgsVehicle(fRIFA,1, 439, 2165.4509, -1790.9640, 13.3516, -90.0000, 12, 12,RES_CAR_TIME);
	CreateOrgsVehicle(fRIFA,1, 478, 2190.1111, -1796.2930, 13.3516, 0.0000, 12, 12,RES_CAR_TIME);
	CreateOrgsVehicle(fRIFA,1, 482, 2190.1111, -1804.5145, 13.3516, 0.0000, 12, 12,RES_CAR_TIME);
	
	CreateOrgsVehicle(fWHITEHOUSE,1,421, 1406.5566,-1775.7407,13.3944,61.4270, 1, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fWHITEHOUSE,1,421, 1406.4348,-1780.4308,13.4060,61.1411, 1, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fWHITEHOUSE,1,421, 1406.3918,-1785.5778,13.3929,61.4740, 1, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fWHITEHOUSE,1,409, 1405.6271,-1796.5082,13.2949,359.0536, 1, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fWHITEHOUSE,1,489, 1406.4747,-1804.6998,13.6658,90.4177, 1, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fWHITEHOUSE,1,489, 1406.4926,-1808.7216,13.6674,89.9668, 1, 1, RES_CAR_TIME);
	
	CreateOrgsVehicle(fARMYLS,1, 470, 2775.6531,-2555.4543,13.6536,1.0531, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 470, 2784.4548,-2555.2344,13.6537,1.6415, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 470, 2793.4314,-2555.3923,13.6535,359.9260, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 470, 2802.0344,-2555.0657,13.6253,1.7414, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 500, 2804.6201,-2376.9480,13.7100,90.3112, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 500, 2804.4729,-2373.4399,13.7305,90.9699, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 500, 2804.3708,-2369.7224,13.7323,90.7869, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 433, 2768.9463,-2369.9980,14.0364,177.5734, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 433, 2781.7219,-2370.0173,14.0385,182.4541, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 433, 2792.8171,-2369.8167,14.0394,181.6052, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 431, 2763.8704,-2528.5981,13.7042,2.8527, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 472, 2732.0640,-2321.0203,-0.0312,357.6923, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 487, 2822.0010,-2486.5938,19.9430,271.0899, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 487, 2820.7402,-2501.1094,19.9940,270.4523, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 598, 2797.0842,-2499.1545,13.2601,89.1358, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 598, 2797.2202,-2503.0583,13.2600,88.6941, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,8, 520, 2828.5288,-2339.6123,20.5996,179.5553, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYLS,1, 548, 2820.1343,-2531.9702,21.2788,0.0470, 77, 77, RES_CAR_TIME);

	CreateOrgsVehicle(fLSNEWS,1, 582, 1548.4930,-1324.9818,16.5440,0.0000,152,155,RES_CAR_TIME);
	CreateOrgsVehicle(fLSNEWS,1, 582, 1552.9690,-1324.9818,16.5394,0.0000,152,155,RES_CAR_TIME);
	CreateOrgsVehicle(fLSNEWS,1, 582, 1558.9740,-1324.9818,16.5374,0.0000,152,155,RES_CAR_TIME);
	CreateOrgsVehicle(fLSNEWS,1, 582, 1563.6055,-1324.9818,16.5413,0.0000,152,155,RES_CAR_TIME);
	CreateOrgsVehicle(fLSNEWS,1,	582, 1577.4751, -1315.8938, 16.5327, 90.0000,152,155,RES_CAR_TIME);
	CreateOrgsVehicle(fLSNEWS,1, 488, 1545.1329,-1352.8324,329.6407,270.5792,0,155,RES_CAR_TIME);

	CreateOrgsVehicle(fFBI,1, 427, 1601.7637,-1264.8778,17.5810,271.3938,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 490, 1601.8647,-1256.2493,17.5578,270.8979,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 415, 1601.6395,-1250.8352,17.5572,272.0809,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 560, 1601.7677,-1245.7012,17.5597,271.7985,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 560, 1601.6448,-1240.8065,17.5480,271.1627,0,0,RES_CAR_TIME);
	
	CreateOrgsVehicle(fFBI,1, 427, 1601.8474,-1236.1571,17.5741,270.6385,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 487, 1613.6954,-1220.8116,17.6675,181.6434,0,0,RES_CAR_TIME);
	
	CreateOrgsVehicle(fYAKUZA,1, 580, 729.3846,-1274.0873,13.4110,88.3432,58,58,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 579, 728.6336,-1281.3625,13.5211,0.7136,58,58,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 579, 723.1068,-1281.3344,13.5213,0.2832,58,58,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 482, 717.3295,-1281.5248,13.7520,0.8078,58,58,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 409, 708.4298,-1275.5547,13.3955,90.4682,58,58,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 487, 719.1498,-1293.9133,21.3930,2.3980,58,58,RES_CAR_TIME);
	
	CreateOrgsVehicle(fRM,1, 579, 1390.3951,382.3416,19.5104,64.5837, 8, 8,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 579, 1391.9583,385.6666,19.5093,66.4622, 8, 8,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 580, 1393.7289,390.1748,19.1973,65.9714, 8, 8,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 579, 1395.6182,393.9633,19.5110,65.6564, 8, 8,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 409, 1387.2294,398.9271,19.5000,65.7598, 8, 8,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 482, 1378.5331,402.4811,19.8012,67.1438, 8, 8,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 487, 1390.7072,413.7133,27.3289,65.4708, 8, 8,RES_CAR_TIME);

	CreateOrgsVehicle(fLCN,1,409, 655.8882,-451.6355,15.9768,179.6650, 6, 6, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,482, 660.3427,-450.6212,16.2955,179.9837, 6, 6, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,580, 664.8812,-450.7851,15.9763,180.6794, 6, 6, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,579, 669.2943,-450.6430,16.0970,180.4382, 6, 6, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,579, 675.3651,-450.5069,16.0986,179.5677, 6, 6, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,487, 670.2825,-467.4943,16.3632,89.1750, 6, 6, RES_CAR_TIME);
	
	CreateOrgsVehicle(fRCSD,1,596, 639.9385,-609.7650,16.0335,1.3358, 16, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fRCSD,1,596, 635.2193,-609.9377,16.0354,2.4260, 16, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fRCSD,1,596, 631.1809,-610.0971,16.0337,0.6335, 16, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fRCSD,1,599, 622.2613,-610.4474,17.2707,273.5800, 16, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fRCSD,1,599, 621.7999,-605.4788,17.2974,274.4462, 16, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fRCSD,1,596, 613.4268,-601.7015,16.9296,269.5963, 16, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fRCSD,1,596, 613.1343,-597.3115,16.9257,272.3223, 16, 1, RES_CAR_TIME);
	
	//
	CreateOrgsVehicle(fRCSD,1,523, 610.2762,-610.1265,16.7747,347.7795, 1, 16, RES_CAR_TIME);
	CreateOrgsVehicle(fRCSD,1,523, 611.9869,-610.1176,16.7740,343.8904, 1, 16, RES_CAR_TIME);
	CreateOrgsVehicle(fRCSD,1,523, 614.0106,-610.2168,16.7740,339.6288, 1, 16, RES_CAR_TIME);
	CreateOrgsVehicle(fRCSD,1,523, 616.2487,-610.4496,16.7706,347.2054, 1, 16, RES_CAR_TIME);
	CreateOrgsVehicle(fRCSD,1,525, 611.9434,-590.8552,17.1707,269.8551, 1, 16, RES_CAR_TIME);


	
	CreateOrgsVehicle(fLSPD,1,596, 1595.4889, -1711.5000, 5.6125, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,596, 1591.4387, -1711.5000, 5.6116, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,596, 1587.4666, -1711.5000, 5.6071, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,596, 1583.4468, -1711.5000, 5.6113, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,596, 1578.3768, -1711.5000, 5.6356, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,596, 1574.4454, -1711.5000, 5.6126, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,596, 1570.4323, -1711.5000, 5.6109, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,596, 1566.4204, -1711.5000, 5.6116, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,560, 1562.3646, -1711.5000, 5.6057, 0.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,560, 1558.7681, -1711.5000, 5.5957, 0.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,523, 1544.7458, -1684.5098, 5.4614, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,523, 1544.7458, -1680.1964, 5.4621, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,523, 1544.7458, -1676.3038, 5.4627, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,427, 1545.3319, -1672.1801, 6.0227, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,427, 1545.3319, -1667.7170, 6.0238, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,601, 1545.9602, -1650.9843, 5.6494, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,528, 1530.6144, -1644.1118, 5.8629, 180.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,528, 1526.5190, -1644.1118, 5.8631, 180.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,599, 1528.8228, -1684.0189, 6.0851, 270.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,599, 1528.8228, -1688.0905, 6.0836, 270.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,497, 1567.9802, -1653.7964, 28.5689, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,541, 1601.8314, -1704.2982, 5.4945, 90.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,541, 1601.8314, -1700.2322, 5.4946, 90.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,525, 1603.4110, -1628.9520, 13.492, 90.0, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,525, 1603.302, -1623.2209, 13.491, 90.0, 0, 0, RES_CAR_TIME);
	
	//fbikers
	CreateOrgsVehicle(fBikers,1,463, 310.2855, -46.0862, 1.0563, 180.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikers,1,463, 312.0230, -46.0921, 1.0563, 180.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikers,1,463, 313.7034, -46.0654, 1.0563, 180.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikers,1,463, 315.3438, -46.0578, 1.0563, 180.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikers,1,463, 317.0633, -46.0918, 1.0563, 180.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikers,1,463, 329.2213, -44.6047, 1.0563, 90.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikers,1,463, 329.2195, -46.2456, 1.0563, 90.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikers,1,463, 329.1993, -47.8466, 1.0563, 90.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikers,1,463, 329.1204, -49.4677, 1.0563, 90.0000, 0,0, 100);
	CreateOrgsVehicle(fBikers,1,463, 329.1811, -51.0871, 1.0563, 90.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikers,1,463, 329.2419, -52.7264, 1.0563, 90.0000,0, 0, 100);
	CreateOrgsVehicle(fBikers,1,482, 314.4372,-24.9238,1.6412,   270.0929,0, 0, 1000);
	//
    //fbikers
    CreateOrgsVehicle(fBikersTwo,1,463, 2358.3416, 260.7120, 25.9767, 0.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikersTwo,1,463, 2355.7288, 234.2266, 25.9767, 180.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikersTwo,1,463, 2358.8113, 234.1987, 25.9767, 180.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikersTwo,1,463, 2368.3743, 234.1120, 25.9767, 180.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikersTwo,1,463, 2371.2639, 234.0859, 25.9767, 180.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikersTwo,1,463, 2365.1575, 234.1412, 25.9767, 180.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikersTwo,1,463, 2361.9841, 234.1699, 25.9767, 180.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikersTwo,1,463, 2355.3823, 260.6233, 25.9767, 0.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikersTwo,1,463, 2361.2690, 260.6354, 25.9767, 0.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikersTwo,1,463, 2364.3267, 260.7188, 25.9767, 0.0000, 0,0, 100);
	CreateOrgsVehicle(fBikersTwo,1,463, 2367.4451, 260.7446, 25.9767, 0.0000, 0, 0, 100);
	CreateOrgsVehicle(fBikersTwo,1,463, 2370.7314, 260.7760, 25.9767, 0.0000,0, 0, 100);
	CreateOrgsVehicle(fBikersTwo,1,482, 2384.4810, 247.2578, 26.5339, 180.0,0, 0, 1000);
	//
	CreateOrgsVehicle(fINSTRUCTORS,1,487,766.1730,-1437.2469,13.6900,352.9590,209,209, RES_CAR_TIME);
	CreateOrgsVehicle(fINSTRUCTORS,1,426,702.8710,-1438.2163,13.2630,1.6477,209,209, RES_CAR_TIME); 
	CreateOrgsVehicle(fINSTRUCTORS,1,426,706.6771,-1438.0846,13.2628,0.1056,209,209, RES_CAR_TIME);
	CreateOrgsVehicle(fINSTRUCTORS,1,426,710.2498,-1437.8423,13.2803,356.7993,209,209, RES_CAR_TIME); 
	CreateOrgsVehicle(fINSTRUCTORS,1,426,714.5416,-1437.7178,13.2570,358.1386,209,209, RES_CAR_TIME); 

	CreateOrgsVehicle(fMEDICLS,1,416, 1123.8384, -1326.9530, 13.4725, 0.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLS,1,416, 1110.8032, -1326.9530, 13.3433, 0.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLS,1,416, 1097.7792, -1326.9530, 13.3344, 0.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLS,1,416, 1179.4583, -1338.7979, 13.8819, 270.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLS,1,487, 1162.2275, -1300.7074, 32.2314, 270.0000, 1, 3, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLS,1,487, 1162.2275, -1319.9258, 32.1892, 270.0000, 1, 3, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLS,1,416, 1184.0970, -1315.7960, 13.8034, 180.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLS,1,416, 1176.9188, -1308.4987, 13.9295, 270.0000, 3, 1, RES_CAR_TIME);*/

	CreateJobVehicle(71,473, -2334.9319, 1689.5669, 0.1308, 180.0000, -1, -1, 100);
	CreateJobVehicle(71,473, -2331.0867, 1691.3357, 0.1308, 180.0000, -1, -1, 100);
	
	

	VehicleWareHouse[0] = AddStaticVehicle(455,132.2546,-287.5774,1.7220,180.2298,77, 77);
	VehicleWareHouse[1] = CreatePickup(1575, 23,  164.8852,1852.3386,643.0618);
	
	VWH3DText[0] = CreateDynamic3DTextLabel("{FFFFFF}Для загрузки материалов в машину\n\n\nНажмите: 'ALT'", 0xFFFFFFFF, 132.2546,-287.5774,1.7220, 10.0);
	VWH3DText[1] = CreateDynamic3DTextLabel("{FFFFFF}Для того что бы взять материалы\n\n\nНажмите: 'ALT'", 0xFFFFFFFF, 164.8852,1852.3386,643.0618, 10.0);
	
	
	VehicleInfo[VehicleWareHouse[0]][vAkum] = 100;
	VehicleInfo[VehicleWareHouse[0]][vFuel] = gTransport[VehicleWareHouse[0]][trTank];

	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		SignalTick[i][1] = -1;
		LightsObject[i][0] = -1;
		LightsObject[i][1] = -1;
		SetVehicleParamsEx(i,false,false,false,false,false,false,false);
		if(!VehicleInfo[i][vJob] && !VehicleInfo[i][vTeam]) continue;
		VehicleInfo[i][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
		//VehicleInfo[i][vAkum] = gTransport[GetVehicleModel(i)-400][trTank];
		VehicleInfo[i][vPlayer] = -1;
	}
	
	////// яхт клуб лодки
	sell_yaxt[0] = AddStaticVehicle(454, 542.7020, -4801.1909, 0, 0.0, 6, 6);
	sell_yaxt[1] = AddStaticVehicle(452, 552.5720, -4799.8891, 0, 0.0, 6, 6);
	sell_yaxt[2] = AddStaticVehicle(446, 562.0579, -4800.4770, 0, 0.0, 6, 6);
	sell_yaxt[3] = AddStaticVehicle(493, 562.1799, -4769.4140, 0, 180.0, 6, 6);
	sell_yaxt[4] = AddStaticVehicle(473, 552.7849, -4775.1689, 0, 180.0, 6, 6);
	sell_yaxt[5] = AddStaticVehicle(472, 543.3709, -4774.0820, 0, 180.0, 6, 6);
	SetVehicleVirtualWorld(sell_yaxt[0], 50);
	SetVehicleVirtualWorld(sell_yaxt[1], 50);
	SetVehicleVirtualWorld(sell_yaxt[2], 50);
	SetVehicleVirtualWorld(sell_yaxt[3], 50);
	SetVehicleVirtualWorld(sell_yaxt[4], 50);
	SetVehicleVirtualWorld(sell_yaxt[5], 50);
	
	VehicleInfo[sell_yaxt[0]][vType] = VEHICLE_TYPE_AUTOSALON;
	SetVehicleParamsEx(sell_yaxt[0],false,false,false,true,false,false,false);
	VehicleInfo[sell_yaxt[1]][vType] = VEHICLE_TYPE_AUTOSALON;
	SetVehicleParamsEx(sell_yaxt[1],false,false,false,true,false,false,false);
	VehicleInfo[sell_yaxt[2]][vType] = VEHICLE_TYPE_AUTOSALON;
	SetVehicleParamsEx(sell_yaxt[2],false,false,false,true,false,false,false);
	VehicleInfo[sell_yaxt[3]][vType] = VEHICLE_TYPE_AUTOSALON;
	SetVehicleParamsEx(sell_yaxt[3],false,false,false,true,false,false,false);
	VehicleInfo[sell_yaxt[4]][vType] = VEHICLE_TYPE_AUTOSALON;
	SetVehicleParamsEx(sell_yaxt[4],false,false,false,true,false,false,false);
	VehicleInfo[sell_yaxt[5]][vType] = VEHICLE_TYPE_AUTOSALON;
	SetVehicleParamsEx(sell_yaxt[5],false,false,false,true,false,false,false);
	
	new nark_yaxt;
	nark_yaxt = AddStaticVehicle(453,2106.4429,-95.3745,-0.4903,120.7945, 4, 4);
	SetVehicleParamsEx(nark_yaxt,false,false,false,true,false,false,false);
	VehicleInfo[nark_yaxt][vType] = VEHICLE_TYPE_AUTOSALON;
	return 1;
}
forward CreateSphree();
public CreateSphree() {
	actor[4] = CreateActor(29, 324.3706,1120.0488,1083.8828,110.0615);//[притон] продажа нарко
	SetActorVirtualWorld(actor[4], 32);
	
	actor[5] = CreateActor(291, 1763.3773,-1906.7416,13.5880,357.3777);//[КВЕСТ] гетто спавн
	ApplyActorAnimation(actor[5],"DEALER","Dealer_idle",4.1,0,0,0,1,1);

	actor[6] = CreateActor(291, 539.3405,-4785.8008,2.0859,267.3876);// Лодочная бот
	SetActorVirtualWorld(actor[6], 50);

	actor[7] = CreateActor(91, 1441.9052,696.7106,1087.9011,353.7388);//[автосалоны]
	SetActorVirtualWorld(actor[7], 59);
	
	actor[8] = CreateActor(240, 7.9640,-73.9655,1026.4089,177.9895);//[АШ] покупка лицензий (регистратура)
	SetActorVirtualWorld(actor[8], 5);
	
	actor[9] = CreateActor(29, 1768.1006,-1935.9192,13.5691,180.6560);//
	ApplyActorAnimation(actor[9],"BD_FIRE","M_smklean_loop",4.1,0,0,0,1,1);

	actor[10] = CreateActor(6, 1611.4192,999.5148,1475.6283,184.6588);//[Итальяснкая мафия] босс нарко
	SetActorVirtualWorld(actor[10], 49);
	ApplyActorAnimation(actor[10],"MISC","seat_LR",4.1,0,0,0,1,1);
	
	actor[11] = CreateActor(6, 1611.4192,999.5148,1475.6283,184.6588);//[Японская мафия] босс нарко
	SetActorVirtualWorld(actor[11], 50);
	ApplyActorAnimation(actor[11],"MISC","seat_LR",4.1,0,0,0,1,1);
	
	actor[12] = CreateActor(6, 1611.4192,999.5148,1475.6283,184.6588);//[Русская мафия] босс нарко
	SetActorVirtualWorld(actor[12], 49);
	ApplyActorAnimation(actor[12],"MISC","seat_LR",4.1,0,0,0,1,1);

	actor[13] = CreateActor(217,2544.8782,2810.9150,10.8203,323.7741);//[LsNews] бот объявы
	SetActorVirtualWorld(actor[13], 10);

	actor[14] = CreateActor(30, 2360.9939,-2007.8639,13.5537,177.4613); //Квест для ГЕТТО //Ограбление
	ApplyActorAnimation(actor[14],"DEALER","Dealer_idle",4.1,0,0,0,1,1);

	actor[15] = CreateActor(194,-199.5641,-34.5301,1011.1747,0.6646); // центр занятости
	SetActorVirtualWorld(actor[15], 1);

	actor[16] = CreateActor(21,2057.5798,-1897.5746,13.5538,178.1751); // бот дуэли
	ApplyActorAnimation(actor[16],"DEALER","Dealer_idle",4.1,0,0,0,1,1);
	
	actor[17] = CreateActor(194,445.0362,-1950.7393,8.5650,267.7324); // Бармэн яхт-клубч
	
	actor[18] = CreateActor(141,14.3195,1402.4147,1069.3558,178.3647); // FBI
	SetActorVirtualWorld(actor[18], 43);
	
	actor[19] = CreateActor(30,2493.9104,-1464.7085,24.0253,357.7460); // угон авто
	
	actor[20] = CreateActor(194, -196.6275,-34.5301,1011.1747,359.0980); // центр занятости
	SetActorVirtualWorld(actor[20], 1);
	
	actor[21] = CreateActor(206, 321.5026,1130.4033,1084.5238,271.9670); // 57 инта
	SetActorVirtualWorld(actor[21], 5);
	ApplyActorAnimation(actor[21],"CRACK","Crckidle2",4.1,0,0,0,1,1);
	
	actor[22] = CreateActor(29, 324.4355,1119.4750,1083.8828,85.5787); // 57
	SetActorVirtualWorld(actor[22], 5);
	ApplyActorAnimation(actor[22],"CRACK","Crckidle1",4.1,0,0,0,1,1);
	
	actor[23] = CreateActor(30, 329.3237,1118.7214,1083.8903,358.8361);
	SetActorVirtualWorld(actor[23], 5);
	ApplyActorAnimation(actor[23],"DEALER","Dealer_idle",4.1,0,0,0,1,1);
	
	actor[24] = CreateActor(307, 196.9073,-167.5883,1019.3028,179.7539);
	SetActorVirtualWorld(actor[24], 1);
	
	actor[25] = CreateActor(194, -1140.8104,26.9086,1169.5699,92.4955);
	SetActorVirtualWorld(actor[25], 78);
	
	actor[26] = CreateActor(194, -1140.8116,23.8152,1169.5699,88.1088);
	SetActorVirtualWorld(actor[26], 78);
	
	actor[27] = CreateActor(194, -1140.8109,20.6114,1169.5699,89.9888);
	SetActorVirtualWorld(actor[27], 78);
	
	actor[28] = CreateActor(290, 2451.3081,-1901.9733,13.5469,4.9298);
	SetActorVirtualWorld(actor[28], 0);
	ApplyActorAnimation(actor[28],"BD_FIRE","M_smklean_loop",4.1,0,0,0,1,1);
	
	actor[29] = CreateActor(91, 52.4388,-3.8314,1225.5125,88.0547);
	SetActorVirtualWorld(actor[29], 2);
	
	actor[30] = CreateActor(91, 52.4388,-3.8314,1225.5125,88.0547);
	SetActorVirtualWorld(actor[30], 59);
	
	actor[31] = CreateActor(91, 52.4388,-3.8314,1225.5125,88.0547);
	SetActorVirtualWorld(actor[31], 42);
	
	actor[32] = CreateActor(27, 1681.3511,407.5813,30.6673,160.9958);
	
	actor[33] = CreateActor(309, -51.6130,-185.5219,1026.9832,87.4355);
	SetActorVirtualWorld(actor[33], 6);
	
	actor[34] = CreateActor(194, 307.7754,-134.0191,1029.4023,357.9430);
	SetActorVirtualWorld(actor[34], 7);
	
	actor[35] = CreateActor(11, 1431.1088,-21.8708,1000.8815,90.5831); // мэрия
	SetActorVirtualWorld(actor[35], 4);
	
	actor[36] = CreateActor(28, 329.2349,1118.6484,1083.8903,4.4995);
	SetActorVirtualWorld(actor[36], 57);
	
	actor[37] = CreateActor(291, -1140.7778,-288.3979,1128.3345,86.1637);
	SetActorVirtualWorld(actor[37], 2);
	
	actor[38] = CreateActor(154, 550.1808,1.5589,1092.0544,91.4202);
	SetActorVirtualWorld(actor[38], 102);
	ApplyActorAnimation(actor[38],"MISC","seat_LR",4.1,0,0,0,1,1);
	
	actor[39] = CreateActor(128, 1411.0491,-16.4468,1010.3695,88.9461);
	SetActorVirtualWorld(actor[39], 61);
	
	actor[40] = CreateActor(119, 123.2809,123.0132,1003.0521,267.6130);
	SetActorVirtualWorld(actor[40], 6);
	
	actor[41] = CreateActor(119, 3571.7920,-692.1529,20.2399,178.1345);
	SetActorVirtualWorld(actor[41], 0);
	ApplyActorAnimation(actor[41],"DEALER","Dealer_idle",4.1,0,0,0,1,1);
	
	actor[42] = CreateActor(21, -2114.6072,-2419.0989,30.6250,231.9815);
	SetActorVirtualWorld(actor[42], 0);
	
	/*actor[43] = CreateActor(77, 1509.8147,-1661.6212,13.3226,176.6326); // npc хеллуин
	SetActorVirtualWorld(actor[43], 0);
	
	actor[44] = CreateActor(162, 1053.6957,-303.5652,73.9922,269.1136); // старый друг
	SetActorVirtualWorld(actor[44], 0);
	
	actor[45] = CreateActor(159, 1115.7891,-976.4371,42.7656,357.0206);
	SetActorVirtualWorld(actor[45], 0);
	
	actor[46] = CreateActor(178, 2413.9656,19.6305,26.9844,179.8361); // колдунья
	SetActorVirtualWorld(actor[46], 0);*/
	
	CreateDynamic3DTextLabel("{FFFFFF}Рыбак\n\n\nНажмите: 'ALT'", 0xFFFFFFFF, 816.1916, -1843.3940, 8.3624 + 0.6, 4.0);
	actor[47] = CreateActor(95, 816.1916,-1843.3940,8.3624,133.5137);
	SetActorVirtualWorld(actor[47], 0);
	
	CreateDynamic3DTextLabel("{FFFFFF}Бармен\n\n\nНажмите: 'ALT'", 0xFFFFFFFF, 775.3139,2518.5359,1502.0100, 4.0);
	actor[48] = CreateActor(249, 775.3139,2518.5359,1502.0100,6.1540);
	SetActorVirtualWorld(actor[48], 0);
	
	CreateDynamic3DTextLabel("{FFFFFF}Грузчик\n\n\nНажмите: 'ALT'", 0xFFFFFFFF, 317.5285,-29.1859,1.5781, 4.0);
	actor[48] = CreateActor(184, 317.5285,-29.1859,1.5781,273.2614);
	SetActorVirtualWorld(actor[48], 0);
	
	CreateDynamic3DTextLabel("{FFFFFF}Грузчик\n\n\nНажмите: 'ALT'", 0xFFFFFFFF,2383.4004,241.5266,26.5141, 4.0);
	actor[48] = CreateActor(184, 2383.4004,241.5266,26.5141,270.8995);
	SetActorVirtualWorld(actor[48], 0);
	
	
	CreateDynamic3DTextLabel("{FFFFFF}Anthony LoPinto\n\n\nНажмите: 'ALT'", 0xFFFFFFFF, 2311.8091,-1984.2976,13.5602, 4.0);
	actor[49] = CreateActor(29, 2311.8091,-1984.2976,13.5602,171.4507);
	SetActorVirtualWorld(actor[49], 0);
	
	Create3DTextLabel("{FFFFFF}Для трудоустройства в транспортную компанию\n\nНажмите: 'ALT'", 0xFFFFFFFF, 1400.5125,-20.4098,1010.3695, 5.0, 61);
	actor[50] = CreateActor(59, 1398.8212,-20.4215,1010.3695,269.7410);
	SetActorVirtualWorld(actor[50], 61);
	
	actor[51] = CreateActor(249, 775.3139,2518.5359,1502.0100,6.1540);
	SetActorVirtualWorld(actor[51], 92);

	Create3DTextLabel("{FFFFFF}Для взаимодействием с хакером\n\nНажмите: 'ALT'", 0xFFFFFFFF, 208.7502,-225.6151,1.7786, 10.0, 0);
	actor[52] = CreateActor(29, 208.7502,-225.6151,1.7786, 180.0);
	SetActorVirtualWorld(actor[52], 0);
//	SetActorInterior(actor[51], 92);

	for(new i;i<MAX_ACTORSS;i++) {
		new Float: x,Float:y,Float:z;
		GetActorPos(actor[i], x, y,z);
		tActor[i] = Create3DTextLabel("",COLOR_GREY, x, y, z+1,10.0, GetActorVirtualWorld(actor[i]));
	}

	gAreas[arJob][0] = CreateDynamicSphere(-131.4120,8.5900,3.1172,1000.0);//[ферма]
	gAreas[arJob][1] = CreateDynamicSphere(2708.9302,-2405.2688,13.5039,70.0);//[оружейный]
	gAreas[arJob][2] = CreateDynamicSphere(-310.8985,-481.1532,1.9255,350.0);//[рыбалка]
	gAreas[arJob][3] = CreateDynamicSphere(-1995.3519,-2446.2380,30.8452,350.0);//[лесопилка]

	CreateDynamicCP(308.1984,-168.6314,999.5938,1.5, -1, -1, -1,10.0);//[АРМИЯ] склад

	CreateDynamicCP(853.3725,-1290.7078,13.8437,5.0, 0, 0, -1,10.0);//[развозчики продуктов] ПРОЧЕЕ
	CreateDynamicCP(-215.4123,-246.7570,2.0283,5.0, 0, 0, -1,10.0);//[развозчики продуктов] АЗС
	
	gAreas[arLoadProds][0] = CreateDynamicSphere(1354.6313,363.6651,19.9837, 2.0); //[Развозчик продуктов] 24-7
	gAreas[arLoadProds][1] = CreateDynamicSphere(-215.4123, -246.7570, 2.0283, 2.0); //[Развозчик продуктов] АЗС

	gAreas[arSad] = CreateDynamicSphere(-112.1444,4.2448,3.1257,2.0);//[Сад] склад

	gAreas[arNews] = CreateDynamicSphere(2823.2854,1067.2120,1052.5973,10.0);//[News] студия

	gAreas[arZavod] = CreateDynamicSphere(971.8011,-466.4688,1471.5895,1.5);//склад
	gAreas[arZavodSklad] = CreateDynamicSphere(308.1984,-168.6314,999.5938,1.3,35);//склад
	
	gAreas[arTurma][0] = CreateDynamicSphere(3636.7520,-760.6277,20.2706,2.0);
	gAreas[arTurma][1] = CreateDynamicSphere(3636.7529,-757.0727,20.2740,2.0);
	gAreas[arTurma][2] = CreateDynamicSphere(3636.7280,-753.7135,20.2773,2.0);
	gAreas[arTurma][3] = CreateDynamicSphere(3636.7529,-750.2494,20.2771,2.0);
	gAreas[arTurma][4] = CreateDynamicSphere(3636.7495,-746.7471,20.2771,2.0);
	gAreas[arTurma][5] = CreateDynamicSphere(3636.7505,-743.3241,20.2771,2.0);
	gAreas[arTurma][6] = CreateDynamicSphere(3636.7307,-739.7699,20.2771,2.0);
	
	gAreas[arSkladTurm] = CreateDynamicSphere(3627.6726,-733.5646,20.2793,2.0);
	return 1;
}
stock CreatePickups() {

	CreateDynamicPickup(3632,23,-2193.8083,-205.0704,35.2970,0,0);//[нефть] пикап бочки
	CreateDynamicPickup(3632,23,-2193.4939,-234.2975,35.2970,0,0);//[нефть] пикап бочки
	CreateDynamicPickup(19131,23,2357.3328,-2023.5265,13.8836); // черный рынок пикап
	
	CreateDynamicPickup(19134,23,2292.8179,-1786.3413,13.5469); // пикап заезда в гараж квартир
	CreateDynamicPickup(19134,23,855.7083,-1662.6046,13.5547); // пикап заезда в гараж квартир
	CreateDynamicPickup(19135,23,2488.0916,-1463.9087,24.0205); // пикап сдачи автомобилей
	
	CreateDynamicPickup(19135,23,2800.3972,-2481.9619,13.6349); // ЧС армии LS
	
	CreateDynamicPickup(1239,23,1782.5869,-1885.4102,13.3912); // скутер spawn ls
	CreateDynamicPickup(1239,23,728.2281,-1411.7220,13.5299); // скутер автошкола
	CreateDynamicPickup(1239,23,-122.9779,-18.7226,3.1172); // скутер яблочный сад
	CreateDynamicPickup(1239,23,1189.7053,-1342.7035,13.5648); // скутер больница
	CreateDynamicPickup(1239,23,1667.5844,355.9797,30.2493); // скутер стройка
	
	CreateDynamicPickup(19135,23,2716.4363,-2395.2075,13.6390); // Выход из будки
	CreateDynamicPickup(19135,23,2716.3943,-2395.9451,13.6328); // Вход в будку
	
	CreateDynamicPickup(1318,23,-677.4073,1727.0359,1376.6718); // выход с трейлера
	CreateDynamic3DTextLabel(""W"Для выхода используйте"G" 'ALT'",-1,-677.4073,1727.0359,1376.6718,4.0);

	CreateDynamic3DTextLabel("Для входа нажмите ALT",0xFFFFFFFF,2716.3943,-2395.9451,13.6328,1.5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1); // многоквартирка
	CreateDynamic3DTextLabel("Для выхода нажмите ALT",0xFFFFFFFF,2716.4363,-2395.2075,13.6390,1.5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1); // многоквартирка

	for(new i = 0; i < sizeof(gTeleportsToD); i++) {
		new string[72];
		strcat(string, gTeleportsToD[i][tpName]), strcat(string,"\n\n"G"Вcтаньте на пикап, чтобы войти/выйти");
		if(!GetString(gTeleportsToD[i][tpName],"None")) CreateDynamic3DTextLabel(string, PP, gTeleportsToD[i][tpEnterPos_X], gTeleportsToD[i][tpEnterPos_Y], gTeleportsToD[i][tpEnterPos_Z]+0.2, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, gTeleportsToD[i][tpEnterWorld], gTeleportsToD[i][tpEnterInt]);
		TeleportPickup[i] = CreateDynamicSphere(gTeleportsToD[i][tpEnterPos_X], gTeleportsToD[i][tpEnterPos_Y], gTeleportsToD[i][tpEnterPos_Z],1.0,gTeleportsToD[i][tpEnterWorld],gTeleportsToD[i][tpEnterInt]);
		CreateDynamicPickup(1318, 1, gTeleportsToD[i][tpEnterPos_X], gTeleportsToD[i][tpEnterPos_Y], gTeleportsToD[i][tpEnterPos_Z], gTeleportsToD[i][tpEnterWorld],gTeleportsToD[i][tpEnterInt]);
	}
	for(new pick = 0; pick < PICKUPS_COUNT; pick++) { 
		CreateDynamicPickup(gPickupData[pick][2],23,gPickup[pick][0], gPickup[pick][1],gPickup[pick][2], gPickupData[pick][1],gPickupData[pick][0]);
		gPickID[pick] = CreateDynamicSphere(gPickup[pick][0], gPickup[pick][1],gPickup[pick][2],1.0,gPickupData[pick][1],gPickupData[pick][0]);
		if(!GetString(gPickupDataName[pick][picName],"None")) CreateDynamic3DTextLabel(gPickupDataName[pick][picName], 0xFFFFFFFF ,gPickup[pick][0], gPickup[pick][1],gPickup[pick][2]+0.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, gPickupData[pick][1],gPickupData[pick][0]);
	}
	for(new i; i < sizeof(pickup_game_dm); i ++) {
		if(i < 7) pickups_game_dm[i] = CreateDynamicPickup(1580, 2, pickup_game_dm[i][0],pickup_game_dm[i][1],pickup_game_dm[i][2],201);
		else pickups_game_dm[i] = CreateDynamicPickup(19131, 2, pickup_game_dm[i][0],pickup_game_dm[i][1],pickup_game_dm[i][2],201);
	}
	for(new i; i < sizeof(gun_checkpoints); i ++) gun_pickup[i] = CreateDynamicCP(gun_checkpoints[i][0],gun_checkpoints[i][1],gun_checkpoints[i][2]-0.6,0.7, 1, 2, -1,3.0);
	for(new i; i < sizeof(sad_objects); i ++) {
		SI[i][sad_object][0] = CreateDynamicObject(765,sad_objects[i][0],sad_objects[i][1],sad_objects[i][2],sad_objects[i][3],sad_objects[i][4],sad_objects[i][5],-1,-1,-1,90.000);
		SI[i][sad_3dtext] = CreateDynamic3DTextLabel("Дерево\nСтадия - сохнет\nФермер - Отсутствует",0xFFFFFFFF,sad_objects[i][0],sad_objects[i][1],sad_objects[i][2]+4,10.0);
		sad_area[i] = CreateDynamicSphere(sad_objects[i][0],sad_objects[i][1],sad_objects[i][2]+2.5,2.0,0,0);
	}
	for(new i; i != MAX_WOODS; i++) {
		WD::[i][woodZone] = CreateDynamicSphere(Woods[i][0],Woods[i][1],Woods[i][2],2.5);
		WD::[i][woodObject] = CreateDynamicObject(782,Woods[i][0],Woods[i][1],Woods[i][2],Woods[i][3],Woods[i][4],Woods[i][5]);
		WD::[i][woodUse] = false;
	}
	RingInfo[0][rgPlayer][0] = -1;
	RingInfo[0][rgPlayer][1] = -1;
	//==========================================================================

	CreateDynamicMapIcon(1555.1647,-1675.6324,16.1953,30,0); // LSPD
	CreateDynamicMapIcon(-1972.5879,-1020.2689,32.1719,16,0); // FBI
	CreateDynamicMapIcon(1481.0220,-1772.2487,18.7958,19,0); // Mayor
	CreateDynamicMapIcon(2645.5837,-2017.1844,13.5531,59,0); // Ballas//
	CreateDynamicMapIcon(2756.3184,-1182.7939,69.4034,60,0); // Vagos//
	CreateDynamicMapIcon(2495.4343,-1691.0961,14.7656,62,0); // Grove//
	CreateDynamicMapIcon(2179.1990,-1802.4385,13.3681,61,0); // Rifa//
	CreateDynamicMapIcon(1673.6831,-2122.4465,14.1460,58,0); // Aztec
	CreateDynamicMapIcon(1261.1034,-871.6332,42.9528,44,0); // LCN 
	CreateDynamicMapIcon(1389.3481,389.6248,19.6550,43,0); // RM
	CreateDynamicMapIcon(704.2004,-1262.1731,13.6429,43,0); // YAKUZA
	CreateDynamicMapIcon(737.9393,-1440.9332,20.9123,36,0); // АШ
	CreateDynamicMapIcon(1569.6614,-1334.6711,16.4844,56,0);//LSn
	CreateDynamicMapIcon(-2521.1753,-624.5951,132.7827,56,0);//SFn
	
	CreateDynamicMapIcon(325.8424,-1967.8805,2.1310,9,0);// arenda boat

	CreateDynamicMapIcon(1310.1367,-1366.8054,13.5068,52,0); // bank ls
	CreateDynamicMapIcon(1211.6141,-1750.2025,13.5941,33,0);// центр развлечений

	CreateDynamicMapIcon(2057.5798,-1897.5746,13.5538,18,0); // дуэли
	CreateDynamicMapIcon(1287.5477,-1156.0406,23.8281,25,0); // casino
	CreateDynamicMapIcon(2168.1326, -1673.3715, 15.0826, 23, 0) ;	// притон
	return 1;
}
stock Create3dText() {
	new string[128];
	
	army_text = CreateDynamic3DTextLabel("Для объявления чрезвычайной ситуации, введите:\n"P"/fhelp",-1,2800.3972,-2481.9619,13.6349,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	format(string,sizeof(string),"Рыбы на складе: "O"%.1f кг\n\n"W"Стоимость 1кг рыбы - "ORANGE"$150", fish_sklad);
	fish_text = CreateDynamic3DTextLabel(string,-1,817.3759,-1847.1996,8.3775, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	format(string,sizeof(string),"Боеприпасов на складе: "ORANGE"%d",zavodsklad);
	gun_3dtext[0] = CreateDynamic3DTextLabel(string,-1,971.8011,-466.4688,1471.5895,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	format(string,sizeof(string),"Боеприпасов доступно: "ORANGE"%d",zavodsklad);
	gun_3dtext[1] = CreateDynamic3DTextLabel(string,-1,-22.8073,-273.1954,5.4297,35.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	format(string,sizeof(string),"Боеприпасов на складе: "ORANGE"%d",zavodsklad);
	gun_3dtext[2] = CreateDynamic3DTextLabel(string,-1,308.1984,-168.6314,999.5938,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, 35);

	format(string,sizeof(string),"Древесины на складе: "ORANGE"%d кг",woodsklad);
	wood_3dtext = CreateDynamic3DTextLabel(string,-1,1073.9360,-288.9533,73.9922,15.0);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fARMYLS][fMats]);
	sklad_armysf[0] = CreateDynamic3DTextLabel(string,-1,308.1984,-168.6314,999.5938,20.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, 31);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fARMYLS][fMats]);
	sklad_armysf[1] = CreateDynamic3DTextLabel(string,-1,2752.4421,-2471.4094,13.6484,20.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, 0);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fLSPD][fMats]);
	sklad_cops[0] = CreateDynamic3DTextLabel(string,-1,1575.0371,-1637.2079,-7.8730,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1);
	//склад байкеров
	//format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fBikers][fMats]);
//	sklad_cops[1] = CreateDynamic3DTextLabel(string,-1,1374.6270,1056.6377,1626.4896,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 41);
	
	//format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fLVPD][fMats]);
//	sklad_cops[2] = CreateDynamic3DTextLabel(string,-1,1374.6270,1056.6377,1626.4896,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 42);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fFBI][fMats]);
	sklad_cops[3] = CreateDynamic3DTextLabel(string,-1,18.8650,1407.6656,1069.3866,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 43);

	CreateDynamic3DTextLabel("Для взаимодействия с вышкой используйте команду:\n"P"/hacker",0xFFFFFFFF,1643.3060,-1681.9083,21.4215,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Для взаимодействия с вышкой используйте команду:\n"P"/hacker",0xFFFFFFFF,1462.8285,-775.3546,92.8073,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Вход:\n"P" ALT",0xFFFFFFFF,1359.5322-0.3,1065.0143,1626.4896+0.5,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Выход:\n"P" ALT",0xFFFFFFFF,1356.3823-0.3,1068.3185,1626.4896+0.5,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Продажа техники\n1ед = "ORANGE"$250\n\n"P" Сигнал (H)",0xFFFFFFFF,2357.3328,-2023.5265,13.8836,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	
	CreateDynamic3DTextLabel(""P"Склад автомобилей\n"W"Нажмите сигнал 'H'",0xFFFFFFFF,2488.0916,-1463.9087,24.0205,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("[{F1C72D} Jack Waze{FFFFFF} ]\nДля взаимодействия нажмите{F1C72D} ALT",-1,2493.9104,-1464.7085,24.0253,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	
	CreateDynamic3DTextLabel("{ECC987}Carl Johnson"W"\n\nВзаимодействие 'ALT'",-1,1768.1006,-1935.9192,13.5691,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	//CreateDynamic3DTextLabel("{ECC987}Lucas Evans"W"\n\nВзаимодействие 'ALT'",-1,1630.7994,-2285.9072,-1.1666,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	Create3DTextLabel("{ECC987}Lucas Evans"W"\n\nВзаимодействие 'ALT'", 0x008080FF, 1763.3773,-1906.7416,13.5880,4.0, 0, 0);
	CreateDynamic3DTextLabel("{ECC987}Karen Wood"W"\n\nВзаимодействие 'ALT'",-1,2451.3081,-1901.9733,13.5469,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel(""P"Аренда мопедов\n\n"W"Для аренды мопеда нажмите"YELLOW" 'ALT'",-1,1782.5869,-1885.4102,13.3912,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel(""P"Аренда мопедов\n\n"W"Для аренды мопеда нажмите"YELLOW" 'ALT'",-1,728.2281,-1411.7220,13.5299,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1); 
	CreateDynamic3DTextLabel(""P"Аренда мопедов\n\n"W"Для аренды мопеда нажмите"YELLOW" 'ALT'",-1,-122.9779,-18.7226,3.1172,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1); 
	CreateDynamic3DTextLabel(""P"Аренда мопедов\n\n"W"Для аренды мопеда нажмите"YELLOW" 'ALT'",-1,1189.7053,-1342.7035,13.5648,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel(""P"Аренда мопедов\n\n"W"Для аренды мопеда нажмите"YELLOW" 'ALT'",-1,1667.5844,355.9797,30.2493,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel(""G"Взлом сейфа{ECC987} 'ALT'",-1,-1150.9003,31.2155,1169.5709,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel(""G"Взлом сейфа{ECC987} 'ALT'",-1,-1150.8993,33.5067,1169.5709,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel(""G"Взлом сейфа{ECC987} 'ALT'",-1,-1150.8988,35.7689,1169.5709,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("{ECC987}Charles Neal"W"\n\nДля аренды лодки нажмите 'ALT'",-1,539.3405,-4785.8008,2.0859,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	
	CreateDynamic3DTextLabel("{ECC987}Waka Encore"W"\n\nВзаимодействие 'ALT'",-1,2360.9939,-2007.8639,13.5537,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("{ECC987}Дуэли [OG]"W"\nВзаимодействие"W" 'ALT'",-1,2057.5798,-1897.5746,13.5538,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel(""P"Гараж\n\n"G"Нажмите 'H' для въезда в гараж",0xFFFFFFFF,2292.8179,-1786.3413,13.5469,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1); // многоквартирка
	CreateDynamic3DTextLabel(""P"Гараж\n\n"G"Нажмите 'H' для въезда в гараж",0xFFFFFFFF,855.7083,-1662.6046,13.5547,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1); // многоквартирка
	
	CreateDynamic3DTextLabel("База данных:"P" /scan",0xFFFFFFFF,1494.6227,281.6257,1020.4926,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, -1, -1);
	CreateDynamic3DTextLabel("База данных:"P" /scan",0xFFFFFFFF,1490.9877,278.8188,1020.4926,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Место загрузки\n Посигнальте (H) чтобы загрузиться", CGOLD,-14.6123,-272.2174,5.429, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1); //оружейный завод LOAD

	CreateDynamic3DTextLabel("Место разгрузки\n Посигнальте (H) чтобы загрузиться", CGOLD,2573.2446,-2220.9661,13.5469, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1); //оружейный завод LOAD

	// tk
	CreateDynamic3DTextLabel("Покупка прицепов\n Посигнальте (H) чтобы купить прицеп", CGOLD,2209.9639,-2204.5803,13.5469, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1); // склад в ЛС ТК
	CreateDynamic3DTextLabel("Место разгрузки\n Посигнальте (H) чтобы разгрузится", CGOLD,1078.4210,-352.8502,74.5498, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1); // разгрузка лесопилка
	CreateDynamic3DTextLabel("Место разгрузки\n Посигнальте (H) чтобы разгрузится", CGOLD,-50.1009,22.8516,3.1172, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1); // разгрузка ферма
	CreateDynamic3DTextLabel("Место разгрузки\n Посигнальте (H) чтобы разгрузится", CGOLD,1708.5884,407.1685,30.6304, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1); // разгрузка стройка
	CreateDynamic3DTextLabel("Место разгрузки\n Посигнальте (H) чтобы разгрузится", CGOLD,-56.5448,-224.0444,5.4297, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1); // разгрузка оружейный завод
	CreateDynamic3DTextLabel("Место разгрузки\n Посигнальте (H) чтобы разгрузится", CGOLD,1219.8451,189.5213,19.8915, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1); // деревня Mantgomery

	CreateDynamic3DTextLabel("Место разгрузки\n Посигнальте (H) чтобы разгрузится", CGOLD,2249.0378,-81.1264,26.5151, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1); // деревня Polomino Creek


	for(new i; i < sizeof(med_heal); i ++) CreateDynamic3DTextLabel("Лечь:"P" ENTER",0xFFFFFFFF,med_heal[i][0],med_heal[i][1],med_heal[i][2],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	for(new i; i < sizeof(news_edit); i ++) CreateDynamic3DTextLabel("Объявления:"P" /edit",0xFFFFFFFF,news_edit[i][0],news_edit[i][1],news_edit[i][2],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	for(new i; i < sizeof(comp_club); i ++) CreateDynamic3DTextLabel("Начать играть:"P" ALT",0xFFFFFFFF,comp_club[i][0],comp_club[i][1],comp_club[i][2]+0.9,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	for(new i; i < sizeof(auto_exam); i ++) CreateDynamic3DTextLabel("Экзамен:"P" ALT",0xFFFFFFFF,auto_exam[i][0],auto_exam[i][1],auto_exam[i][2]+0.3,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Место для разгрузки боеприпасов",CGOLD,310.7923,1801.0048,17.6406, 25.0);

	CreateDynamic3DTextLabel("Сделать предложение: "W"/propose\n"ORANGE"Расторжение брака: "W"/divorce",CGOLD,2233.2588,-1333.1310,23.9815, 25.0);

	CreateDynamic3DTextLabel("Выезд из гаража: "GREEN"H",-1, 1050.0936,-1868.7532,894.0478,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Выезд из гаража: "GREEN"H",-1, 1123.6130,-1849.0645,894.0478,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Выезд из гаража: "GREEN"H",-1, 1053.8595,-1785.5875,894.0478,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Выезд из гаража: "GREEN"H",-1, 1108.8413,-1783.3357,894.0478,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Выезд из гаража: "GREEN"H",-1, 1646.7213,738.0809,590.4441,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Для въезда в тюнинг центр: "GREEN"H", -1, 882.2743,-1340.8132,13.6652, 20.0);

	CreateDynamic3DTextLabel("Для выезда: "GREEN"H",-1,-2463.8516,2513.8286,1014.7252,10.0);
	CreateDynamic3DTextLabel("Для выезда: "GREEN"H",-1,-2471.8428,2513.8328,1014.7252,10.0);
	
	CreateDynamic3DTextLabel("Покраска: "GREEN"H",-1,-2471.7139,2505.1924,1014.7252,20.0);
	CreateDynamic3DTextLabel("Тюнинг: "GREEN"H",-1,-2463.8042,2505.5767,1014.7252,20.0);

	CreateDynamic3DTextLabel("Для выхода нажмите:\n"GREEN"ENTER",-1, 1400.8309,-1205.0583,130.2086+1.0,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	
	CreateDynamic3DTextLabel("Кости 1x1:\n"GREEN"/dice",-1, 295.3712,-112.4607,1036.669+0.1,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Кости 1x1:\n"GREEN"/dice",-1, 300.7174,-112.3977,1036.6692+0.1,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	new moved = 0;
	for(moved = 0; moved < MAX_OBJECT_MOVED; moved++)
	{
		moved_info[moved][moved_id] = CreateDynamicObject(moved_info[moved][moved_modelid],moved_info[moved][movedPosX],moved_info[moved][movedPosY],moved_info[moved][movedPosZ],moved_info[moved][movedPosRotationX],moved_info[moved][movedPosRotationY],moved_info[moved][movedPosRotationZ],moved_info[moved][moved_vw]);
		switch(moved) {
		case 0,1,2,3,5,16,11,8:  CreateDynamic3DTextLabel(""W"Взаимодействие: "G"'H'", -1, moved_info[moved][movedPosX],moved_info[moved][movedPosY],moved_info[moved][movedPosZ]+0.8, 8.0);
		case 4,7,9,13,14,15,19,20,21,22,23,18,24,25:  CreateDynamic3DTextLabel(""W"Взаимодействие: "G"'ALT'", -1, moved_info[moved][movedPosX],moved_info[moved][movedPosY],moved_info[moved][movedPosZ]+1.5, 8.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
		case 6,10,12,17:  CreateDynamic3DTextLabel(""G"'H'"W" если в машине\n"G"'ALT'"W" если пешком", -1, moved_info[moved][movedPosX],moved_info[moved][movedPosY],moved_info[moved][movedPosZ]+0.8, 8.0);
		}
	}
	SetDynamicObjectMaterial(moved_info[9][moved_id], 0, 18646, "matcolours", "grey-93-percent", 0x00000000);
	SetDynamicObjectMaterial(moved_info[9][moved_id], 2, 18646, "matcolours", "grey-40-percent", 0x00000000);

	SetDynamicObjectMaterial(moved_info[12][moved_id], 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	SetDynamicObjectMaterial(moved_info[12][moved_id], 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);

	SetDynamicObjectMaterial(moved_info[10][moved_id], 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	SetDynamicObjectMaterial(moved_info[10][moved_id], 1, 3820, "boxhses_sfsx", "ws_ irongate", 0x00000000);
	SetDynamicObjectMaterial(moved_info[10][moved_id], 2, 14415, "carter_block_2", "ws_doormat", 0x00000000);

	SetDynamicObjectMaterial(moved_info[7][moved_id], 0, 16093, "a51_ext", "des_backdoor1", 0xFFFFFFFF);

	SetDynamicObjectMaterial(moved_info[19][moved_id], 0, 18029, "genintintsmallrest", "GB_restaursmll12", 0x00000000);
	SetDynamicObjectMaterial(moved_info[20][moved_id], 0, 18029, "genintintsmallrest", "GB_restaursmll12", 0x00000000);

	SetDynamicObjectMaterial(moved_info[21][moved_id], 0, 18029, "genintintsmallrest", "GB_restaursmll12", 0x00000000);
	SetDynamicObjectMaterial(moved_info[22][moved_id], 0, 18029, "genintintsmallrest", "GB_restaursmll12", 0x00000000);
	SetDynamicObjectMaterial(moved_info[23][moved_id], 0, 18029, "genintintsmallrest", "GB_restaursmll12", 0x00000000);
	SetDynamicObjectMaterial(moved_info[18][moved_id], 0, 18029, "genintintsmallrest", "GB_restaursmll12", 0x00000000);

	SetDynamicObjectMaterial(moved_info[13][moved_id], 0, 18646, "matcolours", "grey-93-percent", 0x00000000);
	SetDynamicObjectMaterial(moved_info[13][moved_id], 2, 18646, "matcolours", "grey-30-percent", 0x00000000);

	SetDynamicObjectMaterial(moved_info[14][moved_id], 0, 18646, "matcolours", "grey-93-percent", 0x00000000);
	SetDynamicObjectMaterial(moved_info[14][moved_id], 2, 18646, "matcolours", "grey-30-percent", 0x00000000);

	SetDynamicObjectMaterial(moved_info[15][moved_id], 0, 18646, "matcolours", "grey-93-percent", 0x00000000);
	SetDynamicObjectMaterial(moved_info[15][moved_id], 2, 18646, "matcolours", "grey-30-percent", 0x00000000);

	SetDynamicObjectMaterial(moved_info[24][moved_id], 0, 18646, "matcolours", "grey-50-percent", 0x00000000);
	SetDynamicObjectMaterial(moved_info[24][moved_id], 1, 18646, "matcolours", "grey-93-percent", 0x00000000);
	SetDynamicObjectMaterial(moved_info[24][moved_id], 2, 18646, "matcolours", "grey-93-percent", 0x00000000);

	SetDynamicObjectMaterial(moved_info[25][moved_id], 0, 16093, "a51_ext", "des_backdoor1", 0xFFFFFFFF);

	SetDynamicObjectMaterial(moved_info[26][moved_id], 0, 3042, "ct_ventx", "liftdoorsac128", 0xFFFFFFFF);

	//
	SetDynamicObjectMaterial(moved_info[29][moved_id], 0, 10755, "airportrminl_sfse", "ws_airportconc1", 0x00000000);
	SetDynamicObjectMaterial(moved_info[29][moved_id], 2, 5718, "hobos_lawn", "Smear_CemLAwN", 0x00000000);

	SetDynamicObjectMaterial(moved_info[30][moved_id], 0, 10755, "airportrminl_sfse", "ws_airportconc1", 0x00000000);
	SetDynamicObjectMaterial(moved_info[30][moved_id], 2, 5718, "hobos_lawn", "Smear_CemLAwN", 0x00000000);

	SetDynamicObjectMaterial(moved_info[31][moved_id], 0, 10755, "airportrminl_sfse", "ws_airportconc1", 0x00000000);
	SetDynamicObjectMaterial(moved_info[31][moved_id], 2, 5718, "hobos_lawn", "Smear_CemLAwN", 0x00000000);

	SetDynamicObjectMaterial(moved_info[32][moved_id], 0, 10755, "airportrminl_sfse", "ws_airportconc1", 0x00000000);
	SetDynamicObjectMaterial(moved_info[32][moved_id], 2, 5718, "hobos_lawn", "Smear_CemLAwN", 0x00000000);

	SetDynamicObjectMaterial(moved_info[33][moved_id], 0, 10755, "airportrminl_sfse", "ws_airportconc1", 0x00000000);
	SetDynamicObjectMaterial(moved_info[33][moved_id], 1, 2669, "cj_chris", "cj_metalplate2", 0x00000000);
	SetDynamicObjectMaterial(moved_info[33][moved_id], 2, 5718, "hobos_lawn", "Smear_CemLAwN", 0x00000000);

	SetDynamicObjectMaterial(moved_info[34][moved_id], 0, 10755, "airportrminl_sfse", "ws_airportconc1", 0x00000000);
	SetDynamicObjectMaterial(moved_info[34][moved_id], 2, 5718, "hobos_lawn", "Smear_CemLAwN", 0x00000000);
	
	gMenu[0] = CreateDynamic3DTextLabel("-", 0x339966AA, -25.5349,-72.6542,1026.4205, 6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 1);//Ballas
	gMenu[1] = CreateDynamic3DTextLabel("-", 0x339966AA, -25.5349,-72.6542,1026.4205, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 2);//Vagos
	gMenu[2] = CreateDynamic3DTextLabel("-", 0x339966AA, -25.5349,-72.6542,1026.4205, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 3);//Grove
	gMenu[3] = CreateDynamic3DTextLabel("-", 0x339966AA, -25.5349,-72.6542,1026.4205, 6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 4);//Aztec
	gMenu[4] = CreateDynamic3DTextLabel("-", 0x339966AA, -25.5349,-72.6542,1026.4205, 6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 5);//Rifa
	
	gHealth[0] = CreateDynamic3DTextLabel("-", 0x339966AA, -58.0297,1366.1035,1080.2109+0.5, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 52);//Ballas
	gHealth[1] = CreateDynamic3DTextLabel("-", 0x339966AA, 301.4053,301.0569,1003.5391+0.5, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 53);//Vagos
	gHealth[2] = CreateDynamic3DTextLabel("-", 0x339966AA, 2499.2332,-1710.5901,1014.7422+0.5, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 54);//Grove
	gHealth[3] = CreateDynamic3DTextLabel("-", 0x339966AA, -46.1472,1401.3104,1084.4370+0.5, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 55);//Aztec
	gHealth[4] = CreateDynamic3DTextLabel("-", 0x339966AA, 2449.5359,-1685.9984,1013.5078+0.5, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 56);//Rifa

	mMenu[0] = CreateDynamic3DTextLabel("-",0x339966AA, 1390.3114,-24.3432,1005.0829,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 49, -1);
	mMenu[1] = CreateDynamic3DTextLabel("-",0x339966AA, 33.3096,-32.5851,2001.0516,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 50, -1);
	mMenu[2] = CreateDynamic3DTextLabel("-",0x339966AA, 1390.4547,-7.2559,1000.9417,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 51, -1);

	CreateDynamic3DTextLabel(""W"Нажмите "O"'ALT'",-1,2303.5725,-1984.2985,13.5764,7.0);
	CreateDynamic3DTextLabel(""W"Нажмите "O"'ALT'",-1,2304.7039,-1997.4758,13.5545,7.0);
	CreateDynamic3DTextLabel(""W"Нажмите "O"'ALT'",-1,2303.5745,-1988.9795,13.5729,7.0);
	CreateDynamic3DTextLabel(""W"Нажмите "O"'ALT'",-1,2303.6292,-1993.4894,13.5696,7.0);

	CreateDynamic3DTextLabel(""G"Покупка боеприпасов\n "O"'ALT'",-1,1050.3049,2313.1973,10.6818,10.0);
	CreateDynamic3DTextLabel(""G"Покупка наркотиков\n "O"'ALT'",-1,329.2349,1118.6484,1083.8903,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);

	CreateDynamic3DTextLabel(""W"Склад наркопритона\n"W"Нажмите сигнал "O"'H'"W" для взаимодействия",-1,2179.1509,-1661.0247,14.9291,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);

	black_market = CreateDynamic3DTextLabel("-", 0x339966AA,2313.1169,-1996.9884,13.5528, 10.0);
	return 1;
}
stock CreateTexdraw() {
	td_game[0] = TextDrawCreate(629.555114, 288.220062, "usebox");
	TextDrawLetterSize(td_game[0], 0.000000, 3.759377);
	TextDrawTextSize(td_game[0], 518.444030, 0.000000);
	TextDrawAlignment(td_game[0], 1);
	TextDrawColor(td_game[0], 0);
	TextDrawUseBox(td_game[0], true);
	TextDrawBoxColor(td_game[0], -112);
	TextDrawSetShadow(td_game[0], 0);
	TextDrawSetOutline(td_game[0], 0);
	TextDrawFont(td_game[0], 0);

	td_game[1] = TextDrawCreate(628.221618, 289.713439, "usebox");
	TextDrawLetterSize(td_game[1], 0.000000, 3.403820);
	TextDrawTextSize(td_game[1], 519.777282, 0.000000);
	TextDrawAlignment(td_game[1], 1);
	TextDrawColor(td_game[1], 0);
	TextDrawUseBox(td_game[1], true);
	TextDrawBoxColor(td_game[1], -668447489);
	TextDrawSetShadow(td_game[1], 0);
	TextDrawSetOutline(td_game[1], -156);
	TextDrawFont(td_game[1], 0);

	td_game[2] = TextDrawCreate(525.778076, 291.697692, "time:");
	TextDrawLetterSize(td_game[2], 0.280221, 1.326221);
	TextDrawAlignment(td_game[2], 1);
	TextDrawColor(td_game[2], -1);
	TextDrawSetShadow(td_game[2], 1);
	TextDrawSetOutline(td_game[2], 0);
	TextDrawBackgroundColor(td_game[2], 255);
	TextDrawFont(td_game[2], 2);
	TextDrawSetProportional(td_game[2], 1);

	td_game[3] = TextDrawCreate(526.666931, 304.639923, "bank:");
	TextDrawLetterSize(td_game[3], 0.280221, 1.326221);
	TextDrawAlignment(td_game[3], 1);
	TextDrawColor(td_game[3], -1);
	TextDrawSetShadow(td_game[3], 1);
	TextDrawSetOutline(td_game[3], 0);
	TextDrawBackgroundColor(td_game[3], 255);
	TextDrawFont(td_game[3], 2);
	TextDrawSetProportional(td_game[3], 1);

	td_game[4] = TextDrawCreate(567.555969, 292.195465, "10:00");
	TextDrawLetterSize(td_game[4], 0.280221, 1.326221);
	TextDrawAlignment(td_game[4], 1);
	TextDrawColor(td_game[4], -1);
	TextDrawSetShadow(td_game[4], 1);
	TextDrawSetOutline(td_game[4], 0);
	TextDrawBackgroundColor(td_game[4], 255);
	TextDrawFont(td_game[4], 2);
	TextDrawSetProportional(td_game[4], 1);

	td_game[5] = TextDrawCreate(567.111572, 305.137664, "250000$");
	TextDrawLetterSize(td_game[5], 0.280221, 1.326221);
	TextDrawAlignment(td_game[5], 1);
	TextDrawColor(td_game[5], -1);
	TextDrawSetShadow(td_game[5], 1);
	TextDrawSetOutline(td_game[5], 0);
	TextDrawBackgroundColor(td_game[5], 255);
	TextDrawFont(td_game[5], 2);
	TextDrawSetProportional(td_game[5], 1);

	// autosalon выбор авто
	autoshop_TD[0] = TextDrawCreate(542.3333, 356.6000, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[0], 66.0000, 66.0000);
	TextDrawAlignment(autoshop_TD[0], 1);
	TextDrawColor(autoshop_TD[0], 235802367);
	TextDrawBackgroundColor(autoshop_TD[0], 255);
	TextDrawFont(autoshop_TD[0], 4);
	TextDrawSetProportional(autoshop_TD[0], 0);
	TextDrawSetShadow(autoshop_TD[0], 0);

	autoshop_TD[1] = TextDrawCreate(545.0000, 377.3406, "LD_SPAC:white"); // white
	TextDrawTextSize(autoshop_TD[1], 13.1400, 17.0000);
	TextDrawAlignment(autoshop_TD[1], 1);
	TextDrawColor(autoshop_TD[1], 437918463);
	TextDrawBackgroundColor(autoshop_TD[1], 255);
	TextDrawFont(autoshop_TD[1], 4);
	TextDrawSetProportional(autoshop_TD[1], 0);
	TextDrawSetShadow(autoshop_TD[1], 0);
	TextDrawSetSelectable(autoshop_TD[1], true);

	autoshop_TD[2] = TextDrawCreate(545.0000, 396.4223, "LD_SPAC:white"); // black
	TextDrawTextSize(autoshop_TD[2], 13.1400, 17.0000);
	TextDrawAlignment(autoshop_TD[2], 1);
	TextDrawColor(autoshop_TD[2], 437918463);
	TextDrawBackgroundColor(autoshop_TD[2], 255);
	TextDrawFont(autoshop_TD[2], 4);
	TextDrawSetProportional(autoshop_TD[2], 0);
	TextDrawSetShadow(autoshop_TD[2], 0);
	TextDrawSetSelectable(autoshop_TD[2], true);

	autoshop_TD[3] = TextDrawCreate(560.3333, 377.3406, "LD_SPAC:white"); // gray
	TextDrawTextSize(autoshop_TD[3], 13.1400, 17.0000);
	TextDrawAlignment(autoshop_TD[3], 1);
	TextDrawColor(autoshop_TD[3], 437918463);
	TextDrawBackgroundColor(autoshop_TD[3], 255);
	TextDrawFont(autoshop_TD[3], 4);
	TextDrawSetProportional(autoshop_TD[3], 0);
	TextDrawSetShadow(autoshop_TD[3], 0);
	TextDrawSetSelectable(autoshop_TD[3], true);

	autoshop_TD[4] = TextDrawCreate(560.3333, 396.4223, "LD_SPAC:white"); // red
	TextDrawTextSize(autoshop_TD[4], 13.1400, 17.0000);
	TextDrawAlignment(autoshop_TD[4], 1);
	TextDrawColor(autoshop_TD[4], 437918463);
	TextDrawBackgroundColor(autoshop_TD[4], 255);
	TextDrawFont(autoshop_TD[4], 4);
	TextDrawSetProportional(autoshop_TD[4], 0);
	TextDrawSetShadow(autoshop_TD[4], 0);
	TextDrawSetSelectable(autoshop_TD[4], true);

	autoshop_TD[5] = TextDrawCreate(575.6666, 377.3406, "LD_SPAC:white"); // orange
	TextDrawTextSize(autoshop_TD[5], 13.1400, 17.0000);
	TextDrawAlignment(autoshop_TD[5], 1);
	TextDrawColor(autoshop_TD[5], 437918463);
	TextDrawBackgroundColor(autoshop_TD[5], 255);
	TextDrawFont(autoshop_TD[5], 4);
	TextDrawSetProportional(autoshop_TD[5], 0);
	TextDrawSetShadow(autoshop_TD[5], 0);
	TextDrawSetSelectable(autoshop_TD[5], true);

	autoshop_TD[6] = TextDrawCreate(575.6666, 396.4223, "LD_SPAC:white"); // yellow
	TextDrawTextSize(autoshop_TD[6], 13.1400, 17.0000);
	TextDrawAlignment(autoshop_TD[6], 1);
	TextDrawColor(autoshop_TD[6], 437918463);
	TextDrawBackgroundColor(autoshop_TD[6], 255);
	TextDrawFont(autoshop_TD[6], 4);
	TextDrawSetProportional(autoshop_TD[6], 0);
	TextDrawSetShadow(autoshop_TD[6], 0);
	TextDrawSetSelectable(autoshop_TD[6], true);

	autoshop_TD[7] = TextDrawCreate(591.0000, 377.3406, "LD_SPAC:white"); // blue
	TextDrawTextSize(autoshop_TD[7], 13.1400, 17.0000);
	TextDrawAlignment(autoshop_TD[7], 1);
	TextDrawColor(autoshop_TD[7], 437918463);
	TextDrawBackgroundColor(autoshop_TD[7], 255);
	TextDrawFont(autoshop_TD[7], 4);
	TextDrawSetProportional(autoshop_TD[7], 0);
	TextDrawSetShadow(autoshop_TD[7], 0);
	TextDrawSetSelectable(autoshop_TD[7], true);

	autoshop_TD[8] = TextDrawCreate(591.0000, 396.4223, "LD_SPAC:white"); // green
	TextDrawTextSize(autoshop_TD[8], 13.1400, 17.0000);
	TextDrawAlignment(autoshop_TD[8], 1);
	TextDrawColor(autoshop_TD[8], 437918463);
	TextDrawBackgroundColor(autoshop_TD[8], 255);
	TextDrawFont(autoshop_TD[8], 4);
	TextDrawSetProportional(autoshop_TD[8], 0);
	TextDrawSetShadow(autoshop_TD[8], 0);
	TextDrawSetSelectable(autoshop_TD[8], true);

	autoshop_TD[9] = TextDrawCreate(546.5333, 379.3001, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[9], 10.0396, 12.6099);
	TextDrawAlignment(autoshop_TD[9], 1);
	TextDrawColor(autoshop_TD[9], -1);
	TextDrawBackgroundColor(autoshop_TD[9], 255);
	TextDrawFont(autoshop_TD[9], 4);
	TextDrawSetProportional(autoshop_TD[9], 0);
	TextDrawSetShadow(autoshop_TD[9], 0);

	autoshop_TD[10] = TextDrawCreate(546.5333, 398.5013, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[10], 10.0396, 12.6099);
	TextDrawAlignment(autoshop_TD[10], 1);
	TextDrawColor(autoshop_TD[10], 255);
	TextDrawBackgroundColor(autoshop_TD[10], 255);
	TextDrawFont(autoshop_TD[10], 4);
	TextDrawSetProportional(autoshop_TD[10], 0);
	TextDrawSetShadow(autoshop_TD[10], 0);

	autoshop_TD[11] = TextDrawCreate(561.8665, 379.4197, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[11], 10.0396, 12.6099);
	TextDrawAlignment(autoshop_TD[11], 1);
	TextDrawColor(autoshop_TD[11], -2139062017);
	TextDrawBackgroundColor(autoshop_TD[11], 255);
	TextDrawFont(autoshop_TD[11], 4);
	TextDrawSetProportional(autoshop_TD[11], 0);
	TextDrawSetShadow(autoshop_TD[11], 0);

	autoshop_TD[12] = TextDrawCreate(561.8665, 398.5013, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[12], 10.0396, 12.6099);
	TextDrawAlignment(autoshop_TD[12], 1);
	TextDrawColor(autoshop_TD[12], -16776961);
	TextDrawBackgroundColor(autoshop_TD[12], 255);
	TextDrawFont(autoshop_TD[12], 4);
	TextDrawSetProportional(autoshop_TD[12], 0);
	TextDrawSetShadow(autoshop_TD[12], 0);

	autoshop_TD[13] = TextDrawCreate(577.1998, 379.4197, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[13], 10.0396, 12.6099);
	TextDrawAlignment(autoshop_TD[13], 1);
	TextDrawColor(autoshop_TD[13], -5963521);
	TextDrawBackgroundColor(autoshop_TD[13], 255);
	TextDrawFont(autoshop_TD[13], 4);
	TextDrawSetProportional(autoshop_TD[13], 0);
	TextDrawSetShadow(autoshop_TD[13], 0);

	autoshop_TD[14] = TextDrawCreate(577.1998, 398.5010, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[14], 10.0396, 12.6099);
	TextDrawAlignment(autoshop_TD[14], 1);
	TextDrawColor(autoshop_TD[14], -65281);
	TextDrawBackgroundColor(autoshop_TD[14], 255);
	TextDrawFont(autoshop_TD[14], 4);
	TextDrawSetProportional(autoshop_TD[14], 0);
	TextDrawSetShadow(autoshop_TD[14], 0);

	autoshop_TD[15] = TextDrawCreate(592.3333, 379.4197, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[15], 10.0396, 12.6099);
	TextDrawAlignment(autoshop_TD[15], 1);
	TextDrawColor(autoshop_TD[15], 65535);
	TextDrawBackgroundColor(autoshop_TD[15], 255);
	TextDrawFont(autoshop_TD[15], 4);
	TextDrawSetProportional(autoshop_TD[15], 0);
	TextDrawSetShadow(autoshop_TD[15], 0);

	autoshop_TD[16] = TextDrawCreate(592.4334, 398.5010, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[16], 10.0396, 12.6099);
	TextDrawAlignment(autoshop_TD[16], 1);
	TextDrawColor(autoshop_TD[16], 8388863);
	TextDrawBackgroundColor(autoshop_TD[16], 255);
	TextDrawFont(autoshop_TD[16], 4);
	TextDrawSetProportional(autoshop_TD[16], 0);
	TextDrawSetShadow(autoshop_TD[16], 0);

	autoshop_TD[17] = TextDrawCreate(545.3333, 364.5516, "SELECT_COLOR"); // пусто
	TextDrawLetterSize(autoshop_TD[17], 0.1164, 0.9297);
	TextDrawAlignment(autoshop_TD[17], 1);
	TextDrawColor(autoshop_TD[17], -1);
	TextDrawBackgroundColor(autoshop_TD[17], 255);
	TextDrawFont(autoshop_TD[17], 2);
	TextDrawSetProportional(autoshop_TD[17], 1);
	TextDrawSetShadow(autoshop_TD[17], 0);

	autoshop_TD[18] = TextDrawCreate(536.7999, 354.2109, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[18], 11.0000, 14.0000);
	TextDrawAlignment(autoshop_TD[18], 1);
	TextDrawColor(autoshop_TD[18], 235802367);
	TextDrawBackgroundColor(autoshop_TD[18], 255);
	TextDrawFont(autoshop_TD[18], 4);
	TextDrawSetProportional(autoshop_TD[18], 0);
	TextDrawSetShadow(autoshop_TD[18], 0);

	autoshop_TD[19] = TextDrawCreate(536.7999, 410.8482, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[19], 11.0000, 14.0000);
	TextDrawAlignment(autoshop_TD[19], 1);
	TextDrawColor(autoshop_TD[19], 235802367);
	TextDrawBackgroundColor(autoshop_TD[19], 255);
	TextDrawFont(autoshop_TD[19], 4);
	TextDrawSetProportional(autoshop_TD[19], 0);
	TextDrawSetShadow(autoshop_TD[19], 0);

	autoshop_TD[20] = TextDrawCreate(440.2936, 354.2109, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[20], 11.0000, 14.0000);
	TextDrawAlignment(autoshop_TD[20], 1);
	TextDrawColor(autoshop_TD[20], 235802367);
	TextDrawBackgroundColor(autoshop_TD[20], 255);
	TextDrawFont(autoshop_TD[20], 4);
	TextDrawSetProportional(autoshop_TD[20], 0);
	TextDrawSetShadow(autoshop_TD[20], 0);

	autoshop_TD[21] = TextDrawCreate(440.2937, 410.8482, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[21], 11.0000, 14.0000);
	TextDrawAlignment(autoshop_TD[21], 1);
	TextDrawColor(autoshop_TD[21], 235802367);
	TextDrawBackgroundColor(autoshop_TD[21], 255);
	TextDrawFont(autoshop_TD[21], 4);
	TextDrawSetProportional(autoshop_TD[21], 0);
	TextDrawSetShadow(autoshop_TD[21], 0);

	autoshop_TD[22] = TextDrawCreate(538.6333, 361.0072, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[22], 5.0000, 57.0000);
	TextDrawAlignment(autoshop_TD[22], 1);
	TextDrawColor(autoshop_TD[22], 235802367);
	TextDrawBackgroundColor(autoshop_TD[22], 255);
	TextDrawFont(autoshop_TD[22], 4);
	TextDrawSetProportional(autoshop_TD[22], 0);
	TextDrawSetShadow(autoshop_TD[22], 0);

	autoshop_TD[23] = TextDrawCreate(607.6666, 361.0072, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[23], 5.0000, 57.0000);
	TextDrawAlignment(autoshop_TD[23], 1);
	TextDrawColor(autoshop_TD[23], 235802367);
	TextDrawBackgroundColor(autoshop_TD[23], 255);
	TextDrawFont(autoshop_TD[23], 4);
	TextDrawSetProportional(autoshop_TD[23], 0);
	TextDrawSetShadow(autoshop_TD[23], 0);

	autoshop_TD[24] = TextDrawCreate(603.2666, 354.2109, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[24], 11.0000, 14.0000);
	TextDrawAlignment(autoshop_TD[24], 1);
	TextDrawColor(autoshop_TD[24], 235802367);
	TextDrawBackgroundColor(autoshop_TD[24], 255);
	TextDrawFont(autoshop_TD[24], 4);
	TextDrawSetProportional(autoshop_TD[24], 0);
	TextDrawSetShadow(autoshop_TD[24], 0);

	autoshop_TD[25] = TextDrawCreate(603.2667, 410.8482, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[25], 11.0000, 14.0000);
	TextDrawAlignment(autoshop_TD[25], 1);
	TextDrawColor(autoshop_TD[25], 235802367);
	TextDrawBackgroundColor(autoshop_TD[25], 255);
	TextDrawFont(autoshop_TD[25], 4);
	TextDrawSetProportional(autoshop_TD[25], 0);
	TextDrawSetShadow(autoshop_TD[25], 0);

	autoshop_TD[26] = TextDrawCreate(526.2990, 354.2109, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[26], 11.0000, 14.0000);
	TextDrawAlignment(autoshop_TD[26], 1);
	TextDrawColor(autoshop_TD[26], 235802367);
	TextDrawBackgroundColor(autoshop_TD[26], 255);
	TextDrawFont(autoshop_TD[26], 4);
	TextDrawSetProportional(autoshop_TD[26], 0);
	TextDrawSetShadow(autoshop_TD[26], 0);

	autoshop_TD[27] = TextDrawCreate(526.2990, 410.8482, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[27], 11.0000, 14.0000);
	TextDrawAlignment(autoshop_TD[27], 1);
	TextDrawColor(autoshop_TD[27], 235802367);
	TextDrawBackgroundColor(autoshop_TD[27], 255);
	TextDrawFont(autoshop_TD[27], 4);
	TextDrawSetProportional(autoshop_TD[27], 0);
	TextDrawSetShadow(autoshop_TD[27], 0);

	autoshop_TD[28] = TextDrawCreate(446.3666, 356.5592, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[28], 85.1996, 66.0000);
	TextDrawAlignment(autoshop_TD[28], 1);
	TextDrawColor(autoshop_TD[28], 235802367);
	TextDrawBackgroundColor(autoshop_TD[28], 255);
	TextDrawFont(autoshop_TD[28], 4);
	TextDrawSetProportional(autoshop_TD[28], 0);
	TextDrawSetShadow(autoshop_TD[28], 0);

	autoshop_TD[29] = TextDrawCreate(442.2330, 361.5368, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[29], 93.1996, 56.0000);
	TextDrawAlignment(autoshop_TD[29], 1);
	TextDrawColor(autoshop_TD[29], 235802367);
	TextDrawBackgroundColor(autoshop_TD[29], 255);
	TextDrawFont(autoshop_TD[29], 4);
	TextDrawSetProportional(autoshop_TD[29], 0);
	TextDrawSetShadow(autoshop_TD[29], 0);

	autoshop_TD[30] = TextDrawCreate(448.0997, 380.7915, "MODEL:"); // пусто
	TextDrawLetterSize(autoshop_TD[30], 0.1439, 0.8033);
	TextDrawAlignment(autoshop_TD[30], 1);
	TextDrawColor(autoshop_TD[30], -1061109505);
	TextDrawBackgroundColor(autoshop_TD[30], 255);
	TextDrawFont(autoshop_TD[30], 1);
	TextDrawSetProportional(autoshop_TD[30], 1);
	TextDrawSetShadow(autoshop_TD[30], 0);

	autoshop_TD[31] = TextDrawCreate(489.4689, 358.5592, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[31], 5.6199, 7.0000);
	TextDrawAlignment(autoshop_TD[31], 1);
	TextDrawColor(autoshop_TD[31], 438316543);
	TextDrawBackgroundColor(autoshop_TD[31], 255);
	TextDrawFont(autoshop_TD[31], 4);
	TextDrawSetProportional(autoshop_TD[31], 0);
	TextDrawSetShadow(autoshop_TD[31], 0);

	autoshop_TD[32] = TextDrawCreate(489.4689, 366.1596, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[32], 5.6199, 7.0000);
	TextDrawAlignment(autoshop_TD[32], 1);
	TextDrawColor(autoshop_TD[32], 438316543);
	TextDrawBackgroundColor(autoshop_TD[32], 255);
	TextDrawFont(autoshop_TD[32], 4);
	TextDrawSetProportional(autoshop_TD[32], 0);
	TextDrawSetShadow(autoshop_TD[32], 0);

	autoshop_TD[33] = TextDrawCreate(527.7666, 358.5592, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[33], 5.6199, 7.0000);
	TextDrawAlignment(autoshop_TD[33], 1);
	TextDrawColor(autoshop_TD[33], 438316543);
	TextDrawBackgroundColor(autoshop_TD[33], 255);
	TextDrawFont(autoshop_TD[33], 4);
	TextDrawSetProportional(autoshop_TD[33], 0);
	TextDrawSetShadow(autoshop_TD[33], 0);

	autoshop_TD[34] = TextDrawCreate(527.7666, 366.1596, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[34], 5.6199, 7.0000);
	TextDrawAlignment(autoshop_TD[34], 1);
	TextDrawColor(autoshop_TD[34], 438316543);
	TextDrawBackgroundColor(autoshop_TD[34], 255);
	TextDrawFont(autoshop_TD[34], 4);
	TextDrawSetProportional(autoshop_TD[34], 0);
	TextDrawSetShadow(autoshop_TD[34], 0);

	autoshop_TD[35] = TextDrawCreate(493.0664, 359.9183, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[35], 37.0000, 12.0000);
	TextDrawAlignment(autoshop_TD[35], 1);
	TextDrawColor(autoshop_TD[35], 438316543);
	TextDrawBackgroundColor(autoshop_TD[35], 255);
	TextDrawFont(autoshop_TD[35], 4);
	TextDrawSetProportional(autoshop_TD[35], 0);
	TextDrawSetShadow(autoshop_TD[35], 0);

	autoshop_TD[36] = TextDrawCreate(490.3999, 362.4071, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[36], 42.0000, 7.0000);
	TextDrawAlignment(autoshop_TD[36], 1);
	TextDrawColor(autoshop_TD[36], 438316543);
	TextDrawBackgroundColor(autoshop_TD[36], 255);
	TextDrawFont(autoshop_TD[36], 4);
	TextDrawSetProportional(autoshop_TD[36], 0);
	TextDrawSetShadow(autoshop_TD[36], 0);

	autoshop_TD[37] = TextDrawCreate(511.4331, 361.1332, "Exit"); // пусто
	TextDrawLetterSize(autoshop_TD[37], 0.1368, 0.9610); 
	TextDrawTextSize(autoshop_TD[37], 10.0000, 12.0000);
	TextDrawAlignment(autoshop_TD[37], 2);
	TextDrawColor(autoshop_TD[37], -1);
	TextDrawBackgroundColor(autoshop_TD[37], 255);
	TextDrawFont(autoshop_TD[37], 2);
	TextDrawSetProportional(autoshop_TD[37], 1);
	TextDrawSetShadow(autoshop_TD[37], 0);
	TextDrawSetSelectable(autoshop_TD[37], true);

	autoshop_TD[38] = TextDrawCreate(446.9999, 375.6813, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[38], 85.0000, 0.5098);
	TextDrawAlignment(autoshop_TD[38], 1);
	TextDrawColor(autoshop_TD[38], -1);
	TextDrawBackgroundColor(autoshop_TD[38], 255);
	TextDrawFont(autoshop_TD[38], 4);
	TextDrawSetProportional(autoshop_TD[38], 0);
	TextDrawSetShadow(autoshop_TD[38], 0);

	autoshop_TD[39] = TextDrawCreate(443.0997, 396.0262, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[39], 21.0000, 26.0000);
	TextDrawAlignment(autoshop_TD[39], 1);
	TextDrawColor(autoshop_TD[39], 370810879);
	TextDrawBackgroundColor(autoshop_TD[39], 255);
	TextDrawFont(autoshop_TD[39], 4);
	TextDrawSetProportional(autoshop_TD[39], 0);
	TextDrawSetShadow(autoshop_TD[39], 0);

	autoshop_TD[40] = TextDrawCreate(513.8333, 396.0262, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[40], 21.0000, 26.0000);
	TextDrawAlignment(autoshop_TD[40], 1);
	TextDrawColor(autoshop_TD[40], 370810879);
	TextDrawBackgroundColor(autoshop_TD[40], 255);
	TextDrawFont(autoshop_TD[40], 4);
	TextDrawSetProportional(autoshop_TD[40], 0);
	TextDrawSetShadow(autoshop_TD[40], 0);

	autoshop_TD[41] = TextDrawCreate(462.8999, 396.1260, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[41], 21.0000, 25.8498);
	TextDrawAlignment(autoshop_TD[41], 1);
	TextDrawColor(autoshop_TD[41], 370810879);
	TextDrawBackgroundColor(autoshop_TD[41], 255);
	TextDrawFont(autoshop_TD[41], 4);
	TextDrawSetProportional(autoshop_TD[41], 0);
	TextDrawSetShadow(autoshop_TD[41], 0);

	autoshop_TD[42] = TextDrawCreate(493.8330, 396.1260, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[42], 21.0000, 25.8498);
	TextDrawAlignment(autoshop_TD[42], 1);
	TextDrawColor(autoshop_TD[42], 370810879);
	TextDrawBackgroundColor(autoshop_TD[42], 255);
	TextDrawFont(autoshop_TD[42], 4);
	TextDrawSetProportional(autoshop_TD[42], 0);
	TextDrawSetShadow(autoshop_TD[42], 0);

	autoshop_TD[43] = TextDrawCreate(474.2998, 400.4743, "LD_Spac:White"); // пусто
	TextDrawTextSize(autoshop_TD[43], 29.1700, 17.1198);
	TextDrawAlignment(autoshop_TD[43], 1);
	TextDrawColor(autoshop_TD[43], 370810879);
	TextDrawBackgroundColor(autoshop_TD[43], 255);
	TextDrawFont(autoshop_TD[43], 4);
	TextDrawSetProportional(autoshop_TD[43], 0);
	TextDrawSetShadow(autoshop_TD[43], 0);

	autoshop_TD[44] = TextDrawCreate(453.3330, 403.5443, "<<"); // пусто
	TextDrawLetterSize(autoshop_TD[44], 0.1018, 1.1102);
	TextDrawTextSize(autoshop_TD[44], 10.0000, 12.0000);
	TextDrawAlignment(autoshop_TD[44], 2);
	TextDrawColor(autoshop_TD[44], -1);
	TextDrawUseBox(autoshop_TD[44], 1);
	TextDrawBoxColor(autoshop_TD[44], 0);
	TextDrawBackgroundColor(autoshop_TD[44], 255);
	TextDrawFont(autoshop_TD[44], 1);
	TextDrawSetProportional(autoshop_TD[44], 1);
	TextDrawSetShadow(autoshop_TD[44], 0);
	TextDrawSetSelectable(autoshop_TD[44], true);

	autoshop_TD[45] = TextDrawCreate(524.8665, 403.5443, ">>"); // пусто
	TextDrawLetterSize(autoshop_TD[45], 0.1018, 1.1102);
	TextDrawTextSize(autoshop_TD[45], 10.0000, 12.0000);
	TextDrawAlignment(autoshop_TD[45], 2);
	TextDrawColor(autoshop_TD[45], -1);
	TextDrawUseBox(autoshop_TD[45], 1);
	TextDrawBoxColor(autoshop_TD[45], 0);
	TextDrawBackgroundColor(autoshop_TD[45], 255);
	TextDrawFont(autoshop_TD[45], 1);
	TextDrawSetProportional(autoshop_TD[45], 1);
	TextDrawSetShadow(autoshop_TD[45], 0);
	TextDrawSetSelectable(autoshop_TD[45], true);

	autoshop_TD[46] = TextDrawCreate(488.8663, 404.2738, "SELECT"); // пусто
	TextDrawLetterSize(autoshop_TD[46], 0.1368, 0.9610);
	TextDrawTextSize(autoshop_TD[46], 10.0000, 40.0000);
	TextDrawAlignment(autoshop_TD[46], 2);
	TextDrawColor(autoshop_TD[46], -1);
	TextDrawUseBox(autoshop_TD[46], 1);
	TextDrawBoxColor(autoshop_TD[46], 0);
	TextDrawBackgroundColor(autoshop_TD[46], 255);
	TextDrawFont(autoshop_TD[46], 2);
	TextDrawSetProportional(autoshop_TD[46], 1);
	TextDrawSetShadow(autoshop_TD[46], 0);
	TextDrawSetSelectable(autoshop_TD[46], true);

	autoshop_TD[47] = TextDrawCreate(446.9999, 393.6824, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[47], 85.0000, 0.5098);
	TextDrawAlignment(autoshop_TD[47], 1);
	TextDrawColor(autoshop_TD[47], -1);
	TextDrawBackgroundColor(autoshop_TD[47], 255);
	TextDrawFont(autoshop_TD[47], 4);
	TextDrawSetProportional(autoshop_TD[47], 0);
	TextDrawSetShadow(autoshop_TD[47], 0);

	autoshop_TD[48] = TextDrawCreate(445.4688, 358.5592, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[48], 5.6199, 7.0000);
	TextDrawAlignment(autoshop_TD[48], 1);
	TextDrawColor(autoshop_TD[48], 438316543);
	TextDrawBackgroundColor(autoshop_TD[48], 255);
	TextDrawFont(autoshop_TD[48], 4);
	TextDrawSetProportional(autoshop_TD[48], 0);
	TextDrawSetShadow(autoshop_TD[48], 0);

	autoshop_TD[49] = TextDrawCreate(445.4688, 366.1596, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[49], 5.6199, 7.0000);
	TextDrawAlignment(autoshop_TD[49], 1);
	TextDrawColor(autoshop_TD[49], 438316543);
	TextDrawBackgroundColor(autoshop_TD[49], 255);
	TextDrawFont(autoshop_TD[49], 4);
	TextDrawSetProportional(autoshop_TD[49], 0);
	TextDrawSetShadow(autoshop_TD[49], 0);

	autoshop_TD[50] = TextDrawCreate(483.7665, 358.5592, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[50], 5.6199, 7.0000);
	TextDrawAlignment(autoshop_TD[50], 1);
	TextDrawColor(autoshop_TD[50], 438316543);
	TextDrawBackgroundColor(autoshop_TD[50], 255);
	TextDrawFont(autoshop_TD[50], 4);
	TextDrawSetProportional(autoshop_TD[50], 0);
	TextDrawSetShadow(autoshop_TD[50], 0);

	autoshop_TD[51] = TextDrawCreate(483.7665, 366.1596, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(autoshop_TD[51], 5.6199, 7.0000);
	TextDrawAlignment(autoshop_TD[51], 1);
	TextDrawColor(autoshop_TD[51], 438316543);
	TextDrawBackgroundColor(autoshop_TD[51], 255);
	TextDrawFont(autoshop_TD[51], 4);
	TextDrawSetProportional(autoshop_TD[51], 0);
	TextDrawSetShadow(autoshop_TD[51], 0);

	autoshop_TD[52] = TextDrawCreate(449.0663, 359.9183, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[52], 37.0000, 12.0000);
	TextDrawAlignment(autoshop_TD[52], 1);
	TextDrawColor(autoshop_TD[52], 438316543);
	TextDrawBackgroundColor(autoshop_TD[52], 255);
	TextDrawFont(autoshop_TD[52], 4);
	TextDrawSetProportional(autoshop_TD[52], 0);
	TextDrawSetShadow(autoshop_TD[52], 0);

	autoshop_TD[53] = TextDrawCreate(446.3998, 362.4071, "LD_SPAC:white"); // пусто
	TextDrawTextSize(autoshop_TD[53], 42.0000, 7.0000);
	TextDrawAlignment(autoshop_TD[53], 1);
	TextDrawColor(autoshop_TD[53], 438316543);
	TextDrawBackgroundColor(autoshop_TD[53], 255);
	TextDrawFont(autoshop_TD[53], 4);
	TextDrawSetProportional(autoshop_TD[53], 0);
	TextDrawSetShadow(autoshop_TD[53], 0);


	inventory_TD[0] = TextDrawCreate(294.2997, 101.7145, ""); // пусто
	TextDrawTextSize(inventory_TD[0], 195.0000, 211.0000);
	TextDrawAlignment(inventory_TD[0], 1);
	TextDrawColor(inventory_TD[0], -1);
	TextDrawBackgroundColor(inventory_TD[0], 437918463);
	TextDrawFont(inventory_TD[0], 5);
	TextDrawSetProportional(inventory_TD[0], 0);
	TextDrawSetShadow(inventory_TD[0], 0);
	TextDrawSetPreviewModel(inventory_TD[0], 24);
	TextDrawSetPreviewRot(inventory_TD[0], 0.0000, 0.0000, 0.0000, -0.0052);

	inventory_TD[1] = TextDrawCreate(294.3327, 122.5251, ""); // пусто
	TextDrawTextSize(inventory_TD[1], 195.0000, 213.0000);
	TextDrawAlignment(inventory_TD[1], 1);
	TextDrawColor(inventory_TD[1], -2139062017);
	TextDrawBackgroundColor(inventory_TD[1], 437918463);
	TextDrawFont(inventory_TD[1], 5);
	TextDrawSetProportional(inventory_TD[1], 0);
	TextDrawSetShadow(inventory_TD[1], 0);
	TextDrawSetPreviewModel(inventory_TD[1], 33);
	TextDrawSetPreviewRot(inventory_TD[1], 0.0000, 0.0000, 0.0000, -0.0052);

	inventory_TD[2] = TextDrawCreate(153.6331, 101.7330, ""); // пусто
	TextDrawTextSize(inventory_TD[2], 139.0000, 211.0000);
	TextDrawAlignment(inventory_TD[2], 1);
	TextDrawColor(inventory_TD[2], -1);
	TextDrawBackgroundColor(inventory_TD[2], 437918463);
	TextDrawFont(inventory_TD[2], 5);
	TextDrawSetProportional(inventory_TD[2], 0);
	TextDrawSetShadow(inventory_TD[2], 0);
	TextDrawSetPreviewModel(inventory_TD[2], 24);
	TextDrawSetPreviewRot(inventory_TD[2], 0.0000, 0.0000, 0.0000, -0.0052);

	inventory_TD[3] = TextDrawCreate(153.6665, 122.5438, ""); // пусто
	TextDrawTextSize(inventory_TD[3], 139.0000, 213.0000);
	TextDrawAlignment(inventory_TD[3], 1);
	TextDrawColor(inventory_TD[3], -2139062017);
	TextDrawBackgroundColor(inventory_TD[3], 437918463);
	TextDrawFont(inventory_TD[3], 5);
	TextDrawSetProportional(inventory_TD[3], 0);
	TextDrawSetShadow(inventory_TD[3], 0);
	TextDrawSetPreviewModel(inventory_TD[3], 33);
	TextDrawSetPreviewRot(inventory_TD[3], 0.0000, 0.0000, 0.0000, -0.0052);

	inventory_TD[4] = TextDrawCreate(152.3332, 108.1110, "particle:lamp_shad_64"); // пусто
	TextDrawTextSize(inventory_TD[4], 140.0000, 14.0000);
	TextDrawAlignment(inventory_TD[4], 1);
	TextDrawColor(inventory_TD[4], -251);
	TextDrawBackgroundColor(inventory_TD[4], 255);
	TextDrawFont(inventory_TD[4], 4);
	TextDrawSetProportional(inventory_TD[4], 0);
	TextDrawSetShadow(inventory_TD[4], 0);

	inventory_TD[5] = TextDrawCreate(292.3330, 108.9402, "particle:lamp_shad_64"); // пусто
	TextDrawTextSize(inventory_TD[5], 140.0000, 14.0000);
	TextDrawAlignment(inventory_TD[5], 1);
	TextDrawColor(inventory_TD[5], -251);
	TextDrawBackgroundColor(inventory_TD[5], 255);
	TextDrawFont(inventory_TD[5], 4);
	TextDrawSetProportional(inventory_TD[5], 0);
	TextDrawSetShadow(inventory_TD[5], 0);

	inventory_TD[6] = TextDrawCreate(222.2328, 107.6949, "CHARACTER"); // пусто
	TextDrawLetterSize(inventory_TD[6], 0.1342, 0.9775);
	TextDrawAlignment(inventory_TD[6], 2);
	TextDrawColor(inventory_TD[6], -1);
	TextDrawBackgroundColor(inventory_TD[6], 255);
	TextDrawFont(inventory_TD[6], 2);
	TextDrawSetProportional(inventory_TD[6], 1);
	TextDrawSetShadow(inventory_TD[6], 0);

	inventory_TD[7] = TextDrawCreate(390.8663, 107.6949, "INVENTORY"); // пусто
	TextDrawLetterSize(inventory_TD[7], 0.1342, 0.9775);
	TextDrawAlignment(inventory_TD[7], 2);
	TextDrawColor(inventory_TD[7], -1);
	TextDrawBackgroundColor(inventory_TD[7], 255);
	TextDrawFont(inventory_TD[7], 2);
	TextDrawSetProportional(inventory_TD[7], 1);
	TextDrawSetShadow(inventory_TD[7], 0);

	inventory_TD[8] = TextDrawCreate(442.6329, 319.2661, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[8], 28.5998, 6.0000);
	TextDrawAlignment(inventory_TD[8], 1);
	TextDrawColor(inventory_TD[8], 370810879);
	TextDrawBackgroundColor(inventory_TD[8], 255);
	TextDrawFont(inventory_TD[8], 4);
	TextDrawSetProportional(inventory_TD[8], 0);
	TextDrawSetShadow(inventory_TD[8], 0);

	inventory_TD[9] = TextDrawCreate(440.7994, 319.2590, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[9], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[9], 1);
	TextDrawColor(inventory_TD[9], 370810879);
	TextDrawBackgroundColor(inventory_TD[9], 255);
	TextDrawFont(inventory_TD[9], 4);
	TextDrawSetProportional(inventory_TD[9], 0);
	TextDrawSetShadow(inventory_TD[9], 0);

	inventory_TD[10] = TextDrawCreate(462.9009, 319.2590, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[10], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[10], 1);
	TextDrawColor(inventory_TD[10], 370810879);
	TextDrawBackgroundColor(inventory_TD[10], 255);
	TextDrawFont(inventory_TD[10], 4);
	TextDrawSetProportional(inventory_TD[10], 0);
	TextDrawSetShadow(inventory_TD[10], 0);

	inventory_TD[11] = TextDrawCreate(440.7994, 313.0585, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[11], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[11], 1);
	TextDrawColor(inventory_TD[11], 370810879);
	TextDrawBackgroundColor(inventory_TD[11], 255);
	TextDrawFont(inventory_TD[11], 4);
	TextDrawSetProportional(inventory_TD[11], 0);
	TextDrawSetShadow(inventory_TD[11], 0);

	inventory_TD[12] = TextDrawCreate(463.0010, 313.0585, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[12], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[12], 1);
	TextDrawColor(inventory_TD[12], 370810879);
	TextDrawBackgroundColor(inventory_TD[12], 255);
	TextDrawFont(inventory_TD[12], 4);
	TextDrawSetProportional(inventory_TD[12], 0);
	TextDrawSetShadow(inventory_TD[12], 0);

	inventory_TD[13] = TextDrawCreate(446.3330, 315.1177, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[13], 22.0000, 14.0000);
	TextDrawAlignment(inventory_TD[13], 1);
	TextDrawColor(inventory_TD[13], 370810879);
	TextDrawBackgroundColor(inventory_TD[13], 255);
	TextDrawFont(inventory_TD[13], 4);
	TextDrawSetProportional(inventory_TD[13], 0);
	TextDrawSetShadow(inventory_TD[13], 0);

	inventory_TD[14] = TextDrawCreate(456.9331, 317.7626, "DROP"); // пусто
	TextDrawLetterSize(inventory_TD[14], 0.1312, 0.9110);
	TextDrawTextSize(inventory_TD[14], 10.0000, 26.0000);
	TextDrawAlignment(inventory_TD[14], 2);
	TextDrawColor(inventory_TD[14], -1);
	TextDrawUseBox(inventory_TD[14], 1);
	TextDrawBoxColor(inventory_TD[14], 0);
	TextDrawFont(inventory_TD[14], 2);
	TextDrawSetProportional(inventory_TD[14], 1);
	TextDrawSetShadow(inventory_TD[14], 0);
	TextDrawSetSelectable(inventory_TD[14], true);

	inventory_TD[15] = TextDrawCreate(373.3002, 319.2662, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[15], 28.5998, 6.0000);
	TextDrawAlignment(inventory_TD[15], 1);
	TextDrawColor(inventory_TD[15], 370810879);
	TextDrawBackgroundColor(inventory_TD[15], 255);
	TextDrawFont(inventory_TD[15], 4);
	TextDrawSetProportional(inventory_TD[15], 0);
	TextDrawSetShadow(inventory_TD[15], 0);

	inventory_TD[16] = TextDrawCreate(371.4667, 319.2590, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[16], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[16], 1);
	TextDrawColor(inventory_TD[16], 370810879);
	TextDrawBackgroundColor(inventory_TD[16], 255);
	TextDrawFont(inventory_TD[16], 4);
	TextDrawSetProportional(inventory_TD[16], 0);
	TextDrawSetShadow(inventory_TD[16], 0);

	inventory_TD[17] = TextDrawCreate(393.5682, 319.2590, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[17], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[17], 1);
	TextDrawColor(inventory_TD[17], 370810879);
	TextDrawBackgroundColor(inventory_TD[17], 255);
	TextDrawFont(inventory_TD[17], 4);
	TextDrawSetProportional(inventory_TD[17], 0);
	TextDrawSetShadow(inventory_TD[17], 0);

	inventory_TD[18] = TextDrawCreate(371.4667, 313.0585, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[18], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[18], 1);
	TextDrawColor(inventory_TD[18], 370810879);
	TextDrawBackgroundColor(inventory_TD[18], 255);
	TextDrawFont(inventory_TD[18], 4);
	TextDrawSetProportional(inventory_TD[18], 0);
	TextDrawSetShadow(inventory_TD[18], 0);

	inventory_TD[19] = TextDrawCreate(393.6679, 313.0585, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[19], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[19], 1);
	TextDrawColor(inventory_TD[19], 370810879);
	TextDrawBackgroundColor(inventory_TD[19], 255);
	TextDrawFont(inventory_TD[19], 4);
	TextDrawSetProportional(inventory_TD[19], 0);
	TextDrawSetShadow(inventory_TD[19], 0);

	inventory_TD[20] = TextDrawCreate(377.0000, 315.1181, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[20], 22.0000, 14.0000);
	TextDrawAlignment(inventory_TD[20], 1);
	TextDrawColor(inventory_TD[20], 370810879);
	TextDrawBackgroundColor(inventory_TD[20], 255);
	TextDrawFont(inventory_TD[20], 4);
	TextDrawSetProportional(inventory_TD[20], 0);
	TextDrawSetShadow(inventory_TD[20], 0);

	inventory_TD[21] = TextDrawCreate(387.7001, 317.7626, "INFO"); // пусто
	TextDrawLetterSize(inventory_TD[21], 0.1332, 0.8945);
	TextDrawTextSize(inventory_TD[21], 10.0000, 26.0000);
	TextDrawAlignment(inventory_TD[21], 2);
	TextDrawColor(inventory_TD[21], -1);
	TextDrawUseBox(inventory_TD[21], 1);
	TextDrawBoxColor(inventory_TD[21], 0);
	TextDrawFont(inventory_TD[21], 2);
	TextDrawSetProportional(inventory_TD[21], 1);
	TextDrawSetShadow(inventory_TD[21], 0);
	TextDrawSetSelectable(inventory_TD[21], true);

	inventory_TD[22] = TextDrawCreate(355.3662, 318.5921, ">>"); // пусто
	TextDrawLetterSize(inventory_TD[22], 0.0671, 0.7702);
	TextDrawTextSize(inventory_TD[22], 10.0000, 26.0000);
	TextDrawAlignment(inventory_TD[22], 2);
	TextDrawColor(inventory_TD[22], -1);
	TextDrawUseBox(inventory_TD[22], 1);
	TextDrawBoxColor(inventory_TD[22], 0);
	TextDrawFont(inventory_TD[22], 2);
	TextDrawSetProportional(inventory_TD[22], 1);
	TextDrawSetShadow(inventory_TD[22], 0);
	TextDrawSetSelectable(inventory_TD[22], true);

	inventory_TD[23] = TextDrawCreate(316.0328, 318.5921, "<<"); // пусто
	TextDrawLetterSize(inventory_TD[23], 0.0671, 0.7702);
	TextDrawTextSize(inventory_TD[23], 10.0000, 26.0000);
	TextDrawAlignment(inventory_TD[23], 2);
	TextDrawColor(inventory_TD[23], -1);
	TextDrawUseBox(inventory_TD[23], 1);
	TextDrawBoxColor(inventory_TD[23], 0);
	TextDrawFont(inventory_TD[23], 2);
	TextDrawSetProportional(inventory_TD[23], 1);
	TextDrawSetShadow(inventory_TD[23], 0);
	TextDrawSetSelectable(inventory_TD[23], true);

	inventory_TD[24] = TextDrawCreate(169.0000, 316.7770, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[24], 107.5597, 11.0000);
	TextDrawAlignment(inventory_TD[24], 1);
	TextDrawColor(inventory_TD[24], 437918463);
	TextDrawBackgroundColor(inventory_TD[24], 255);
	TextDrawFont(inventory_TD[24], 4);
	TextDrawSetProportional(inventory_TD[24], 0);
	TextDrawSetShadow(inventory_TD[24], 0);

	inventory_TD[25] = TextDrawCreate(169.7666, 318.3363, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[25], 105.5895, 7.8797);
	TextDrawAlignment(inventory_TD[25], 1);
	TextDrawColor(inventory_TD[25], -2061238017);
	TextDrawBackgroundColor(inventory_TD[25], 255);
	TextDrawFont(inventory_TD[25], 4);
	TextDrawSetProportional(inventory_TD[25], 0);
	TextDrawSetShadow(inventory_TD[25], 0);

	inventory_TD[26] = TextDrawCreate(169.0000, 268.6589, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[26], 107.5597, 11.0000);
	TextDrawAlignment(inventory_TD[26], 1);
	TextDrawColor(inventory_TD[26], 437918463);
	TextDrawBackgroundColor(inventory_TD[26], 255);
	TextDrawFont(inventory_TD[26], 4);
	TextDrawSetProportional(inventory_TD[26], 0);
	TextDrawSetShadow(inventory_TD[26], 0);

	inventory_TD[27] = TextDrawCreate(169.7666, 270.2182, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[27], 105.5895, 7.8797);
	TextDrawAlignment(inventory_TD[27], 1);
	TextDrawColor(inventory_TD[27], -7864065);
	TextDrawBackgroundColor(inventory_TD[27], 255);
	TextDrawFont(inventory_TD[27], 4);
	TextDrawSetProportional(inventory_TD[27], 0);
	TextDrawSetShadow(inventory_TD[27], 0);

	inventory_TD[28] = TextDrawCreate(169.0000, 293.5476, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[28], 107.5597, 11.0000);
	TextDrawAlignment(inventory_TD[28], 1);
	TextDrawColor(inventory_TD[28], 437918463);
	TextDrawBackgroundColor(inventory_TD[28], 255);
	TextDrawFont(inventory_TD[28], 4);
	TextDrawSetProportional(inventory_TD[28], 0);
	TextDrawSetShadow(inventory_TD[28], 0);

	inventory_TD[29] = TextDrawCreate(169.7666, 295.1069, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[29], 105.5895, 7.8797);
	TextDrawAlignment(inventory_TD[29], 1);
	TextDrawColor(inventory_TD[29], 7536639);
	TextDrawBackgroundColor(inventory_TD[29], 255);
	TextDrawFont(inventory_TD[29], 4);
	TextDrawSetProportional(inventory_TD[29], 0);
	TextDrawSetShadow(inventory_TD[29], 0);

	inventory_TD[30] = TextDrawCreate(169.1997, 260.5184, "Satiety"); // пусто
	TextDrawLetterSize(inventory_TD[30], 0.1246, 0.8615);
	TextDrawAlignment(inventory_TD[30], 1);
	TextDrawColor(inventory_TD[30], -1);
	TextDrawBackgroundColor(inventory_TD[30], 255);
	TextDrawFont(inventory_TD[30], 2);
	TextDrawSetProportional(inventory_TD[30], 1);
	TextDrawSetShadow(inventory_TD[30], 0);

	inventory_TD[31] = TextDrawCreate(169.1997, 284.7889, "THRIST"); // пусто
	TextDrawLetterSize(inventory_TD[31], 0.1246, 0.8615);
	TextDrawAlignment(inventory_TD[31], 1);
	TextDrawColor(inventory_TD[31], -1);
	TextDrawBackgroundColor(inventory_TD[31], 255);
	TextDrawFont(inventory_TD[31], 2);
	TextDrawSetProportional(inventory_TD[31], 1);
	TextDrawSetShadow(inventory_TD[31], 0);

	inventory_TD[32] = TextDrawCreate(169.6665, 308.0184, "HEALTH"); // пусто
	TextDrawLetterSize(inventory_TD[32], 0.1246, 0.8615);
	TextDrawAlignment(inventory_TD[32], 1);
	TextDrawColor(inventory_TD[32], -1);
	TextDrawBackgroundColor(inventory_TD[32], 255);
	TextDrawFont(inventory_TD[32], 2);
	TextDrawSetProportional(inventory_TD[32], 1);
	TextDrawSetShadow(inventory_TD[32], 0);

	inventory_TD[33] = TextDrawCreate(321.3001, 319.2662, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[33], 28.5998, 6.0000);
	TextDrawAlignment(inventory_TD[33], 1);
	TextDrawColor(inventory_TD[33], 370810879);
	TextDrawBackgroundColor(inventory_TD[33], 255);
	TextDrawFont(inventory_TD[33], 4);
	TextDrawSetProportional(inventory_TD[33], 0);
	TextDrawSetShadow(inventory_TD[33], 0);

	inventory_TD[34] = TextDrawCreate(260.7994, 337.5184, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[34], 52.0000, 17.0000);
	TextDrawAlignment(inventory_TD[34], 1);
	TextDrawColor(inventory_TD[34], 168430335);
	TextDrawBackgroundColor(inventory_TD[34], 255);
	TextDrawFont(inventory_TD[34], 4);
	TextDrawSetProportional(inventory_TD[34], 0);
	TextDrawSetShadow(inventory_TD[34], 0);

	inventory_TD[35] = TextDrawCreate(153.0664, 337.5184, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[35], 52.0000, 17.0000);
	TextDrawAlignment(inventory_TD[35], 1);
	TextDrawColor(inventory_TD[35], 438316543);
	TextDrawBackgroundColor(inventory_TD[35], 255);
	TextDrawFont(inventory_TD[35], 4);
	TextDrawSetProportional(inventory_TD[35], 0);
	TextDrawSetShadow(inventory_TD[35], 0);

	inventory_TD[36] = TextDrawCreate(319.4666, 319.2590, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[36], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[36], 1);
	TextDrawColor(inventory_TD[36], 370810879);
	TextDrawBackgroundColor(inventory_TD[36], 255);
	TextDrawFont(inventory_TD[36], 4);
	TextDrawSetProportional(inventory_TD[36], 0);
	TextDrawSetShadow(inventory_TD[36], 0);

	inventory_TD[37] = TextDrawCreate(341.5681, 319.2590, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[37], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[37], 1);
	TextDrawColor(inventory_TD[37], 370810879);
	TextDrawBackgroundColor(inventory_TD[37], 255);
	TextDrawFont(inventory_TD[37], 4);
	TextDrawSetProportional(inventory_TD[37], 0);
	TextDrawSetShadow(inventory_TD[37], 0);

	inventory_TD[38] = TextDrawCreate(319.4666, 313.0585, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[38], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[38], 1);
	TextDrawColor(inventory_TD[38], 370810879);
	TextDrawBackgroundColor(inventory_TD[38], 255);
	TextDrawFont(inventory_TD[38], 4);
	TextDrawSetProportional(inventory_TD[38], 0);
	TextDrawSetShadow(inventory_TD[38], 0);

	inventory_TD[39] = TextDrawCreate(341.6679, 313.0585, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[39], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[39], 1);
	TextDrawColor(inventory_TD[39], 370810879);
	TextDrawBackgroundColor(inventory_TD[39], 255);
	TextDrawFont(inventory_TD[39], 4);
	TextDrawSetProportional(inventory_TD[39], 0);
	TextDrawSetShadow(inventory_TD[39], 0);

	inventory_TD[40] = TextDrawCreate(437.2994, 337.5184, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[40], 52.0000, 17.0000);
	TextDrawAlignment(inventory_TD[40], 1);
	TextDrawColor(inventory_TD[40], 168430335);
	TextDrawBackgroundColor(inventory_TD[40], 255);
	TextDrawFont(inventory_TD[40], 4);
	TextDrawSetProportional(inventory_TD[40], 0);
	TextDrawSetShadow(inventory_TD[40], 0);

	inventory_TD[41] = TextDrawCreate(179.3332, 340.9926, "TRADE"); // пусто
	TextDrawLetterSize(inventory_TD[41], 0.1286, 0.9279);
	TextDrawTextSize(inventory_TD[41], 10.0000, 49.0000);
	TextDrawAlignment(inventory_TD[41], 2);
	TextDrawColor(inventory_TD[41], -1);
	TextDrawUseBox(inventory_TD[41], 1);
	TextDrawBoxColor(inventory_TD[41], 0);
	TextDrawBackgroundColor(inventory_TD[41], 255);
	TextDrawFont(inventory_TD[41], 2);
	TextDrawSetProportional(inventory_TD[41], 1);
	TextDrawSetShadow(inventory_TD[41], 0);
	TextDrawSetSelectable(inventory_TD[41], true);

	inventory_TD[42] = TextDrawCreate(463.8998, 340.9926, "CLOSE"); // пусто
	TextDrawLetterSize(inventory_TD[42], 0.1286, 0.9279);
	TextDrawTextSize(inventory_TD[42], 10.0000, 49.0000);
	TextDrawAlignment(inventory_TD[42], 2);
	TextDrawColor(inventory_TD[42], -1);
	TextDrawUseBox(inventory_TD[42], 1);
	TextDrawBoxColor(inventory_TD[42], 0);
	TextDrawBackgroundColor(inventory_TD[42], 255);
	TextDrawFont(inventory_TD[42], 2);
	TextDrawSetProportional(inventory_TD[42], 1);
	TextDrawSetShadow(inventory_TD[42], 0);
	TextDrawSetSelectable(inventory_TD[42], true);

	inventory_TD[43] = TextDrawCreate(286.5667, 340.9926, "MENU"); // пусто
	TextDrawLetterSize(inventory_TD[43], 0.1286, 0.9279);
	TextDrawTextSize(inventory_TD[43], 10.0000, 49.0000);
	TextDrawAlignment(inventory_TD[43], 2);
	TextDrawColor(inventory_TD[43], -1);
	TextDrawUseBox(inventory_TD[43], 1);
	TextDrawBoxColor(inventory_TD[43], 0);
	TextDrawBackgroundColor(inventory_TD[43], 255);
	TextDrawFont(inventory_TD[43], 2);
	TextDrawSetProportional(inventory_TD[43], 1);
	TextDrawSetShadow(inventory_TD[43], 0);
	TextDrawSetSelectable(inventory_TD[43], true);

	inventory_TD[44] = TextDrawCreate(325.0000, 315.1181, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[44], 22.0000, 14.0000);
	TextDrawAlignment(inventory_TD[44], 1);
	TextDrawColor(inventory_TD[44], 370810879);
	TextDrawBackgroundColor(inventory_TD[44], 255);
	TextDrawFont(inventory_TD[44], 4);
	TextDrawSetProportional(inventory_TD[44], 0);
	TextDrawSetShadow(inventory_TD[44], 0);

	inventory_TD[45] = TextDrawCreate(407.9667, 319.2662, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[45], 28.5998, 6.0000);
	TextDrawAlignment(inventory_TD[45], 1);
	TextDrawColor(inventory_TD[45], 370810879);
	TextDrawBackgroundColor(inventory_TD[45], 255);
	TextDrawFont(inventory_TD[45], 4);
	TextDrawSetProportional(inventory_TD[45], 0);
	TextDrawSetShadow(inventory_TD[45], 0);

	inventory_TD[46] = TextDrawCreate(406.1333, 319.2590, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[46], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[46], 1);
	TextDrawColor(inventory_TD[46], 370810879);
	TextDrawBackgroundColor(inventory_TD[46], 255);
	TextDrawFont(inventory_TD[46], 4);
	TextDrawSetProportional(inventory_TD[46], 0);
	TextDrawSetShadow(inventory_TD[46], 0);

	inventory_TD[47] = TextDrawCreate(428.2348, 319.2590, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[47], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[47], 1);
	TextDrawColor(inventory_TD[47], 370810879);
	TextDrawBackgroundColor(inventory_TD[47], 255);
	TextDrawFont(inventory_TD[47], 4);
	TextDrawSetProportional(inventory_TD[47], 0);
	TextDrawSetShadow(inventory_TD[47], 0);

	inventory_TD[48] = TextDrawCreate(406.1333, 313.0585, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[48], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[48], 1);
	TextDrawColor(inventory_TD[48], 370810879);
	TextDrawBackgroundColor(inventory_TD[48], 255);
	TextDrawFont(inventory_TD[48], 4);
	TextDrawSetProportional(inventory_TD[48], 0);
	TextDrawSetShadow(inventory_TD[48], 0);

	inventory_TD[49] = TextDrawCreate(428.3345, 313.0585, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(inventory_TD[49], 10.0000, 12.0000);
	TextDrawAlignment(inventory_TD[49], 1);
	TextDrawColor(inventory_TD[49], 370810879);
	TextDrawBackgroundColor(inventory_TD[49], 255);
	TextDrawFont(inventory_TD[49], 4);
	TextDrawSetProportional(inventory_TD[49], 0);
	TextDrawSetShadow(inventory_TD[49], 0);

	inventory_TD[50] = TextDrawCreate(411.6665, 315.1181, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[50], 22.0000, 14.0000);
	TextDrawAlignment(inventory_TD[50], 1);
	TextDrawColor(inventory_TD[50], 370810879);
	TextDrawBackgroundColor(inventory_TD[50], 255);
	TextDrawFont(inventory_TD[50], 4);
	TextDrawSetProportional(inventory_TD[50], 0);
	TextDrawSetShadow(inventory_TD[50], 0);

	inventory_TD[51] = TextDrawCreate(422.3669, 317.7626, "USE"); // пусто
	TextDrawLetterSize(inventory_TD[51], 0.1332, 0.8945);
	TextDrawTextSize(inventory_TD[51], 10.0000, 26.0000);
	TextDrawAlignment(inventory_TD[51], 2);
	TextDrawColor(inventory_TD[51], -1);
	TextDrawUseBox(inventory_TD[51], 1);
	TextDrawBoxColor(inventory_TD[51], 0);
	TextDrawFont(inventory_TD[51], 2);
	TextDrawSetProportional(inventory_TD[51], 1);
	TextDrawSetShadow(inventory_TD[51], 0);
	TextDrawSetSelectable(inventory_TD[51], true);

	inventory_TD[52] = TextDrawCreate(207.2996, 337.5184, "LD_SPAC:white"); // пусто
	TextDrawTextSize(inventory_TD[52], 52.0000, 17.0000);
	TextDrawAlignment(inventory_TD[52], 1);
	TextDrawColor(inventory_TD[52], 168430335);
	TextDrawBackgroundColor(inventory_TD[52], 255);
	TextDrawFont(inventory_TD[52], 4);
	TextDrawSetProportional(inventory_TD[52], 0);
	TextDrawSetShadow(inventory_TD[52], 0);

	inventory_TD[53] = TextDrawCreate(233.8999, 340.9926, "SHOP"); // пусто
	TextDrawLetterSize(inventory_TD[53], 0.1286, 0.9279);
	TextDrawTextSize(inventory_TD[53], 10.0000, 49.0000);
	TextDrawAlignment(inventory_TD[53], 2);
	TextDrawColor(inventory_TD[53], -1);
	TextDrawUseBox(inventory_TD[53], 1);
	TextDrawBoxColor(inventory_TD[53], 0);
	TextDrawBackgroundColor(inventory_TD[53], 255);
	TextDrawFont(inventory_TD[53], 2);
	TextDrawSetProportional(inventory_TD[53], 1);
	TextDrawSetShadow(inventory_TD[53], 0);
	TextDrawSetSelectable(inventory_TD[53], true);


	// ограбление банка
	hack_magaz_TD[0] = TextDrawCreate(206.3332, 103.9776, "LD_SPAC:white"); // ?????
	TextDrawTextSize(hack_magaz_TD[0], 224.0000, 162.0000);
	TextDrawAlignment(hack_magaz_TD[0], 1);
	TextDrawColor(hack_magaz_TD[0], 255);
	TextDrawBackgroundColor(hack_magaz_TD[0], 255);
	TextDrawFont(hack_magaz_TD[0], 4);
	TextDrawSetProportional(hack_magaz_TD[0], 0);
	TextDrawSetShadow(hack_magaz_TD[0], 0);

	hack_magaz_TD[1] = TextDrawCreate(208.3334, 106.0776, "LD_SPAC:white"); // ?????
	TextDrawTextSize(hack_magaz_TD[1], 220.0299, 157.5097);
	TextDrawAlignment(hack_magaz_TD[1], 1);
	TextDrawColor(hack_magaz_TD[1], 168430335);
	TextDrawBackgroundColor(hack_magaz_TD[1], 255);
	TextDrawFont(hack_magaz_TD[1], 4);
	TextDrawSetProportional(hack_magaz_TD[1], 0);
	TextDrawSetShadow(hack_magaz_TD[1], 0);

	hack_magaz_TD[2] = TextDrawCreate(214.5332, 113.0444, "LD_SPAC:white"); // ?????
	TextDrawTextSize(hack_magaz_TD[2], 206.7901, 143.2297);
	TextDrawAlignment(hack_magaz_TD[2], 1);
	TextDrawColor(hack_magaz_TD[2], 255);
	TextDrawBackgroundColor(hack_magaz_TD[2], 255);
	TextDrawFont(hack_magaz_TD[2], 4);
	TextDrawSetProportional(hack_magaz_TD[2], 0);
	TextDrawSetShadow(hack_magaz_TD[2], 0);

	hack_magaz_TD[3] = TextDrawCreate(215.7667, 114.4888, "LD_SPAC:white"); // ?????
	TextDrawTextSize(hack_magaz_TD[3], 204.3397, 140.1199);
	TextDrawAlignment(hack_magaz_TD[3], 1);
	TextDrawColor(hack_magaz_TD[3], 168430335);
	TextDrawBackgroundColor(hack_magaz_TD[3], 255);
	TextDrawFont(hack_magaz_TD[3], 4);
	TextDrawSetProportional(hack_magaz_TD[3], 0);
	TextDrawSetShadow(hack_magaz_TD[3], 0);

	hack_magaz_TD[4] = TextDrawCreate(223.9331, 124.0519, "LD_SPAC:white"); // ?????
	TextDrawTextSize(hack_magaz_TD[4], 188.0000, 120.7398);
	TextDrawAlignment(hack_magaz_TD[4], 1);
	TextDrawColor(hack_magaz_TD[4], -2139062017);
	TextDrawBackgroundColor(hack_magaz_TD[4], 255);
	TextDrawFont(hack_magaz_TD[4], 4);
	TextDrawSetProportional(hack_magaz_TD[4], 0);
	TextDrawSetShadow(hack_magaz_TD[4], 0);

	hack_magaz_TD[5] = TextDrawCreate(224.8332, 125.2518, "LD_SPAC:white"); // ?????
	TextDrawTextSize(hack_magaz_TD[5], 186.0000, 118.7398);
	TextDrawAlignment(hack_magaz_TD[5], 1);
	TextDrawColor(hack_magaz_TD[5], 255);
	TextDrawBackgroundColor(hack_magaz_TD[5], 255);
	TextDrawFont(hack_magaz_TD[5], 4);
	TextDrawSetProportional(hack_magaz_TD[5], 0);
	TextDrawSetShadow(hack_magaz_TD[5], 0);

	hack_magaz_TD[6] = TextDrawCreate(225.8332, 126.4518, "LD_SPAC:white"); // ?????
	TextDrawTextSize(hack_magaz_TD[6], 184.0000, 116.2900);
	TextDrawAlignment(hack_magaz_TD[6], 1);
	TextDrawColor(hack_magaz_TD[6], -2139062017);
	TextDrawBackgroundColor(hack_magaz_TD[6], 255);
	TextDrawFont(hack_magaz_TD[6], 4);
	TextDrawSetProportional(hack_magaz_TD[6], 0);
	TextDrawSetShadow(hack_magaz_TD[6], 0);

	hack_magaz_TD[7] = TextDrawCreate(326.3666, 126.0630, "LD_SPAC:white"); // ?????
	TextDrawTextSize(hack_magaz_TD[7], 1.0000, 118.0000);
	TextDrawAlignment(hack_magaz_TD[7], 1);
	TextDrawColor(hack_magaz_TD[7], 168430335);
	TextDrawBackgroundColor(hack_magaz_TD[7], 255);
	TextDrawFont(hack_magaz_TD[7], 4);
	TextDrawSetProportional(hack_magaz_TD[7], 0);
	TextDrawSetShadow(hack_magaz_TD[7], 0);

	hack_magaz_TD[8] = TextDrawCreate(328.0339, 125.9777, "LD_SPAC:white"); // ?????
	TextDrawTextSize(hack_magaz_TD[8], 83.0000, 116.8497);
	TextDrawAlignment(hack_magaz_TD[8], 1);
	TextDrawColor(hack_magaz_TD[8], 168430335);
	TextDrawBackgroundColor(hack_magaz_TD[8], 255);
	TextDrawFont(hack_magaz_TD[8], 4);
	TextDrawSetProportional(hack_magaz_TD[8], 0);
	TextDrawSetShadow(hack_magaz_TD[8], 0);

	hack_magaz_TD[9] = TextDrawCreate(327.7998, 207.1398, "LD_Beat:Chit"); // ?????
	TextDrawTextSize(hack_magaz_TD[9], 32.0000, 37.0000);
	TextDrawAlignment(hack_magaz_TD[9], 1);
	TextDrawColor(hack_magaz_TD[9], -1061109505);
	TextDrawBackgroundColor(hack_magaz_TD[9], 255);
	TextDrawFont(hack_magaz_TD[9], 4);
	TextDrawSetProportional(hack_magaz_TD[9], 0);
	TextDrawSetShadow(hack_magaz_TD[9], 0);

	hack_magaz_TD[10] = TextDrawCreate(353.3020, 207.1398, "LD_Beat:Chit"); // ?????
	TextDrawTextSize(hack_magaz_TD[10], 32.0000, 37.0000);
	TextDrawAlignment(hack_magaz_TD[10], 1);
	TextDrawColor(hack_magaz_TD[10], -1061109505);
	TextDrawBackgroundColor(hack_magaz_TD[10], 255);
	TextDrawFont(hack_magaz_TD[10], 4);
	TextDrawSetProportional(hack_magaz_TD[10], 0);
	TextDrawSetShadow(hack_magaz_TD[10], 0);

	hack_magaz_TD[11] = TextDrawCreate(378.9035, 207.1398, "LD_Beat:Chit"); // ?????
	TextDrawTextSize(hack_magaz_TD[11], 32.0000, 37.0000);
	TextDrawAlignment(hack_magaz_TD[11], 1);
	TextDrawColor(hack_magaz_TD[11], -1061109505);
	TextDrawBackgroundColor(hack_magaz_TD[11], 255);
	TextDrawFont(hack_magaz_TD[11], 4);
	TextDrawSetProportional(hack_magaz_TD[11], 0);
	TextDrawSetShadow(hack_magaz_TD[11], 0);

	hack_magaz_TD[12] = TextDrawCreate(327.7998, 179.5381, "LD_Beat:Chit"); // ?????
	TextDrawTextSize(hack_magaz_TD[12], 32.0000, 37.0000);
	TextDrawAlignment(hack_magaz_TD[12], 1);
	TextDrawColor(hack_magaz_TD[12], -1061109505);
	TextDrawBackgroundColor(hack_magaz_TD[12], 255);
	TextDrawFont(hack_magaz_TD[12], 4);
	TextDrawSetProportional(hack_magaz_TD[12], 0);
	TextDrawSetShadow(hack_magaz_TD[12], 0);

	hack_magaz_TD[13] = TextDrawCreate(353.3020, 179.5381, "LD_Beat:Chit"); // ?????
	TextDrawTextSize(hack_magaz_TD[13], 32.0000, 37.0000);
	TextDrawAlignment(hack_magaz_TD[13], 1);
	TextDrawColor(hack_magaz_TD[13], -1061109505);
	TextDrawBackgroundColor(hack_magaz_TD[13], 255);
	TextDrawFont(hack_magaz_TD[13], 4);
	TextDrawSetProportional(hack_magaz_TD[13], 0);
	TextDrawSetShadow(hack_magaz_TD[13], 0);

	hack_magaz_TD[14] = TextDrawCreate(378.9035, 179.5381, "LD_Beat:Chit"); // ?????
	TextDrawTextSize(hack_magaz_TD[14], 32.0000, 37.0000);
	TextDrawAlignment(hack_magaz_TD[14], 1);
	TextDrawColor(hack_magaz_TD[14], -1061109505);
	TextDrawBackgroundColor(hack_magaz_TD[14], 255);
	TextDrawFont(hack_magaz_TD[14], 4);
	TextDrawSetProportional(hack_magaz_TD[14], 0);
	TextDrawSetShadow(hack_magaz_TD[14], 0);

	hack_magaz_TD[15] = TextDrawCreate(327.8331, 151.2200, "LD_Beat:Chit"); // ?????
	TextDrawTextSize(hack_magaz_TD[15], 32.0000, 37.0000);
	TextDrawAlignment(hack_magaz_TD[15], 1);
	TextDrawColor(hack_magaz_TD[15], -1061109505);
	TextDrawBackgroundColor(hack_magaz_TD[15], 255);
	TextDrawFont(hack_magaz_TD[15], 4);
	TextDrawSetProportional(hack_magaz_TD[15], 0);
	TextDrawSetShadow(hack_magaz_TD[15], 0);

	hack_magaz_TD[16] = TextDrawCreate(353.3352, 151.2200, "LD_Beat:Chit"); // ?????
	TextDrawTextSize(hack_magaz_TD[16], 32.0000, 37.0000);
	TextDrawAlignment(hack_magaz_TD[16], 1);
	TextDrawColor(hack_magaz_TD[16], -1061109505);
	TextDrawBackgroundColor(hack_magaz_TD[16], 255);
	TextDrawFont(hack_magaz_TD[16], 4);
	TextDrawSetProportional(hack_magaz_TD[16], 0);
	TextDrawSetShadow(hack_magaz_TD[16], 0);

	hack_magaz_TD[17] = TextDrawCreate(378.9367, 151.2200, "LD_Beat:Chit"); // ?????
	TextDrawTextSize(hack_magaz_TD[17], 32.0000, 37.0000);
	TextDrawAlignment(hack_magaz_TD[17], 1);
	TextDrawColor(hack_magaz_TD[17], -1061109505);
	TextDrawBackgroundColor(hack_magaz_TD[17], 255);
	TextDrawFont(hack_magaz_TD[17], 4);
	TextDrawSetProportional(hack_magaz_TD[17], 0);
	TextDrawSetShadow(hack_magaz_TD[17], 0);

	hack_magaz_TD[18] = TextDrawCreate(327.8331, 123.6184, "LD_Beat:Chit"); // ?????
	TextDrawTextSize(hack_magaz_TD[18], 32.0000, 37.0000);
	TextDrawAlignment(hack_magaz_TD[18], 1);
	TextDrawColor(hack_magaz_TD[18], -1061109505);
	TextDrawBackgroundColor(hack_magaz_TD[18], 255);
	TextDrawFont(hack_magaz_TD[18], 4);
	TextDrawSetProportional(hack_magaz_TD[18], 0);
	TextDrawSetShadow(hack_magaz_TD[18], 0);

	hack_magaz_TD[19] = TextDrawCreate(353.3352, 123.6184, "LD_Beat:Chit"); // ?????
	TextDrawTextSize(hack_magaz_TD[19], 32.0000, 37.0000);
	TextDrawAlignment(hack_magaz_TD[19], 1);
	TextDrawColor(hack_magaz_TD[19], -1061109505);
	TextDrawBackgroundColor(hack_magaz_TD[19], 255);
	TextDrawFont(hack_magaz_TD[19], 4);
	TextDrawSetProportional(hack_magaz_TD[19], 0);
	TextDrawSetShadow(hack_magaz_TD[19], 0);

	hack_magaz_TD[20] = TextDrawCreate(378.9367, 123.6184, "LD_Beat:Chit"); // ?????
	TextDrawTextSize(hack_magaz_TD[20], 32.0000, 37.0000);
	TextDrawAlignment(hack_magaz_TD[20], 1);
	TextDrawColor(hack_magaz_TD[20], -1061109505);
	TextDrawBackgroundColor(hack_magaz_TD[20], 255);
	TextDrawFont(hack_magaz_TD[20], 4);
	TextDrawSetProportional(hack_magaz_TD[20], 0);
	TextDrawSetShadow(hack_magaz_TD[20], 0);

	hack_magaz_TD[21] = TextDrawCreate(226.7998, 228.7073, "LD_SPAC:white"); // ?????
	TextDrawTextSize(hack_magaz_TD[21], 98.5401, 12.8399);
	TextDrawAlignment(hack_magaz_TD[21], 1);
	TextDrawColor(hack_magaz_TD[21], 168430335);
	TextDrawBackgroundColor(hack_magaz_TD[21], 255);
	TextDrawFont(hack_magaz_TD[21], 4);
	TextDrawSetProportional(hack_magaz_TD[21], 0);
	TextDrawSetShadow(hack_magaz_TD[21], 0);

	hack_magaz_TD[22] = TextDrawCreate(226.7998, 228.7073, "LD_SPAC:white"); // ?????
	TextDrawTextSize(hack_magaz_TD[22], 98.5401, 12.8399);
	TextDrawAlignment(hack_magaz_TD[22], 1);
	TextDrawColor(hack_magaz_TD[22], 168430335);
	TextDrawBackgroundColor(hack_magaz_TD[22], 255);
	TextDrawFont(hack_magaz_TD[22], 4);
	TextDrawSetProportional(hack_magaz_TD[22], 0);
	TextDrawSetShadow(hack_magaz_TD[22], 0);
	
	hack_magaz_TD[23] = TextDrawCreate(221.7334, 111.0295, ""); // двери
	TextDrawTextSize(hack_magaz_TD[23], 107.0000, 134.0000);
	TextDrawAlignment(hack_magaz_TD[23], 1);
	TextDrawColor(hack_magaz_TD[23], -1);
	TextDrawFont(hack_magaz_TD[23], 5);
	TextDrawBackgroundColor(hack_magaz_TD[23], 0);
	TextDrawSetProportional(hack_magaz_TD[23], 0);
	TextDrawSetShadow(hack_magaz_TD[23], 0);
	TextDrawSetPreviewModel(hack_magaz_TD[23], 19273);
	TextDrawSetPreviewRot(hack_magaz_TD[23], 0.0000, 0.0000, 0.0000, 1.0000);


	// Global speed
    Speed_TD[0] = TextDrawCreate(483.7666, 394.7626, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Speed_TD[0], 49.0000, 12.0000);
	TextDrawAlignment(Speed_TD[0], 1);
	TextDrawColor(Speed_TD[0], 235802367);
	TextDrawBackgroundColor(Speed_TD[0], 255);
	TextDrawFont(Speed_TD[0], 4);
	TextDrawSetProportional(Speed_TD[0], 0);
	TextDrawSetShadow(Speed_TD[0], 0);

	Speed_TD[1] = TextDrawCreate(481.9666, 398.9107, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(Speed_TD[1], 11.0000, 14.0000);
	TextDrawAlignment(Speed_TD[1], 1);
	TextDrawColor(Speed_TD[1], 235802367);
	TextDrawBackgroundColor(Speed_TD[1], 255);
	TextDrawFont(Speed_TD[1], 4);
	TextDrawSetProportional(Speed_TD[1], 0);
	TextDrawSetShadow(Speed_TD[1], 0);

	Speed_TD[2] = TextDrawCreate(488.1664, 406.4888, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Speed_TD[2], 44.5097, 4.0699);
	TextDrawAlignment(Speed_TD[2], 1);
	TextDrawColor(Speed_TD[2], 235802367);
	TextDrawBackgroundColor(Speed_TD[2], 255);
	TextDrawFont(Speed_TD[2], 4);
	TextDrawSetProportional(Speed_TD[2], 0);
	TextDrawSetShadow(Speed_TD[2], 0);

	Speed_TD[3] = TextDrawCreate(491.7665, 413.0144, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Speed_TD[3], 41.0000, 12.0000);
	TextDrawAlignment(Speed_TD[3], 1);
	TextDrawColor(Speed_TD[3], 168430335);
	TextDrawBackgroundColor(Speed_TD[3], 255);
	TextDrawFont(Speed_TD[3], 4);
	TextDrawSetProportional(Speed_TD[3], 0);
	TextDrawSetShadow(Speed_TD[3], 0);

	Speed_TD[4] = TextDrawCreate(485.6665, 413.4443, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(Speed_TD[4], 11.0000, 14.0000);
	TextDrawAlignment(Speed_TD[4], 1);
	TextDrawColor(Speed_TD[4], 168430335);
	TextDrawBackgroundColor(Speed_TD[4], 255);
	TextDrawFont(Speed_TD[4], 4);
	TextDrawSetProportional(Speed_TD[4], 0);
	TextDrawSetShadow(Speed_TD[4], 0);

	Speed_TD[5] = TextDrawCreate(487.6664, 413.0144, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Speed_TD[5], 43.0000, 8.0000);
	TextDrawAlignment(Speed_TD[5], 1);
	TextDrawColor(Speed_TD[5], 168430335);
	TextDrawBackgroundColor(Speed_TD[5], 255);
	TextDrawFont(Speed_TD[5], 4);
	TextDrawSetProportional(Speed_TD[5], 0);
	TextDrawSetShadow(Speed_TD[5], 0);

	Speed_TD[6] = TextDrawCreate(569.3001, 394.5628, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Speed_TD[6], 49.0000, 16.0000);
	TextDrawAlignment(Speed_TD[6], 1);
	TextDrawColor(Speed_TD[6], 235802367);
	TextDrawBackgroundColor(Speed_TD[6], 255);
	TextDrawFont(Speed_TD[6], 4);
	TextDrawSetProportional(Speed_TD[6], 0);
	TextDrawSetShadow(Speed_TD[6], 0);

	Speed_TD[7] = TextDrawCreate(569.7664, 412.9147, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Speed_TD[7], 41.0000, 12.0000);
	TextDrawAlignment(Speed_TD[7], 1);
	TextDrawColor(Speed_TD[7], 168430335);
	TextDrawBackgroundColor(Speed_TD[7], 255);
	TextDrawFont(Speed_TD[7], 4);
	TextDrawSetProportional(Speed_TD[7], 0);
	TextDrawSetShadow(Speed_TD[7], 0);

	Speed_TD[8] = TextDrawCreate(612.6002, 398.7221, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(Speed_TD[8], 11.0000, 14.0000);
	TextDrawAlignment(Speed_TD[8], 1);
	TextDrawColor(Speed_TD[8], 235802367);
	TextDrawBackgroundColor(Speed_TD[8], 255);
	TextDrawFont(Speed_TD[8], 4);
	TextDrawSetProportional(Speed_TD[8], 0);
	TextDrawSetShadow(Speed_TD[8], 0);

	Speed_TD[9] = TextDrawCreate(605.0999, 413.3738, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(Speed_TD[9], 11.0000, 14.0000);
	TextDrawAlignment(Speed_TD[9], 1);
	TextDrawColor(Speed_TD[9], 168430335);
	TextDrawBackgroundColor(Speed_TD[9], 255);
	TextDrawFont(Speed_TD[9], 4);
	TextDrawSetProportional(Speed_TD[9], 0);
	TextDrawSetShadow(Speed_TD[9], 0);

	Speed_TD[10] = TextDrawCreate(579.0999, 394.7626, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Speed_TD[10], 42.6399, 10.7398);
	TextDrawAlignment(Speed_TD[10], 1);
	TextDrawColor(Speed_TD[10], 235802367);
	TextDrawBackgroundColor(Speed_TD[10], 255);
	TextDrawFont(Speed_TD[10], 4);
	TextDrawSetProportional(Speed_TD[10], 0);
	TextDrawSetShadow(Speed_TD[10], 0);

	Speed_TD[11] = TextDrawCreate(571.7332, 413.0147, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Speed_TD[11], 42.5699, 7.0000);
	TextDrawAlignment(Speed_TD[11], 1);
	TextDrawColor(Speed_TD[11], 168430335);
	TextDrawBackgroundColor(Speed_TD[11], 255);
	TextDrawFont(Speed_TD[11], 4);
	TextDrawSetProportional(Speed_TD[11], 0);
	TextDrawSetShadow(Speed_TD[11], 0);

	Speed_TD[12] = TextDrawCreate(534.0332, 388.9554, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Speed_TD[12], 34.0000, 41.0000);
	TextDrawAlignment(Speed_TD[12], 1);
	TextDrawColor(Speed_TD[12], 8388607);
	TextDrawBackgroundColor(Speed_TD[12], 255);
	TextDrawFont(Speed_TD[12], 4);
	TextDrawSetProportional(Speed_TD[12], 0);
	TextDrawSetShadow(Speed_TD[12], 0);

	Speed_TD[13] = TextDrawCreate(532.4332, 382.3182, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(Speed_TD[13], 10.0000, 13.0000);
	TextDrawAlignment(Speed_TD[13], 1);
	TextDrawColor(Speed_TD[13], 8388607);
	TextDrawBackgroundColor(Speed_TD[13], 255);
	TextDrawFont(Speed_TD[13], 4);
	TextDrawSetProportional(Speed_TD[13], 0);
	TextDrawSetShadow(Speed_TD[13], 0);

	Speed_TD[14] = TextDrawCreate(559.7666, 422.9703, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(Speed_TD[14], 10.0000, 13.0000);
	TextDrawAlignment(Speed_TD[14], 1);
	TextDrawColor(Speed_TD[14], 8388607);
	TextDrawBackgroundColor(Speed_TD[14], 255);
	TextDrawFont(Speed_TD[14], 4);
	TextDrawSetProportional(Speed_TD[14], 0);
	TextDrawSetShadow(Speed_TD[14], 0);

	Speed_TD[15] = TextDrawCreate(538.0665, 384.2777, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Speed_TD[15], 30.0000, 33.0000);
	TextDrawAlignment(Speed_TD[15], 1);
	TextDrawColor(Speed_TD[15], 8388607);
	TextDrawBackgroundColor(Speed_TD[15], 255);
	TextDrawFont(Speed_TD[15], 4);
	TextDrawSetProportional(Speed_TD[15], 0);
	TextDrawSetShadow(Speed_TD[15], 0);

	Speed_TD[16] = TextDrawCreate(534.0665, 424.9295, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Speed_TD[16], 31.0000, 8.8297);
	TextDrawAlignment(Speed_TD[16], 1);
	TextDrawColor(Speed_TD[16], 8388607);
	TextDrawBackgroundColor(Speed_TD[16], 255);
	TextDrawFont(Speed_TD[16], 4);
	TextDrawSetProportional(Speed_TD[16], 0);
	TextDrawSetShadow(Speed_TD[16], 0);

	Speed_TD[17] = TextDrawCreate(532.6333, 407.6072, "particle:lamp_shad_64"); // пусто
	TextDrawTextSize(Speed_TD[17], 36.0000, 26.0000);
	TextDrawAlignment(Speed_TD[17], 1);
	TextDrawColor(Speed_TD[17], -152);
	TextDrawBackgroundColor(Speed_TD[17], 255);
	TextDrawFont(Speed_TD[17], 4);
	TextDrawSetProportional(Speed_TD[17], 0);
	TextDrawSetShadow(Speed_TD[17], 0);

	Speed_TD[18] = TextDrawCreate(535.5335, 407.5072, "particle:lamp_shad_64"); // пусто
	TextDrawTextSize(Speed_TD[18], 34.0000, -23.0000);
	TextDrawAlignment(Speed_TD[18], 1);
	TextDrawColor(Speed_TD[18], -152);
	TextDrawBackgroundColor(Speed_TD[18], 255);
	TextDrawFont(Speed_TD[18], 4);
	TextDrawSetProportional(Speed_TD[18], 0);
	TextDrawSetShadow(Speed_TD[18], 0);

	Speed_TD[19] = TextDrawCreate(569.7661, 398.7106, "particle:lamp_shad_64"); // пусто
	TextDrawTextSize(Speed_TD[19], 51.0000, 11.7798);
	TextDrawAlignment(Speed_TD[19], 1);
	TextDrawColor(Speed_TD[19], 8388392);
	TextDrawBackgroundColor(Speed_TD[19], 255);
	TextDrawFont(Speed_TD[19], 4);
	TextDrawSetProportional(Speed_TD[19], 0);
	TextDrawSetShadow(Speed_TD[19], 0);

	Speed_TD[20] = TextDrawCreate(569.7661, 408.8114, "particle:lamp_shad_64"); // пусто
	TextDrawTextSize(Speed_TD[20], 52.0000, -14.0000);
	TextDrawAlignment(Speed_TD[20], 1);
	TextDrawColor(Speed_TD[20], 8388392);
	TextDrawBackgroundColor(Speed_TD[20], 255);
	TextDrawFont(Speed_TD[20], 4);
	TextDrawSetProportional(Speed_TD[20], 0);
	TextDrawSetShadow(Speed_TD[20], 0);

	Speed_TD[21] = TextDrawCreate(485.0997, 398.7109, "particle:lamp_shad_64"); // пусто
	TextDrawTextSize(Speed_TD[21], 51.0000, 11.7798);
	TextDrawAlignment(Speed_TD[21], 1);
	TextDrawColor(Speed_TD[21], 8388392);
	TextDrawBackgroundColor(Speed_TD[21], 255);
	TextDrawFont(Speed_TD[21], 4);
	TextDrawSetProportional(Speed_TD[21], 0);
	TextDrawSetShadow(Speed_TD[21], 0);

	Speed_TD[22] = TextDrawCreate(485.0997, 408.8114, "particle:lamp_shad_64"); // пусто
	TextDrawTextSize(Speed_TD[22], 52.0000, -14.0000);
	TextDrawAlignment(Speed_TD[22], 1);
	TextDrawColor(Speed_TD[22], 8388392);
	TextDrawBackgroundColor(Speed_TD[22], 255);
	TextDrawFont(Speed_TD[22], 4);
	TextDrawSetProportional(Speed_TD[22], 0);
	TextDrawSetShadow(Speed_TD[22], 0);

	Speed_TD[23] = TextDrawCreate(551.5333, 412.3703, "KM/H"); // пусто
	TextDrawLetterSize(Speed_TD[23], 0.1642, 0.7702);
	TextDrawAlignment(Speed_TD[23], 2);
	TextDrawColor(Speed_TD[23], -1);
	TextDrawBackgroundColor(Speed_TD[23], 255);
	TextDrawFont(Speed_TD[23], 1);
	TextDrawSetProportional(Speed_TD[23], 1);
	TextDrawSetShadow(Speed_TD[23], 0);

	Speed_TD[24] = TextDrawCreate(576.0009, 416.3629, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Speed_TD[24], 3.1698, 6.0000);
	TextDrawAlignment(Speed_TD[24], 1);
	TextDrawColor(Speed_TD[24], -1);
	TextDrawBackgroundColor(Speed_TD[24], 255);
	TextDrawFont(Speed_TD[24], 4);
	TextDrawSetProportional(Speed_TD[24], 0);
	TextDrawSetShadow(Speed_TD[24], 0);

	Speed_TD[25] = TextDrawCreate(576.4677, 416.7630, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Speed_TD[25], 2.1698, 2.0000);
	TextDrawAlignment(Speed_TD[25], 1);
	TextDrawColor(Speed_TD[25], 168430335);
	TextDrawBackgroundColor(Speed_TD[25], 255);
	TextDrawFont(Speed_TD[25], 4);
	TextDrawSetProportional(Speed_TD[25], 0);
	TextDrawSetShadow(Speed_TD[25], 0);

	Speed_TD[26] = TextDrawCreate(579.6994, 416.2889, "C"); // пусто
	TextDrawLetterSize(Speed_TD[26], -0.0560, 0.5960);
	TextDrawAlignment(Speed_TD[26], 1);
	TextDrawColor(Speed_TD[26], -1);
	TextDrawBackgroundColor(Speed_TD[26], 255);
	TextDrawFont(Speed_TD[26], 1);
	TextDrawSetProportional(Speed_TD[26], 1);
	TextDrawSetShadow(Speed_TD[26], 0);

	Speed_TD[27] = TextDrawCreate(483.4331, 401.3554, "L"); // пусто
	TextDrawLetterSize(Speed_TD[27], 0.2284, -0.9800);
	TextDrawAlignment(Speed_TD[27], 1);
	TextDrawColor(Speed_TD[27], 8388607);
	TextDrawBackgroundColor(Speed_TD[27], 255);
	TextDrawFont(Speed_TD[27], 2);
	TextDrawSetProportional(Speed_TD[27], 1);
	TextDrawSetShadow(Speed_TD[27], 0);

	Speed_TD[28] = TextDrawCreate(622.3999, 401.5851, "L"); // пусто
	TextDrawLetterSize(Speed_TD[28], -0.2363, -0.9965);
	TextDrawAlignment(Speed_TD[28], 1);
	TextDrawColor(Speed_TD[28], 8388607);
	TextDrawBackgroundColor(Speed_TD[28], 255);
	TextDrawFont(Speed_TD[28], 2);
	TextDrawSetProportional(Speed_TD[28], 1);
	TextDrawSetShadow(Speed_TD[28], 0);

	Speed_TD[29] = TextDrawCreate(595.3333, 396.9927, "E_____L_____D"); // пусто
	TextDrawLetterSize(Speed_TD[29], 0.1632, 0.8284);
	TextDrawAlignment(Speed_TD[29], 2);
	TextDrawColor(Speed_TD[29], -1);
	TextDrawBackgroundColor(Speed_TD[29], 255);
	TextDrawFont(Speed_TD[29], 1);
	TextDrawSetProportional(Speed_TD[29], 1);
	TextDrawSetShadow(Speed_TD[29], 0);

	Speed_TD[30] = TextDrawCreate(529.7664, 388.4555, "LD_Beat:CHIT"); // пусто
	TextDrawTextSize(Speed_TD[30], 3.0000, 4.0000);
	TextDrawAlignment(Speed_TD[30], 1);
	TextDrawColor(Speed_TD[30], 8388607);
	TextDrawBackgroundColor(Speed_TD[30], 255);
	TextDrawFont(Speed_TD[30], 4);
	TextDrawSetProportional(Speed_TD[30], 0);
	TextDrawSetShadow(Speed_TD[30], 0);

	Speed_TD[31] = TextDrawCreate(530.9331, 383.4776, "LD_Beat:CHIT"); // пусто
	TextDrawTextSize(Speed_TD[31], 3.0000, 4.0000);
	TextDrawAlignment(Speed_TD[31], 1);
	TextDrawColor(Speed_TD[31], 8388607);
	TextDrawBackgroundColor(Speed_TD[31], 255);
	TextDrawFont(Speed_TD[31], 4);
	TextDrawSetProportional(Speed_TD[31], 0);
	TextDrawSetShadow(Speed_TD[31], 0);

	Speed_TD[32] = TextDrawCreate(534.2664, 380.1593, "LD_Beat:CHIT"); // пусто
	TextDrawTextSize(Speed_TD[32], 3.0000, 4.0000);
	TextDrawAlignment(Speed_TD[32], 1);
	TextDrawColor(Speed_TD[32], 8388607);
	TextDrawBackgroundColor(Speed_TD[32], 255);
	TextDrawFont(Speed_TD[32], 4);
	TextDrawSetProportional(Speed_TD[32], 0);
	TextDrawSetShadow(Speed_TD[32], 0);

	Speed_TD[33] = TextDrawCreate(568.9332, 426.6184, "LD_Beat:CHIT"); // пусто
	TextDrawTextSize(Speed_TD[33], 3.0000, 4.0000);
	TextDrawAlignment(Speed_TD[33], 1);
	TextDrawColor(Speed_TD[33], 8388607);
	TextDrawBackgroundColor(Speed_TD[33], 255);
	TextDrawFont(Speed_TD[33], 4);
	TextDrawSetProportional(Speed_TD[33], 0);
	TextDrawSetShadow(Speed_TD[33], 0);

	Speed_TD[34] = TextDrawCreate(567.5999, 431.5963, "LD_Beat:CHIT"); // пусто
	TextDrawTextSize(Speed_TD[34], 3.0000, 4.0000);
	TextDrawAlignment(Speed_TD[34], 1);
	TextDrawColor(Speed_TD[34], 8388607);
	TextDrawBackgroundColor(Speed_TD[34], 255);
	TextDrawFont(Speed_TD[34], 4);
	TextDrawSetProportional(Speed_TD[34], 0);
	TextDrawSetShadow(Speed_TD[34], 0);

	Speed_TD[35] = TextDrawCreate(563.5996, 433.6556, "LD_Beat:CHIT"); // пусто
	TextDrawTextSize(Speed_TD[35], 3.0000, 4.0000);
	TextDrawAlignment(Speed_TD[35], 1);
	TextDrawColor(Speed_TD[35], 8388607);
	TextDrawBackgroundColor(Speed_TD[35], 255);
	TextDrawFont(Speed_TD[35], 4);
	TextDrawSetProportional(Speed_TD[35], 0);
	TextDrawSetShadow(Speed_TD[35], 0);

	Speed_TD[36] = TextDrawCreate(490.0000, 414.6740, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(Speed_TD[36], 4.0000, 6.0000);
	TextDrawAlignment(Speed_TD[36], 1);
	TextDrawColor(Speed_TD[36], -1);
	TextDrawBackgroundColor(Speed_TD[36], 255);
	TextDrawFont(Speed_TD[36], 4);
	TextDrawSetProportional(Speed_TD[36], 0);
	TextDrawSetShadow(Speed_TD[36], 0);

	Speed_TD[37] = TextDrawCreate(492.1000, 414.6740, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(Speed_TD[37], 4.0000, 6.0000);
	TextDrawAlignment(Speed_TD[37], 1);
	TextDrawColor(Speed_TD[37], -1);
	TextDrawBackgroundColor(Speed_TD[37], 255);
	TextDrawFont(Speed_TD[37], 4);
	TextDrawSetProportional(Speed_TD[37], 0);
	TextDrawSetShadow(Speed_TD[37], 0);

	Speed_TD[38] = TextDrawCreate(490.7001, 416.8887, "V"); // пусто
	TextDrawLetterSize(Speed_TD[38], 0.1879, 0.6251);
	TextDrawAlignment(Speed_TD[38], 1);
	TextDrawColor(Speed_TD[38], -1);
	TextDrawBackgroundColor(Speed_TD[38], 255);
	TextDrawFont(Speed_TD[38], 2);
	TextDrawSetProportional(Speed_TD[38], 1);
	TextDrawSetShadow(Speed_TD[38], 0);

	Speed_TD[39] = TextDrawCreate(492.6665, 418.8222, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Speed_TD[39], 1.4900, 2.0000);
	TextDrawAlignment(Speed_TD[39], 1);
	TextDrawColor(Speed_TD[39], -1);
	TextDrawBackgroundColor(Speed_TD[39], 255);
	TextDrawFont(Speed_TD[39], 4);
	TextDrawSetProportional(Speed_TD[39], 0);
	TextDrawSetShadow(Speed_TD[39], 0);
	//

	buy_skins[0] = TextDrawCreate(258.666656, 423.608856, "LD_SPAC:white");
	TextDrawLetterSize(buy_skins[0], 0.000000, 0.000000);
	TextDrawTextSize(buy_skins[0], 40.444458, 14.933320);
	TextDrawAlignment(buy_skins[0], 1);
	TextDrawColor(buy_skins[0], -668447489);
	TextDrawSetShadow(buy_skins[0], 0);
	TextDrawSetOutline(buy_skins[0], 0);
	TextDrawFont(buy_skins[0], 4);
	TextDrawSetSelectable(buy_skins[0], true);

	buy_skins[1] = TextDrawCreate(322.333404, 423.115509, "LD_SPAC:white");
	TextDrawLetterSize(buy_skins[1], 0.000000, 0.000000);
	TextDrawTextSize(buy_skins[1], 40.444458, 14.933320);
	TextDrawAlignment(buy_skins[1], 1);
	TextDrawColor(buy_skins[1], -668447489);
	TextDrawSetShadow(buy_skins[1], 0);
	TextDrawSetOutline(buy_skins[1], 0);
	TextDrawFont(buy_skins[1], 4);
	TextDrawSetSelectable(buy_skins[1], true);

	buy_skins[2] = TextDrawCreate(268.666656, 424.115631, "buy");
	TextDrawLetterSize(buy_skins[2], 0.217999, 1.316264);
	TextDrawAlignment(buy_skins[2], 1);
	TextDrawColor(buy_skins[2], -1);
	TextDrawSetShadow(buy_skins[2], 1);
	TextDrawSetOutline(buy_skins[2], 0);
	TextDrawBackgroundColor(buy_skins[2], 255);
	TextDrawFont(buy_skins[2], 2);
	TextDrawSetProportional(buy_skins[2], 1);

	buy_skins[3] = TextDrawCreate(332.777709, 424.120086, "exit");
	TextDrawLetterSize(buy_skins[3], 0.217999, 1.316264);
	TextDrawAlignment(buy_skins[3], 1);
	TextDrawColor(buy_skins[3], -1);
	TextDrawSetShadow(buy_skins[3], 1);
	TextDrawSetOutline(buy_skins[3], 0);
	TextDrawBackgroundColor(buy_skins[3], 255);
	TextDrawFont(buy_skins[3], 2);
	TextDrawSetProportional(buy_skins[3], 1);

	buy_skins[4] = TextDrawCreate(364.222229, 406.691101, "usebox");
	TextDrawLetterSize(buy_skins[4], 0.000000, 1.066050);
	TextDrawTextSize(buy_skins[4], 256.666656, 0.000000);
	TextDrawAlignment(buy_skins[4], 1);
	TextDrawColor(buy_skins[4], 0);
	TextDrawUseBox(buy_skins[4], true);
	TextDrawBoxColor(buy_skins[4], -668447594);
	TextDrawSetShadow(buy_skins[4], 0);
	TextDrawSetOutline(buy_skins[4], 0);
	TextDrawFont(buy_skins[4], 0);

	buy_skins[5] = TextDrawCreate(361.333221, 398.720062, "LD_BEAT:chit");
	TextDrawLetterSize(buy_skins[5], 0.009777, 0.199110);
	TextDrawTextSize(buy_skins[5], 39.555564, 45.297744);
	TextDrawAlignment(buy_skins[5], 1);
	TextDrawColor(buy_skins[5], -668447489);
	TextDrawSetShadow(buy_skins[5], 0);
	TextDrawSetOutline(buy_skins[5], 0);
	TextDrawFont(buy_skins[5], 4);
	TextDrawSetSelectable(buy_skins[5], true);
	TextDrawSetPreviewModel(buy_skins[5], 19134);
	TextDrawSetPreviewRot(buy_skins[5], 100.000000, -100.000000, 0.000000, 1.000000);

	buy_skins[6] = TextDrawCreate(220.555435, 398.724517, "LD_BEAT:chit");
	TextDrawLetterSize(buy_skins[6], 0.009777, 0.199111);
	TextDrawTextSize(buy_skins[6], 39.555564, 45.297744);
	TextDrawAlignment(buy_skins[6], 1);
	TextDrawColor(buy_skins[6], -668447489);
	TextDrawSetShadow(buy_skins[6], 0);
	TextDrawSetOutline(buy_skins[6], 0);
	TextDrawFont(buy_skins[6], 4);
	TextDrawSetSelectable(buy_skins[6], true);
	TextDrawSetPreviewModel(buy_skins[6], 19134);
	TextDrawSetPreviewRot(buy_skins[6], 100.000000, -100.000000, 0.000000, 1.000000);

	buy_skins[7] = TextDrawCreate(376.889007, 409.191223, ">");
	TextDrawLetterSize(buy_skins[7], 0.494888, 2.754842);
	TextDrawAlignment(buy_skins[7], 1);
	TextDrawColor(buy_skins[7], -1);
	TextDrawSetShadow(buy_skins[7], 1);
	TextDrawSetOutline(buy_skins[7], 0);
	TextDrawBackgroundColor(buy_skins[7], 255);
	TextDrawFont(buy_skins[7], 2);
	TextDrawSetProportional(buy_skins[7], 1);

	buy_skins[8] = TextDrawCreate(233.000167, 408.697814, "<");
	TextDrawLetterSize(buy_skins[8], 0.494888, 2.754842);
	TextDrawAlignment(buy_skins[8], 1);
	TextDrawColor(buy_skins[8], -1);
	TextDrawSetShadow(buy_skins[8], 1);
	TextDrawSetOutline(buy_skins[8], 0);
	TextDrawBackgroundColor(buy_skins[8], 255);
	TextDrawFont(buy_skins[8], 2);
	TextDrawSetProportional(buy_skins[8], 1);


	skill_td[0] = TextDrawCreate(570.444763, 349.944427, "usebox");
	TextDrawLetterSize(skill_td[0], 0.000000, 3.724817);
	TextDrawTextSize(skill_td[0], 454.444458, 0.000000);
	TextDrawAlignment(skill_td[0], 1);
	TextDrawColor(skill_td[0], 0);
	TextDrawUseBox(skill_td[0], true);
	TextDrawBoxColor(skill_td[0], 471604424);
	TextDrawSetShadow(skill_td[0], 0);
	TextDrawSetOutline(skill_td[0], 0);
	TextDrawFont(skill_td[0], 0);

	skill_td[1] = TextDrawCreate(570.555847, 349.948852, "usebox");
	TextDrawLetterSize(skill_td[1], 0.000000, 0.880373);
	TextDrawTextSize(skill_td[1], 454.444458, 0.000000);
	TextDrawAlignment(skill_td[1], 1);
	TextDrawColor(skill_td[1], 0);
	TextDrawUseBox(skill_td[1], true);
	TextDrawBoxColor(skill_td[1], -2036081409);
	TextDrawSetShadow(skill_td[1], 0);
	TextDrawSetOutline(skill_td[1], 0);
	TextDrawFont(skill_td[1], 0);

	skill_td[2] = TextDrawCreate(476.110992, 348.448944, "skill information");
	TextDrawLetterSize(skill_td[2], 0.194444, 1.142044);
	TextDrawAlignment(skill_td[2], 1);
	TextDrawColor(skill_td[2], 471604479);
	TextDrawSetShadow(skill_td[2], 0);
	TextDrawSetOutline(skill_td[2], 0);
	TextDrawBackgroundColor(skill_td[2], 51);
	TextDrawFont(skill_td[2], 2);
	TextDrawSetProportional(skill_td[2], 1);

	skill_td[3] = TextDrawCreate(570.666870, 386.291137, "usebox");
	TextDrawLetterSize(skill_td[3], 0.000000, -0.319626);
	TextDrawTextSize(skill_td[3], 454.444396, 0.000000);
	TextDrawAlignment(skill_td[3], 1);
	TextDrawColor(skill_td[3], 0);
	TextDrawUseBox(skill_td[3], true);
	TextDrawBoxColor(skill_td[3], -2036081409);
	TextDrawSetShadow(skill_td[3], 0);
	TextDrawSetOutline(skill_td[3], 0);
	TextDrawFont(skill_td[3], 0);

	AnimDraw = TextDrawCreate(401.00, 419.00, "~w~Press ~g~ENTER~w~ to stop animation");
	TextDrawBackgroundColor(AnimDraw, 0x000000FF);
	TextDrawFont(AnimDraw, 2);
	TextDrawSetOutline(AnimDraw, 1);
	TextDrawLetterSize(AnimDraw, 0.300000, 1.250000);
	TextDrawColor(AnimDraw, 0x0095B6FF);
	TextDrawSetProportional(AnimDraw, 1);

	HungerFon[0] = TextDrawCreate(547.500000, 58.000000, "_");
	TextDrawBackgroundColor(HungerFon[0], 255);
	TextDrawFont(HungerFon[0], 1);
	TextDrawLetterSize(HungerFon[0], 0.500000, 0.399999);
	TextDrawColor(HungerFon[0], -1);
	TextDrawSetOutline(HungerFon[0], 0);
	TextDrawSetProportional(HungerFon[0], 1);
	TextDrawSetShadow(HungerFon[0], 1);
	TextDrawUseBox(HungerFon[0], 1);
	TextDrawBoxColor(HungerFon[0], 255);
	TextDrawTextSize(HungerFon[0], 606.000000, 40.000000);
	TextDrawSetSelectable(HungerFon[0], 0);

	HungerFon[1] = TextDrawCreate(549.500000, 60.000000, "_");
	TextDrawBackgroundColor(HungerFon[1], 255);
	TextDrawFont(HungerFon[1], 1); //
	TextDrawLetterSize(HungerFon[1], 0.490000, -0.000000);
	TextDrawColor(HungerFon[1], -1);
	TextDrawSetOutline(HungerFon[1], 0);
	TextDrawSetProportional(HungerFon[1], 1);
	TextDrawSetShadow(HungerFon[1], 1);
	TextDrawUseBox(HungerFon[1], 1);
	TextDrawBoxColor(HungerFon[1], 1787344480);
	TextDrawTextSize(HungerFon[1], 604.000000, 40.000000);
	TextDrawSetSelectable(HungerFon[1], 0);

	YandNsysTD[0] = TextDrawCreate(356.507568, 318.333465, "usebox");
	TextDrawLetterSize(YandNsysTD[0], -0.023426, 4.082155);
	TextDrawTextSize(YandNsysTD[0], 277.000000, 0.000000);
	TextDrawAlignment(YandNsysTD[0], 1);
	TextDrawColor(YandNsysTD[0], 0);
	TextDrawUseBox(YandNsysTD[0], true);
	TextDrawBoxColor(YandNsysTD[0], 102);
	TextDrawSetShadow(YandNsysTD[0], 0);
	TextDrawSetOutline(YandNsysTD[0], 0);
	TextDrawFont(YandNsysTD[0], 0);

	YandNsysTD[1] = TextDrawCreate(285.415283, 334.916687, "LD_SPAC:white");
	TextDrawLetterSize(YandNsysTD[1], 0.000000, 0.000000);
	TextDrawTextSize(YandNsysTD[1], 63.000000, 0.583343);
	TextDrawAlignment(YandNsysTD[1], 1);
	TextDrawColor(YandNsysTD[1], -1061109505);
	TextDrawSetShadow(YandNsysTD[1], 0);
	TextDrawSetOutline(YandNsysTD[1], 0);
	TextDrawFont(YandNsysTD[1], 4);

	YandNsysTD[2] = TextDrawCreate(285.415283, 346.999816, "LD_SPAC:white");
	TextDrawLetterSize(YandNsysTD[2], 0.000000, 0.000000);
	TextDrawTextSize(YandNsysTD[2], 63.000000, 0.583343);
	TextDrawAlignment(YandNsysTD[2], 1);
	TextDrawColor(YandNsysTD[2], -1061109505);
	TextDrawSetShadow(YandNsysTD[2], 0);
	TextDrawSetOutline(YandNsysTD[2], 0);
	TextDrawFont(YandNsysTD[2], 4);

	Bizwar[0] = TextDrawCreate(95.00000, 290.00000, "__");
	TextDrawBackgroundColor(Bizwar[0], 255);
	TextDrawAlignment(Bizwar[0], 2);
	TextDrawLetterSize(Bizwar[0], 0.330000, 1.000000);
	TextDrawFont(Bizwar[0],2);
	TextDrawColor(Bizwar[0], CGREEN);
	TextDrawSetOutline(Bizwar[0],1);
	TextDrawSetProportional(Bizwar[0],1);
	TextDrawSetShadow(Bizwar[0],1);
	//
	Bizwar[2] = TextDrawCreate(95.00000, 300.00000, "__");
	TextDrawBackgroundColor(Bizwar[2], 255);
	TextDrawAlignment(Bizwar[2], 2);
	TextDrawLetterSize(Bizwar[2], 0.330000, 1.000000);
	TextDrawFont(Bizwar[2],2);
	TextDrawColor(Bizwar[2], CGREEN);
	TextDrawSetOutline(Bizwar[2],1);
	TextDrawSetProportional(Bizwar[2],1);
	TextDrawSetShadow(Bizwar[2],1);
	//
	Bizwar[1] = TextDrawCreate(95.00000, 310.00000, "__");
	TextDrawBackgroundColor(Bizwar[1], 255);
	TextDrawAlignment(Bizwar[1], 2);
	TextDrawLetterSize(Bizwar[1], 0.330000, 1.000000);
	TextDrawFont(Bizwar[1],2);
	TextDrawColor(Bizwar[1], CGREEN);
	TextDrawSetOutline(Bizwar[1],1);
	TextDrawSetProportional(Bizwar[1],1);
	TextDrawSetShadow(Bizwar[1],1);

	new Float:dice_area_pos[4][3]={{300.619750, -116.679603, 1035.475952},{300.619750, -120.979476, 1035.475952},
		{300.619750, -125.139434, 1035.475952},{294.399932, -125.199684, 1035.475952}};
	
	Casino_TD[Casino_TD_Box] = TextDrawCreate(612.014221, 161.916656, "usebox");
	TextDrawLetterSize(Casino_TD[Casino_TD_Box], 0.000000, 26.097074);
	TextDrawTextSize(Casino_TD[Casino_TD_Box], 457.150817, 0.000000);
	TextDrawAlignment(Casino_TD[Casino_TD_Box], 1);
	TextDrawColor(Casino_TD[Casino_TD_Box], 0);
	TextDrawUseBox(Casino_TD[Casino_TD_Box], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Box], 877622186);
	TextDrawSetShadow(Casino_TD[Casino_TD_Box], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Box], 0);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Box], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Box], 0);
	new casino_formatted_string[500];
	for(new c = 0; c < MAX_TABLES_DICE; c++) {
		format(casino_formatted_string,500,CASINO_TEXT_STRING, c+1, "-", "-", "-", "-", "-", "-", 0, 0, "Игра не начата");
		InfoDice[c][dice_text] = CreateDynamic3DTextLabel(casino_formatted_string,-1,dice_area_pos[c][0],dice_area_pos[c][1],dice_area_pos[c][2]+0.8,3.0);
		InfoDice[c][dice_area] = CreateDynamicSphere(dice_area_pos[c][0],dice_area_pos[c][1],dice_area_pos[c][2],2.0);
		format(casino_formatted_string,144,"Table %d", c+1);
		Casino_TD[Casino_TD_TableName][c] = TextDrawCreate(534.582946, 162.750000, casino_formatted_string);
		TextDrawLetterSize(Casino_TD[Casino_TD_TableName][c], 0.449999, 1.600000);
		TextDrawTextSize(Casino_TD[Casino_TD_TableName][c], -213.645767, 146.999969);
		TextDrawAlignment(Casino_TD[Casino_TD_TableName][c], 2);
		TextDrawColor(Casino_TD[Casino_TD_TableName][c], -1);
		TextDrawUseBox(Casino_TD[Casino_TD_TableName][c], true);
		TextDrawBoxColor(Casino_TD[Casino_TD_TableName][c], -255913558);
		TextDrawSetShadow(Casino_TD[Casino_TD_TableName][c], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_TableName][c], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_TableName][c], 255);
		TextDrawFont(Casino_TD[Casino_TD_TableName][c], 0);
		TextDrawSetProportional(Casino_TD[Casino_TD_TableName][c], 1);
		///
		Casino_TD[Casino_TD_TableNicks][c] = TextDrawCreate(480.234466, 190.749984, "-~n~-~n~-~n~-~n~-");
		TextDrawLetterSize(Casino_TD[Casino_TD_TableNicks][c], 0.317877, 1.862500);
		TextDrawAlignment(Casino_TD[Casino_TD_TableNicks][c], 1);
		TextDrawColor(Casino_TD[Casino_TD_TableNicks][c], -1);
		TextDrawSetShadow(Casino_TD[Casino_TD_TableNicks][c], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_TableNicks][c], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_TableNicks][c], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_TableNicks][c], 1);
		TextDrawSetProportional(Casino_TD[Casino_TD_TableNicks][c], 1);

		Casino_TD[Casino_TD_TableScore][c] = TextDrawCreate(593.616333, 191.916687, "0~n~0~n~0~n~0~n~0");
		TextDrawLetterSize(Casino_TD[Casino_TD_TableScore][c], 0.444846, 1.815833);
		TextDrawTextSize(Casino_TD[Casino_TD_TableScore][c], 36.544651, 20.416666);
		TextDrawAlignment(Casino_TD[Casino_TD_TableScore][c], 2);
		TextDrawColor(Casino_TD[Casino_TD_TableScore][c], -1);
		TextDrawUseBox(Casino_TD[Casino_TD_TableScore][c], true);
		TextDrawBoxColor(Casino_TD[Casino_TD_TableScore][c], 1149760170);
		TextDrawSetShadow(Casino_TD[Casino_TD_TableScore][c], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_TableScore][c], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_TableScore][c], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_TableScore][c], 3);
		TextDrawSetProportional(Casino_TD[Casino_TD_TableScore][c], 1);

		InfoDice[c][dice_gamer][0] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][1] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][2] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][3] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][4] = INVALID_PLAYER_ID;
		InfoDice[c][dice_score][0] = 0;
		InfoDice[c][dice_score][1] = 0;
		InfoDice[c][dice_score][2] = 0;
		InfoDice[c][dice_score][3] = 0;
		InfoDice[c][dice_score][4] = 0;
		InfoDice[c][dice_stavka] = 0;
		InfoDice[c][dice_bank] = 0;
		InfoDice[c][dice_game_start] = false;
		InfoDice[c][dice_crup] = INVALID_PLAYER_ID;
		UpdateTextCasino(c);
	}

	Casino_TD[Casino_TD_Enum] = TextDrawCreate(464.304626, 192.500000, "1~n~2~n~3~n~4~n~5");
	TextDrawLetterSize(Casino_TD[Casino_TD_Enum], 0.449531, 1.833333);
	TextDrawAlignment(Casino_TD[Casino_TD_Enum], 1);
	TextDrawColor(Casino_TD[Casino_TD_Enum], -1);
	TextDrawSetShadow(Casino_TD[Casino_TD_Enum], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Enum], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Enum], 255);
	TextDrawFont(Casino_TD[Casino_TD_Enum], 3);
	TextDrawSetProportional(Casino_TD[Casino_TD_Enum], 1);

	Casino_TD[Casino_TD_Set_Bet] = TextDrawCreate(534.583007, 329.583190, "SET_BET");
	TextDrawLetterSize(Casino_TD[Casino_TD_Set_Bet], 0.449999, 1.600000);
	TextDrawTextSize(Casino_TD[Casino_TD_Set_Bet], 16.600000, 148.749862);
	TextDrawAlignment(Casino_TD[Casino_TD_Set_Bet], 2);
	TextDrawColor(Casino_TD[Casino_TD_Set_Bet], -1);
	TextDrawUseBox(Casino_TD[Casino_TD_Set_Bet], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Set_Bet], 933650346);
	TextDrawSetShadow(Casino_TD[Casino_TD_Set_Bet], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Set_Bet], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Set_Bet], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Set_Bet], 1);
	TextDrawSetProportional(Casino_TD[Casino_TD_Set_Bet], 1);
	TextDrawSetSelectable(Casino_TD[Casino_TD_Set_Bet], true);

	Casino_TD[Casino_TD_Dice] = TextDrawCreate(534.583007, 352.749877, "DICE");
	TextDrawLetterSize(Casino_TD[Casino_TD_Dice], 0.449999, 1.600000);
	TextDrawTextSize(Casino_TD[Casino_TD_Dice], 16.600000, 148.749862);
	TextDrawAlignment(Casino_TD[Casino_TD_Dice], 2);
	TextDrawColor(Casino_TD[Casino_TD_Dice], -1);
	TextDrawUseBox(Casino_TD[Casino_TD_Dice], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Dice], 933650346);
	TextDrawSetShadow(Casino_TD[Casino_TD_Dice], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Dice], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Dice], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Dice], 1);
	TextDrawSetProportional(Casino_TD[Casino_TD_Dice], 1);
	TextDrawSetSelectable(Casino_TD[Casino_TD_Dice], true);

	Casino_TD[Casino_TD_Exit] = TextDrawCreate(534.583007, 377.083251, "EXIT");
	TextDrawLetterSize(Casino_TD[Casino_TD_Exit], 0.449999, 1.600000);
	TextDrawTextSize(Casino_TD[Casino_TD_Exit], 16.600000, 148.749862);
	TextDrawAlignment(Casino_TD[Casino_TD_Exit], 2);
	TextDrawColor(Casino_TD[Casino_TD_Exit], -1);
	TextDrawUseBox(Casino_TD[Casino_TD_Exit], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Exit], -348178774);
	TextDrawSetShadow(Casino_TD[Casino_TD_Exit], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Exit], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Exit], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Exit], 1);
	TextDrawSetProportional(Casino_TD[Casino_TD_Exit], 1);
	TextDrawSetSelectable(Casino_TD[Casino_TD_Exit], true);


	Casino_TD[Casino_TD_Lines][0] = TextDrawCreate(466.179138, 211.166641, "_____________");
	Casino_TD[Casino_TD_Lines][1] = TextDrawCreate(466.710601, 227.333297, "_____________");
	Casino_TD[Casino_TD_Lines][2] = TextDrawCreate(465.836486, 244.083312, "_____________");
	Casino_TD[Casino_TD_Lines][3] = TextDrawCreate(466.367919, 259.666656, "_____________");
	Casino_TD[Casino_TD_Lines][4] = TextDrawCreate(465.962280, 276.416717, "_____________");
	for(new i = 0; i < 5; i++) {
		TextDrawLetterSize(Casino_TD[Casino_TD_Lines][i], 0.444846, -0.336666);
		TextDrawTextSize(Casino_TD[Casino_TD_Lines][i], 579.560363, -1988.000122);
		TextDrawAlignment(Casino_TD[Casino_TD_Lines][i], 1);
		TextDrawColor(Casino_TD[Casino_TD_Lines][i], -1);
		TextDrawUseBox(Casino_TD[Casino_TD_Lines][i], true);
		TextDrawBoxColor(Casino_TD[Casino_TD_Lines][i], 1149760170);
		TextDrawSetShadow(Casino_TD[Casino_TD_Lines][i], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_Lines][i], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_Lines][i], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_Lines][i], 1);
		TextDrawSetProportional(Casino_TD[Casino_TD_Lines][i], 1);
	}
	Casino_TD[Casino_TD_Modeled][0] = TextDrawCreate(588.462707, 148.166671, "PreviewModel");
	Casino_TD[Casino_TD_Modeled][1] = TextDrawCreate(581.966247, 146.833297, "PreviewModel");
	for(new i = 0;i<2; i++) {
		TextDrawLetterSize(Casino_TD[Casino_TD_Modeled][i], 0.000000, 0.000000);
		TextDrawTextSize(Casino_TD[Casino_TD_Modeled][i], 28.579849, 34.416690);
		TextDrawAlignment(Casino_TD[Casino_TD_Modeled][i], 1);
		TextDrawColor(Casino_TD[Casino_TD_Modeled][i], -86);
		TextDrawSetShadow(Casino_TD[Casino_TD_Modeled][i], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_Modeled][i], 0);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_Modeled][i], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_Modeled][i], 5);
		TextDrawSetPreviewModel(Casino_TD[Casino_TD_Modeled][i], 1851);
	}
	TextDrawSetPreviewRot(Casino_TD[Casino_TD_Modeled][0], 0.000000, 111.000000, 124.000000, 1.000000);
	TextDrawSetPreviewRot(Casino_TD[Casino_TD_Modeled][1], 247.000000, 134.000000, 0.000000, 1.000000);

	load_tune();

	Capture[0] = TextDrawCreate(9.6999, 248.5628, "LD_Beat:chit"); // пусто
	TextDrawTextSize(Capture[0], 13.0000, 15.0000);
	TextDrawAlignment(Capture[0], 1);
	TextDrawColor(Capture[0], 168430335);
	TextDrawBackgroundColor(Capture[0], 255);
	TextDrawFont(Capture[0], 4);
	TextDrawSetProportional(Capture[0], 0);
	TextDrawSetShadow(Capture[0], 0);

	Capture[1] = TextDrawCreate(99.7001, 248.5628, "LD_Beat:chit"); // пусто
	TextDrawTextSize(Capture[1], 13.0000, 15.0000);
	TextDrawAlignment(Capture[1], 1);
	TextDrawColor(Capture[1], 168430335);
	TextDrawBackgroundColor(Capture[1], 255);
	TextDrawFont(Capture[1], 4);
	TextDrawSetProportional(Capture[1], 0);
	TextDrawSetShadow(Capture[1], 0);

	Capture[2] = TextDrawCreate(11.6665, 225.9333, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Capture[2], 99.0000, 30.0000);
	TextDrawAlignment(Capture[2], 1);
	TextDrawColor(Capture[2], 168430335);
	TextDrawBackgroundColor(Capture[2], 255);
	TextDrawFont(Capture[2], 4);
	TextDrawSetProportional(Capture[2], 0);
	TextDrawSetShadow(Capture[2], 0);

	Capture[3] = TextDrawCreate(17.0000, 247.0889, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Capture[3], 89.0000, 14.0000);
	TextDrawAlignment(Capture[3], 1);
	TextDrawColor(Capture[3], 168430335);
	TextDrawBackgroundColor(Capture[3], 255);
	TextDrawFont(Capture[3], 4);
	TextDrawSetProportional(Capture[3], 0);
	TextDrawSetShadow(Capture[3], 0);

	Capture[4] = TextDrawCreate(102.7330, 249.1523, "LD_Beat:chit"); // 123
	TextDrawTextSize(Capture[4], 7.0000, 9.0000);
	TextDrawAlignment(Capture[4], 1);
	TextDrawColor(Capture[4], 117901311);
	TextDrawBackgroundColor(Capture[4], 255);
	TextDrawFont(Capture[4], 4);
	TextDrawSetProportional(Capture[4], 0);
	TextDrawSetShadow(Capture[4], 0);

	Capture[5] = TextDrawCreate(13.8663, 245.7296, "LD_SPAC:white"); // 123
	TextDrawTextSize(Capture[5], 94.5399, 9.0000);
	TextDrawAlignment(Capture[5], 1);
	TextDrawColor(Capture[5], 117901311);
	TextDrawBackgroundColor(Capture[5], 255);
	TextDrawFont(Capture[5], 4);
	TextDrawSetProportional(Capture[5], 0);
	TextDrawSetShadow(Capture[5], 0);

	Capture[6] = TextDrawCreate(102.7330, 240.7518, "LD_Beat:chit"); // 123
	TextDrawTextSize(Capture[6], 7.0000, 9.0000);
	TextDrawAlignment(Capture[6], 1);
	TextDrawColor(Capture[6], 117901311);
	TextDrawBackgroundColor(Capture[6], 255);
	TextDrawFont(Capture[6], 4);
	TextDrawSetProportional(Capture[6], 0);
	TextDrawSetShadow(Capture[6], 0);

	Capture[7] = TextDrawCreate(12.7330, 249.1671, "LD_Beat:chit"); // 123
	TextDrawTextSize(Capture[7], 7.0000, 9.0000);
	TextDrawAlignment(Capture[7], 1);
	TextDrawColor(Capture[7], 117901311);
	TextDrawBackgroundColor(Capture[7], 255);
	TextDrawFont(Capture[7], 4);
	TextDrawSetProportional(Capture[7], 0);
	TextDrawSetShadow(Capture[7], 0);

	Capture[8] = TextDrawCreate(12.7330, 240.7666, "LD_Beat:chit"); // 123
	TextDrawTextSize(Capture[8], 7.0000, 9.0000);
	TextDrawAlignment(Capture[8], 1);
	TextDrawColor(Capture[8], 117901311);
	TextDrawBackgroundColor(Capture[8], 255);
	TextDrawFont(Capture[8], 4);
	TextDrawSetProportional(Capture[8], 0);
	TextDrawSetShadow(Capture[8], 0);

	Capture[9] = TextDrawCreate(16.3331, 242.3963, "LD_SPAC:white"); // 123
	TextDrawTextSize(Capture[9], 89.2598, 14.0000);
	TextDrawAlignment(Capture[9], 1);
	TextDrawColor(Capture[9], 117901311);
	TextDrawBackgroundColor(Capture[9], 255);
	TextDrawFont(Capture[9], 4);
	TextDrawSetProportional(Capture[9], 0);
	TextDrawSetShadow(Capture[9], 0);

	Capture[10] = TextDrawCreate(77.8667, 247.9558, "LD_Beat:chit"); // пусто
	TextDrawTextSize(Capture[10], 7.0000, 8.3800);
	TextDrawAlignment(Capture[10], 1);
	TextDrawColor(Capture[10], 235802367);
	TextDrawBackgroundColor(Capture[10], 255);
	TextDrawFont(Capture[10], 4);
	TextDrawSetProportional(Capture[10], 0);
	TextDrawSetShadow(Capture[10], 0);

	Capture[11] = TextDrawCreate(79.1333, 246.4444, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Capture[11], 25.3400, 4.7999);
	TextDrawAlignment(Capture[11], 1);
	TextDrawColor(Capture[11], 235802367);
	TextDrawBackgroundColor(Capture[11], 255);
	TextDrawFont(Capture[11], 4);
	TextDrawSetProportional(Capture[11], 0);
	TextDrawSetShadow(Capture[11], 0);

	Capture[12] = TextDrawCreate(98.5335, 242.7554, "LD_Beat:chit"); // пусто
	TextDrawTextSize(Capture[12], 7.0000, 8.0000);
	TextDrawAlignment(Capture[12], 1);
	TextDrawColor(Capture[12], 235802367);
	TextDrawBackgroundColor(Capture[12], 255);
	TextDrawFont(Capture[12], 4);
	TextDrawSetProportional(Capture[12], 0);
	TextDrawSetShadow(Capture[12], 0);

	Capture[13] = TextDrawCreate(98.3335, 247.4558, "LD_Beat:chit"); // пусто
	TextDrawTextSize(Capture[13], 7.1999, 8.8100);
	TextDrawAlignment(Capture[13], 1);
	TextDrawColor(Capture[13], 235802367);
	TextDrawBackgroundColor(Capture[13], 255);
	TextDrawFont(Capture[13], 4);
	TextDrawSetProportional(Capture[13], 0);
	TextDrawSetShadow(Capture[13], 0);

	Capture[14] = TextDrawCreate(82.0000, 243.8851, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Capture[14], 20.0000, 11.0000);
	TextDrawAlignment(Capture[14], 1);
	TextDrawColor(Capture[14], 235802367);
	TextDrawBackgroundColor(Capture[14], 255);
	TextDrawFont(Capture[14], 4);
	TextDrawSetProportional(Capture[14], 0);
	TextDrawSetShadow(Capture[14], 0);

	Capture[15] = TextDrawCreate(70.7334, 242.7406, "LD_Beat:chit"); // пусто
	TextDrawTextSize(Capture[15], 7.0000, 8.0000);
	TextDrawAlignment(Capture[15], 1);
	TextDrawColor(Capture[15], 235802367);
	TextDrawBackgroundColor(Capture[15], 255);
	TextDrawFont(Capture[15], 4);
	TextDrawSetProportional(Capture[15], 0);
	TextDrawSetShadow(Capture[15], 0);

	Capture[16] = TextDrawCreate(70.6336, 248.0410, "LD_Beat:chit"); // пусто
	TextDrawTextSize(Capture[16], 7.0000, 8.3800);
	TextDrawAlignment(Capture[16], 1);
	TextDrawColor(Capture[16], 235802367);
	TextDrawBackgroundColor(Capture[16], 255);
	TextDrawFont(Capture[16], 4);
	TextDrawSetProportional(Capture[16], 0);
	TextDrawSetShadow(Capture[16], 0);

	Capture[17] = TextDrawCreate(44.6333, 246.5295, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Capture[17], 32.0000, 5.0000);
	TextDrawAlignment(Capture[17], 1);
	TextDrawColor(Capture[17], 235802367);
	TextDrawBackgroundColor(Capture[17], 255);
	TextDrawFont(Capture[17], 4);
	TextDrawSetProportional(Capture[17], 0);
	TextDrawSetShadow(Capture[17], 0);

	Capture[18] = TextDrawCreate(47.5000, 243.9702, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Capture[18], 26.0000, 11.0000);
	TextDrawAlignment(Capture[18], 1);
	TextDrawColor(Capture[18], 235802367);
	TextDrawBackgroundColor(Capture[18], 255);
	TextDrawFont(Capture[18], 4);
	TextDrawSetProportional(Capture[18], 0);
	TextDrawSetShadow(Capture[18], 0);

	Capture[19] = TextDrawCreate(43.6669, 242.7406, "LD_Beat:chit"); // пусто
	TextDrawTextSize(Capture[19], 7.0000, 8.0000);
	TextDrawAlignment(Capture[19], 1);
	TextDrawColor(Capture[19], 235802367);
	TextDrawBackgroundColor(Capture[19], 255);
	TextDrawFont(Capture[19], 4);
	TextDrawSetProportional(Capture[19], 0);
	TextDrawSetShadow(Capture[19], 0);

	Capture[20] = TextDrawCreate(43.5668, 248.0410, "LD_Beat:chit"); // пусто
	TextDrawTextSize(Capture[20], 7.0000, 8.3800);
	TextDrawAlignment(Capture[20], 1);
	TextDrawColor(Capture[20], 235802367);
	TextDrawBackgroundColor(Capture[20], 255);
	TextDrawFont(Capture[20], 4);
	TextDrawSetProportional(Capture[20], 0);
	TextDrawSetShadow(Capture[20], 0);

	Capture[21] = TextDrawCreate(16.0665, 242.6554, "LD_Beat:chit"); // пусто
	TextDrawTextSize(Capture[21], 7.0000, 8.0000);
	TextDrawAlignment(Capture[21], 1);
	TextDrawColor(Capture[21], 235802367);
	TextDrawBackgroundColor(Capture[21], 255);
	TextDrawFont(Capture[21], 4);
	TextDrawSetProportional(Capture[21], 0);
	TextDrawSetShadow(Capture[21], 0);

	Capture[22] = TextDrawCreate(15.8663, 247.9558, "LD_Beat:chit"); // пусто
	TextDrawTextSize(Capture[22], 7.0000, 8.3800);
	TextDrawAlignment(Capture[22], 1);
	TextDrawColor(Capture[22], 235802367);
	TextDrawBackgroundColor(Capture[22], 255);
	TextDrawFont(Capture[22], 4);
	TextDrawSetProportional(Capture[22], 0);
	TextDrawSetShadow(Capture[22], 0);

	Capture[23] = TextDrawCreate(17.1330, 246.4444, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Capture[23], 25.3400, 4.7999);
	TextDrawAlignment(Capture[23], 1);
	TextDrawColor(Capture[23], 235802367);
	TextDrawBackgroundColor(Capture[23], 255);
	TextDrawFont(Capture[23], 4);
	TextDrawSetProportional(Capture[23], 0);
	TextDrawSetShadow(Capture[23], 0);

	Capture[24] = TextDrawCreate(36.5330, 242.7554, "LD_Beat:chit"); // пусто
	TextDrawTextSize(Capture[24], 7.0000, 8.0000);
	TextDrawAlignment(Capture[24], 1);
	TextDrawColor(Capture[24], 235802367);
	TextDrawBackgroundColor(Capture[24], 255);
	TextDrawFont(Capture[24], 4);
	TextDrawSetProportional(Capture[24], 0);
	TextDrawSetShadow(Capture[24], 0);

	Capture[25] = TextDrawCreate(36.3332, 247.4558, "LD_Beat:chit"); // пусто
	TextDrawTextSize(Capture[25], 7.1999, 8.8100);
	TextDrawAlignment(Capture[25], 1);
	TextDrawColor(Capture[25], 235802367);
	TextDrawBackgroundColor(Capture[25], 255);
	TextDrawFont(Capture[25], 4);
	TextDrawSetProportional(Capture[25], 0);
	TextDrawSetShadow(Capture[25], 0);

	Capture[26] = TextDrawCreate(19.9996, 243.8851, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Capture[26], 20.0000, 11.0000);
	TextDrawAlignment(Capture[26], 1);
	TextDrawColor(Capture[26], 235802367);
	TextDrawBackgroundColor(Capture[26], 255);
	TextDrawFont(Capture[26], 4);
	TextDrawSetProportional(Capture[26], 0);
	TextDrawSetShadow(Capture[26], 0);

	Capture[27] = TextDrawCreate(78.0336, 242.6406, "LD_Beat:chit"); // 123
	TextDrawTextSize(Capture[27], 7.0000, 8.0000);
	TextDrawAlignment(Capture[27], 1);
	TextDrawColor(Capture[27], 235802367);
	TextDrawBackgroundColor(Capture[27], 255);
	TextDrawFont(Capture[27], 4);
	TextDrawSetProportional(Capture[27], 0);
	TextDrawSetShadow(Capture[27], 0);

	Capture[28] = TextDrawCreate(14.1329, 240.1961, "LD_SPAC:white"); // 123
	TextDrawTextSize(Capture[28], 94.0000, 1.0000);
	TextDrawAlignment(Capture[28], 1);
	TextDrawColor(Capture[28], 117901311);
	TextDrawBackgroundColor(Capture[28], 255);
	TextDrawFont(Capture[28], 4);
	TextDrawSetProportional(Capture[28], 0);
	TextDrawSetShadow(Capture[28], 0);


	Capture[29] = TextDrawCreate(8.6666, 216.8074, "LD_SPAC:white"); // пусто
	TextDrawTextSize(Capture[29], 105.0000, 9.0000);
	TextDrawAlignment(Capture[29], 1);
	TextDrawColor(Capture[29], 7929855);
	TextDrawBackgroundColor(Capture[29], 255);
	TextDrawFont(Capture[29], 4);
	TextDrawSetProportional(Capture[29], 0);
	TextDrawSetShadow(Capture[29], 0);

	/*Capture[30] = TextDrawCreate(60.3333, 216.9630, "CAPTURE"); // пусто
	TextDrawLetterSize(Capture[30], 0.1556, 0.8865);
	TextDrawAlignment(Capture[30], 2);
	TextDrawColor(Capture[30], -1);
	TextDrawBackgroundColor(Capture[30], 255);
	TextDrawFont(Capture[30], 2);
	TextDrawSetProportional(Capture[30], 1);
	TextDrawSetShadow(Capture[30], 0);*/

	Capture[30] = TextDrawCreate(0.3333, 234.2297, ""); // пусто
	TextDrawTextSize(Capture[30], 20.0000, -11.0000);
	TextDrawAlignment(Capture[30], 1);
	TextDrawColor(Capture[30], 676659199);
	TextDrawBackgroundColor(Capture[30], -347323904);
	TextDrawFont(Capture[30], 5);
	TextDrawSetProportional(Capture[30], 0);
	TextDrawSetShadow(Capture[30], 0);
	TextDrawSetPreviewModel(Capture[30], 3090);
	TextDrawSetPreviewRot(Capture[30], 0.0000, 0.0000, 0.0000, 1.0000);

	Capture[31] = TextDrawCreate(101.9999, 233.8149, ""); // пусто
	TextDrawTextSize(Capture[31], 20.0000, -11.0000);
	TextDrawAlignment(Capture[31], 1);
	TextDrawColor(Capture[31], 676659199);
	TextDrawBackgroundColor(Capture[31], -347323904);
	TextDrawFont(Capture[31], 5);
	TextDrawSetProportional(Capture[31], 0);
	TextDrawSetShadow(Capture[31], 0);
	TextDrawSetPreviewModel(Capture[31], 3090);
	TextDrawSetPreviewRot(Capture[31], 0.0000, 0.0000, 180.0000, 1.0000);

	Capture[32] = TextDrawCreate(22.3332, 217.6370, "particle:lamp_shad_64"); // пусто
	TextDrawTextSize(Capture[32], 78.0000, 8.0000);
	TextDrawAlignment(Capture[32], 1);
	TextDrawColor(Capture[32], -184);
	TextDrawBackgroundColor(Capture[32], 255);
	TextDrawFont(Capture[32], 4);
	TextDrawSetProportional(Capture[32], 0);
	TextDrawSetShadow(Capture[32], 0);

	Capture[33] = TextDrawCreate(63.3335, 233.4260, "vs"); // пусто
	TextDrawLetterSize(Capture[33], 0.1159, 0.6417);
	TextDrawAlignment(Capture[33], 3);
	TextDrawColor(Capture[33], -1);
	TextDrawBackgroundColor(Capture[33], 255);
	TextDrawFont(Capture[33], 2);
	TextDrawSetProportional(Capture[33], 1);
	TextDrawSetShadow(Capture[33], 0);
	
	// logotype
	/*logo334_TD[0] = TextDrawCreate(9.999926, 431.500213, "MOBILE");
	TextDrawLetterSize(logo334_TD[0], 0.158588, 0.969998);
	TextDrawAlignment(logo334_TD[0], 1);
	TextDrawColor(logo334_TD[0], -1);
	TextDrawSetShadow(logo334_TD[0], 0);
	TextDrawSetOutline(logo334_TD[0], -1);
	TextDrawBackgroundColor(logo334_TD[0], 255);
	TextDrawFont(logo334_TD[0], 2);
	TextDrawSetProportional(logo334_TD[0], 1);
	TextDrawSetShadow(logo334_TD[0], 0);

	logo334_TD[1] = TextDrawCreate(3.882393, 418.083251, "MaryLand");
	TextDrawLetterSize(logo334_TD[1], 0.400000, 1.600000);
	TextDrawAlignment(logo334_TD[1], 1);
	TextDrawColor(logo334_TD[1], -5963521);
	TextDrawSetShadow(logo334_TD[1], 0);
	TextDrawSetOutline(logo334_TD[1], -1);
	TextDrawBackgroundColor(logo334_TD[1], 255);
	TextDrawFont(logo334_TD[1], 1);
	TextDrawSetProportional(logo334_TD[1], 1);
	TextDrawSetShadow(logo334_TD[1], 0);*/
	
	logo_TD[0] = TextDrawCreate(574.6665, 5.4073, "World"); // пусто
	TextDrawLetterSize(logo_TD[0], 0.2576, 1.3013);
	TextDrawAlignment(logo_TD[0], 2);
	TextDrawColor(logo_TD[0], 8766719);
	TextDrawBackgroundColor(logo_TD[0], 255);
	TextDrawFont(logo_TD[0], 1);
	TextDrawSetProportional(logo_TD[0], 1);
	TextDrawSetShadow(logo_TD[0], 0);

	logo_TD[1] = TextDrawCreate(574.6665, 15.1079, "ROLE_PLAY"); // пусто
	TextDrawLetterSize(logo_TD[1], 0.1250, 0.9321);
	TextDrawAlignment(logo_TD[1], 2);
	TextDrawColor(logo_TD[1], -1);
	TextDrawBackgroundColor(logo_TD[1], 255);
	TextDrawFont(logo_TD[1], 2);
	TextDrawSetProportional(logo_TD[1], 1);
	TextDrawSetShadow(logo_TD[1], 0);

	logo_TD[2] = TextDrawCreate(591.3332, 18.1111, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(logo_TD[2], 3.1199, 4.0000);
	TextDrawAlignment(logo_TD[2], 1);
	TextDrawColor(logo_TD[2], 8766719);
	TextDrawBackgroundColor(logo_TD[2], 255);
	TextDrawFont(logo_TD[2], 4);
	TextDrawSetProportional(logo_TD[2], 0);
	TextDrawSetShadow(logo_TD[2], 0);

	logo_TD[3] = TextDrawCreate(567.6665, 3.1777, "LD_Beat:Chit"); // пусто
	TextDrawTextSize(logo_TD[3], 2.4400, 3.0000);
	TextDrawAlignment(logo_TD[3], 1);
	TextDrawColor(logo_TD[3], 8766719);
	TextDrawBackgroundColor(logo_TD[3], 255);
	TextDrawFont(logo_TD[3], 4);
	TextDrawSetProportional(logo_TD[3], 0);
	TextDrawSetShadow(logo_TD[3], 0);

	CheatPanel[0] = TextDrawCreate(644.666503, 435.562164, "usebox");
	TextDrawLetterSize(CheatPanel[0], 0.000000, 1.010738);
	TextDrawTextSize(CheatPanel[0], 457.110839, 0.000000);
	TextDrawAlignment(CheatPanel[0], 1);
	TextDrawColor(CheatPanel[0], 0);
	TextDrawUseBox(CheatPanel[0], true);
	TextDrawBoxColor(CheatPanel[0], 471604479);
	TextDrawSetShadow(CheatPanel[0], 0);
	TextDrawSetOutline(CheatPanel[0], 0);
	TextDrawFont(CheatPanel[0], 0);

	CheatPanel[1] = TextDrawCreate(484.777862, 435.566650, "usebox");
	TextDrawLetterSize(CheatPanel[1], 0.000000, 1.010738);
	TextDrawTextSize(CheatPanel[1], 457.110961, 0.000000);
	TextDrawAlignment(CheatPanel[1], 1);
	TextDrawColor(CheatPanel[1], 0);
	TextDrawUseBox(CheatPanel[1], true);
	TextDrawBoxColor(CheatPanel[1], 0xf5EAFFC99);
	TextDrawSetShadow(CheatPanel[1], 0);
	TextDrawSetOutline(CheatPanel[1], 0);
	TextDrawFont(CheatPanel[1], 1);

	CheatPanel[2] = TextDrawCreate(460.999816, 436.057586, "CHECK");
	TextDrawLetterSize(CheatPanel[2], 0.158000, 0.918043);
	TextDrawAlignment(CheatPanel[2], 1);
	TextDrawColor(CheatPanel[2], -1);
	TextDrawUseBox(CheatPanel[2], true);
	TextDrawBoxColor(CheatPanel[2], 0);
	TextDrawSetShadow(CheatPanel[2], 0);
	TextDrawSetOutline(CheatPanel[2], 0);
	TextDrawBackgroundColor(CheatPanel[2], 51);
	TextDrawFont(CheatPanel[2], 2);
	TextDrawSetProportional(CheatPanel[2], 1);

	for(new i;i<10;i++) ChetInfo[i][cheatid1]=-1;
	new Float:DrawPos = 485.111267;
	Cheat1 = 0;
	for(new i;i<10;i++) {
		if(i > 0) DrawPos+=16.0;
		CheatText[i] = TextDrawCreate(DrawPos, 435.564666,"-");
		TextDrawColor(CheatText[i], 0xf5EAFFC99);
		TextDrawSetShadow(CheatText[i], 0);
		TextDrawFont(CheatText[i], 2);
		TextDrawSetOutline(CheatText[i], 0);
		TextDrawLetterSize(CheatText[i],0.161109, 0.997685);
		TextDrawAlignment(CheatText[i], 1);
		TextDrawSetProportional(CheatText[i], 1);
	}
	return 1;
}
stock PayChecks(i) {
	switch(PI[i][pMember]) {
	case fLSPD: PI[i][pSalary] += salary_pd[PI[i][pRank]-1];
	case fFBI: PI[i][pSalary] += salary_fbi[PI[i][pRank]-1];
	case fMEDICLS,fMEDICSF,fMEDICLV: PI[i][pSalary] += salary_medics[PI[i][pRank]-1];
	case fLSNEWS,fSFNEWS,fLVNEWS: PI[i][pSalary] += salary_news[PI[i][pRank]-1];
	case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: PI[i][pSalary] += salary_gang[PI[i][pRank]-1];
	case fLCN,fYAKUZA,fRM: PI[i][pSalary] += salary_mafia[PI[i][pRank]-1];
	case fWHITEHOUSE: PI[i][pSalary] += salary_wh[PI[i][pRank]-1];
	case fARMYLS: PI[i][pSalary] += salary_army[PI[i][pRank]-1];
	case fINSTRUCTORS: PI[i][pSalary] += salary_autosh[PI[i][pRank]-1];
	case fRCSD: PI[i][pSalary] += salary_rcsd[PI[i][pRank]-1];
	}
	return 0;
}
stock PayDay(playerid) {
	condition_of_roads_ = random(3);
	new bool:newday, day = GetDayNumber(), h, m, s;
	if(gCurDay != day)	{gCurDay = day; newday = true;}
	
	gettime(h,m,s);
	weeklast = weekcurrent;
	weekcurrent = load_week();
	
	if (weeklast != weekcurrent)
	{
		foreach(new i: Player)
		{
			if (!TI[i][tLogin]) continue;
			if (PI[i][pAdmin] > 0 && dostup[i] == 1 || gAdmin[i][7] == 1)
			{
				static const Names_Days[7][22] = {"online_monday", "online_tuesday", "online_wednesday", "online_thursday", "online_friday", "online_saturday", "online_sunday"};
				new string[450];
				mysql_format(connects, string, sizeof (string), "UPDATE `"TABLE_ADMIN"` SET `%s` = '%d', `kick` = '%d', `ban` = '%d', `mute` = '%d', `pm` = '%d', `warn` = '%d', `jail` = '%d',`vig`='%d',`blockadmin`='%d',`rep`='%d',online_status = '0' WHERE `Name` = '%s' LIMIT 1", Names_Days[weeklast], gAdminTime[i], gAdmin[i][0], gAdmin[i][1], gAdmin[i][2], gAdmin[i][3], gAdmin[i][4], gAdmin[i][5], gAdmin[i][6], gAdmin[i][7], gAdmin[i][8], player_name[i]);
				mysql_pquery(connects, string, "", "");
				
				printf("Лог адм: %s перешел в новое время %d", player_name[i], gAdminTime[i]);
				gAdminTime[i] = 0;
			}
		}
	}
	if(newday)
	{
		new saturday = 1310155200, w = gettime(), day_week;
		while(w - saturday > 60 * 60 * 24) {
			w -= 60 * 60 * 24;
			day_week ++;
		}
		while(day_week >= 7) day_week -= 7;
		if(day_week == 1) {
			gangtops();
		}
		for (new i = 1; i < MAX_FRACTIONS; i ++)
		{
			FI[i][fBankCash] = 0;
			mysql_pquery(connects, "UPDATE `fractions` SET `BankCash` = '0'", "", "");
		}
		mysql_tquery(connects, "DELETE FROM `questsprogress` WHERE `day` > 0", "", "");
		foreach(new i:Player) {
			if(!PI[i][bizz_lcash]) continue;
			PI[i][bizz_lcash] = 0;
		}
		mysql_pquery(connects, "UPDATE `accounts` SET `bizz_lcash` = '0'", "", "");
	}
	new string[120];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if (!GetPlayerInterior(i)) SetPlayerTime(i, tmphour, tmpminute);
		else SetPlayerTime(i, 12, 00);
		/*if(PI[i][pPlayTime][0] < 20) {
			SendClientMessage(i,COLOR_LIGHTRED, "Для получения зарплаты необходимо находиться в игре минимум 20 минут");
			continue;
		}*/
		if(PI[i][pRank] && PI[i][pMember] && start_work[i]) PayChecks(i);
		SendClientMessage(i, COLOR_GREY, "-----------[Банковский чек]-----------");
		format(string,sizeof(string),"Баланс сот.связи: "GREEN"$%i", PI[i][pMobile]);
		SendClientMessage(i,-1,string);
		
		//if(PI[i][pPremium]) PI[i][pExp] += 1;

		PI[i][pExp] += 3 * PayDayX;
		
		if(PI[i][pBoost]) format(string, sizeof(string), "Зарплата: "GREEN"$%i", PI[i][pSalary]*2);
		else format(string, sizeof(string), "Зарплата: "GREEN"$%i", PI[i][pSalary]);
		SendClientMessage(i,-1, string);
		
		if(PI[i][pAdmin] > 0) {
			SendClientMessage(i,-1, "Админ зарплата: "GREEN"$7000");
			PI[i][pBank] += 7000;
		}

		if(PI[i][pBoost]) PI[i][pBank] += PI[i][pSalary]*2;
		else PI[i][pBank] += PI[i][pSalary];
		PI[i][pSalary] = 0;
		UpdatePlayerData(i,"salary",PI[i][pSalary]);
		
		if(PI[i][pLevel] <= 3 && Nalog[1])
		{
			format(string,sizeof(string),"Пособие: "GREEN"%i$",Nalog[2]);
			SendClientMessage(i,-1,string);
			PI[i][pBank] += Nalog[2];
			FI[fWHITEHOUSE][fBank] -= Nalog[2];
		}

		format(string,sizeof(string),"Баланс: "GREEN"$%i",PI[i][pBank]);
		SendClientMessage(i,-1,string);
		SendClientMessage(i,COLOR_GREY, "--------------------------------------------------");
		SetTimerEx("SpcarsAvto",60*1000,false,"i",playerid);
		new stringv2[100];
		format(stringv2,sizeof(stringv2), "Машины заспавнятся через 1 минуту, займите свои автомобили!");
		SendClientMessageToAll(COLOR_BLUE, stringv2);
		if(PI[i][pExp]+1 >= (PI[i][pLevel])*6) {
			PI[i][pLevel] += 1; 
			PI[i][pExp] = 0; 
			UpdatePlayerData(i,"pLevel",PI[i][pLevel]);
			DollahScoreUpdate(i); 
			SendClientMessage(i, CGOLD, "Поздравляем! Ваш уровень повышен");
		}
		if(QuestProgress[i][14] < 5 && AcceptQuest[i][14] != 0) QuestProgress[i][14] ++,save_quest(i,14);
		if(QuestProgress[i][14] == 5 && AcceptQuest[i][14] != 0) {
			D(i,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Счастливое время'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
			NextStapQI(i,14);
		}
		if(QuestProgress[i][52] < 3 && AcceptQuest[i][52] != 0) QuestProgress[i][52] ++,save_quest(i,52);
		if(QuestProgress[i][52] == 3 && AcceptQuest[i][52] != 0) {
			D(i,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
		}
		if(IsACop(i))
		{
			if(QuestProgress[i][39] < 36 && AcceptQuest[i][39] != 0) QuestProgress[i][39] ++,save_quest(i,39);
			if(QuestProgress[i][39] == 36 && AcceptQuest[i][39] != 0) {
				D(i,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Активный работчник'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
			}
		}
		if(PI[i][pMember] > 0)
		{
			if(QuestProgress[i][12] < 30 && AcceptQuest[i][12] != 0) QuestProgress[i][12] ++,save_quest(i,12);
			if(QuestProgress[i][12] == 30 && AcceptQuest[i][12] != 0) {
				D(i,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Лучший работник'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
				NextStapQI(i,12);
			}
		}
		if(IsAArm(i))
		{
			if(QuestProgress[i][11] < 3 && AcceptQuest[i][11] != 0) QuestProgress[i][11] ++,save_quest(i,11);
			if(QuestProgress[i][11] == 3 && AcceptQuest[i][11] != 0) {
				D(i,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Служба в Армии'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
				NextStapQI(i,11);
			}
		}
		if(IsAMafia(i)) {
			if(QuestProgress[i][33] < 10 && AcceptQuest[i][33] != 0) QuestProgress[i][33] ++,save_quest(i,33);
			if(QuestProgress[i][33] == 10 && AcceptQuest[i][33] != 0) {
				D(i,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Активный мафиози'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
			}
		}
		if(QuestProgress[i][61] < 5 && AcceptQuest[i][61] != 0) QuestProgress[i][61] ++,save_quest(i,61);
        if(QuestProgress[i][61] == 5 && AcceptQuest[i][61] != 0)
	    {
	       D(i,DIALOG_NONE,DSM, "Задание",""W"Вы завершили квестовую линнию Hallowen!\n\nЗавершите у мэрии квест, чтобы забрать главный подарок!","Закрыть","");
	    }
		PI[i][pPlayTime][0] = 0;
		PI[i][pZakonp]++;
		UpdatePlayerData(i,"pExp",PI[i][pExp]);
		UpdatePlayerData(i,"pZakonp",PI[i][pZakonp]);
		
		if(PI[i][pLevel] >= 3 && PI[i][pMPromo]) {
			new str[128];
			format(str, sizeof(str), "Вам было зачислено: "ORANGE"$%d"W" за введённый ранее промокод",PI[i][pMPromo]);
			SendOk(i,str);
			GiveMoney(i,PI[i][pMPromo],"промокод");
			PI[i][pMPromo] = 0;
			UpdatePlayerData(i,"pMPromo",0);
		}
		if(PI[i][pZakonp] > 100) PI[i][pZakonp] = 100;
		if(PI[i][pSearch] >= 1) {
			PI[i][pSearch] --;
			if(PI[i][pSearch] < 0) PI[i][pSearch] = 0;
			SetPlayerWantedLevel(i, PI[i][pSearch]);
			UpdatePlayerData(i,"pSearch",PI[i][pSearch]);
		}
		if(PI[i][pLevel] >= 4 && !PI[i][pDrugInv]) {
			PI[i][pDrugInv] = 1;
			UpdatePlayerData(i,"drunginv",1);
			new query[128];
			mysql_format(connects, query, sizeof(query),"SELECT pDrug FROM `"TABLE_ACCOUNTS"` WHERE pID = '%d'",PI[i][pID]);
			mysql_tquery(connects,query,"reg_friend","i",i);
		}
		if(PI[i][pFamily]) {
			if(PI[i][pPremium]) reputation_family(PI[i][pFamily]-1,1);
			gFamily[PI[i][pFamily]-1][famTalon] += 1;
			UpdateFamily(PI[i][pFamily],"talon",gFamily[PI[i][pFamily]-1][famTalon]);
			PI[i][pFamTalon] += 1, UpdatePlayerData(i, "talon_fam", PI[i][pFamTalon]);
		}
		UpdatePlayerData(i,"pBank",PI[i][pBank]);
		if(PI[i][pCredit])
		{
			new str[150];
			format(str, sizeof(str), "У вас задолжность на сумму: "GREEN"%d$", PI[i][pCredit]);
			SCM(i, COLOR_WHITE, str);
		}
	
		
	}
	pay_realty();
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
	if(bank_vzlom[3] > 0) bank_vzlom[3]--;
	return true;
}
stock split(const strsrc[], strdest[][], delimiter) {
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)) {
		if(strsrc[i] == delimiter || i == strlen(strsrc)) {
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return true;
}
stock AdmMSG(color,const str[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!dostup[i]) continue;
		if(!PI[i][pAdmMSG]) continue;
		SendClientMessage(i, color, str);
	}
}
stock SendTeamMessage(color, const string[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!start_work[i]) continue;
		if(!PI[i][pSettings][1]) continue;
		if(!IsACop(i)) continue;
		SendClientMessage(i, color, string);
	}
	return true;
}
stock SendDepMessage(color, const string[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!start_work[i]) continue;
		if(!PI[i][pSettings][1]) continue;
		if(IsACop(i) || IsAArm(i) || IsAMedic(i) || IsANews(i) || PI[i][pMember] == fINSTRUCTORS || PI[i][pMember] == fWHITEHOUSE) {
			SendClientMessage(i, color, string);
		}
	}
	return true;
}
stock SendPdMessage(color, const string[])
{
    foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!start_work[i]) continue;
		if(!PI[i][pSettings][1]) continue;
		if(IsACop(i)) {
			SendClientMessage(i, color, string);
		}
	}
	return true;
}
stock MarkerGos(playerid, Float:x,Float:y,Float:z)
{
	foreach(new i:Player)
	{
		if(IsACop(i) || IsAArm(i) || IsAMedic(i) || IsANews(i) || PI[i][pMember] == fINSTRUCTORS || PI[i][pMember] == fWHITEHOUSE)
		{
			SetPlayerCheckpoint(playerid, x,y,z, 5.0);
		}
	}
}
stock SendRadioMessage(member, color, const str[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pSettings][1]) {
			if((PI[i][pMember] == member || PI[i][pLeader] == member) && start_work[i]) SendClientMessage(i, color, str);
		}
	}
}
stock SendFamilyMessage(family, color, const str[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(start_work[i]) {
			if(PI[i][pSettings][1]) {
				if(PI[i][pMember] == family) {
					SendClientMessage(i, color, str);
				}
			}
		}
	}
}
stock SendAdminMessage(color, const str[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!PI[i][pAdmin] || !dostup[i]) continue;
		SendClientMessage(i, color, str);
	}
}
stock FamMSG(fam, const str[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pFamily] != fam) continue;
		SendClientMessage(i, FamilyColorG[gFamily[fam-1][famColor]], str);
	}
}
alias:mycollab("mypromo","promo");
CMD:mycollab(playerid) {
	D(playerid,D_MYCOLLAB,DSL,""P"Статистика сотрудничества","Информация о моем промо-коде\nМои рефералы","Выбрать","Закрыть");
}

stock IsText(const name[], const name2[])
{
	if(!strcmp(name, name2, true)) return 1;
	return 0;
}

CMD:referals(playerid) {
	new string[1024], Name[24], Level,query[156]; 
	mysql_format(connects, query, sizeof(query),"SELECT `Name`, `pLevel` FROM `accounts` WHERE `pDrug` = '%s' ORDER BY `pLevel` DESC LIMIT 10", player_name[playerid]);
	new Cache:result = mysql_query(connects, query);
	new rows;
	string[0] = 0; FirstReferal[playerid] = 0;
	cache_get_row_count(rows);
	if(rows) {
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", Name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pLevel",Level);
			if(Level < 4) format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "NO"%d LEVEL\n", string, i+1, Name, Level);
			else format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "GREEN"%d LEVEL\n", string, i+1, Name, Level);
		}
		if(!D(playerid, D_REFERALS, 0, "Приглашенные", string, "Далее", "Назад")) SendClientMessage(playerid, COLOR_GREY, "Недоступно, попробуйте повторить заного");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вас никто не указывал как пригласившего на сервер");
	cache_delete(result);
	return true;
}
CMD:bankhack(playerid) {
	if(!PlayerToPoint(2.5,playerid,-1146.6504,28.7822,1169.5699)) return SendClientMessage(playerid, COLOR_GREY, "Вы не рядом с хранилищем банка");
	if(!TI[playerid][tCodeBank]) return SendClientMessage(playerid, COLOR_GREY, "Вы не получили у Karen'a код");
	if(bank_vzlom[3]) {
		new string[80];
		format(string,sizeof(string),"Банк можно будет ограбить через %d ч",bank_vzlom[3]);
		SendClientMessage(playerid, COLOR_GREY, string);
		return true;
	}
	new Float:X, Float:Y, Float:Z, count = 0;
	GetPlayerPos(playerid, X, Y, Z);
	foreach(new i:Player) {
		if(!TI[i][tLogin] || PI[i][pMember] != PI[playerid][pMember]) continue;
		if(IsPlayerInRangeOfPoint(i,8.0,X,Y,Z) && GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid)) count++;
	}
	if(count < 3) return SendClientMessage(playerid, COLOR_GREY, "С вами должно находится не менее 3-х человек для ограбления банка");

	for(new it = 0; it < 24; it++) TextDrawShowForPlayer(playerid, hack_magaz_TD[it]);
	for(new i = 0; i < 13; i++) PlayerTextDrawShow(playerid, hack_numbers[playerid][i]);

	SelectTextDraw(playerid, 0x0080FFFF);
	
	new rand;
	rand = random(10);
	PlayerTextDrawColor(playerid, hack_numbers[playerid][rand], 0xfC40E26ff);
	PlayerTextDrawShow(playerid, hack_numbers[playerid][rand]);
	
	SetPVarInt(playerid, "ExpectedSelectionTD", rand);
	SetPVarInt(playerid, "bank_rob",1);

	progress_rob[playerid] = 0;
	bank_vzlom[2] = PI[playerid][pMember];
	
	PlayerTextDrawTextSize(playerid, hack_numbers[playerid][12], progress_rob[playerid]*96.4701/10, 10.0000);
	PlayerTextDrawShow(playerid, hack_numbers[playerid][12]);
	return true;
}
CMD:fixcar(playerid) {
	if(!PI[playerid][pHouse] && !PI[playerid][pRoom] && !PI[playerid][pTempKey]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома/квартиры");
	new string[144];
	format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]"W" - "ORANGE"$500\n"W"2. Автомобиль №2 "P"[%s]"W" - "ORANGE"$500",gTransport[CarsInfo[playerid][carModel][0]-400][trName],gTransport[CarsInfo[playerid][carModel][1]-400][trName]);
	D(playerid,D_FIXCAR,DSL,""P"Доставить транспорт",string,"Выбрать","Закрыть");
	return 1;
}
CMD:areferals(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new text = strlen(params);
	if(!text) return SendClientMessage(playerid,COLOR_WHITE,"Используйте: /areferals [Nick Name]");
	if(text < 3 || text > 24) return SendClientMessage(playerid, COLOR_GREY, "От 3 до 24 символов");
	new query[156];
	mysql_format(connects, query, sizeof(query),"SELECT `Name`,`pLevel`,`pIpReg` FROM `accounts` WHERE `pDrug` = '%s'", params);
	mysql_pquery(connects, query, "all_referals", "is", playerid, params);
	return 1;
}
CMD:lmayor(playerid) {
	if(PI[playerid][pLeader] != fWHITEHOUSE) return true;
	dialog_mayor(playerid);
	return true;
}

CMD:viphelp(playerid) {
	D(playerid, DIALOG_NONE, DSM, ""P"Премиум-аккаунт", ""W"Список основных возможностей"ORANGE" премиум-аккаунта:"W"\n\n- Доступ к общему чату среди премиум игроков (/v)\n- +1 семейное очко каждый PayDay\n- Лечение в больнице в 2 раза быстрее\n\
	- Просмотр администраторов в сети (/admins)\n- Время в КПЗ и Деморгане истекает в два раза быстрее\n- Дополнительное очко опыта каждый час\n\
	- Отсутствие голода\n- Увольнение из любой организации (/leave)\n\n"G"*"W" Стоимость премиум-аккаунта зависит от количества дней (/donate)", "Закрыть", "");
	return true;
}

CMD:vacancy(playerid)
{
	new vacancies = 0;
	new str[1024];
	new string[6 + 28 + 24];
	for(new i = 0; i < 14; i++)
	{
		if(VacancyInfo[i][VacancyStatus])
		{
			format(string, sizeof(string), ""W"%d. {%06x}%s\n", vacancies + 1,
			(gFractionSpawn[VacancyInfo[i][VacancyFraction]][fracColor] >>> 8)/*GetColorFrac(VacancyInfo[i][VacancyFraction])*/,
			FI[VacancyInfo[i][VacancyFraction]][fName]
			);
			strcat(str, string);
			vacancies++;
		}
	}
	if(vacancies != 14 && PI[playerid][pMember] && PI[playerid][pRank] >= FI[PI[playerid][pMember]][fInviteRang])
	{
		strcat(str, "Добавить вакансию");
		return D(playerid, D_VACANCY, DSL, ""P"Вакансии", str, "Далее", "Закрыть");
	}
	if(vacancies == 0) return SendClientMessage(playerid, COLOR_GREY, "Сейчас нет доступных вакансий");
	return D(playerid, D_VACANCY, DSL, ""P"Вакансии", str, "Далее", "Закрыть");
}
cmd:gmx(playerid, params[])
{
	if(PI[playerid][pAdmin] >= 7)
	{
		if(dostup[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "*Вы не авторизованы. Используйте {FFCC00}/alogin");
		
		SendClientMessageToAll(COLOR_RED, "Внимание! Происходит рестарт на сервере");
		SendClientMessageToAll(COLOR_RED, "Рестарт будет длиться 20-30 секунд");
		SendClientMessageToAll(COLOR_RED, "С Уважением администрация World RP!");
		foreach(new i: Player)
		{
			KickEx(i);
		}
		SetTimer("GameModeExitDelay", 5000, false);
	}
	return 1;
}
CMD:sistema(playerid,params[])
{
    if(PI[playerid][pAdmin] < 6) return 1;
    if(sscanf(params,"s[84]",params[0])) return SendClientMessage(playerid,COLOR_WHITE,"/sistema [Текст]");
    new stringa[128];
    format(stringa,128,"{B22222}[Система] %s",params[0],params[0]);
    SendClientMessageToAll(COLOR_WHITE, stringa);
    return 1;
}
forward GameModeExitDelay();
public GameModeExitDelay()
{
	GameModeExit();
}
CMD:taxilist(playerid) {
	if(PI[playerid][pJob] != 8) return SendClientMessage(playerid, COLOR_GREY, "Вы не водитель такси");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != GetPVarInt(playerid,"veh_id_taxi")) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем такси");
	new string[650],str[128],number = 0;
	strcat(string,"№. Имя\tНомер телефона\tРасстояние\n");
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!GetPVarInt(i,"taxi_st")) continue;
		number++;
		format(str,sizeof(str),""ORANGE"%d. "W"%s\t%d\t%.1f\n",number,player_name[i],PI[i][pPhone],GetDistanceBetweenPlayers(i,playerid)),strcat(string,str);
	}
	if(!number) return SendClientMessage(playerid, COLOR_GREY, "Нет доступных заказов");
	D(playerid, D_TAXIST, DSTH, ""P"Заказы", string, "Далее", "Закрыть");
	return 1;
}
CMD:count(playerid) {
	new veh = GetPlayerVehicleID(playerid), id = 0,string[200],str[56];
	if(PI[playerid][pJob] != 8) return SendClientMessage(playerid, COLOR_GREY, "Вы не водитель такси");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != GetPVarInt(playerid,"veh_id_taxi")) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем такси");
	if(!VehicleInfo[veh][vTarif]) return SendClientMessage(playerid, COLOR_GREY, "Вы не установили тариф (/fare)");
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!IsPlayerInVehicle(i,veh)) continue;
		if(GetPlayerVehicleSeat(i) == 0) continue;
		id++;
		format(str,sizeof(str),""ORANGE"%d. "W"%s\n",id,player_name[i]),strcat(string,str);
	}
	if(!id) return SendClientMessage(playerid, COLOR_GREY, "В автомобиле нет пассажиров");
	D(playerid, D_TAXI_COUNT, DSL, ""P"Список пассажиров", string, "Принять", "Закрыть");
	return 1;
}
CMD:dice(playerid, params[]) {
	if(!PlayerToPoint(2.0,playerid,295.3712,-112.4607,1036.6692) && !PlayerToPoint(2.0,playerid,300.7174,-112.3977,1036.6692)) return SendClientMessage(playerid, COLOR_GREY, "Вы не у стола для игры 1x1");
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /dice [id] [ставка (1000 - 25000)]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(params[1] < 1000 || params[1] > 25000) return SendClientMessage(playerid, COLOR_GREY, "От 1000 до 25000");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(!ProxDetectorS(6.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
	if(TI[params[0]][tDiceClosed]) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже играет с кем то");
	if(PI[playerid][pCasinoChips] < params[1]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно фишек");
	if(PI[params[0]][pCasinoChips] < params[1]) return SendClientMessage(playerid, COLOR_GREY, "У игрока недостаточно фишек");
	if(TI[playerid][tDiceTime] > unix) return SendClientMessage(playerid, COLOR_GREY, "Можно играть 1 раз в 10 секунд");
	if(TI[params[0]][tDiceTime] > unix) return SendClientMessage(playerid, COLOR_GREY, "Игрок недавно играл. Можно играть 1 раз в 10 секунд");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	if(TI[playerid][tDiceID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Нельзя предлагать ставку, пока не примите/отклоните запрос на игру в кости (Y N)");

	new string[144];

	format(string, sizeof(string), ""P"%s "W"предложил(а) Вам бросить кости. Ставка: "ORANGE"%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "W"бросить кости. Ставка: "ORANGE"%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);

	TI[params[0]][tDiceID] = playerid;
	TI[playerid][tDiceIDs] = params[0];
	TI[params[0]][tDiceMoney] = params[1];

	TI[playerid][tDiceClosed] = true;
	return true;
}

CMD:yes(playerid) key_activate(playerid);
CMD:no(playerid) key_dectivate(playerid);

CMD:time(playerid, params[]) {
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	new string[800];
	if(PI[playerid][pFmute] > 0) {
		format(string, 128, "Заглушка: "P"%d"W" секунд", PI[playerid][pFmute]);
		SendOk(playerid, string);
	}
	if(PI[playerid][pMute] > 0) {
		format(string, 128, "Осталось молчать: "P"%d"W" секунд", PI[playerid][pMute]);
		SendOk(playerid, string);
	}
	if(PI[playerid][pJailTime] > 0) {
		format(string, 128, "Осталось сидеть: "P"%d"W" секунд", PI[playerid][pJailTime]);
		SendUse(playerid, string);
	}
	if(GetPVarInt(playerid,"comp_club") > 0) {
		format(string, 128, "Осталось играть в комп. клубе: "P"%d"W" секунд", GetPVarInt(playerid,"comp_club")/3600);
		SendUse(playerid, string);
	}
	if(!PI[playerid][pWatch]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет часов. Приобрести их можно в 24-7");
	new hour, minuite, second, year, month, day;
	gettime(hour, minuite, second);
	getdate(year, month, day);
	
	static const Names_Months[12][12] = {"января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря"};
	static const Names_Days[7][12] = {"понедельник", "вторник", "среда", "четверг", "пятница", "суббота", "воскресенье"};
	
	
	format(string, sizeof(string), "\
		"W"Текущее время: "P"%02d:%02d\n\
		"W"Сегодняшняя дата: {33AA33}%s, %d %s %04d г.\n\n\
		"W"Время в игре за час:\t\t"YELLOW"%d мин\n\
		"W"Время в игре за сегодня:\t"P"%s\n\
		"W"Время в игре за вчера:\t"P"%s\n\
		"W"AFK за сегодня:\t\t"ORANGE"%s\n\
		"W"AFK за вчера:\t\t\t"ORANGE"%s\n\n\
		"G"* До бесплатного кейса осталось:"W" %d"G" минут",
	hour, minuite,
	Names_Days[weekcurrent], day, Names_Months[month - 1], year,
	PI[playerid][pPlayTime][0],
	ConvertsCmdTime(gOnlinePlayer[playerid][0]),
	ConvertsCmdTime(gOnlinePlayer[playerid][1]),
	ConvertsCmdTime(gOnlinePlayerAFK[playerid][0]),
	ConvertsCmdTime(gOnlinePlayerAFK[playerid][1]),
	180-PI[playerid][pPlayTime][1]);
	D(playerid, DIALOG_NONE, DSM, ""P"Точное время", string, "Закрыть", "");

	format(string,sizeof(string),"~w~%02d:%02d:%02d~n~~b~%d-%s%d-%s%d",hour,minuite,second,day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year);
	GameTextForPlayer(playerid,string,5000,1);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0,1);
	return 1;
}
alias:animlist("anims","anim");
CMD:animlist(playerid,params[]) {
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
	if(TI[playerid][tHeal] || GetPVarInt(playerid,"anim_build") > 0) return 1;
	if(TI[playerid][tTazer]) {
		ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1,0);
		SendClientMessage(playerid, COLOR_GREY, "Вы оглушены. Действие не возможно");
		return 1;
	}
	new id;
	static const f_str[] = "1. Танец - 1\n2. Танец - 2\n3. Танец - 3\n4. Танец - 4\n5. Стойка дилера\n6. Передал что-то\n7. Съел что-то\n8. Справить нужду\n9. Медитация\n10. Сидеть раненым\n11. Спать на боку\n12. Лечь на спину\n13. Шлепнуть рукой\n14. Наносить граффити 1\n15. Наносить граффити 2\n16. Курение\n17. Ограбление\n18. Надеть маску\n19. Руки в верх\n20. Позвать кого-то\n21. Поднять руки\n22. Болельщик 1\n23. Болельщик 2\n24. Болельщик 3\n\
		25. Показать средний палец\n26. Выпить что-то\n27. Махать руками\n28. Мужское курение\n29. Прилечь 1\n30. Прилечь 2\n31. Прилечь 3\n32. Прилечь 4\n33. Присесть на пол\n34. Читать реп 1\n35. Читать реп 2\n36. Читать реп 3\n37. Читать реп 4\n38. Набивать мяч\n39. Кинуть мяч\n40. Поднять мяч\n41. Позвать\n42. Чинить авто\n43. Прислониться к авто\n44. Сложить руки вместе\n\
		45. Держать биту 1\n46. Держать биту 2\n47. Гангстерский жест 1\n48. Гангстерский жест 2\n49. Гангстерский жест 3\n50. Гангстерский жест 4\n51. Гангстерский жест 5\n52. Гангстерский жест 6\n53. Гангстерский жест 7\n54. Гангстерский жест 8\n55. Плакать\n56. Присесть 1\n57. Присесть 2\n58. Присесть облокотившись\n59. Женское курение\n60. Искусственное дыхание\n61. Облокотится\n62. Облокотится 2\n63. Facepalm\n64. Чесаться";
	new string[sizeof(f_str)];
	format(string,sizeof(string),"%s",f_str);
	if(sscanf(params,"i",id)) {
		D(playerid,D_ANIM,DSL, ""P"Список анимаций", string, "Выбрать", "Отмена");
	}
	switch(id) {
	case 0: return D(playerid,D_ANIM,DSL, ""P"Список анимаций", string, "Выбрать", "Отмена");
	case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
	case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
	case 4: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
	case 5: ApplyAnimation(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
	case 6: ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
	case 7: ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
	case 8: ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
	case 9: ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
	case 10: ApplyAnimation(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
	case 11: ApplyAnimation(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
	case 12: ApplyAnimation(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
	case 13: ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
	case 14: ApplyAnimation(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
	case 15: ApplyAnimation(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
	case 16: ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
	case 17: ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
	case 18: ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
	case 19: ApplyAnimation(playerid,"PED","handsup",4.1,0,0,0,0,0,1);
	case 20: ApplyAnimation(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
	case 21: ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
	case 22: ApplyAnimation(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
	case 23: ApplyAnimation(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
	case 24: ApplyAnimation(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
	case 25: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
	case 26: ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
	case 27: ApplyAnimation(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
	case 28: ApplyAnimation(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
	case 29: ApplyAnimation(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
	case 30: ApplyAnimation(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
	case 31: ApplyAnimation(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
	case 32: ApplyAnimation(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
	case 33: ApplyAnimation(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
	case 34: ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
	case 35: ApplyAnimation(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
	case 36: ApplyAnimation(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
	case 37: ApplyAnimation(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
	case 38: ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
	case 39: ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
	case 40: ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
	case 41: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
	case 42: ApplyAnimation(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
	case 43: ApplyAnimation(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
	case 44: ApplyAnimation(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
	case 45: ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
	case 46: ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
	case 47: ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
	case 48: ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
	case 49: ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
	case 50: ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
	case 51: ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
	case 52: ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
	case 53: ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
	case 54: ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
	case 55: ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
	case 56: ApplyAnimation(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
	case 57: ApplyAnimation(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
	case 58: ApplyAnimation(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
	case 59: ApplyAnimation(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
	case 60: ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
	case 61: ApplyAnimation(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
	case 62: ApplyAnimation(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
	case 63: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
	case 64: ApplyAnimation(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
	default: return 1;
	}
	SetPVarInt(playerid,"Animation", 2);
	TextDrawShowForPlayer(playerid, AnimDraw);
	return 1;
}
CMD:id(playerid, params[]) {
	new id = 0;
	if(isnull(params) || strlen(params) > 25) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /id [Ник игрока]");
	SendClientMessage(playerid,COLOR_BLUE,"Игроки онлайн:");
	new string[144];
	if(!isNumeric(params)) {
		if(!IsPlayerConnected(strval(params))) return SendClientMessage(playerid, COLOR_GREY, not_id);
		format(string, sizeof(string),"%s (%i) | LVL: %d | %s",player_name[strval(params)],strval(params),GetPlayerScore(strval(params)), (TI[strval(params)][tAFK] > 3) ? (""P"[AFK]"):(""));
		SendClientMessage(playerid,-1,string);
		return 1;
	}
	foreach(new i:Player)
	{
		if(!TI[i][tLogin]) continue;
		if(strfind(player_name[i],params, true) != -1)
		{
			if(id > 10) break;
			format(string, sizeof(string),"%s (%i) | LVL: %d | %s",player_name[i],i,GetPlayerScore(i),(TI[i][tAFK] > 3) ? (""P"[AFK]"):(""));
			SendClientMessage(playerid,-1,string);
			id++;
		}
	}
	return 1;
}
CMD:s(playerid,params[]) {
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(GetPVarInt(playerid,"FloodByPlayer") > unix && PI[playerid][pExp] < 3) return SendClientMessage(playerid, COLOR_GREY, "Пожалуйста подождите");
	else if(isnull(params) || strlen(params) > 100) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /s [текст]");
	new string[145];
	format(string, sizeof(string), "%s[%d] кричит: %s", player_name[playerid],playerid,params);
	ProxDetector(35.0,playerid,string,COLOR_WHITE);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && !TI[playerid][tCuffed]) ApplyAnimation(playerid,"ON_LOOKERS","shout_in",9000.999,0,0,0,0,0,1);
	SetPlayerChatBubble(playerid, params, COLOR_WHITE, 60.0, 10000);
	SetPVarInt(playerid,"FloodByPlayer", unix+7);
	return 1;
}
CMD:kiss(playerid,params[]) {
	if(PI[playerid][pJailTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать эту команду в тюрьме");
	if(GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return 1;
	if(sscanf(params,"i",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /kiss [playerid]");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя поцеловать самого себя");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(!IsPlayerStream(4.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с Вами");
	if(PI[params[0]][pJailTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок в тюрьме");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");

	new string[128];

	format(string, sizeof(string), "Вы предложили "P"%s"W" поцелуй",player_name[params[0]]);
	SendUse(playerid, string);
	format(string, sizeof(string), ""P"%s"W" предложил(а) вам поцелуй",player_name[playerid]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	SetPVarInt(params[0],"kiss", playerid+1);
	return 1;
}
alias:w("whisper");
CMD:w(playerid,params[]) {
	if(TI[playerid][tGag]) return SendClientMessage(playerid, COLOR_GREY, "У Вас кляп");
	else if(PI[playerid][pMute] > 0) return	SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	else if(isnull(params) || strlen(params) > 100) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /w(hisper) [сообщение]");
	new string[144];
	format(string, sizeof(string), "%s[%d] шепчет: %s", player_name[playerid],playerid, params);
	SendStreamMessage(2.0, playerid, string,0x6E6E6E6E);
	SetPlayerChatBubble(playerid,params,0x6E6E6E6E,30.0,10000);
	return 1;
}
CMD:flip(playerid) {
	if(PI[playerid][pCash] <= 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств");

	static const  	coin_str0[] = "подбросил(а) монетку, выпал",
	coin_str1[] = "а \"решка\".", coin_str2[] = " \"орёл\".";

	new string[MAX_PLAYER_NAME + ( sizeof ( coin_str0 ) - 1 ) + ( sizeof ( coin_str1 ) - 1 ) + 1 ] ;

	strcat(string, coin_str0);
	strcat(string, (random(2)) ? (coin_str1) : (coin_str2));

	MeAction(playerid, string);
	return 1;
}

CMD:ame(playerid, params[]) {
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(isnull(params) || strlen(params) > 80) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /ame [действие]");
	MeAction(playerid,params);
	SetPlayerChatBubble(playerid, params, COLOR_PURPLE, 13.0, 7000);
	return 1;
}
CMD:ado(playerid, params[]) {
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(isnull(params) || strlen(params) > 80) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /ado [действие]");
	DoAction(playerid,params);
	SetPlayerChatBubble(playerid, params, COLOR_PURPLE, 13.0, 7000);
	return 1;
}
CMD:me(playerid, params[]) {
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(isnull(params) || strlen(params) > 115) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /me [действие]");
	MeAction(playerid,params);
	SetPlayerChatBubble(playerid, params, COLOR_PURPLE, 13.0, 7000);
	return true;
}
CMD:do(playerid, params[]) {
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(isnull(params) || strlen(params) > 80) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /do [действие]");
	DoAction(playerid,params);
	SetPlayerChatBubble(playerid, params, COLOR_PURPLE, 13.0, 7000);
	return 1;
}
CMD:try(playerid,params[]) {
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(isnull(params) || strlen(params) > 80) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /try [действие]");
	TryAction(playerid,params);
	return 1;
}
CMD:todo(playerid,params[]) {
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	new Text_[129], Deistvie_[129];
	if(sscanf(params, "p<*>s[128]s[128]", Text_,Deistvie_)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /todo [текст]*[действие]");
	new string[156];
	format(string, sizeof(string), "\""W"%s{E75480}\", - сказал %s, %s",Text_,player_name[playerid],Deistvie_);
	SendStreamMessage(15.0, playerid, string, 0xE75480FF);
	return 1;
}
CMD:b(playerid,params[]) {
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	new mes[128];
	if(isnull(params) || strlen(params) > 100) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /b [текст]");
	format(mes,sizeof(mes),"(( %s[%d]: %s ))",player_name[playerid],playerid,params);
	ProxDetector(15.0,playerid, mes, 0xcecf9cFF);
	return true;
}

CMD:stats(playerid, params[]) {
	ShowStats(playerid,playerid,0);
	return 1;
}
CMD:fight(playerid, params[]) {
	if(!TI[playerid][tGym]) return SendClientMessage(playerid, COLOR_GREY, "Необходимо переодеться");
	if(RingInfo[0][rgStart] == 1) return SendClientMessage(playerid, COLOR_GREY, "Ринг занят, нужно подождать");
	if(sscanf(params, "ui",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /fight [playerid] [ставка]");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(!TI[params[0]][tGym]) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться в спортзале и одет в спортивную форму");
	if(params[1] < 1000 || params[1] > 10000) return SendClientMessage(playerid, COLOR_GREY, "Ставка не должна быть меньше $1000 и больше $10000");
	if(PI[playerid][pCash] < params[1]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств");
	if(PI[params[0]][pCash] < params[1]) return SendClientMessage(playerid, COLOR_GREY, "У игрока недостаточно средств");

	new string[144];
	format(string, sizeof(string), ""P"%s "W"предложил(а) Вам участвовать в бою. Ставка: "ORANGE"$%d", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "W"участвовать в бою. Ставка: "ORANGE"$%d", player_name[params[0]],params[1]);
	SendUse(playerid, string);

	SetPVarInt(params[0],"fight_offer",playerid+1), SetPVarInt(params[0],"fight_price",params[1]);
	return 1;
}
alias:skills("myskill");
CMD:skills(playerid, params[]) {
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /skills [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(params[0] == playerid) ShowSkill(playerid,params[0]),MeAction(playerid,"просматривает свои навыки оружия");
	else {
		if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
		
		new string[144];
		
		format(string, sizeof(string), ""P"%s "W"хочет показать Вам свои навыки владения оружием", player_name[playerid]);
		SendUse(params[0], string);
		SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

		format(string, sizeof(string), "Вы предложили "P"%s "W"показать Ваши навыки владения оружием", player_name[params[0]]);
		SendUse(playerid, string);
		
		SetPVarInt(params[0],"skillss", playerid + 1);
	}
	return 1;
}

CMD:wanted(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не полицейский!");
	new string[400], num = 0;
	foreach(new i: Player)
	{
		if(PI[i][pSearch])
		{
			if(num == 30) break;
			format(string, sizeof(string), "%s"W"%s(%i) - %i-й уровень розыска\n", string, player_name[i], i, PI[i][pSearch]);
			num++;
		}
	}
	if(num == 0) format(string, sizeof(string), ""W"Список розыскиваемых отсутствует!");
	D(playerid, DIALOG_NONE, DSM, ""P"Список розыскиваемых", string, "Закрыть", "");
	return 1;
}

CMD:find(playerid, params[])
{
	if(!IsACop(playerid)) return true;
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используй: /find [id]");
	if(params[0] == playerid) return true;
	if(TI[params[0]][tMaskTime]) return SendClientMessage(playerid, COLOR_GREY, "Игрок в маске, невозможно найти местоположение!");
	if(PI[params[0]][pSearch] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете разыскивать игрока который не преступник!");
	if(GetPlayerInterior(params[0]) > 0) return SendClientMessage(playerid, COLOR_WHITE,"Игрок находится в каком-то здании");
	if(!IsPlayerConnected(params[0])) return 0;
	new Float:POS[3];
	GetPlayerPos(params[0], POS[0], POS[1], POS[2]);
	EnableGPSForPlayer(playerid, POS[0], POS[1], POS[2]);
	return true;
}
CMD:fam(playerid,params[]) {
	if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
	if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /fam [текст]");
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	new fam = PI[playerid][pFamily] - 1,string[128];
	format(string,sizeof(string),"%s %s[%i]: %s",GetFamName(fam,PI[playerid][pFamRank]),player_name[playerid],playerid,params[0]);
	FamMSG(fam+1,string);
	return 1;
}
CMD:finvite(playerid,params[]) {
	if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
	new string[144];
	if(PI[playerid][pFamRank] < gFamily[PI[playerid][pFamily]-1][famInvRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", gFamily[PI[playerid][pFamily]-1][famInvRang]);
		SendClientMessage(playerid, COLOR_GREY,string);
		return 1;
	}
	if(sscanf(params,"i",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /finvite [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(PI[params[0]][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Игрок состоит в семье");
	if(!ProxDetectorS(3.0, playerid,params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");
	if(fam_members(PI[playerid][pFamily]) > 250) return SendClientMessage(playerid, COLOR_GREY, "В семье недостаточно места");
	if(IsBLName_fam(PI[params[0]][pID],PI[playerid][pFamily])) return SendClientMessage(playerid, COLOR_GREY, "Игрок в ЧС Вашей семьи");

	format(string, sizeof(string), ""P"%s "W"предложил(а) Вам вступить в семью "ORANGE"%s", player_name[playerid], gFamily[PI[playerid][pFamily]-1][famName]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "W"вступить в вашу семью", player_name[params[0]]);
	SendUse(playerid, string);

	SetPVarInt(params[0],"family_invite",playerid + 1);
	return 1;
}
CMD:funinvite(playerid,params[]) {
	if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
	new string[144];
	if(PI[playerid][pFamRank] < gFamily[PI[playerid][pFamily]-1][famUninvRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", gFamily[PI[playerid][pFamily]-1][famUninvRang]);
		SendClientMessage(playerid, COLOR_GREY,string);
		return 1;
	}
	if(sscanf(params,"i",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /funinvite [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(PI[params[0]][pFamily] != PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей семье");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(PI[playerid][pFamRank] <= PI[params[0]][pFamRank]) return SendClientMessage(playerid, COLOR_GREY, "Ваш ранг недостаточен");
	//if(!ProxDetectorS(3.0, playerid,params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");

	new fam = PI[playerid][pFamily]-1;

	format(string,128,""W"%s{%s} выгнал Вас из семьи "W"%s", player_name[playerid],FamilyColor[gFamily[fam][famColor]],gFamily[fam][famName]);
	SendClientMessage(params[0],FamilyColorG[gFamily[fam][famColor]],string);
	PI[params[0]][pFamily] = 0;
	UpdatePlayerData(params[0],"family",0);
	PI[params[0]][pFamRank] = 0;
	UpdatePlayerData(params[0],"pFamRank",0);

	format(string,128,""W"%s{%s} выгнал "W"%s{%s} из семьи", player_name[playerid],FamilyColor[gFamily[fam][famColor]],player_name[params[0]],FamilyColor[gFamily[fam][famColor]]);
	FamMSG(fam+1,string);
	return 1;
}
CMD:foffuninvite(playerid,params[]) {
	if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
	new string[144],query[144],giveplayerid[24];
	if(PI[playerid][pFamRank] < gFamily[PI[playerid][pFamily]-1][famUninvRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", gFamily[PI[playerid][pFamily]-1][famUninvRang]);
		SendClientMessage(playerid, COLOR_GREY,string);
		return 1;
	}
	if(sscanf(params,"s[24]",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /foffuninvite [ник игрока]");
	if(IsPlayerConnected(GetPlayerID(giveplayerid))) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок онлайн");
	new member,rank;
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", giveplayerid);
	new Cache:result = mysql_query(connects, query);
	new rows = cache_num_rows();
	if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не состит в Вашей семье");
	cache_get_value_int(0,"family",member);
	cache_get_value_int(0,"pFamRank",rank);
	if(PI[playerid][pFamily] == member) {
		new query_str[128];
		mysql_format(connects, query_str, sizeof(query_str),"UPDATE `accounts` SET family = '0',pFamRank = '0' WHERE BINARY Name = '%s'", giveplayerid);
		mysql_tquery(connects,query_str);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Данный игрок не состит в Вашей семье");
	cache_delete(result);

	format(string,128,""W"%s{%s} выгнал "W"%s{%s} из семьи", player_name[playerid],FamilyColor[gFamily[PI[playerid][pFamily]-1][famColor]],params,FamilyColor[gFamily[PI[playerid][pFamily]-1][famColor]]);
	FamMSG(PI[playerid][pFamily],string);
	return 1;
}
CMD:frang(playerid, params[]) {
	if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
	new string[512];
	if(PI[playerid][pFamRank] < gFamily[PI[playerid][pFamily]-1][famGiveRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", gFamily[PI[playerid][pFamily]-1][famGiveRang]);
		SendClientMessage(playerid, COLOR_GREY,string);
		return 1;
	}
	if(sscanf(params,"i",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /frang [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(PI[params[0]][pFamRank] >= 8) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(PI[playerid][pFamily] != PI[params[0]][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей семье");
	if(PI[playerid][pFamRank] <= PI[params[0]][pFamRank]) return SendClientMessage(playerid, COLOR_GREY, "Ваш ранг недостаточен");

	if(PI[playerid][pFamRank] == 8) {
		for(new i = 1; i <= 8; i++) {
			if(i>= PI[playerid][pFamRank]) break;
			format(string,sizeof(string),"%s%s%s (%i)\n",string,(PI[params[0]][pFamRank] == i) ? (""P"") : (""),GetFamName(PI[playerid][pFamily]-1,i),i);
			D(playerid,D_FAM_RANK,DSL,""P"Выберите ранг",string,"Выбрать","Закрыть");
		}
		SetPVarInt(playerid,"id_fgiverank",params[0]);
	}
	else if(PI[playerid][pFamRank] == 8-(8-PI[playerid][pFamRank])) {
		for(new i = 1; i <= 8; i++) {
			if(i>= PI[playerid][pFamRank]) break;
			format(string,sizeof(string),"%s%s%s (%i)\n",string,(PI[params[0]][pFamRank] == i) ? (""P"") : (""),GetFamName(PI[playerid][pFamily]-1,i),i);
			D(playerid,D_FAM_RANK,DSL,""P"Выберите ранг",string,"Выбрать","Закрыть");
		}
		SetPVarInt(playerid,"id_fgiverank",params[0]);
	}
	return 1;
}
CMD:fmembers(playerid) { 
	if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
	new string[700], str[700];
	strcat(str,""W"Имя:\t"W"Уровень:\t"W"Ранг\n");
	strcat(string,str);
	foreach(new i:Player)
	{
		if(!TI[i][tLogin]) continue;
		if(PI[playerid][pFamily] == PI[i][pFamily]) {
			format(str,sizeof(str),""P"%i."W" %s\t%d\t%s\n",i,player_name[i],PI[i][pLevel],GetFamName(PI[playerid][pFamily]-1,PI[i][pFamRank]));
			strcat(string,str);
		}
	}
	D(playerid,D_FAMILY_INFO,DSTH,""P"Семья online",string,"Назад","");
	return 1;
}
CMD:famspcar(playerid) {
	if(PI[playerid][pFamRank] < gFamily[PI[playerid][pFamily]-1][famSpawnCar]) {
		new string[76];
		format(string,sizeof(string),"Данная функция доступна с %i ранга", gFamily[PI[playerid][pFamily]-1][famSpawnCar]);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}
	new fam = PI[playerid][pFamily]-1;
	for(new i = 0; i < 5; i++) {
		if(!IsValidVehicle(CarFamily[fam][i][LoadCar])) continue;
		if(CarFamily[fam][i][LoadCar] == INVALID_VEHICLE_ID) continue;
		if(IsVehicleOccupied(CarFamily[fam][i][LoadCar])) continue;
		SetVehicleToRespawn(CarFamily[fam][i][LoadCar]);
	}
	new string[128];
	format(string,sizeof(string),"%s %s[%i]: заспавнил незанятый транспорт",GetFamName(fam,PI[playerid][pFamRank]),player_name[playerid],playerid);
	FamMSG(fam+1,string);
	return true;
}
forward LoadSettings();
public LoadSettings()
{
    new time = GetTickCount();
    new rows = cache_num_rows();
	new string[128];
    if(!rows) return print("[MySQL ERROR]: LoadSettings не произвелся");
    cache_get_value_name(0, "ServerName", BDserverName);
    format(string,sizeof(string),"hostname %s", BDserverName);
    SendRconCommand(string);
    cache_get_value_name(0, "ServerPassword", BDserverPassword);
	cache_get_value_name_int(0, "DonateX", DonateX);
	cache_get_value_name_int(0, "PayDayX", PayDayX);
    if(strlen(BDserverPassword) != 0)
    {
        format(string,sizeof(string),"password %s", BDserverPassword);
        SendRconCommand(string);
    }
    printf("[MySQL]: Успешная загрузка 'LoadSettings' - загружено за %i м.с", GetTickCount() - time);
	return 1;
}
forward LoadMapping();
public LoadMapping()
{
	new stringer[144];
    new time = GetTickCount();
    new rows = cache_num_rows();
    if(!rows) return print("[MySQL ERROR]: В базе данных не найден маппинг!");
    new obje, Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz,objectid,bdid;
    for(new i = 0; i < rows; i++)
    {
        cache_get_value_name_int(i, "id", bdid);
        cache_get_value_name_float(i, "x", x);
        cache_get_value_name_float(i, "y", y);
        cache_get_value_name_float(i, "z", z);
        cache_get_value_name_float(i, "rx", rx);
        cache_get_value_name_float(i, "ry", ry);
        cache_get_value_name_float(i, "rz", rz);
        cache_get_value_name_int(i, "objectid", objectid);
        obje = CreateDynamicObject(objectid, x, y, z, rx, ry, rz, -1, -1, -1, 300.0);
        mysql_format(connects, stringer, 144, "UPDATE `bmap` SET `ingameid` = '%d' WHERE `id` = '%d' LIMIT 1", obje,bdid);
        mysql_tquery(connects, stringer);
    }
    printf("[MySQL]: Успешная загрузка 'LoadMapping' за %i м.с", GetTickCount() - time);
    return 1;
}
CMD:fampark(playerid) {
	if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
	new fam = PI[playerid][pFamily]-1;
	if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return SendClientMessage(playerid, COLOR_GREY, "Доступно только владельцу семьи");
	if(!gFamily[fam][famHouse]) return SendClientMessage(playerid, COLOR_GREY, "У вашей семьи нет дома");
	if(!IsPlayerInRangeOfPoint(playerid, 30.0, gHouses[gFamily[fam][famHouse]-1][houseX], gHouses[gFamily[fam][famHouse]-1][houseY], gHouses[gFamily[fam][famHouse]-1][houseZ])) {
		SendClientMessage(playerid, COLOR_GREY, "Вы должны находится рядом с семейным домом");
		return true;
	}
	new id = -1;
	new Float:check_pos[3];
	for(new i = 0; i < 5; i++) {
		if(CarFamily[fam][i][LoadCar] == INVALID_VEHICLE_ID) continue;
		GetVehiclePos(CarFamily[fam][i][LoadCar], check_pos[0], check_pos[1], check_pos[2]);
		if(IsPlayerInRangeOfPoint(playerid,2.5,check_pos[0],check_pos[1],check_pos[2]))
		{
			if(GetPlayerVehicleID(playerid) != CarFamily[fam][i][LoadCar]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в семейном автомобиле");
			SendClientMessage(playerid, COLOR_ORANGE, "Транспорт успешно припаркован");
			save_fcar(fam, i);
			return true;
		}
	}
	if(id == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в семейном автомобиле");
	return true;
}

CMD:fmenu(playerid) {
	if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
	family_dialog(playerid);
	return 1;
}
CMD:radio(playerid) return D(playerid, D_NEWS_SELECT_2, DSL, ""P"Эфиры", ""P"1."W" Радиоцентр LS\n"P"-"W" Выключить", "Выбрать", "Закрыть");
CMD:ad(playerid, params[]) {
	if(!PI[playerid][pPhone]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет телефона/SIM-карты");
	if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, очередь на объявления занята, попробуйте позже");
	if(GetPVarInt(playerid, #pAdvertTime) > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Нельзя посылать чаще одного объявления в минуту");
	if(isnull(params) || strlen(params) > 90) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /ad [текст объявления]");
	SetPVarString(playerid,"advert",params);
	new price = strlen(params) * advertise_price;
	SetPVarInt(playerid,"ad_price",price);
	
	static const f_str[] = ""W"Цена объявления: "ORANGE"%d$\n"W"Вы действительно хотите отправить объявление?";
	new string[sizeof(f_str) +1 + (-2 + 6)];
	
	format(string,sizeof(string),f_str,price);
	D(playerid,D_ADVERT_START,DSM, ""P"Объявление",string,"Да","Нет");
	return 1;
}
CMD:audience(playerid, params[]) {
	new radioall = 0,points[3],string[900],ratingLS = 0,procLS = 0;
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pSettings][2] == fLSNEWS) ratingLS++, radioall++;
	}
	if(!radioall) return SendClientMessage(playerid, COLOR_GREY, "Никто не подключен к радиостанции");
	procLS = 100 / radioall * ratingLS;
	points[0] = 100 - procLS;
	format(string,sizeof(string),""W"Радиоцентр г. ЛС:\t["P"%s"W"] %i%% ("ORANGE"%i"W") человек",
	ToDevelopSkills(procLS,points[0]),procLS,ratingLS);
	D(playerid,DIALOG_NONE,DSM,""P"Рейтинг слушателей",string,"Закрыть","");
	return true;
}
CMD:edit(playerid) {
	if(!IsANews(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник новостей");
	if(!start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Необходимо начать рабочий день");
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(PI[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Доступно со 2 ранга");
	new veh = GetPlayerVehicleID(playerid);
	if(!PlayerToPoint(10.0,playerid,2823.2854,1067.2120,1052.5973) && !PlayerToPoint(10.0,playerid,2842.2258,1068.7367,1052.5673) &&
			VehicleInfo[veh][vTeam] != fLSNEWS && VehicleInfo[veh][vTeam] != fSFNEWS && VehicleInfo[veh][vTeam] != fLVNEWS) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться на рабочем месте/служебном автомобиле");
	ShowAdvertList(playerid);
	return 1;
}
CMD:adv(playerid) {
	if(!IsANews(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник новостей");
	if(!start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Необходимо начать рабочий день");
	new str[150];
	format(str,sizeof(str),""W"Отредактировано всего объявлений:"O" %d",PI[playerid][pAdvert]);
	D(playerid, DIALOG_NONE, DSM, " ",str, "Закрыть", "");
	return 1;
}
CMD:top(playerid) {
	D(playerid, D_TOP_PLAYERS, DSL, ""P"Лучшие игроки",""P"1."W" Самые активные игроки\n"P"2."W" Самые богатые игроки", "Выбрать", "Закрыть");
}
CMD:topmed(playerid) {
	if(PI[playerid][pMember] != fMEDICLS) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в больнице LS");
	new query[128], string[200], name[24], MedHeal = 0;
	mysql_format(connects, query, sizeof(query), "SELECT `Name`, `MedHeal` FROM `accounts` WHERE `pMember` = %d ORDER BY `MedHeal ` DESC LIMIT 5", PI[playerid][pMember]);
	new Cache:result = mysql_query(connects, query);
	new rows;
	cache_get_row_count(rows);
	if(!rows) return D(playerid, DIALOG_NONE, DSM, ""P"ТОП-5 сотрудников",""W"Список сотрудников пуст", "Закрыть", "");
	if(rows)
	{
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "MedHeal",MedHeal);
			if(MedHeal > 0) format(string, sizeof(string),"%s%d. %s ["YELLOW"%d"W" вылечено]\n",string,i+1, name, MedHeal);
		}
		cache_delete(result);
		D(playerid, DIALOG_NONE, DSL, ""P"Лучшие работники",string, "Закрыть", "");
	}
	return true;
}

CMD:topnews(playerid) {
	if(!IsANews(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник новостей");
	new query[128], string[400], name[24], advert;
	mysql_format(connects, query, sizeof(query), "SELECT `Name`, `Advert` FROM `accounts` WHERE `pMember` = %d ORDER BY `Advert` DESC LIMIT 10", PI[playerid][pMember]);
	new Cache:result = mysql_query(connects, query);
	new rows, count = 0;
	cache_get_row_count(rows);
	if(rows)
	{
		for(new i; i < rows; i ++)
		{
			cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "Advert",advert);
			if(advert > 0) count++, format(string, sizeof(string),"%s%d. %s ["YELLOW"%d"W" объявлений]\n",string,i+1, name, advert);
		}
		cache_delete(result);
		D(playerid, DIALOG_NONE, DSL, ""P"Лучшие работники",string, "Закрыть", "");
	}
	if(!count) return D(playerid, DIALOG_NONE, DSM, ""P"ТОП-10 сотрудников",""W"Список сотрудников пуст", "Закрыть", "");
	return true;
}

CMD:ether(playerid) {
	if(!IsANews(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник новостей");
	if(PI[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 5 ранга");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] == fLSNEWS) {
		if(!TI[playerid][tEther]) {
			TI[playerid][tEther] = true;
			SendClientMessage(playerid,COLOR_GREEN,"Вы в прямом эфире");		
			PI[playerid][pSettings][2] = PI[playerid][pMember];	
			save_settings(playerid);
		}
		else {
			TI[playerid][tEther] = false;
			SendClientMessage(playerid,COLOR_GREEN,"Вы вышли из прямого эфира");
		}
	}
	else if(PlayerToPoint(10.0,playerid,2823.2854,1067.2120,1052.5973)) {
		new str[10];
		switch(TI[playerid][tEther]) {
		case 0: str = "Начать";
		case 1: str = "Завершить";
		}
		new string[128];
		format(string,sizeof(string),"1. %s прямой эфир\n2. Приём звонков",str);
		D(playerid,D_NEWS, DSL, ""P"Меню эфира", string, "Далее", "Отмена");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы не в офисе/служебном автомобиле");
	return 1;
}
CMD:skip(playerid) {
	if(!IsANews(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник новостей");

	switch(PI[playerid][pMember]) {
	case fLSNEWS: {
			if(calls_ether[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Никого нет на линии");
			SendClientMessage(calls_ether[0], COLOR_GREY,"Вы были отсоединены ведущим");
			PhoneStatus(calls_ether[0],false);
			TI[calls_ether[0]][tPhoneNews] = true;
			calls_ether[0] = INVALID_PLAYER_ID;
		}
	}
	SendClientMessage(playerid, COLOR_GREY, "Игрок отсоединен");
	return 1;
}
stock buyacces(playerid) {
	new string[512];
	format(string,sizeof(string),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",acces_name_all[0],acces_name_all[1],acces_name_all[2],acces_name_all[3],acces_name_all[4],acces_name_all[5],acces_name_all[6],acces_name_all[7],acces_name_all[8],acces_name_all[9],acces_name_all[10],acces_name_all[11]);
	D(playerid, D_BUYACS, DSL,""P"Покупка аксесуаров",string, "Выбрать", "Отмена");
	return true;
}
CMD:sellfish(playerid) {
	if(!PlayerToPoint(7.0,playerid,-396.4070,-413.7928,16.0442)) return SendClientMessage(playerid, COLOR_GREY, "Вы не у склада для продажи рыбы");
	if(!PI[playerid][pFish]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет рыбы");
	new string[128];
	format(string,sizeof(string),"Вы успешно продали "P"%.1f"W" кг. рыбы за "ORANGE"$%d",PI[playerid][pFish],floatround(PI[playerid][pFish])*150);
	SendUse(playerid,string);
	fish_sklad += PI[playerid][pFish];
	GiveMoney(playerid,floatround(PI[playerid][pFish])*150,"продажа рыбы");
	PI[playerid][pFish] = 0;
	new query[200];
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pFish`= '0' WHERE `Name` = '%s' LIMIT 1",player_name[playerid]);
	mysql_tquery(connects,query);
	return 1;
}
CMD:fish(playerid) {
	if(!GetPVarInt(playerid,"fish_place")) return 1;
	new place = GetPVarInt(playerid,"fish_place")-1;
	if(!PlayerToKvadrat(playerid,fish_place[place][0], fish_place[place][1],fish_place[place][2],fish_place[place][3])) return SendClientMessage(playerid, COLOR_GREY, "Вы не в точке для ловли рыбы");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя ловить рыбу за рулем лодки");
	if(Fishing[playerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Вы уже ловите рыбу");
	if(PI[playerid][pRod] == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет удочки");
	if(PI[playerid][pRopes] == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет снастей для удочки");
	if(PI[playerid][pWorms] == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет наживки на удочку");
	SetPlayerArmedWeapon(playerid, 0);
	if(!IsPlayerAttachedObjectSlotUsed(playerid, 7)) SetPlayerAttachedObject(playerid, 7,18632,6,0.079376,0.037070,0.007706,181.482910,0.000000,0.000000,1.000000,1.000000,1.000000);
	TogglePlayerControllable(playerid, false);
	ApplyAnimation(playerid,"SWORD","SWORD_3",4.1, 0, 1, 1, 1, 0, 1);
	Fishing[playerid] = true;
	static const f_str[] = "Доступно червей: %d";
	new string[sizeof(f_str) +1 + (-2 + 4)];
	format(string,sizeof(string),f_str,PI[playerid][pWorms]);
	SendOk(playerid,string);
	JobTempProcess[playerid] = 7;
	TI[playerid][tProcess][0] = 0;
	TI[playerid][tProcess][1] = 10;
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
	for(new YN = 0;YN < 3;YN++) {
		TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
		if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
	}
	RandomYareNforJOBS(playerid);
	return 1;
}

CMD:poisk(playerid) {
	if(!PlayerToKvadrat(playerid, -809, -2057.5, -706, -1873.5)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в зоне для поиска!");
	if(Fishing[playerid] == true) return SendClientMessage(playerid, COLOR_GREY, "Вы уже ищите предметы.");
	if(PI[playerid][pMag] == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет магнита.");
	if(PI[playerid][pRope] == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет веревки");
	SetPlayerArmedWeapon(playerid, 0);
	//if(!IsPlayerAttachedObjectSlotUsed(playerid, 7)) SetPlayerAttachedObject(playerid, 7,18632,6,0.079376,0.037070,0.007706,181.482910,0.000000,0.000000,1.000000,1.000000,1.000000);
	TogglePlayerControllable(playerid, false);
	ApplyAnimation(playerid,"SWORD","SWORD_3",4.1, 0, 1, 1, 1, 0, 1);
	Poisk[playerid] = true;
	JobTempProcess[playerid] = 10;
	TI[playerid][tProcess][0] = 0;
	TI[playerid][tProcess][1] = 10;
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
	for(new YN = 0;YN < 3;YN++) {
		TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
		if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
	}
	RandomYareNforJOBS(playerid);
	return 1;
}

CB: poisk_player(playerid) {
	new rand_fish = random(80);
	TogglePlayerControllable(playerid, true);
	ClearAnims(playerid);
	Poisk[playerid] = false;
	switch(rand_fish) {
	case 0..10: {
			AddItem(playerid, 464, 1); // гвозди
		}
	case 11..19: {
			AddItem(playerid, 465, 1); // метал
		}
	case 20..28: {
			AddItem(playerid, 466, 1); // метал.ящик
		}
	case 29..35: {
			AddItem(playerid, 467, 1); // ящик с патронами
		}
	case 36..42: {
			AddItem(playerid, 468, 1); // Ножик
		}
	case 43..48: {
			AddItem(playerid, 469, 1); // Военная винтовка
		}
	case 49..53: {
			AddItem(playerid, 470, 1); // Японский меч
  		}
	case 54..57: {
			AddItem(playerid, 471, 1); // Боеголовка
  		}
	case 58..60: {
			AddItem(playerid, 472, 1); // Кейс
  		}
	case 61..62: {
			AddItem(playerid, 473, 1); // Старинная монета
  		}
	case 63..70: {
			SendOk(playerid,"Магнит оторвался");
			PI[playerid][pMag] --;
			UpdatePlayerData(playerid,"pMag",PI[playerid][pMag]);
		}
	case 71..80: {
			SendOk(playerid,"Веревка порвалась");
			PI[playerid][pRope] --;
			UpdatePlayerData(playerid,"pRope",PI[playerid][pRope]);
		}
	default: SendOk(playerid,"Вы ничего не выташили.");
	}
	return true;
}

CB: fish_player(playerid) {
	new rand_fish = random(sizeof(FishName) + 3);
	new string[150];
	TogglePlayerControllable(playerid, true);
	RemovePlayerAttachedObject(playerid, 7);
	ClearAnims(playerid);
	Fishing[playerid] = false; 
	switch(rand_fish) {
	case 0..7: {
			if(PI[playerid][pExpJob][2] < 800)
			{
				PI[playerid][pExpJob][2] += 1;
				if(PI[playerid][pExpJob][2] == 800) {
					PI[playerid][pAcsJob][2] = 1;
					SendOk(playerid,"Вы получили новый аксессуар за достижение! "GREEN"(/mm > навыки персонажа > полученные аксессуары)");
					save_acsjob(playerid);
				}
				save_jskill(playerid);
			}
			if(QuestProgress[playerid][46] < 10 && AcceptQuest[playerid][46] != 0) QuestProgress[playerid][46] ++,save_quest(playerid,46);
			if(QuestProgress[playerid][46] == 10 && AcceptQuest[playerid][46] != 0) {
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
			}
			new str[12];
			format(str,sizeof(str),"%i.%i",Random(1,5), Random(1, 98+1));
			new Float:fish_massa = floatstr(str);
			PI[playerid][pFish] += fish_massa;
			format(string,sizeof(string),"Вы поймали рыбу - "P"%s"W", масса которой - "ORANGE"%.1f"G" кг",FishName[rand_fish],fish_massa);
			SendUse(playerid,string);
			new query[200];
			mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pFish`= '%f' WHERE `Name` = '%s' LIMIT 1",PI[playerid][pFish],player_name[playerid]);
			mysql_tquery(connects,query);
			PI[playerid][pWorms] --;
			UpdatePlayerData(playerid,"pWorms",PI[playerid][pWorms]);
		}
	case 8..9: {
			SendOk(playerid,"Рыба сорвалась");
			PI[playerid][pWorms] --;
			UpdatePlayerData(playerid,"pWorms",PI[playerid][pWorms]);
		}
	default: SendOk(playerid,"Вы ничего не поймали. Наживка осталась цела");
	}
	return true;
}
stock GetNearestTrunckFuel(playerid) {
	for(new i = 0;i<gBusinessCount;i++) {
		if(gBusiness[i][bizzType] != 7) continue;
		if(PlayerToPoint(10.0,playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) return i;
	}
	return -1;
}
CMD:fill(playerid) 
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы не за рулем");
	new i = GetNearestTrunckFuel(playerid);
	if(i == -1) return 1;
	new vehicleid = GetPlayerVehicleID(playerid);
	new modelid = GetVehicleModel(vehicleid) - 400;
	if(!gTransport[modelid][trFuelable]) return SendClientMessage(playerid, COLOR_GREY, "Ваше Т/С не имеет бензобака");
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	if(GetEngineStat(vehicleid)) return SendClientMessage(playerid, COLOR_GREY, "Прежде чем заправиться, заглушите двигатель");
	if(GetPVarInt(playerid,"tank_vfuel")) return SendClientMessage(playerid, COLOR_GREY, "Вы уже заправляете автомобиль");
	if(gBusiness[i][bizzProduct] <= 0) return SendClientMessage(playerid, COLOR_GREY, "На заправке нет топлива");
	static const f_str[] = "\n"W"Укажите на сколько литров заправить ваше Т/С:\n\nДоступно литров в баке: {FF9968}%.0f"W"\nВместимость бака: {FF9968}%d"W"\nМожно заправить на: {FF9968}%.0fл"W"\nСтоимость 1л: "ORANGE"$%d\n";
	new string[sizeof(f_str) +1 + 30];
	format(string, sizeof(string), f_str, VehicleInfo[vehicleid][vFuel],gTransport[modelid][trTank],gTransport[modelid][trTank]-VehicleInfo[vehicleid][vFuel],gBusiness[i][bizzPrice]);
	D(playerid,D_FUEL,DSI, ""P"Заправка",string,"Заправить", "Отмена");
	SetPVarInt(playerid,"azs_id",i);
	return 1;
}
cmd:battery(playerid) 
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы не за рулем");
	new vehicleid = GetPlayerVehicleID(playerid);
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	if(GetEngineStat(vehicleid)) return SendClientMessage(playerid, COLOR_GREY, "Прежде чем зарядиться, заглушите двигатель");
	if(GetPVarInt(playerid,"tank_vbattery")) return SendClientMessage(playerid, COLOR_GREY, "Вы уже заправляете автомобиль");
	if(VehicleInfo[vehicleid][vAkum] >= 100) return SendClientMessage(playerid, COLOR_GREY, "У вас полностью заряжен аккамулятор!");
	SetPVarInt(playerid, "zryadka", 1);
	return 1;
}
forward ChargeBattery(playerid);
public ChargeBattery(playerid)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(VehicleInfo[vehicleid][vAkum] < 100) 
	{
		if(GetEngineStat(vehicleid)) 
		{
			DeletePVar(playerid, "tank_vbattery"); 
			return SendClientMessage(playerid, COLOR_GREY, "Прежде чем зарядиться, заглушите двигатель");
		}
		VehicleInfo[vehicleid][vAkum] += 1;
	}
	else return SendClientMessage(playerid, COLOR_GRAY, "Вы успешно зарядили аккамулятор транспорта!");
	return 1;
} 
CMD:buyfuel(playerid) {
	if(GetInvent(playerid, 454)+1 > 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
	new i = GetNearestTrunckFuel(playerid);
	if(i == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть на АЗС");
	static const f_str[] = ""W"Вы собираетесь купить канистру, стоимостью: "ORANGE"$%d\n"W"С ее помощью Вы можеет заправить свое Т/С на "P"10 литров"W"\n\n\
						Вы действительно хотите купить канистру?";
	new string[sizeof(f_str) +1 + (-2 + 5)];
	format(string,sizeof(string),f_str,gBusiness[i][bizzPrice]*10);
	D(playerid,D_BUY_FUEL,DSM, ""P"Покупка канистры",string,"Да","Нет");
	return true;
}
CMD:fillcar(playerid) {
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться в Т/С");
	new car = GetPlayerVehicleID(playerid);
	if(!GetInvent(playerid, 454)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет канистры с бензином");
	if(GetEngineStat(car)) return SendClientMessage(playerid, COLOR_GREY, "Прежде чем заправиться, заглушите двигатель");
	if(VehicleInfo[car][vFuel]+10 > gTransport[GetVehicleModel(car) - 400][trTank]) return SendClientMessage(playerid, COLOR_GREY, "В машине, которую Вы хотите заправить достаточно топлива");
	SendOk(playerid, "Вы дозаправили свой автомобиль 10 литрами бензина");
	VehicleInfo[car][vFuel] += 10;
	DeleteItem(playerid, 454, 1);
	return true;
}
CMD:buyint(playerid) {
	if(!PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома");
	if(GetPVarInt(playerid, "buy_interior") > 0) {
		new string[128];
		format(string,sizeof(string),"\n\n"W"Вы действительно хотите приобрести данный интерьер за "ORANGE"$%i\n\n",150000);
		return D(playerid, D_HOUSE_BUYINT_2, DSM,""P"Покупка интерьера",string, "Купить", "Отмена");
	}
	return 1;
}
CMD:hhealme(playerid) {
	new hint = gHouses[PI[playerid][pHouse]-1][houseHint];
	new Float:x, Float:y, Float:z;
	x = hinterior_info[hint][h_pos_exit][0];
	y = hinterior_info[hint][h_pos_exit][1];
	z = hinterior_info[hint][h_pos_exit][2];
	if(!IsPlayerInRangeOfPoint(playerid,30.0,x,y,z) && GetPlayerVirtualWorld(playerid) != PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться в своём доме");
	new houseid = PI[playerid][pHouse]-1;
	if(!gHouses[houseid][houseHealth]) return SendClientMessage(playerid, COLOR_GREY, "В сейфе дома нет аптечек");
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health + 60.0 < 160.0 ) health += 60.0;
	else health = 160.0;
	SetHealth(playerid,health);
	MeAction(playerid,"использовал(а) аптечку");
	SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
	ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	gHouses[houseid][houseHealth] -= 1;
	new query[128];
	mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `medkit` = '%d' WHERE id = '%d'",gHouses[houseid][houseHealth],houseid+1);
	mysql_tquery(connects, query);
	new string[60];
	format(string,sizeof(string),"Доступно аптечек в доме: %d",gHouses[houseid][houseHealth]);
	SendOk(playerid,string);
	return 1;
}
CMD:safe(playerid) {
	if(PI[playerid][pFamily])
	{
		new fam = PI[playerid][pFamily]-1;
		if(gFamily[fam][famHouse])
		{
			if(gHouses[gFamily[fam][famHouse]-1][houseFamily] == gFamily[fam][famHouse])
			{
				if(gFamily[PI[playerid][pFamily]-1][famSklad] > PI[playerid][pFamRank]) return SendClientMessage(playerid, COLOR_GREY, "Ваш ранг недостаточен");
				new houseid = TI[playerid][tSelectHouse];
				new mes[1024];
				format(mes,sizeof(mes),""P"1."W" Наркотики "P"[%d г.]\n"P"2."W" Аптечки "P"[%d шт.]\n"P"3."W" Деньги "P"[$%d]\n"P"4."W" Sniper Rifle "P"[%d пт.]\n"P"5."W" Country Rifle "P"[%d пт.]\n"P"6."W" M4 "P"[%d пт.]\n"P"7."W" AK-47 "P"[%d пт.]\n"P"8."W" MP5 "P"[%d пт.]\n"P"9."W" Shotgun "P"[%d пт.]\n"P"10."W" Desert Eagle "P"[%d пт.]\n"P"11."W" SD Pistol "P"[%d пт.]\n"P"12."W" Baseball Bat "P"[%d шт.]",gHouses[houseid][houseDrugs],gHouses[houseid][houseHealth],gHouses[houseid][houseSafeMoney],gHouses[houseid][houseGun][0],gHouses[houseid][houseGun][1],gHouses[houseid][houseGun][2],gHouses[houseid][houseGun][3],gHouses[houseid][houseGun][4],gHouses[houseid][houseGun][5],gHouses[houseid][houseGun][6],gHouses[houseid][houseGun][7],gHouses[houseid][houseGun][8]);
				D(playerid,dSafeAction,DSL,"Сейф",mes,"Далее","Отмена");
				return true;
			}
		}
	}
	if(!PI[playerid][pHouse]) return 1;
	new hint = gHouses[PI[playerid][pHouse]-1][houseHint];
	new Float:x, Float:y, Float:z;
	x = hinterior_info[hint][h_pos_exit][0];
	y = hinterior_info[hint][h_pos_exit][1];
	z = hinterior_info[hint][h_pos_exit][2];
	if(!IsPlayerInRangeOfPoint(playerid,30.0,x,y,z) && GetPlayerVirtualWorld(playerid) != PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться в своём доме");
	new houseid = PI[playerid][pHouse]-1;
	new mes[1024];
	format(mes,sizeof(mes),""P"1."W" Наркотики "P"[%d г.]\n"P"2."W" Аптечки "P"[%d шт.]\n"P"3."W" Деньги "P"[$%d]\n"P"4."W" Sniper Rifle "P"[%d пт.]\n"P"5."W" Country Rifle "P"[%d пт.]\n"P"6."W" M4 "P"[%d пт.]\n"P"7."W" AK-47 "P"[%d пт.]\n"P"8."W" MP5 "P"[%d пт.]\n"P"9."W" Shotgun "P"[%d пт.]\n"P"10."W" Desert Eagle "P"[%d пт.]\n"P"11."W" SD Pistol "P"[%d пт.]\n"P"12."W" Baseball Bat "P"[%d шт.]",gHouses[houseid][houseDrugs],gHouses[houseid][houseHealth],gHouses[houseid][houseSafeMoney],gHouses[houseid][houseGun][0],gHouses[houseid][houseGun][1],gHouses[houseid][houseGun][2],gHouses[houseid][houseGun][3],gHouses[houseid][houseGun][4],gHouses[houseid][houseGun][5],gHouses[houseid][houseGun][6],gHouses[houseid][houseGun][7],gHouses[houseid][houseGun][8]);
	D(playerid,dSafeAction,DSL,"Сейф",mes,"Далее","Отмена");
	return 1;
}

CMD:hgps(playerid) {
	if(!PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома");
	if(GetPlayerInterior(playerid) > 0) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в помещении");
	if(GetPVarInt(playerid,"route")) return SendClientMessage(playerid, COLOR_GREY, "Сначала закончите работу водителя автобуса");
	if(GetPVarInt(playerid,"WaitExam")) return SendClientMessage(playerid, COLOR_GREY, "Невозможно во время сдачи экзамена");
	if(GetPVarInt(playerid,"check_job_cleaner")) return SendClientMessage(playerid, COLOR_GREY, "Невозможно во время работы мойщика дорог");
	if(GetPVarInt(playerid,"RaceCP")) return SendClientMessage(playerid, COLOR_GREY, "Невозможно использовать в данный момент");
	new houseid = PI[playerid][pHouse]-1;
	EnableGPSForPlayer(playerid,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
	SendOk(playerid,"Местоположение Вашего дома отмечено в GPS");
	return true;
}

CMD:house(playerid) {
	if(PI[playerid][pTempKey] > 0) {
		D(playerid, dRentMenu, DSL, ""P"Панель жителя", "Выселиться из дома\nБуксировка транспорта", "Выбрать", "Закрыть");
		return 1;
	}
	if(!PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома");
	new hint = gHouses[PI[playerid][pHouse]][houseHint];
	new Float:x, Float:y, Float:z;
	x = hinterior_info[hint][h_pos_exit][0];
	y = hinterior_info[hint][h_pos_exit][1];
	z = hinterior_info[hint][h_pos_exit][2];
	if(!IsPlayerInRangeOfPoint(playerid,30.0,x,y,z) && GetPlayerVirtualWorld(playerid) != PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в своем доме");
	SetPVarInt( playerid, "Hpanel:HId", PI[playerid][pHouse]-1);
	
	new status[24];
	if(!gHouses[PI[playerid][pHouse]-1][houseClose]) status = ""NO"Закрыть";
	else status = "{33AA33}Открыть";
	static const f_str[] = ""P"1."W" %s"W" дом\n"P"2."W" Информация о доме\n"P"3."W" Улучшения\n"P"4."W" Жители\n"P"5."W" Сейф\n"P"6."W" Продать домашний транспорт\n"P"7."W" Покупка интерьера\n"P"8."NO" Продать дом";
	new string[sizeof(f_str) +1 + (-2 + 24)];
	format(string,sizeof(string),f_str,status);
	return D(playerid,D_HOUSE_MENU,2,""P"Управление домом",string,"Выбрать","Отмена");
}
CMD:exit(playerid) {
	if(TI[playerid][tInHouse]) {
		new houseid = TI[playerid][tSelectHouse];
		new hint = gHouses[houseid][houseHint];
		new Float:x, Float:y, Float:z;
		x = hinterior_info[hint][h_pos_exit][0];
		y = hinterior_info[hint][h_pos_exit][1];
		z = hinterior_info[hint][h_pos_exit][2];
		if(IsPlayerInRangeOfPoint(playerid,2.0,x,y,z))
		{
			if(gHouses[houseid][houseImprove][2]) {
				D(playerid,D_HOUSE_EXIT,DSL,""P"Выход",""P"1."W" На улицу\n"P"2."W" В гараж","Выбрать","Отмена");
			}
			if(gHouses[houseid][houseImprove][3]) {
				D(playerid,D_HOUSE_EXIT,DSL,""P"Выход",""P"1."W" На улицу\n"P"2."W" В гараж\n"P"3."W" В подвал","Выбрать","Отмена");
			}
			if(gHouses[houseid][houseImprove][2] == 0)
			{
				switch(houseid) {
				case 425..434: FreezePlayerForTime(playerid,2);
				}
				TI[playerid][tTPpick] = true;
				SetPlayerPosAC(playerid,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
				SetPlayerFacingAngle(playerid,gHouses[houseid][houseR]);
				TI[playerid][tInHouse] = false;
				TI[playerid][tSelectHouse] = 0;
				SetCameraBehindPlayer(playerid);
			}
		}
	}
	return 1;
}
CMD:sellhouse(playerid,const params[]) {
	if(!PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома");
	if(PI[playerid][pCredit]) return SCM(playerid, COLOR_GREY, "У вас не выплачен кредит. Продажа Т/C запрещена!");
	new houseid = PI[playerid][pHouse]-1;
	if(!gHouses[houseid][houseOwner]) return SendClientMessage(playerid, COLOR_GREY, "Вы не являетесь владельцем дома");
	if(!GetString(player_name[playerid],gHouses[houseid][houseOwner])) return SendClientMessage(playerid, COLOR_GREY, "Вы не являетесь владельцем дома");
	if(!PlayerToPoint(4,playerid,gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ])) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться рядом со своим домом");
	if(!params[0]) {
		new procent = floatround((gHouses[houseid][housePrice]/100)*Nalog[0]);
		new sum = (gHouses[houseid][housePrice]-procent);
		new string[156];
		format(string,sizeof(string),""W"Вы хотите продать дом государству за "ORANGE"%d$?\n\n"G"Для продажи дома игроку введите: /sellhouse [ID игрока] [Цена]",sum);
		D(playerid,D_HOUSE_SELL,DSM, ""P"Продажа дома",string,"Да","Нет");
		return true;
	}
	if(sscanf(params, "dd",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /sellhouse [ID игрока] [Сумма]");
	new price,price2;
	price = gHouses[houseid][housePrice];
	price2 = gHouses[houseid][housePrice]*10;
	if(params[1] < price || params[1] > price2) {
		static const f_str[] = "Цена за дом не может быть меньше $%d и больше $%d";
		new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 10)];
		format(string,sizeof(string),f_str,price,price2);
		SendClientMessage(playerid, COLOR_GREY,string);
		return 1;
	}
	if(!IsPlayerConnected(params[0]) || playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");
	if(PI[params[0]][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже есть дом");
	if(PI[params[0]][pRoom]) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже есть квартира");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	new string[144]; 
	format(string, sizeof(string), ""P"%s "W"предложил(а) Вам купить его дом за "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
	format(string, sizeof(string), "Вы предложили "P"%s "W"купить Ваш дом за "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);
	SetPVarInt(params[0],"houseSeller",playerid + 1);
	SetPVarInt(playerid,"houseBuyer",params[0] + 1);
	SetPVarInt(params[0],"housePrices",params[1]);
	SetPVarInt(params[0],"houseIDs",houseid);
	return 1;
}
CMD:ml(playerid) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	SetPlayerPosAC(playerid, 1726.5120,-1643.1844,20.2256, 18, 18);
	SetPlayerFacingAngle(playerid,178.6821);
	SetPlayerInterior(playerid,18);
	SetPlayerVirtualWorld(playerid, 18);
	SetCameraBehindPlayer(playerid);
	return 1;
}
CMD:bpanel(playerid) {
	if(!PI[playerid][pBusiness]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бизнеса");
	new bizz = PI[playerid][pBusiness]-1;
	new status[24];
	if(gBusiness[bizz][bizzStatus]) status = ""NO"Закрыть";
	else status = "{33AA33}Открыть";
	switch(gBusiness[bizz][bizzType]) {
	case 1,2,6,7,9,17,25: {
			static const f_str[] = ""P"1."W" Управление кассой\n"P"2."W" Заказать продукты\n"P"3."W" Информация о бизнесе\n"P"4. %s "W"бизнес\n"P"5."W" Улучшения\n"P"6."W" Установить цену за товар\n"P"7."W" Статистика доходов\n"P"8."NO" Продать бизнес";
			new string[sizeof(f_str) +1 + (-2 + 24)];
			format(string,sizeof(string),f_str,status);
			D(playerid,D_BIZZ,DSL,""P"Управление бизнесом",string,"Выбрать","Отмена");
		}
	case 8: {
			D(playerid,D_BIZZ_5,DSL,""P"Управление бизнесом",""P"1."W" Управление кассой\n"P"2."W" Заказать продукты\n"P"3."W" Информация о бизнесе\n"P"4."W" Улучшения\n"P"5."W" Установить цену за товар\n"P"6."W" Статистика доходов\n"P"7."NO" Продать бизнес","Выбрать","Отмена");
		}
	case 5,18,27,15: {
			static const f_str[] = ""P"1."W" Управление кассой\n"P"2."W" Заказать продукты\n"P"3."W" Информация о бизнесе\n"P"4. %s "W"бизнес\n"P"5."W" Улучшения\n"P"6."W" Статистика доходов\n"P"7."NO" Продать бизнес";
			new string[sizeof(f_str) +1 + (-2 + 24)];
			format(string,sizeof(string),f_str,status);
			D(playerid,D_BIZZ_4,DSL,""P"Управление бизнесом",string,"Выбрать","Отмена");
		}
	case 3,4,13,19: {
			static const f_str[] = ""P"1."W" Управление кассой\n"P"2."W" Заказать продукты\n"P"3."W" Информация о бизнесе\n"P"4. %s "W"бизнес\n"P"5."W" Улучшения\n"P"6."W" Установить цену за товар\n"P"7."W" Установить цену за вход\n"P"8."W" Статистика доходов\n"P"9."NO" Продать бизнес";
			new string[sizeof(f_str) +1 + (-2 + 24)];
			format(string,sizeof(string),f_str,status);
			D(playerid,D_BIZZ_2,DSL,""P"Управление бизнесом",string,"Выбрать","Отмена");
		}
	case 10,12,16,23: {
			static const f_str[] = ""P"1."W" Управление кассой\n"P"2."W" Заказать продукты\n"P"3."W" Информация о бизнесе\n"P"4. %s "W"бизнес\n"P"5."W" Установить цену за вход\n"P"6."W" Статистика доходов\n"P"7."W" Улучшения\n"P"8."NO" Продать бизнес";
			new string[sizeof(f_str) +1 + (-2 + 24)];
			format(string,sizeof(string),f_str,status);
			D(playerid,D_BIZZ_3,DSL,""P"Управление бизнесом",string,"Выбрать","Отмена");
		}
	case 21: {
			static const f_str[] = ""P"1."W" Управление кассой\n"P"2."W" Заказать продукты\n"P"3."W" Информация о бизнесе\n"P"4. %s "W"бизнес\n"P"5."W" Статистика доходов\n"P"6."NO" Продать бизнес";
			new string[sizeof(f_str) +1 + (-2 + 24)];
			format(string,sizeof(string),f_str,status);
			D(playerid,D_BIZZ_6,DSL,""P"Управление бизнесом",string,"Выбрать","Отмена");
		}
	case 30:{
		static const f_str[] = ""P"1."W" Управление кассой\n\
		"P"2."W" Статистика доходов\n\
		"P"3."NO" Продать бизнес";
		new string[sizeof(f_str) +1 + (-2 + 24)];
		format(string,sizeof(string),f_str,status);
		D(playerid,D_BIZZ_10,DSL,""P"Управление бизнесом",string,"Выбрать","Отмена");
	}
		case 31:{
		static const f_str[] = ""P"1."W" Управление кассой\n\
		"P"2."W" Статистика доходов\n\
		"P"3."W" Изменить процент займа\n\
		"P"4."NO" Продать бизнес";
		new string[sizeof(f_str) +1 + (-2 + 24)];
		format(string,sizeof(string),f_str,status);
		D(playerid,D_BIZZ_11,DSL,""P"Управление бизнесом",string,"Выбрать","Отмена");
	}

		
	}
	return true;
}

CMD:buyfueling(playerid) {
	new i = GetNearestTrunckFuel(playerid);
	if(i == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть на АЗС");
	SetPVarInt(playerid,"bfillingid",i);
	new string[128];
	if(!gBusiness[i][bizzOwnerID]) {
		format(string,sizeof(string),""W"Данная АЗС продается за "ORANGE"$%d",gBusiness[i][bizzSellPrice]);
		D(playerid,D_BIZZ_BUY_FILL,DSM, ""P"Бизнес",string,"Купить","Отмена");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Данная Автозаправочная станция уже приобретена кем-то");
	return 1;
}
CMD:p(playerid) {
	if(TI[playerid][tPhoneOnline]) return SendClientMessage(playerid, COLOR_GREY, "Ваш телефон выключен");
	if(TI[playerid][tPhoneCalled] != INVALID_PLAYER_ID && TI[playerid][tPhoneCaller] != INVALID_PLAYER_ID && TI[playerid][tPhone] == false) {
		new id = TI[playerid][tPhoneCaller];
		if(TI[playerid][tPhoneCalled] != playerid) {
			TI[playerid][tPhoneCalled] = INVALID_PLAYER_ID;
			TI[playerid][tPhoneCaller] = INVALID_PLAYER_ID;
			PhoneStatus(playerid,false);
			return SendOk(playerid,"Телефон абонента вне зоны действия сети");
		}
		SendOk(id,"Игрок ответил на Ваш звонок");
		TI[playerid][tPhone] = true;
		TI[id][tPhone] = true;
		PhoneStatus(playerid,true);
	}
	return 1;
}
CMD:h(playerid) {
	for(new i; i<sizeof(calls_ether); i++) {
		if(calls_ether[i] == playerid) {
			SendOk(playerid,"Вы положили трубку");
			TI[calls_ether[i]][tPhoneNews] = true;
			calls_ether[i] = INVALID_PLAYER_ID;
			SendOk(calls_news[i],"Игрок положил трубку");
			PhoneStatus(playerid,false);
			return 1;
		}
	}
	if(TI[playerid][tPhoneCalled] != INVALID_PLAYER_ID && TI[playerid][tPhoneCaller] != INVALID_PLAYER_ID) {
		new id;
		if(TI[playerid][tPhoneCaller] == playerid) id = TI[playerid][tPhoneCalled];
		else if(TI[playerid][tPhoneCalled] == playerid) id = TI[playerid][tPhoneCaller];
		TI[playerid][tPhoneCalled] = INVALID_PLAYER_ID;
		TI[playerid][tPhoneCaller] = INVALID_PLAYER_ID;
		TI[id][tPhoneCalled] = INVALID_PLAYER_ID;
		TI[id][tPhoneCaller] = INVALID_PLAYER_ID;
		SendOk(playerid,"Вы положили трубку");
		SendOk(id,"Игрок положил трубку");
		if(TI[playerid][tPhone] == true) PhoneStatus(playerid,false);
		if(TI[id][tPhone] == true) PhoneStatus(id,false);
		TI[playerid][tPhone] = false;
		TI[id][tPhone] = false;
	}
	return 1;
}
CMD:sms(playerid, params[]) {
	if(!PI[playerid][pPhone]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет мобильного телефона");
	if(sscanf(params,"ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /sms [id игрока / номер телефона] [текст]");
	if(PI[playerid][pMobile] < 5) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств на счету телефона");
	if(GetPVarInt(playerid,"takephone")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет телефона");
	if(TI[playerid][tGag]) return SendClientMessage(playerid, COLOR_GREY, "У Вас кляп");
	if(PI[playerid][pMute]) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	new bool:isnumber = false,string[156];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(params[0] == PI[i][pPhone])
		{
			if(params[0] == PI[playerid][pPhone]) return SendClientMessage(playerid, COLOR_GREY, "Телефон абонента вне зоны действия сети");
			if(TI[i][tPhoneOnline]) return SendClientMessage(playerid, COLOR_GREY, "Телефон абонента выключен");
			format(string, sizeof(string), "SMS: %s » Получатель: %s(%i) [т. %i]",params[1], player_name[i],i,PI[i][pPhone]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "SMS: %s « Отправитель: %s(%i) [т. %i]",params[1],player_name[playerid],playerid, PI[playerid][pPhone]);
			SendClientMessage(i,  COLOR_YELLOW, string);
			SetPlayerChatBubble(playerid, "Отправил СМС", COLOR_PURPLE, 10.0, 3000);
			foreach(new x:Player) {
				if(GetPVarInt(x, "BigEarSms") != 1) continue;
				format(string, 120, "[A] SMS: %s | отправил %s(%i) игроку %s(%d)", params[1],player_name[playerid],playerid,player_name[i],i);
				SendClientMessage(x, COLOR_GREY, string);
			}
			PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			PI[playerid][pMobile] -= 5,
			UpdatePlayerData(playerid,"pMobile",PI[playerid][pMobile]);
			isnumber = true;
			break;
		}
		else if(params[0] == i)
		{
			if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Телефон абонента вне зоны действия сети");
			if(TI[i][tPhoneOnline]) return SendClientMessage(playerid, COLOR_GREY, "Телефон абонента выключен");
			format(string, sizeof(string), "SMS: %s » Получатель: %s(%i) [т. %i]",params[1], player_name[i],i,PI[i][pPhone]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "SMS: %s « Отправитель: %s(%i) [т. %i]",params[1],player_name[playerid],playerid, PI[playerid][pPhone]);
			SendClientMessage(i,  COLOR_YELLOW, string);
			SetPlayerChatBubble(playerid, "Отправил СМС", COLOR_PURPLE, 10.0, 3000);
			foreach(new x:Player) {
				if(GetPVarInt(x, "BigEarSms") != 1) continue;
				format(string, 120, "[A] SMS: %s | отправил %s(%i) игроку %s(%d)", params[1],player_name[playerid],playerid,player_name[i],i);
				SendClientMessage(x, COLOR_GREY, string);
			}
			PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			PI[playerid][pMobile] -= 5,
			UpdatePlayerData(playerid,"pMobile",PI[playerid][pMobile]);
			isnumber = true;
			break;
		}
	}
	if(!isnumber) return SendClientMessage(playerid, COLOR_GREY, "Телефон абонента вне зоны действия сети");
	return 1;
}
alias:call("c");
CMD:call(playerid,params[]) {
	if(PI[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет мобильного телефона");
	if(TI[playerid][tPhone] == true) return SendClientMessage(playerid, COLOR_GREY, "Вы уже разговариваете по телефону");
	else if(GetPVarInt(playerid,"takephone")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет телефона");
	if(PI[playerid][pMute]) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(TI[playerid][tGag]) return SendClientMessage(playerid, COLOR_GREY, "У Вас кляп");
	new number;
	if(sscanf(params,"i",number)) {
		SendClientMessage(playerid,COLOR_GREEN,"- Таксопарк - 5555, служба спасения - 911, СМИ - 8888");
		SendClientMessage(playerid,COLOR_GREEN,"Служба спасения - 911");
		return 1;
	}
	if(number == PI[playerid][pPhone]) return SendClientMessage(playerid, COLOR_GREY, "Телефон абонента вне зоны действия сети");
	if(number == 5555)
	{
		new ids = 0;
		for(new x = GetVehiclePoolSize()+1; --x != 0;)
		{
			if(!IsValidVehicle(x)) continue;
			if(!IsVehicleOccupied(x)) continue;
			if(VehicleInfo[x][vJob] != 8) continue;
			ids++;
			D(playerid,D_TAXI_CALL,DSM,""P"Диспетчер: Такси",""W"Вы действительно хотите вызвать такси на текущее местоположение?\n\n"G"* После принятия вызова, рекомендуем оставаться на месте","Вызвать","Отмена");
		}
		if(ids == 0) return SendClientMessage(playerid, COLOR_GREY, "В данный момент нет таксистов");
		return true;
	}
	switch(number) {
	case 911: return D(playerid, D_CALL_SERVICESS, DSL, ""P"Выберите сервис", ""P"1."W" Полиция\n"P"2."W" Скорая помощь\n"P"3."W" Механик", "Выбор", "Отмена");
	case 8888:
		{
			if(PI[playerid][pMobile] <= 9) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств на счету телефона");
			if(calls_news[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Приём звонков отключен");
			if(calls_ether[0] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Линия занята");
			if(PI[playerid][pMember] == fLSNEWS) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете звонить в свою студию");
			if(random(3)) return SendClientMessage(playerid, COLOR_GREY, "Дозвониться не получилось");

			SendClientMessage(playerid,CGOLD,"Вы в прямом эфире");
			SendOk(calls_news[0],"Игрок дозвонился в прямой эфир");
			SendOk(calls_news[0],"Чтобы закончить разговор, введите: /skip");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
			PhoneStatus(playerid,true);
			calls_ether[0] = playerid;
			PI[playerid][pSettings][2] = fLSNEWS;
			TI[playerid][tPhoneNews] = true;
		}
	default: {
			if(PI[playerid][pMobile] <= 9) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств на счету телефона");
			new bool:isnumber = false ;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[i][pPhone] == number) {
					if(SERIU[i][sID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Телефон абонента выключен");
					if(!PI[i][pPhone]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет мобильного телефона");
					if(TI[i][tPhoneOnline]) return SendClientMessage(playerid, COLOR_GREY, "Телефон абонента выключен");
					if(TI[i][tPhone]) return SendClientMessage(playerid, COLOR_GREY, "Абонент занят");
					TI[playerid][tPhoneCaller] = playerid;
					TI[playerid][tPhoneCalled] = i;
					TI[i][tPhoneCaller] = playerid;
					TI[i][tPhoneCalled] = i;
					new string[128];
					format(string,sizeof(string),"Исходящий вызов "P"» "GREEN"[т. %d]"W" | сбросить вызов - "NO"/h",PI[i][pPhone]);
					SendClientMessage(playerid,-1,string);
					
					format(string,sizeof(string),"Входящий вызов "P"« "GREEN"[т. %d]",PI[playerid][pPhone]);
					SendClientMessage(i,-1,string);
					SendClientMessage(i,-1,"Введите "YES"/p "W"чтобы принять вызов, "NO"/h "W"для отказа");

					MeAction(i,"звонит мобильный телефон");
					
					PhoneStatus(playerid,true);
					if(PI[playerid][pMobile] > 10) PI[playerid][pMobile] -= 10;
					UpdatePlayerData(playerid,"pMobile",PI[playerid][pMobile]);
					isnumber = true;
					break;
				}
			}
			if(!isnumber) return SendClientMessage(playerid, COLOR_GREY, "Телефон абонента вне зоны действия сети");
		}
	}
	return 1;
}
CMD:togphone(playerid) {
	if(PI[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет мобильного телефона");
	if(!TI[playerid][tPhoneOnline]) TI[playerid][tPhoneOnline] = true,SendOk(playerid, "Телефон выключен");
	else if(TI[playerid][tPhoneOnline]) TI[playerid][tPhoneOnline] = false,SendOk(playerid, "Телефон включен");
	return 1;
}
CMD:book(playerid) {
	if(!PI[playerid][pBook]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет телефонной книги");
	new string[1512],str[128],status[25];
	strcat(string,"Номер\tИмя\tСтатус\n");
	for(new i; i < 25; i ++) {
		new id = GetPlayerID(pPhoneName[playerid][i]);
		if(IsPlayerConnected(id)) status = "{33AA33}Online";
		else status = "{AA3333}Offline";
		if(PI[playerid][pPhoneNumber][i] == 0) strcat(string,"--\t--\t--\n");
		else format(str, sizeof(str), "%d\t%s\t%s\n", PI[playerid][pPhoneNumber][i],pPhoneName[playerid][i],status),strcat(string,str);
	}
	D(playerid, D_BOOK, DSTH, "Телефонная книга", string, "Выбрать", "Отмена");
	return true;
}

CMD:healme(playerid) {
	if(!GetInvent(playerid, 1)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет аптечки");
	if(TI[playerid][tDuel] != -1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать на дуэлях");
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	new Float:health;
	GetPlayerHealth(playerid,health);

	if(health + 60.0 < 160.0 ) health += 60.0;
	else health = 160.0;
	SetHealth(playerid, health);
	
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT || GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
	{
		PlayerHealFix[playerid] = 1;
		PlayerHealExFix[playerid] = unix + 3;
	}
	
	new slot = ClickInv[playerid];
	if(slot != -1) RefreshInv(playerid, slot);
	else DeleteItem(playerid, 1, 1);
	
	MeAction(playerid,"использовал(а) аптечку");
	SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
	ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	SetPVarInt(playerid, "anti_sbiv_time", unix+7);
	return 1;
}
CMD:frmask(playerid)
{
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	if(GPVI(playerid,"FRMask_Use"))
	{
	    SCM(playerid, 0x0099FFAA, "Вы сняли маску!");
	    SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
	    DPV(playerid, "FRMask_Use");
	}
	else
	{
	    SCM(playerid,0x0099FFAA, "Ваше местоположение на карте скрыто!");
	    if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);
	    SetPlayerColor(playerid, 0x7a766700);
	    SPVI(playerid, "FRMask_Use", 1);
		SetPlayerAttachedObject(playerid, 2, 19801, 2, 0.074000, 0.000000, 0.008000, -5.899976, 84.600082, -174.099639, 1.282001, 1.419013, 1.189006);
		SetPlayerChatBubble(playerid, "Надевает маску", COLOR_ORANGE, 30.0, 10000);
	}
	return 1;
}

CMD:mask(playerid) {
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	if(!GetInvent(playerid, 120)) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно масок");
	if(TI[playerid][tMaskTime]) return SendClientMessage(playerid, COLOR_GREY, "Вы уже одели маску");
	if(TI[playerid][tDuel] != -1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать на дуэлях");
	SetPlayerColor(playerid, 0x7a766700);
	
	SendOk(playerid, "Вы надели маску. Ваше местоположение скрыто на 10 минут");
	GameTextForPlayer(playerid, "~b~Invisible on", 5000, 3);
	SetPVarInt(playerid, "anti_sbiv_time", unix+7);
	SetPVarInt(playerid, "masks", 10);
	
	new slot = ClickInv[playerid];
	if(slot != -1) RefreshInv(playerid, slot);
	else DeleteItem(playerid, 120, 1);

	ApplyAnimation(playerid, "shop","ROB_Shifty",4.0,0,0,0,0,0,1);
	SetPlayerAttachedObject(playerid, 8, 19801, 2, 0.064999, 0.028999, 0.000000, 0.000000, 80.300003, 178.900009, 1.330000, 1.25, 1.125000);

	TI[playerid][tMaskTime] = 10;
	SetPlayerChatBubble(playerid, "Надевает маску", COLOR_ORANGE, 30.0, 10000);
	//NickName(playerid);
	return 1;
}
CMD:maskoff(playerid) {
	if(!TI[playerid][tMaskTime]) return SendClientMessage(playerid, COLOR_GREY, "Вы не в маске");
	if(PI[playerid][pMember] && start_work[playerid]) SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
	else SetPlayerColor(playerid,0xFFFFFF11);
	if(TI[playerid][tMasked]) SetPlayerColor(playerid,gFractionSpawn[TI[playerid][tMasked]][fracColor]);
	RemovePlayerAttachedObject(playerid, 8);
	SendOk(playerid,"Вы сняли маску");
	TI[playerid][tMaskTime] = 0;
	//NickName(playerid);
	return 1;
}
CMD:unmask(playerid,params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /unmask [playerid]");
	if(TI[params[0]][tMaskTime] <= 0) return SendClientMessage(playerid, COLOR_GREY, "На игроке нет маски");
	SetPlayerColor(params[0],gFractionSpawn[PI[params[0]][pMember]][fracColor]);
	TI[params[0]][tMaskTime] = 0;
	RemovePlayerAttachedObject(params[0], 8);
	new string[128];
	format(string,sizeof(string),"снял(а) маску с %s",player_name[params[0]]);
	MeAction(playerid, string);
	//NickName(params[0]);
	return 1;
}
CMD:flowers(playerid, params[]) {
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /flowers [playerid]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");
	if(GetPlayerWeapon(playerid) != 14) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет цветов");
	if(params[0] == playerid)  return  SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	new weapons[13][2],string[64];
	for(new S = 0; S<13; S++) GetPlayerWeaponData(playerid, S, weapons[S][0], weapons[S][1]) ;
	ResetPlayerWeapons(playerid);
	for(new S = 0; S<13 ; S++) if(weapons[S][0] != 14 && weapons[S][0] != 0) GivePlayerWeapon (playerid,weapons[S][0],weapons[S][1]);
	GivePlayerWeapon(params[0], 14, 1);
	format(string,sizeof(string),"подарил(а) цветы %s",player_name[params[0]]);
	MeAction(playerid, string);
	MeAction(params[0], "принял(а) цветы");
	ApplyAnimation(playerid, "INT_SHOP", "shop_pay", 4.1, 0, 0, 0, 0,0,1);
	return 1;
}
CB: RemovePlayerAttachedObjectDelay(playerid,slot) {
	RemovePlayerAttachedObject(playerid,slot);
}

CMD:loadweste(playerid) {
	new vehicleid = GetPlayerVehicleID(playerid);
	if(PI[playerid][pJob] != 6) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете чистильщиком канализаций");
	if(!GetPVarInt(playerid,"start_job_mower")) return SendClientMessage(playerid, COLOR_GREY, "Вы не арендовали рабочий автомобиль");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в автомобиле");
	if(vehicleid != GetPVarInt(playerid,"veh_id_cleaner")) return SendClientMessage(playerid, COLOR_GREY, "Вы не в своем арендованном транспорте");
	new Float:x, Float:y, Float:z, Float:a;
	new string[45];
	GetVehiclePos(vehicleid,x,y,z);
	GetVehicleZAngle(vehicleid,a);
	x = x - (-3.5*floatsin(a,degrees));
	y = y - 3.5*floatcos(a,degrees);
	VG[vehicleid][vgPickup] = CreateDynamicPickup(19133,1,x,y,z);
	VG[vehicleid][vgArea] = CreateDynamicSphere(x,y,z,1.0);
	format(string,sizeof(string),"Загрузка мусора: "O"%i/15",VG[vehicleid][vgAmount][0]);
	VG[vehicleid][vgText] = CreateDynamic3DTextLabel(string,COLOR_WHITE,x,y,z+0.5,20.0);
	VG[vehicleid][vgWeste] = 1;
	RemovePlayerFromVehicleAC(playerid);
	return 1;
}
CMD:sewerage(playerid) { 
	if(PI[playerid][pJob] != 6) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете чистильщиком канализаций");
	if(!GetPVarInt(playerid,"start_job_mower")) return SendClientMessage(playerid, COLOR_GREY, "Вы не арендовали рабочий автомобиль");
	new string[800], str[400];
	format(string,sizeof(string),""W"Номер канализации\t"W"Мусор в канализации\t"W"Статус\n");
	for(new i=0; i <10; i++)
	{
		if(Sewer[i][seTime] > gettime()) format(str,sizeof(str),"Утилизация (%02d:%02d минут)",(Sewer[i][seTime]-gettime())/60,(Sewer[i][seTime]-gettime())%60);
		else format(str,sizeof(str),"Загрязнена");
		format(string,sizeof(string),"%sКанализация №%i\t%d/15\t%s\n",string,i+1,Sewer[i][seAmmout],str);
	}
	strcat(string,"\n{F0BF39}Начать загрузку транспорта\n{F0BF39}Место утилизации мусора");
	D(playerid, D_JOB_KANAL, DSTH,""P"Канализации",string,"Отметить","Закрыть");
	return 1;
}

CMD:free(playerid, params[])
{
	if (PI[playerid][pMember] != fWHITEHOUSE || !start_work[playerid]) return 1;
	if (PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не адвокат");
	if (sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /free [id] [цена]");
	if (!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if (!PI[params[0]][pJailTime]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не нуждается в Ваших услугах");
	if (params[1] < 500 || params[1] > 10000) return SendClientMessage(playerid, COLOR_GREY, "От $500 до $10.000");
	if (!IsPlayerStream(10.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от игрока");
	if (GetPVarInt(params[0], "FreePrice")) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже есть предложение о услугах адвоката");
	if (PI[params[0]][pJail] == 5) return SendClientMessage(playerid, COLOR_GREY, "Данный человек в ДеМоргане");
	new string[144];
	format(string, sizeof(string), "Вы предложили "P"%s"W" выпустить его за "ORANGE"$%d", player_name[params[0]], params[1]);
	SendUse(playerid, string);
	format(string, sizeof(string), "С учётом налога государству, Вы получите: "ORANGE"$%d", floatround(params[1] / 100 * 15));
	SendUse(playerid, string);
	format(string, sizeof(string), "Адвокат "P"%s"W" предлагает Вам воспользоваться его услугами за "ORANGE"$%d", player_name[playerid], params[1]);
	SendUse(params[0], string);
	D(params[0], D_FREE, DSL, ""P"Оплата услуг адвоката", "1. Наличные\n2. Банк", "Оплатить", "Отмена");
	SetPVarInt(params[0], "FreeOffer", playerid + 1);
	SetPVarInt(params[0], "FreePrice", params[1]);
	return 1;
}

CMD:svrnt(playerid) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new string[512];
	GetNetworkStats(string, sizeof string);
	D(playerid, DIALOG_NONE, DIALOG_STYLE_MSGBOX, !"Server Network Stats", string, !"x", !"");
	return true;
}
CMD:egmenu(playerid,const params[]) {
	new g = PlayerEgg[playerid];
	if(PlayerEgg[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не занимали курятник");
	if(!PlayerToPoint(1.0,playerid,Egg[g][gX],Egg[g][gY],Egg[g][gZ])) return true;
	D(playerid,D_FARM_EGG,DSL,""P"Курятник",""P"1."W" Собрать снесенные яица\n"P"2."W" Покормить куриц\n"P"3."W" Освободить курятник", "Далее", "Закрыть");
	return true;
}
CMD:setspawn(playerid) {
	D(playerid, D_SPAWN, DSL, ""P"Выбор спавна", ""P"1."W" Вокзал\n"P"2."W" В доме/квартире\n"P"3."W" На базе организации\n"P"4."W" В доме семьи\n"P"5."W" В доме на колесах", "Выбрать", "Отмена");
	return 1;
}
CMD:jobskill(playerid) {
	D(playerid,DIALOG_JOB_PROGRESS,DSL, ""P"Навыки персонажа",""P"1."W" Стройка\n"P"2."W" Мойщик дорог\n"P"3."W" Рыбак\n"P"4."W" Инкассатор\n"P"5."W" Чистильщик канализаций\n"P"6."W" Водитель автобуса\n"P"7."W" Развозчик еды\n"P"8."W" Механик\n"P"9."W" Развозчик пиццы\n{F0BF39}Полученные аксессуары", "Выбрать", "Закрыть");
	return true;
}
CMD:sellbusiness(playerid,params[]) {
	if(PI[playerid][pBusiness] < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бизнеса");
	new bizid = PI[playerid][pBusiness]-1;
	if(sscanf(params, "dd",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /sellbusiness [ID игрока] [Сумма]");
	if(PI[playerid][pBusiness] == -1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бизнеса");
	if(!PlayerToPoint(3,playerid,gBusiness[bizid][bizzX], gBusiness[bizid][bizzY], gBusiness[bizid][bizzZ])) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться рядом со своим бизнесом");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(PI[params[0]][pBusiness]) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже есть бизнес");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	new price,price2;
	price = gBusiness[bizid][bizzSellPrice];
	price2 = gBusiness[bizid][bizzSellPrice]*20;
	if(params[1] < price || params[1] > price2) {
		static const f_str[] = "Цена за бизнес не может быть меньше $%d и больше $%d";
		new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 10)];
		format(string,sizeof(string),f_str,price,price2);
		SendClientMessage(playerid, COLOR_GREY,string);
		return 1;
	}
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");

	new businessid = -1;
	for(new i;i<gBusinessCount;i++) {
		if(GetString(player_name[playerid],gBusiness[i][bizzOwner])) {businessid = i; break;}
	}
	if(businessid == -1) return SendClientMessage(playerid, COLOR_GREY, "Бизнес не найден");

	SetPVarInt(params[0],"bizzProdaet",playerid + 1);
	SetPVarInt(playerid,"bizzPokupaet",params[0] + 1);
	SetPVarInt(params[0],"bizzCena",params[1]);

	new string[144];
	format(string, sizeof(string), ""P"%s "W"предложил(а) Вам купить его бизнес за "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
	SendOk(params[0],"Для просмотра доходов бизнеса, введите: /binfo");
	format(string, sizeof(string), "Вы предложили "P"%s "W"купить Ваш бизнес за "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);
	return 1;
}
CMD:binfo(playerid,params[]) {
	if(!GetPVarInt(playerid,"bizzProdaet")) return SendClientMessage(playerid, COLOR_GREY, "Вам не предлагали купить бизнес");
	new bizz = PI[GetPVarInt(playerid,"bizzProdaet")-1][pBusiness]-1;
	new query[156];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `business_stats` WHERE `bizz` = '%i'", bizz);
	mysql_tquery(connects, query, "bizz_stats", "ii", playerid,bizz);
	return true;
}
CMD:sellsim(playerid,params[]) {
	if(!PI[playerid][pPhone]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет SIM-карты");
	new numbet_str[7];
	format(numbet_str,sizeof(numbet_str),"%d",PI[playerid][pPhone]);
	if(strlen(numbet_str) < 6) return SendClientMessage(playerid, COLOR_GREY, "Данный номер нельзя продать");
	if(sscanf(params, "dd",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /sellsim [ID] [цена]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(!ProxDetectorS(3.0, playerid,params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");
	if(params[1] < 1 || params[1] > 1000000) return SendClientMessage(playerid, COLOR_GREY, "Цена не может быть меньше $1 и больше $1.000.000");
	if(PlayerToPoint(30.0,playerid,2080.7615, 1710.6829, 1113.5668)) return SendClientMessage(playerid, COLOR_GREY, "Запрещена продажа SIM карты в казино");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	new string[144];

	format(string, sizeof(string), ""P"%s "W"предложил(а) Вам купить SIM-карту за "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "W"купить SIM-карту за "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);

	SetPVarInt(params[0], "sim_id_sell", playerid + 1); 
	SetPVarInt(params[0], "sim_summ", params[1]);
	return 1;
}
alias:usedrugs("drugs");
CMD:usedrugs(playerid, params[])
{
	if (TI[playerid][tDuel] != -1) return 1;
	if (GetPVarInt(playerid, "anti_sbiv_time") > unix) return 1;
	new drugs = PI[playerid][pDrugs];
	if (drugs <= 0) return SendClientMessage(playerid,COLOR_GREY, "У Вас нет наркотиков");
	if (TI[playerid][tDuel] != -1) return SendClientMessage(playerid,COLOR_GREY,"Нельзя использовать на дуэлях");
	if(TI[playerid][tDM] != 0) return SendClientMessage(playerid,COLOR_GREY,"Нельзя использовать на ДМ зонах");

	new Float: PlayerHP;
	GetPlayerHealth(playerid, PlayerHP);

	if (sscanf(params, "i", params[0]))
	{
		if (PI[playerid][pAddiction] < 2000)
		{
			if (drugs >= 5) params[0] = 5;
			if (drugs > 0 && drugs < 5) params[0] = drugs;
		}
		else if (PI[playerid][pAddiction] < 5000)
		{
			if (drugs >= 10) params[0] = 10;
			if (drugs > 0 && drugs < 10) params[0] = drugs;
		}
		else if (PI[playerid][pAddiction] > 5000)
		{
			if (drugs >= 20) params[0] = 20;
			if (drugs > 0 && drugs < 20) params[0] = drugs;
		}
	}
	if (drugs < params[0]) return SendClientMessage(playerid,COLOR_GREY,"У вас нет столько наркотиков");
	if (params[0] < 1) return SendClientMessage(playerid,COLOR_GREY,"Значение не может быть менее 1");
	if (PI[playerid][pAddiction] < 2000 && params[0] > 5) return SendClientMessage(playerid,COLOR_GREY,"Вы не можете принять более 5 грамм наркотиков");
	if (PI[playerid][pAddiction] < 5000 && params[0] > 10) return SendClientMessage(playerid,COLOR_GREY,"Вы не можете принять более 10 грамм наркотиков");
	else if (params[0] > 20) return SendClientMessage(playerid,COLOR_GREY,"Вы не можете принять более 20 грамм наркотиков");
	new ReasonHeal = 10;
	if (PI[playerid][pAddiction] < 2000 && (PlayerHP + (ReasonHeal * params[0])) > 120)
	{
		if (GetPVarInt(playerid, "DrugsTime") < gettime())
		{
			SendOk(playerid, "Уровень здоровья пополнен до 120 единиц");
			SetPlayerHealth(playerid, 120);
			SetPVarInt(playerid, "DrugsTime", gettime() + 30);
		}
		else SendClientMessage(playerid, COLOR_WHITE, "(( Здоровье можно пополнить не чаще, чем раз в 30 секунд ))");
	}
	else if (PI[playerid][pAddiction] < 5000 && (PlayerHP + (ReasonHeal * params[0])) > 140)
	{
		if (GetPVarInt(playerid, "DrugsTime") < gettime())
		{
			SendOk(playerid, "Уровень здоровья пополнен до 140 единиц");
			SetPlayerHealth(playerid, 140);
			SetPVarInt(playerid, "DrugsTime", gettime() + 30);
		}
		else SendClientMessage(playerid, COLOR_WHITE, "(( Здоровье можно пополнить не чаще, чем раз в 30 секунд ))");
	}
	else if (PI[playerid][pAddiction] > 5000 && (PlayerHP + (ReasonHeal * params[0])) > 160)
	{
		if (GetPVarInt(playerid, "DrugsTime") < gettime())
		{
			SendOk(playerid, "Уровень здоровья пополнен до 160 единиц");
			SetPlayerHealth(playerid, 160);
			SetPVarInt(playerid, "DrugsTime", gettime() + 30);
		}
		else SendClientMessage(playerid, COLOR_WHITE, "(( Здоровье можно пополнить не чаще, чем раз в 30 секунд ))");
	}
	else
	{
		if (GetPVarInt(playerid, "DrugsTime") < gettime())
		{
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Уровень здоровья пополнен до %.0f единиц", (PlayerHP + (ReasonHeal * params[0])));
			SendClientMessage(playerid, 0xFFFFFFFF, STRING_GLOBAL);
			SetPlayerHealth(playerid, (PlayerHP + (ReasonHeal * params[0])));
			SetPVarInt(playerid, "DrugsTime", gettime() + 30);
		}
		else SendClientMessage(playerid, COLOR_WHITE, "(( Здоровье можно пополнить не чаще, чем раз в 30 секунд ))");

		if (PI[playerid][pAddiction] < 2000)
		{
			UsingDrugs[playerid] = 10;
			SetPlayerTime(playerid, 17, 0);
			SetPlayerWeather(playerid, -68);
			SetPlayerDrunkLevel(playerid, 3000);
		}
	}

	if (PI[playerid][pSex] == 1) {
		SetPlayerChatBubble(playerid, "употребил наркотик", COLOR_PURPLE, 30.0, 5000);
		MeAction(playerid, "употребил наркотик");
	} else {
		SetPlayerChatBubble(playerid, "употребила наркотик", COLOR_PURPLE, 30.0, 5000);
		MeAction(playerid, "употребила наркотик");
	}

	if (IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
	else ApplyAnimation(playerid, "SMOKING", "M_smk_drag", 4.1, 0, 0, 0, 0, 0, 1);
	SetPVarInt(playerid, "anti_sbiv_time", unix + 3);
	PI[playerid][pAddiction] += (5 * params[0]);
	UpdatePlayerData(playerid,"pAddiction",PI[playerid][pAddiction]);
	
	PI[playerid][pDrugs] -= params[0];
	UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);

	PI[playerid][pStartLomka] = 0;
	
	if(PI[playerid][pNarcoLomka] == 1)
	{
		PI[playerid][pNarcoLomka] = 0;
		UpdatePlayerData(playerid,"lomka",PI[playerid][pNarcoLomka]);
	}
	return 0x1;
}
CMD:selldrugs(playerid, params[]) {
	if(!IsAGang(playerid) && !IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Доступно только бандам/мафиям");
	new id,drugs,price;
	if(sscanf(params,"ddd",id,drugs,price)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /selldrugs [id игрока] [количество] [цена]");
	if(!IsPlayerConnected(id) || playerid == id) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(GetPlayerDistanceToPlayer(playerid,id) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");
	if(drugs > 50 || drugs < 1) return SendClientMessage(playerid, COLOR_GREY, "Неверное количество наркотиков. От 1 до 50");
	if(drugs > PI[playerid][pDrugs]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно грамм наркотиков");
	if(price > 5000 || price < 1) return SendClientMessage(playerid, COLOR_GREY, "Цена должна быть от 1 до 5000$");
	if(price > GetPlayerMoneyEx(id)) return SendClientMessage(playerid, COLOR_GREY, "У игрока недостаточно денег");
	if(PlayerToPoint(15.5,playerid,2080.7615, 1710.6829, 1113.5668)) return SendClientMessage(playerid, COLOR_GREY, "Запрещена продажа наркотиков в казино");
	if(active_accept(id)) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	if(GetInvSet(id) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре у игрока недостаточно места");
	
	SetPVarInt(playerid,"drugoffee",id);
	SetPVarInt(id,"drugoffee",id);
	SetPVarInt(id,"drugoffer",playerid);
	SetPVarInt(id,"drugprice",price);
	SetPVarInt(id,"drugvalue",drugs);

	new string[170];
	format(string, sizeof(string), "Вы предложили "P"%s"W" купить "W"%d"W" грамм наркотиков за "ORANGE"$%d",player_name[id],drugs,price);
	SendUse(playerid, string);
	format(string, sizeof(string), ""P"%s"W" предложил Вам купить "W"%d"W" грамм наркотиков за "ORANGE"$%d",player_name[playerid],drugs,price);
	SendUse(id, string);
	SendClientMessage(id,COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
	return 1;
}
CMD:pay(playerid, params[]) {
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /pay [id] [сумма]");
	if(PI[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Передача денег доступна со 2-ого уровня");
	if(IsPlayerInRangeOfPoint(playerid,50,2072.4404,1710.0946,1113.7882)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя передавать деньги в казино");
	if(params[1] < 1 || params[1] > 50000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя передать меньше 1$ и больше 50000$");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(!ProxDetectorS(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко");
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(PI[playerid][pCash] < params[1]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
	if(RingInfo[0][rgPlayer][0] == playerid) return true;
	if(RingInfo[0][rgPlayer][1] == playerid) return true;
	//if(GetPVarInt(playerid,"pay_timer") > unix) return SendClientMessage(playerid, COLOR_GREY, "Нельзя передавать деньги чаще чем 1 раз в 30 секунд");
	//SetPVarInt(playerid, "pay_timer", unix+30);
	new string[128];
	format(string,64,"Получение с помощью /pay от %s",player_name[playerid]);
	GiveMoney(params[0], params[1], string);
	string = "";
	format(string,64,"Передача с помощью /pay %s",player_name[params[0]]);
	GiveMoney(playerid, -params[1], string);
	format(string, sizeof(string), "Вы передали %s[%i] %i вирт",player_name[params[0]],params[0],params[1]);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, COLOR_GRAD1, string);
	format(string, sizeof(string), "Вы получили %i вирт от %s[%i]",params[1],player_name[playerid], playerid);
	SendClientMessage(params[0], COLOR_GRAD1, string);
	PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	if(PI[playerid][pMute] > 0) {
		format(string,sizeof(string),"достал(а) деньги и передал(а) их %s",player_name[params[0]]);
		MeAction(playerid,string);
	}
	ApplyAnimation(playerid, "INT_SHOP", "shop_pay", 4.1, 0, 0, 0, 0,0,1);
	return true;
}
CMD:number(playerid, params[]) {
	if(sscanf(params, "u",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /number [id]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	new string[156];
	format(string, sizeof(string), "Владелец: %s. Телефон: "ORANGE"%i",player_name[params[0]],PI[params[0]][pPhone]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return true;
}
CMD:gnews(playerid, params[]) {
	new count_player_row = GetPVarInt(playerid,"count_row");
	new max_rows = GetPVarInt(playerid, "max_rows");
	new get_goverment_text[170];
	new set_pvar_string[170];
	if(!IsACop(playerid) && !IsAArm(playerid) && !IsANews(playerid) && !IsAMedic(playerid) && PI[playerid][pMember] != fINSTRUCTORS && PI[playerid][pMember] != fWHITEHOUSE) return 1;
	else if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fInviteRang]) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна эта команда");
	else if(!start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вам необходимо начать рабочий день");
	else if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(GetSVarInt("gnews_timer") > unix) {
		new year, month, day, hour, minute, second;
		timestamp_to_date(GetSVarInt("gnews_timer") - unix, year, month, day, hour, minute, second);
		new string[128];
		format(string,sizeof(string),"До подачи гос.новостей осталось: "W"%02d:%02d", minute, second);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}
	new string[262];
	if(!max_rows) {
		if(sscanf(params,"i",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /gnews [количество строк]");
		if(params[0] < 1 || params[0] > 4) return SendClientMessage(playerid, COLOR_GREY, "от 1 до 4 строк");
		SetPVarInt(playerid,"max_rows", params[0] + 1);
		SetPVarInt(playerid, "count_row", 1);
		format(string, sizeof(string), "Вы выбрали для гос. новостей строк: %d "G"| Используйте: /gnews [строка 1]", params[0]);
		SendClientMessage(playerid, 0x489191C8, string);
	}
	else {
		if(max_rows == count_player_row) {
			if(!isnull(params)) {
				DeletePVar(playerid,"max_rows");
				DeletePVar(playerid,"count_row");
				SendOk(playerid,"Гос.Новости успешно сброшены");
				return 1;
			}
			for(new i = 1; i < max_rows; i++) {
				format(set_pvar_string, 15, "gnews%d", i);
				GetPVarString(playerid, set_pvar_string, get_goverment_text, 170);
				format(string, sizeof(string), "[%s] %s %s[%d]: %s",FI[PI[playerid][pMember]][fName], GetRankName(PI[playerid][pMember],PI[playerid][pRank]),  player_name[playerid],playerid, get_goverment_text);
				SendClientMessageToAll(0xf3E87D6ff, string);
			}
			format(string, sizeof(string), "[A] %s %s[%d] - Использовал /gnews", FI[PI[playerid][pMember]][fName], player_name[playerid], playerid);
			AdmMSG(COLOR_YELLOW, string);
			SetSVarInt("gnews_timer", gettime() + 60*2);
			DeletePVar(playerid,"max_rows");
			DeletePVar(playerid,"count_row");
			return 1;
		}
		format(string, 64, "/gnews [строка %d]",count_player_row);
		if (isnull(params)) return SendClientMessage(playerid,COLOR_GREY, string);
		if(strlen(params) > 160) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать больше 160 символов");
		format(set_pvar_string, 15, "gnews%d", count_player_row);
		SetPVarString(playerid, set_pvar_string, params);
		if(count_player_row + 1 == max_rows) {
			format(string, sizeof(string), "Строка %d : %s", count_player_row, params);
			SendClientMessage(playerid,0xD6D6D6C8, string);
			SendOk(playerid, "Используйте команду /gnews еще раз. Чтобы опубликовать новости");
			SendOk(playerid, "В случае опечатки, используйте: /gnews 0");
		}
		else {
			format(string, sizeof(string), "Строка %d : %s "G"| Используйте: /gnews [строка %d]", count_player_row, params, count_player_row + 1);
			SendClientMessage(playerid, 0xD6D6D6C8, string);
		}
		SetPVarInt(playerid,"count_row", count_player_row + 1);
	}
	return 1;
}
CMD:trunk(playerid) {
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
	new Float:x,Float:y,Float:z,Float:a;
	if(idaofcar[playerid] != -1) {
		GetVehicleShiftPos(idaofcar[playerid],1,x,y,z,2.0);
		if(IsPlayerInRangeOfPoint(playerid,2,x,y,z)) {
			static const f_str[] = ""W"Наименование\t"W"Количество\n\
				"W"Багажник:\t%s\n\
				"W"Канистры:\t"P"%d/2\n\
				"W"Наркотики:\t"P"%d/200\n\
				"W"Материалы:\t"P"%d/1000\n\
				"W"Deagle:\t"P"%d/50\n\
				"W"AK47:\t"P"%d/50\n\
				"W"M4:\t"P"%d/50\n\
				"W"ShotGun:\t"P"%d/50";
			new string[sizeof(f_str) +20];
			new oper[30];
			if(TrunkInfo[idaofcar[playerid]][tOpen] == 0) oper = "{C62929}Закрыт"W"";
			else oper = "{56A736}Открыт"W"";
			format(string,sizeof(string), f_str,oper,TrunkInfo[idaofcar[playerid]][tKanistra],TrunkInfo[idaofcar[playerid]][tNarko],
			TrunkInfo[idaofcar[playerid]][tMats],TrunkInfo[idaofcar[playerid]][tGun][0],TrunkInfo[idaofcar[playerid]][tGun][1],TrunkInfo[idaofcar[playerid]][tGun][2],TrunkInfo[idaofcar[playerid]][tGun][3]);
			return D(playerid,D_TRUNK_LIST,DSTH,"Багажник",string,"Принять","Отмена");
		}
		else trunk_close(playerid);
	}
	for(new c = GetVehiclePoolSize()+1; --c != 0;) {
		if(!IsValidVehicle(c)) continue;
		if(IsABike(c) || IsAVelik(c) || IsABoat(c)) continue;
		GetVehicleShiftPos(c,1,x,y,z,2.0);
		if(IsPlayerInRangeOfPoint(playerid,2,x,y,z)) {
			if(!TrunkInfo[c][tOpen] && c != house_car[playerid][0] && c != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Багажник закрыт");
			GetVehicleParamsEx(c, engine, lights, alarm, doors, bonnet, boot, objective);
			new Float:pos_y,Float:pos_z;
			GetPlayerPos(playerid,pos_y,pos_y,pos_z);
			GetVehicleZAngle(c, a);
			if(boot != VEHICLE_PARAMS_ON) {
				AnimationTrunk(playerid,Float:x,Float:y,Float:z,Float:a,Float:pos_y,Float:pos_z);
				SetVehicleParamsEx(c, engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_ON, objective);
			}
			else AnimationTrunk(playerid,Float:x,Float:y,Float:z,Float:a,Float:pos_y,Float:pos_z);
			idaofcar[playerid]=c;
			static const f_str[] = "Наименование\tКоличество\n\
				"W"Багажник:\t%s\n\
				"W"Канистры:\t"P"%d/2\n\
				"W"Наркотики:\t"P"%d/200\n\
				"W"Материалы:\t"P"%d/1000\n\
				"W"Deagle:\t"P"%d/50\n\
				"W"AK47:\t"P"%d/50\n\
				"W"M4:\t"P"%d/50\n\
				"W"ShotGun:\t"P"%d/50";
			new string[sizeof(f_str) +20];
			new oper[30];
			if(TrunkInfo[c][tOpen] == 0) oper = "{C62929}Закрыт"W"";
			else oper = "{56A736}Открыт"W"";
			format(string,sizeof(string), f_str,oper,TrunkInfo[c][tKanistra],TrunkInfo[c][tNarko],
			TrunkInfo[c][tMats],TrunkInfo[c][tGun][0],TrunkInfo[c][tGun][1],TrunkInfo[c][tGun][2],TrunkInfo[c][tGun][3]);
			D(playerid,D_TRUNK_LIST,DSTH,"Багажник",string,"Принять","Отмена");
			break;
		}
	}
	return 1;
}
CMD:slimit(playerid,params[]) {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем Т/С");
	if(sscanf(params,"d",params[0])) {
		if(TI[playerid][tSLimit]) {
			TI[playerid][tSLimit] = 0;
			SendOk(playerid,"Ограничение скорости снято");
		}
		else SendClientMessage(playerid, COLOR_WHITE,"Используйте: /slimit [скорость]");
		return 1;
	}
	if(params[0] < 10 || params[0] > 150) return SendClientMessage(playerid, COLOR_GREY, "От 10 до 150");
	TI[playerid][tSLimit] = params[0];
	SendOk(playerid,"Ограничение скорости установлено");
	return true;
}

CMD:e(playerid, const params[]) {
	new carid = GetPlayerVehicleID(playerid);
	if(IsAVelik(carid)) return false;
	if(carid == INVALID_VEHICLE_ID) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
	if(thef_car[playerid] == carid && GetPVarInt(playerid,"theft") > 0) return false;
	if(GetPVarInt(playerid,"tank_vfuel")) return true;

	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	new Float:Health;
	GetVehicleHealth(carid,Health);
	/*if(VehicleInfo[carid][vFuel] <= 0.5 && !IsAPlane(carid) && !IsABoat(carid) && !IsABike(carid) && !IsAVelik(carid) && Health <= 320) {
		SendClientMessage(playerid, COLOR_GREY, "Не удалось завести двигатель");
		return true;
	}*/
	if(Health <= 320) 
	{
		SendClientMessage(playerid, COLOR_GREY, "Машина поломана, вызовите автомеханика");
		return true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) ToggleEngine(GetPlayerVehicleID(playerid),playerid);
	return true;
}
CMD:en(playerid, params[]) {
	new carid = GetPlayerVehicleID(playerid);
	if(!IsAPlane(carid) && !IsABoat(carid)) return false;
	if(carid == INVALID_VEHICLE_ID) return true;
	if(thef_car[playerid] == carid && GetPVarInt(playerid,"theft") > 0) return false;
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) ToggleEngine(carid,playerid);
	return true;
}

CMD:hi(playerid,params[]) {
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /hi [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(!IsPlayerStream(2.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
	if(params[0] == playerid)  return  SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	new string[144];

	format(string, sizeof(string), ""P"%s "W"предложил(а) Вам пожать руку", player_name[playerid]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "W"пожать руку", player_name[params[0]]);
	SendUse(playerid, string);

	SetPVarInt(params[0],"hi", playerid+1);
	return 1;
}

CMD:sellic(playerid, params[]) {
	if(PI[playerid][pMember] != fINSTRUCTORS) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в автошколе");
	if(!PlayerToPoint(30.0,playerid,4.0519,-81.3692,1026.4091) && GetPlayerInterior(playerid) != 3) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в автошколе");
	if(PI[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Доступно со 2-ого ранга");
	if(sscanf(params,"di",params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /sellic [id игрока] [цена 500$ - 20000$]");
	if(params[1] < 500 || params[1] > 20000) return SendClientMessage(playerid, COLOR_GREY, "Цена должна быть от 500$ до 15000$");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	if(PI[params[0]][pCash] < params[1]) return SendClientMessage(playerid, COLOR_GREY, "У игрока недостаточно денег");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");

	new abz[46];
	format(abz,sizeof(abz),""P"Выдача лацензии за"W" %i",params[1]);
	D(playerid,D_LICENSE_GIVE,DSL,abz,"1. Лицензия на транспорт\n2. Лицензия на воздушный транспорт\n3. Лицензия на водный транспорт","Выбрать","Закрыть");

	SetPVarInt(playerid,"lic", params[0] + 1);
	SetPVarInt(playerid,"lic_cash",params[1]);
	return true;
}

CMD:givelic(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /givelic [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	lic[params[0]][0] =
	lic[params[0]][1] =
	lic[params[0]][2] =
	lic[params[0]][3] = 1;
	UpdateLicenses(params[0]);
	SendOk(params[0],"Лицензии получены");
	SendOk(playerid,"Лицензии выданы");
	return 1;
}
alias:pts("carpass");
CMD:pts(playerid,params[]) {
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /pts [id игрока]");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в машине");
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Вы не за рулем своего т/с");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(params[0] == playerid) CarPass(playerid,params[0]), MeAction(playerid,"просматривает птс на т/с");
	else {
		if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
		new string[144];

		format(string, sizeof(string), ""P"%s "W"хочет показать Вам документы на транспорт", player_name[playerid]);
		SendUse(params[0], string);
		SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

		format(string, sizeof(string), "Вы предложили "P"%s "W"показать документы на транспорт", player_name[params[0]]);
		SendUse(playerid, string);

		SetPVarInt(params[0],"pts", playerid + 1);
	}
	return 1;
}
CMD:lic(playerid,params[]) {
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /lic [id игрока]");
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(params[0] == playerid) ShowLic(playerid,params[0]), MeAction(playerid,"просматривает свои лицензии");
	else {
		if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
		new string[144];

		format(string, sizeof(string), ""P"%s "W"хочет показать Вам лицензии", player_name[playerid]);
		SendUse(params[0], string);
		SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

		format(string, sizeof(string), "Вы предложили "P"%s "W"показать Ваши лицензии", player_name[params[0]]);
		SendUse(playerid, string);

		SetPVarInt(params[0],"lices", playerid + 1);
	}
	return 1;
}
CMD:pass(playerid, params[]) {
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /pass [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	if(playerid == params[0]) return ShowPass(playerid,playerid);

	new string[144];

	format(string, sizeof(string), ""P"%s "W"хочет показать Вам паспорт", player_name[playerid]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "W"показать Ваш паспорт", player_name[params[0]]);
	SendUse(playerid, string);

	SetPVarInt(params[0],"pass", playerid + 1);
	return 1;
}
CMD:fakepass(playerid, params[]) {
	if(PI[playerid][pMember] != fFBI || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не агент FBI");
	if(!TI[playerid][tMasked]) return SendClientMessage(playerid, COLOR_GREY, "На Вас нет маскировочной формы");
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /fakepass [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 5.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	new string[512];
	for(new i = 1; i <= FI[TI[playerid][tMasked]][fMaxRang]; i++) {
		format(string,sizeof(string),"%s%s (%i)\n",string,GetRankName(TI[playerid][tMasked],i),i);
		D(playerid,D_FAKEPASS,DSL,""P"Выберите ранг",string,"Выбрать","Закрыть");
	}
	SetPVarInt(playerid,"fpass2", params[0]);
	return 1;
}
alias:suspect("su");
CMD:suspect(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(PI[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Доступно со 2 ранга");
	if(sscanf(params,"i",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /su [ID игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(PI[params[0]][pJailTime]) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок в тюрьме");
	if(PI[params[0]][pSearch] >= 6) return SendClientMessage(playerid, COLOR_GREY, "У данного игрока уже 6 уровней розыска");
	if(IsACop(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете давать розыск законникам");
	if(TI[playerid][tTied]) return SendClientMessage(playerid, COLOR_GREY, "Вы связаны");
	new string[1000]; 
	strcat(string, ""W"");
	for(new i=0; i<14; i++) {
		format(string,sizeof(string),"%s%s\n",string,suspect_player[i][suspect_name_folder]);
	}
	D(playerid,D_SU,DSL,""P"Преступление",string,"Выбрать","Закрыть");
	SetPVarInt(playerid,"su_player",params[0]);
	return 1;
}
CMD:clear(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(IsAPD(playerid)) if(PI[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 6 ранга");
	if(PI[playerid][pMember] == fFBI) if(PI[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 4 ранга");
	if(PI[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 6 ранга");
	if(sscanf(params,"i",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /clear [ID игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(!ProxDetectorS(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от вас");
	if(!PI[params[0]][pSearch]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находится в розыске");
	new string[128];
	format(string,sizeof(string),"Вы сняли розыск у %s", player_name[params[0]]);
	SendClientMessage(playerid, CDEPARTMENT, string);
	format(string,sizeof(string), "%s %s снял с Вас розыск", GetRankName(PI[playerid][pMember],PI[playerid][pRank]),player_name[playerid]);
	SendClientMessage(params[0], CDEPARTMENT, string);
	PI[params[0]][pSearch] = 0;
	SetPlayerWantedLevel(params[0], 0);
	UpdatePlayerData(params[0],"pSearch",PI[params[0]][pSearch]);
	return 1;
}
CMD:tipster(playerid,params[]) {
	if(PI[playerid][pMember] != fFBI) return SendClientMessage(playerid, COLOR_GREY, "Доступно только ФБР");
	if(PI[playerid][pRank] < 5 && PI[playerid][pMember] == fFBI) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 5 ранга");
	if(!GetPVarInt(playerid,"tipster")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет жучка. Подойдите к багажнику машины и нажмите "GREEN"ALT");
	new param[40],string[200];
	if(sscanf(params, "s[32]S()[64]", param, params)) {
		SendClientMessage(playerid, COLOR_WHITE,"Используйте: /tipster [действие]");
		SendClientMessage(playerid,-1, 	"- SET Прикрепить жучок к игроку");
		SendClientMessage(playerid,-1, 	"- REMOVE Деактивировать жучок");
		SendClientMessage(playerid,-1, 	"- LISTEN Начать прослушивание чата фракции");
		return 1;
	}
	else if(!strcmp(param, "set",true)) {
		new giveplayerid;
		if(sscanf(params, "i", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /tipster set [ид игрока]");
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, not_id);
		if(!PI[giveplayerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(giveplayerid,X,Y,Z);
		if(!PlayerToPoint(10.0,playerid,X,Y,Z)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с Вами");
		SetPVarInt(playerid,"tipster_set", giveplayerid + 1);
		format(string,sizeof(string),"Вы поставили жучок на "P"%s. "W"Используйте /tipster listen для прослушки",player_name[giveplayerid]);
		SendOk(playerid,string);
	}
	else if(!strcmp(param, "listen",true)) {
		if(!GetPVarInt(playerid,"tipster_set")) return SendClientMessage(playerid, COLOR_GREY, "Сначала поставьте на игрока жучок /tipster set");
		new giveplayerid = GetPVarInt(playerid,"tipster_set")-1;
		format(string,sizeof(string), "Вы начали прослушку за игроком %s",player_name[giveplayerid]);
		SendOk(playerid,string);
		SetPVarInt(playerid,"tipster_listen", PI[giveplayerid][pMember]);
		DeletePVar(playerid,"tipster_set");
	}
	else if(!strcmp(param, "remove",true)) {
		if(GetPVarInt(playerid,"tipster_set"))		DeletePVar(playerid,"tipster_set");
		if(GetPVarInt(playerid,"tipster_listen"))	DeletePVar(playerid,"tipster_listen");
		if(GetPVarInt(playerid,"tipster"))			DeletePVar(playerid,"tipster");
		SendOk(playerid, "Вы деактивировали жучок");
	}
	return 1;
}
CMD:push(playerid, params[]) {
	if((!IsACop(playerid) || !start_work[playerid]) && !IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
	if(sscanf(params, "u",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /push [playerid]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем автомобиля");
	if(!IsPlayerStream(5.0, playerid,params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с Вами");
	if(!IsAMafia(playerid)) if((!TI[params[0]][tCuffed]) && IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок без наручников");
	if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже в Т/C");
	t_PutPlayerInVehicle(params[0], GetPlayerVehicleID(playerid), GetVehicleFreeSeat(GetPlayerVehicleID(playerid)));
	SetPlayerArmedWeapon(params[0],0);
	if(TI[params[0]][tCuffed] && GotoInfo[playerid][gtID] == params[0]) {
		CheckPlayerGoCuff(params[0]);
		CheckPlayerGoCuff(params[0]);
		//return 1;
	}
	new string[64];
	format(string,sizeof(string), "%s затащил вас в автомобиль",player_name[playerid]);
	SendOk(params[0],string);

	format(string,sizeof(string), "Вы затащили в автомобиль %s",player_name[params[0]]);
	SendOk(playerid,string);
	
	TogglePlayerControllable(params[0], false);
	return true;
}
CMD:udjur(playerid, params[]) {
	if(!IsANews(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только сотрудникам новостей");
	if(PI[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Доступно со 2 ранга");
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /udjur [id]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	
	new string[144];
	
	format(string, sizeof(string), ""P"%s "W"хочет показать Вам удостоверение журналиста", player_name[playerid]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "W"показать Ваше удостоверение журналиста", player_name[params[0]]);
	SendUse(playerid, string);
	
	SetPVarInt(params[0],"udjur", playerid + 1);
	return 1;
}
CMD:ud(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(PI[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Доступно со 2 ранга");
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /ud [id]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	
	new string[144];
	
	format(string, sizeof(string), ""P"%s "W"хочет показать Вам удостоверение", player_name[playerid]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "W"показать Ваше удостоверение", player_name[params[0]]);
	SendUse(playerid, string);
	
	SetPVarInt(params[0],"uds", playerid + 1);
	return 1;
}
CMD:gotome(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(PI[params[0]][pJail]) return SendClientMessage(playerid, COLOR_GREY, "Игрок сидит в тюрьме");
	new id, string[150];
	if(sscanf(params,"d",id)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /gotome [id]");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(TI[id][tCuffed] && GotoInfo[playerid][gtID] == id) {
		format(string,sizeof(string),"%s перестал тащить за собой игрока %s",player_name[playerid], player_name[id]);
		ProxDetector(25,playerid,string,COLOR_PURPLE);
		TogglePlayerControllable(id, TI[id][tCuffed]);
		CheckPlayerGoCuff(id);
		CheckPlayerGoCuff(playerid);
		return 1;
	}
	if(!ProxDetectorS(2.0, playerid, id)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
	if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Вы уже кого-то ведете за собой");
	if(GotoInfo[id][gtGoID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Этого игрока уже кто-то ведет за собой");
	if(!TI[id][tCuffed]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в наручниках");
	CheckPlayerGoCuff(playerid);
	CheckPlayerGoCuff(id);
	GotoInfo[playerid][gtID] = id;
	GotoInfo[id][gtGoID] = playerid;
	GotoInfo[id][gtState] = GetPlayerState(playerid);
	GetPlayerPos(id, GotoInfo[id][gtX], GotoInfo[id][gtY], GotoInfo[id][gtZ]);
	format(string, sizeof(string), "%s потащил игрока %s за собой", player_name[playerid], player_name[id]);
	ProxDetector(25.0, playerid, string, COLOR_PURPLE);
	TogglePlayerControllable(id, true);
	return true;
}
CMD:fences(playerid, const params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(PI[playerid][pRank] < 7) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 7 ранга");
	if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return SendClientMessage(playerid, COLOR_GREY, "Запрещено использовать в здании");
	D(playerid,D_OBJ,DSL,""P"Ограждения",""P"1."W" Ограждения\n"P"2."W" Дорожные знаки\n"P"3."W" Остальное\n"P"4."W" Убрать ближайшее ограждение","Выбрать","Отмена");
	return 1;
}

CMD:fvig(playerid,params[]) {
	new string[350];
	if(sscanf(params,"us[128]",params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /fvig [id] [причина]");
	if(PI[playerid][pMember] != fWHITEHOUSE) return SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник белого дома");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(PI[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 8 ранга");
	if(PI[params[0]][pRank] >= 7) return SendClientMessage(playerid, COLOR_GREY, "Нельзя понизить игрока с 7 рангом");
	if(!IsACop(params[0]) && !IsAArm(params[0]) && !IsAMedic(params[0]) && !IsANews(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в государственной организации");

	PI[params[0]][pfWarn] ++;
	UpdatePlayerData(params[0],"fwarn",PI[params[0]][pfWarn]);
	FracLog(LOGS_FWARN,player_name[playerid],player_name[params[0]],params[1]);

	if(PI[params[0]][pfWarn] >= 3) {
		if(start_work[params[0]]) {
			SendOk(params[0],"Рабочий день окончен");
			start_work[params[0]] = 0;
			UpdatePlayerData(params[0],"FracDuty",start_work[params[0]]);
		}
		add_jobinfo(params[0],params[1]);
		PI[params[0]][pRank] = 0;
		PI[params[0]][pMember] = 0;
		PI[params[0]][pJob] = 0;
		PI[params[0]][pFracSkin] = 0;
		SetPlayerColor(params[0],0xFFFFFF11);
		skin_player(params[0]);
		PI[params[0]][pfWarn] = 0;
		UpdatePlayerData(params[0],"pMember",PI[params[0]][pMember]);
		UpdatePlayerData(params[0],"pJob",PI[params[0]][pJob]);
		UpdatePlayerData(params[0],"fwarn",0);
		UpdatePlayerData(params[0],"pModel",PI[params[0]][pFracSkin]);
		format(string, sizeof(string), "[R] %s выдал выговор и уволил игрока %s(%s) (3/3). Причина: %s",player_name[playerid],player_name[params[0]],FI[PI[params[0]][pMember]][fName],params[1]);
		SendFamilyMessage(PI[playerid][pMember], 0x31cf63FF, string);
		FracLog(LOGS_UNINVITE,player_name[playerid],player_name[params[0]],params[1]);
		return 1;
	}
	format(string, sizeof(string), "[R] %s выдал выговор игроку %s(%s) (%i/3). Причина: %s",player_name[playerid],player_name[params[0]],FI[PI[params[0]][pMember]][fName],PI[params[0]][pfWarn],params[1]);
	SendFamilyMessage(PI[playerid][pMember],0x31cf63FF, string);
	return true;
}

CMD:mark(playerid, params[]) {
	if (!IsACop(playerid))
	return SendClientMessage(playerid,COLOR_GREY, "У вас нет доступа к данной команде!");
	if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	return SendClientMessage(playerid,COLOR_GREY, "Вы должны находиться за рулем фракционного транспорта!");
	new vehicleid = GetPlayerVehicleID(playerid), mark[42];
	if (PI[playerid][pMember] != VehicleInfo[vehicleid][vTeam])
	return true;
	if (VehicleInfo[vehicleid][vMarked]) {
		if (VehicleInfo[vehicleid][vNumberAttached]) {
			DestroyDynamic3DTextLabel(VehicleInfo[vehicleid][vNumberTextID]);
			VehicleInfo[vehicleid][vNumberTextID] = Text3D:-1;
			VehicleInfo[vehicleid][vNumberAttached] = 0;
		}
		SendOk(playerid, "Маркировка с данного ТС была убрана.");
		VehicleInfo[vehicleid][vMarked] = 0;
	} else {
		if (sscanf(params, "s[42]", mark) || !(3 <= strlen(mark) <= 40))
		return SendClientMessage(playerid,COLOR_WHITE, "Введите: /mark [текст]");
		SetVehicleNumberText(vehicleid, mark);
		SendOk(playerid, "Вы изменили маркировку ТС, используйте повторно /mark, чтобы убрать.");
		VehicleInfo[vehicleid][vMarked] = 1;
		strmid(VehicleInfo[vehicleid][vMarkText], mark, 0, strlen(mark), 42);
		strmid(VehicleInfo[vehicleid][vMarkOwner], player_name[playerid], 0, strlen(player_name[playerid]), MAX_PLAYER_NAME + 2);
		Streamer_Update(playerid, STREAMER_TYPE_3D_TEXT_LABEL);
	}
	return true;
}

CMD:marklist(playerid) {
	if (!IsACop(playerid))
	return SendClientMessage(playerid,COLOR_GREY, "У вас нет доступа к данной команде!");
	new idx = 0, string[300], string_2[300];

	format(STRING_GLOBAL, sizeof (STRING_GLOBAL), " \n"G"Название модели ТС - маркировка - кем установлена\n");
	for (new vehicleid = GetVehiclePoolSize() + 1; --vehicleid != 0;) {
		if (!VehicleInfo[vehicleid][vMarked])
		continue;
		if (PI[playerid][pMember] != VehicleInfo[vehicleid][vTeam])
		continue;
		format(string, sizeof (string), "\
			"P"%i. "W"%s "G"[ID: %i]\t"P"[%s]\t"G"%s\n",
		idx + 1, gTransport[GetVehicleModel(vehicleid) - 400][trName],
		vehicleid, VehicleInfo[vehicleid][vMarkText],
		VehicleInfo[vehicleid][vMarkOwner]
		);
		strcat(string_2, string);

		idx++;
	}
	if (idx == 0) {
		SendClientMessage(playerid,COLOR_GREY, "Ниодного замаркированного ТС не найдено!");
	} else {
		format(string, sizeof (string), " \
			\n"G"Всего замаркированно ТС: %i.", idx
		);
		strcat(string_2, string);
		D(playerid, DIALOG_NONE, DSM, ""P"Список маркированных ТС", string_2, "Закрыть", "");
	}
	return true;
}

CMD:alc(playerid) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	D(playerid, D_ALCATRZ, DSL, ""P"Алькатрас", ""P"1."W" Местоположение тюрьмы\n"P"2."W" Список сбежавших с тюрьмы\n"P"3."W" Местоположение 'Лучшего друга'\n"P"4."W" Конечная точка заключенных", "Выбрать", "Закрыть");
	return true;
}
CMD:accept(playerid)
{
    if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	SendClientMessage(playerid, COLOR_GREY, "Местоположение оружейного склада отправлен вам на навигатор!");
	return SetPlayerCheckpoint(playerid, 74.1751,-214.7039,1.4446, 5.0);
}
CMD:cuff(playerid,params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /cuff [id]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(PI[params[0]][pJail]) return SendClientMessage(playerid, COLOR_GREY, "Игрок сидит в тюрьме");
	if(IsACop(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете надеть наручники на законника");
	if(TI[params[0]][tCuffed]) return SendClientMessage(playerid, COLOR_GREY, "На этого человека уже одеты наручники");
	if(!IsPlayerStream(2.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с Вами");
	if(TI[playerid][tTied]) return SendClientMessage(playerid, COLOR_GREY, "Вы связаны");
	MeAction(playerid,"одел(а) наручники на преступника");
	SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_CUFFED);
	TI[params[0]][tCuffed] = 2;
	SendOk(playerid,"Чтобы тащить игрока за собой используйте команду: /gotome [playerid]");
	return 1;
}
CMD:uncuff(playerid,params[]) {
	if(IsACop(playerid) && start_work[playerid] || PI[playerid][pAdmin] >= 2 && dostup[playerid] == 1) {
		if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /uncuff [id]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
		if(!IsPlayerStream(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Рядом с Вами никого нет");
		if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете снять наручники с самого себя");
		if(TI[params[0]][tCuffed]) {
			if(PI[playerid][pAdmin]) SendOk(params[0],"Администратор снял с Вас наручники");
			MeAction(playerid,"снял(а) наручники с преступника");
			SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(params[0],0); 
			TogglePlayerControllable(params[0], true);
			TI[params[0]][tCuffed] = 0;
			if(GotoInfo[playerid][gtID] == params[0]) {
				CheckPlayerGoCuff(params[0]);
				CheckPlayerGoCuff(playerid);
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	return 1;
}
CMD:tazer(playerid) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	new string[256];
	if(GetPVarInt(playerid,"tazershoottime") > unix) {
		format(string,sizeof(string),"Дождитесь перезарядки тазера [%d секунд]",GetPVarInt(playerid ,"tazershoottime") - unix);
		SendOk(playerid,string);
		return 1;
	}
	if(TI[playerid][tTazers][0] > 0) return SendClientMessage(playerid, COLOR_GREY, "Оружие уже заряжено");
	for(new i; i <= 11; i++) {
		new gunid, ammo, storeslot = -1;
		GetPlayerWeaponData(playerid,i,gunid,ammo);
		switch(gunid) {
		case 24 : storeslot = 1;
		case 25 : storeslot = 1;
		}
		if(!gunid || !ammo || storeslot == -1) continue;
		new gunname[32];
		GetWeaponName(gunid,gunname,32);
		format(string,sizeof(string),"%s\n%s [%d]",string,gunname,ammo);
	}
	if(!strlen(string)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет оружия");
	D(playerid,D_TAZER,DSL,""P"Оружие",string,"Зарядить","Отмена");
	return 1;
}
alias:megaphone("m");
CMD:megaphone(playerid,params[]) {
	if((!IsACop(playerid) || !start_work[playerid]) && (!PI[playerid][pAdmin] || dostup[playerid] == 0)) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(PI[playerid][pMute]) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /m [текст]");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] != fLSPD && VehicleInfo[veh][vTeam] != fRCSD  && VehicleInfo[veh][vTeam] != fFBI && PI[playerid][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не в полицейской машине");
	new string[220];
	if(PI[playerid][pAdmin] >= 1 || dostup[playerid] != 0) {
		format(string,sizeof(string),"[Администратор] %s(%d): %s",player_name[playerid],playerid,params[0]);
		SendStreamMessage(100.0, playerid, string,COLOR_YELLOW);
	}
	else {
		format(string,sizeof(string),"[Рупор] %s %s(%d): %s",GetRankName(PI[playerid][pMember],PI[playerid][pRank]),player_name[playerid],playerid,params[0]);
		SendStreamMessage(80.0, playerid, string,COLOR_YELLOW);
	}
	return true;
}
CMD:look(playerid,params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(IsAPD(playerid)) if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
	if(PI[playerid][pMember] == fFBI) if(PI[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Доступно со 2 ранга");
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /look [id]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(!IsPlayerStream(3.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с Вами");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY,not_id);
	new text1[20], text2[20],string[128];
	if(GetInvent(params[0], 2) > 0) { text1 = "| Наркотики"; } else { text1 = "| Пустой карман"; }
	if(GetInvent(params[0], 453) > 0) { text2 = "| Материалы"; } else { text2 = "| Пустой карман"; }
	format(string, sizeof(string), ":::: Вещи %s ::::", player_name[params[0]]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	SendClientMessage(playerid, COLOR_WHITE, text1);
	SendClientMessage(playerid, COLOR_WHITE, text2);
	
	format(string, sizeof(string), "обыскал(а) %s", player_name[params[0]]);
	MeAction(playerid, string);
	return 1;
}
CMD:arrest(playerid,params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(!PlayerToPoint(10.0, playerid, 191.2486,-145.1439,1020.2169) && !PlayerToPoint(5.0, playerid,-40.2691,-176.8227,1026.9872)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от полицейского участка / не рядом с тюрьмой");
	new suspect;
	if(sscanf(params,"i",suspect)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /arrest [playerid]");
	if(suspect == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if(!IsPlayerConnected(suspect)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(!IsPlayerStream(4.0, playerid, suspect)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с Вами");
	if(PI[suspect][pSearch] < 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок не имеет розыск");

	new search, turma;
	if(PI[suspect][pSearch] <= 5) search = 600;
	else search = 750;

	if(TI[suspect][tCuffed] && GotoInfo[playerid][gtID] == suspect) {
		TogglePlayerControllable(suspect, TI[suspect][tCuffed]);
		CheckPlayerGoCuff(suspect);
		CheckPlayerGoCuff(suspect);
		//return 1;
	}

	new string[128];
	format(string, sizeof(string), "Вы посадили в тюрьму %s на %d секунд", player_name[suspect], (PI[suspect][pSearch] * search));
	SendClientMessage(playerid, 0x6ab1ffaa, string);

	format(string, sizeof(string), "Вас посадил в тюрьму %s на %d секунд", player_name[playerid], (PI[suspect][pSearch] * search));
	SendClientMessage(suspect, CBADINFO, string);

	format(string, sizeof(string), "%s %s(%d) арестовал(а) преступника %s(%d)", GetRankName(PI[playerid][pMember],PI[playerid][pRank]),player_name[playerid],playerid, player_name[suspect],suspect);
	SendTeamMessage(COLOR_ALLDEPT, string);
	
	if(QuestProgress[playerid][36] < 20 && AcceptQuest[playerid][36] != 0) QuestProgress[playerid][36] ++,save_quest(playerid,36);
	if(QuestProgress[playerid][36] == 20 && AcceptQuest[playerid][36] != 0) {
		D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Первый арест'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
	}
	if(PI[suspect][pSearch] >= 4)
	{
		if(QuestProgress[playerid][38] == 0 && AcceptQuest[playerid][38] != 0)
		{
			QuestProgress[playerid][38] ++;
			save_quest(playerid,38);
			D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Арестовать ООП'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
		}
	}
	
	ResetPlayerWeapons(suspect);
	SetPlayerSpecialAction(suspect,SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(suspect,0);
	TogglePlayerControllable(suspect, true);
	TI[suspect][tCuffed] = 0;
	turma = PI[suspect][pSearch] * search;
	arrest(suspect, turma);
	PlayerSpawn(suspect);
	if(GetPVarInt(playerid, "Buk") == 1 || GetPVarInt(playerid, "Ready") == 1) RobLeave(playerid);
	return true;
}
CMD:ticket(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(sscanf(params, "uds[128]",params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /ticket [id] [цена] [причина]");
	if(IsACop(params[0]) && start_work[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете выписать штраф сотруднику правохранительных органов");
	if(PI[playerid][pMember] == fFBI) if(PI[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 4 ранга");
	if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(params[1] < 1 || params[1] > 10000) return SendClientMessage(playerid, COLOR_GREY, "Сумма штрафа не должна превышать $10.000");
	if(!IsPlayerStream(4.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с Вами");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY,not_id);
	new day, month, year;
	getdate(year,month,day);
	new query[300];
	mysql_format(connects,query,sizeof(query), "INSERT INTO `"TABLE_TICKETS"` (`name`, `give_name`, `total`, `reason`, `date`) VALUES ('%s', '%s', '%i','%s','%02i/%02i/%02i')",player_name[params[0]],player_name[playerid],params[1],params[2],day,month,year);
	mysql_tquery(connects,query,"","");
	
	if(QuestProgress[playerid][34] < 10 && AcceptQuest[playerid][34] != 0) QuestProgress[playerid][34] ++,save_quest(playerid,34);
	if(QuestProgress[playerid][34] == 10 && AcceptQuest[playerid][34] != 0) {
		D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Выписать штраф'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
	}
	
	new string[156];
	format(string,sizeof(string),"Вы выписали штраф в размере "ORANGE"$%i"W" %s. Причина: %s",params[1],player_name[params[0]],params[2]);
	SendUse(playerid,string);
	format(string,sizeof(string),"Офицер "P"%s"W" выписал вам штраф в размере "ORANGE"$%i."W" Причина: %s",player_name[playerid],params[1],params[2]);
	SendUse(params[0],string);
	return SendOk(params[0], "Оплатить штраф Вы можете в банке");
}
CMD:take(playerid,params[]) {
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
	if(!start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вам необходимо начать рабочий день");
	if(PI[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 4 ранга");
	if(TI[playerid][tTied]) return SendClientMessage(playerid, COLOR_GREY, "Вы связаны");
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /take [id]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(!IsPlayerStream(5.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с Вами");
	if(PI[playerid][pMember] == fINSTRUCTORS) D(playerid,D_TAKE, DSL,""P"Забрать лицензию", "Водительские права\nЛицензия пилота\nЛицензия водного транспорта\nЛицензия на оружие", "Выбрать", "Закрыть");
	else D(playerid,D_TAKE, DSL,""P"Забрать лицензию", "Водительские права\nЛицензия пилота\nЛицензия водного транспорта\nЛицензия на оружие\nНаркотики\nМатериалы", "Выбрать", "Закрыть");
	SetPVarInt(playerid,"takelic", params[0]);
	return 1;
}
CMD:vhack(playerid) {
	if(!IsAGang(playerid) && !IsAMafia(playerid) && !IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не бандит/мафиози");
	if(!PlayerToPoint(3.0,playerid,2719.1243,-2503.9795,13.4942) && !PlayerToPoint(3.0,playerid,2718.5977,-2405.0637,13.4643)) return SendClientMessage(playerid, COLOR_GREY, "Вы не рядом с воротами Нац. Гвардии!");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не должны находится в автомобиле");
	if(!GetInvent(playerid, 122)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет отмычек для взлома ворот");
	DeleteItem(playerid, 122, 1);
	JobTempProcess[playerid] = 23;
	TI[playerid][tProcess][0] = 0;
	TI[playerid][tProcess][1] = 10;
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
	for(new YN = 0;YN < 3;YN++) {
		TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
		if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
	}
	RandomYareNforJOBS(playerid);
	return true;
}
CMD:hack(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(PI[playerid][pMember] == fFBI) if(PI[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 4 ранга");
	if(PI[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Доступно со 2 ранга");
	new idx = -1;
	new Float:playerPos[3], Float:vehiclePos[3];
	GetPlayerPos(playerid, playerPos[0], playerPos[1], playerPos[2]);
	foreach(new player_vehicleid: playerVehicles)
	{
		GetVehiclePos(PlayerTrailer[player_vehicleid][carVehicle], vehiclePos[0], vehiclePos[1], vehiclePos[2]);
		GetVehicleParamsEx(PlayerTrailer[player_vehicleid][carVehicle],engine,lights,alarm,doors,bonnet,boot,objective);
		if(IsPlayerInRangeOfPoint(playerid, 3.0, vehiclePos[0], vehiclePos[1], vehiclePos[2]))
		{
			SetPlayerPosAC(playerid, -675.6675,1727.0975,1376.6718, player_vehicleid, 2);
			SetPlayerFacingAngle(playerid, 268.6703);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid, player_vehicleid);
			SetPlayerInterior(playerid, 2);
			new freezeSeconds = 0;
			switch (GetPlayerPing(playerid)) {
			case 0 .. 49: freezeSeconds = 2;
			case 50 .. 199: freezeSeconds = 3;
			case 200 .. 499: freezeSeconds = 4;
			default: freezeSeconds = 5;
			}
			FreezePlayerForTime(playerid, freezeSeconds);
			return true;
		}
	}
	for(new i = 0; i < gHouseCount; i ++) {
		if(IsPlayerInRangeOfPoint(playerid, 3.0, gHouses[i][houseX], gHouses[i][houseY], gHouses[i][houseZ])) {
			idx = i;
			break;
		}
	}
	if(idx == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с домом");
	SetPlayerPosAC(playerid,hinterior_info[gHouses[idx][houseHint]][h_pos_exit][0],hinterior_info[gHouses[idx][houseHint]][h_pos_exit][1],hinterior_info[gHouses[idx][houseHint]][h_pos_exit][2],idx+1,hinterior_info[gHouses[idx][houseHint]][h_interior]);
	SetPlayerFacingAngle(playerid,hinterior_info[gHouses[idx][houseHint]][h_pos_exit][3]);
	TI[playerid][tInHouse] = true;
	return 1;
}
CMD:spikes(playerid) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(PI[playerid][pMember] == fFBI) if(PI[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 4 ранга");
	if(PI[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Доступно со 2 ранга");
	new veh = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(veh) != 490 && GetVehicleModel(veh) != 560 && GetVehicleModel(veh) != 596 && GetVehicleModel(veh) != 597 && GetVehicleModel(veh) != 598 && GetVehicleModel(veh) != 599) return SendClientMessage(playerid, COLOR_GREY, "Недоступно в данном автомобиле");
	if(GetPlayerVirtualWorld(playerid) != 0) return 1;
	if(GetPlayerInterior(playerid) != 0) return 1;
	new Float: X, Float: Y, Float: Z, Float: ANGLE;
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, ANGLE);
	new string[128];
	if(!GetPVarInt(playerid,"block")) {
		if(ObjectShip[playerid] == 0x7F800000) {
			if(IsValidDynamicObject(ObjectShip[playerid])) DestroyDynamicObject(ObjectShip[playerid]);

			GetVehiclePos(veh, X, Y, Z);
			GetVehicleZAngle(veh, ANGLE);

			X -= (5.0 * floatsin(-ANGLE, degrees));
			Y -= (5.0 * floatcos(-ANGLE, degrees));
			Z -= 0.8;

			ObjectShip[playerid] = CreateDynamicObject(2899, X, Y, Z, 0, 0, ANGLE - 90.0);
			SetPVarInt(playerid,"Ships",CreateDynamicSphere(X, Y, Z, 3.5, -1, -1, -1));
			string = "";
			format(string,sizeof(string),"Установил(а) шипы: %s(%i)",player_name[playerid],playerid);
			ShipText[playerid] = CreateDynamic3DTextLabel(string,-1,X,Y,Z,5.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			//ShipText[playerid] =  CreateDynamic3DTextLabel(string, -1, X,Y,Z, 5.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0, 0, -1, 15.0,-1,0);
		}
		SetPVarInt(playerid,"block", true);
		SendOk(playerid, "Вы установили шипы новейшей технологии. Они имеют радиуправляемый интерфейс.");
		SendOk(playerid, "Этот интерфейс даёт возможность деактивировать шипы на приличном расстоянии от них. (/spikes)");
	}
	else {
		DestroyDynamic3DTextLabelEx(ShipText[playerid]);
		if(ObjectShip[playerid] != 0x7F800000) {
			DestroyDynamicObject(ObjectShip[playerid]);
			ObjectShip[playerid] = 0x7F800000;
		}
		DestroyDynamicArea(GetPVarInt(playerid,"Ships"));
		DeletePVar(playerid,"block");
		DeletePVar(playerid,"Ships");
		SendOk(playerid, "Шипы деактивированы");
	}
	return 1;
}
CMD:rights(playerid) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(GetPVarInt(playerid, "rightstext") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Использовать данную команду можно один раз в 20 секунд");
	new string[158];
	format(string,sizeof(string),"- Вы имеете право хранить молчание. (%s) [%d]",player_name[playerid],playerid);
	ProxDetector(25.0,playerid,string,-1);
	format(string,sizeof(string),"- Всё, что вы скажете, может и будет использовано против вас в суде. (%s) [%d]",player_name[playerid],playerid);
	ProxDetector(25.0,playerid,string,-1);
	format(string,sizeof(string),"- Если вы не можете оплатить услуги адвоката, он будет предоставлен вам государством. (%s) [%d]",player_name[playerid],playerid);
	ProxDetector(25.0,playerid,string,-1);
	format(string,sizeof(string),"- Вы понимаете свои права? (%s) [%d]",player_name[playerid],playerid);
	ProxDetector(25.0,playerid,string,-1);
	SetPVarInt(playerid, "rightstext", gettime()+20);
	return 1;
}
CMD:patrul(playerid) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] != fLSPD && VehicleInfo[veh][vTeam] != fRCSD && VehicleInfo[veh][vTeam] != fFBI) return SendClientMessage(playerid, COLOR_GREY, "Вы не в полицейской машине");
	if(GetPVarInt(playerid, "Patrul") == 1) {
		DeletePVar(playerid, "Patrul");
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendOk(playerid,"Вы закончили патрулирование");
		return 1;
	}
	new total_player_online = 0;
	tick_wanted{total_player_online} = 0;
	static const dialog_put_fmt[] = "%s\t%i\n";

	const string_length =
	sizeof(dialog_put_fmt) + 1 +
	(- 2 + MAX_PLAYER_NAME) + // Имя игрока
	(- 2 + 1);  // Уровень розыска

	goto skip_array_init;
	new onestring[(string_length * 30) / 4],
	tempstring[string_length];
	skip_array_init:

	new Float:pos[3];
	GetPlayerPos(playerid,pos[0],pos[1],pos[2]);

	onestring = !""W"Имя игрока\t"W"Уровень розыска\n";
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pSearch] > 0) {
			if(!IsPlayerInRangeOfPoint(i, 200.0, pos[0],pos[1],pos[2])) continue;
			format(tempstring, sizeof(tempstring), dialog_put_fmt, player_name[i], PI[i][pSearch]);
			strcat(onestring, tempstring);
			tick_wanted{total_player_online} = i;
			total_player_online = total_player_online + 1;
			if(!total_player_online) return SendClientMessage(playerid, COLOR_GREY, "Преступников в радиусе 200 метров не обнаружено");
			D(playerid,D_OBC_WANTED,DSTH,"Бортовой компьютер",onestring,"Выбрать","Отмена");
		}
	}
	return true;
}
CMD:obc(playerid) {
	if(!IsACop(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только правоохранительным органам");
	if(GetPVarInt(playerid, "Patrul") == 1) {
		DeletePVar(playerid, "Patrul");
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendOk(playerid,"Вы закончили патрулирование");
		return 1;
	}
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] != fLSPD && VehicleInfo[veh][vTeam] != fRCSD  && VehicleInfo[veh][vTeam] != fFBI) return SendClientMessage(playerid, COLOR_GREY, "Вы не в полицейской машине");
	D(playerid, D_OBC_LIST,DSL, ""P"Бортовой компьютер", ""P"1."W" Список разыскиваемых\n"P"2."W" База данных\n"P"3."W" Поступившие вызовы", "Выбрать", "Закрыть");
	return 1;
}
CMD:scan(playerid,params[]) {
	if(PI[playerid][pMember] != fFBI || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только сотрудникам FBI");
	if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
	if(!PlayerToPoint(3.0,playerid,1491.3950,278.6347,1019.8281) &&
			!PlayerToPoint(3.0,playerid,1494.4558,281.5873,1020.7458)) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться на рабочем месте");
	new giveplayerid;
	if(isnull(params) || strlen(params) > 25) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /scan [Nick Name]");
	sscanf(params, "u", giveplayerid);
	if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок оффлайн");
	ShowPass(giveplayerid,playerid);
	return 1;
}
CMD:hbject(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new giveplayerid,
	slot = -1, 
	objectid = -1, 
	bone = -1, 
Float:oX,
Float:oY,
Float:oZ,
Float:rX,
Float:rY,
Float:rZ,
Float:sX,
Float:sY,
Float:sZ;
	if(sscanf(params, "udddfffffffff", giveplayerid, slot, objectid, bone, oX, oY, oZ, rX, rY, rZ, sX, sY, sZ)) 
	return SendClientMessage(playerid, COLOR_WHITE,"Используйте: Используйте: /hbject [playerid] [слот 0-9] [id объект] [1-18]  [x][y][z]  [rx][ry][rz] [sx][sy][sz]");
	
	if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(!IsPlayerAttachedObjectSlotUsed(giveplayerid, slot)) return SetPlayerAttachedObject(giveplayerid, slot, objectid, bone, oX, oY, oZ, rX, rY, rZ, sX, sY, sZ);
	else {
		RemovePlayerAttachedObject(giveplayerid, slot), 
		SendOk(playerid, "Слот удален");
	}
	return 1;
}
CMD:hbjectedit(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	new slot_id;
	if(sscanf(params, "d", slot_id)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /hbedit [слот]");
	if(IsPlayerAttachedObjectSlotUsed(playerid, slot_id)) EditAttachedObject(playerid, slot_id);
	return 1;
}
alias:hbjectedit("hbedit");
CMD:getobjectpos(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	new Float:x1,Float:y1,Float:z1,string[128],slot;
	if(sscanf(params, "d",slot)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /getobjectpos [Слот]");
	GetObjectPos(SlotObject[slot],x1,y1,z1);
	format(string, sizeof(string), "GetDynamicObjectPos %f,%f,%f",x1,y1,z1);
	SendClientMessage(playerid,-1,string);
	return true;
}
CMD:cobj(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	new float:x1,float:y1,float:z1,float:rx1,float:ry1,float:rz1;
	if(sscanf(params, "ddp<,>ffffff", params[0],params[1],x1,y1,z1,rx1,ry1,rz1)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /cobj [слот] [id объекта] [X] [Y] [Z] [rX] [rY] [rZ]");
	if(SlotCObject[params[0]] != 0) return 1;
	if(params[0] >= 499) return 1;
	SlotCObject[params[0]] = CreateDynamicObject(params[1],Float:x1,Float:y1,Float:z1,Float:rx1,Float:ry1,Float:rz1);
	new string[128];
	format(string,sizeof(string),"Объект создан. ID: "ORANGE"%d"W" | Слот: "ORANGE"%d",params[1],params[0]);
	SendOk(playerid,string);
	return 1;
}
CMD:dcobject(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /dcobject [слот]");
	if(SlotCObject[params[0]] != 0) {
		DestroyDynamicObject(SlotCObject[params[0]]);
		SlotCObject[params[0]] = 0;
		new string[128];
		format(string,sizeof(string),"Объект удален. Слот: "ORANGE"%d",params[0]);
		SendOk(playerid,string);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Слот не найден");
	return 1;
}
CMD:obj(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	if(!PI[playerid][giveObj]) return SCM(playerid,-1,""cError"У Вас нет доступа к данной команде!");
	if(sscanf(params, "dd", params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /obj [слот] [id объекта]");
	if(SlotObject[params[0]] != 0) return 1;
	if(params[0] >= 99) return 1;
	new Float:x1,Float:y1,Float:z1;
	GetPlayerPos(playerid,x1,y1,z1);
	SlotObject[params[0]] = CreateDynamicObject(params[1],x1,y1,z1,0.00,0.00,0.00);
	new string[128];
	format(string,sizeof(string),"Объект создан. ID: "ORANGE"%d"W" | Слот: "ORANGE"%d",params[1],params[0]);
	SendOk(playerid,string);
	return 1;
}
CMD:dobject(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /dobject [слот]");
	if(SlotObject[params[0]] != 0) {
		DestroyDynamicObject(SlotObject[params[0]]);
		SlotObject[params[0]] = 0;
		new string[128];
		format(string,sizeof(string),"Объект удален. Слот: "ORANGE"%d",params[0]);
		SendOk(playerid,string);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Слот не найден");
	return 1;
}
CMD:eobject(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "d", params[0])) { SelectObject(playerid); } else {
		if(SlotObject[params[0]] != 0) {
			EditObject(playerid,SlotObject[params[0]]);
		}
	}
	return 1;
}
stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid) {
	if(!IsPlayerConnected(playerid)) return 0;
	new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,PX,PY,PZ);
	GetVehiclePos(vehicleid, X,Y,Z);
	new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	if(Distance <= radi*radi) return 1;
	return 0;
}
CMD:divorce(playerid) {
	if(strlen(PI[playerid][pMarried]) < 10) return SendClientMessage(playerid, COLOR_GREY, "Вы не женаты/замужем");
	SendOk(playerid, "Вы развелись");
	new query[156];
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pMarried` = '-' WHERE `pID` = '%d' LIMIT 1",PI[playerid][pID]);
	mysql_pquery(connects, query, "", "");
	strmid(PI[playerid][pMarried], "-", 0, 10);
	return 1;
}

CMD:propose(playerid,params[]) {
	if(strlen(PI[playerid][pMarried]) > 10) return SendClientMessage(playerid, COLOR_GREY, "Вы уже женаты/замужем");
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /propose [id]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(strlen(PI[params[0]][pMarried]) > 10) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже состоит в браке");
	if (!IsPlayerStream(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(!PlayerToPoint(10.0, playerid, 2233.2588,-1333.1310,23.9815)) return SendClientMessage(playerid, COLOR_GREY, "Вы не у церкви");
	new string[144];
	format(string, sizeof(string), "Вы предложили выйти замуж/пожениться: "W"%s", player_name[params[0]]);
	SendOk(playerid, string);
	format(string, sizeof(string), ""ORANGE"%s"W" предлагает вам руку и сердце\n\n"YELLOW"Вы хотите принять предложение?", player_name[playerid]);
	D(params[0],D_MARRIED,DSM, ""P"Свадьба",string,"Да","Нет");
	SetPVarInt(params[0],"ProposeOffer",playerid+1);
	return 1;
}
CMD:wbook(playerid, params[]) {
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /wbook [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(params[0] == playerid) ShowWBook(playerid,params[0]),MeAction(playerid,"просматривает свою трудовую книжку");
	else {
		if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
		
		new string[144];
		
		format(string, sizeof(string), ""P"%s "W"хочет показать Вам свою трудовую книжку", player_name[playerid]);
		SendUse(params[0], string);
		SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

		format(string, sizeof(string), "Вы предложили "P"%s "W"показать Вашу трудовую книжку", player_name[params[0]]);
		SendUse(playerid, string);
		
		SetPVarInt(params[0],"wbook", playerid + 1);
	}
	return 1 ;
}
CMD:medcard(playerid,params[]) {
	if(!PI[playerid][pMedCard]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет медицинской карты. Получить её можно в больнице ЛС");
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /medcard [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(params[0] == playerid) MeAction(playerid,"просматривает свою мед. карту"),ShowMedcard(playerid, playerid);
	else {
		if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
		new string[144];

		format(string, sizeof(string), ""P"%s "G"хочет показать Вам мед.карту", player_name[playerid]);
		SendUse(params[0], string);
		SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

		format(string, sizeof(string), "Вы предложили "P"%s "G"показать Вашу мед. карту", player_name[params[0]]);
		SendUse(playerid, string);

		SetPVarInt(params[0],"medcard", playerid + 1);
	}
	return 1;
}
CMD:medics(playerid) {
	if(!IsAMedic(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только здравоохранительным органам");
	if(PI[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Доступно со 2 ранга");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] != fMEDICLS && VehicleInfo[veh][vTeam] != fMEDICSF && VehicleInfo[veh][vTeam] != fMEDICLV) return SendClientMessage(playerid, COLOR_GREY, "Вы не в Т/С МЧС");
	new Float:pos[3];
	GetPlayerPos(playerid,pos[0],pos[1],pos[2]); 
	new bool:callers = false;
	new string[700],str[30];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!GetPVarInt(i,"call_medics")) continue;
		if(!IsPlayerInRangeOfPoint(i, 1000.0, pos[0],pos[1],pos[2])) continue;
		format(string,sizeof(string),"%s\n",player_name[i]),strcat(string,str);
		callers = true;
	}
	if(!callers) return SendClientMessage(playerid, COLOR_GREY, "Вызовы не поступали");
	D(playerid,D_MEDICS,DSL,""P"Поступившие вызовы",string,"Выбрать","Отмена");
	return 1;
}
CMD:clist(playerid) {
	if(PI[playerid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите во фракции");
	if(IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "В банде запрещено отключать цвет ника");
	if(GetPVarInt(playerid,"color_no") == 0) SetPlayerColor(playerid,0xFFFFFF11),SendOk(playerid,"Вы выключили цвет ника"),SetPVarInt(playerid,"color_no",1);
	else SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]), SendOk(playerid,"Вы включили цвет ника"), DeletePVar(playerid,"color_no");
	return 1;
}
CMD:tow(playerid, params[]) {
	if(PI[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете механиком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем своего буксира");
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return	SendClientMessage(playerid, COLOR_WHITE,"Используйте: /tow [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(playerid == giveplayerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if(active_accept(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	if(!IsPlayerInAnyVehicle(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находится в т/с");
	if(GetPlayerDistanceToPlayer(playerid,giveplayerid) > 10.0 ||GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");
	SetPVarInt(playerid,"towoffer",playerid);
	SetPVarInt(playerid,"towoffee",giveplayerid);
	SetPVarInt(giveplayerid,"towoffer",playerid);
	SetPVarInt(giveplayerid,"towoffee",giveplayerid);
	new string[156];
	format(string,sizeof(string),"Вы предложили "P"%s"W" отбуксировать транспортное средство",player_name[giveplayerid]);
	SendOk(playerid,string);
	format(string,sizeof(string),""W"Механик "P"%s"W" предлагает отбуксировать Ваше транспортное средство\n\nДля буксировки нажмите "YELLOW"'ПРИНЯТЬ'",player_name[playerid]);
	D(giveplayerid,D_TOW,DSM, ""P"Буксировка",string,"Принять","Отмена");
	return 1;
}
CMD:untow(playerid, params[]) {
	if(GetPVarInt(playerid,"towvid")) {
		new vehicleid = GetPVarInt(playerid,"towvid");
		new trailer = GetPVarInt(playerid,"towactvid");
		SetPVarInt(playerid,"towvid",0);
		SetPVarInt(playerid,"towactvid",0);
		if(GetVehicleTrailer(vehicleid) == trailer)  {
			DetachTrailerFromVehicle(vehicleid);
			SendOk(playerid,"Ваша машины была отцеплена от авто механика");
			return true;
		}
	}
	if(PI[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете механиком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем своего буксира");
	new vehicleid = GetPlayerVehicleID(playerid);
	new trailer = GetVehicleTrailer(vehicleid);
	if(!trailer) return SendClientMessage(playerid, COLOR_GREY, "Вы не буксируете авто");
	DetachTrailerFromVehicle(vehicleid);
	SendOk(playerid,"Вы отсоединили авто");
	return 1;
}
stock GetNearestTrunckEat(playerid) {
	for(new i = 0;i<gBusinessCount;i++) {
		if(gBusiness[i][bizzType] != 1) continue;
		if(PlayerToPoint(10.0,playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) return i;
	}
	return -1;
}
CMD:bhd(playerid) {
	if(PI[playerid][pJob] != 4) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете развозчиком еды");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем своего автомобиля по развозки еды");
	new i = GetNearestTrunckEat(playerid);
	if(i==-1) return 1;
	new string[156];
	format(string, sizeof(string), "\n\n"W"Стоимость "P"1"W" хот-дога: "GREEN"$%d\nИспользуйте количество хот-догов, которое хотите закупить:\n\n",gBusiness[i][bizzPrice]*50);
	D(playerid,dEContract,DSI, ""P"Покупка хот-догов",string,"Купить","Отмена");
	SetPVarInt(playerid,"e_biz",i);
	return 1;
}
CMD:shd(playerid,params[]) {
	if(PI[playerid][pJob] != 4) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете развозчиком еды");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем своего автомобиля по развозки еды");
	if(sscanf(params,"ii",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /shd [ид игрока] [цена]");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	if(params[1] < 50 || params[1] > 3000) return SendClientMessage(playerid, COLOR_GREY, "Цена не может быть больше $3000 и меньше $50");
	if(GetPVarInt(playerid,"eatcolvo") < 1) return SendClientMessage(playerid, COLOR_GREY, "В автомобили закончились хот-доги");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(!IsPlayerStream(10.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
	if(PI[params[0]][pSatiety] == 100) return SendClientMessage(playerid, COLOR_GREY, "Игрок не голоден");
	if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	new string[170];
	format(string, sizeof(string), "Вы предложили "P"%s"W" купить хот-дог за "ORANGE"$%d",player_name[params[0]],params[1]);
	SendUse(playerid, string);
	format(string, sizeof(string), ""P"Продавец хот-догов "W"%s"P" предложил купить Вам хот-дог за "GREEN"$%d\n\nВы согласны?",player_name[playerid],params[1]);
	D(params[0],dEHotDog,DSM, ""P"Покупка хот-дога",string,"Да","Нет");

	SetPVarInt(playerid,"id_hotdog",params[0] + 1);
	SetPVarInt(playerid,"price_hotdog", params[1]);
	SetPVarInt(params[0],"id_hotdog",playerid + 1);
	return 1;
}
CMD:contract(playerid) {
	if(PI[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете механиком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем своего буксира");
	new i = GetNearestTrunckFuel(playerid);
	if(i==-1) return 1;
	new string[156];
	format(string, sizeof(string), "\n\n"W"Стоимость "P"1"W" литра: "GREEN"$%d\nИспользуйте количество бензина, которое хотите закупить:\n\n",gBusiness[i][bizzPrice]);
	D(playerid,dFContract,DSI, ""P"Покупка топлива",string,"Купить","Отмена");
	SetPVarInt(playerid,"f_biz",i);
	return 1;
}
CMD:refill(playerid,params[]) {
	if(PI[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете механиком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем своего буксира");
	if(sscanf(params,"iii",params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /refill [ид игрока] [бензин] [цена]");
	if(params[2] < 50 || params[2] > 3000) return SendClientMessage(playerid, COLOR_GREY, "Цена не может быть больше $3000 и меньше $50");
	if(GetPVarInt(playerid,"toplivo") < params[2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько топлива");
	if(params[1] < 1 || params[1] > 300) return SendClientMessage(playerid, COLOR_GREY, "Значение должно быть от 1л до 300л");
	if(!IsPlayerConnected(params[0]) && params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if(!IsPlayerStream(10.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
	if(GetPlayerState(params[0]) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в машине");
	if(VehicleInfo[GetPlayerVehicleID(params[0])][vFuel]+params[1] > gTransport[GetVehicleModel(GetPlayerVehicleID(params[0])) - 400][trTank]) return SendClientMessage(playerid, COLOR_GREY, "В машине, которую Вы хотите заправить полный бак");

	new string[170];
	format(string, sizeof(string), "Вы предложили "P"%s"W" заправить его т.с. на "W"%d"G" литров за "ORANGE"$%d",player_name[params[0]],params[1],params[2]);
	SendUse(playerid, string);
	format(string, sizeof(string), ""P"Механик "P"%s"W" предложил заправить ваше т.с. на "P"%d"W" литров за "GREEN"$%d\n\nВы согласны?",player_name[playerid],params[1],params[2]);
	D(params[0],dRefill,DSM, ""P"Заправка",string,"Да","Нет");

	SetPVarInt(playerid,"id_refill",params[0] + 1);
	SetPVarInt(playerid,"price_refill", params[2]);
	SetPVarInt(playerid,"litres_refill", params[1]);
	SetPVarInt(params[0],"id_refill",playerid + 1);
	return 1;
}
cmd:remp(playerid) {
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в Т/С");
	new Float:X,Float:Y,Float:Z;
	new vehicleid = GetPlayerVehicleID(playerid);
	new car = GetNearestVehicle(playerid);
	GetVehiclePos(car, X, Y, Z);
	if(IsPlayerInRangeOfPoint(playerid,4,X, Y, Z)) {
		new str[50];
		format(str, sizeof(str),"Осмотр автомобиля %s", gTransport[GetVehicleModel(car)-400][trName]);
		SetPVarInt(playerid,"MechOsmotrVEHID",car);
		SetPVarInt(playerid,"JOBOSMOTR",0);
		new Float:vhealth;
		GetVehicleHealth(car, vhealth);
		new panels_job,doors_job,lights_job,tires_job;
		GetVehicleDamageStatus(car,panels_job,doors_job,lights_job,tires_job);
		
		static const f_str[] = "№ Наименование\tСостоятние\n"P"1."W" Двери\t%s\n"P"2."W" Кузов\t%s\n"P"3."W" Фары\t%s\n"P"4."W" Колёса\t%s\n"P"5."W" Двигатель\t%s\n"P"6."W" Аккумулятор\t%s\n";
		new string[sizeof(f_str) +128];
		
		format(string,sizeof(string),f_str,!doors_job?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),!panels_job?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),!lights_job?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),!tires_job?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),vhealth >= 1000?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),VehicleInfo[vehicleid][vAkum] < 40.0?(""NO"Нуждается в замене"):(""GREEN"Идеальное"));
		D(playerid,D_REPAIR_LIST,DSTH,str,string,"Осмотреть","Отмена");
		return 1;
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от Т/С");
}
CMD:repair(playerid, params[]) {
	if(PI[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете механиком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем своего буксира");
	new price,giveplayerid;
	if(sscanf(params,"ud",giveplayerid,price)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /repair [playerid] [сумма]");
	if(price < 100 || price > 1000) return SendClientMessage(playerid, COLOR_GREY, "Цена не должна быть ниже $100 и выше $1000");
	if(!IsPlayerConnected(giveplayerid) && giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(GetPlayerState(giveplayerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть за рулем автомобиля");
	if(GetPlayerDistanceToPlayer(playerid,giveplayerid) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");
	if(GetPVarInt(giveplayerid,"repairprice") > 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	SetPVarInt(playerid,"repairoffee",giveplayerid);
	SetPVarInt(giveplayerid,"repairoffer",playerid);
	SetPVarInt(giveplayerid,"repairoffee",giveplayerid);
	SetPVarInt(giveplayerid,"repairprice",price);
	new string[142];
	format(string, sizeof(string), "Вы предложили "P"%s"W" отремонтировать его т.с. за "ORANGE"$%d",player_name[giveplayerid],price);
	SendUse(playerid, string);
	format(string, sizeof(string), "Механик "P"%s"W" предложил отремонтировать ваше т.с. за "ORANGE"$%d",player_name[playerid],price);
	SendUse(giveplayerid, string);
	SendClientMessage(giveplayerid,COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
	return true;
}
CMD:repairs(playerid) {
	if(PI[playerid][pJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете механиком");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vJob] != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не в автомобиле механиков");
	new Float:pos[3];
	GetPlayerPos(playerid,pos[0],pos[1],pos[2]); 
	new bool:callers = false;
	new string[700],str[30];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!GetPVarInt(i,"call_mechanics")) continue;
		if(!IsPlayerInRangeOfPoint(i, 1000.0, pos[0],pos[1],pos[2])) continue;
		format(string,sizeof(string),"%s\n",player_name[i]),strcat(string,str);
		callers = true;
	}
	if(!callers) return SendClientMessage(playerid, COLOR_GREY, "Вызовы не поступали");
	D(playerid,D_REPAIRS,DSL,""P"Поступившие вызовы",string,"Выбрать","Отмена");
	return 1;
}

CMD:offgettime(playerid, const params[])  {
	new input[50];
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params,"p< >s[24]",params)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /offgettime [ник]");
	mysql_escape_string(params, input);
	new rows;
	new query[250], string[550],header[64];
	new b_date[15], online[15], afk[15];
	format(header, sizeof(header),""P"Оффлайн статистика: %s",input);
	format(string, sizeof(string),""ORANGE"Дата\t"ORANGE"Онлайн за день\t"ORANGE"АФК за день\n");
	format(string, sizeof(string),"%s"ORANGE"Год-Месяц-Число\t"ORANGE"ЧЧ:ММ:СС\t"ORANGE"ЧЧ:ММ:СС\n",string);
	mysql_format(connects, query, sizeof(query), "SELECT `date`, SEC_TO_TIME(`online_sec`-`afk_sec`) as online, SEC_TO_TIME(`afk_sec`) as afk FROM `online_player` WHERE `accountid` = (SELECT `pID` FROM `accounts` WHERE `Name` LIKE '%e') ORDER BY `id` DESC LIMIT 7",input);
	new Cache:result = mysql_query(connects, query);
	cache_get_row_count(rows);
	if(rows) {
		for(new i = 0; i < rows; i++){
			cache_get_value_name(i, "date",b_date,sizeof(b_date));
			cache_get_value_name(i, "online",online,sizeof(online));
			cache_get_value_name(i, "afk",afk,sizeof(afk));
			format(string, sizeof(string),"%s"W"%s\t"W"%s\t"W"%s\n",string,b_date,online,afk);
		}
		D(playerid, DIALOG_NONE, DSTH, header,string, "Закрыть", "");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Такого аккаунта не существует");
	cache_delete(result);
	return 1;
}
CMD:leaders(playerid) {
	new countleader = 0;
	new string[1650];
	new leader[25];
	format(string, sizeof(string),""W"Фракция\t"W"Лидер\t"W"Номер\t"W"Статус\n");
	//format(string, sizeof(string),"%s"ORANGE"Заместители организаций - /subleaders\n",string);
	for(new i = 1;i < MAX_FRACTIONS;i ++) {
		if(!strcmp(FI[i][fLeader],"None",true)) strmid(leader,"Отсутствует", 0, strlen("Отсутствует"), 25);
		else strmid(leader,"Отсутствует", 0, strlen("Отсутствует"), 25);

		new idFrac = GetCheckID(FI[i][fLeader]);
		if(!GetString(FI[i][fName],"Закрыто"))
		{
			if(idFrac != INVALID_PLAYER_ID)
			{
				format(string, sizeof(string),"%s"W"%s\t"W"%s[%d]%s\t"W"т. %d\t"GREEN"Онлайн\n",string,FI[i][fName],player_name[idFrac],idFrac,TI[idFrac][tAFK]>=3?("{ffa800}[AFK]"):(""),PI[idFrac][pPhone]);
				countleader++;
			}
			else
			{
				if(!strcmp(FI[i][fLeader],"None",true)) format(string, sizeof(string),"%s"W"%s\t"ORANGE"Отсутствует лидер\n",string,FI[i][fName]);
				else format(string, sizeof(string),"%s"W"%s\t"W"%s\t"W"-\t"NO"Оффлайн\n",string,FI[i][fName],FI[i][fLeader]);
			}
		}
	}
	format(string, sizeof(string), "%s\n"ORANGE"В сети %i лидер(ов)", string,countleader);
	D(playerid, DIALOG_NONE, DSTH, ""P"Лидеры организаций",string, "Закрыть", "");
	return 1;
}
CMD:subleaders(playerid) {
	new countleader = 0;
	new string[1650];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pMember] == 0) continue;
		if(PI[i][pLeader] != 0) continue; 
		if(PI[i][pRank] < FI[PI[i][pMember]][fMaxRang]-1) continue;
		if(PI[i][pAdmin]) continue;
		format(string, sizeof(string), "%s"G"%s [%d] - [т. %d] - %s %s\n", string, player_name[i], i,PI[i][pPhone], FI[PI[i][pMember]][fName],TI[i][tAFK]>=3?("{ffa800}[AFK]"):(""));
		countleader++;
	}
	if(countleader > 0) {
		format(string, sizeof(string), "%s\n"ORANGE"В сети %i заместителей", string,countleader);
		D(playerid, DIALOG_NONE, DSM, ""P"Заместители организаций",string, "Закрыть", "");
	}
	else D(playerid, DIALOG_NONE, DSM, ""P"Заместители организаций",""W"Нет заместителей в сети", "Закрыть", "");
	return 1;
}
CMD:fwarn(playerid, params[]) {
	if(!PI[playerid][pMember]) return 1;
	new string[156];
	if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUninviteRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", FI[PI[playerid][pMember]][fUninviteRang]);
		SendClientMessage(playerid, COLOR_GREY,string);
		return 1;
	}
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /fwarn [id] [причина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(PI[params[0]][pMember] != PI[playerid][pMember] || PI[playerid][pRank] <= PI[params[0]][pRank]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в Вашей организации / выше в должности");
	if(IsAIP(params[1])) return 1;
	PI[params[0]][pfWarn] ++;
	UpdatePlayerData(params[0],"fwarn",PI[params[0]][pfWarn]);
	FracLog(LOGS_FWARN,player_name[playerid],player_name[params[0]],params[1]);

	if(PI[params[0]][pfWarn]>=3) {
		if(start_work[params[0]]) {
			SendOk(params[0],"Рабочий день окончен");
			start_work[params[0]] = 0;
			UpdatePlayerData(params[0],"FracDuty",start_work[params[0]]);
		}
		add_jobinfo(params[0],params[1]);
		PI[params[0]][pRank] = 0;
		PI[params[0]][pMember] = 0;
		PI[params[0]][pJob] = 0;
		PI[params[0]][pFracSkin] = 0;
		SetPlayerColor(params[0],0xFFFFFF11);
		skin_player(params[0]);
		PI[params[0]][pfWarn] = 0;
		UpdatePlayerData(params[0],"pMember",PI[params[0]][pMember]);
		UpdatePlayerData(params[0],"pJob",PI[params[0]][pJob]);
		UpdatePlayerData(params[0],"fwarn",0);
		UpdatePlayerData(params[0],"pModel",PI[params[0]][pFracSkin]);
		format(string, sizeof(string), "[F] %s выдал выговор и уволил игрока %s (3/3). Причина: %s",player_name[playerid],player_name[params[0]],params[1]);
		SendFamilyMessage(PI[playerid][pMember],COLOR_LIGHTRED,string);
		FracLog(LOGS_UNINVITE,player_name[playerid],player_name[params[0]],params[1]);
		return 1;
	}
	format(string, sizeof(string), "[F] %s выдал выговор игроку %s (%i/3). Причина: %s",player_name[playerid],player_name[params[0]],PI[params[0]][pfWarn],params[1]);
	SendFamilyMessage(PI[playerid][pMember],COLOR_LIGHTRED,string);
	return 1;
}

CMD:funwarn(playerid, params[]) {
	if(!PI[playerid][pMember]) return 1;
	new string[156];
	if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUninviteRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", FI[PI[playerid][pMember]][fUninviteRang]);
		SendClientMessage(playerid, COLOR_GREY,string);
		return 1;
	}
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /funwarn [id] [причина]");
	if(!PI[params[0]][pfWarn]) return SendClientMessage(playerid, COLOR_GREY, "У данного игрока нет выговоров");
	if(PI[params[0]][pMember] != PI[playerid][pMember] || PI[playerid][pRank] <= PI[params[0]][pRank]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в Вашей организации / выше в должности");
	PI[params[0]][pfWarn]--;
	UpdatePlayerData(params[0],"fwarn",PI[params[0]][pfWarn]);
	format(string, sizeof(string), "[F] %s снял выговор игроку %s. Причина: %s",player_name[playerid],player_name[params[0]],params[1]);
	SendFamilyMessage(PI[playerid][pMember],COLOR_LIGHTRED,string);
	FracLog(LOGS_FUNWARN,player_name[playerid],player_name[params[0]],params[1]);
	return 1;
}

CMD:members(playerid) {
	if(!PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
	new ids = 0;
	new string[3000],str[128];
	strcat(str,"ID\tРанг\tТелефон\tВыговоры\tИмя"W"\n\n");
	strcat(string,str);
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pMember] != PI[playerid][pMember])continue;
		if(PI[i][pRank] < 1 || PI[i][pMember] < 1) continue;
		if(PI[i][pAdmin]) continue;
		format(str, sizeof(str), "%d\t%d\t%d\t\t%d/3\t\t%s %s %s\n",i,PI[i][pRank],PI[i][pPhone],PI[i][pfWarn],player_name[i],(start_work[i]) ? ("[На работе]") : ("[Не на работе]"),(TI[i][tAFK] > 3) ? (""P"[AFK]"W""):(""));
		strcat(string,str);
		ids++;
	}
	D(playerid, DIALOG_NONE, DSM, ""P"Члены организации онлайн", string, "Закрыть", "");
	new strr[128];
	format(strr,sizeof(strr),"Всего игроков в организации: "ORANGE"%d",ids);
	SendOk(playerid,strr);
	return 1;
}
CMD:invite(playerid, params[]) {
	if(!PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
	if(!start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Необходимо начать рабочий день");
	new string[128];
	if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fInviteRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", FI[PI[playerid][pMember]][fInviteRang]);
		SendClientMessage(playerid, COLOR_GREY,string);
		return 1;
	}
	if(sscanf(params,"d",params[0])) return	SendClientMessage(playerid, COLOR_WHITE,"Используйте: /invite [ID]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине");
	if(PI[params[0]][pMember] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже состоит в организации");
	if(PI[params[0]][pWarns] >= 1) return SendClientMessage(playerid, COLOR_GREY, "У игрока имеются предупреждения");
	if(IsBLName(PI[params[0]][pID],PI[playerid][pMember])) return SendClientMessage(playerid, COLOR_GREY, "Игрок в ЧС Вашей организации");
	if(!IsPlayerStream(7.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от игрока");
	if(GetPVarInt(params[0],"krup")) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок работает крупье");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	switch(PI[playerid][pMember]) {
	case fLSPD,fRCSD: {
			if(PI[params[0]][pLevel] < invite_frac[0]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[0]);
				SendClientMessage(playerid, COLOR_GREY,string);
				return 1;
			}
		}
	case fFBI: {
			if(PI[params[0]][pLevel] < invite_frac[1]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[1]);
				SendClientMessage(playerid, COLOR_GREY,string);
				return 1;
			}
		}
	case fARMYLS: {
			if(PI[params[0]][pLevel] < invite_frac[2]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[2]);
				SendClientMessage(playerid, COLOR_GREY,string);
				return 1;
			}
		}
	case fMEDICLS,fMEDICSF,fMEDICLV: {
			if(PI[params[0]][pLevel] < invite_frac[3]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[3]);
				SendClientMessage(playerid, COLOR_GREY,string);
				return 1;
			}
		}
	case fLSNEWS,fSFNEWS,fLVNEWS: {
			if(PI[params[0]][pLevel] < invite_frac[4]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[4]);
				SendClientMessage(playerid, COLOR_GREY,string);
				return 1;
			}
		}
	case fLCN,fYAKUZA,fRM,fBikers,fBikersTwo: {
			if(PI[params[0]][pLevel] < invite_frac[5]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[5]);
				SendClientMessage(playerid, COLOR_GREY,string);
				return 1;
			}
		}
	case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: {
			if(PI[params[0]][pLevel] < invite_frac[6]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[6]);
				SendClientMessage(playerid, COLOR_GREY,string);
				return 1;
			}
		}
	case fWHITEHOUSE: {
			if(PI[params[0]][pLevel] < invite_frac[7]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[7]);
				SendClientMessage(playerid, COLOR_GREY,string);
				return 1;
			}
		}
	}
	new mes[400];
	for(new i; i < 14;i++) {
		new skinid = gFractionSkin[PI[playerid][pMember]][i];
		if(!skinid) break;
		if(skinid == PI[params[0]][pFracSkin]) {
			if(!i) format(mes,sizeof(mes),""P"Скин %d [%d]",i+1,skinid);
			else format(mes,sizeof(mes),"%s\n"P"Скин %d [%d]",mes,i+1,skinid);
		}
		else {
			if(!i) format(mes,sizeof(mes),"Скин %d [%d]",i+1,skinid);
			else format(mes,sizeof(mes),"%s\nСкин %d [%d]",mes,i+1,skinid);
		}
	}
	D(playerid,dInviteSkin,DSL,player_name[params[0]],mes,"Принять","");
	SetPVarInt(playerid,"invkot",params[0]);
	return 1;
}
CMD:uninvite(playerid, params[]) {
	if(!PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
	if(!start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Необходимо начать рабочий день");
	new string[156];
	if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUninviteRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", FI[PI[playerid][pMember]][fUninviteRang]);
		SendClientMessage(playerid, COLOR_GREY,string);
		return 1;
	}
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /uninvite [playerid] [причина]");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(IsAIP(params[1])) return 1;
	if(PI[params[0]][pLeader] >= 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете уволить лидера");
	if(PI[playerid][pLeader] <= 0 && PI[playerid][pRank] <= PI[params[0]][pRank]) return SendClientMessage(playerid, COLOR_GREY, "Ваш ранг недостаточен");
	if(PI[params[0]][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей организации");
	if(PI[params[0]][pMember] == PI[playerid][pLeader] || PI[params[0]][pMember] == PI[playerid][pMember]) {
		if(PI[params[0]][pMember] > 0) {
			format(string, sizeof(string),""P"%s"W" уволил Вас из организации. Причина: %s", player_name[playerid],params[1]);
			SendUse(params[0],string);
			format(string, sizeof(string),""P"%s"W" был уволен из организации. Причина: %s", player_name[params[0]],params[1]);
			SendUse(playerid, string);
			if(start_work[params[0]]) {
				SendOk(params[0],"Рабочий день окончен");
				start_work[params[0]] = 0;
				UpdatePlayerData(params[0],"FracDuty",start_work[params[0]]);
			}
			if(IsAGang(params[0]) && GetPVarInt(params[0], "ppkz")) EndCapt(params[0]);
			if(GetPlayerState(params[0]) == PLAYER_STATE_DRIVER) RemovePlayerFromVehicleAC(params[0]);
			add_jobinfo(params[0],params[1]);
			PI[params[0]][pRank] = 0;
			PI[params[0]][pMember] = 0;
			PI[params[0]][pJob] = 0;
			PI[params[0]][pFracSkin] = 0;
			PI[params[0]][pZahvat] = 0;
			SetPlayerColor(params[0],0xFFFFFF11);
			skin_player(params[0]);
			SetArmour(params[0], 0);
			ResetPlayerWeapons(params[0]);
			
			UpdatePlayerData(params[0],"pModel",PI[params[0]][pFracSkin]);
			UpdatePlayerData(params[0],"pMember",PI[params[0]][pMember]);
			UpdatePlayerData(params[0],"pRank",PI[params[0]][pRank]);
			UpdatePlayerData(params[0],"pJob",PI[params[0]][pJob]);
			UpdatePlayerData(params[0],"zahvat",PI[params[0]][pZahvat]);
			
			PI[params[0]][pAdvert] = 0;
			UpdatePlayerData(params[0],"Advert", 0);
			
			FracLog(LOGS_INVITE,player_name[playerid],player_name[params[0]],params[1]);
		}
	}
	return 1;
}
CMD:leave(playerid) {
	if(PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Лидеру запрещено");
	if(!PI[playerid][pPremium]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет премиум-аккаунта");
	if(!PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
	D(playerid,D_LEAVE,DSM, ""P"Увольнение", "\n\n"W"Вы действительно хотите покинуть организацию по собственному желанию?\n\n", "Покинуть", "Отмена");
	return 1;
}

CMD:truck(playerid) {
	if(!IsATK(playerid)) return SendClientMessage(playerid,COLOR_GREY, "Вы не сотрудник транспортной компании");
	D(playerid,D_TK_TRUCK,DSTH,""P"Меню заказов",""W"Название\t"W"Груз\t"W"Стоимость\n"G"- Загрузиться на складе\n"P"1."W" Лесопилка\tИнструменты\t"GREEN"15000$\n"P"2."W" Ферма\tУдобрения\t"GREEN"11000$\n"P"3."W" Стройка\tСтройматериалы\t"GREEN"12000$\n\
"P"4."W" Оружейный завод\tМатериалы\t"GREEN"11500$\n"P"5."W" Деревня Montgomery\tПродукты\t"GREEN"12500$\n"P"6."W" Деревня Palomino Creek\tПродукты\t"GREEN"12200$","Выбрать","Отмена");
	return true;
}
alias:tr("trs");
CMD:tr(playerid, params[]) {
	if(!IsATK(playerid)) return true;
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid,COLOR_GREY, "У Вас бан чата");
	new string[144];
	if(isnull(params) || strlen(params) > 100) return SendClientMessage(playerid,COLOR_WHITE,"Введите: /tr [введите текст]");
	format(string, sizeof(string), "[TRUCK] [%s] %s: %s",tk_class[PI[playerid][bizz_status]-1],player_name[playerid],params);
	BizzMSG(PI[playerid][bizz_work],COLOR_YELLOW,string);
	return true;
}
CMD:trspcar(playerid) {
	if(!IsATK(playerid)) return SendClientMessage(playerid,COLOR_GREY, "Вы не сотрудник транспортной компании");
	if(PI[playerid][bizz_status] < 2) return SendClientMessage(playerid, COLOR_GREY, "Данная функция доступна руководителю транспортной компании и управляющему");
	new string[128];
	for(new i = GetVehiclePoolSize()+1; --i != 0;)  {
		if(VehicleInfo[i][vBizz] != PI[playerid][bizz_work]) continue;
		if(IsVehicleOccupied(i)) continue;
		LinkVehicleToInterior(i, 0);
		SetVehicleVirtualWorld(i, 0);
		SetVehicleToRespawn(i);
	}
	format(string, sizeof(string), "[TRUCK] [%s] %s заспавнил незанятые машины",tk_class[PI[playerid][bizz_status]-1],player_name[playerid]);
	BizzMSG(PI[playerid][bizz_work],COLOR_YELLOW,string);
	return 1;
}
stock invitetrS(playerid)
{   
    if(PI[playerid][bizz_work] == 61) return SendClientMessage(playerid, COLOR_GREY, "Вы уже работаете в транспортной компании");
	if(PI[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточный уровень для данной работы. Необходим 2 уровень");
	if(GetPVarInt(playerid, "tk_id")) return SendClientMessage(playerid, COLOR_GREY, "У вас есть активное предложение");
	SPD(playerid, D_ACCEPTS_TS, DSM,"Трудоустройство","Вы действительно хотите устроиться в транспортную компанию?",">>>","x");
	return 1;
}
CMD:uninviteleave(playerid) return PI[playerid][bizz_work] = 0;
CMD:trinvite(playerid, params[]) {
	if(!IsATK(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не сотрудник транспортной компании");
	if(PI[playerid][bizz_status] < 2) return SendClientMessage(playerid, COLOR_GREY, "Данная функция доступна руководителю транспортной компании и управляющему");
	new taxi = PI[playerid][bizz_work];
	if(sscanf(params,"d",params[0])) return	SendClientMessage(playerid, COLOR_WHITE, "Введите: /trinvite [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(!IsPlayerStream(7.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от игрока");
	if(PI[params[0]][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "У игрока недостаточный уровень для данной работы. Необходим 2 уровень");
	if(IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок в машине");
	if(PI[params[0]][bizz_work] == 61) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже работает в транспортной компании");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	new mes[128];
	format(mes,sizeof(mes),"Вы предложили "P"%s"W" вступить в транспортную компанию",player_name[params[0]]);
	SendUse(playerid,mes);
	format(mes,sizeof(mes),""P"%s"W" хочет устроить Вас в транспортную компанию",player_name[playerid]);
	SendUse(params[0],mes);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	SetPVarInt(params[0], "tk_id", taxi);
	return 1;
}
CMD:taxi(playerid,params[]) {
	if(PI[playerid][pJob] != 8) return SendClientMessage(playerid, COLOR_GREY, "Вы не водитель такси");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != GetPVarInt(playerid,"veh_id_taxi")) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем такси");
	if(sscanf(params,"u",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /taxi [ID игрока]");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете запросить место назначения у себя");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(GetPlayerState(params[0]) != PLAYER_STATE_PASSENGER || GetPlayerVehicleID(params[0]) != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен сидеть на пассажирском месте в Вашем такси");
	new mes[128];
	format(mes,sizeof(mes),"%s'y отправлен запрос на получение данных о месте назначения",player_name[params[0]]);
	SendClientMessage(playerid,0x3399FFFF,mes);
	format(mes,sizeof(mes),"Водитель такси "W"%s {"#269BD8"}запросил данные о месте назначения",player_name[playerid]);
	SendClientMessage(params[0],0x3399FFFF,mes);
	SendClientMessage(params[0],0x3399FFFF,"Зайдите в карту и поставьте правой кнопкой мыши метку там, куда хотите отправиться");
	SetPVarInt(params[0],"selectpoint",1);
	SetPVarInt(params[0],"taxidriver",playerid);
	return true;
}
CMD:fare(playerid, params[])
{
	new tar[15], string[200], slog[36];
	new veh = GetPlayerVehicleID(playerid);
	if(PI[playerid][pJob] != 8) return SendClientMessage(playerid, COLOR_GREY, "Вы не водитель такси");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != GetPVarInt(playerid,"veh_id_taxi")) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем такси");

	if(!VehicleInfo[veh][vTarif]) format(tar,15,"Не установлен");
	else format(tar,15,"%d$",VehicleInfo[veh][vTarif]);
	if(!VehicleInfo[veh][vSlog]) format(slog,36,"Не установлен");
	else format(slog,36,"%s",VehicleInfo[veh][vSlog]);
	format(string,150,""P"1."W" Изменить тариф\t%s\n"P"2."W" Слоган\t%s",tar, slog);
	D(playerid,D_TAXI_FARE,DST,""P"TAXI",string,"Выбрать","Отмена");

	return true;
}

CMD:untaxi(playerid,params[]) {
	if(PI[playerid][pJob] != 8) return SendClientMessage(playerid, COLOR_GREY, "Вы не водитель такси");
	RemovePlayerMapIcon(playerid,iconTaxi);
	SendOk(playerid,"Метка с карты убрана");
	return true;
}
CMD:bl( playerid) {
	if(!PI[playerid][pMember]) return 1;
	if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fInviteRang]) {
		new string[128];
		format(string, sizeof(string), "Доступно с %d ранга", FI[PI[playerid][pMember]][fInviteRang]);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1 ;
	}
	D(playerid,D_BL,DSL,""P"Чёрный список", ""P"1."W" Внести в ЧС\n"P"2."W" Вычеркнуть из ЧС\n"P"3."W" Очистить полный список ЧС\n"P"4."W" Список занесенных в ЧС", "Выбрать", "Закрыть");
	return 1;
}
CMD:offmembers(playerid) {
	if(!PI[playerid][pLeader]) return 1;
	D(playerid, d_offmembers_selection, DSL, ""P"Члены организации", ""P"1."W" Все члены организации оффлайн\n"P"2."W" Фильтр по рангу", "Выбрать", "Отмена");
	return true;
}
alias:lmenu("lpanel");
CMD:lmenu(playerid) {
	if(!PI[playerid][pLeader]) return 1;
	if(!IsAGang(playerid)) {
		static const f_str[] = ""P"1."W" Может принимать\t"G"%s[%i]"W"\n\
								"P"2."W" Может увольнять\t"G"%s[%i]"W"\n\
								"P"3."W" Может повышать\t"G"%s[%i]\n\
								"P"4."W" Спавн авто\t\t"G"%s[%i]\n\
								"P"5."W" Банк фракции\n\
								"P"6."W" Анти Team-Kill\t[%s"W"]\n\
								"P"7."W" Названия рангов\n\
								"P"8."W" Состав оффлайн\n\
								"P"9."W" Черный список\n"; 
		new string[sizeof(f_str) +1 + (-2 + 33) + (-2 + 33) + (-2 + 33) + (-2 + 33) + 40];
		format(string,sizeof(string),f_str,GetRankName(PI[playerid][pMember],FI[PI[playerid][pMember]][fInviteRang]),FI[PI[playerid][pMember]][fInviteRang],
		GetRankName(PI[playerid][pMember],FI[PI[playerid][pMember]][fUninviteRang]),FI[PI[playerid][pMember]][fUninviteRang],
		GetRankName(PI[playerid][pMember],FI[PI[playerid][pMember]][fGiveRang]),FI[PI[playerid][pMember]][fGiveRang],
		GetRankName(PI[playerid][pMember],FI[PI[playerid][pMember]][fSpawnRang]),FI[PI[playerid][pMember]][fSpawnRang],
		FI[PI[playerid][pMember]][fAntiTK]?(""NO"Выключить"):(""GREEN"Включить"));
		D(playerid,D_LMENU,DSL,""P"Панель лидера", string, "Выбрать", "Закрыть");
	}
	else
	{
		static const f_str[] = ""P"1."W" Может принимать\t"G"%s[%i]"W"\n\
								"P"2."W" Может увольнять\t"G"%s[%i]"W"\n\
								"P"3."W" Может повышать\t"G"%s[%i]\n\
								"P"4."W" Доступ к складу\t"G"%s[%i]\n\
								"P"5."W" Спавн авто\t\t"G"%s[%i]\n\
								"P"6."W" Банк фракции\n\
								"P"7."W" Анти Team-Kill\t[%s"W"]\n\
								"P"8."W" Названия рангов\n\
								"P"9."W" Состав оффлайн\n\
								"P"10."W" Черный список\n\
								"P"11."W" Дипломатия";
		new string[sizeof(f_str) +1 + (-2 + 33) + (-2 + 33) + (-2 + 33) + (-2 + 33) + 40 + 15];
		format(string,sizeof(string),f_str,GetRankName(PI[playerid][pMember],FI[PI[playerid][pMember]][fInviteRang]),FI[PI[playerid][pMember]][fInviteRang],
		GetRankName(PI[playerid][pMember],FI[PI[playerid][pMember]][fUninviteRang]),FI[PI[playerid][pMember]][fUninviteRang],
		GetRankName(PI[playerid][pMember],FI[PI[playerid][pMember]][fGiveRang]),FI[PI[playerid][pMember]][fGiveRang],
		GetRankName(PI[playerid][pMember],FI[PI[playerid][pMember]][fUseStock]),FI[PI[playerid][pMember]][fUseStock],
		GetRankName(PI[playerid][pMember],FI[PI[playerid][pMember]][fSpawnRang]),FI[PI[playerid][pMember]][fSpawnRang],
		FI[PI[playerid][pMember]][fAntiTK]?(""NO"Выключить"):(""GREEN"Включить"));
		D(playerid,D_LMENU_2,DSL,""P"Панель лидера", string, "Выбрать", "Закрыть");
	}
	return 1;
}

CMD:changecar(playerid,params[]) {
	if(!PI[playerid][pRoom] && !PI[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет Т/С");
	new giveplayerid,car_1,car_2,price;
	if(sscanf(params, "dddd",giveplayerid,car_1,car_2,price)) {
		SendClientMessage(playerid, COLOR_WHITE,"Используйте: /changecar [id игрока] [слот авто] [слот авто игрока] [доплата]");
		new string[144];
		format(string,sizeof(string),"Слот №1 [%s] | Слот №2 [%s]",gTransport[CarsInfo[playerid][carModel][0]-400][trName],gTransport[CarsInfo[playerid][carModel][1]-400][trName]);
		SendClientMessage(playerid,COLOR_GREY,string);
		return 1;
	}
	if(!PI[giveplayerid][pHouse] && !PI[giveplayerid][pRoom]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет Т/С");
	if((car_1 < 1 && car_1 > 2) || (car_2 < 1 && car_2 > 2)) return 1;
	new model = GetVehicleModel(house_car[playerid][car_1-1]);
	if(!house_car[playerid][car_1-1] || model == 481) return SendClientMessage(playerid, COLOR_GREY, "Нельзя предлагать на обмен BMX");
	if(!model) return SendClientMessage(playerid, COLOR_GREY, "Выгоните автомобиль на улицу");
	if(price < 1 || price > 15000000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше $1 и больше $15.000.000");
	if(!IsPlayerStream(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с Вами");
	if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY,not_id);

	SetPVarInt(giveplayerid,"carProdaet",playerid + 1);
	SetPVarInt(playerid,"carPokupaet",giveplayerid + 1);
	SetPVarInt(giveplayerid,"carCena",price);
	SetPVarInt(playerid,"numbercar1",car_1);
	SetPVarInt(playerid,"numbercar2",car_2);
	SetPVarInt(playerid,"sellcar_type",1);

	new improve[256];
	if(CarsInfo[giveplayerid][carVehcom_1][car_2-1]) strcat(improve,"\t\t\t[Спойлер]\n");
	if(CarsInfo[giveplayerid][carVehcom_2][car_2-1]) strcat(improve,"\t\t\t[Капот]\n");
	if(CarsInfo[giveplayerid][carVehcom_3][car_2-1]) strcat(improve,"\t\t\t[Воздухозаборник]\n");
	if(CarsInfo[giveplayerid][carVehcom_4][car_2-1]) strcat(improve,"\t\t\t[Боковая юбка]\n");
	if(CarsInfo[giveplayerid][carVehcom_5][car_2-1]) strcat(improve,"\t\t\t[Фары]\n");
	if(CarsInfo[giveplayerid][carVehcom_6][car_2-1]) strcat(improve,"\t\t\t[Нитро]\n");
	if(CarsInfo[giveplayerid][carVehcom_7][car_2-1]) strcat(improve,"\t\t\t[Выхлопная труба]\n");
	if(CarsInfo[giveplayerid][carVehcom_8][car_2-1]) strcat(improve,"\t\t\t[Диски]\n");
	if(CarsInfo[giveplayerid][carVehcom_9][car_2-1]) strcat(improve,"\t\t\t[Стерео]\n");
	if(CarsInfo[giveplayerid][carVehcom_10][car_2-1]) strcat(improve,"\t\t\t[Гидравлика]\n");
	if(CarsInfo[giveplayerid][carVehcom_11][car_2-1]) strcat(improve,"\t\t\t[Передний бампер]\n");
	if(CarsInfo[giveplayerid][carVehcom_12][car_2-1]) strcat(improve,"\t\t\t[Задний бампер]\n");

	new improve2[256];
	if(CarsInfo[playerid][carVehcom_1][car_1-1]) strcat(improve2,"\t\t\t[Спойлер]\n");
	if(CarsInfo[playerid][carVehcom_2][car_1-1]) strcat(improve2,"\t\t\t[Капот]\n");
	if(CarsInfo[playerid][carVehcom_3][car_1-1]) strcat(improve2,"\t\t\t[Воздухозаборник]\n");
	if(CarsInfo[playerid][carVehcom_4][car_1-1]) strcat(improve2,"\t\t\t[Боковая юбка]\n");
	if(CarsInfo[playerid][carVehcom_5][car_1-1]) strcat(improve2,"\t\t\t[Фары]\n");
	if(CarsInfo[playerid][carVehcom_6][car_1-1]) strcat(improve2,"\t\t\t[Нитро]\n");
	if(CarsInfo[playerid][carVehcom_7][car_1-1]) strcat(improve2,"\t\t\t[Выхлопная труба]\n");
	if(CarsInfo[playerid][carVehcom_8][car_1-1]) strcat(improve2,"\t\t\t[Диски]\n");
	if(CarsInfo[playerid][carVehcom_9][car_1-1]) strcat(improve2,"\t\t\t[Стерео]\n");
	if(CarsInfo[playerid][carVehcom_10][car_1-1]) strcat(improve2,"\t\t\t[Гидравлика]\n");
	if(CarsInfo[playerid][carVehcom_11][car_1-1]) strcat(improve2,"\t\t\t[Передний бампер]\n");
	if(CarsInfo[playerid][carVehcom_12][car_1-1]) strcat(improve2,"\t\t\t[Задний бампер]\n");

	new model1 = CarsInfo[playerid][carModel][car_1-1]-400;
	new model2 = CarsInfo[giveplayerid][carModel][car_2-1]-400;
	new classname[12];
	new classname2[12];
	GetCarClassName(gTransport[model1][trClass],classname);
	GetCarClassName(gTransport[model2][trClass],classname2);
	static const f_str[] = "\t\t\t"ORANGE"==== ИНФОРМАЦИЯ ====\n\n\
							"YELLOW"\t\t\tВаше авто:\n\n\
							"W"Марка авто: \t\t"P"%s\n\
							"W"Класс: \t\t\t"P"%s\n\
							"W"Пробег: \t\t"P"%.0fкм\n\
							"W"Бензобак: \t\t"P"%dл\n\
							"W"Тюнинг:\n\
							"GREEN"%s\n\n\
							"YELLOW"\t\t\tОбмен на авто:\n\n\
							"W"Марка авто: \t\t"P"%s\n\
							"W"Класс: \t\t\t"P"%s\n\
							"W"Пробег: \t\t"P"%.0fкм\n\
							"W"Бензобак: \t\t"P"%dл\n\
							"W"Тюнинг:\n\
							"GREEN"%s\n\n\
							"NO"Вы действительно хотите предложить обмен с его доплатой:"ORANGE" $%d?";
	new string[900];
	format(string,sizeof(string),f_str,gTransport[model1][trName],classname,CarsInfo[playerid][carDrived][car_1-1],gTransport[model1][trTank],improve2,
	gTransport[model2][trName],classname2,CarsInfo[giveplayerid][carDrived][car_2-1],gTransport[model2][trTank],improve,price);
	D(playerid,D_CHANGECAR,DSM, ""P"Обмен авто",string,"Да","Отмена");
	return 1;
}
set_string(param_1[], param_2[])
{
    strmid(param_1, param_2, 0, strlen(param_2), 255);
    return 1;
}
CMD:sellcar(playerid, params[]) {
	if(GetPVarInt(playerid,"car_pokupaet")) return SendClientMessage(playerid, COLOR_GREY, "У Вас активный обмен Т/С с игроком");
	if(!PI[playerid][pHouse] && !PI[playerid][pRoom] && !PI[playerid][pTempKey]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома/квартиры");
	if(PI[playerid][pCredit]) return SCM(playerid, COLOR_GREY, "У вас не выплачен кредит. Продажа Т/C запрещена!");
	if(!params[0]) {
		new string[128];
		format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[CarsInfo[playerid][carModel][0]-400][trName],gTransport[CarsInfo[playerid][carModel][1]-400][trName]);
		D(playerid,D_HOUSE_CARSELL,DSL,""P"Продать домашний транспорт",string,"Выбрать","Закрыть");
		return true;
	}
	if(sscanf(params, "uii",params[0],params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /sellcar [id игрока] [1 или 2 авто] [стоимость]");
	if(!IsPlayerConnected(params[0]) || playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(params[1] < 1 && params[1] > 2) return SendClientMessage(playerid,COLOR_GREY,"Выберите 1 или 2 автомобиль");
	new model_sell = GetVehicleModel(house_car[playerid][params[1]-1]);
	if(!house_car[playerid][params[1]-1] || model_sell == 481) return SendClientMessage(playerid, COLOR_GREY, "Нельзя предлагать на обмен BMX");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");

	new slot_car = -1;
	for(new i = 0; i < 2; i++) {
		if(CarsInfo[params[0]][carModel][i] != 481) continue;
		slot_car = i;
		break;
	}
	if(slot_car == -1) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет свободных мест под автомобиль");
	if(params[2] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Стоимость за автомобиль не может быть меньше 1$");

	SetPVarInt(params[0], "car_prodaet", playerid+1);
	SetPVarInt(playerid, "car_pokupaet", params[0]+1);

	SetPVarInt(params[0],"carCena",params[2]);
	SetPVarInt(playerid,"carnumber",params[1]-1);
	SetPVarInt(playerid,"sellcar",1);

	new improve[256];
	if(CarsInfo[playerid][carVehcom_1][params[1]-1]) strcat(improve,"\t\t\t[Спойлер]\n");
	if(CarsInfo[playerid][carVehcom_2][params[1]-1]) strcat(improve,"\t\t\t[Капот]\n");
	if(CarsInfo[playerid][carVehcom_3][params[1]-1]) strcat(improve,"\t\t\t[Воздухозаборник]\n");
	if(CarsInfo[playerid][carVehcom_4][params[1]-1]) strcat(improve,"\t\t\t[Боковая юбка]\n");
	if(CarsInfo[playerid][carVehcom_5][params[1]-1]) strcat(improve,"\t\t\t[Фары]\n");
	if(CarsInfo[playerid][carVehcom_6][params[1]-1]) strcat(improve,"\t\t\t[Нитро]\n");
	if(CarsInfo[playerid][carVehcom_7][params[1]-1]) strcat(improve,"\t\t\t[Выхлопная труба]\n");
	if(CarsInfo[playerid][carVehcom_8][params[1]-1]) strcat(improve,"\t\t\t[Диски]\n");
	if(CarsInfo[playerid][carVehcom_9][params[1]-1]) strcat(improve,"\t\t\t[Стерео]\n");
	if(CarsInfo[playerid][carVehcom_10][params[1]-1]) strcat(improve,"\t\t\t[Гидравлика]\n");
	if(CarsInfo[playerid][carVehcom_11][params[1]-1]) strcat(improve,"\t\t\t[Передний бампер]\n");
	if(CarsInfo[playerid][carVehcom_12][params[1]-1]) strcat(improve,"\t\t\t[Задний бампер]\n");

	new model = CarsInfo[playerid][carModel][params[1]-1]-400;
	new classname[12];
	GetCarClassName(gTransport[model][trClass],classname);
	static const f_str[] = "\t\t"ORANGE"==== ИНФОРМАЦИЯ ====\n\n\
							"W"Марка авто: \t\t"P"%s\n\
							"W"Класс: \t\t\t"P"%s\n\
							"W"Пробег: \t\t"P"%.0fкм\n\
							"W"Бензобак: \t\t"P"%dл\n\
							"W"Тюнинг:\n\
							"GREEN"%s\n\n\
							"W"Вы хотите продать автомобиль игроку"ORANGE" %s"W" за"ORANGE" %d$?";
	new string[400];
	format(string,sizeof(string),f_str,gTransport[model][trName],classname,CarsInfo[playerid][carDrived][params[1]-1],gTransport[model][trTank],improve, player_name[params[0]], params[2]);
	D(playerid,D_SELL_CAR,DSM, ""P"Продажа автомобиля",string,"Да","Отмена");
	return 1;
}

CMD:dropgun(playerid, param[]) {
	if(!TI[playerid][tLogin] && AntiCheatIsKickedWithDesync(playerid)) return true;
	new weaponid = GetPlayerWeapon(playerid);
	if(weaponid != 24 && weaponid != 25 && weaponid != 26 && weaponid != 29 && weaponid != 30 && weaponid != 31 && weaponid != 33) return SendClientMessage(playerid, COLOR_GREY, "Нельзя выбросить запрещенное оружие");
	if(IsPlayerInAnyVehicle(playerid)) return 0;
	if(TI[playerid][tDuel] != -1) return 0;
	new ammo = GetPlayerAmmo(playerid);
	if(!weaponid) return 0;
	if(!ammo) return 0;
	if(weaponid < 1 || weaponid > 47) return SendClientMessage(playerid, COLOR_GREY, "Оружие должно находиться в руках");
	DropGun(playerid,weaponid,ammo);
	return 1;
}
CMD:changeskin(playerid,params[]) {
	new mes[400];
	if(!PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
	if(!start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Необходимо начать рабочий день");
	if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUninviteRang]) {
		format(mes,128,"Данная функция доступна с %i ранга", FI[PI[playerid][pMember]][fUninviteRang]);
		SendClientMessage(playerid, COLOR_GREY,mes);
		return 1;
	}
	if(sscanf(params,"u",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /changeskin [ID]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(PI[params[0]][pMember] != PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей организации");
	if(PI[params[0]][pRank] >= PI[playerid][pRank] && params[0] != playerid) return SendClientMessage(playerid, COLOR_GREY, "Ваш ранг недостаточен");
	SetPVarInt(playerid,"params[0]",params[0]);
	for(new i; i < 14;i++) {
		new skinid = gFractionSkin[PI[playerid][pMember]][i];
		if(!skinid) break;
		if(skinid == PI[params[0]][pFracSkin]) {
			if(!i) format(mes,sizeof(mes),""P"Скин %d [%d]",i+1,skinid);
			else format(mes,sizeof(mes),"%s\n"P"Скин %d [%d]",mes,i+1,skinid);
		}
		else {
			if(!i) format(mes,sizeof(mes),"Скин %d [%d]",i+1,skinid);
			else format(mes,sizeof(mes),"%s\nСкин %d [%d]",mes,i+1,skinid);
		}
	}
	D(playerid,dFractionSkin,2,player_name[params[0]],mes,"Сменить","Отмена");
	return true;
}
stock HideMenuSave(playerid)
{
	new query[200];
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `ahMenu0`= '%d',`ahMenu1`= '%d',`ahMenu2`= '%d',`ahMenu3`= '%d' WHERE `Name` = '%s' LIMIT 1",
		ahMenu[playerid][0],ahMenu[playerid][1],ahMenu[playerid][2],ahMenu[playerid][3],player_name[playerid]);
	mysql_tquery(connects,query);
	return 1;
}
CMD:hidemenu(playerid) return HideMenu(playerid);
stock HideMenu(playerid)
{
    if(!PI[playerid][pAdmin]) return 1;
    //if(!PI[playerid][giveHide]) return 1;
    FSPD(playerid,1285,DST,""cServer"Hide Menu","Выбрать","Закрыть",""cServer"[1]{FFFFFF} Скрыть себя из /admins\t%s\n"cServer"[2]{FFFFFF} Скрыть свой уровень из админс\t%s\n"cServer"[3]{FFFFFF} Показать фейк уровень в админс\t%s\n"cServer"[4]{FFFFFF} Подменять свой Ник\t%s",(ahMenu[playerid][0] == 0) ? ("{FF0000}| Деактивировано") : ("{00FF00}| Активировано"), (ahMenu[playerid][1] == 0) ? ("{FF0000}| Деактивировано") : ("{00FF00}| Активировано"), (ahMenu[playerid][2] == 0) ? ("{FF0000}| Деактивировано") : ("{00FF00}| Активировано"), (ahMenu[playerid][3] == 0) ? ("{FF0000}| Деактивировано") : ("{00FF00}| Активировано"));
    return 1;
}
alias:rang("giverank");
CMD:rang(playerid, params[]) {
	if(!PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
	if(!start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Необходимо начать рабочий день");
	new string[512];
	if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fGiveRang]) {
		format(string,128,"Доступно с %i ранга", FI[PI[playerid][pMember]][fGiveRang]);
		SendClientMessage(playerid, COLOR_GREY,string);
		return 1;
	}
	if(sscanf(params,"i",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /rang [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(PI[params[0]][pLeader] >= 1) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(PI[playerid][pMember] != PI[params[0]][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей организации");
	if(PI[playerid][pRank] <= PI[params[0]][pRank]) return SendClientMessage(playerid, COLOR_GREY, "Ваш ранг недостаточен");

	if(PI[playerid][pRank] == FI[PI[playerid][pMember]][fMaxRang]) {
		for(new i = 1; i <= FI[PI[playerid][pMember]][fMaxRang]; i++) {
			if(i>= PI[playerid][pRank]) break;
			format(string,sizeof(string),"%s%s%s (%i)\n",string,(PI[params[0]][pRank] == i) ? (""P"") : (""),GetRankName(PI[playerid][pMember],i),i);
			D(playerid,dRank,DSL,""P"Выберите ранг",string,"Выбрать","Закрыть");
		}
		SetPVarInt(playerid,"id_giverank",params[0]);
	}
	else if(PI[playerid][pRank] == FI[PI[playerid][pMember]][fMaxRang]-(FI[PI[playerid][pMember]][fMaxRang]-PI[playerid][pRank])) {
		for(new i = 1; i <= FI[PI[playerid][pMember]][fMaxRang]; i++) {
			if(i>= PI[playerid][pRank]) break;
			format(string,sizeof(string),"%s%s%s (%i)\n",string,(PI[params[0]][pRank] == i) ? (""P"") : (""),GetRankName(PI[playerid][pMember],i),i);
			D(playerid,dRank,DSL,""P"Выберите ранг",string,"Выбрать","Закрыть");
		}
		SetPVarInt(playerid,"id_giverank",params[0]);
	}
	return 1;
}

CMD:f(playerid, params[]) {
	if(!IsAMafia(playerid) && !IsAGang(playerid) && !IsABikers(playerid)) return true;
	if(!PI[playerid][pSettings][1]) return SendClientMessage(playerid, COLOR_GREY, "Для начала включите чат организации. /mm > настройки > чат организации");
	if(PI[playerid][pFmute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /f [текст]");
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(TI[playerid][tGag]) return SendClientMessage(playerid, COLOR_GREY, "У Вас кляп");

	static const f_str[] = "[F] %s %s[%d]: %s";
	new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 105)];

	format(string, sizeof(string), f_str,GetRankName(PI[playerid][pMember],PI[playerid][pRank]), player_name[playerid],playerid, result);
	SendFamilyMessage(PI[playerid][pMember], 0x6699ccFF, string);
	foreach(new i:Player) if(GetPVarInt(i,"admin_tipster") == PI[playerid][pMember]) SendClientMessage(i, COLOR_LIGHTRED, string);
	SendSpyMessage(PI[playerid][pMember], 0xADFFEFFF, string);
	return true;
}
CMD:fb(playerid, params[]) {
	if(!IsAMafia(playerid) && !IsAGang(playerid) && !IsABikers(playerid)) return true;
	if(!PI[playerid][pSettings][1]) return SendClientMessage(playerid, COLOR_GREY, "Для начала включите чат организации. /mm > настройки > чат организации");
	if(PI[playerid][pFmute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /fb [текст]");
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(TI[playerid][tGag]) return SendClientMessage(playerid, COLOR_GREY, "У Вас кляп");

	static const f_str[] = "[F] %s %s[%d]: (( %s ))";
	new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 105)];

	format(string, sizeof(string), f_str,GetRankName(PI[playerid][pMember],PI[playerid][pRank]), player_name[playerid],playerid, result);
	SendFamilyMessage(PI[playerid][pMember], 0x6699ccFF, string);
	foreach(new i:Player) if(GetPVarInt(i,"admin_tipster") == PI[playerid][pMember]) SendClientMessage(i, COLOR_LIGHTRED, string);
	SendSpyMessage(PI[playerid][pMember], 0xADFFEFFF, string);
	return true;
}
CMD:rb(playerid,params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && PI[playerid][pMember] != fINSTRUCTORS && PI[playerid][pMember] != fWHITEHOUSE) return true;
	if(!PI[playerid][pSettings][1]) return SendClientMessage(playerid, COLOR_GREY, "Для начала включите чат организации. /mm > настройки > чат организации");
	if(PI[playerid][pFmute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /rb [текст]");
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(TI[playerid][tGag]) return SendClientMessage(playerid, COLOR_GREY, "У Вас кляп");
	if(!start_work[playerid]) return true;

	static const f_str[] = "[R] %s %s[%d]: (( %s ))";
	new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 105)];
	
	format(string, sizeof(string), f_str,GetRankName(PI[playerid][pMember],PI[playerid][pRank]), player_name[playerid],playerid, result);
	SendFamilyMessage(PI[playerid][pMember], 0x31cf63FF, string);
	foreach(new i:Player) if(GetPVarInt(i,"admin_tipster") == PI[playerid][pMember]) SendClientMessage(i, COLOR_LIGHTRED, string);
	SendSpyMessage(PI[playerid][pMember], 0xADFFEFFF, string);
	return 1;
}
CMD:r(playerid, params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && PI[playerid][pMember] != fINSTRUCTORS && PI[playerid][pMember] != fWHITEHOUSE) return true;
	if(GetPVarInt(playerid,"takeradio")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет рации");
	if(!PI[playerid][pSettings][1]) return SendClientMessage(playerid, COLOR_GREY, "Для начала включите чат организации. /mm > настройки > чат организации");
	if(PI[playerid][pFmute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /r [текст]");
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(TI[playerid][tGag]) return SendClientMessage(playerid, COLOR_GREY, "У Вас кляп");
	if(!start_work[playerid]) return true;

	static const f_str[] = "[R] %s %s[%d]: %s";
	new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 105)];

	format(string, sizeof(string), f_str,GetRankName(PI[playerid][pMember],PI[playerid][pRank]), player_name[playerid],playerid, result);
	SendFamilyMessage(PI[playerid][pMember], 0x31cf63FF, string);
	radio_(playerid,result);
	foreach(new i:Player) if(GetPVarInt(i,"admin_tipster") == PI[playerid][pMember]) SendClientMessage(i, COLOR_LIGHTRED, string);
	SendSpyMessage(PI[playerid][pMember], 0xADFFEFFF, string);
	return true;
}
CMD:rr(playerid, params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && !IsAMafia(playerid)) return true;
	if(!PI[playerid][pSettings][1]) return SendClientMessage(playerid, COLOR_GREY, "Для начала включите чат организации. /mm > настройки > чат организации");
	if(PI[playerid][pFmute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /rr [текст]");
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(TI[playerid][tGag]) return SendClientMessage(playerid, COLOR_GREY, "У Вас кляп");
	if(!start_work[playerid]) return true;
	new string[156];
	if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
	format(string, sizeof(string), "[%s] %s %s[%d]: %s",FI[PI[playerid][pMember]][fName],GetRankName(PI[playerid][pMember],PI[playerid][pRank]), player_name[playerid],playerid, result);
	if(PI[playerid][pMember] == fWHITEHOUSE && PI[playerid][pRank] == MINISTRE_NEWS) SendNews(0x54548CFF,string);
	if(PI[playerid][pMember] == fWHITEHOUSE && PI[playerid][pRank] == MINISTRE_PD) SendCop(0x54548CFF,string);
	if(PI[playerid][pMember] == fWHITEHOUSE && PI[playerid][pRank] == MINISTRE_MEDICS) SendMedic(0x54548CFF,string);
	if(PI[playerid][pMember] == fWHITEHOUSE && PI[playerid][pRank] == MINISTRE_ARMY) SendArmy(0x54548CFF,string);

	if(IsACop(playerid)) SendCop(0x54548CFF,string);
	if(IsAArm(playerid)) SendArmy(0x54548CFF,string);
	if(IsAMedic(playerid)) SendMedic(0x54548CFF,string);
	if(IsANews(playerid)) SendNews(0x54548CFF,string);
	if(IsAMafia(playerid)) SendMafia(0x54548CFF,string);
	return true;
}
CMD:d(playerid, params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && PI[playerid][pMember] != fWHITEHOUSE && PI[playerid][pMember] != fINSTRUCTORS) return true;
	if(GetPVarInt(playerid,"takradio")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет рации");
	if(!PI[playerid][pSettings][1]) return SendClientMessage(playerid, COLOR_GREY, "Для начала включите чат организации. /mm > настройки > чат организации");
	if(PI[playerid][pFmute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /d [текст]");
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(TI[playerid][tGag]) return SendClientMessage(playerid, COLOR_GREY, "У Вас кляп");
	if(!start_work[playerid]) return true;
	new string[156];
	if(PI[playerid][pAdmin] >= 1 || dostup[playerid] != 0) {
		format(string,sizeof(string),"[Администратор] %s(%d): %s",player_name[playerid],playerid,params[0]);
	}
	else {
		if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
		if(GetSVarInt("d_timer") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Пользоваться рацией департамента можно раз в 5 секунд");
		SetSVarInt("d_timer", gettime() + 5);
		format(string, sizeof(string), "[%s] %s %s[%d]: %s",FI[PI[playerid][pMember]][fName],GetRankName(PI[playerid][pMember],PI[playerid][pRank]), player_name[playerid],playerid, result);
	}
	SendDepMessage(COLOR_ALLDEPT, string);
	SendSpyMessage(PI[playerid][pMember], 0xADFFEFFF, string);
	foreach(new i:Player) {
		if(PI[i][pAdmin] < 1 || dostup[i] == 0) continue;
		switch(GetPVarInt(i,"admin_tipster")) {
		case 1-13,23: SendClientMessage(i, COLOR_ALLDEPT, string);
		}
	}
	return true;
}
CMD:db(playerid, params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && PI[playerid][pMember] != fINSTRUCTORS && PI[playerid][pMember] != fWHITEHOUSE) return true;
	if(!PI[playerid][pSettings][1]) return SendClientMessage(playerid, COLOR_GREY, "Для начала включите чат организации. /mm > настройки > чат организации");
	if(PI[playerid][pFmute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /db [текст]");
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	if(TI[playerid][tGag]) return SendClientMessage(playerid, COLOR_GREY, "У Вас кляп");
	if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
	if(GetSVarInt("d_timer") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Пользоваться рацией департамента можно раз в 15 секунд");
	SetSVarInt("d_timer", gettime() + 15);

	static const f_str[] = "[%s] %s %s: (( %s ))";
	new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 100)];
	
	format(string, sizeof(string), f_str,FI[PI[playerid][pMember]][fName],GetRankName(PI[playerid][pMember],PI[playerid][pRank]), player_name[playerid], result);
	SendDepMessage(COLOR_ALLDEPT, string);
	SendSpyMessage(PI[playerid][pMember], 0xADFFEFFF, string);
	return true;
}
CMD:vipchat(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(GetPVarInt(playerid, "adm_vip")) {
		DeletePVar(playerid, "adm_vip");
		SendOk(playerid,"Прослушка VIP чата отключена");
	}
	else SetPVarInt(playerid, "adm_vip", 1),SendOk(playerid,"Прослушка VIP чата включена");
	return 1;
}
CMD:v(playerid,params[]) {
	if(!PI[playerid][pPremium]) return 1;
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У вас бан чата");
	if(isnull(params) || strlen(params) > 144) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /v [текст]");
	new string[128];
	format(string, sizeof(string), "[VIP] %s [%d]: %s", player_name[playerid],playerid,params);
	SendVip(COLOR_BLUE, string);
	return 1;
}
CMD:heal(playerid, params[]) {
	if(!IsAMedic(playerid) || !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не медик");
	if(PI[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Команда доступна со 2-ого ранга");
	new model = GetVehicleModel(GetPlayerVehicleID(playerid));
	if(model != 416 && model != 487 && !IsPlayerInRangeOfPoint(playerid,70,2187.6946,571.4658,1080.4542) && !IsPlayerInRangeOfPoint(playerid,70,1554.4142,505.6061,1070.4346)&& !IsPlayerInRangeOfPoint(playerid,50,309.7332,2060.8398,1014.3731)) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться в служебном транспорте/больнице");
	if(sscanf(params,"ud",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /heal [id] [цена]");
	if(params[1] < 50 || params[1] > 150) return SendClientMessage(playerid, COLOR_GREY, "Цена должна быть от $50 до $150");
	if (!ProxDetectorS(5.0,playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко от вас");
	if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете вылечить самого себя");
	if(!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей машине");
	if(HealOffer[params[0]] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы уже предложили лечение данному игроку");
	new Float:health;
	GetPlayerHealth(params[0],health);
	if(health == 100) return SendClientMessage(playerid, COLOR_GREY, "Игрок здоров");
	HealOffer[params[0]] = playerid;
	HealPrice[params[0]] = params[1];
	new string[128];
	format(string,sizeof(string),"Вы предложили лечение игроку "P"%s"W" за "ORANGE"$%d",player_name[params[0]],params[1]);
	SendUse(playerid,string);
	format(string,sizeof(string),"Доктор "P"%s"W" хочет Вас вылечить за "ORANGE"$%d",player_name[playerid],params[1]);
	SendUse(params[0],string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
	return 1;
}
CMD:theftskill(playerid) {
	new str[250];
	format(str,sizeof(str),"\t"ORANGE"Навык автоугонщика"W"\n\nЧтобы повысить навык автоугонщика, нужно чаще выполнять задания\nпо автоугону.\n\n\
	Навык автоугонщика:"ORANGE" [%d/3]\n"W"Угнано автомобилей:"ORANGE" %d",PI[playerid][pTheftlvl],PI[playerid][pTheftExp]);
	D(playerid, DIALOG_NONE, DSM, " ", str, "Закрыть", "");
}

CMD:theft(playerid) {
	if(thef_timer[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не начинали автоугон транспорта");
	D(playerid, D_THEFT_LIST, DSL, ""P"Автоугон", ""P"1."W" Взломать автомобиль отмычкой\n"P"2."W" Завести двигатель\n"P"3."W" Обновить координаты автомобиля [GPS]\n"P"4."W" Отключить сигнализацию", "Выбрать", "Отмена");
	return true;
}

CMD:inv(playerid) {
	if(GetPVarInt(playerid,"inv")) return true;
	if(GetPVarInt(playerid,"get_class")) return true;
	if(BJ_PlayerInfo[playerid][pBlackJackTableID] > 0) return true;
	if(GhettoInfo[playerid][GhettoGUI]) return true;

	new str_eat[12],str_health[12],str_thrist[12], Float:health;

	PlayerTextDrawSetString(playerid, inventory_PTD[playerid][7], "PAGE_1");
	
	if(GetPVarInt(playerid, "ppkz"))
	{
		for(new t = 0;t < 34;t++) {
			TextDrawHideForPlayer(playerid, Capture[t]);
		}
	}
	
	for(new i = 0; i < 54; i++) TextDrawShowForPlayer(playerid, inventory_TD[i]);
	for(new i = 0; i < 8; i++) PlayerTextDrawShow(playerid, inventory_PTD[playerid][i]);
	
	SelectTextDraw(playerid, 0xfD5B93Fff);
	
	GetPlayerHealth(playerid,health);
	
	PlayerTextDrawSetPreviewModel(playerid, inventory_PTD[playerid][0], GetPlayerSkin(playerid));
	PlayerTextDrawHide(playerid, inventory_PTD[playerid][0]);
	PlayerTextDrawShow(playerid, inventory_PTD[playerid][0]);
	
	format(str_eat,sizeof(str_eat),"%d%",PI[playerid][pSatiety]);
	PlayerTextDrawSetString(playerid, inventory_PTD[playerid][4], str_eat);
	PlayerTextDrawShow(playerid, inventory_PTD[playerid][4]);
	
	format(str_health,sizeof(str_health),"%.0f%",health);
	PlayerTextDrawSetString(playerid, inventory_PTD[playerid][6], str_health);
	PlayerTextDrawShow(playerid, inventory_PTD[playerid][6]);
	
	format(str_thrist,sizeof(str_thrist),"%d%",PI[playerid][pThrist]);
	PlayerTextDrawSetString(playerid, inventory_PTD[playerid][5], str_thrist);
	PlayerTextDrawShow(playerid, inventory_PTD[playerid][5]);
	
	PlayerTextDrawTextSize(playerid, inventory_PTD[playerid][2], PI[playerid][pSatiety]*105.5895/100, 7.8797);
	PlayerTextDrawShow(playerid, inventory_PTD[playerid][2]);
	
	PlayerTextDrawTextSize(playerid, inventory_PTD[playerid][3], PI[playerid][pThrist]*105.5895/100, 7.8797);
	PlayerTextDrawShow(playerid, inventory_PTD[playerid][3]);
	
	if(health > 100) PlayerTextDrawTextSize(playerid, inventory_PTD[playerid][1], 100*105.5895/100, 7.8797);
	else PlayerTextDrawTextSize(playerid, inventory_PTD[playerid][1], health*105.5895/100, 7.8797);
	PlayerTextDrawShow(playerid, inventory_PTD[playerid][1]);
	
	for(new i = 0; i < 26; i++) {
		new ID = PI[playerid][pInventory][i];
		PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][i], ItemsInfo[ID][ItemModel]);
		PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][i], ItemsInfo[ID][POSTDx], ItemsInfo[ID][POSTDy], ItemsInfo[ID][POSTDz], ItemsInfo[ID][POSTDc]);
		PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][i], 370810879);
		PlayerTextDrawShow(playerid, inventory_slot[playerid][i]);
	}
	
	InvPage[playerid] = 0;
	DeletePVar(playerid,"block_inv");
	SetPVarInt(playerid,"inv",1);
	return true;
}
CMD:lock(playerid, params[]) {
	new Float:check_pos[3], check_car = INVALID_VEHICLE_ID;
	if(TI[playerid][tMoped] != INVALID_VEHICLE_ID) check_car = TI[playerid][tMoped];
	if(TI[playerid][tBoat] != INVALID_VEHICLE_ID) check_car = TI[playerid][tBoat];
	if(GetPVarInt(playerid,"burger_vehid") != 0)
	{
		GetVehiclePos(GetPVarInt(playerid,"burger_vehid"), check_pos[0],check_pos[1],check_pos[2]);
		if(IsPlayerInRangeOfPoint(playerid,4,check_pos[0],check_pos[1],check_pos[2])) {
			SetVehicleDoorStatus(GetPVarInt(playerid,"burger_vehid"), playerid);
			return true;
		}
	}
	if(check_car != INVALID_VEHICLE_ID)
	{
		GetVehiclePos(check_car, check_pos[0],check_pos[1],check_pos[2]);
		if(IsPlayerInRangeOfPoint(playerid,4,check_pos[0],check_pos[1],check_pos[2])) {
			SetVehicleDoorStatus(check_car, playerid);
			return true;
		}
	}
	if(GetPlayerVehicles(playerid))
	{
		new player_vehicleid = playerVehicleID[playerid];
		GetVehiclePos(PlayerTrailer[player_vehicleid][carVehicle], check_pos[0],check_pos[1],check_pos[2]);
		if(IsPlayerInRangeOfPoint(playerid,4,check_pos[0],check_pos[1],check_pos[2])) {
			SetVehicleDoorStatus(PlayerTrailer[player_vehicleid][carVehicle], playerid);
			trailer_text(player_vehicleid);
			return true;
		}
	}
	if(TI[playerid][tArendKey] != -1)
	{
		new rc = TI[playerid][tArendKey];
		if(ArendInfo[rc][aPlayerID] != playerid) return true;
		GetVehiclePos(ArendInfo[rc][aID], check_pos[0],check_pos[1],check_pos[2]);
		if(IsPlayerInRangeOfPoint(playerid,4,check_pos[0],check_pos[1],check_pos[2])) {
			SetVehicleDoorStatus(ArendInfo[rc][aID], playerid);
			return true;
		}
	}
	if(PI[playerid][pFamily])
	{
		new fam = PI[playerid][pFamily]-1;
		for(new i = 0; i < 5; i++)
		{
			if(CarFamily[fam][i][LoadCar] == INVALID_VEHICLE_ID) continue;
			GetVehiclePos(CarFamily[fam][i][LoadCar], check_pos[0], check_pos[1], check_pos[2]);
			if(IsPlayerInRangeOfPoint(playerid,4.5,check_pos[0],check_pos[1],check_pos[2]))
			{
				SetVehicleDoorStatus(CarFamily[fam][i][LoadCar], playerid);
				return true;
			}
		}
	}
	if(PI[playerid][pMember] > 0)
	{
		new car = GetNearestVehicle(playerid);
		if(VehicleInfo[car][vTeam] == PI[playerid][pMember])
		{
			GetVehiclePos(car, check_pos[0], check_pos[1], check_pos[2]);
			if(IsPlayerInRangeOfPoint(playerid,4.5,check_pos[0],check_pos[1],check_pos[2])) {
				SetVehicleDoorStatus(car, playerid);
				return true;
			}
		}
	}
	new id = GetNearestCar(playerid);
	if(id == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от своего т/с");
	SetVehicleDoorStatus(house_car[playerid][id], playerid);
	return true;
}
CMD:l(playerid, const params[]) {
	if(!IsPlayerInAnyVehicle(playerid)) return false;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return false;
	new carid = GetPlayerVehicleID(playerid);
	if(IsAVelik(carid) || IsAPlane(carid) || IsABoat(carid)) return false;
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(!lights) lights_status(carid, 1, playerid);
	else lights_status(carid, 0, playerid);
	return true;
}
CMD:unrent(playerid) {
	if(TI[playerid][tArendaCar] != -1) 
	{
		if(GetPVarInt(playerid,"bus_id")) SetVehicleToRespawn(GetPVarInt(playerid,"bus_id")), DeletePVar(playerid,"bus_id");
		else if(GetPVarInt(playerid,"mehjob")) SetVehicleToRespawn(GetPVarInt(playerid,"mehjob")), DeletePVar(playerid,"mehjob");
		else if(GetPVarInt(playerid,"prod_vehicle_id")) SetVehicleToRespawn(GetPVarInt(playerid,"prod_vehicle_id")), DeletePVar(playerid,"prod_vehicle_id");
		else if(GetPVarInt(playerid,"eatjob")) SetVehicleToRespawn(GetPVarInt(playerid,"eatjob")), DeletePVar(playerid,"eatjob");
		else if(GetPVarInt(playerid,"clear_id")) SetVehicleToRespawn(GetPVarInt(playerid,"clear_id")), DeletePVar(playerid,"clear_id");
		else if(GetPVarInt(playerid,"veh_id_cleaner")) SetVehicleToRespawn(GetPVarInt(playerid,"veh_id_cleaner")), DeletePVar(playerid,"veh_id_cleaner");
		else if(GetPVarInt(playerid,"inc_start")) SetVehicleToRespawn(GetPVarInt(playerid,"veh_id_inc")), DeletePVar(playerid,"veh_id_inc");
		else if(GetPVarInt(playerid,"clear_id")) EndClear(playerid); 
		else if(GetPVarInt(playerid,"veh_id_taxi")) EndTaxi(playerid);
		TI[playerid][tArendaCar] = -1;
		SendOk(playerid, "Вы отказались от аренды рабочего транспорта");
		return true;
	}
	if(GetPVarInt(playerid,"burger_vehid") != 0)
	{
		A_DestroyVehicle(GetPVarInt(playerid,"burger_vehid"));
		DeletePVar(playerid,"burger_vehid");
		SendOk(playerid, "Вы отказались от аренды скутера");
		return true;
	}
	if(TI[playerid][tMoped] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(TI[playerid][tMoped]);
		TI[playerid][tMoped] = INVALID_VEHICLE_ID;
		SendOk(playerid, "Вы отказались от аренды мопеда");
		return true;
	}
	if(TI[playerid][tBoat] != INVALID_VEHICLE_ID)
	{
		A_DestroyVehicle(TI[playerid][tBoat]);
		TI[playerid][tBoat] = INVALID_VEHICLE_ID;
		SendOk(playerid, "Вы отказались от аренды лодки");
		return true;
	}
	if(TI[playerid][tArendKey] == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не арендуете транспорт");
	new rc = TI[playerid][tArendKey];
	if(ArendInfo[rc][aPlayerID] != playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не арендуете транспорт");
	TI[playerid][tArendKey] = -1;
	SendOk(playerid, "Вы отказались от аренды транспорта");
	ArendInfo[rc][aPlayerID] = INVALID_PLAYER_ID;
	SetVehicleToRespawn(ArendInfo[rc][aID]);
	return true;
}

CMD:prods(playerid)
{
	if (GetPVarInt(playerid, "prod_vehicle_id") == GetPlayerVehicleID(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		D(playerid, dProdList, DSL, ""P"Продукты", ""P"1."W" Список бизнесов\n"P"2."W" Купить продукты", "Выбрать", "Отмена");
		return 1;
	}
	else SendClientMessage(playerid,COLOR_GREY, "Вы не в машине для развозки продуктов/топлива");
	return 1;
}

CMD:namestore(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new inection[30];
	if(sscanf(params, "s[30]", params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /namestore [имя]");
	mysql_escape_string(params[0], inection, 128);
	new query[110];
	mysql_format(connects, query, sizeof(query), "SELECT `pID` FROM `accounts` WHERE `Name` = '%e' LIMIT 1",inection);
	mysql_tquery(connects, query, "namestore_callback", "i", playerid);
	return 1;
}
CB: top_talon(playerid) {
	new rows, player[24], talon, count, string[500];
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "TOP членов семьи отсутствует");
	strcat(string,""W"Имя игрока\t"W"Талонов\n");
	if(rows)
	{
		for(new i; i < rows; i ++)
		{
			cache_get_value_name(i, "Name", player, 24);
			cache_get_value_name_int(i, "talon_fam", talon);
			format(string, sizeof(string), "%s%i. %s\t%i\n",string,i+1, player, talon);
			count++;
		}
		D(playerid, DIALOG_NONE, DSTH, ""P"Рейтинг членов семьи", string, "Закрыть", "");
	}
	if(!count) SendClientMessage(playerid, COLOR_GREY, "TOP членов семьи отсутствует");
	return true;
}

CB: family_offline(playerid) {
	new rows, string[1500], family, online_s[36], player[24], Cache:result, count = 0, rang;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Список членов семьи оффлайн пуст");
	strcat(string,""W"Имя игрока\t"W"Ранг\t"W"Был в сети\nСледующая страница\nПредыдущая страница\n");
	if(rows) {
		for(new i; i < rows; i ++)
		{
			cache_get_value_name(i, "Name", player, 24);
			cache_get_value_name_int(i, "family", family);
			cache_get_value_name_int(i, "pFamRank", rang);
			cache_get_value_name(i, "pOnline", online_s, 36);
			format(string, sizeof(string), "%s"ORANGE"%i."W" %s\t%s\t%s\n", string, i+PageFirst[playerid][0]+1,player, GetFamName(PI[playerid][pFamily]-1, rang), online_s);
			count++;
		} 
		D(playerid, D_FAMILY_OFFLINE, DSTH, ""P"Оффлайн члены семьи", string, "Далее", "Закрыть");
	}
	if(count == 0) SendClientMessage(playerid, COLOR_GREY, "Список Offline семьи закончился");
	cache_delete(result);
	return true;
}

CB: bl_callback_4(playerid) {
	new rows, string[1500], count, name[24], reason[50],
Cache:result, date_[30];
	cache_get_row_count(rows);
	strcat(string,""W"Имя игрока\t"W"Причина\t"W"Дата\nСледующая страница\nПредыдущая страница\n");
	if(rows) {
		for(new i; i < rows; i ++)
		{
			count++;
			cache_get_value_name(i, "bl_name", name, 24);
			cache_get_value_name(i, "bl_reason", reason, 50);
			cache_get_value_name(i, "bl_date", date_, 30);
			format(string, sizeof(string), "%s"ORANGE"%i."W" %s\t%s\t%s\n", string, i+PageFirst[playerid][0]+1, name, reason, date_);
		}
		D(playerid, D_FAMILY_BL_1, DSTH, ""P"Черный список семьи", string, "Далее", "Закрыть");
	}
	if(count == 0) SendClientMessage(playerid, COLOR_GREY, "Список ЧС закончился");
	cache_delete(result);
	return true;
}

CB: bl_callback_2(playerid) {
	new rows, string[1500], count, name[24], reason[50],
Cache:result, date_[30];
	cache_get_row_count(rows);
	strcat(string,""W"Имя игрока\t"W"Причина\t"W"Дата\nСледующая страница\nПредыдущая страница\n");
	if(rows) {
		for(new i; i < rows; i ++)
		{
			count++;
			cache_get_value_name(i, "bl_name", name, 24);
			cache_get_value_name(i, "bl_reason", reason, 50);
			cache_get_value_name(i, "bl_date", date_, 30);
			format(string, sizeof(string), "%s"ORANGE"%i."W" %s\t%s\t%s\n", string, i+PageFirst[playerid][0]+1, name, reason, date_);
		} 
		D(playerid, D_BL_1, DSTH, ""P"Черный список организации", string, "Далее", "Закрыть");
	}
	if(count == 0) SendClientMessage(playerid, COLOR_GREY, "Список ЧС закончился");
	cache_delete(result);
	return true;
}

CB: bl_callback_3(playerid, names[]) {
	new rows, sql_string[128];
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в черном списке семьи");

	mysql_format(connects, sql_string, sizeof(sql_string),"DELETE FROM `family_blacklist` WHERE `bl_name` = '%s'",names);
	mysql_tquery(connects, sql_string,"","");

	SendOk(playerid,"Вы вычеркнули игрока с ЧС");
	return true;
}

CB: bl_callback_1(playerid, names[]) {
	new rows, sql_string[128];
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в черном списке организации");
	
	mysql_format(connects, sql_string, sizeof(sql_string),"DELETE FROM `fractions_blacklist` WHERE `bl_name` = '%s'",names);
	mysql_tquery(connects, sql_string,"","");
	
	SendOk(playerid,"Вы вычеркнули игрока с ЧС");
	return true;
}

CB: bl_callback_family(playerid, targetid)
{
	new rows, sql_string[200];
	cache_get_row_count(rows);
	new fam = PI[playerid][pFamily] - 1;
	if(rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже состоит в черном списке семьи");

	mysql_format(connects, sql_string, sizeof(sql_string),"INSERT INTO `family_blacklist` (`bl_id`,`bl_family`,`bl_name`,`bl_reason`) VALUES ('%d','%d','%s','%s')",PI[targetid][pID], PI[playerid][pFamily], player_name[targetid], bl_reason[playerid]);
	mysql_tquery(connects, sql_string);

	format(sql_string, sizeof(sql_string), "[ЧС] %s внёс Вас в чёрный список семьи %s. Причина: %s", player_name[playerid], gFamily[PI[playerid][pFamily]-1][famName], bl_reason[playerid]);
	SendClientMessage(targetid, COLOR_LIGHTRED, sql_string) ;
	
	PI[targetid][pFamily] = 0;
	UpdatePlayerData(targetid,"family",0);
	PI[targetid][pFamRank] = 0;
	UpdatePlayerData(targetid,"pFamRank",0);
	
	format(sql_string, sizeof(sql_string), "[ЧС] %s внёс %s в чёрный список %s. Причина: %s",  player_name[playerid], player_name[targetid], gFamily[PI[playerid][pFamily]-1][famName], bl_reason[playerid]);
	FamMSG(fam+1,sql_string);
	return true;
}

CB: bl_callback(playerid, targetid)
{
	new rows, sql_string[200];
	cache_get_row_count(rows);
	if(rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже состоит в черном списке организации");
	
	mysql_format(connects, sql_string, sizeof(sql_string),"INSERT INTO `fractions_blacklist` (`bl_id`,`bl_fraction`,`bl_name`,`bl_reason`) VALUES ('%d','%d','%s','%s')",PI[targetid][pID], PI[playerid][pMember], player_name[targetid], bl_reason[playerid]);
	mysql_tquery(connects, sql_string);
	
	format(sql_string, sizeof(sql_string), "[ЧС] %s внёс Вас в чёрный список %s. Причина: %s", player_name[playerid], FI[PI[playerid][pMember]][fName], bl_reason[playerid]);
	SendClientMessage(targetid, COLOR_LIGHTRED, sql_string) ;

	format(sql_string, sizeof(sql_string), "[ЧС] %s внёс %s в чёрный список %s. Причина: %s",  player_name[playerid], player_name[targetid], FI[PI[playerid][pMember]][fName], bl_reason[playerid]);
	SendFamilyMessage(PI[playerid][pMember], COLOR_LIGHTRED, sql_string);

	add_jobinfo(targetid,"увольнение + чс");
	PI[targetid][pAdvert] = 0;
	UpdatePlayerData(targetid,"Advert", 0);

	PI[targetid][pMember] = 0;
	PI[targetid][pRank] = 0;
	PI[targetid][pFracSkin] = 0;
	PI[targetid][pLeader] = 0;
	PI[targetid][pMedHeal] = 0;

	UpdatePlayerData(targetid,"MedHeal",0);
	SetPlayerColor(targetid, TEAM_HIT_COLOR);
	if(PI[targetid][pHouse] > 0) PI[targetid][pSpawn] = 1;
	else PI[targetid][pSpawn] = 0;
	UpdatePlayerData(targetid,"pModel",PI[targetid][pFracSkin]);
	UpdatePlayerData(targetid,"pMember",PI[targetid][pMember]);
	UpdatePlayerData(targetid,"pLeader",PI[targetid][pLeader]);
	UpdatePlayerData(targetid,"spawn",PI[targetid][pSpawn]);
	UpdatePlayerData(targetid,"pRank",PI[targetid][pRank]);
	skin_player(targetid);
	WriteLog(LOG_UVAL,player_name[playerid],player_name[targetid],"увольнение + чс");
	return true;
}

CB: namestore_callback(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не зарегистрирован на сервере");
	new db_increment;
	cache_get_value_int(0,"pID",db_increment);
	new query[110];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `nickname_history` WHERE `nh_owner` = '%d'", db_increment);
	mysql_tquery(connects, query, "_namestore_callback", "i", playerid);
	return 1 ;
}

CB: _namestore_callback(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "История смены ника данного игрока пуста");
	
	new string[1024];
	strcat(string, ""P"№ Старый ник\t"P"Новый ник\t"P"Дата изменения\n"W"");
	for(new j = 0; j < rows; j ++) {
		new oldname[MAX_PLAYER_NAME],
		newname[MAX_PLAYER_NAME],
		dates[20],
		str[68];
		
		cache_get_value(j,"nh_oldname",oldname, MAX_PLAYER_NAME);
		cache_get_value(j,"nh_newname",newname, MAX_PLAYER_NAME);
		cache_get_value(j,"nh_date",dates, 20);

		format(str, sizeof(str), "%d. %s\t%s\t%s\n",j+1, oldname, newname, dates);
		strcat(string, str);
	}	
	D(playerid, DIALOG_NONE, DSTH, ""P"История смены ника", string, "Закрыть", "");		
	return 1 ;
}

CMD:donate(playerid) {
	new head[100];
	format(head,sizeof(head),""P"Донат. Ваш баланс: %d руб",PI[playerid][pRouble]);
	D(playerid, D_DONATE, DSTH, head, ""W"Описание\t"W"Стоимость\nИгровая валюта\t(1 руб = 2000$)\nСмена игрового ника\t20 руб\nПремиум-аккаунт [на 2 недели]\t200 руб\nПремиум-аккаунт [на 4 недели]\t350 руб\nПремиум-аккаунт [на 3 месяца]\t700 руб\nАнулировать варн\t50 руб\nЭлитный номер телефона\t250 руб\nПовысить навыки боевых искусств\t200 руб\nПовысить навыки владения оружием\t300 руб\n{F2BB68}Игровые комплекты\nУникальный скин\t250 руб\nКомплект лицензий\t70 руб\n{F2BB68}Уникальные аксессуары\n"W"Кейсы\tОт 30 руб\n{556B2F}Рулетка "P"[NEW]\t"W"150 руб\n{A4D745}Обновить баланс", "Выбрать", "Закрыть");
	return 1;
}

CMD:label(playerid) {
	if(GetPVarInt(playerid,"hrieltor")) {
		new houseid = GetPVarInt(playerid,"hrieltor")-1;
		EnableGPSForPlayer(playerid,gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]);
		SendUse(playerid,"Вы установили метку на Вашей карте");
		SendUse(playerid,"Для отключения метки введите: "W"/gps");
	}
	else if(GetPVarInt(playerid,"bizzrielor")) {
		new bizzid = GetPVarInt(playerid,"bizzrielor")-1;
		EnableGPSForPlayer(playerid,gBusiness[bizzid][bizzX], gBusiness[bizzid][bizzY], gBusiness[bizzid][bizzZ]);
		SendUse(playerid,"Вы установили метку на Вашей карте");
		SendUse(playerid,"Для отключения метки введите: "W"/gps");
	}
	return 1;
}
CMD:gps(playerid){
	if(GetPlayerInterior(playerid) > 0) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в помещении");
	if(GetPVarInt(playerid,"route")) return SendClientMessage(playerid, COLOR_GREY, "Сначала закончите работу водителя автобуса");
	if(GetPVarInt(playerid,"WaitExam")) return SendClientMessage(playerid, COLOR_GREY, "Невозможно во время сдачи экзамена");
	if(GetPVarInt(playerid,"check_job_cleaner")) return SendClientMessage(playerid, COLOR_GREY, "Невозможно во время работы мойщика дорог");
	if(GetPVarInt(playerid,"RaceCP")) return SendClientMessage(playerid, COLOR_GREY, "Невозможно использовать в данный момент");
	if(gpss[playerid]) DisablePlayerRaceCheckpoint(playerid),gpss[playerid] = 0;
	static const f_str[] = ""CS"1."W" Общественные места\n\
							"CS"2."W" Работы\n\
							"CS"3."W" Аренда транспортного средства\n\
							"CS"4."W" Организации\n\
							"CS"5."W" Автосалоны и тюнинги\n\
							"CS"6."W" Бизнесы\n\
							"CS"7."W" Многоквартиные дома\n\
							"CS"8."W" Центральный рынок\n\
							"CS"9."W" Семейный центр\n\
							"CS"10."W" Развлечения\n\
							"CS"11."W" АЗС\n\
							"CS"12."W" Разное";
	
	new string[sizeof(f_str)];
	format(string,sizeof(string),"%s",f_str);
	D(playerid, D_GPS, DSL, ""CS"GPS", string, "Выбрать", "Отмена");
	return 1;
}
CMD:gps2(playerid) {
	if(GetPlayerInterior(playerid) > 0) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в помещении");
	if(GetPVarInt(playerid,"route")) return SendClientMessage(playerid, COLOR_GREY, "Сначала закончите работу водителя автобуса");
	if(GetPVarInt(playerid,"WaitExam")) return SendClientMessage(playerid, COLOR_GREY, "Невозможно во время сдачи экзамена");
	if(GetPVarInt(playerid,"check_job_cleaner")) return SendClientMessage(playerid, COLOR_GREY, "Невозможно во время работы мойщика дорог");
	if(GetPVarInt(playerid,"RaceCP")) return SendClientMessage(playerid, COLOR_GREY, "Невозможно использовать в данный момент");
	if(gpss[playerid]) DisablePlayerRaceCheckpoint(playerid),gpss[playerid] = 0;
	static const f_str[] = ""P"-"W" Найти ближайшую заправку\n\
							"P"-"W" Найти ближайшую закусочную\n\
							"P"-"W" Найти ближайший 24-7\n\
							"P"-"W" Найти ближайший банкомат\n\
							"P"1."W" Общественные места\n\
							"P"2."W" Работы\n\
							"P"3."W" Автосалоны и тюнинги\n\
							"P"4."W" Организации\n\
							"P"5."W" Бизнесы\n\
							"P"6."W" АЗС\n\
							"P"13."W" Разное";
	new string[sizeof(f_str)];
	format(string,sizeof(string),"%s",f_str);
	D(playerid, D_GPS, DSL, ""P"GPS", string, "Выбрать", "Отмена");
	return 1;
}
alias:menu("mm","mn"); 
CMD:menu(playerid,const params[]) return D(playerid, D_MENU, DSL, ""P"Меню игрока",""P"1."W" Статистика персонажа\n"P"2."W" Команды сервера\n"P"3."W" Навыки персонажа\n"P"4."ORANGE" Связь с администрацией\n"P"5."W" Инвентарь\n"P"6."G" Настройки\n"P"7."W" Сменить игровой ник\n"P"8."W" Безопасность\n"P"9."W" Промокод\n"P"10."W" Мои задания\n"P"11."W" Кейсы\n"P"12."W" Донат услуги", "Выбрать", "Отмена");
CMD:bload(playerid) {
	new vehicleid = GetPlayerVehicleID(playerid);
	if(GetPVarInt(playerid,"inc_start") == 0) return true;
	if(vehicleid != GetPVarInt(playerid,"veh_id_inc")) return SendClientMessage(playerid, COLOR_GREY, "Вы не в арендованном автомобиле");
	if(VG[vehicleid][vgLoading] || VG[vehicleid][vgUnloading]) return SendClientMessage(playerid, COLOR_GREY, "Авто уже стоит на загрузке / разгрузке");
	VG[vehicleid][vgID] = vehicleid;
	VG[vehicleid][vgLoading] = true;

	RemovePlayerFromVehicleAC(playerid);
	new Float:x, Float:y, Float:z, Float:a;
	GetVehiclePos(vehicleid,x,y,z);
	GetVehicleZAngle(vehicleid,a);
	x = x - (-3.5*floatsin(a,degrees));
	y = y - 6.0*floatcos(a,degrees);

	VG[vehicleid][vgPickup] = CreateDynamicPickup(1318,1,x,y,z-0.5);
	VG[vehicleid][vgArea] = CreateDynamicSphere(x,y,z,1.0);

	VG[vehicleid][vgAtm] = 1;

	new string[45];
	format(string,sizeof(string),"Загружено: %i/20 мешков",VG[vehicleid][vgAmount][0]);
	VG[vehicleid][vgText] = CreateDynamic3DTextLabel(string,COLOR_WHITE,x,y,z+0.5,20.0);
	return true;
}
CMD:bunload(playerid) {
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!GetPVarInt(playerid,"inc_start")) return true;
	if(vehicleid != GetPVarInt(playerid,"veh_id_inc")) return SendClientMessage(playerid, COLOR_GREY, "Вы не в арендованном автомобиле");
	if(VG[vehicleid][vgLoading] || VG[vehicleid][vgUnloading]) return SendClientMessage(playerid, COLOR_GREY, "Авто уже стоит на загрузке / разгрузке");
	VG[vehicleid][vgID] = vehicleid;
	VG[vehicleid][vgLoading] = true;

	RemovePlayerFromVehicleAC(playerid);
	new Float:x, Float:y, Float:z, Float:a;
	GetVehiclePos(vehicleid,x,y,z);
	GetVehicleZAngle(vehicleid,a);
	x = x - (-3.5*floatsin(a,degrees));
	y = y - 6.0*floatcos(a,degrees);

	VG[vehicleid][vgPickup] = CreateDynamicPickup(1318,1,x,y,z-0.5);
	VG[vehicleid][vgArea] = CreateDynamicSphere(x,y,z,1.0);

	VG[vehicleid][vgAtm] = 2;

	new string[45];
	format(string,sizeof(string),"Загружено: %i/20 мешков",VG[vehicleid][vgAmount][0]);
	VG[vehicleid][vgText] = CreateDynamic3DTextLabel(string,COLOR_WHITE,x,y,z+0.5,20.0);
	return true;
}
alias:report("rep");
CMD:report(playerid,params[]) {
	if(GetPVarInt(playerid,"report_ac")) return SendClientMessage(playerid, COLOR_GREY, "Вы уже подавали жалобу, ожидайте ответа");
	if(GetPVarInt(playerid,"report") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Жалобу/вопрос можно писать только раз в 30 секунд.");
	D(playerid,D_REPORT,DSI, ""P"Связь с администрацией", ""W"Вы собираетесь отправить запрос агентам поддержки\n\nПожалуйста, четко и грамотно сформулируйте свой вопрос", "Отправить", "Закрыть");
	return 1;
}
CMD:play(playerid) return D(playerid, D_RADIO, DSL, ""P"Онлайн радио", ""P"1."W" Дорожное Радио\n\
	"P"2."W" Европа плюс\n\
	"P"3."W" Радио Забава\n\
	"P"4."W" Шансон Рекорд\n\
	"P"5."W" Маруся FM\n\
	"P"6."W" Премиум Рекорд\n\
	"P"7."W" Своя Музыка\n\
	"P"8."W" Выключить", "Принять", "Отмена");
CMD:eject(playerid, params[]) {
	if(!IsPlayerInAnyVehicle(playerid)) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы не за рулем");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /eject [id]");
	new test = GetPlayerVehicleID(playerid);
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if(!IsPlayerInVehicle(params[0],test)) return true;
	new string[128];
	format(string, sizeof(string), "Вы выкинули из машины - %s",player_name[params[0]]);
	SendOk(playerid, string);
	format(string, sizeof(string), "Вас выкинул из машины - %s",player_name[playerid]);
	SendOk(params[0], string);
	RemovePlayerFromVehicleAC(params[0]);
	return true;
}
CMD:dcarm(playerid, params[]) {
	if(!IsAMafia(playerid)) return true;
	if(gBusiness[56][bizzMafia] != PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Ваша мафия не занимается поставками наркотиков");
	if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return SendClientMessage(playerid, COLOR_GREY, "Вы не в фургоне для развозки наркотиков");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] == fLCN || VehicleInfo[veh][vTeam] == fYAKUZA || VehicleInfo[veh][vTeam] == fRM) D(playerid, D_MAFIA_CARM, DSL, ""P"Развозка наркотиков",""P"1."W" Начать загрузку наркотиков\n"P"2."W" Разгрузится в наркопритон\n"P"3."W" Загрузится в наркопритоне\n"P"4."W" Разгрузить на склад Ballas\n"P"5."W" Разгрузить на склад Vagos\n"P"6."W" Разгрузить на склад Grove\n"P"7."W" Разгрузить на склад Aztec\n"P"8."W" Разгрузить на склад Rifa\n"P"9."W" Список заказов", "Выбрать", "Отмена");
	return true;
}
CMD:fhelp(playerid, params[]) {
	if(!IsAArm(playerid)) return true;
	if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Ваш ранг недостаточен");
	new string[128];
	if(IsPlayerInRangeOfPoint(playerid,7,2800.3972,-2481.9619,13.6349) && PI[playerid][pMember] == fARMYLS) {
		if(army_chs[0] == false) {
			format(string, sizeof(string), "Внимание! %s %s[%d] объявил(а) о Чрезвычайной Ситуации в Нац. Гвардии!",GetRankName(PI[playerid][pMember],PI[playerid][pRank]), player_name[playerid],playerid);
			SendDepMessage(COLOR_ALLDEPT, string);
			SendDepMessage(COLOR_ALLDEPT, "Просим поддержки всех силовых структур!");
			GangZoneFlashForAll(SFa,COLOR_RED);
			UpdateDynamic3DTextLabelText(army_text,-1,""NO"Объявлена Чрезвычайная Ситуация"W"\nДля отключения, введите: "P"/fhelp");
			army_chs[0] = true;
		}
		else {
			format(string, sizeof(string), "Внимание! %s %s[%d] объявил(а) об устранении Чрезвычайной Ситуации в Нац. Гвардии",GetRankName(PI[playerid][pMember],PI[playerid][pRank]), player_name[playerid],playerid);
			SendDepMessage(COLOR_ALLDEPT, string);
			GangZoneStopFlashForAll(SFa);
			UpdateDynamic3DTextLabelText(army_text,-1,"Для объявления чрезвычайной ситуации, введите:\n"P"/fhelp");
			army_chs[0] = false;
		}
	}
	return true;
}
CMD:carm(playerid, params[]) {
	if(!IsAArm(playerid)) return true;
	new veh = GetPlayerVehicleID(playerid);
	switch(GetVehicleModel(veh)) {
	case 433: if(VehicleInfo[veh][vTeam] == fARMYLS) D(playerid, D_ARMY_CARM, DSL, ""P"Развозка боеприпасов",""P"1."W" Загрузиться на оружейном заводе\n"P"2."W" Разгрузить на склад Полиции ЛС\n"P"3."W" Разгрузить на склад ФБР\n"P"4."W" Разгрузить на склад Нац. Гвардии\n"P"5."W" Разгрузить в RCSD\n"P"6."W" Состояние складов\n"P"7."W" Загрузить боеприпасы", "Выбрать", "Отмена");
	}
	return true;
}
CMD:load(playerid) {
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		new vehicleid = GetPlayerVehicleID(playerid);
		if(!IsAArm(playerid) && !IsAGang(playerid) && !IsAMafia(playerid) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 191) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 287)) return 1;
		switch(GetVehicleModel(vehicleid)) {
		case 433,482,573, 428: {
				if(VG[vehicleid][vgLoading] || VG[vehicleid][vgUnloading]) return SendClientMessage(playerid, COLOR_GREY, "Авто уже стоит на загрузке / разгрузке");
				if((IsAGang(playerid) && GetPlayerSkin(playerid) == 191 && GetVehicleModel(vehicleid) == 433) || (IsAGang(playerid) && GetPlayerSkin(playerid) == 287 && GetVehicleModel(vehicleid) == 433)) {
					switch(VehicleInfo[vehicleid][vTeam]) {
					case fARMYLS: SetPlayerCheckpoint(playerid, -1325.2426,407.5635,7.0743,5.0),SetPVarInt(playerid,"MatsArmyCar",11);
					}
					return 1;
				}
				VG[vehicleid][vgID] = vehicleid;
				VG[vehicleid][vgLoading] = true;

				RemovePlayerFromVehicleAC(playerid);
				new Float:x, Float:y, Float:z, Float:a;
				GetVehiclePos(vehicleid,x,y,z);
				GetVehicleZAngle(vehicleid,a);
				x = x - (-6.0*floatsin(a,degrees));
				y = y - 6.0*floatcos(a,degrees); 

				VG[vehicleid][vgPickup] = CreateDynamicPickup(2358,1,x,y,z-0.5);
				VG[vehicleid][vgArea] = CreateDynamicSphere(x,y,z,1.0);

				new string[64];
				switch(GetVehicleModel(vehicleid)) {
				case 428: format(string,sizeof(string),"Загружено: %i/10 мешков",VG[vehicleid][vgAmount][0]);
				case 433: format(string,sizeof(string),"Ящиков: "O"%i/70",VG[vehicleid][vgAmount][0]);
				case 482: format(string,sizeof(string),"Ящиков: "O"%i/15",VG[vehicleid][vgAmount][0]);
				case 573: format(string,sizeof(string),"Ящиков: "O"%i/200",VG[vehicleid][vgAmount][0]);
				}
				VG[vehicleid][vgText] = CreateDynamic3DTextLabel(string,COLOR_WHITE,x,y,z+0.5,20.0);
			}
		default: return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем т.с. для перевозки оружия");
		}
	}
	return 1;
}
CMD:unloadmat(playerid)
{
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	if(GetPlayerVehicleID(playerid) != VehicleWareHouse[0]) return 1;
	if(!IsAMafiaAndGang(playerid)) return 1;
	if(CountMaterialVehicleWH > 0){
	    new CountMaterial = CountMaterialVehicleWH * 500;
		switch(PI[playerid][pMember])
		{
		case fBALLAS:{
				if(!IsPlayerInRangeOfPoint(playerid, 50, 2656.3931,-2023.8264,13.5583)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от The Ballas");
			}
		case fVAGOS: {
				if(!IsPlayerInRangeOfPoint(playerid, 50, 2745.2463,-1178.5746,69.4022)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от The Vagos");
			}
		case fGROVE: {
				if(!IsPlayerInRangeOfPoint(playerid, 50, 2492.5398,-1673.5878,13.3359)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от The Grove");
			}
		case fAZTEC: {
				if(!IsPlayerInRangeOfPoint(playerid, 50, 1689.2028,-2112.7527,13.4776)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от The Aztec");
			}
		case fRIFA: {
				if(!IsPlayerInRangeOfPoint(playerid, 50, 2187.5928,-1805.4399,13.3710)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от The Rifa");
			}
		case fARMYLS: {
				if(!IsPlayerInRangeOfPoint(playerid, 100, 2752.4421,-2471.4094,13.6484)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от склада Нац. Гвардии");
			}
		case fLCN: {
				if(!IsPlayerInRangeOfPoint(playerid, 50, 673.9420,-451.9697,16.2080)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от Итальянской Мафии");
			}
		case fYAKUZA: {
				if(!IsPlayerInRangeOfPoint(playerid, 100, 713.9637,-1282.1886,13.6430)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от Японской Мафии");
			}
		case fRM: {
				if(!IsPlayerInRangeOfPoint(playerid, 100, 1389.5990,403.9182,25.4422)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от Русской Мафии");
			}
		}
		FI[PI[playerid][pMember]][fMats] += CountMaterial;
		UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);
		SendClientMessage(playerid, COLOR_GREY, "Вы успешно разгрузили машину с материалами.");
		new string[144];
		format(string,sizeof(string),"Материалы успешно рагружены. Материалов на складе: "W"%d",FI[PI[playerid][pMember]][fMats]);
  		SendClientMessage(playerid, COLOR_GREY, string);
		CountMaterialVehicleWH = 0;
		SetVehicleToRespawn(VehicleWareHouse[0]);
		MoveDynamicObject(gateopen[1], 74.5659, -222.0172, 3.0080, 3.0);
		gAteStatus = false;
		Accepts = false;
		TimerRobWeaponBool = false;
		TimerEndWeaponBool = false;
	}
	
	return 1;
}
CMD:unload(playerid, params[]) {
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		new vehicleid = GetPlayerVehicleID(playerid);
		if(!IsAArm(playerid) && !IsAGang(playerid) && !IsAMafia(playerid) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 191) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 287)) return 1;
		//if(IsAArm(playerid)) if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
		switch(GetVehicleModel(vehicleid)) {
		case 433,482: {
				if(VG[vehicleid][vgLoading] || VG[vehicleid][vgUnloading]) return SendClientMessage(playerid, COLOR_GREY, "Авто уже стоит на загрузке / разгрузке");
				VG[vehicleid][vgID] = vehicleid;
				VG[vehicleid][vgUnloading] = true;
				RemovePlayerFromVehicleAC(playerid);
				new Float:x, Float:y, Float:z, Float:a;
				GetVehiclePos(vehicleid,x,y,z);
				GetVehicleZAngle(vehicleid,a);
				x = x - (-6.0*floatsin(a,degrees));
				y = y - 6.0*floatcos(a,degrees);
				VG[vehicleid][vgPickup] = CreateDynamicPickup(2358,1,x,y,z-0.5);
				VG[vehicleid][vgArea] = CreateDynamicSphere(x,y,z,1.0);
				new string[64];
				switch(GetVehicleModel(vehicleid)) {
				case 433: format(string,sizeof(string),"Ящиков: "O"%i/70",VG[vehicleid][vgAmount][0]);
				case 482: format(string,sizeof(string),"Ящиков: "O"%i/15",VG[vehicleid][vgAmount][0]);
				}
				VG[vehicleid][vgText] = CreateDynamic3DTextLabel(string,COLOR_WHITE,x,y,z+0.5,20.0);
			}
		case 573: {
				if(!VG[vehicleid][vgAmount][0]) return SendClientMessage(playerid, COLOR_GREY, "В Т/С недостаточно материалов для разгрузки");
				switch(PI[playerid][pMember]) {
				case fBALLAS: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, 2656.3931,-2023.8264,13.5583)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от The Ballas");
					}
				case fVAGOS: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, 2745.2463,-1178.5746,69.4022)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от The Vagos");
					}
				case fGROVE: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, 2492.5398,-1673.5878,13.3359)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от The Grove");
					}
				case fAZTEC: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, 1689.2028,-2112.7527,13.4776)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от The Aztec");
					}
				case fRIFA: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, 2187.5928,-1805.4399,13.3710)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от The Rifa");
					}
				case fARMYLS: {
						if(!IsPlayerInRangeOfPoint(playerid, 100, 2752.4421,-2471.4094,13.6484)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от склада Нац. Гвардии");
					}
				case fLCN: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, 673.9420,-451.9697,16.2080)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от Итальянской Мафии");
					}
				case fYAKUZA: {
						if(!IsPlayerInRangeOfPoint(playerid, 100, 713.9637,-1282.1886,13.6430)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от Японской Мафии");
					}
				case fRM: {
						if(!IsPlayerInRangeOfPoint(playerid, 100, 1389.5990,403.9182,25.4422)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от Русской Мафии");
					}
				}
				if(!IsAArm(playerid)) {
					new mats = floatround(FI[PI[playerid][pMember]][fMats]/500);//ящиков на складе банды
					new mats_2 = mats+(VG[vehicleid][vgAmount][0]*5000/500);//сколько будет всего ящиков
					if(mats_2 > 600) {
						new mats_3 = 600-mats_2;
						VG[vehicleid][vgAmount][0] = mats_3;
					}
					else {
						FI[PI[playerid][pMember]][fMats] += VG[vehicleid][vgAmount][0]*5000;
						VG[vehicleid][vgAmount][0] = 0;
					}
					if(FI[PI[playerid][pMember]][fMats] > 300000) FI[PI[playerid][pMember]][fMats] = 300000;
					else if(FI[PI[playerid][pMember]][fMats] < 0) FI[PI[playerid][pMember]][fMats] = 300000;
				}
				else {
					new mats = floatround(FI[PI[playerid][pMember]][fMats]/500);
					new mats_2 = mats+(VG[vehicleid][vgAmount][0]*5000/500);
					if(mats_2 > 2000) {
						new mats_3 = 2000-mats_2;
						VG[vehicleid][vgAmount][0] = mats_3;
					}
					else {
						FI[PI[playerid][pMember]][fMats] += VG[vehicleid][vgAmount][0]*5000;
						VG[vehicleid][vgAmount][0] = 0;
					}
					if(FI[PI[playerid][pMember]][fMats] > 1000000) FI[PI[playerid][pMember]][fMats] = 1000000;
					else if(FI[PI[playerid][pMember]][fMats] < 0) FI[PI[playerid][pMember]][fMats] = 1000000;
				}
				UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);
				new string[144];
				format(string,sizeof(string),"Боеприпасы успешно рагружены. Боеприпасов на складе: "W"%d"G". Ящиков в фургоне: "W"%d",FI[PI[playerid][pMember]][fMats],VG[vehicleid][vgAmount][0]);
			}
		default: return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем т.с. для перевозки оружия");
		}
	}
	return 1;
}
stock ProxDetector(Float:radi,playerid, const string[], color) {
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(IsPlayerInRangeOfPoint(i,radi,X,Y,Z) && GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid)) SendClientMessage(i, color, string);
	}
	return true;
}
stock ProxDetectorS(Float:radi, playerid, targetid) {
	if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid)) {
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	}
	return 0;
}

public OnPlayerText(playerid, text[]) {
	if(!TI[playerid][tLogin]) return 0;
	new string[150];
	if(PI[playerid][pMute] > 0) { 
		SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
		SetPlayerChatBubble(playerid, "пытается что-то сказать", COLOR_REDD, 30.0, 10000);
		return 0; 
	}
	if(TI[playerid][tGag]) {
		SendClientMessage(playerid, COLOR_GREY, "У Вас кляп");
		SetPlayerChatBubble(playerid, "пытается что-то сказать", COLOR_REDD, 30.0, 10000);
		return 0;
	}
	if(TI[playerid][tEther]) {
		format(string,sizeof(string),"[%s] %s: %s",FI[PI[playerid][pMember]][fName],player_name[playerid],text);
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			if(PI[i][pSettings][2] != PI[playerid][pMember]) continue;
			SendClientMessage(i,0xFF9900AA,string);
		}
		return 0;		
	}
	if(CountFloodForPlayer[playerid] >= 2) {
		SendClientMessage(playerid, COLOR_GREY, "Пожалуйста, не флудите");
		return 0;
	}
	CountFloodForPlayer[playerid]++;
	if(TI[playerid][tPhoneNews]) {
		for(new i; i<sizeof(calls_ether); i++) {
			if(calls_ether[i] == playerid && calls_news[i]) {
				new mes[128];
				format(mes,sizeof(mes),"[%s] %s [тел.]: %s",FI[PI[calls_news[i]][pMember]][fName],player_name[playerid],text);
				new subid = PI[calls_news[i]][pMember];
				foreach(new r:Player) {
					if(!TI[r][tLogin]) continue;
					if(PI[r][pSettings][2] == subid || r == playerid) SendClientMessage(r, 0xFF9900AA, mes);
				}
				return false;
			}
		}
	}		
	if(TI[playerid][tPhone] == true) {
		new id,mes[128];
		if(TI[playerid][tPhoneCaller] == playerid) id = TI[playerid][tPhoneCalled];
		else if(TI[playerid][tPhoneCalled] == playerid) id = TI[playerid][tPhoneCaller];

		format(mes,sizeof(mes),"[тел] %s: %s",player_name[playerid], text);
		SendClientMessage(playerid, COLOR_YELLOW, mes);

		format(mes,sizeof(mes),"[тел] %s: %s",player_name[playerid], text);
		SendClientMessage(id, COLOR_YELLOW, mes);

		SetPlayerChatBubble(playerid, mes, COLOR_WHITE, 10.0, 10000);
		return false;
	}
	if(GetString(text,")")) {
		MeAction(playerid,"улыбается");
		return false;
	}
	if(GetString(text,"))")) {
		MeAction(playerid,"смеётся");
		return false;
	}
	if(GetString(text,"xD")) {
		MeAction(playerid,"хохочет во весь голос");
		return false;
	}
	if(GetString(text,"(")) {
		if(PI[playerid][pSex] == 1) MeAction(playerid,"расстроился");
		else MeAction(playerid,"расстроилась");
		return false;
	}
	if(GetString(text,"((")) {
		if(PI[playerid][pSex] == 1) MeAction(playerid,"сильно расстроился");
		else MeAction(playerid,"сильно расстроилась");
		return false;
	}
	if(GetString(text,":D")) {
		MeAction(playerid,"хохочет");
		return false;
	}
	if(GetString(text,"O_o")) 	{
		MeAction(playerid,"удивлен(а)");
		return false;
	}
	if(GetString(text,">_<")) {
		if(PI[playerid][pSex] == 1) MeAction(playerid,"сморщился от злости");
		else MeAction(playerid,"сморщилась от злости");
		return false;
	}
	if(GetString(text,";)")) {
		MeAction(playerid,"подмигивает");
		return false;
	}
	if(GetString(text, "q")) {
		if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
		if(PI[playerid][pAdmin] >= 1) {
			MeAction(playerid,"показал(а) распальцовку {33AA33}Admins Team");
			ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0,1);
			return false;
		}
		new member[20];
		switch(PI[playerid][pMember]) {
		case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: {
				format(string,sizeof(string),"показал(а) распальцовку %s",member);
				MeAction(playerid,string);
				ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,1,1);
			}
		case fARMYLS: {
				MeAction(playerid,"выполнил(а) воинское приветствие");
				ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P",4.0,0,0,0,0,1000,1);
			}
		}
		return false;
	}
	if(PI[playerid][pMember] == 0 || start_work[playerid] == 0) {
		format(string,sizeof(string),"{%06x}%s[%d] говорит: %s",GetPlayerColor(playerid) >>> 8,player_name[playerid],playerid,text);
	}
	else if(TI[playerid][tMasked]) {
		format(string,sizeof(string),"{000000}(Незнакомец)[%d] говорит: %s ",playerid, text);
		//NickName(playerid);
	}
	else if(TI[playerid][tMaskTime]) 
	{
		format(string,sizeof(string),"{000000}(Незнакомец)[%d] говорит: %s ",playerid, text);
		//NickName(playerid);
	}
	else {
		format(string,sizeof(string),"{%06x}%s[%d] говорит: %s",GetPlayerColor(playerid) >>> 8,player_name[playerid],playerid,text);
	}
	ProxDetector(20.0,playerid,string,-1);
	if(!TI[playerid][tTazer] && !TI[playerid][tCuffedTime] && GetPVarInt(playerid,"drug_time") < gettime() && GetPVarInt(playerid,"anti_sbiv_time") < unix && !TI[playerid][tTied] && !GetPVarInt(playerid,"Animation")) {
		if(PI[playerid][pSettings][4] == 0) {
			ApplyAnimation(playerid, "PED", Talk[PI[playerid][pSettings][4]], 8.1, 0, 1, 1, 1, 1, 0);
			PlayerChatFix[playerid] = (GetTickCount() + (100 * strlen(text)));
			PlayerChatExFix[playerid] = 1;
		}
		else if(PI[playerid][pSettings][4] != 0) {
			ApplyAnimation(playerid,"GANGS",Talk[PI[playerid][pSettings][4]],4.1,1,1,1,1,1,1);
			PlayerChatFix[playerid] = (GetTickCount() + (100 * strlen(text)));
			PlayerChatExFix[playerid] = 1;
		}
	}
	SetPlayerChatBubble(playerid, text, COLOR_WHITE, 20.0, 10000);
	return false;
}
stock GetColor(playerid) {
	new str[8];
	format(str,8,"%06x",gFractionSpawn[PI[playerid][pMember]][fracColor] >>> 8);
	return str;
}
stock GetColorFrac(id) {
	new str[8];
	format(str,8,"%06x",gFractionSpawn[id][fracColor] >>> 8);
	return str;
}
public OnPlayerUpdate(playerid) {
	if(GetPVarInt(playerid, "zryadka"))
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(VehicleInfo[vehicleid][vAkum] < 100)
		{
			if(GetEngineStat(vehicleid)) 
			{
				DeletePVar(playerid, "tank_vbattery"); 
				DeletePVar(playerid, "zryadka");
				return SendClientMessage(playerid, COLOR_GREY, "Вы прервали зарядку автомобиля, для продолжения /battery");
			}
			else 
			{
				VehicleInfo[vehicleid][vAkum] += 1;
				PI[playerid][pCash] -= 10;
			}
		}
		else 
		{
			DeletePVar(playerid, "tank_vbattery"); 
			DeletePVar(playerid, "zryadka");
			return SendClientMessage(playerid, COLOR_GRAY, "Вы успешно зарядили аккамулятор транспорта!\n\
																Можете отправляться в путь!");
		}
	}
	TI[playerid][tAFK] = 0;
	return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys) {
	if(newkeys == 75) 
	{ 
		D(playerid, D_RADIO, DSL, ""P"Онлайн радио", ""P"1."W" ПОСОСИ\n"P"2."W" АРИСТОКРАТ\n"P"3."W" Cristal Моёт\n"P"4."W" Radio Energy\n"P"5."W" Retro FM\n"P"6."W" Радио Шансон\n"P"7."W" Европа плюс\n"P"8."ORANGE" Своя музыка\n"P"9."W" Выключить", "Принять", "Отмена");
	}
	if(!TI[playerid][tLogin]) return 1;
	new tickcount1 = GetTickCount();
	if(IsPlayerInRangeOfPoint(playerid,12.0, 289.3965,-113.4112,1035.4241)) {
		if (!BJ_PlayerInfo[playerid][pBlackJackTableID] && (newkeys & KEY_SECONDARY_ATTACK && oldkeys != KEY_SECONDARY_ATTACK)) {
			foreach(new blackjack_id: blackjackTables) {
				if (IsPlayerInDynamicArea(playerid, blackjackTableInfo[blackjack_id][blackjackTableAreaID], 1)) {
					blackjack_JoinGame(playerid, blackjack_id);
					break;
				}
			}
		}
	}
	if(newkeys == 4)
	{
		new animname[32];
		GetAnimationName(GetPlayerAnimationIndex(playerid),animname,32,animname,32);
		if((PlayerToPoint(2.0,playerid,768.5205,-2.8860,1000.7214) || PlayerToPoint(2.0,playerid,769.8723,14.4393,1000.6978) || PlayerToPoint(2.0,playerid,768.8607,-2.9548,1000.7222) || PlayerToPoint(2.0,playerid,766.8743,-3.7830,1000.7174))) {
			if((strcmp(animname,"FIGHTB_1",true) == 0 || strcmp(animname,"FIGHTB_2",true) == 0 || strcmp(animname,"FIGHTB_3",true) == 0 || strcmp(animname,"FIGHTA_1",true) == 0
						|| strcmp(animname,"FIGHTC_1",true) == 0 || strcmp(animname,"FIGHTC_2",true) == 0 || strcmp(animname,"FIGHTC_3",true) == 0 || strcmp(animname,"FIGHTA_2",true) == 0
						|| strcmp(animname,"FIGHTD_1",true) == 0 || strcmp(animname,"FIGHTD_2",true) == 0 || strcmp(animname,"FIGHTD_3",true) == 0 || strcmp(animname,"FIGHTA_3",true) == 0)
					&& TI[playerid][tGym]) {
				if(PI[playerid][pBox] == 3) return SendClientMessage(playerid, COLOR_GREY, "Вы изучили все навыки владения боем");
				if(!TI[playerid][tGymSkill]) return SendClientMessage(playerid, COLOR_GREY, "Для начала проиобретите абонемент");
				if(floatround(PI[playerid][pSnow]) < 1000) {
					
					if(TI[playerid][tGyms] <= 0) {
						PI[playerid][pSnow] += 0.2;
						new query[200];
						mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pSnow`= '%f' WHERE `Name` = '%s' LIMIT 1",PI[playerid][pSnow],player_name[playerid]);
						mysql_tquery(connects,query);
					}
					else {
						if(TI[playerid][tGyms] - 0.4 <= 0) TI[playerid][tGyms] = 0;
						PI[playerid][pSnow] += 0.4;
						TI[playerid][tGyms] -= 0.4;
						new query[200];
						mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pSnow`= '%f' WHERE `Name` = '%s' LIMIT 1",PI[playerid][pSnow],player_name[playerid]);
						mysql_tquery(connects,query);
					}
				}
				else if(floatround(PI[playerid][pSnow]) >= 1000) {
					PI[playerid][pBox] ++;
					UpdatePlayerData(playerid,"pBox",PI[playerid][pBox]);
					PI[playerid][pSnow] = 0;
					TI[playerid][tGymSkill] = 0;
					new query[200];
					mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pSnow`= '%f' WHERE `Name` = '%s' LIMIT 1",PI[playerid][pSnow],player_name[playerid]);
					mysql_tquery(connects,query);
					SendOk(playerid,"Вы изучили новый стиль боя. Для переключения введите: /mm > личные настройки > стиль боя");
				}
				new string[33];
				format(string,32,"~g~NEED: ~w~%i",1000-floatround(PI[playerid][pSnow]));
				GameTextForPlayer(playerid,string, 5000, 3);
			}
		}
	}
	if(newkeys == 16) // casino
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 298.346527, -137.589859, 1029.644531))
		{
			D(playerid, D_CAS_LIFT, DSL, ""P"Лифт","Вызвать лифт\nНа второй этаж", "Выбрать", "Закрыть");
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 298.466552, -137.670822, 1035.534423))
		{
			D(playerid, D_CAS_LIFT, DSL, ""P"Лифт","Вызвать лифт\nНа первый этаж", "Выбрать", "Закрыть");
		}
	}
	if(newkeys == 4) {
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		new Float:face_angle;
		GetPlayerFacingAngle(playerid, face_angle);
		for(new i; i<CountGraffity; i++) {
			if(!IsPlayerInRangeOfPoint(playerid, 3.0, GrafInfo[i][gr_x][0],GrafInfo[i][gr_x][1],GrafInfo[i][gr_x][2])) continue;
			if(GetPVarInt(playerid, "SettingGraffiti")) continue;
			if(!IsAGang(playerid)) continue;
			if(PI[playerid][pMember] != GrafInfo[i][gFrak]) {
				if(GetPlayerWeapon(playerid) != 41) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет балончика");
				SetPVarInt(playerid,"Grafity",i);
				StartDrawing(playerid);
			}
		}
	}
	if(TI[playerid][tTazer]) ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1,0);
	if ((oldkeys & KEY_SECONDARY_ATTACK) && !(newkeys & KEY_SECONDARY_ATTACK)) {
		if(SERIU[playerid][sID] != INVALID_PLAYER_ID) {
			SpecPlayer(playerid,SERIU[playerid][sID]);
			TogglePlayerControllable(playerid, 1);
		}
		if(!TI[playerid][tHeal]) {
			for(new i = 0; i < 12; i++) {
				if(PlayerToPoint(1.7,playerid,med_heal[i][0],med_heal[i][1],med_heal[i][2])) {
					new Float: health;
					GetPlayerHealth(playerid,health);
					if(health > 95) return SendClientMessage(playerid, COLOR_GREY, "Вы не нуждаетесь в лечении");
					SetPlayerPosAC(playerid,med_heal[i][0],med_heal[i][1],med_heal[i][2],TI[playerid][tVirtualWorld], TI[playerid][tInterior],false);
					SetPlayerFacingAngle(playerid,med_heal[i][3]);
					ApplyAnimation(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
					TI[playerid][tHeal] = true;
					break;
				}
			}
		}
		else {
			TI[playerid][tHeal] = false;
			ClearAnimations(playerid);
		}
		if(GetPVarInt(playerid,"Animation") == 2) {
			ApplyAnimation(playerid, "CARRY", "null", 1.0, 0, 0, 0, 0, 0, 0);
			PlayerClearAnim[playerid] = 1;
			DeletePVar(playerid,"Animation");
			TextDrawHideForPlayer(playerid, AnimDraw);
		}
	}
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if((newkeys & 4) || ((newkeys & 128) && (oldkeys & 128) && (newkeys & 16)))
		{
			if(!IsACop(playerid) && !IsAArm(playerid) && PI[playerid][pMember] != fWHITEHOUSE && IsAGreenZone(playerid) &&
					GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_DRINK_SPRUNK && GetPlayerWeapon(playerid) != 43 && GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_DRINK_WINE && GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_SMOKE_CIGGY && GetPlayerSpecialAction(playerid)!=SPECIAL_ACTION_DRINK_BEER) {
				anti_dm{playerid} = 7;
				FreezePlayerForTime(playerid,6);
				new str[120];
				format(str,sizeof(str),""W"В этом месте запрещено "ORANGE"драться/стрелять"W"\n\nВы будете разморожены через"ORANGE" %d"W" секунд", anti_dm{playerid});
				D(playerid, DIALOG_NONE, DSM, ""P"Зеленая зона",str, "Закрыть", "");
			}
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
		switch(GetPlayerWeapon(playerid)) {
		case 23..25, 29..31: {
				if(newkeys == 132 || newkeys == 4 || newkeys == 65410 || newkeys == 130) GUARD_TICK_C_BUG[playerid] = GetTickCount();
				if(GetTickCount() - GUARD_TICK_C_BUG[playerid] < 500 && newkeys == 2) {
					if(GetPlayerVirtualWorld(playerid) == 0 && (PlayerToKvadrat(playerid, -1544.892, 270.5747, -1232.015, 558.5571))) {
						SetPlayerArmedWeapon(playerid,0);
						ApplyAnimation(playerid, "PED", "getup_front",4.0,0,0,0,0,0);
					}
				}
			}
		}
	}
	if(PRESSED(262144) || GetPlayerState(playerid) == PLAYER_STATE_DRIVER && PRESSED(KEY_CROUCH)) {
		if(TI[playerid][tProcess][0] != -1) {
			if(GetPVarInt(playerid,"Klavisha") == 2455) MyButtonSystem(playerid);
			else {
				TI[playerid][tProcess][0] += -(3*(10/TI[playerid][tProcess][1]));
				RandomYareNforJOBS(playerid);
			}
			return true;
		}
	}
	if((newkeys & KEY_JUMP) || (newkeys == KEY_FIRE)) {
		if((TI[playerid][tJobGun][0] && TI[playerid][tJobGun][2])) {
			SendClientMessage(playerid, COLOR_GREY, "Вы уронили ящик");
			TI[playerid][tJobGun][2] = 0;
			if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
			ClearAnimations(playerid);
			TI[playerid][tJobGun][1] = 1;
			DisablePlayerRaceCheckpoint(playerid);
		}
		else if(GetPVarInt(playerid,"carrygun")) {
			SendClientMessage(playerid, COLOR_GREY, "Вы уронили ящик");
			DeletePVar(playerid,"carrygun");
			if(GetPVarInt(playerid,"use_mats") == 2) FI[fARMYLS][fMats] += 500,DeletePVar(playerid,"use_mats");
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid,1);
			ClearAnimations(playerid);
		}
		else if((TI[playerid][tJobWood][0] && TI[playerid][tJobWood][1])) {
			SendOk(playerid,"Вы уронили древесину");
			TI[playerid][tJobWood][1] = 0;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid,9);
			ClearAnimations(playerid);
			SetPlayerAttachedObject(playerid,8,341,6);
			TI[playerid][tJobWood][3] = 1;
			TI[playerid][tJobWood][2] = -1;
		}
		else if(GetPVarInt(playerid,"bailer_3") == 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы уронили ящик с яблоками");
			if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid,4);
			DeletePVar(playerid,"bailer_3");
			TI[playerid][tJobSad][2] = 0;
			DisablePlayerRaceCheckpoint(playerid);
			gpss[playerid] = 0;
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK) {
		if(GetPVarInt(playerid,"hrieltor") || GetPVarInt(playerid,"bizzrielor")) {
			TogglePlayerControllable(playerid,1);
			SetPlayerPosAC(playerid,GetPVarFloat(playerid,"rielX"),GetPVarFloat(playerid,"rielY"),GetPVarFloat(playerid,"rielZ"),GetPVarInt(playerid,"rielVW"),true);
			SetCameraBehindPlayer(playerid);
			FreezePlayerForTime(playerid,2);
			DeletePVar(playerid,"rielX");
			DeletePVar(playerid,"rielY");
			DeletePVar(playerid,"rielZ");
			DeletePVar(playerid,"rielVW");
			DeletePVar(playerid,"hrieltor");
			DeletePVar(playerid,"bizzrielor");
		}
	}
	if(newkeys == KEY_CROUCH) {
		new barrierid = IsObjectBarrier(playerid);
		if(barrierid != -1) CheckBarrier(playerid,barrierid);
		else if((IsPlayerInRangeOfPoint(playerid,  20.0, 1050.0936,-1868.7532,894.0478) ||
					IsPlayerInRangeOfPoint(playerid,  20.0, 1123.6130,-1849.0645,894.0478) ||
					IsPlayerInRangeOfPoint(playerid,  20.0, 1053.8595,-1785.5875,894.0478) ||
					IsPlayerInRangeOfPoint(playerid,  20.0, 1108.8413,-1783.3357,894.0478)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			
			new i = TI[playerid][tSelectHouse];
			new Veh = GetPlayerVehicleID(playerid);
			SetVehiclePos(Veh, gHouses[i][houseParkX], gHouses[i][houseParkY], gHouses[i][houseParkZ]);
			SetVehicleZAngle(Veh, gHouses[i][houseParkR]);
			exit_garage(Veh,0);
			switch(i) {
			case 425..434: FreezePlayerForTime(playerid,2);
			}
			SetCameraBehindPlayer(playerid);
			TI[playerid][tInHouse] = false;
			TI[playerid][tSelectHouse] = 0;
		}
		else if(IsPlayerInRangeOfPoint(playerid,4.0,2179.1509,-1661.0247,14.9291)) {
			if(gBusiness[56][bizzMafia] != PI[playerid][pMember]) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482)  return SendClientMessage(playerid, COLOR_GREY, "Вы не в фургоне для развозки наркотиков");
			D(playerid,DIALOG_PRITON_6,DSL, ""P"Склад наркопритона","1. Разгрузить наркотики\n2. Загрузить наркотики","Выбрать","Закрыть");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1078.4210,-352.8502,74.5498)) // ЛЕС
		{
			if(VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != 61 && GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться за рулём тягоча");
			if(TK_Trailer[playerid] == INVALID_VEHICLE_ID || !GetVehicleTrailer(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет груза");
			if(TI[playerid][tTrucker][1] != 5) return SendClientMessage(playerid, COLOR_GREY, "Доставьте товар в нужное местоположение /truck");

			SendClientMessage(playerid,COLOR_WHITE, "Инструменты были проданы за "GREEN"15000$");
			GiveMoney(playerid,15000,"разгрузка лесопилка");
			
			bizz_pay(PI[playerid][bizz_work]-1,4500);
			
			PI[playerid][bizz_lcash] += 15000;
			PI[playerid][bizz_cash] += 15000;
			
			Delete3DTextLabel(Gruz[playerid]);

			UpdatePlayerData(playerid,"bizz_lcash",PI[playerid][bizz_lcash]);
			UpdatePlayerData(playerid,"bizz_cash",PI[playerid][bizz_cash]);
			A_DestroyVehicle(TK_Trailer[playerid]);
			TK_Trailer[playerid] = INVALID_VEHICLE_ID;
			
			TI[playerid][tTrucker][0] = 0;
			TI[playerid][tTrucker][1] = 0;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, -50.1009,22.8516,3.1172)) // Ферма
		{
			if(VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != 61 && GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться за рулём тягоча");
			if(TK_Trailer[playerid] == INVALID_VEHICLE_ID || !GetVehicleTrailer(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет груза");
			if(TI[playerid][tTrucker][1] != 1) return SendClientMessage(playerid, COLOR_GREY, "Доставьте товар в нужное местоположение /truck");

			SendClientMessage(playerid,COLOR_WHITE, "Удобрения были проданы за "GREEN"11000$");
			GiveMoney(playerid,11000,"разгрузка ферма");
			
			bizz_pay(PI[playerid][bizz_work]-1,4500);

			PI[playerid][bizz_lcash] += 11000;
			PI[playerid][bizz_cash] += 11000;
			
			Delete3DTextLabel(Gruz[playerid]);

			UpdatePlayerData(playerid,"bizz_lcash",PI[playerid][bizz_lcash]);
			UpdatePlayerData(playerid,"bizz_cash",PI[playerid][bizz_cash]);
			A_DestroyVehicle(TK_Trailer[playerid]);
			TK_Trailer[playerid] = INVALID_VEHICLE_ID;

			TI[playerid][tTrucker][0] = 0;
			TI[playerid][tTrucker][1] = 0;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1708.5884,407.1685,30.6304)) // Стройка
		{
			if(VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != 61 && GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться за рулём тягоча");
			if(TK_Trailer[playerid] == INVALID_VEHICLE_ID || !GetVehicleTrailer(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет груза");
			if(TI[playerid][tTrucker][1] != 4) return SendClientMessage(playerid, COLOR_GREY, "Доставьте товар в нужное местоположение /truck");

			SendClientMessage(playerid,COLOR_WHITE,"Стройматериалы были проданы за "GREEN"12000$");
			GiveMoney(playerid,12000,"разгрузка стройка");
			
			bizz_pay(PI[playerid][bizz_work]-1,3700);

			PI[playerid][bizz_lcash] += 12000;
			PI[playerid][bizz_cash] += 12000;
			Delete3DTextLabel(Gruz[playerid]);

			UpdatePlayerData(playerid,"bizz_lcash",PI[playerid][bizz_lcash]);
			UpdatePlayerData(playerid,"bizz_cash",PI[playerid][bizz_cash]);
			A_DestroyVehicle(TK_Trailer[playerid]);
			TK_Trailer[playerid] = INVALID_VEHICLE_ID;

			TI[playerid][tTrucker][0] = 0;
			TI[playerid][tTrucker][1] = 0;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, -56.5448,-224.0444,5.4297)) // Оружейный завод материалы
		{
			if(VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != 61 && GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться за рулём тягоча");
			if(TK_Trailer[playerid] == INVALID_VEHICLE_ID || !GetVehicleTrailer(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет груза");
			if(TI[playerid][tTrucker][1] != 2) return SendClientMessage(playerid, COLOR_GREY, "Доставьте товар в нужное местоположение /truck");

			SendClientMessage(playerid,COLOR_WHITE,"Материалы были проданы за "GREEN"11500$");
			GiveMoney(playerid,11500,"разгрузка материалы");
			bizz_pay(PI[playerid][bizz_work]-1,3400);

			PI[playerid][bizz_lcash] += 11500;
			PI[playerid][bizz_cash] += 11500;
			Delete3DTextLabel(Gruz[playerid]);

			UpdatePlayerData(playerid,"bizz_lcash",PI[playerid][bizz_lcash]);
			UpdatePlayerData(playerid,"bizz_cash",PI[playerid][bizz_cash]);
			A_DestroyVehicle(TK_Trailer[playerid]);
			TK_Trailer[playerid] = INVALID_VEHICLE_ID;

			TI[playerid][tTrucker][0] = 0;
			TI[playerid][tTrucker][1] = 0;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1219.8451,189.5213,19.8915)) // Деревня Mantgomery
		{
			if(VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != 61 && GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться за рулём тягоча");
			if(TK_Trailer[playerid] == INVALID_VEHICLE_ID || !GetVehicleTrailer(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет груза");
			if(TI[playerid][tTrucker][1] != 3) return SendClientMessage(playerid, COLOR_GREY, "Доставьте товар в нужное местоположение /truck");

			SendClientMessage(playerid,COLOR_WHITE,"Продукты были проданы за "GREEN"12500$");
			GiveMoney(playerid,12500,"разгрузка mantgomery");
			bizz_pay(PI[playerid][bizz_work]-1,3800);

			PI[playerid][bizz_lcash] += 12500;
			PI[playerid][bizz_cash] += 12500;
			Delete3DTextLabel(Gruz[playerid]);

			UpdatePlayerData(playerid,"bizz_lcash",PI[playerid][bizz_lcash]);
			UpdatePlayerData(playerid,"bizz_cash",PI[playerid][bizz_cash]);
			A_DestroyVehicle(TK_Trailer[playerid]);
			TK_Trailer[playerid] = INVALID_VEHICLE_ID;

			TI[playerid][tTrucker][0] = 0;
			TI[playerid][tTrucker][1] = 0;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2249.0378,-81.1264,26.5151)) // Деревня Polomino Creek
		{
			if(VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != 61 && GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться за рулём тягоча");
			if(TK_Trailer[playerid] == INVALID_VEHICLE_ID || !GetVehicleTrailer(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет груза");
			if(TI[playerid][tTrucker][1] != 3) return SendClientMessage(playerid, COLOR_GREY, "Доставьте товар в нужное местоположение /truck");

			SendClientMessage(playerid,COLOR_WHITE,"Продукты были проданы за "GREEN"12200$");
			GiveMoney(playerid,12200,"разгрузка polomino");
			bizz_pay(PI[playerid][bizz_work]-1,3200);

			PI[playerid][bizz_lcash] += 12200;
			PI[playerid][bizz_cash] += 12200;
			Delete3DTextLabel(Gruz[playerid]);

			UpdatePlayerData(playerid,"bizz_lcash",PI[playerid][bizz_lcash]);
			UpdatePlayerData(playerid,"bizz_cash",PI[playerid][bizz_cash]);
			A_DestroyVehicle(TK_Trailer[playerid]);
			TK_Trailer[playerid] = INVALID_VEHICLE_ID;

			TI[playerid][tTrucker][0] = 0;
			TI[playerid][tTrucker][1] = 0;
		}
		else if(IsPlayerInRangeOfPoint(playerid,4.0,2209.9639,-2204.5803,13.5469))
		{
			if(!IsATK(playerid)) return SendClientMessage(playerid,COLOR_GREY, "Вы не сотрудник транспортной компании");
			if(VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != 61 || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться за рулём тягоча");
			if(TK_Trailer[playerid] != INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть груз");
			D(playerid,D_TK_TRUCK_1,DSL,""P"Прицепы", "Купить прицеп с удобрениями"G" (1500$)\nКупить прицеп с материалами"G" (2500$)\nКупить прицеп с продуктами"G" (1800$)\n\
			Купить прицеп со стройматериалами"G" (1000$)\nКупить прицеп с инструментами"G" (1300$)","Купить","Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2488.0916,-1463.9087,24.0205)) {
			if(thef_car[playerid] == INVALID_VEHICLE_ID) return SendClientMessage(playerid,  COLOR_YELLOW, "SMS: Ты не получал у меня задание « Отправитель: Jack_Waze [т. 78823]");
			new car = GetPlayerVehicleID(playerid), cash;
			if(car != thef_car[playerid]) return SendClientMessage(playerid,  COLOR_YELLOW, "SMS: Ты привез не ту машину! « Отправитель: Jack_Waze [т. 78823]");
			A_DestroyVehicle(thef_car[playerid]);
			thef_timer[playerid] = -1;
			thef_car[playerid] = INVALID_VEHICLE_ID;

			PI[playerid][pTheftExp]++;
			if(PI[playerid][pTheftExp] == 15 || PI[playerid][pTheftExp] == 30 || PI[playerid][pTheftExp] == 45) {
				PI[playerid][pTheftlvl]++;
				UpdatePlayerData(playerid,"theftSkill",PI[playerid][pTheftlvl]);
				SendClientMessage(playerid,CGOLD,"Поздравляем с повышением вашего навыка автоугонщика!");
			}
			PI[playerid][ptheftTime] = gettime()+600;
			UpdatePlayerData(playerid,"theftTime",PI[playerid][ptheftTime]);
			UpdatePlayerData(playerid,"theftExp",PI[playerid][pTheftExp]);
			
			switch(PI[playerid][pTheftlvl])
			{
			case 0: cash = 4500;
			case 1: cash = 5000;
			case 2: cash = 7000;
			}
			
			if(QuestProgress[playerid][17] < 10 && AcceptQuest[playerid][17] != 0) QuestProgress[playerid][17] ++,save_quest(playerid,17);
			if(QuestProgress[playerid][17] == 10 && AcceptQuest[playerid][17] != 0) {
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Автоугон'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
				NextStapQI(playerid,17);
			}
			
			new str[170];
			format(str,sizeof(str),"Угнанный автомобиль помещен на склад. Вы заработали:"GREEN" %d$",cash);
			SendOk(playerid,str);
			GiveMoney(playerid,cash,"автоугон");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4.0, 2212.5579,-2545.3342,13.5469)) {
			new string[400];
			new veh = GetPlayerVehicleID(playerid);
			if(veh != GetPVarInt(playerid,"veh_id_cleaner")) return SendClientMessage(playerid, COLOR_GREY, "Вы не в своем арендованном транспорте");
			if(!VG[veh][vgAmount][0]) return SendClientMessage(playerid, COLOR_GREY, "В рабочей машине нет мусора");
			format(string,sizeof(string),"\n"W"В рабочей машине:"ORANGE" %d"W" пакетов мусора\nСтоимость 1 пакета мусора:"ORANGE" 250$"W"\n\nВы действительно хотите утилизировать весь мусор?",VG[veh][vgAmount][0],VG[veh][vgAmount][0]*250);
			D(playerid,D_JOB_KANAL_3,DSM, ""P"Утилизация",string,"Да","Закрыть");
			return 1;
		}
		else if((IsPlayerInRangeOfPoint(playerid,  20.0, 1646.7213,738.0809,590.4441)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			new Veh = GetPlayerVehicleID(playerid);
			if(!PI[playerid][pRoom]) return SendClientMessage(playerid, COLOR_GREY, "Вы не снимаете комнату в данном доме");
			if(GetPlayerVirtualWorld(playerid) == 1)
			{
				SetVehiclePos(Veh, 2299.4138,-1788.3569,13.1830);
				SetVehicleZAngle(Veh, 0.8304);
			}
			if(GetPlayerVirtualWorld(playerid) == 2) {
				SetVehiclePos(Veh, 859.6544,-1662.5564,13.2295);
				SetVehicleZAngle(Veh, 269.0478);
			}
			exit_garage(Veh,0);
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid,4, 2292.8179,-1786.3413,13.5469)) {
			switch(PI[playerid][pRoom]) {
			case 1..16:
				{
					new Veh = GetPlayerVehicleID(playerid);
					SetVehiclePos(Veh, 1644.1984,734.2335,589.8745);
					SetVehicleZAngle(Veh, 180.2765);
					LinkVehicleToInterior(Veh, 4);
					SetVehicleVirtualWorld(Veh, 1);
					SetPlayerVirtualWorld(playerid,1);
					SetPlayerInterior(playerid,4);
					FreezePlayerForTime(playerid,4);
					return true;
				}
			default: SendClientMessage(playerid, COLOR_GREY, "Вы не снимаете комнату в данном доме");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,4, 855.7083,-1662.6046,13.5547)) {
			switch(PI[playerid][pRoom]) {
			case 17..32:
				{
					new Veh = GetPlayerVehicleID(playerid);
					SetVehiclePos(Veh, 1644.1984,734.2335,589.8745);
					SetVehicleZAngle(Veh, 180.2765);
					LinkVehicleToInterior(Veh, 4);
					SetVehicleVirtualWorld(Veh, 2);
					SetPlayerVirtualWorld(playerid,2);
					SetPlayerInterior(playerid,4);
					FreezePlayerForTime(playerid,4);
					return true;
				}
			default: SendClientMessage(playerid, COLOR_GREY, "Вы не снимаете комнату в данном доме");
			}
		}
		else if((IsPlayerInRangeOfPoint(playerid,  10.0, 882.2743,-1340.8132,13.6652)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			new Veh = GetPlayerVehicleID(playerid);
			if(!VehicleInfo[Veh][vFamily] && GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1] && PlayerTrailer[playerVehicleID[playerid]][carVehicle] != Veh) return SendClientMessage(playerid, COLOR_GREY, "Вы не за рулем своего т/с");
			if(GetVehicleFreeSeat(Veh) == -1) return SendClientMessage(playerid, COLOR_GREY, "У Вас в Т/C пассажиры");
			D(playerid,D_TUNING_VIEW,DSL, ""P"Обслуживание автомобиля","- Тюнинг салон\n- Покрасочные работы","Выбрать","Закрыть");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.5, -2471.7139,2505.1924,1014.7252)) {
			if(!VehicleInfo[GetPlayerVehicleID(playerid)][vFamily] && GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1] &&
					PlayerTrailer[playerVehicleID[playerid]][carVehicle] != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не за рулем своего т/с");
			if(!GetPVarInt(playerid,"TunningSaluna")) {
				SetPVarInt(playerid,"VehicleTunnSALON",GetPlayerVehicleID(playerid));
				SetPVarInt(playerid,"TunningSaluna",1);
				
				for(new i = 0; i < 11; i++) TextDrawShowForPlayer(playerid,ColorTD[i]);
				new curcol,vehicleid = GetPlayerVehicleID(playerid);
				for(new i = 0; i < 2; i++) {
					curcol = VehicleInfo[vehicleid][vColor][i];
					PlayerTextDrawColor(playerid, ColorTDPl[playerid][2+3*i], RGBArray[curcol]);
					curcol--;
					if(curcol < 0) curcol = 255;
					PlayerTextDrawColor(playerid, ColorTDPl[playerid][1+3*i], RGBArray[curcol]);
					curcol += 2;
					if(curcol > 255) curcol = 0;
					PlayerTextDrawColor(playerid, ColorTDPl[playerid][3+3*i], RGBArray[curcol]);
				}
				for(new i = 0; i < 6; i++) PlayerTextDrawShow(playerid,ColorTDPl[playerid][1+i]);
				for(new i = 0, b = VehicleModelToPaintjobNum(GetVehicleModel(GetPlayerVehicleID(playerid)))+1; i < b; i++) TextDrawShowForPlayer(playerid,ColorTD[11+i]);
				VinylJob[playerid] = 0;
				TextDrawShowForPlayer(playerid,ColorTD[16]);
				PrimaryColor[playerid] = VehicleInfo[vehicleid][vColor][0];
				SecondaryColor[playerid] = VehicleInfo[vehicleid][vColor][1];
				RepaintValue[playerid] = 0;
				DeletePVar(playerid, "PaintJob");
				ChangedPrimaryColor[playerid] = false;
				ChangedSecondaryColor[playerid] = false;
				ChangedVinylJob[playerid] = false;
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],"$0");
				PlayerTextDrawShow(playerid,ColorTDPl[playerid][0]);
				TextDrawShowForPlayer(playerid,ColorTD[15]);
				SelectTextDraw(playerid,0xAA3333AA);
			}
			else {
				CancelSelectTextDraw(playerid);
				SetPVarInt(playerid,"TunningSaluna",0);
				for(new h = 0;h < 20;h++) {
					if(h < 7)PlayerTextDrawHide(playerid,ColorTDPl[playerid][h]);
					TextDrawHideForPlayer(playerid,ColorTD[h]);
				}
				new cartune = GetPVarInt(playerid,"VehicleTunnSALON");
				ChangeVehicleColor(cartune,VehicleInfo[cartune][vColor][0],VehicleInfo[cartune][vColor][1]);
				ChangeVehiclePaintjob(cartune, VehicleInfo[cartune][vPaintJob]);
			}
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid,  3.0, -2463.8042,2505.5767,1014.7252)) {
			if(!VehicleInfo[GetPlayerVehicleID(playerid)][vFamily] && GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1] && PlayerTrailer[playerVehicleID[playerid]][carVehicle] != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не за рулем своего т/с");
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SendClientMessage(playerid, COLOR_GREY, "Недоступно для данного Т/С");
			if(IsACarModel(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SendClientMessage(playerid, COLOR_GREY, "Недоступно для данного Т/С");
			if(!GetPVarInt(playerid,"TunningSalun"))
			{
				SetPVarInt(playerid,"VehicleTunnSALON",GetPlayerVehicleID(playerid));
				SetPVarInt(playerid,"TunningSalun",1);
				new str[64],value;
				for(new i = 0; i < 3; i++) TextDrawShowForPlayer(playerid,CustomTD[i]);
				CustomType[playerid] = 0;
				CustomListNum[playerid] = 0;
				CustomLimitNum[playerid] = 0;
				for(new i = 0; i < 5; i++) {
					if(i > TypeBorder[CustomType[playerid]]-1) break;
					TextDrawShowForPlayer(playerid,CustomTD[5+i]);
					format(str,64,"TUN[%d][Value]",i);
					value = GetGVarInt(str,CustomType[playerid]);
					format(str,64,"TUN[%d][Name]",i);
					GetGVarString(str,str,64,CustomType[playerid]);
					format(str,64,"%s~n~$%d",str,value);

					PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+i],str);
					PlayerTextDrawShow(playerid,CustomTDPl[playerid][1+i]);
					format(str,64,"TUN[%d][ModelID]",i);
					if(!IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),GetGVarInt(str,CustomType[playerid]))) TextDrawShowForPlayer(playerid,CustomTD[15+i]);
					else if(i == 0) ACC_AddVehicleComponent(GetPlayerVehicleID(playerid),GetGVarInt(str,CustomType[playerid]));
				}
				TextDrawShowForPlayer(playerid,CustomTD[10]);
				TextDrawShowForPlayer(playerid,CustomTD[20]);
				TextDrawShowForPlayer(playerid,CustomTD[21]);
				PlayerTextDrawSetString(playerid,CustomTDPl[playerid][0],CustomTypeName[0]);
				PlayerTextDrawShow(playerid,CustomTDPl[playerid][0]);
				CameraViewChange(playerid,CustomType[playerid]);
				SelectTextDraw(playerid,0xAA3333AA);
			}
			else
			{
				SetCameraBehindPlayer(playerid);
				CancelSelectTextDraw(playerid);
				SetPVarInt(playerid,"TunningSalun",0);
				for(new h = 0;h < 22;h++) {
					if(h < 6)PlayerTextDrawHide(playerid,CustomTDPl[playerid][h]);
					TextDrawHideForPlayer(playerid,CustomTD[h]);
				}
			}
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid,  3.0, -2463.8516,2513.8286,1014.7252) || IsPlayerInRangeOfPoint(playerid,  3.0, -2471.8428,2513.8328,1014.7252)) {
			new Veh = GetPlayerVehicleID(playerid);
			if(!VehicleInfo[Veh][vFamily] && GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1] && PlayerTrailer[playerVehicleID[playerid]][carVehicle] != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в домашнем т/с");
			SetVehiclePos(Veh, 882.1031,-1339.8259,13.3671);
			SetVehicleZAngle(Veh, 0.7275);
			exit_garage(Veh,0);
		}
		if(IsPlayerInRangeOfPoint(playerid,  7.0, 2357.3328,-2023.5265,13.8836)) {
			if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не бандит");
			D(playerid,D_TEX,DST, ""G"Черный рынок |"P" Продажа техники",""P"1."W" Домашняя техника\t250"GREEN"$\n"P"2."W" Техника со склада\t100"GREEN"$","Продать","Отмена");
		}
		else if(PI[playerid][pHouse] && gHouses[PI[playerid][pHouse]-1][houseImprove][2]) {
			if(PlayerToPoint(2.5,playerid,gHouses[PI[playerid][pHouse]-1][houseParkX], gHouses[PI[playerid][pHouse]-1][houseParkY], gHouses[PI[playerid][pHouse]-1][houseParkZ]))
			{
				if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return SendClientMessage(playerid, COLOR_GREY, "Вы не за рулем своего т/с");
				new id = -1,house = PI[playerid][pHouse]-1,car;
				switch(gHouses[house][houseClass]) {
				case 0: id = 0;
				case 1: id = 2;
				case 2: id = 4;
				case 3: id = 6;
				}
				new hint = gHouses[house][houseHint];
				new interior = hinterior_info[hint][h_interior];
				new Veh = GetPlayerVehicleID(playerid);
				switch(car) {
				case 0: {
						SetVehiclePos(Veh, cargarage[id][0],cargarage[id][1],cargarage[id][2]);
						SetVehicleZAngle(Veh,cargarage[id][3]);
						enter_garage(playerid,Veh,interior,PI[playerid][pHouse]);
						SetCameraBehindPlayer(playerid);
					}
				case 1: {
						SetVehiclePos(Veh, cargarage[id+1][0],cargarage[id+1][1],cargarage[id+1][2]);
						SetVehicleZAngle(Veh,cargarage[id+1][3]);
						enter_garage(playerid,Veh,interior,PI[playerid][pHouse]);
						SetCameraBehindPlayer(playerid);
					}
				}
			}
		}
	}
	if(newkeys == KEY_FIRE && IsPlayerInAnyVehicle(playerid)){
		return pc_cmd_radiocar(playerid);
	}
	if(newkeys == KEY_WALK && !IsPlayerInAnyVehicle(playerid)) {
		
		new barrierid = IsObjectBarrier(playerid);
		if(barrierid != -1) CheckBarrier(playerid,barrierid);
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1120.8074,-893.6594,1046.0126)) return show_poisk(playerid);
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 86.8335,-235.0523,1.6274) && IsAMafiaAndGang(playerid)&& Accepts == false){

            TI[playerid][tProcess][0] = 0;
			TI[playerid][tProcess][1] = 10;
			JobTempProcess[playerid] = 27;
			RandomYareNforJOBS(playerid);
			PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
			for(new YN = 0;YN < 3;YN++) {
				TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5,1400.5125,-20.4098,1010.3695)&& GetPlayerVirtualWorld(playerid) == 61) return invitetrS(playerid);
		if(IsPlayerInRangeOfPoint(playerid, 3.5, 132.2542,-287.4891,1.7124) && GetPVarInt(playerid,"PlusWareHouse"))
		{
		    if(CountMaterialVehicleWH > 30) return SendClientMessage(playerid, COLOR_GREY, "Машина переполнена");
		    CountMaterialVehicleWH += 1;
		    ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
		    new strp[150];
			format(strp, sizeof(strp), "Ящиков с материалами в машине %d/15", CountMaterialVehicleWH);
			SendClientMessage(playerid, COLOR_GREY, strp);
			DeletePVar(playerid, "PlusWareHouse");
		 	for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
	        {
	            if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	        }
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, 164.8852,1852.3386,643.0618))
		{
			if(Accepts == false) return SendClientMessage(playerid, COLOR_GREY, "Отключите сигнализацию! "W"('Отключить сигнализацию можно в диспетчерской!')");
			if(TimerRobWeapon > 0) return SendClientMessage(playerid, COLOR_GREY, "Сначало отстоите перестрелку");
		    if(GetPVarInt(playerid, "PlusWareHouse")) return SendClientMessage(playerid, COLOR_GREY, "Вы уже взяли ящик с материалами.");
            TI[playerid][tProcess][0] = 0;
			TI[playerid][tProcess][1] = 10;
			JobTempProcess[playerid] = 26;
			RandomYareNforJOBS(playerid);
			PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
			for(new YN = 0;YN < 3;YN++) {
				TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
			}
		}
		if(PlayerToPoint(1.5,playerid,1.4569,-90.4876,1026.4089) || PlayerToPoint(1.5,playerid,3.9606,-90.4766,1026.4091) ||
				PlayerToPoint(1.5,playerid,6.3032,-90.4572,1026.4089)) {

			if(TI[playerid][tAutoSchool] == 2 || TI[playerid][tAutoSchool] == 3)
			{
				D(playerid,D_AUTOSCHOOL_3,DSM, ""P"ЭКЗАМЕН","\n\n"W"Вы действительно хотите приступить к экзамену?\n\n","Да","Отмена");
				return true;
			}
			if(TI[playerid][tAutoSchool] == 1)
			{
				if(GetPVarInt(playerid,"use_test") == 1) return 1;
				if(GetPVarInt(playerid,"pWaitingExam") == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже сдали теоретическую часть");
				static const f_str[] = ""W"Добро пожаловать в автошколу!\n\n\
				Для получения доступа к практическому экзамену,\n\
				Вам необходимо ответить "P"ВЕРНО"W" на 5 теоретических вопросов.\n\
				Стоимость прохождения теста составит - "ORANGE"$%d\n\n\
				"W"Вы хотите приступить к решению теста?";
				new string[sizeof(f_str) +1 + (-2 + 5)];
				format(string,sizeof(string),f_str,500);
				D(playerid,D_AUTOSCHOOL_1,DSM, ""P"ЭКЗАМЕН",string,"Да","Отмена");
				SetPVarInt(playerid,"use_test", 1);
				DeletePVar(playerid,"error_test");
				DeletePVar(playerid,"pTestQNumber");
				TestASKMassive[playerid] = { 0, 1, 2, 3 , 4, 5, 6};
				RandomMassive(TestASKMassive[playerid], 7);
			}
		}
		new Float:playerPos[3], Float:vehiclePos[3];
		GetPlayerPos(playerid, playerPos[0], playerPos[1], playerPos[2]);
		foreach(new player_vehicleid: playerVehicles)
		{
			GetVehiclePos(PlayerTrailer[player_vehicleid][carVehicle], vehiclePos[0], vehiclePos[1], vehiclePos[2]);
			GetVehicleParamsEx(PlayerTrailer[player_vehicleid][carVehicle],engine,lights,alarm,doors,bonnet,boot,objective);
			if(IsPlayerInRangeOfPoint(playerid, 3.0, vehiclePos[0], vehiclePos[1], vehiclePos[2]))
			{
				if(!GetString(player_name[playerid], PlayerTrailer[player_vehicleid][carOwner]) && doors == 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Дом на колесах закрыт");
					return true;
				}
				SetPlayerPosAC(playerid, -675.6675,1727.0975,1376.6718, player_vehicleid, 2);
				SetPlayerFacingAngle(playerid, 268.6703);
				SetCameraBehindPlayer(playerid);
				SetPlayerVirtualWorld(playerid, player_vehicleid);
				SetPlayerInterior(playerid, 2);
				new freezeSeconds = 0;
				switch (GetPlayerPing(playerid)) {
				case 0 .. 49: freezeSeconds = 2;
				case 50 .. 199: freezeSeconds = 3;
				case 200 .. 499: freezeSeconds = 4;
				default: freezeSeconds = 5;
				}
				FreezePlayerForTime(playerid, freezeSeconds);
				return true;
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, 2311.8091,-1984.2976,13.5602)){
			if(!IsAMafiaAndGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Ты не в тот район попал, шуруй от сюда!");
			D(playerid,D_DARKNET_GHETTO,DSM, "Anthony LoPinto",""W"\n\nПокупка ключей от склада оружий.\nВы действительно хотите купить ключ за "G"$35.000"W"?\n\n","Да","Закрыть");
			return 1;
			
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, 86.1299,-221.3760,1.5861)){
		    if(IsACop(playerid)) return IsACopOpenGate(playerid);
		    if(!GetPVarInt(playerid, "KeyWareHouseWeapon")) return SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от ворот!");
		    if(gAteStatus == true) return SendClientMessage(playerid, COLOR_GREY, "Ворота уже открыты!");
		    if(!IsAMafiaAndGang(playerid) || IsACop(playerid)) return 1;
			if(GetPVarInt(playerid, "AntiFloods") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Пожалуйста, не флудите");
			SetPVarInt(playerid, "AntiFloods", gettime() + 3);
		    /**/
      		TI[playerid][tProcess][0] = 0;
			TI[playerid][tProcess][1] = 10;
			JobTempProcess[playerid] = 25;
			RandomYareNforJOBS(playerid);
			PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
			for(new YN = 0;YN < 3;YN++) {
				TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1543.4821, -1627.3247, 13.4028))
		{
            if(!IsACop(playerid)) return 1;
			if(GetPVarInt(playerid, "AntiFloods") > gettime()) return SendClientMessage(playerid, -1, "Не флудите");
			SetPVarInt(playerid, "AntiFloods", gettime() + 15);
			MoveDynamicObject(gateopen[0], 1543.5525, -1621.7532, 13.4028, 3.0);
			SetTimer("GateOpen", 1000*15, false);
			SendClientMessage(playerid, COLOR_WHITE, "Через 15 секунд ворота закроются!");
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1269.723510, -913.950134, 43.448936))
		{
            if(PI[playerid][pMember] != fLCN) return 1;
			if(GetPVarInt(playerid, "AntiFloods") > gettime()) return SendClientMessage(playerid, -1, "Не флудите");
			SetPVarInt(playerid, "AntiFloods", gettime() + 15);
			MoveDynamicObject(gateopen[2], 1269.723510, -913.950134, 30.448936, 3.0);
			SetTimer("LCNgate", 1000*15, false);
			SendClientMessage(playerid, COLOR_WHITE, "Через 15 секунд ворота закроются!");
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 775.3139,2518.5359,1502.0100) && IsABikers(playerid)){
			if(GetPVarInt(playerid, "Toms") == 1) return SendClientMessage(playerid, -1, "[Бармен]: Чего стоим то? Вперёд!");
            D(playerid,BARMEN_READY,DSM, "Бармен",""W"Вам нужно ограбить алкогольный склад вы готовы? ","Готов","Закрыть");
		}
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 317.5285,-29.1859,1.5781) &&  GetPVarInt(playerid, "EndReady") == 1 || IsPlayerInRangeOfPoint(playerid, 5.0, 2383.4004,241.5266,26.5141) &&  GetPVarInt(playerid, "EndReady") == 1){
			new rand = random(25000)+10000, str[150];
			SendClientMessage(playerid, -1, "[Грузчик]: Вот вам просили передать");
			format(str, sizeof(str), "Вы получили %d$", rand);
			SendClientMessage(playerid, -1, str);
			GiveMoney(playerid, rand, "Ограбление алкогольного склада");
			RobLeave(playerid);
			return DeletePVar(playerid, "EndReady");
			
		}
		if(GetPVarInt(playerid, "Texting") == 1 ){
		    new Float:xx, Float:xy, Float:xz;
			GetVehiclePos(GetPVarInt(playerid, "VehicleID"), xx, xy, xz);
			if(IsPlayerInRangeOfPoint(playerid, 5.0, xx, xy, xz)) return D(playerid,D_ROBBOT_WARGEHOUSE,DSL, ""P"Багажник",""P"1."W" Уехать.\n"P"2."W"Закинуть сумку.","Выбрать","Закрыть");
		    /**/
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2360.8240,1839.1799,1211.6302) && GetPVarInt(playerid, "Ready") == 1) RobBiker(playerid);

		if(IsPlayerInRangeOfPoint(playerid, 5.0, 816.1916,-1843.3940,8.3624)) return D(playerid,D_SELFISH,DSL, ""P"Рыбак",""P"1."W" Показать пропуск\n"P"2."W" Продать улов","Выбрать","Закрыть");
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1123.7704,-892.0002,1046.0126)) return D(playerid,D_SELPEDMET,DSL, ""P"Рыбак",""P"1."W" Гвозди\n"P"2."W" Металл\n"P"3."W" Метал. ящик\n"P"4."W" Ящик с патронами\n"P"5."W" Нож\n"P"6."W" Военная винтовка\n"P"7."W" Японский меч\n"P"8."W" Боеголовка\n"P"9."W" Кейс\n"P"10."W" Старинная монета","Выбрать","Закрыть");
		if(IsPlayerInRangeOfPoint(playerid,2.0, 885.3270,-1077.4008,24.2946)){
            if(QuestProgress[playerid][60] < 1 && AcceptQuest[playerid][60] != 0) QuestProgress[playerid][60] ++,save_quest(playerid,60);
            if(QuestProgress[playerid][60] == 1 && AcceptQuest[playerid][60] != 0)
  		  	{
		       D(playerid,DIALOG_NONE,DSM, "Могилка",""W"Вы полили могилку!\n\nОтправляйтесь теперь обратно к мэрии, чтобы завершить выполнение квеста!","Закрыть","");
	        }
		}
		if(IsPlayerInRangeOfPoint(playerid,2.0, 2413.9656,19.6305,26.9844))
		{
            SendBotMessage(playerid,"Я рада тебя видеть!");
            if(QuestProgress[playerid][59] < 1 && AcceptQuest[playerid][59] != 0) QuestProgress[playerid][59] ++,save_quest(playerid,59);
            if(QuestProgress[playerid][59] == 1 && AcceptQuest[playerid][59] != 0)
      {
		       D(playerid,DIALOG_NONE,DSM, "Колдунья",""W"Вы встретились с Колдуньей, следующее задание будет от меня!\n\nОтправляйтесь теперь обратно к мэрии, чтобы завершить выполнение квеста!","Закрыть","");
	        }
		}

		if(IsPlayerInRangeOfPoint(playerid,2.0, 1053.6957,-303.5652,73.9922))
		{
            SendBotMessage(playerid,"Я рад тебя видеть!");
            if(QuestProgress[playerid][57] < 1 && AcceptQuest[playerid][57] != 0) QuestProgress[playerid][57] ++,save_quest(playerid,57);
            if(QuestProgress[playerid][57] == 1 && AcceptQuest[playerid][57] != 0)
		    {
		       D(playerid,DIALOG_NONE,DSM, "Старый друг",""W"Вы встретились с лучшим другом и выдали ему приглашение на праздник\n\nОтправляйтесь теперь обратно к мэрии, чтобы завершить выполнение квеста!","Закрыть","");
	        }
		}
		if(IsPlayerInRangeOfPoint(playerid,2.0, 1115.7891,-976.4371,42.7656))
		{
            SendBotMessage(playerid,"Привет, чего тебе?");
            if(QuestProgress[playerid][58] < 1 && AcceptQuest[playerid][58] != 0) QuestProgress[playerid][58] ++,save_quest(playerid,58);
            if(QuestProgress[playerid][58] == 1 && AcceptQuest[playerid][58] != 0)
		    {
		       D(playerid,DIALOG_NONE,DSM, "Фредди",""W"У Вас получилось разбудить Фредди\n\nОтправляйтесь теперь обратно к мэрии, чтобы завершить выполнение квеста!","Закрыть","");
	        }
		}
		
		if(IsPlayerInRangeOfPoint(playerid,2.0, 1509.8147,-1661.6212,13.3226))
		{
		   new zag[100];
		   format(zag,sizeof(zag),"{F88539}HAllOWEEN |"W" У Вас %i тыкв.",PI[playerid][pEvent]);
           D(playerid,D_HELLOW_1,DSL, zag,"{F88539}–"W" HAllOWEEN-{FA6B63}DM зона"W" Заработок тыкв\n\
		   {F88539}–"W" Обмен тыкв на Аксессуары\n{F88539}–"W" Покупка тыкв за деньги{FA6B63} (800.000$ = 1 тыква)\n\
		   {F88539}–"W" Обменять киллы на тыквы{FA6B63} (100 киллов = 1 тыква)\n{F88539}–"W" Квесты для прохождения","Выбрать","Закрыть");
		}
		if(IsPlayerInRangeOfPoint(playerid,2.0, -1307.6519,-1509.0223,24.0463))
		{
			if(TI[playerid][tPobeg_Z] != 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не выполнили первое задание!");
			PI[playerid][pJail] = 0;
			PI[playerid][pJailTime] = 0;

			TI[playerid][tPobeg] = 0;
			TI[playerid][tPobeg_Z] = 0;
			
			UpdatePlayerData(playerid,"pJailTime", PI[playerid][pJailTime]);
			UpdatePlayerData(playerid,"pJail", 0);
			
			SendClientMessage(playerid, COLOR_ORANGE, "Вы сбежали с тюрьмы. Срок заключения закончен");
			
			PlayerSpawn(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid,2.0, -2114.6072,-2419.0989,30.6250))
		{
			if(!TI[playerid][tPobeg]) return SendBotMessage(playerid,"Мы с тобой не знакомы.");
			if(TI[playerid][tPobeg_Z] != 0) return SendBotMessage(playerid,"Ты уже выполнил это задание!");
			D(playerid,DIALOG_NONE,DSM, ""P"Лучший друг",""W"У тебя получилось покинуть территорию тюрьмы!\n\n\
			С первым заданием ты справился, но теперь будь предельно аккуратным,\n\
			ведь в любой момент тебя могут повязать копы.\n\nСоветую сменить тебе"ORANGE" внешний вид,"W" чтобы\n\
			не вызывало никаких подозрений.\n\nСейчас я выдам тебе на"ORANGE" GPS координаты,"W" где ты\n\
			сможешь найти себе укрытие.","Закрыть","");
			
			EnableGPSForPlayer(playerid, -1307.6519,-1509.0223,24.0463);
			
			TI[playerid][tPobeg_Z] = 1;
		}
		if(IsPlayerInRangeOfPoint(playerid,2.0, 3571.7920,-692.1529,20.2399))
		{
			if(!PI[playerid][pJailTime]) return SendClientMessage(playerid, COLOR_GREY, "Вы не являетесь заключенным этой тюрьмы!");
			D(playerid,D_JAIL,DSL, ""P"Тюрьма","Что здесь делать?\nКак сократить срок?\nОсвободится досрочно с тюрьмы"GREEN" (500.000$)"W"\nОрганизовать побег с тюрьмы","Выбрать","Закрыть");
		}
		if(IsPlayerInRangeOfPoint(playerid,2.0, 2111.4978,-96.0636,2.1438))
		{
			if(gBusiness[56][bizzMafia] != PI[playerid][pMember]) return true;
			if(GetPVarInt(playerid,"vg_narko")) return true;
			if(order_drugs >= 100)
			{
				order_drugs -= 100;
				SetPVarInt(playerid,"vg_narko",1);
				ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
				SetTimerEx("CarryDelay",1000,false,"i",playerid);
				SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				new string[250];
				format(string,sizeof(string),""O"Разгрузка лодки"W"\n\nКоличество наркотиков:"P" %iг\n\n"G"Нажмите{ECC987} 'ALT'"G" чтобы взять ящик",order_drugs);
				UpdateDynamic3DTextLabelText(drugs_text, -1, string);
			}
			if(order_drugs == 0) {
				DestroyDynamicPickup(drugs_pickup);
				DestroyDynamic3DTextLabelEx(drugs_text);
			}
		}
		if(IsPlayerInRangeOfPoint(playerid,2.0, 2312.8013,-583.9443,130.8427) || IsPlayerInRangeOfPoint(playerid,2.0, 1407.4286,-294.9245,2.4418) ||
				IsPlayerInRangeOfPoint(playerid,2.0, -488.0458,232.1566,10.1223) || IsPlayerInRangeOfPoint(playerid,2.0, -1057.1177,-1635.7233,76.3672) ||
				IsPlayerInRangeOfPoint(playerid,2.0, -853.3624,-2654.7458,97.2633) || IsPlayerInRangeOfPoint(playerid,2.0, 27.9467,-2697.2495,40.7135))
		{
			if(!LastAirDrop[airOpen]) return true;
			DestroyDynamicObject(LastAirDrop[airObject]);
			DestroyDynamic3DTextLabelEx(LastAirDrop[Text3Did]);
			new rand_priz = Random(1, 3);
			new rand_money = Random(250000,300000);
			new rand_mats = Random(15000,25000);
			new rand_drugs = Random(2000, 4000);
			new string[400];
			switch(rand_priz) {
			case 1: {
					format(string,sizeof(string),"Члены вашей организации захватили 'AirDrop'! На склад помещено:"W" %i$",rand_money);
					SendFamilyMessage(PI[playerid][pMember], COLOR_RED, string);
					FI[PI[playerid][pMember]][fBank] += rand_money;
					UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);
				}
			case 2: {
					format(string,sizeof(string),"Члены вашей организации захватили 'AirDrop'! На склад помещено:"W" %i материалов",rand_mats);
					SendFamilyMessage(PI[playerid][pMember], COLOR_RED, string);
					FI[PI[playerid][pMember]][fMats] += rand_mats;
					UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);
				}
			case 3: {
					format(string,sizeof(string),"Члены вашей организации захватили 'AirDrop'! На склад помещено:"W" %i наркотиков",rand_drugs);
					SendFamilyMessage(PI[playerid][pMember], COLOR_RED, string);
					FI[PI[playerid][pMember]][fDrugs] += rand_drugs;
					UpdateFraction(PI[playerid][pMember],"Drugs",FI[PI[playerid][pMember]][fDrugs]);
				}
			}
			LastAirDrop[airTime] = 0;
			LastAirDrop[airOpen] = 0;
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0, 1125.4294,-1027.9141,1046.0126))
		{
			D(playerid,D_CRAFT,DSL, ""P"Крафт",""P"1."W" Информация\n"P"2."W" Создание аксессуара","Выбрать","Закрыть");
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0, -1150.9003,31.2155,1169.5709) || IsPlayerInRangeOfPoint(playerid,1.0, -1150.8993,33.5067,1169.5709) || IsPlayerInRangeOfPoint(playerid,1.0, -1150.8988,35.7689,1169.5709)) {
			if(PI[playerid][pMember] != bank_vzlom[2] || GetPVarInt(playerid,"ograbl_") == 1 || TI[playerid][tBankTime] > 0) return true;
			SetPlayerAttachedObject(playerid, 5, 1550, 1, 0.0, -0.3, 0, 90, 90, 0.0);
			SetPVarInt(playerid,"ograbl_",1);
			TogglePlayerControllable(playerid, false);
			TI[playerid][tBankTime] = 30;
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0, 124.6455,122.6624,1003.0521)) {
			D(playerid, D_FAMILY_OFFICE, DSL, ""P"Семейный центр", ""P"1."W" Создать семью\n"P"2."W" Рейтинг семей", "Выбрать", "Отмена");
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0, 1199.2159,744.6033,1020.4193)) {
			new str[350];
			format(str, sizeof(str), ""P"1."W" Информация\n\
			"P"2."W" %s \n\
			"P"3."W" Управление кассой\n\
			"P"4."W" Продать Микрозайм", PI[playerid][pCredit] ? ""GREEN"Погасить кредит" : ""R"Взять кредит");
			D(playerid, D_BIZZ_MICRO, DSL, "Микрозайм", str, "Выбрать", "Отмена");
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0, 1072.3623,399.6407,1856.6050)) {
			D(playerid, D_BIZZ_ZG, DSL, ""P"Аукцион гаражей", ""P"1."W" Информация\n"P"2."W" Покупка гаража\n"P"3."W" Управление кассой\n"P"4."W" Статистика доходов бизнеса\n"P"5."W" Продать аукцион гаражей", "Выбрать", "Отмена");
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0, 1409.3500,-16.6651,1010.3695)) {
			if(PI[playerid][bizz_status] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не работник транспортной компании");
			D(playerid, D_BIZZ_TK, DSL, ""P"Транспортная компания", ""P"1."W" Информация\n"P"2."W" Управление кассой\n"P"3."W" Управление автомобилями\n"P"4."W" Управление цветом\n"P"5."W" Сотрудники\n"P"6."W" Статистика доходов бизнеса\n"P"7."G" Персональная информация\n"P"8."W" Продать транспортную компанию", "Выбрать", "Отмена");
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0, -677.4073,1727.0359,1376.6718)) {
			new Float:c_x,Float:c_y,Float:c_z, Float:a;
			GetVehicleShiftPos(PlayerTrailer[GetPlayerVirtualWorld(playerid)][carVehicle],2,c_x, c_y, c_z, 2.0);
			GetVehicleZAngle(PlayerTrailer[GetPlayerVirtualWorld(playerid)][carVehicle], a);
			SetPlayerPosAC(playerid, c_x, c_y, c_z, 0, 0);
			SetPlayerFacingAngle(playerid, a-90);
			SetCameraBehindPlayer(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0, -1142.2551,-288.3172,1128.3345)) {
			D(playerid,D_PLAYER_GM,DSL,""P"Регистрация",""P"1."W" Регистрация на гонки\n"P"2."W" Регистрация на сумасшедшие войны\n"P"3."W" Регистрация на DM зону", "Выбрать","Закрыть");
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0, 793.4836,-1624.0413,13.3828)) {
			D(playerid,D_EAT_BURGER,DSL,""P"Служба доставки","- Устроиться на работу\n- Арендовать мопед", "Выбрать","Закрыть");
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0, 794.2693,-1625.7371,13.3828)) {
			if(!GetPVarInt(playerid,"burger_job")) return SendClientMessage(playerid, COLOR_GREY,"Вы не работаете курьером!");
			if(GetPVarInt(playerid,"check_pizza")) return SendClientMessage(playerid, COLOR_GREY,"Вы уже взяли заказ, отвезите его к дому");
			SetPlayerAttachedObject(playerid, 7, 2814, 1, 0.0, 0.5, -0.0, 90.0, 90.0, 0.0, 1.0, 1.0, 1.0);
			ApplyAnimation(playerid, "CARRY", "CRRY_PRTIAL", 4.1, 0, 1, 1, 1, 1, 1);
			new rand = Random(10, 250);
			SetPlayerCheckpoint(playerid, gHouses[rand][houseX],gHouses[rand][houseY],gHouses[rand][houseZ], 3);
			SetPVarInt(playerid,"check_pizza",1);
			SendClientMessage(playerid, COLOR_WHITE,"Вы взяли заказ. Доставьте его к дому");
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0,1429.3641,-21.8939,1000.8815)) {
			new str[120];
			format(str,sizeof(str),""P"Правительство |"W" Губернатор: %s",FI[fWHITEHOUSE][fLeader]);
			D(playerid,D_MAYOR,DSL,str,"\
			"GREEN"-"W" Пожертвовать деньги в казну\n\
			"GREEN"-"W" Самые щедрые пожертвования\n\
			"GREEN"-"W" Информация о налогах","Выбрать","Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid,1.0, 305.3058,-132.1072,1029.4011)) {
			D(playerid, DIALOG_CASINO, DSL, ""P"Казино", ""P"1."W" Обмен фишек\n\
			"P"2."W" Как играть в {9932CC}Black Jack?\n\
			"P"3."W" Язык интерфейса\n\
			"G"Информация", "Выбрать", "Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid,1, -1144.1833,35.9643,1169.5709)) {
			if(!GetPVarInt(playerid,"unload_atm") && GetPVarInt(playerid,"vg_atm")) return true;
			SetPVarInt(playerid,"vg_atm",1);
			SetPlayerAttachedObjectEx(playerid, 7, 1550, 5, 0.2, 0.0, 0.0, -50.0, 180.0, 70.0, 0.6, 0.6, 0.6);
			ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 2450.8682,-1901.9803,13.5469)) {
			if(!IsAGang(playerid) && !IsAMafia(playerid)) return SendBotMessage(playerid,"Вы не состоите в банде/мафии");
			if(PI[playerid][pRank] < 4) return SendBotMessage(playerid,"Доступно с 4-го ранга. Приходи позже");
			D(playerid,D_CODE_BANK,DSL," ","Поговорить с Karen\nЗабрать код у программиста", "Выбрать","Закрыть");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1782.5869,-1885.4102,13.3912) || IsPlayerInRangeOfPoint(playerid,1.5,728.2281,-1411.7220,13.5299) ||
				IsPlayerInRangeOfPoint(playerid, 1.5, -122.9779,-18.7226,3.1172) || IsPlayerInRangeOfPoint(playerid,1.5, 1189.7053,-1342.7035,13.5648) ||
				IsPlayerInRangeOfPoint(playerid, 1.5, 1667.5844,355.9797,30.2493))
		{
			D(playerid,D_ARENDA_MOPED,DSM,""P"Аренда мопеда",""W"Договор аренды транспорта\n\nЕсли арендованный транспорт не будет использован в течении\n\
			минуты, он будет автоматически отбуксирован\n\nСтоимость аренды мопеда:"ORANGE" 50$?","Арендовать","Закрыть");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1768.1006,-1935.9192,13.5691)) {
			if(QuestProgress[playerid][1] == 0 && AcceptQuest[playerid][1] != 0)
			{
				new str[500];
				format(str,sizeof(str),""ORANGE"%s,"W" твой чемодан я нашел на платформе, он там был без присмотра.\n\nЧтобы сохранить все содержимое чемодана, я взял его себе на хранение\n\nВ чемодане:"GREEN" 700$ и все личные вещи",player_name[playerid]);
				D(playerid,DIALOG_NONE,DSM," ",str,"Закрыть","");
				GiveMoney(playerid,700, "quest 1");
				QuestProgress[playerid][1] ++;
				save_quest(playerid,1);
			}
			else SendBotMessage(playerid,"Твоих вещей у меня нет");
		}
		if(IsPlayerInRangeOfPoint(playerid,0.5, 2716.4363,-2395.2075,13.6390)) { // exit
			if(PI[playerid][pMember] != fARMYLS) return 1;
			SetPlayerPosAC(playerid, 2716.4307,-2397.9106,13.6328, 0, 0);
			SetPlayerFacingAngle(playerid, 176.9129);
			SetCameraBehindPlayer(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid,0.5, 2716.3943,-2395.9451,13.6328)) { // enter
			if(PI[playerid][pMember] != fARMYLS) return 1;
			SetPlayerPosAC(playerid, 2716.4639,-2393.5291,13.6390, 0, 0);
			SetPlayerFacingAngle(playerid, 3.6847);
			SetCameraBehindPlayer(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid,2.5,1263.7209,-751.4987,1164.3887)) {
			if(TI[playerid][tSelectedRoom]+1 != PI[playerid][pRoom]) return SendClientMessage(playerid, COLOR_GREY, "Вы не в своей квартире");
			new string[176];
			format(string,sizeof(string),""P"1. %s"W" двери\n"P"2."W" Продать квартиру\n"P"3."G" Оплатить квартиру\n"P"4."W" Информация",(Apartment[PI[playerid][pRoom]-1][aLock] == 0) ? (""E"Закрыть") : (""GREEN"Открыть"));
			D(playerid,D_APART_MENU_1,DSL,""G"Квартира | "P"Управление",string,"Выбрать","Отмена");
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0, 1702.6691,428.5308,30.6758) || IsPlayerInRangeOfPoint(playerid,1.0, 1693.7095,431.5305,30.6758) ||
				IsPlayerInRangeOfPoint(playerid,1.0, 1704.7219,432.6099,30.6758) || IsPlayerInRangeOfPoint(playerid,1.0, 1708.7975,432.3958,30.6758) ||
				IsPlayerInRangeOfPoint(playerid,1.0, 1714.7260,431.2768,30.6003))
		{
			if(TI[playerid][tBuild] != 3 || TI[playerid][tBuildAtt] == 0) {
				SendClientMessage(playerid, COLOR_GREY, "Вы не работаете сварщиком, либо у Вас нет металла");
				return 1;
			}
			if(GetPVarInt(playerid,"anim_build") == 2) return true;
			JobTempProcess[playerid] = 22;
			TI[playerid][tProcess][0] = 0;
			TI[playerid][tProcess][1] = 10;
			PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
			for(new YN = 0;YN < 3;YN++) {
				TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
			}
			ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,0,0,0,0,1);
			SetPVarInt(playerid,"anim_build",2);
			TogglePlayerControllable(playerid, 0);
			RandomYareNforJOBS(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0, 1701.1293,421.4013,30.6758))
		{
			if(TI[playerid][tBuild] != 3) return true;
			if(TI[playerid][tBuildAtt] == 1) {
				SendClientMessage(playerid, COLOR_GREY, "Вы уже взяли металл, отправляйтесь к стойкам, чтобы их приваривать");
				EnableGPSForPlayer(playerid,1706.0477,429.5244,30.6758);
				return true;
			}
			SetPlayerAttachedObject(playerid, 7, 19843, 6, 0.000000,0.058999,0.005999,-81.199981,-0.599999,0.000000,0.486000,0.422000,0.538000);
			TI[playerid][tBuildAtt] = 1;
			SendClientMessage(playerid, 0xfF5C841ff, "Вы взяли металл. Отправляйтесь к стойкам");
			EnableGPSForPlayer(playerid,1706.0477,429.5244,30.6758);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1725.9937,449.3317,28.4830) && TI[playerid][tBuild] == 1)
		{
			if(PlayerBuildFix[playerid]) return true;
			if(GetPVarInt(playerid,"job_build")) return SendClientMessage(playerid, COLOR_GREY, "Отнесите пакет с мусором в мусорный бак");
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",4.1,1,0,0,1,1, 1);
			SetPVarInt(playerid,"anim_build",1);
			TogglePlayerControllable(playerid, 0);
			PlayerBuildFix[playerid] = 1;
			PlayerBuildExFix[playerid] = unix + 10;
			GameTextForPlayer(playerid, "PACKING", 3000, 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1693.4808,423.1825,30.6758) && TI[playerid][tBuild] == 1)
		{
			if(!GetPVarInt(playerid,"job_build")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет в руках пакета с мусором");
			RemovePlayerAttachedObject(playerid,8);
			EnableGPSForPlayer(playerid,1729.7390,446.4795,27.3652);
			DeletePVar(playerid,"job_build");
			
			if(PI[playerid][pExpJob][0] < 300)
			{
				PI[playerid][pExpJob][0] += 1;
				if(PI[playerid][pExpJob][0] == 300) {
					PI[playerid][pAcsJob][0] = 1;
					SendOk(playerid,"Вы получили новый аксессуар за достижение! "GREEN"(/mm > навыки персонажа > полученные аксессуары)");
					save_acsjob(playerid);
				}
				save_jskill(playerid);
			}
			if(PI[playerid][pExpJob][0] < 300) {
				if(QuestProgress[playerid][2] < 30 && AcceptQuest[playerid][2] != 0) QuestProgress[playerid][2] += 1,save_quest(playerid,2);
				if(QuestProgress[playerid][2] == 30 && AcceptQuest[playerid][2] != 0)
				{
					D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Первые деньги'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
					NextStapQI(playerid,2);
				}
			}
			PI[playerid][pStone] += 1;
			UpdatePlayerData(playerid,"stone",PI[playerid][pStone]);
			TI[playerid][tBuildCount]++;
			switch(PI[playerid][pExpJob][0]) {
			case 0..100: TI[playerid][tJobSalary] += 75;
			case 101..200: TI[playerid][tJobSalary] += 85;
			case 201..500: TI[playerid][tJobSalary] += 95;
			}
			if(PI[playerid][pFamily]) {
				gFamily[PI[playerid][pFamily]-1][famTalon] += 1;
				UpdateFamily(PI[playerid][pFamily],"talon",gFamily[PI[playerid][pFamily]-1][famTalon]);
				PI[playerid][pFamTalon] += 1, UpdatePlayerData(playerid, "talon_fam", PI[playerid][pFamTalon]);
			}
			if(QuestProgress[playerid][51] < 5 && AcceptQuest[playerid][51] != 0) QuestProgress[playerid][51] ++,save_quest(playerid,51);
			if(QuestProgress[playerid][51] == 5 && AcceptQuest[playerid][51] != 0) {
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
			}

			new string[120];
			format(string,sizeof(string),"Всего принесено мешков с мусором: %i. Общий заработок: %i$",TI[playerid][tBuildCount],TI[playerid][tJobSalary]);
			SendClientMessage(playerid, 0xfF5C841ff, string);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1704.5819,419.5714,30.6758) && TI[playerid][tBuild] == 2)
		{
			if(!GetPVarInt(playerid,"job_build")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет в руках мешка с цементом");
			SetPlayerSpecialAction(playerid, 0);
			DeletePVar(playerid,"job_build");
			ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
			RemovePlayerAttachedObject(playerid,8);
			if(PI[playerid][pExpJob][0] < 300) {
				if(QuestProgress[playerid][2] < 30 && AcceptQuest[playerid][2] != 0) QuestProgress[playerid][2] += 1,save_quest(playerid,2);
				if(QuestProgress[playerid][2] == 30 && AcceptQuest[playerid][2] != 0)
				{
					D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Первые деньги'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
					NextStapQI(playerid,2);
				}
			}
			TI[playerid][tBuildCount]++;
			switch(PI[playerid][pExpJob][0]) {
			case 0..100: TI[playerid][tJobSalary] += 75;
			case 101..200: TI[playerid][tJobSalary] += 85;
			case 201..500: TI[playerid][tJobSalary] += 95;
			}
			if(PI[playerid][pFamily]) {
				gFamily[PI[playerid][pFamily]-1][famTalon] += 1;
				UpdateFamily(PI[playerid][pFamily],"talon",gFamily[PI[playerid][pFamily]-1][famTalon]);
				PI[playerid][pFamTalon] += 1, UpdatePlayerData(playerid, "talon_fam", PI[playerid][pFamTalon]);
			}
			PI[playerid][pStone] += 1;
			UpdatePlayerData(playerid,"stone",PI[playerid][pStone]);
			if(PI[playerid][pExpJob][0] < 300)
			{
				PI[playerid][pExpJob][0] += 1;
				if(PI[playerid][pExpJob][0] == 300) {
					PI[playerid][pAcsJob][0] = 1;
					SendOk(playerid,"Вы получили новый аксессуар за достижение! "GREEN"(/mm > навыки персонажа > полученные аксессуары)");
					save_acsjob(playerid);
				}
				save_jskill(playerid);
			}
			new string[120];
			format(string,sizeof(string),"Всего принесено мешков с цементом: %i. Общий заработок: %i$",TI[playerid][tBuildCount],TI[playerid][tJobSalary]);
			SendClientMessage(playerid, 0xfF5C841ff, string);
			EnableGPSForPlayer(playerid,1683.2194,378.8254,30.8809);
		}
		if(PlayerToPoint(1.5,playerid, 1683.2194,378.8254,30.8809) && TI[playerid][tBuild] == 2)
		{
			if(GetPVarInt(playerid,"job_build")) return true;
			SetPVarInt(playerid,"job_build",1); 
			SetPlayerAttachedObject(playerid, 8, 2060, 5, 0.01, 0.1, 0.2, 100, 10, 85);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
			EnableGPSForPlayer(playerid,1704.5819,419.5714,30.6758);
		}
		if(IsPlayerInRangeOfPoint(playerid,2.0, -674.1530,1724.3579,1376.6270))
		{
			new c = GetPlayerVirtualWorld(playerid);
			if(!GetString(PlayerTrailer[c][carOwner], player_name[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Вы не в своем доме на колесах");
			new mes[600];
			format(mes,sizeof(mes),""P"1."W" Наркотики "P"[%d г.]\n"P"2."W" Аптечки "P"[%d шт.]\n"P"3."W" Деньги "P"[$%d]\n"P"4."W" Sniper Rifle "P"[%d пт.]\n"P"5."W" Country Rifle "P"[%d пт.]\n"P"6."W" M4 "P"[%d пт.]\n"P"7."W" AK-47 "P"[%d пт.]\n"P"8."W" MP5 "P"[%d пт.]\n"P"9."W" Shotgun "P"[%d пт.]\n"P"10."W" Desert Eagle "P"[%d пт.]\n"P"11."W" SD Pistol "P"[%d пт.]\n"P"12."W" Baseball Bat "P"[%d шт.]",PlayerTrailer[c][carDrugs], PlayerTrailer[c][carHealth], PlayerTrailer[c][carMoney],
			PlayerTrailer[c][carGun][0],PlayerTrailer[c][carGun][1],PlayerTrailer[c][carGun][2],PlayerTrailer[c][carGun][3],PlayerTrailer[c][carGun][4],PlayerTrailer[c][carGun][5],
			PlayerTrailer[c][carGun][6],PlayerTrailer[c][carGun][7],PlayerTrailer[c][carGun][8]);
			D(playerid,D_SAFE_TRAILER,DSL,""P"Шкаф",mes,"Далее","Отмена");
		}
		if(PI[playerid][pJob] == 6 || IsACop(playerid))
		{
			for(new u = 0; u < MAX_SEWER; u++)
			{
				if(PlayerToPoint(1.0,playerid, Sewer[u][seX],Sewer[u][seY],Sewer[u][seZ]))
				{
					SetPlayerPosAC(playerid, 1470.0083,-110.0135,896.5629, u, 1);
					SetPlayerFacingAngle(playerid,86.1826);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 1);
					SetPlayerVirtualWorld(playerid, u);
					FreezePlayerForTime(playerid,3);
					SetPVarInt(playerid,"id_kanal", u+1);
					break;
				}
			}
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0,1471.5419,-109.9710,896.5629))
		{
			new u = GetPVarInt(playerid,"id_kanal") - 1;
			SetPlayerPosAC(playerid, Sewer[u][seX],Sewer[u][seY],Sewer[u][seZ], 0, 0);
			DeletePVar(playerid,"id_kanal");
		}
		if(IsPlayerInRangeOfPoint(playerid,1.0,1465.0834,-101.0406,895.9769) || IsPlayerInRangeOfPoint(playerid,1.0,1465.3014,-109.6158,895.9769) ||
				IsPlayerInRangeOfPoint(playerid,1.0,1465.2758,-113.7661,895.9769) || IsPlayerInRangeOfPoint(playerid,1.0,1465.0853,-118.6356,895.9769))
		{
			new u = GetPVarInt(playerid,"id_kanal") - 1;
			if(GetPVarInt(playerid,"_musor")) return SendClientMessage(playerid, COLOR_GREY, "Вы уже собрали мусор, отнесите его в рабочую машину");
			if(Sewer[u][seAmmout] == 0) return SendClientMessage(playerid, COLOR_GREY, "В этой канализации нет мусора");
			if(GetPlayerSkin(playerid) != 8) return SendClientMessage(playerid, COLOR_GREY, "Вы не переодеты в рабочую одежду");
			JobTempProcess[playerid] = 21;
			TI[playerid][tProcess][0] = 0;
			TI[playerid][tProcess][1] = 6;
			PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
			for(new YN = 0;YN < 3;YN++) {
				TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
			}
			RandomYareNforJOBS(playerid);
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",4.1,1,0,0,1,1, 1);
			return true;
		}
		for(new i = 0; i < MAX_CONTAINER; i++)
		{ 
			if(PlayerToPoint(1.0,playerid,gContainer[i][cX],gContainer[i][cY],gContainer[i][cZ]))
			{
				if(conteiner[i] == 0)
				{
    				switch(gContainer[i][cClass])
				    {
				        case 5:
				        {
		                    new str[46];
							strcat(str, ""W"Наименование\t"W"Параметр\n");
							STRING_GLOBAL[0] = 0;
							format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%sПосмотреть возможный выигрыш\t[{F9C7A1} Посмотреть"W" ]\nКласс контейнера\t[{F9C7A1} %s"W" ]\n\
							Начальная ставка\t%d rub\nПоследняя ставка\t%d rub\n"ORANGE"Участвовать в аукционе",str, gContainer[i][cName], gContainer[i][cMoney], gContainer[i][cStavka]);
							D(playerid,D_CONTAINER,DSTH, ""P"Контейнер",STRING_GLOBAL,"Выбрать","Закрыть");
							SetPVarInt(playerid,"container",i+1);
							return true;
                        }
			         	default:
			 			{
						 	new str[46];
							strcat(str, ""W"Наименование\t"W"Параметр\n");
							STRING_GLOBAL[0] = 0;
							format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%sПосмотреть возможный выигрыш\t[{F9C7A1} Посмотреть"W" ]\nКласс контейнера\t[{F9C7A1} %s"W" ]\n\
							Начальная ставка\t%d$\nПоследняя ставка\t%d$\n"ORANGE"Участвовать в аукционе",str, gContainer[i][cName], gContainer[i][cMoney], gContainer[i][cStavka]);
							D(playerid,D_CONTAINER,DSTH, ""P"Контейнер",STRING_GLOBAL,"Выбрать","Закрыть");
							SetPVarInt(playerid,"container",i+1);
							return true;
						}
					}
				}
				if(conteiner[i] == 1)
				{
				    switch(gContainer[i][cClass])
				    {
				        case 5:
				        {
				            if(!strcmp(player_name[playerid], gContainer[i][cOwned], true))
							{
								if(PI[playerid][pRouble] < gContainer[i][cStavka]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
								PI[playerid][pRouble] -= gContainer[i][cStavka];
								UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
								new str[250];
								format(str, sizeof(str), "[Банковский чек]: Было списано с вашего счёта -%d rub за контейнер!");
								SendClientMessage(playerid, COLOR_GREY, str);
								container_win(playerid, i);
								conteiner[i] = 2;
								strmid(gContainer[i][cOwned], "None", 0, 30);
								PI[playerid][pEvent] += 1;
							    UpdatePlayerData(playerid,"event",PI[playerid][pEvent]);
								return true;
							}
							else SendClientMessage(playerid, COLOR_GREY, "Вы не владелец контейнера!");
				        }
			         	default:{
                            if(!strcmp(player_name[playerid], gContainer[i][cOwned], true))
							{
								if(PI[playerid][pCash] < gContainer[i][cStavka]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
								GiveMoney(playerid, -gContainer[i][cStavka], "борьба за контейнер");
								container_win(playerid, i);
								conteiner[i] = 2;
								strmid(gContainer[i][cOwned], "None", 0, 30);
								PI[playerid][pEvent] += 1;
							    UpdatePlayerData(playerid,"event",PI[playerid][pEvent]);
								return true;
							}
							else SendClientMessage(playerid, COLOR_GREY, "Вы не владелец контейнера!");
						}
						
					}
				}
				if(conteiner[i] == 2) SendClientMessage(playerid, COLOR_GREY, "Аукцион закрыт!");
			}
		}
		for(new i = 0; i <MAX_MARKET; i++) {
			if(PlayerToPoint(2.0,playerid, Market[i][m_x], Market[i][m_y], Market[i][m_z]))
			{
				SetPVarInt(playerid,"p_id",i);
				if(PI[playerid][pPalatka] == Market[i][m_id])
				{
					D(playerid, D_MARKET_PLAYER_2, DSL, ""P"Прилавок", ""P"1."W" Выставить товар на продажу\n"P"2."W" Убрать товар с продажи\n"P"3."W" Завершить аренду прилавка", "Далее", "Закрыть");
					return true;
				}
				if(!strcmp(Market[i][m_owner], "None", true))
				{
					if(PI[playerid][pPalatka] != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже арендуете палатку");
					D(playerid, D_MARKETS, DSI, ""P"Аренда", ""W"Введите время аренды палатки "G"(от 1 минуты до 240 минут)\n"W"Стоимость аренды палатки составляет "P"250$/мин", "Далее", "Закрыть");
				}
				else
				{
					new string[220];
					mysql_format(connects, string, sizeof(string),"SELECT * FROM `market` WHERE `Name` = '%s' LIMIT 5",Market[i][m_owner]);
					mysql_tquery(connects, string, "GetMarket", "d", playerid);
				}
			}
		}
		if(IsPlayerInRangeOfPoint(playerid,7.0, -77.4767,-3.2097,3.1094)) {
			for(new g=0; g<MAX_EGG; g++) {
				if(!PlayerToPoint(1.0,playerid,Egg[g][gX],Egg[g][gY],Egg[g][gZ])) continue;
				if(GetPVarInt(playerid,"egg_start") == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не начинали работу на ферме");
				if(PlayerEgg[playerid] == g) return pc_cmd_egmenu(playerid,"");
				if(PlayerEgg[playerid] >= 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже заняли курятник");
				if(!strcmp(Egg[g][gName],"None")) {
					PlayerEgg[playerid] = g;
					strmid(Egg[g][gName], player_name[playerid], 0, strlen(player_name[playerid]),24);
					D(playerid,DIALOG_NONE,DSM, ""P"Курятник",""ORANGE"Вы начали ухаживать за курицами в курятнике\n\n"W"Ваша задача кормить куриц, и собирать снесеные яица.\nКаждое яйцо сносится за одну минуту\n\nУправление:"P" /egmenu","Закрыть","");
					EggUpdate(playerid);
				}
				else {
					SendClientMessage(playerid, COLOR_GREY, "Этот курятник занят");
				}
				return true;
			}
		}
		if(PlayerToPoint(1.5,playerid,-85.2639,-0.8936,3.1172))
		{
			if(GetPVarInt(playerid,"egg_start") == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не начинали работу на ферме");
			if(PlayerEgg[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не занимали курятник");
			if(PlayerKorm[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже взяли корм, покормите куриц");
			PlayerKorm[playerid] = 1;
			SendOk(playerid,"Покормите теперь куриц");
			SetPlayerAttachedObject(playerid, 8, 19562, 6, 0.513000,-0.008999,0.079000, 0.000000,-98.500015,0.899999, 1.000000,1.000000,1.000000);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, 2303.5725,-1984.2985,13.5764)) {//наркобот
			static const f_str[] = ""W"Укажите количество наркотиков для покупки:\n\n\
				"O"Примечание:"W"\n\
				\tСтоимость "P"1г"W" наркотиков: "GREEN"$%d"W"\n\
				\tДоступно грамм на складе: "P"%d"W"";
			new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];
			format(string,sizeof(string),f_str,black_prods[5],black_prods[1]);
			D(playerid,D_MARKET_NARKO,DSI, ""P"Покупка наркотиков", string, "Купить", "Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, 2303.5745,-1988.9795,13.5729)) {//армоур
			D(playerid,D_MARKET,DSL, ""P"Черный рынок", ""P"1."W" Бронежилет\n"P"2."W" Армейская форма", "Выбрать", "Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, 2303.6292,-1993.4894,13.5696)) {//материалы
			static const f_str[] = ""W"Укажите количество материалов для покупки:\n\n\
				"O"Примечание:"W"\n\
				\tСтоимость "P"1"W" материала: "GREEN"$%d"W"\n\
				\tДоступно материалов на складе: "P"%d"W"";
			new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];
			format(string,sizeof(string),f_str,black_prods[6],black_prods[2]);
			D(playerid, D_MARKET_GUN, DSI, ""P"Покупка оружия",string, "Купить", "Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, 2304.7039,-1997.4758,13.5545)) {//бот скупка
			D(playerid,D_MARKET_BUY,DSL, ""P"Черный рынок [СКУПКА]", ""P"1."W" Бронежилет\n"P"2."W" Армейская форма\n"P"3."W" Наркотики\n"P"4."W" Материалы", "Выбрать", "Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, 2360.9939,-2007.8639,13.5537)) {
			if(PI[playerid][pLevel] < 3) return SendBotMessage(playerid,"Ты еще совсем мал, подработать можно с 3 лет в штате");
			if(!IsAGang(playerid)) return SendBotMessage(playerid,"Не на тот район зашёл, вали-ка отсюда");
			if(rob_veh[playerid] != INVALID_VEHICLE_ID) return SendBotMessage(playerid,"Ты уже брал тачку, вали-ка отсюда");
			D(playerid,D_ROB_CAR,DSM, ""P"Ограбление домов", "\n\n"W"Ты действительно хочешь грабить дома?\n\n", "Да", "Нет");
		}
		else if(IsAGang(playerid) && IsPlayerInDynamicArea(playerid,gAreas[arZavodSklad])) {
			if(GetPVarInt(playerid,"carrygun")) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть ящик с боеприпасами");
			if(zavodsklad < 500) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно боеприпасов");
			if(!GetPVarInt(playerid,"carrygun")) {
				zavodsklad -= 500;
				SetPlayerFacingAngle(playerid,270.0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
				SetTimerEx("CarryDelay",1000,false,"i",playerid);
				SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				SetPVarInt(playerid,"carrygun",1);
				InLoadFrac[PI[playerid][pMember]] = false;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.7, 1050.3049,2313.1973,10.6818)) {
			if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не мафиози");
			static const f_str[] = ""W"Стоимость "P"10.000"W" материалов: "GREEN"$%d"W"\n\
									Доступно материалов на складе мафии: "P"%d"W"\n\n\
									"YELLOW"Вы действительно хотите купить "P"10.000"YELLOW" материалов за "GREEN"$%d?";
			new string[sizeof(f_str) +1 + (-2 +6) + (-2 + 7) + (-2 + 7)];

			format(string,sizeof(string),f_str,50000,FI[PI[playerid][pMember]][fMats],50000);
			D(playerid, D_MATERIALS_BUY, DSM, ""P"Покупка материалов",string, "Купить", "Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.7, 329.3237,1118.7214,1083.8903)) {
			if(!IsAMafia(playerid) && !IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не мафиози/бандит");
			new str[112];
			format(str,sizeof(str),"1. Купить наркотики [1 г ="GREEN" %d$"W"]\n2. Заказать наркотики\n3. Информация\n4. Управление притоном",gBusiness[56][bizzPrice]);
			D(playerid,DIALOG_PRITON,DSL, ""P"Наркопритон", str, "Выбрать", "Отмена");
		}
		else if(PlayerToPoint(2.5,playerid,1763.3773,-1906.7416,13.5880))
		{
			new mas[14] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14},num=0, string[750];
			new skr[750];
			for(new i;i < 14;i++) {
				if(AcceptQuest[playerid][mas[i]]==0) skr = ""GREEN"Активный"W"";
				else if(QuestProgress[playerid][mas[i]] == 100) skr = ""NO"Выполнено"W"";
				else if(QuestProgress[playerid][mas[i]] == QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = ""ORANGE"Можно завершить"W"";
				else if(QuestProgress[playerid][mas[i]] >= 0 && AcceptQuest[playerid][mas[i]] != 0) skr = ""G"В процессе"W"";

				format(string,sizeof(string),"%s%s [%s]\n",string,QI[mas[i]][QuestName],skr);
				QuestShow[playerid][num] = mas[i];
				num++;
			}
			D(playerid,D_QUEST,DSL,""P"Квесты",string,"Выбрать","Отмена");
		}
		else if(PlayerToPoint(1.5, playerid, 2493.9104,-1464.7085,24.0253)) { // автоугон D_THEFT
			if(PI[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Автоугон доступен с 3-го уровня");
			D(playerid, D_THEFT, DSL, ""P"Автоугон",""P"1."W" Взять заказ\n"P"2."W" Информация", "Выбрать", "Отмена");
		}
		else if(PlayerToPoint(1.5,playerid,1359.5322,1065.0143,1626.4896) && IsACop(playerid) && start_work[playerid]) {//пд вход в регистратуру
			SetPlayerPosAC(playerid,1357.0570,1068.3199,1626.4896,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
			SetPlayerFacingAngle(playerid,269.8491);
			SetCameraBehindPlayer(playerid);
		}
		else if(PlayerToPoint(1.5,playerid,1356.3823,1068.3185,1626.4896) && IsACop(playerid) && start_work[playerid]) {//пд вход в регистратуру
			SetPlayerPosAC(playerid,1360.2255,1065.2034,1626.4896,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
			SetPlayerFacingAngle(playerid,295.5193);
			SetCameraBehindPlayer(playerid);
		}
		else if(PlayerToPoint(1.5, playerid, 539.3405,-4785.8008,2.0859)) // аренда яхт
		{
			D(playerid,D_YAXTA,DSTH,""P"Аренда водного транспорта",""W"Название лодки\t"W"Класс\t"W"Стоимость\n1. Squallo\tЭконом\t5000$\n2. Speeder\tЭконом\t7500$\n3. Tropic\tЭконом\t8000$\n4. Coastguard\tЭконом\t8000$\n\
			5. Dinghy\tЭконом\t7500$\n6. Jetmax\tЭконом\t12000$","Выбрать","Закрыть");
		}
		else if(PlayerToPoint(1.5,playerid,2057.5798,-1897.5746,13.5538))
		{
			D(playerid,D_DUEL,DSL,""P"Дуэли",""P"1."W" Доступные лобби\n"P"2."W" Создать комнату","Выбрать","Отмена");
		}
		else if(PlayerToPoint(1.5,playerid,731.8904,-1271.1938,13.6430) || PlayerToPoint(1.5,playerid,1303.3101,-805.6438,84.1406) ||
				PlayerToPoint(1.5,playerid,680.3801,-462.4668,16.2080)) {// квесты мафиям
			if((PlayerToPoint(1.5,playerid,1303.3101,-805.6438,84.1406) && PI[playerid][pMember] != fRM) || (PlayerToPoint(1.5,playerid,731.8904,-1271.1938,13.6430) && PI[playerid][pMember] != fYAKUZA) ||
					(PlayerToPoint(1.5,playerid,680.3801,-462.4668,16.2080) && PI[playerid][pMember] != fLCN)) return SendBotMessage(playerid,"Не на тот район зашёл, вали-ка отсюда");
			new mas[7] = {25,26,27,28,29,30,31},num=0,string[350];
			new skr[170];
			string = ""W"Задание\t"W"Статус\n";
			for(new i;i<7;i++) {
				if(AcceptQuest[playerid][mas[i]]==0) skr = "\t"GREEN"Доступно"W"";
				else if(QuestProgress[playerid][mas[i]] == 100) skr = "\t"NO"Выполнено"W"";
				else if(QuestProgress[playerid][mas[i]] == QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = "\t"ORANGE"Можно завершить"W"";
				else if(QuestProgress[playerid][mas[i]] >= 0 && AcceptQuest[playerid][mas[i]] != 0) skr = "\t"G"В процессе"W"";

				format(string,sizeof(string),"%s%s%s\n",string,QI[mas[i]][QuestName],skr);
				QuestShow[playerid][num] = mas[i];
				num++;
			}
			D(playerid,D_QUEST_MAFIA,DSTH,""P"Квесты",string,"Выбрать","Отмена");
		}
		else if(TI[playerid][tInHouse]) {
			new houseid = TI[playerid][tSelectHouse];
			new hint = gHouses[houseid][houseHint];
			new Float:x, Float:y, Float:z;
			x = hinterior_info[hint][h_pos_exit][0];
			y = hinterior_info[hint][h_pos_exit][1];
			z = hinterior_info[hint][h_pos_exit][2];
			if(IsPlayerInRangeOfPoint(playerid,2.0,x,y,z)) {
				if(gHouses[houseid][houseImprove][0]) {
					pc_cmd_exit(playerid);
				}
				else SendClientMessage(playerid, COLOR_WHITE, "Улучшение:"G" 'Автоматические двери'"W" не установлено. Для выхода используйте:"P" /exit");
			}
		}
		else if(PI[playerid][pMember] == fFBI) {
			for(new i = GetVehiclePoolSize()+1; --i != 0;) {
				if(VehicleInfo[i][vTeam] == fFBI) {
					new Float:X,Float:Y,Float:Z;
					GetVehicleShiftPos(i,1,X,Y,Z,3.0);

					if(IsPlayerInRangeOfPoint(playerid,3,X,Y,Z)) {
						new string[256];
						SetPVarInt(playerid,"veh", i);
						string = "Название\tК-во"W"\n";
						format(string,sizeof(string), "%sЖучок\t{CFFF4D}1\n",string);
						D(playerid,D_TIPSTER,DSTH,"{ffff00}Багажник", string, "Взять", "Закрыть");
						GetVehicleParamsEx(i,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(i,engine,lights,alarm,doors,bonnet,true,objective);
						break;
					}
				}
			}
		}
		for(new i=0;i<MAX_DROP_GUNS;i++) {
			if(drop_gun[i][dg_object] == -1) continue;
			if(drop_gun[i][dg_time] < 1) continue;
			new Float:x, Float:y, Float:z;
			GetDynamicObjectPos(drop_gun[i][dg_object], x,y,z);
			if(!PlayerToPoint(1.5,playerid,x,y,z)) continue;
			DestroyDynamicObject(drop_gun[i][dg_object]);
			drop_gun[i][dg_object]=-1;
			if(drop_gun[i][dg_text] != Text3D:-1) {
				Delete3DTextLabel(drop_gun[i][dg_text]);
				drop_gun[i][dg_text] = Text3D:-1;
			}
			GivePlayerWeapon(playerid ,drop_gun[i][dg_gun],drop_gun[i][dg_ammo]);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0,0);
			MeAction(playerid,"подобрал(а) оружие");
		}
		if(GetNearestATM(playerid) != -1) {
			if(GetPVarInt(playerid,"unload_atm"))
			{
				new id_atm = GetNearestATM(playerid);
				if(ATMData[id_atm][atm_cash]+1000 > 500000) return SendClientMessage(playerid,COLOR_GREY,"В банкомате нет свободного места");
				if(PI[playerid][pFamily]) {
					gFamily[PI[playerid][pFamily]-1][famTalon] += 2;
					UpdateFamily(PI[playerid][pFamily],"talon",gFamily[PI[playerid][pFamily]-1][famTalon]);
					PI[playerid][pFamTalon] += 1, UpdatePlayerData(playerid, "talon_fam", PI[playerid][pFamTalon]);
				}
				if(PI[playerid][pExpJob][3] < 500)
				{
					PI[playerid][pExpJob][3] += 1;
					if(PI[playerid][pExpJob][3] == 500) {
						PI[playerid][pAcsJob][3] = 1;
						SendOk(playerid,"Вы получили новый аксессуар за достижение! "GREEN"(/mm > навыки персонажа > полученные аксессуары)");
						save_acsjob(playerid);
					}
					save_jskill(playerid);
				}
				RemovePlayerAttachedObject(playerid,5);
				GiveMoney(playerid, 700, "инкасация");
				DeletePVar(playerid,"unload_atm");
				ATMData[id_atm][atm_cash] += 1000;
				if(ATMData[id_atm][atm_cash] > 500000) {
					ATMData[id_atm][atm_cash] = 500000;
					return true;
				}
				UpdateATMLabel(id_atm);
				new query[128];
				mysql_format(connects, query, sizeof(query),"UPDATE `atms` SET `cash` = '%d' WHERE `ID` = '%d'", ATMData[id_atm][atm_cash], id_atm);
				mysql_tquery(connects, query);
				return true;
			}
			ShowATMMenu(playerid);
		}
  		new i = GetPVarInt(playerid, "BuyGarage");
		if(IsPlayerInRangeOfPoint(playerid, 1.0, FG[i][posX],FG[i][posY],FG[i][posZ]))
		{
		    if(!GetPVarInt(playerid, "BuyGarage")) return SendClientMessage(playerid, COLOR_GREY, "У вас нет гаража!");
		    if(FG[i][gOwnerID] != PI[playerid][pID]) return SendClientMessage(playerid, COLOR_GREY, "Это не ваш гараж!");
		    JobTempProcess[playerid] = 28;
			TI[playerid][tProcess][0] = 0;
			TI[playerid][tProcess][1] = 10;
			PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
			for(new YN = 0;YN < 3;YN++) {
				TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
			}
			RandomYareNforJOBS(playerid);
		}
	    
	}
	if(newkeys & KEY_JUMP) {
		
		if(IsPlayerInRangeOfPoint(playerid,50,2072.4404,1710.0946,1113.7882)) ClearAnimations(playerid);
		if(GetPlayerInterior(playerid) == 5 && GetPlayerVirtualWorld(playerid) == 76) ClearAnimations(playerid);
		if(PI[playerid][pSatiety] < 25 && !IsPlayerInAnyVehicle(playerid)) {
			
			ClearAnimations(playerid);
			if(GetPVarInt(playerid,"AntiFloodH") > gettime()) return 1;
			SetPVarInt(playerid,"AntiFloodH",gettime() + 300);
			SendClientMessage(playerid,COLOR_YELLOW,"Вы проголодались...");
		}
	}
	/*if(newkeys & KEY_JUMP && newkeys & KEY_SPRINT) {
		if(!IsPlayerInAnyVehicle(playerid)) {
			new index = GetPlayerAnimationIndex(playerid);
			if(index == 1224 || index == 1247 || index == 1257 || index == 1249 || index == 1196 || index == 1249) {
				if(!TI[playerid][tCuffed] && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					if(GetPVarInt(playerid,"anti_sbiv_time") < unix && !TI[playerid][tTazer] && !TI[playerid][tCuffedTime] && !IsAGang(playerid) && GetPVarInt(playerid,"Animation") == 0) {
						new keys,ud,lr;
						GetPlayerKeys(playerid,keys,ud,lr);
						if(ud != 0 || lr != 0) ClearAnimations(playerid);
					}
				}
			}
		}
	}*/
	if(PRESSED(KEY_NO)) {
	    if(IsPlayerInRangeOfPoint(playerid, 5, 1543.4821, -1627.3247, 13.4028))
        {
            if(!IsPlayerInAnyVehicle(playerid)) return 1;
            if(!IsACop(playerid)) return 1;
			if(GetPVarInt(playerid, "AntiFloods") > gettime()) return SendClientMessage(playerid, -1, "Не флудите");
			SetPVarInt(playerid, "AntiFloods", gettime() + 15);
			MoveDynamicObject(gateopen[0], 1543.5525, -1621.7532, 13.4028, 3.0);
			SetTimer("GateOpen", 1000*15, false);
			SendClientMessage(playerid, COLOR_WHITE, "Через 15 секунд ворота закроются!");
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1269.723510, -913.950134, 43.448936))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return 1;
            if(PI[playerid][pMember] != fLCN) return 1;
			if(GetPVarInt(playerid, "AntiFloods") > gettime()) return SendClientMessage(playerid, -1, "Не флудите");
			SetPVarInt(playerid, "AntiFloods", gettime() + 15);
			MoveDynamicObject(gateopen[2], 1269.723510, -913.950134, 30.448936, 3.0);
			SetTimer("LCNgate", 1000*15, false);
			SendClientMessage(playerid, COLOR_WHITE, "Через 15 секунд ворота закроются!");
			return 1;
		}
 		if(GetPVarInt(playerid,"tk_id"))
		{
			DeletePVar(playerid,"tk_id");
			SendClientMessage(playerid, COLOR_GREY, "Вы успешно отказались от предложения!");
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid,1.5, 2752.4421,-2471.4094,13.6484))
		{
			if(PI[playerid][pMember] == fARMYLS) {
				new gunamount = GetPVarInt(playerid,"carrygun")*500;
				if(gunamount) {
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(FI[fARMYLS][fMats] + gunamount > 1000000) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно места");
					else FI[fARMYLS][fMats] += gunamount;
					InLoadFrac[PI[playerid][pMember]] = false;
				}
			}
		}
		if(TI[playerid][tProcess][0] != -1) {
			if(GetPVarInt(playerid,"Klavisha") == 131072) MyButtonSystem(playerid);
			else {
				TI[playerid][tProcess][0] += -(3*(10/TI[playerid][tProcess][1]));
				RandomYareNforJOBS(playerid);
			}
			return true;
		}
		else key_dectivate(playerid);
	}
	if(PRESSED(KEY_YES)) {
		if(IsPlayerInRangeOfPoint(playerid,1.5, 2752.4421,-2471.4094,13.6484))
		{
			if((IsAGang(playerid) || IsAMafia(playerid) || PI[playerid][pMember] == fARMYLS)) {
				if(GetPVarInt(playerid,"carrygun")) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть ящик с боеприпасами");
				if(FI[fARMYLS][fMats] < 500) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно боеприпасов");
				if(!GetPVarInt(playerid,"carrygun")) {
					FI[fARMYLS][fMats] -= 500;
					SetPlayerFacingAngle(playerid,270.0);
					ClearAnimations(playerid);
					ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
					SetTimerEx("CarryDelay",1000,false,"i",playerid);
					SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
					SetPVarInt(playerid,"carrygun",1);
					SetPVarInt(playerid,"use_mats",2);
				}
				SetPVarInt(playerid,"carrygun",1);
				ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
				SetTimerEx("CarryDelay",1000,false,"i",playerid);
				SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				return true;
			}
		}
		if(!active_accept(playerid) && GetPVarInt(playerid,"invstat") == -1 && JobTempProcess[playerid] == 0 && TI[playerid][tProcess][0] == -1) pc_cmd_inv(playerid);
		if(TI[playerid][tProcess][0] != -1) {
			if(GetPVarInt(playerid,"Klavisha") == 65536) MyButtonSystem(playerid);
			else {
				TI[playerid][tProcess][0] += -(3*(10/TI[playerid][tProcess][1]));
				RandomYareNforJOBS(playerid);
			}
			return true;
		}
		else key_activate(playerid);
	}
	if(PRESSED(KEY_SECONDARY_ATTACK)) {
		if(Casino_Flag[playerid][select_casino_table] == -1) {
			for(new c = 0; c < MAX_TABLES_DICE; c++) {
				if(IsPlayerInDynamicArea(playerid, InfoDice[c][dice_area])) {
					if(InfoDice[c][dice_game_start] == true) return SendClientMessage(playerid, COLOR_GREY, "Данная партия уже играется");
					if(Casino_Flag[playerid][casino_crup] == 1) {
						if(InfoDice[c][dice_crup]!=INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Тут уже есть крупье");
						InfoDice[c][dice_crup] = playerid;
					}
					else {
						new bool:check_played=false;
						for(new i = 0;i<5;i++) {
							if(InfoDice[c][dice_gamer][i] == INVALID_PLAYER_ID) {
								InfoDice[c][dice_gamer][i] = playerid;
								check_played = true;
								break;
							}
						}
						if(!check_played) return SendClientMessage(playerid, COLOR_GREY, "Максимум игроков: (5)");
					}
					Casino_Flag[playerid][select_casino_table] = c;
					ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
					UpdateTextCasino(c);
					break;
				}
			}
		}
	}
	if(IsPlayerInAnyVehicle(playerid)) {
		new carid = GetPlayerVehicleID(playerid);
		new model = (GetVehicleModel(carid)-400);
		if(GetPlayerState(playerid) == 2) {
			if(!IsAPlane(carid) && !IsABoat(carid) && !IsABike(carid) && !IsAVelik(carid) && GetEngineStat(carid))  {
				if(PRESSED(KEY_NUM4)) {
					DestroyDynamicObject(LightsObject[carid][0]);
					DestroyDynamicObject(LightsObject[carid][1]);
					LightsObject[carid][0] = -1;
					LightsObject[carid][1] = -1;
					if(Signal[carid] == 1) {
						SignalTick[carid][0] = 0;
						SignalTick[carid][1] = -1;
						Signal[carid] = 0;
						SetPlayerChatBubble(playerid, "выключил(а) левый поворотник", COLOR_PURPLE, 30.0, 5000);
					}
					else {
						LightsObject[carid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
						LightsObject[carid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
						AttachDynamicObjectToVehicle(LightsObject[carid][0], carid, -LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
						AttachDynamicObjectToVehicle(LightsObject[carid][1], carid, -LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
						GetVehicleZAngle(carid, SignalAngle[carid]);
						SignalTick[carid][0] = 0;
						SignalTick[carid][1] = -1;
						Signal[carid] = 1;
						SetPlayerChatBubble(playerid, "включил(а) левый поворотник", COLOR_PURPLE, 30.0, 5000);
					}
					return true;
				}
				else if(PRESSED(KEY_NUM6)) {
					DestroyDynamicObject(LightsObject[carid][0]);
					DestroyDynamicObject(LightsObject[carid][1]);
					LightsObject[carid][0] = -1;
					LightsObject[carid][1] = -1;
					if(Signal[carid] == 2) {
						SignalTick[carid][0] = 0;
						SignalTick[carid][1] = -1;
						Signal[carid] = 0;
						SetPlayerChatBubble(playerid, "выключил(а) правый поворотник", COLOR_PURPLE, 30.0, 5000);
					}
					else {
						LightsObject[carid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
						LightsObject[carid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
						AttachDynamicObjectToVehicle(LightsObject[carid][0], carid, LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
						AttachDynamicObjectToVehicle(LightsObject[carid][1], carid, LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
						GetVehicleZAngle(carid, SignalAngle[carid]);
						SignalTick[carid][0] = 0;
						SignalTick[carid][1] = -1;
						Signal[carid] = 2;
						SetPlayerChatBubble(playerid, "включил(а) правый поворотник", COLOR_PURPLE, 30.0, 5000);
					}
					return true;
				}
			}
		} 
		if((newkeys & 1 && !(oldkeys & 1)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) pc_cmd_l(playerid,"");
		if(PRESSED(KEY_NO) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) pc_cmd_e(playerid,"");
	}
	if(hacker_OnPlayerKeyStateChange(playerid, newkeys, oldkeys)) return 1;
	time_newkeys = GetTickCount() - tickcount1;
	if(time_newkeys > time_newkeys_max) time_newkeys_max = time_newkeys;
	return true;
}
public OnVehicleStreamIn(vehicleid, forplayerid) {
	if(!IsValidVehicle(vehicleid)) return 1;
	GetVehiclePos(vehicleid, VehicleInfo[vehicleid][veX], VehicleInfo[vehicleid][veY], VehicleInfo[vehicleid][veZ]);
	GetVehicleZAngle(vehicleid, VehicleInfo[vehicleid][veA]);
	return 1;
}
public OnVehicleStreamOut(vehicleid, forplayerid) {
	return 1;
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source) {
	return false;
}
stock CarLic(carid) {
	switch (GetVehicleModel(carid)) {
	case 400..416,418..424,426..429,431..445,449,451,455,456,458,459,461: return true;
	case 463,466..468,470,471,474,475,477..480,482,483,485,486,489..492,494..496,498..508: return true;
	case 514..518,521..531,533..537,539..547,549..551,554..562,564..568,572..576,578..583,585..589,596..605,609: return true;
	}
	return false;
}
CB: PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y) {
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return true;
	return false;
}
CB: PlayerToKvadratGhetto(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y) {
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x*2 && xxp >= min_x*2) && (yyp <= max_y*2 && yyp >= min_y*2)) return true;
	return false;
}
stock GetNearestVehicle(playerid) {
	new Float:X,Float:Y,Float:Z;
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		GetVehiclePos(i,X,Y,Z);
		if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z)) return i;
	}
	return 0;
}
public OnVehicleDeath(vehicleid, killerid) {
	if(killerid != INVALID_PLAYER_ID && !IsPlayerConnected(killerid)) return 0;
	if(GetArendCarID(vehicleid) != -1) {
		new playerid = ArendInfo[GetArendCarID(vehicleid)][aPlayerID];
		ArendInfo[GetArendCarID(vehicleid)][aPlayerID] = INVALID_PLAYER_ID;
		VehicleInfo[vehicleid][vFuel] = gTransport[GetVehicleModel(vehicleid-400)][trTank];
		if(IsPlayerConnected(playerid) && TI[playerid][tArendKey] == GetArendCarID(vehicleid)) {
			SendClientMessage(playerid, COLOR_LIGHTRED, "Транспорт, который вы арендовали, был уничтожен. Контракт расторгнут");
			TI[playerid][tArendKey] = -1;
		}
	}
	if(VehicleInfo[vehicleid][vBizz] > 0) {
		for(new i; i < 20; i ++) {
			if(FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCars][i] != vehicleid) continue;
			new bizz = VehicleInfo[vehicleid][vBizz];
			ChangeVehicleColor(vehicleid,color_td[FuncBizz[bizz][funcbColor]][col_car],color_td[FuncBizz[bizz][funcbColor]][col_car]);
		}
	}
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(vehicleid == Trailer_job[i]) {
			A_DestroyVehicle(Trailer_job[i]);
			Trailer_job[i] = INVALID_VEHICLE_ID;
			DeletePVar(i,"count_prod2");
			DeletePVar(i,"count_prod");
			DeletePVar(i,"attach_trailer");
		}
		if(vehicleid == rob_veh[i]) {
			leave_robhouse(i);
		}
		if(vehicleid == TK_Trailer[i])
		{
			A_DestroyVehicle(TK_Trailer[i]);
			TK_Trailer[i] = INVALID_VEHICLE_ID;
			TI[i][tTrucker][1] = 0;
			TI[i][tTrucker][0] = 0;
			Delete3DTextLabel(Gruz[i]);
			SendClientMessage(i,COLOR_GREY,"Груз отбуксирован на склад");
		}
		else if(vehicleid == car_autoschool[i]) {
			SetPlayerPosAC(i,9.5551,-84.9727,1026.4089,5,3, true);
			SetPlayerFacingAngle(i, 90.8821);
			FreezePlayerForTime(i,2);
			A_DestroyVehicle(car_autoschool[i]);
			car_autoschool[i] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(i);
			SendClientMessage(i,COLOR_GREY,"Экзамен завален");
			TI[i][tAutoSchool] = 0;
			DeletePVar(i,"LessonSlotMav");
			DeletePVar(i,"LessonSlotBoat");
		}
	}
	//SetVehicleToRespawn(vehicleid);
	return true;
}
public OnVehicleSpawn(vehicleid) {
	VehicleInfo[vehicleid][vPlayer] = -1;
	SetVehicleParamsEx(vehicleid,false,false,false,false,false,false,false);
	if(GetArendCarID(vehicleid) != -1) {
		new playerid = ArendInfo[GetArendCarID(vehicleid)][aPlayerID];
		VehicleInfo[vehicleid][vFuel] = gTransport[GetVehicleModel(vehicleid-400)][trTank];
		ArendInfo[GetArendCarID(vehicleid)][aPlayerID] = INVALID_PLAYER_ID;
		if(IsPlayerConnected(playerid) && TI[playerid][tArendKey] == GetArendCarID(vehicleid)) {
			SendClientMessage(playerid, COLOR_LIGHTRED, "Транспорт, который вы арендовали, был заспавнен. Контракт расторгнут");
			TI[playerid][tArendKey] = -1;
		}
	}
	if(VehicleInfo[vehicleid][vBizz] > 0) {
		for(new i; i < 20; i ++) {
			if(FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCars][i] != vehicleid) continue;
			new bizz = VehicleInfo[vehicleid][vBizz];
			ChangeVehicleColor(vehicleid,color_td[FuncBizz[bizz][funcbColor]][col_car],color_td[FuncBizz[bizz][funcbColor]][col_car]);
		}
	}
	if(VehicleInfo[vehicleid][vType] == VEHICLE_TYPE_FAMILY)
	{
		new fam = VehicleInfo[vehicleid][vFamily]-1;
		LoadFamilyTuning(fam, vehicleid, VehicleInfo[vehicleid][vFslot]);
		ChangeVehicleColor(vehicleid, VehicleInfo[vehicleid][vColor][0], VehicleInfo[vehicleid][vColor][1]);
	}
	if (VehicleInfo[vehicleid][vType] == VEHICLE_TYPE_DNK) {
		VehicleInfo[vehicleid][vFuel] = gTransport[GetVehicleModel(vehicleid)-400][trTank];
		VehicleInfo[vehicleid][vAkum] = 100;
		new player_vehicleid = VehicleInfo[vehicleid][vPlayerVehicleID];
		OnPlayerVehicleSpawn(vehicleid, player_vehicleid);
	}
	if(VehicleInfo[vehicleid][vType] == VEHICLE_TYPE_ADMIN) {
		A_DestroyVehicle(vehicleid);
	}
	if(VehicleInfo[vehicleid][vJob] > 0 || VehicleInfo[vehicleid][vTeam] > 0) {
		VehicleInfo[vehicleid][vFuel] = gTransport[GetVehicleModel(vehicleid)-400][trTank];
		VehicleInfo[vehicleid][vAkum] = gTransport[GetVehicleModel(vehicleid)-400][trTank];
		VehicleInfo[vehicleid][vPlayer] = -1;
	}
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(TI[i][tBoat] == vehicleid)
		{
			A_DestroyVehicle(TI[i][tBoat]);
			TI[i][tBoat] = INVALID_VEHICLE_ID;
			SendClientMessage(i,COLOR_GREY,"Вы потеряли свою лодку. Аренда завершена");
		}
		if(TI[i][tYoutubcar] == vehicleid) {
			A_DestroyVehicle(TI[i][tYoutubcar]);
			TI[i][tYoutubcar] = INVALID_VEHICLE_ID;
			SendClientMessage(i,COLOR_GREY,"Youtube транспорт был отбуксирован");
		}
		if(TI[i][tMoped] == vehicleid) {
			A_DestroyVehicle(TI[i][tMoped]);
			TI[i][tMoped] = INVALID_VEHICLE_ID;
			SendClientMessage(i,COLOR_GREY,"Арендованный мопед был отбуксирован");
		}
		if(vehicleid == Trailer_job[i]) {
			A_DestroyVehicle(Trailer_job[i]);
			Trailer_job[i] = INVALID_VEHICLE_ID;
			DeletePVar(i,"count_prod2");
			DeletePVar(i,"count_prod");
			DeletePVar(i,"attach_trailer");
		}
		if(vehicleid == rob_veh[i]) {
			leave_robhouse(i);
		}
		if(vehicleid == TK_Trailer[i]) {
			A_DestroyVehicle(TK_Trailer[i]);
			TK_Trailer[i] = INVALID_VEHICLE_ID;
			TI[i][tTrucker][1] = 0;
			TI[i][tTrucker][0] = 0;
			Delete3DTextLabel(Gruz[i]);
			SendClientMessage(i,COLOR_GREY,"Груз отбуксирован на склад");
		}
		else if(vehicleid == car_autoschool[i]) {
			SetPlayerPosAC(i,9.5551,-84.9727,1026.4089,5,3, true);
			SetPlayerFacingAngle(i, 90.8821);
			A_DestroyVehicle(car_autoschool[i]);
			car_autoschool[i] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(i);
			SendClientMessage(i,COLOR_GREY,"Экзамен завален");
			TI[i][tAutoSchool] = 0;
			DeletePVar(i,"LessonSlotMav");
			DeletePVar(i,"LessonSlotBoat");
		}
		else if(vehicleid == GetPVarInt(i,"burger_vehid")) {
			A_DestroyVehicle(GetPVarInt(i,"burger_vehid"));
			DeletePVar(i,"burger_vehid");
		}
		if(vehicleid == house_car[i][0]) loading_cars(i, 0);
		if(vehicleid == house_car[i][1]) loading_cars(i, 1);
	}
	if(VG[vehicleid][vgLoading] || VG[vehicleid][vgUnloading] || VG[vehicleid][vgRobHouse] || VG[vehicleid][vgAtm] || VG[vehicleid][vgWeste]) {
		VG[vehicleid][vgLoading] = false;
		VG[vehicleid][vgUnloading] = false;
		VG[vehicleid][vgRobHouse] = false;

		if(IsValid3DTextLabel(VG[vehicleid][vgText])) DestroyDynamic3DTextLabelEx(VG[vehicleid][vgText]);
		DestroyDynamicPickup(VG[vehicleid][vgPickup]);
		VG[vehicleid][vgPickup] = 0;
		VG[vehicleid][vgAmount][0] = 0;
		VG[vehicleid][vgNarko] = 0;
		DestroyDynamicArea(VG[vehicleid][vgArea]);
		VG[vehicleid][vgArea] = 0;
		VG[vehicleid][vgAtm] = 0;

		if(vehicleid == 482) VG[vehicleid][vgAmount][0] = 0;
	}
	if(VehicleInfo[vehicleid][vJob] > 0) {
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			if(TI[i][tArendaCar] == vehicleid) {
				TI[i][tArendaCar] = -1;
				DisablePlayerRaceCheckpoint(i);
				if(GetPVarInt(i,"veh_id_cleaner") == vehicleid) DeletePVar(i,"veh_id_cleaner");
				if(GetPVarInt(i,"veh_id_taxi") == vehicleid) EndTaxi(i);
				if(GetPVarInt(i,"clear_id") == vehicleid) EndClear(i);
				if(GetPVarInt(i,"bus_id") == vehicleid) EndBus(i);
				if(GetPVarInt(i,"prod_vehicle_id") == vehicleid) EndProd(i);
				if(GetPVarInt(i,"mehjob") == vehicleid) EndMeh(i);
				if(GetPVarInt(i,"eatjob") == vehicleid) EndEat(i);
				break;
			}
		}
	}
	if(LightsObject[vehicleid][0]!=-1 || LightsObject[vehicleid][1]!=-1) {
		if(LightsObject[vehicleid][0] != -1) DestroyDynamicObject(LightsObject[vehicleid][0]);
		if(LightsObject[vehicleid][1] != -1) DestroyDynamicObject(LightsObject[vehicleid][1]);
		LightsObject[vehicleid][0] = -1;
		LightsObject[vehicleid][1] = -1;
		SignalTick[vehicleid][0] = 0;
		SignalTick[vehicleid][1] = -1;
		Signal[vehicleid] = 0;
	}
	GetVehiclePos(vehicleid, VehicleInfo[vehicleid][veX], VehicleInfo[vehicleid][veY], VehicleInfo[vehicleid][veZ]);
	GetVehicleZAngle(vehicleid, VehicleInfo[vehicleid][veA]);
	if(VehicleInfo[vehicleid][vTarif] > 0) {
		VehicleInfo[vehicleid][vTarif] = 0;
		VehicleInfo[vehicleid][vSlog] = 0;
		DestroyDynamicObject(VehicleInfo[vehicleid][vTaxi][0]);
		DestroyDynamicObject(VehicleInfo[vehicleid][vTaxi][1]);
	}
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	return true;
}
stock get_speed( playerid )
{
	new Float:x, Float:y, Float:z;
	if ( IsPlayerInAnyVehicle ( playerid ) )GetVehicleVelocity ( GetPlayerVehicleID ( playerid ), x, y, z ) ;
	else GetPlayerVelocity ( playerid, x, y, z ) ;
	return floatround ( floatsqroot ( x * x + y * y + z * z ) * 195  ) ;
}
stock GetPlayerVehicleSpeed(playerid) {
	if(!IsPlayerInAnyVehicle(playerid)) return true;
	new Float:X, Float:Y, Float:Z;
	GetVehicleVelocity(GetPlayerVehicleID(playerid),X,Y,Z);
	return floatround( floatsqroot( X * X + Y * Y + Z * Z ) * 100.3);
}
stock Float:fmax(Float:v1, Float:v2) {
	return v1 > v2?v1:v2;
}
stock Float:fmin(Float:v1, Float:v2) {
	return v1 < v2?v1:v2;
}
stock Float:jfloatsub(Float:value1, Float:value2) {
	new Float:num1 = fmax(value1, value2);
	new Float:num2 = fmin(value1, value2);
	new Float:diff = (num1 - num2);
	if(diff > 300.0) diff = ( 360.0 - num1 ) + num2;
	return diff;
}
stock Float:PointToPoint3D(Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2) return floatsqroot(floatadd(floatadd(floatpower(x2-x1,2),floatpower(y2-y1,2)),floatpower(z2-z1,2)));
CB: update_speedometer(playerid) {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	new vehicleid = GetPlayerVehicleID(playerid);
	new Float:vhealth;
	GetVehicleHealth(vehicleid, vhealth);
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(vhealth < 300)
	{
		SetVehicleHealth(vehicleid,300.0);
		SetVehicleParamsEx(vehicleid,false,false,alarm,doors,bonnet,boot,objective);
	}
	if(IsAPlane(vehicleid) || IsABoat(vehicleid)) return true;
	new Float:X, Float:Y, Float:Z, Float:A, Float:X2, Float:Y2, Float:Z2;
	X2 = VehicleInfo[vehicleid][veX];
	Y2 = VehicleInfo[vehicleid][veY];
	Z2 = VehicleInfo[vehicleid][veZ];
	if(TI[playerid][tAFK] <= 3) {
		new Float:Health, stext[20];
		GetVehicleHealth(vehicleid,Health);

		new Float:veloc;
		GetVehiclePos(vehicleid, X, Y, Z);
		veloc = PointToPoint3D(X2,Y2,Z2,X,Y,Z)/1000;
		if(engine == 1 && _GetVehicleSpeed(vehicleid) > 2) {
			VehicleInfo[vehicleid][vDrived] += veloc;
			bak[vehicleid] += veloc;
			if(bak[vehicleid] >= 0.5) {
				VehicleInfo[vehicleid][vFuel] -= 1.0;
				VehicleInfo[vehicleid][vAkum] -= 0.2;
				bak[vehicleid] = 0.0;
			}
			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			if(GetVehicleModel(vehicleid) != 462 && VehicleInfo[vehicleid][vFuel] <= 0.0) {
				VehicleInfo[vehicleid][vFuel] = 0.0;
				SetVehicleParamsEx(vehicleid,false,false,alarm,doors,bonnet,boot,objective);
			}
			if(GetVehicleModel(vehicleid) != 462 && VehicleInfo[vehicleid][vAkum] <= 0.0)
			{
				VehicleInfo[vehicleid][vAkum] = 0.0;
				SetVehicleParamsEx(vehicleid, false,false,alarm,doors,bonnet,boot,objective);
			}
			if(Health <= 320.0) {
				SetVehicleParamsEx(vehicleid,false,false,alarm,doors,bonnet,boot,objective);
			}
			GetVehicleZAngle(vehicleid, A);
			if(Signal[vehicleid]) {
				new Float:LAngle = jfloatsub(A, SignalAngle[vehicleid]);
				if(SignalTick[vehicleid][1] >= 0) {
					SignalTick[vehicleid][1] --;
					if(!SignalTick[vehicleid][1]) {
						Signal[vehicleid] = 0;
						if(LightsObject[vehicleid][0] != -1) {
							DestroyDynamicObject(LightsObject[vehicleid][0]);
							LightsObject[vehicleid][0] = -1;
						}
						if(LightsObject[vehicleid][1] != -1) {
							DestroyDynamicObject(LightsObject[vehicleid][1]);
							LightsObject[vehicleid][1] = -1;
						}
					}
				}
				else if(LAngle >= 50.0) SignalTick[vehicleid][1] = 20;
				SignalTick[vehicleid][0] ++;
				if(SignalTick[vehicleid][0] > 17) SignalTick[vehicleid][0] = 0;
			}
		}
		VehicleInfo[vehicleid][veX] = X;
		VehicleInfo[vehicleid][veY] = Y;
		VehicleInfo[vehicleid][veZ] = Z;

		new Float: Xx, Float: Yy, Float: Zz;
		GetVehicleVelocity(vehicleid, Xx, Yy, Zz);
		new Float:speedcar = _GetVehicleSpeed(vehicleid);
		if(TI[playerid][tSLimit]) {
			if(speedcar > TI[playerid][tSLimit]) {
				new Float:dif = TI[playerid][tSLimit] / speedcar;
				SetVehicleVelocity(vehicleid,Xx*dif,Yy*dif,Zz*dif);
				speedcar = TI[playerid][tSLimit];
			}
		}
		
		if(speedcar > 280) CheatKickEx(playerid,54);
		
		format(stext,sizeof(stext),"%.0f",speedcar);
		PlayerTextDrawSetString(playerid,Speed_PTD[playerid][0],stext);
		
		format(stext,sizeof(stext),"FUEL:_%.0f/150",VehicleInfo[vehicleid][vFuel]);
		PlayerTextDrawSetString(playerid,Speed_PTD[playerid][2],stext);
		
		//заменить huntley
		format(stext, sizeof(stext), "BATTERY:_%.0f/100", VehicleInfo[vehicleid][vAkum]);
		PlayerTextDrawSetString(playerid, Speed_PTD[playerid][3], stext);
		/*format(stext,sizeof(stext),"%.1f_km",VehicleInfo[vehicleid][vDrived]);
		PlayerTextDrawSetString(playerid,Speed_PTD[playerid][2],stext);*/

		GetVehicleHealth(vehicleid, vhealth);
		PlayerTextDrawTextSize(playerid,Speed_PTD[playerid][3], vhealth*102.1195/1000, 9.2200);
		PlayerTextDrawShow(playerid, Speed_PTD[playerid][3]);
		
		/*PlayerTextDrawTextSize(playerid,Speed_PTD[playerid][4],VehicleInfo[vehicleid][vFuel]*102.1195/150, 9.2200);
		PlayerTextDrawShow(playerid, Speed_PTD[playerid][4]);*/
		
		format(stext,sizeof(stext),"HP:_%.0f/1000",vhealth);
		PlayerTextDrawSetString(playerid,Speed_PTD[playerid][1],stext);

		if(TI[playerid][tTaxiGoing]) {
			new passid = TI[playerid][tTaxiPass];
			new tarif;
			tarif = VehicleInfo[GetPlayerVehicleID(playerid)][vTarif];
			new sum1 = floatround((VehicleInfo[vehicleid][vDrived] - TI[playerid][tTaxiStart])*tarif);
			new percent = floatround(sum1/100*VehicleInfo[GetPlayerVehicleID(playerid)][vTarif]);
			new sum2 = sum1-percent;
			if(GetPlayerState(passid) == PLAYER_STATE_PASSENGER && GetPlayerVehicleID(passid) == vehicleid) {
				static const f_str[] = "~w~TARIF: ~g~$%d/km~n~~w~Count: ~y~$%d";
				new mes[sizeof(f_str) +1 + (-2 + 5) + (-2 + 6)];
				format(mes,sizeof(mes),f_str,tarif,sum1);
				GameTextForPlayer(playerid,mes,1000,1);
				GameTextForPlayer(passid,mes,1000,1);
				if(GetPlayerMoneyEx(passid)-20 <= sum1) {
					if(GetPlayerMoneyEx(passid) - sum1 >= 0 && sum1 > 0) {
						GiveMoney(passid,-sum1,"taxipay");
						GiveMoney(playerid,sum2,"taxipay");
					}
					SendClientMessage(passid,COLOR_GREY,"Недостаточно денег для проезда на такси");
					SendOk(playerid,"Пассажир оплачивающий такси вышел, счётчик отключен");
					TI[playerid][tTaxiGoing] = false;
					TI[playerid][tTaxiPass] = INVALID_PLAYER_ID;
					RemovePlayerFromVehicleAC(passid);
					passid = INVALID_PLAYER_ID;
				}
			}
			else {
				if(sum1 > 0) {
					GiveMoney(passid,-sum1,"taxipay");
					GiveMoney(playerid,sum2,"taxipay");
				}
				SendOk(playerid,"Пассажир оплачивающий такси вышел, счётчик отключен");
				RemovePlayerMapIcon(playerid,iconTaxi);
				RemovePlayerMapIcon(passid,iconTaxi);
				TI[playerid][tTaxiGoing] = false;
				TI[playerid][tTaxiPass] = INVALID_PLAYER_ID;
				TI[playerid][tTaxiStart] = 0.0;
				passid = INVALID_PLAYER_ID;
				if(QuestProgress[playerid][8] < 20 && AcceptQuest[playerid][8] != 0) QuestProgress[playerid][8] ++,save_quest(playerid,8);
				if(QuestProgress[playerid][8] == 20 && AcceptQuest[playerid][8] != 0)
				{
					D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Таксист'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
					NextStapQI(playerid,8);
				}
			}
		}
	}
	return 1;
}
new WebSites[][] ={".ws", ".ru", ".tk", ".com", "www.", ".org", ".net", ".cc", ".рф", ".by", ".biz", ".su", ".info"};
stock CheckString(const str[]) {
	for(new i = 0;i<sizeof(WebSites);i++) if(strfind(str,WebSites[i],true) != -1) return true;
	return false;
}
new delimiters[]={'.', ' ', ',', '*', '/', ';', '\\', '|'};
stock IsIP(const str[]) {
	for(new cIP[4]; cIP[0] != strlen(str)+1; cIP[0]++) {
		switch(str[cIP[0]]) {
		case '.', ' ', ':', ',', '*', '/', ';', '\\', '|' : continue;
		case '0' .. '9': cIP[1]++;
		}
		if(cIP[1] ==1){ cIP[2] = cIP[0];}
		if(cIP[1] >= 8) {
			new strx[16]; new l[4][4];
			cIP[3] = cIP[0]+8; strmid(strx,str,cIP[2],cIP[3],16);
			for(new i =strlen(strx);i>8;i--) {
				switch(strx[i]) {
				case '0' .. '9','.', ' ', ':', ',', '*', '/', ';', '\\', '|': continue;
				default: strx[i] =0;
				}
			}
			for(new i =0;i<sizeof(delimiters);i++) {
				split(strx,l,delimiters[i]);
				if(strlen(l[0]) == 1 ||strlen(l[1]) == 1 ||strlen(l[2]) == 1 ||strlen(l[3]) == 1){ continue; }
				if(strlen(l[0]) >3 ||strlen(l[1]) >3 ||strlen(l[2]) >3){ continue; }
				else { return true; }
			}
		}
	}
	return false;
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid) {
	new Float:vehicleHealth;
	GetVehicleHealth(vehicleid, vehicleHealth);
	if(VehicleInfo[vehicleid][vJob] == 1) {
		if(GetPVarInt(playerid,"bus_id") == vehicleid) SetPVarFloat(playerid,"bus_damage", vehicleHealth);
	}
	return true;
}
Convert(number) {
	new hours = 0, mins = 0, secs = 0, str[100];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(str, 100, "%i:%02d:%02d", hours, mins, secs);
	else format(str, 100, "%i:%02d", mins, secs);
	return str;
}
stock ConvertsCmdTime(number) {
	new hours = 0, mins = 0, string[30];
	hours = number / 3600;
	mins = (number - hours * 3600) / 60;
	format(string, 30, "%d ч %d мин", hours, mins);
	return string;
}
stock GetPlayerID(const str[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(strcmp(player_name[i], str, true, strlen(str)) == 0) return i;
	}
	return INVALID_PLAYER_ID;
}
stock ToDevelopSkills(Slashes,Points) {
	new strign[149];
	new Slash[2] = "|";
	new Point[2] = ".";
	for(new i = 0; i < Slashes; i++) strcat(strign, Slash);
	for(new i = 0; i < Points; i++) strcat(strign, Point);
	return strign;
}
stock SetPlayerSkills(playerid) {
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PI[playerid][pGunSkill][0]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PI[playerid][pGunSkill][1]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PI[playerid][pGunSkill][2]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PI[playerid][pGunSkill][3]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PI[playerid][pGunSkill][4]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PI[playerid][pGunSkill][5]*10);
	return true;
}
stock ClearTotalGz() {
	TotalGZ[3] = 0;
	TotalGZ[5] = 0;
	TotalGZ[4] = 0;
	TotalGZ[0] = 0;
	TotalGZ[2] = 0;
	TotalGZ[1] = 0;
}
stock IsWheelModel(modelid) {
	new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
	for(new i=0;i<17;i++) {
		if (modelid == wheelmodels[i])
		return true;
	}
	return false;
}
stock IsLegalCarNitroIde(carmodel) {
	new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
	for(new i=0;i<29;i++) {
		if (carmodel == illegalvehs[i])
		return true;
	}
	return false;
}
stock IsLegal_Nos_Vehicle(PlayerID) {
	new carid = GetPlayerVehicleID(PlayerID);
	new playercarmodel = GetVehicleModel(carid);
	return IsLegalCarNitroIde(playercarmodel);
}
public OnVehicleRespray(playerid, vehicleid, color1, color2) {
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid) {
	return 1;
}

new Float:TuningPos[4][6] =
{
	{-1935.9622,244.4556,34.0334,617.5304,-1.9891,1000.5530},
	{-2723.2322,217.8237,4.1901,615.2862,-124.2390,997.6953},
	{1041.4187,-1019.0356,31.7300,617.5305,-1.9890,1000.5520},
	{2644.6572,-2046.0532,13.3756,616.7820,-74.8150,997.7332}
};
stock IsAtTunning(playerid) {
	for(new i; i < sizeof(TuningPos);i ++) {
		if(IsPlayerInRangeOfPoint(playerid,10,TuningPos[i][0],TuningPos[i][1],TuningPos[i][2])) return true;
		if(IsPlayerInRangeOfPoint(playerid,10,TuningPos[i][3],TuningPos[i][4],TuningPos[i][5])) return true;
	}
	return false;
}
stock ACC_AddVehicleComponent(vehicleid, componentid) {
	new vehicleide = GetVehicleModel(vehicleid);
	new modok = IsLegalCarMod(vehicleide, componentid);
	if (!modok) return 0;
	AddVehicleComponent(vehicleid, componentid);
	return 1;
}
stock IsLegalCarMod(vehicleide, componentid) {
	new modok = false;
	if((IsWheelModel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010))) {
		new nosblocker = IsLegalCarNitroIde(vehicleide);
		if (!nosblocker)
		modok = true;
	}
	else {
		for(new I=0;I<48;I++) {
			if (legalmods[I][0] == vehicleide) {
				for(new J = 1; J < 22; J++) {
					if (legalmods[I][J] == componentid)
					modok = true;
				}
			}
		}
	}
	return modok;
}
public OnVehicleMod(playerid, vehicleid, componentid) {
	new vehicleide = GetVehicleModel(vehicleid);
	new modok = IsLegalCarMod(vehicleide, componentid);
	if (!modok) {
		RemoveVehicleComponent(vehicleid,componentid);
		return 0;
	}
	if(IsAtTunning(playerid)) {
		if(GetPlayerInterior(playerid) == 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			RemoveVehicleComponent(vehicleid,componentid);
			return 0;
		}
		else {
			RemoveVehicleComponent(vehicleid, componentid);
			SendClientMessage(playerid, COLOR_GREY, "Этот транспорт нельзя тюнинговать");
			return 0;
		}
	}
	else {
		if(GetPlayerState(playerid) == 2) {
			RemoveVehicleComponent(vehicleid, componentid);
			return 0;
		}
	}
	return true;
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid) {
	if(GetPVarInt(playerid,"inv"))
	{
		if(GetPVarInt(playerid,"block_inv")) return true;
		for(new j = 0; j < 46; j++)
		{
			if(playertextid == inventory_slot[playerid][j])
			{
				if(PI[playerid][pInventory][j] != 0)
				{
					if(ClickInv[playerid] != -1)
					{
						PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][ClickInv[playerid]], 370810879);
						PlayerTextDrawShow(playerid, inventory_slot[playerid][ClickInv[playerid]]);
						PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][j], 370810879);
						PlayerTextDrawHide(playerid, inventory_slot[playerid][j]);
						PlayerTextDrawShow(playerid, inventory_slot[playerid][j]);
						ClickInv[playerid] = -1;
						return true;
					}
					PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][j], 0xfD5B93F33);
					PlayerTextDrawHide(playerid, inventory_slot[playerid][j]);
					PlayerTextDrawShow(playerid, inventory_slot[playerid][j]);
					ClickInv[playerid] = j; 
					break;
				}
				else
				{
					if(PI[playerid][pInventory][j] == 0 && ClickInv[playerid] != -1 && PI[playerid][pActivTrade][ClickInv[playerid]] == 0)
					{
						new id = ClickInv[playerid];
						if(j != 20 && j != 21 && j != 22 && j != 23 && j != 24 && j != 25)
						{
							if(ItemsInfo[PI[playerid][pInventory][id]][Access] == 1) 
							{
								PI[playerid][pSlotItem][ItemsInfo[PI[playerid][pInventory][id]][AcessBone]] = 0; // записываем ид обьекта в слот
								RemovePlayerAttachedObject(playerid, ItemsInfo[PI[playerid][pInventory][id]][AcessBone]);
								save_slotitem(playerid);
								ClickInv[playerid] = -1;
							}
						}
						if(j >= 20 && j <= 25) {
							if(ItemsInfo[PI[playerid][pInventory][id]][Access] == 0) {
								D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Этот предмет не является аксессуаром","Закрыть","");
								PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][ClickInv[playerid]], 370810879);
								PlayerTextDrawShow(playerid, inventory_slot[playerid][ClickInv[playerid]]);
								ClickInv[playerid] = -1;
								return true;
							}
							if(IsPlayerAttachedObjectSlotUsed(playerid, ItemsInfo[PI[playerid][pInventory][id]][AcessBone])) {
								D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Выбранная часть тела уже занята, освободите ее","Закрыть","");
								PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][id], 370810879);
								PlayerTextDrawShow(playerid, inventory_slot[playerid][ClickInv[playerid]]);
								ClickInv[playerid] = -1;
								return true;
							}
							PI[playerid][pSlotItem][ItemsInfo[PI[playerid][pInventory][id]][AcessBone]] = ItemsInfo[PI[playerid][pInventory][id]][ItemModel]; // записываем ид обьекта в слот
							AtachPlayerAcces(playerid, ItemsInfo[PI[playerid][pInventory][id]][ItemModel], GetPlayerSkin(playerid));
							save_slotitem(playerid);
						}
						
						PI[playerid][pInventory][j] = PI[playerid][pInventory][id];
						PI[playerid][pInventoryKolvo][j] = PI[playerid][pInventoryKolvo][id];
						PI[playerid][pInventory][id] = 0;
						PI[playerid][pInventoryKolvo][id] = 0;
						
						PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][id], 370810879);

						InvUpdate(playerid, j, PI[playerid][pInventory][j]);
						
						if(id < 26 && j < 21)  InvUpdate(playerid, id, PI[playerid][pInventory][id]);
						if(id > 25 && j > 25)  InvUpdate(playerid, id, PI[playerid][pInventory][id]);
						//
						if(id >= 20 && id <= 25) InvUpdate(playerid, id, PI[playerid][pInventory][id]);
						if(j >= 20 && j <= 25) InvUpdate(playerid, id, PI[playerid][pInventory][id]); // обновляем предыдущую ячейку

						SaveInventory(playerid);
						ClickInv[playerid] = -1;
						break;
					}
				}
			}
		}
	}
	if(GetPVarInt(playerid,"bank_rob"))
	{
		new idx = GetPVarInt(playerid, "ExpectedSelectionTD");
		PlayerTextDrawColor(playerid, hack_numbers[playerid][idx], 235802367);
		PlayerTextDrawShow(playerid, hack_numbers[playerid][idx]);
		ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,1,0,1);
		if(progress_rob[playerid] == 10)
		{
			TI[playerid][tCodeBank] = 0;
			MoveDynamicObject(moved_info[27][moved_id],moved_pos_object[27][0],moved_pos_object[27][1],moved_pos_object[27][2],(moved_info[27][moved_modelid] == 968) ? (0.014) : (moved_info[27][moved_modelid] == 2920) ? (0.014) : (moved_info[27][moved_modelid] == 1495) ? (0.034) : (moved_info[27][moved_modelid] == 2949) ? (0.034) : (moved_info[27][moved_modelid] == 2949) ? (10.0) : (1.2),moved_pos_object[27][3],moved_pos_object[27][4],moved_pos_object[27][5]);
			text_bank = CreateDynamic3DTextLabel("{F7A587}Сработала сигнализация двери"W"\n\nЗакрытие через{F7A587} 5"W" мин",0xFFFFFFFF,-1146.6598,28.7786,1169.5699+1.5,5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

			bank_vzlom[1] = 5;
			
			bank_vzlom[3] = 5;

			SendTeamMessage(CDEPARTMENT,"[Внимание] сработала сигналиция хранилища в центральном банке ЛС");

			for(new it = 0; it < 24; it++) TextDrawHideForPlayer(playerid, hack_magaz_TD[it]);
			
			for(new i = 0; i < 13; i++) {
				PlayerTextDrawHide(playerid, hack_numbers[playerid][i]);
			}

			ApplyAnimation(playerid, "CARRY", "null", 1.0, 0, 0, 0, 0, 0, 0);
			PlayerClearAnim[playerid] = 1;

			CancelSelectTextDraw(playerid);
			return true;
		}
		if(playertextid == hack_numbers[playerid][idx])
		{
			new rand; _random_repeat:
			rand = random(10);
			if(GetPVarType(playerid, "ExpectedSelectionTD") != PLAYER_VARTYPE_NONE && GetPVarInt(playerid, "ExpectedSelectionTD") == rand)
			goto _random_repeat;
			PlayerTextDrawColor(playerid, hack_numbers[playerid][rand], 0xfC40E26ff);
			PlayerTextDrawShow(playerid, hack_numbers[playerid][rand]);
			
			progress_rob[playerid]++;
			
			PlayerTextDrawTextSize(playerid, hack_numbers[playerid][12], progress_rob[playerid]*96.4701/10, 10.0000);
			PlayerTextDrawShow(playerid, hack_numbers[playerid][12]);
			
			SetPVarInt(playerid, "ExpectedSelectionTD", rand);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Взлом не удался, повторите попытку");
			CancelTextDrawBank(playerid);
		}
	}
	for(new i = 19; i < sizeof(Captcha); i++) {
		if(playertextid == Captcha[i]) {
			new sstring[96];
			GetPVarString(playerid, "CaptchaText", sstring, sizeof(sstring));
			switch(GetPVarInt(playerid, "CaptchaStep")) {
			case 0: format(sstring, sizeof(sstring), "%c", TextArray[i - 19]), strcat(sstring, "---"), SetPVarString(playerid, "CaptchaText", sstring);
			case 1: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 19]), strdel(sstring, 1, 4), strcat(sstring, "--"), SetPVarString(playerid, "CaptchaText", sstring);
			case 2: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 19]), strdel(sstring, 2, 4), strcat(sstring, "-"), SetPVarString(playerid, "CaptchaText", sstring);
			case 3: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 19]), strdel(sstring, 3, 4), strcat(sstring, ""), SetPVarString(playerid, "CaptchaText", sstring);
			}
			SetPVarInt(playerid, "CaptchaStep", GetPVarInt(playerid, "CaptchaStep") + 1);
			PlayerTextDrawSetString(playerid, Captcha[8], sstring);
		}
	}
	if(playertextid == Captcha[5]) {
		DeletePVar(playerid, "CaptchaStep"); DeletePVar(playerid, "CaptchaText");
		PlayerTextDrawSetString(playerid, Captcha[8], "----");
	}
	else if(playertextid == Captcha[6]) {
		new sstring[96];
		GetPVarString(playerid, "CaptchaText", sstring, sizeof(sstring));
		if(!GetString(PI[playerid][pKeyip], sstring) || !GetPVarInt(playerid, "CaptchaStep")) {
			new playerip[16], data2[64], day, month, year,query[200];
			getdate(day, month, year);
			format(data2, 64, "%d-%d-%d", day, month, year);
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			mysql_format(connects, query, sizeof(query), "INSERT INTO `captchalog` (`clName`, `clIP`, `clDate`, `clStatus`) VALUES ('%e', '%s', '%s', '0')", player_name[playerid], playerip, data2);
			mysql_tquery(connects, query);
			for(new l = 0; l < sizeof(Captcha); l++) PlayerTextDrawHide(playerid, Captcha[l]);
			DeletePVar(playerid, "CaptchaStep"); DeletePVar(playerid, "CaptchaText");
			KickEx(playerid);
			return true;
		}
		else {
			new playerip[16], data2[64],day, month, year,query[200];
			getdate(day, month, year);
			format(data2, 64, "%d-%d-%d", day, month, year);
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			mysql_format(connects, query, sizeof(query), "INSERT INTO `captchalog` (`clName`, `clIP`, `clDate`, `clStatus`) VALUES ('%e', '%s', '%s', '1')", player_name[playerid], playerip, data2);
			mysql_tquery(connects, query);
			for(new l = 0; l < sizeof(Captcha); l++) PlayerTextDrawHide(playerid, Captcha[l]);
			DeletePVar(playerid, "CaptchaStep"); DeletePVar(playerid, "CaptchaText");
			CancelSelectTextDraw(playerid);
			TogglePlayerControllable(playerid, true);
			load_load(playerid);
			return true;
		}
	}
	return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid) {
    #if defined _roulette_included
		if(roulette_OnPlayerClickTextDraw(playerid, clickedid)) return true;
	#endif
	if(BJ_PlayerInfo[playerid][pBlackJackTableID]) {
		new tableid = (BJ_PlayerInfo[playerid][pBlackJackTableID] - 1);
		if (clickedid == Blackjack_Tutorial_TD[1]) { // << BACK
			blackjack_TutorialNextStep(playerid, BJ_PlayerInfo[playerid][pBlackJackTutorialStep] - 1, 0);
			return true;
		}
		if (clickedid == Blackjack_Tutorial_TD[2]) { // >> NEXT
			blackjack_TutorialNextStep(playerid, BJ_PlayerInfo[playerid][pBlackJackTutorialStep] + 1);
			return true;
		}
		switch (BJ_PlayerInfo[playerid][pBlackJackTutorialKey]) {
		case BLACKJACK_KEY_SPLIT: if (clickedid == Blackjack_TD[3]) blackjack_TutorialNextStep(playerid, (BJ_PlayerInfo[playerid][pBlackJackTutorialStep] + 1), 0);
		case BLACKJACK_KEY_HIT: if (clickedid == Blackjack_TD[4]) blackjack_TutorialNextStep(playerid, (BJ_PlayerInfo[playerid][pBlackJackTutorialStep] + 1), 0);
		case BLACKJACK_KEY_STAY: if (clickedid == Blackjack_TD[5]) blackjack_TutorialNextStep(playerid, (BJ_PlayerInfo[playerid][pBlackJackTutorialStep] + 1), 0);
		}
		if (clickedid == Blackjack_TD[0]) {
			if (BJ_PlayerInfo[playerid][pBlackJackTutorialStep]) {
				blackjack_StopTutorial(playerid);
			}
			else {
				SelectTextDraw(playerid, 0x000000FF);
				return D(playerid, DIALOG_BLACKJACK_LEAVE, DIALOG_STYLE_MSGBOX, "{9932CC}Black Jack", ""W"Вы действительно хотите покинуть игровой стол?", "Да", "Отмена"), true;
			}
			return true;
		}
		if (_:clickedid == INVALID_TEXT_DRAW) {
			return SelectTextDraw(playerid, 0x000000FF), true;
		}
		if(BJ_PlayerInfo[playerid][pBlackJackTutorialStep]) return false;
		switch (BJ_PlayerInfo[playerid][pBlackJackOptions]) {
		case BLACKJACK_OPTION_MMBA:
			{
				if (clickedid == Blackjack_TD[2]) {
					if(PI[playerid][pCasinoChips] < blackjackTableInfo[tableid][blackjackTableMinBet]) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно фишек");
					ApplyAnimation(playerid, "CASINO", "cards_raise", 4.1, 0, 1, 1, 1, 1, 1);

					BJ_PlayerInfo[playerid][pBlackJackLastBet] =
					BJ_PlayerInfo[playerid][pBlackJackBet][BJ_PlayerInfo[playerid][pBlackJackBlockID]] = blackjackTableInfo[tableid][blackjackTableMinBet];
					return true;
				}
				else if (clickedid == Blackjack_TD[3]) {
					if(PI[playerid][pCasinoChips] < blackjackTableInfo[tableid][blackjackTableMaxBet]) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно фишек");
					ApplyAnimation(playerid, "CASINO", "cards_raise", 4.1, 0, 1, 1, 1, 1, 1);

					BJ_PlayerInfo[playerid][pBlackJackLastBet] =
					BJ_PlayerInfo[playerid][pBlackJackBet][BJ_PlayerInfo[playerid][pBlackJackBlockID]] = blackjackTableInfo[tableid][blackjackTableMaxBet];
					return true;
				}
				else if (clickedid == Blackjack_TD[4]) {
					new str[300];
					format(str, sizeof(str),""W"Введите сумму ставки {9932CC}(%d - %d)"W":\n\nУ вас в наличии: {9932CC}%d фишек",blackjackTableInfo[tableid][blackjackTableMinBet], blackjackTableInfo[tableid][blackjackTableMaxBet], PI[playerid][pCasinoChips]);
					D(playerid, DIALOG_BLACKJACK_BET, DSI, "{9932CC}Black Jack", str, "Принять", "Выйти");
					return true;
				}
				else if (clickedid == Blackjack_TD[5]) {
					if(PI[playerid][pCasinoChips] < BJ_PlayerInfo[playerid][pBlackJackLastBet]) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно фишек");
					ApplyAnimation(playerid, "CASINO", "cards_raise", 4.1, 0, 1, 1, 1, 1, 1);
					BJ_PlayerInfo[playerid][pBlackJackBet][BJ_PlayerInfo[playerid][pBlackJackBlockID]] = BJ_PlayerInfo[playerid][pBlackJackLastBet];
					return true;
				}
			}
		case BLACKJACK_OPTION_DSHS: {
				if (clickedid == Blackjack_TD[2]) {
					blackjack_ActionDouble(playerid);
					return true;
				}
				else if (clickedid == Blackjack_TD[3] && BJ_PlayerInfo[playerid][pBlackJackSplit])  {
					if (BJ_PlayerInfo[playerid][pBlackJackCards][1] > 0 || BJ_PlayerInfo[playerid][pBlackJackCards][0] > 2)
					return false;
					blackjack_ActionSplit(playerid);
					return true;
				}
				else if (clickedid == Blackjack_TD[4]) {
					blackjack_ActionHit(playerid, BJ_PlayerInfo[playerid][pBlackJackBlockID]);
					return true;
				}
				else if (clickedid == Blackjack_TD[5]) {
					blackjack_ActionStay(playerid);
					return true;
				}
			}
		}
	}
	if(!(_:clickedid ^ 0xFFFF)) {
		if(GetPVarInt(playerid,"TunningSaluna")) {
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid,"TunningSaluna");
			new vehicleid = GetPlayerVehicleID(playerid);
			ChangeVehicleColor(vehicleid,VehicleInfo[vehicleid][vColor][0],VehicleInfo[vehicleid][vColor][1]);
			ChangeVehiclePaintjob(vehicleid,VehicleInfo[vehicleid][vPaintJob]);
			for(new h = 0;h < 20;h++) {
				if(h < 7) PlayerTextDrawHide(playerid,ColorTDPl[playerid][h]);
				TextDrawHideForPlayer(playerid,ColorTD[h]);
			}
		}
		if(GetPVarInt(playerid,"select_colortd")) cancel_selectcolor(playerid);
		if(GetPVarInt(playerid,"TunningSalun")) {
			CancelSelectTextDraw(playerid);
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid,"TunningSalun");
			for(new h = 0;h < 22;h++) {
				if(h < 6) PlayerTextDrawHide(playerid,CustomTDPl[playerid][h]);
				TextDrawHideForPlayer(playerid,CustomTD[h]);
			}
			new vehicleid = GetPlayerVehicleID(playerid);
			for(new p = 1000;p < 1194;p++) {
				RemoveVehicleComponent(vehicleid,p);
			}
			if(VehicleInfo[GetPlayerVehicleID(playerid)][vFamily])
			{
				LoadFamilyTuning(PI[playerid][pFamily]-1, GetPlayerVehicleID(playerid), GetFamilyCar(playerid));
			}
			else
			{
				if(GetVehicleModel(vehicleid) == 508) LoadPlayerVehicleTuning(vehicleid, playerVehicleID[playerid]);
				else LoadTuning(playerid, house_car[playerid][GetNearestCar(playerid)], GetNearestCar(playerid));
			}
		}
		if(GetPVarInt(playerid,"bank_rob")) {
			CancelTextDrawBank(playerid);
		}
	}
	if(GetPVarInt(playerid,"ChangingSkin")) {
		if(_:clickedid == 65535) SelectTextDraw(playerid, 0x0080FFFF);
		if(clickedid == buy_skins[5]) {
			SkinSelect(playerid, 0); 
		}
		else if(clickedid == buy_skins[6]) {
			SkinSelect(playerid, 1);
		}
		else if(clickedid == buy_skins[0]) {
			new string[128];
			format(string,sizeof(string),""W"Вы хотите купить эту одежду за "GREEN"$%i?",ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]);
			D(playerid,D_BUY_SKIN,DSM, ""P"Покупка одежды",string,"Купить","Отмена");
		}
		else if(clickedid == buy_skins[1] || Text:INVALID_TEXT_DRAW) {
			A_SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
			cancel_skin(playerid);
		}
	}
	if(_:clickedid == INVALID_TEXT_DRAW) {
		if(GetPVarInt(playerid,"inv")) HideInvent(playerid);
		if(GetPVarInt(playerid,"get_class")) HideAuto(playerid);
		if(GetPVarInt(playerid,"buy_accses"))
		{
			RemovePlayerAttachedObject(playerid,GetPVarInt(playerid, "slot_acs"));
			AtachPlayerAcces(playerid, PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
			for(new i=0; i<9; i++) {
				TextDrawHideForPlayer(playerid,buy_skins[i]);
			}
			PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
			DeletePVar(playerid,"buy_accses");
			accs_close(playerid);
		}
		return true;
	}
	if(GetPVarInt(playerid,"get_class")) {
		if(clickedid == autoshop_TD[1]) {
			ChangeVehicleColor(car_shop[playerid],1,1);
			car_color[playerid][0] = 1;
			car_color[playerid][1] = 1;
		}
		if(clickedid == autoshop_TD[2]) {
			ChangeVehicleColor(car_shop[playerid],0,0);
			car_color[playerid][0] = 0;
			car_color[playerid][1] = 0;
		}
		if(clickedid == autoshop_TD[3]) {
			ChangeVehicleColor(car_shop[playerid],8,8);
			car_color[playerid][0] = 8;
			car_color[playerid][1] = 8;
		}
		if(clickedid == autoshop_TD[4]) {
			ChangeVehicleColor(car_shop[playerid],3,3);
			car_color[playerid][0] = 3;
			car_color[playerid][1] = 3;
		}
		if(clickedid == autoshop_TD[5]) {
			ChangeVehicleColor(car_shop[playerid],6,6);
			car_color[playerid][0] = 6;
			car_color[playerid][1] = 6;
		}
		if(clickedid == autoshop_TD[6]) {
			ChangeVehicleColor(car_shop[playerid],194,194);
			car_color[playerid][0] = 194;
			car_color[playerid][1] = 194;
		}
		if(clickedid == autoshop_TD[7]) {
			ChangeVehicleColor(car_shop[playerid],152,152);
			car_color[playerid][0] = 152;
			car_color[playerid][1] = 152;
		}
		if(clickedid == autoshop_TD[8]) {
			ChangeVehicleColor(car_shop[playerid],154,154);
			car_color[playerid][0] = 154;
			car_color[playerid][1] = 154;
		}
		if(clickedid == autoshop_TD[45]) cars_select(playerid,1);
		if(clickedid == autoshop_TD[44]) cars_select(playerid,0);
		if(clickedid == autoshop_TD[46])
		{ 
			if(PI[playerid][pFamily]) return D(playerid,D_BUY_CAR,DSM,""P"Покупка транспорта",""W"Выберите куда вы хотите приобрести транспорт.\n\nДля отмены используйте 'ESC'","Себе","Семье");
			new string[250];
			format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[CarsInfo[playerid][carModel][0]-400][trName],gTransport[CarsInfo[playerid][carModel][1]-400][trName]);
			D(playerid,D_BUY_CAR_1,DSL,""P"Выберите слот",string,"Купить","Закрыть");
		}
		if(clickedid == autoshop_TD[37]) HideAuto(playerid);
	}
	if(clickedid == inventory_TD[21]) {
		if(ClickInv[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не выбрали предмет в инвентаре");
		new ID = PI[playerid][pInventory][ClickInv[playerid]];
		new str[150];
		format(str,sizeof(str),""W"Название предмета:"P" %s\n"W"Количество:"ORANGE" %d",ItemsInfo[ID][ItemName],PI[playerid][pInventoryKolvo][ClickInv[playerid]]);
		D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",str,"Закрыть","");
	}
	if(clickedid == inventory_TD[22])
	{
		if(GetPVarInt(playerid, "inv"))
		{
			if(InvPage[playerid]) return true;
			InvPage[playerid]++;
			PlayerTextDrawSetString(playerid, inventory_PTD[playerid][7], "PAGE_2");
			PlayerTextDrawShow(playerid, inventory_PTD[playerid][7]);
			//ClickInv[playerid] = -1;
			for(new i = 0; i < 20; i++) PlayerTextDrawHide(playerid, inventory_slot[playerid][i]);
			for(new i = 26; i < 46; i++) {
				new ID = PI[playerid][pInventory][i];
				PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][i], ItemsInfo[ID][ItemModel]);
				PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][i], ItemsInfo[ID][POSTDx], ItemsInfo[ID][POSTDy], ItemsInfo[ID][POSTDz], ItemsInfo[ID][POSTDc]);
				PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][i], 370810879);
				PlayerTextDrawShow(playerid, inventory_slot[playerid][i]);
			}
		}
	}
	if(clickedid == inventory_TD[23])
	{
		if(GetPVarInt(playerid, "inv"))
		{
			if(!InvPage[playerid]) return true;
			InvPage[playerid]--;
			PlayerTextDrawSetString(playerid, inventory_PTD[playerid][7], "PAGE_1");
			PlayerTextDrawShow(playerid, inventory_PTD[playerid][7]);
			//	ClickInv[playerid] = -1;
			for(new i = 26; i < 46; i++) PlayerTextDrawHide(playerid, inventory_slot[playerid][i]);
			for(new i = 0; i < 20; i++)
			{
				new ID = PI[playerid][pInventory][i];
				PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][i], ItemsInfo[ID][ItemModel]);
				PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][i], ItemsInfo[ID][POSTDx], ItemsInfo[ID][POSTDy], ItemsInfo[ID][POSTDz], ItemsInfo[ID][POSTDc]);
				PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][i], 370810879);
				PlayerTextDrawShow(playerid, inventory_slot[playerid][i]);
			}
		}
	}
	if(clickedid == inventory_TD[14])
	{
		new slot = ClickInv[playerid];
		if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не выбрали предмет в инвентаре");
		if(PI[playerid][pActivTrade][slot]) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать предмет, пока активна передача");
		if(slot == 20 || slot == 21 || slot == 22 || slot == 23 || slot == 24 || slot == 25) return SendClientMessage(playerid, COLOR_GREY, "Чтобы утилизровать предмет, переместите его в инвентарь");
		new string[550];
		format(string,sizeof(string),""G"Утилизация предмета:"W"\n\nПредмет:"P" '%s'"W"\nКоличество:"P" %d"W"\n\nВы действительно хотите утилизировать предмет?",ItemsInfo[PI[playerid][pInventory][slot]][ItemName],PI[playerid][pInventoryKolvo][slot]);
		D(playerid,D_INVENT_DROP,DSM, ""P"Инвентарь",string,"Да","Отмена");
		SetPVarInt(playerid,"block_inv",1);
	}
	if(clickedid == inventory_TD[42]) HideInvent(playerid);
	if(clickedid == inventory_TD[41]) {
		if(!IsPlayerInRangeOfPoint(playerid,30.0,384.4618,-1913.3921,7.8359)) return SendClientMessage(playerid, COLOR_GREY,"Вы должны находится на центральном рынке");
		new slot = ClickInv[playerid], str[350];
		if(slot == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не выбрали предмет в инвентаре");
		if(slot == 20 || slot == 21 || slot == 22 || slot == 23 || slot == 24 || slot == 25) return SendClientMessage(playerid, COLOR_GREY, "Чтобы передать предмет, переместите его в инвентарь");
		SetPVarInt(playerid,"block_inv",1);
		if(GetPVarInt(playerid,"activ_trade")) {
			D(playerid,D_INVENT_GIVE_1,DSM, ""P"Инвентарь",""W"Вы хотите отменить текущую передачу предмета?","Далее","Отмена");
			return true;
		}
		format(str,sizeof(str),""W"Информация о предмете:\n\nНазвание предмета:"P" %s"W"\nКоличество:"ORANGE" %d"W"\n\nВведите ниже ID игрока, количество, цена за предмет",ItemsInfo[PI[playerid][pInventory][slot]][ItemName],PI[playerid][pInventoryKolvo][ClickInv[playerid]]);
		D(playerid,D_INVENT_GIVE,DSI, ""P"Инвентарь",str,"Далее","Отмена");
	}
	if(clickedid == inventory_TD[53]) pc_cmd_donate(playerid), HideInvent(playerid);
	if(clickedid == inventory_TD[43]) pc_cmd_menu(playerid, ""), HideInvent(playerid);
	if(clickedid == inventory_TD[51]) { 
		new model = ClickInv[playerid];
		if(model == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не выбрали предмет в инвентаре");
		if(ItemsInfo[PI[playerid][pInventory][model]][Access]) return SendClientMessage(playerid, COLOR_GREY, "Переместите аксессуар в ячейку с персонажем");
		if(PI[playerid][pActivTrade][model]) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать предмет, пока активна передача");
		UseItem(playerid, ItemsInfo[PI[playerid][pInventory][model]][ItemModel], model);
	}
	else if(GetPVarInt(playerid,"buy_accses")) {
		if(clickedid == buy_skins[5]) {
			accs_select(playerid, 0);
		}
		else if(clickedid == buy_skins[6]) {
			accs_select(playerid, 1);
		}
		else if(clickedid == buy_skins[0]) {
			if(GetPlayerMoneyEx(playerid) < GetPVarInt(playerid, "price_acs")) {
				AtachPlayerAcces(playerid, PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
				DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs"), DeletePVar(playerid,"id_invent");
				buyacces(playerid);
				return true;
			}
			if(gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] - 80 > 0) {
				gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] -= 80;
				bizz_pay(TI[playerid][tSelectedBusinessID],GetPVarInt(playerid, "price_acs"));
			}
			if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
			RemovePlayerAttachedObject(playerid, GetPVarInt(playerid, "slot_acs"));

			SendOk(playerid, "Поздравляем с покупкой аксессуара");

			AddItem(playerid, GetPVarInt(playerid, "id_invent"),1);
			
			GiveMoney(playerid,-GetPVarInt(playerid, "price_acs"),"покупка аксессуара");
			DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
			buyacces(playerid);
			
			for(new i=0; i<9; i++) {
				TextDrawHideForPlayer(playerid,buy_skins[i]);
			}
			PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
			CancelSelectTextDraw(playerid);
			accs_close(playerid);
		}
		else if(clickedid == buy_skins[1]) {
			RemovePlayerAttachedObject(playerid,GetPVarInt(playerid, "slot_acs"));
			AtachPlayerAcces(playerid, PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
			accs_close(playerid);
			for(new i=0; i<9; i++) {
				TextDrawHideForPlayer(playerid,buy_skins[i]);
			}
			PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
		}
	}
	else if(clickedid == ColorTD[5]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][1]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][1],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][1]);
		PrimaryColor[playerid]++;
		if(PrimaryColor[playerid] > 255) PrimaryColor[playerid] = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][2]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][2],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][2]);
		new curcol = PrimaryColor[playerid]+1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol > 255) curcol = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][3]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][3],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][3]);
		if(PrimaryColor[playerid] == VehicleInfo[vehicleid][vColor][0]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedPrimaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedPrimaryColor[playerid]) {
			new str[32];
			ChangedPrimaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[6]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][3]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][3],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][3]);
		PrimaryColor[playerid]--;
		if(PrimaryColor[playerid] < 0) PrimaryColor[playerid] = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][2]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][2],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][2]);
		new curcol = PrimaryColor[playerid]-1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol < 0) curcol = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][1]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][1],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][1]);
		if(PrimaryColor[playerid] == VehicleInfo[vehicleid][vColor][0]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedPrimaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedPrimaryColor[playerid]) {
			new str[32];
			ChangedPrimaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[7]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][4]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][4],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][4]);
		SecondaryColor[playerid]++;
		if(SecondaryColor[playerid] > 255) SecondaryColor[playerid] = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][5]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][5],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][5]);
		new curcol = SecondaryColor[playerid]+1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol > 255) curcol = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][6]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][6],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][6]);
		if(SecondaryColor[playerid] == VehicleInfo[vehicleid][vColor][1]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedSecondaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedSecondaryColor[playerid]) {
			new str[32];
			ChangedSecondaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[8]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][6]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][6],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][6]);
		SecondaryColor[playerid]--;
		if(SecondaryColor[playerid] < 0) SecondaryColor[playerid] = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][5]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][5],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][5]);
		new curcol = SecondaryColor[playerid]-1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol < 0) curcol = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][4]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][4],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][4]);
		if(SecondaryColor[playerid] == VehicleInfo[vehicleid][vColor][1]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedSecondaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedSecondaryColor[playerid]) {
			new str[32];
			ChangedSecondaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(ColorTD[11] <= clickedid <= ColorTD[14]) {
		new i = _:clickedid - _:ColorTD[11];
		if(i == VinylJob[playerid]) return 1;
		new curvin = 0;
		TextDrawHideForPlayer(playerid,ColorTD[16+VinylJob[playerid]]);
		if(curvin == i) {
			if(ChangedVinylJob[playerid]) {
				new str[32];
				RepaintValue[playerid] -= VYNIL_VALUE;

				format(str,32,"$%d",RepaintValue[playerid]);
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
				ChangedVinylJob[playerid] = false;
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),curvin-1), SetPVarInt(playerid, "PaintJob", curvin-1);
			}
		}
		else {
			if(!ChangedVinylJob[playerid]) {
				new str[32];
				RepaintValue[playerid] += VYNIL_VALUE;
				
				format(str,32,"$%d",RepaintValue[playerid]);
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
				ChangedVinylJob[playerid] = true;
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),i-1), SetPVarInt(playerid, "PaintJob", i-1);
			}
			else {
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),i-1), SetPVarInt(playerid, "PaintJob", i-1);
			}
		}
		TextDrawShowForPlayer(playerid,ColorTD[16+i]);
		VinylJob[playerid] = i;
		return 1;
	}
	else if(clickedid == ColorTD[15]) {
		if(RepaintValue[playerid] == 0 && !ChangedVinylJob[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не выбрали цвет транспорта");

		if(PI[playerid][pCash] < RepaintValue[playerid]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств");
		GiveMoney(playerid,-RepaintValue[playerid],"Покраска");
		
		if(gBusiness[59][bizzProduct]-15 > 0) {
			gBusiness[59][bizzProduct] -= 10;
			bizz_pay(59,floatround(RepaintValue[playerid] * 0.5));
		}
		
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		
		if(ChangedPrimaryColor[playerid]) ChangedPrimaryColor[playerid] = false;
		if(ChangedSecondaryColor[playerid]) ChangedSecondaryColor[playerid] = false;
		if(ChangedVinylJob[playerid]) ChangedVinylJob[playerid] = false;
		RepaintValue[playerid] = 0;
		PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],"$0");
		PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
		
		VehicleInfo[GetPlayerVehicleID(playerid)][vColor][0] = PrimaryColor[playerid];
		VehicleInfo[GetPlayerVehicleID(playerid)][vColor][1] = SecondaryColor[playerid];
		VehicleInfo[GetPlayerVehicleID(playerid)][vPaintJob] = GetPVarInt(playerid, "PaintJob");
		
		if(VehicleInfo[GetPlayerVehicleID(playerid)][vFamily])
		{
			new fam = PI[playerid][pFamily]-1;
			new idx = GetFamilyCar(playerid);
			
			CarFamily[fam][idx][famVehColor] = PrimaryColor[playerid];
			CarFamily[fam][idx][famVehColor_1] = SecondaryColor[playerid];
			CarFamily[fam][idx][famVehPaint] = GetPVarInt(playerid, "Paintjob");
			
			new query[128], str[76];
			format(str,sizeof(str),"%i|%i|%i",PrimaryColor[playerid], SecondaryColor[playerid], GetPVarInt(playerid, "Paintjob"));
			
			format(query, sizeof(query), "UPDATE `family` SET `paint_%i` = '%s' WHERE `id` = '%d'",GetFamilyCar(playerid), str, fam+1);
			mysql_tquery(connects, query, "", "");
			return 0;
		}
		
		if(PlayerTrailer[playerVehicleID[playerid]][carVehicle] == GetPlayerVehicleID(playerid))
		{
			new car = playerVehicleID[playerid];
			PlayerTrailer[car][carColor][0] = PrimaryColor[playerid];
			PlayerTrailer[car][carColor][1] = SecondaryColor[playerid];
			SavePlayerVehicle(car);
			return 0;
		}
		
		new car = GetNearestCar(playerid);
		
		CarsInfo[playerid][carColor_one][GetNearestCar(playerid)] = PrimaryColor[playerid];
		CarsInfo[playerid][carColor_two][GetNearestCar(playerid)] = SecondaryColor[playerid];
		CarsInfo[playerid][carPaintJob][GetNearestCar(playerid)] = GetPVarInt(playerid, "Paintjob");

		new query[120];
		mysql_format(connects, query, sizeof(query),"UPDATE `cars` SET `color_one` = '%d',`color_two` = '%d',`paintjob` = '%d' WHERE id = '%d'",CarsInfo[playerid][carColor_one][car],CarsInfo[playerid][carColor_two][car],CarsInfo[playerid][carPaintJob][car],CarsInfo[playerid][carID][car]);
		mysql_tquery(connects, query,"","");
		return 1;
	}
	else if(clickedid == CustomTD[2]) {
		if(CustomType[playerid] == 11) return 1;
		new str[64],model,value;
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) RemoveVehicleComponent(GetPlayerVehicleID(playerid),model);
		if(VehicleInfo[GetPlayerVehicleID(playerid)][vFamily])
		{
			LoadFamilyTuning(PI[playerid][pFamily]-1, GetPlayerVehicleID(playerid), GetFamilyCar(playerid));
		}
		else
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 508) LoadPlayerVehicleTuning(GetPlayerVehicleID(playerid), playerVehicleID[playerid]);
			else LoadTuning(playerid, house_car[playerid][GetNearestCar(playerid)], GetNearestCar(playerid));
		}
		CustomType[playerid]++;
		PlayerTextDrawSetString(playerid,CustomTDPl[playerid][0],CustomTypeName[CustomType[playerid]]);
		if(CustomType[playerid] == 11) TextDrawHideForPlayer(playerid,CustomTD[2]);
		else TextDrawShowForPlayer(playerid,CustomTD[3]);
		TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
		TextDrawShowForPlayer(playerid,CustomTD[10]);
		TextDrawHideForPlayer(playerid,CustomTD[4]);
		TextDrawShowForPlayer(playerid,CustomTD[20]);
		CustomListNum[playerid] = 0;
		CustomLimitNum[playerid] = 0;
		for(new i = 0; i < 5; i++) {
			TextDrawHideForPlayer(playerid,CustomTD[5+i]);
			TextDrawHideForPlayer(playerid,CustomTD[15+i]);
			PlayerTextDrawHide(playerid,CustomTDPl[playerid][1+i]);
		}
		for(new i = 0; i < 5; i++) {
			if(i > TypeBorder[CustomType[playerid]]-1) break;
			TextDrawShowForPlayer(playerid,CustomTD[5+i]);
			format(str,64,"TUN[%d][Value]",i);
			value = GetGVarInt(str,CustomType[playerid]);

			format(str,64,"TUN[%d][Name]",i);
			GetGVarString(str,str,64,CustomType[playerid]);
			format(str,64,"%s~n~$%d",str,value);
			PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+i],str);
			PlayerTextDrawShow(playerid,CustomTDPl[playerid][1+i]);
			format(str,64,"TUN[%d][ModelID]",i);
			model = GetGVarInt(str,CustomType[playerid]);
			if(!IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) TextDrawShowForPlayer(playerid,CustomTD[15+i]);
			else if(i == 0) ACC_AddVehicleComponent(GetPlayerVehicleID(playerid),model);
		}
		CameraViewChange(playerid,CustomType[playerid]);
		return 1;
	}
	else if(clickedid == CustomTD[20]) {
		if(CustomListNum[playerid] >= TypeBorder[CustomType[playerid]]-1) return 1;
		new model,str[64],value,vehicleid = GetPlayerVehicleID(playerid);
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) RemoveVehicleComponent(vehicleid,model);
		if(VehicleInfo[GetPlayerVehicleID(playerid)][vFamily])
		{
			LoadFamilyTuning(PI[playerid][pFamily]-1, GetPlayerVehicleID(playerid), GetFamilyCar(playerid));
		}
		else
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 508) LoadPlayerVehicleTuning(GetPlayerVehicleID(playerid), playerVehicleID[playerid]);
			else LoadTuning(playerid, house_car[playerid][GetNearestCar(playerid)], GetNearestCar(playerid));
		}
		CustomListNum[playerid]++;
		if(CustomListNum[playerid] == 1) TextDrawShowForPlayer(playerid,CustomTD[4]);
		if(CustomListNum[playerid] >= TypeBorder[CustomType[playerid]]-1) TextDrawHideForPlayer(playerid,CustomTD[20]);
		CustomLimitNum[playerid]++;
		if(CustomLimitNum[playerid] > 4) {
			for(new i = CustomListNum[playerid]-4, b = 0; b < 5; i++,b++) {
				format(str,64,"TUN[%d][Value]",i);
				value = GetGVarInt(str,CustomType[playerid]);

				format(str,64,"TUN[%d][Name]",i);
				GetGVarString(str,str,64,CustomType[playerid]);
				format(str,64,"%s~n~$%d",str,value);
				PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+b],str);
				format(str,64,"TUN[%d][ModelID]",i);
				model = GetGVarInt(str,CustomType[playerid]);
				TextDrawHideForPlayer(playerid,CustomTD[15+b]);
				if(!IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) TextDrawShowForPlayer(playerid,CustomTD[15+b]);
				else if(b == 4) ACC_AddVehicleComponent(GetPlayerVehicleID(playerid),model);
			}
			CustomLimitNum[playerid] = 4;
		}
		else {
			TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]-1]);
			TextDrawShowForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
			format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
			model = GetGVarInt(str,CustomType[playerid]);
			if(IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) ACC_AddVehicleComponent(GetPlayerVehicleID(playerid),model);
		}
		return 1;
	}
	
	else if(clickedid == CustomTD[4]) {
		if(CustomListNum[playerid] == 0) return 1;
		new model,str[64],value,vehicleid = GetPlayerVehicleID(playerid);
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) RemoveVehicleComponent(vehicleid,model);
		if(VehicleInfo[GetPlayerVehicleID(playerid)][vFamily])
		{
			LoadFamilyTuning(PI[playerid][pFamily]-1, GetPlayerVehicleID(playerid), GetFamilyCar(playerid));
		}
		else
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 508) LoadPlayerVehicleTuning(GetPlayerVehicleID(playerid), playerVehicleID[playerid]);
			else LoadTuning(playerid, house_car[playerid][GetNearestCar(playerid)], GetNearestCar(playerid));
		}
		CustomListNum[playerid]--;
		if(CustomListNum[playerid] == 0) TextDrawHideForPlayer(playerid,CustomTD[4]);
		if(CustomListNum[playerid] == TypeBorder[CustomType[playerid]]-2) TextDrawShowForPlayer(playerid,CustomTD[20]);
		CustomLimitNum[playerid]--;
		if(CustomLimitNum[playerid] < 0) {
			for(new i = CustomListNum[playerid], b = 0; b < 5; i++,b++) {
				format(str,64,"TUN[%d][Value]",i);
				value = GetGVarInt(str,CustomType[playerid]);

				format(str,64,"TUN[%d][Name]",i);
				GetGVarString(str,str,64,CustomType[playerid]);
				format(str,64,"%s~n~$%d",str,value);
				PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+b],str);
				format(str,64,"TUN[%d][ModelID]",i);
				model = GetGVarInt(str,CustomType[playerid]);
				TextDrawHideForPlayer(playerid,CustomTD[15+b]);
				if(!IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) TextDrawShowForPlayer(playerid,CustomTD[15+b]);
				else if(b == 0) ACC_AddVehicleComponent(GetPlayerVehicleID(playerid),model);
			}
			CustomLimitNum[playerid] = 0;
		}
		else {
			TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]+1]);
			TextDrawShowForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
			format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
			model = GetGVarInt(str,CustomType[playerid]);
			if(IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) ACC_AddVehicleComponent(GetPlayerVehicleID(playerid),model);
		}
		return 1;
	}
	else if(clickedid == CustomTD[3]) {
		if(CustomType[playerid] == 0) return 1;
		new str[64],model,value,vehicleid = GetPlayerVehicleID(playerid);
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) RemoveVehicleComponent(vehicleid,model);
		if(VehicleInfo[GetPlayerVehicleID(playerid)][vFamily])
		{
			LoadFamilyTuning(PI[playerid][pFamily]-1, GetPlayerVehicleID(playerid), GetFamilyCar(playerid));
		}
		else
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 508) LoadPlayerVehicleTuning(GetPlayerVehicleID(playerid), playerVehicleID[playerid]);
			else LoadTuning(playerid, house_car[playerid][GetNearestCar(playerid)], GetNearestCar(playerid));
		}
		CustomType[playerid]--;
		PlayerTextDrawSetString(playerid,CustomTDPl[playerid][0],CustomTypeName[CustomType[playerid]]);
		if(CustomType[playerid] == 0) TextDrawHideForPlayer(playerid,CustomTD[3]);
		else TextDrawShowForPlayer(playerid,CustomTD[2]);

		TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
		TextDrawShowForPlayer(playerid,CustomTD[10]);
		TextDrawHideForPlayer(playerid,CustomTD[4]);
		TextDrawShowForPlayer(playerid,CustomTD[20]);
		CustomListNum[playerid] = 0;
		CustomLimitNum[playerid] = 0;
		for(new i = 0; i < 5; i++) {
			TextDrawHideForPlayer(playerid,CustomTD[5+i]);
			PlayerTextDrawHide(playerid,CustomTDPl[playerid][1+i]);
			TextDrawHideForPlayer(playerid,CustomTD[15+i]);
		}
		for(new i = 0; i < 5; i++) {
			if(i > TypeBorder[CustomType[playerid]]-1) break;
			TextDrawShowForPlayer(playerid,CustomTD[5+i]);
			format(str,64,"TUN[%d][Value]",i);
			value = GetGVarInt(str,CustomType[playerid]);

			format(str,64,"TUN[%d][Name]",i);
			GetGVarString(str,str,64,CustomType[playerid]);
			format(str,64,"%s~n~$%d",str,value);
			PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+i],str);
			PlayerTextDrawShow(playerid,CustomTDPl[playerid][1+i]);
			format(str,64,"TUN[%d][ModelID]",i);
			model = GetGVarInt(str,CustomType[playerid]);
			if(!IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) TextDrawShowForPlayer(playerid,CustomTD[15+i]);
			else if(i == 0) ACC_AddVehicleComponent(GetPlayerVehicleID(playerid),model);
		}
		CameraViewChange(playerid,CustomType[playerid]);
		return 1;
	}
	else if(clickedid == CustomTD[21]) {
		new str[64],value;
		format(str,64,"TUN[%d][Value]",CustomListNum[playerid]);
		value = GetGVarInt(str,CustomType[playerid]);

		new string[156];
		format(string,sizeof(string),"\n\n"W"Вы действительно хотите установить деталь за "O"$%d?\n\n",value);
		D(playerid, D_TUNE_UPDATE, DSM, ""P"Установка детали", string, "Установить", "Отмена");
		return 1;
	}
	else if(Casino_Flag[playerid][show_casino_td] == 1 && Casino_Flag[playerid][select_casino_table] != -1){
		if(_:clickedid == INVALID_TEXT_DRAW) {
			if((InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start] && Casino_Flag[playerid][casino_crup] == 1) || (Casino_Flag[playerid][casino_bet_cash] != 0 && InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start])) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете покинуть партию пока идёт игра"),SelectTextDraw(playerid,0x9BF2EAAA);
			else return ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table], false);
		}
		else if(clickedid == Casino_TD[Casino_TD_Exit]) {
			if((InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start] && Casino_Flag[playerid][casino_crup] == 1) || (Casino_Flag[playerid][casino_bet_cash] != 0 && InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start])) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете покинуть партию пока идёт игра"),SelectTextDraw(playerid,0x9BF2EAAA);
			else return ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
		}
		else if(clickedid == Casino_TD[Casino_TD_Set_Bet]) {
			new s = Casino_Flag[playerid][select_casino_table];
			if(InfoDice[s][dice_game_start]) return SendClientMessage(playerid, COLOR_GREY, "В данный момент идёт игра");
			if(Casino_Flag[playerid][casino_crup] == 1) {
				if(InfoDice[s][dice_bank] != 0) return SendClientMessage(playerid, COLOR_GREY, "Кто то из игроков уже поставил ставку");
				D(playerid, D_SET_BET, DSI, ""P"Ставка", ""W"Введите сумму ставки!\nСтавка должна быть не менее "ORANGE""#MIN_STAVKA" фишек\n"W"и не более "ORANGE""#MAX_STAVKA" фишек", "Далее", "Отмена");
			}
			else {
				if(InfoDice[s][dice_stavka] == 0) return SendClientMessage(playerid, COLOR_GREY, "Ставка не установлена");
				if(Casino_Flag[playerid][casino_bet_cash] != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже поставили ставку");
				if(PI[playerid][pCasinoChips] < InfoDice[s][dice_stavka]) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно фишек чтобы поставить ставку");
				PI[playerid][pCasinoChips] -= InfoDice[s][dice_stavka];
				UpdatePlayerData(playerid,"casino_chips",PI[playerid][pCasinoChips]);
				Casino_Flag[playerid][casino_bet_cash] = InfoDice[s][dice_stavka];
				InfoDice[s][dice_bank] += InfoDice[s][dice_stavka];
				UpdateTextCasino(s);
			}
			return 1;
		}
		else if(clickedid == Casino_TD[Casino_TD_Dice]) {
			new s = Casino_Flag[playerid][select_casino_table];
			if(InfoDice[s][dice_stavka] == 0) return SendClientMessage(playerid, COLOR_GREY, "Ставка не установлена");
			if(Casino_Flag[playerid][casino_crup] == 1) {
				if(InfoDice[s][dice_game_start]) return SendClientMessage(playerid, COLOR_GREY, "В данный момент идёт игра");
				new count_player = 0, count_player2 = 0;
				for(new p = 0; p < 5; p++) {
					if(InfoDice[s][dice_gamer][p]==INVALID_PLAYER_ID) continue;
					if(Casino_Flag[InfoDice[s][dice_gamer][p]][casino_bet_cash] != 0) count_player2++;
					count_player++;
				}
				if(count_player2 < 2) return SendClientMessage(playerid, COLOR_GREY, "Для того чтобы начать игру, нужно два игрока установивших ставку");
				else if(InfoDice[s][dice_game_start]) return SendClientMessage(playerid, COLOR_GREY, "Игра запущена");
				InfoDice[s][dice_game_start] = true;
				InfoDice[s][dice_game_start_time] = gettime() + 30;
				InfoDice[s][dice_game_start_timer] = SetTimerEx("UpdateGameDice", 1000, 1, "i", s);
			}
			else {
				if(!InfoDice[s][dice_game_start]) return SendClientMessage(playerid, COLOR_GREY, "Игра еще не запущена");
				if(Casino_Flag[playerid][casino_bet_cash] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не ставили ставку");
				for(new c = 0; c < 5; c++) {
					if(InfoDice[s][dice_gamer][c] == playerid) {
						if(InfoDice[s][dice_score][c] != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже кинули кости");
						InfoDice[s][dice_score][c] = random(11) + 2;
						UpdateScores(s);
						UpdateTextCasino(s);
						break;
					}
				}
			}
		}
	}
	if(func_bcolor[1] <= clickedid <= func_bcolor[21] && GetPVarInt(playerid,"select_colortd")) {
		for(new i = 1; i <= 21; i++) {
			if(clickedid == func_bcolor[i]) {
				if(!GetPVarInt(playerid,"SelectButton")) SetPVarInt(playerid,"SelectButton",i);
				else if(GetPVarInt(playerid,"color_shashka")) {
					FuncBizz[PI[playerid][pBusiness]][funcbShash] = i;
					UpdateFuncBizzData(PI[playerid][pBusiness],"color_shash",FuncBizz[PI[playerid][pBusiness]][funcbShash]);
					cancel_selectcolor(playerid);
					SendClientMessage(playerid,CGOLD,"Вы изменили цвет таксопарка. Все шашки на Ваших автомобилях находящиеся на стоянке были перекрашены");
					SendClientMessage(playerid,CGOLD,"Остальные шашки на автомобилях изменят цвет после респавна");
					return 1;
				}
				else if(GetPVarInt(playerid,"color_allcolor")) {
					FuncBizz[PI[playerid][pBusiness]][funcbColor] = i;
					UpdateFuncBizzData(PI[playerid][pBusiness],"color",FuncBizz[PI[playerid][pBusiness]][funcbColor]);
					cancel_selectcolor(playerid);
					SendClientMessage(playerid,CGOLD,"Вы изменили цвет транспортной компании. Все автомобили находящиеся на стоянке были перекрашены");
					SendClientMessage(playerid,CGOLD,"Остальные автомобили изменят цвет после респавна");
					return 1;
				}
			}
		}
		return 1;
	}
	return 1;
}

stock ChosePlayerSkin(playerid) {
	switch(PI[playerid][pSex]) {
	case 1: SetPVarInt(playerid,"join_ped_item",Random(0,7));
	case 2: SetPVarInt(playerid,"join_ped_item",Random(8,14));
	}
	CancelSelectTextDraw(playerid);
	new year, month, day;
	getdate(year, month, day);
	GetPlayerIp(playerid,PI[playerid][pIpReg],32);
	new pass[67];
	SHA256_PassHash(player_pass[playerid], "mary2land", pass, 70);
	new query[712];
	mysql_format(connects, query, sizeof(query), "INSERT INTO `"TABLE_ACCOUNTS"` (`Name`, `pKey`,`pSalt`, `pSex`, `pDataReg`, `pIpReg`, `pDrug`,`Skin`) VALUES ('%s','%s','mary2land', '%i', '%02i/%02i/%02i', '%s', '%s', '%i')"
	,player_name[playerid],pass,PI[playerid][pSex],day,month,year,PI[playerid][pIpReg],PI[playerid][pDrug],PI[playerid][pEmail],skin_register[GetPVarInt(playerid,"join_ped_item")][0]);
	mysql_tquery(connects,query,"player_register","i",playerid);
	PI[playerid][pSkin] = skin_register[GetPVarInt(playerid,"join_ped_item")][0];
	return A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
}
CB: SpcarsAvto(playerid) {
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(GetPVarInt(playerid, "zanyatayaveh")) continue;
		if(IsVehicleOccupied(i)) continue; 
		if(GetVehicleModel(i) == 450) continue; 
		SetVehicleToRespawn(i);
	}
	new string[100];
	format(string,sizeof(string),"Администратор: %s заспавнил машины",player_name[playerid]);
	AdmMSG(COLOR_LIGHTRED,string);
	return 1;
}

enum attached_object_data
{
Float:ao_x,
Float:ao_y,
Float:ao_z,
Float:ao_rx,
Float:ao_ry,
Float:ao_rz,
Float:ao_sx,
Float:ao_sy,
Float:ao_sz
}

new ao[MAX_PLAYERS][MAX_PLAYER_ATTACHED_OBJECTS][attached_object_data];

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,Float:fRotX, Float:fRotY, Float:fRotZ,Float:fScaleX, Float:fScaleY, Float:fScaleZ ) {
	new string[200];
	format(string,sizeof(string),"%d,%d,%d,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f",index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
	SendClientMessage(playerid,-1,string);
	if(response)
	{
		SendClientMessage(playerid, COLOR_GREEN, "Attached object edition saved.");

		ao[playerid][index][ao_x] = fOffsetX;
		ao[playerid][index][ao_y] = fOffsetY;
		ao[playerid][index][ao_z] = fOffsetZ;
		ao[playerid][index][ao_rx] = fRotX;
		ao[playerid][index][ao_ry] = fRotY;
		ao[playerid][index][ao_rz] = fRotZ;
		ao[playerid][index][ao_sx] = fScaleX;
		ao[playerid][index][ao_sy] = fScaleY;
		ao[playerid][index][ao_sz] = fScaleZ;
	}
	else
	{
		SendClientMessage(playerid, COLOR_RED, "Attached object edition not saved.");

		new i = index;
		SetPlayerAttachedObject(playerid, index, modelid, boneid, ao[playerid][i][ao_x], ao[playerid][i][ao_y], ao[playerid][i][ao_z], ao[playerid][i][ao_rx], ao[playerid][i][ao_ry], ao[playerid][i][ao_rz], ao[playerid][i][ao_sx], ao[playerid][i][ao_sy], ao[playerid][i][ao_sz]);
	}
	return 1;
}
stock load_bint() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `bints`");
	new rows = cache_num_rows();
	if(rows != BINT_COUNT) print("Кол-во БИНТ'ов в базе не совпадает с предопределным количеством");
	else for(new i; i < rows;i++) {
		cache_get_value_name_int(i,"id", gBints[i][bintID]);
		cache_get_value_name_int(i,"interior", gBints[i][bintInterior]);

		cache_get_value_name_float(i, "x", gBints[i][bintX]);
		cache_get_value_name_float(i, "y", gBints[i][bintY]);
		cache_get_value_name_float(i, "z", gBints[i][bintZ]);
		cache_get_value_name_float(i, "r", gBints[i][bintR]);
		
		cache_get_value_name_float(i, "xb", gBints[i][bintXB]);
		cache_get_value_name_float(i, "yb", gBints[i][bintYB]);
		cache_get_value_name_float(i, "zb", gBints[i][bintZB]);
		
		if(gBints[i][bintID] == 26) CreateDynamic3DTextLabel(""O"Яхт-клуб\n"W"Выход с бизнеса",-1,gBints[i][bintX],gBints[i][bintY],gBints[i][bintZ],15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

		cache_get_value_name(i, "name", gBints[i][bintName], 32);
		
		gBintEnterArea[i] = CreateDynamicSphere(gBints[i][bintX],gBints[i][bintY],gBints[i][bintZ],1.0, -1, gBints[i][bintInterior]);
		CreateDynamicPickup(1318,1,gBints[i][bintX],gBints[i][bintY],gBints[i][bintZ],-1, gBints[i][bintInterior]);
		
		switch(gBints[i][bintID]) {
		case 22: CreateDynamicPickup(1239,1,gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB],-1, gBints[i][bintInterior]);
		case 25: CreateDynamicPickup(1275,1,gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB],-1, gBints[i][bintInterior]);
		default: CreateDynamicPickup(1239,1,gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB],-1, gBints[i][bintInterior]);
		}
	}
	for(new i = 0;i<BINT_COUNT;i++) gBintBuyArea[i] = CreateDynamicSphere(gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB],1.0, -1, gBints[i][bintInterior]);
	printf("[Загрузка ...] Интереьры бизнесов успешно загружены (%i шт.)",rows);
	cache_delete(result);
	return true;
}
stock load_market() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `blackmarket`");
	rows = cache_num_rows();
	if(rows) {
		for(new i = 0; i < rows; i++) {
			cache_get_value_index_int(i,1, black_prods[0]);
			cache_get_value_index_int(i,2, black_prods[1]);
			cache_get_value_index_int(i,3, black_prods[2]);
			cache_get_value_index_int(i,4, black_prods[3]);
			cache_get_value_index_int(i,5, black_prods[4]);

			cache_get_value_index_int(i,6, black_prods[5]);
			cache_get_value_index_int(i,7, black_prods[6]);
			cache_get_value_index_int(i,8, black_prods[7]);
			cache_get_value_index_int(i,9, black_prods[8]);

			cache_get_value_index_int(i,10, black_prods[9]);
		}
	}
	cache_delete(result);
	printf("[Загрузка ...] Черный рынок успешно загружен (%i шт.)",rows);
	check_terrs();
	return true;
}
stock load_fracgun() {
	new Cache:result, rows;
	result = mysql_query (connects, "SELECT * FROM `frac_weapon`");
	rows = cache_num_rows();
	if(rows) {
		for(new i = 0; i < rows ; i++) {
			new slot,fraction;
			cache_get_value_int(i,"Slot",slot);
			cache_get_value_int(i,"Fraction",fraction);
			cache_get_value_int(i,"fwID",FW[slot][fraction][fwID]);
			cache_get_value_int(i,"fwGunID",FW[slot][fraction][fwGunID]);
			cache_get_value_int(i,"fwGunAmmo",FW[slot][fraction][fwGunAmmo]);
			cache_get_value_int(i,"fwArmor",FW[slot][fraction][fwArmor]);
			cache_get_value_int(i,"fwRank",FW[slot][fraction][fwRank]);
			cache_get_value(i, "fwName", FW[slot][fraction][fwName],64);
		}
	}
	cache_delete(result);
	print("[Загрузка ...] Оружие фракций успешно загружены");
	return 1;
}
stock load_economy() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `economy`");
	rows = cache_num_rows();
	if(rows) {

		cache_get_value_name_int(0,"nalog_1", Nalog[0]);// налог на недвижимость
		cache_get_value_name_int(0,"nalog_2", Nalog[1]);//пенсионный возраст
		cache_get_value_name_int(0,"nalog_3", Nalog[2]);//размер пенсии
		cache_get_value_name_int(0,"nalog_4", Nalog[3]);//процент от прибыли бизнеса государству
		cache_get_value_name_int(0,"nalog_5", Nalog[4]);//процент от прибыли бизнеса мафии
		cache_get_value_name_int(0,"nalog_6", Nalog[5]);//налог при переводе игроку виртуальной валюты через банк
		cache_get_value_name_int(0,"nalog_7", Nalog[6]);//20 % от гос. Стоимости дома и 50% от купленых улучшений ( при слёте ) – 80 % возвращается игроку.
	}
	cache_delete(result);
	print("[Загрузка ...] Экономика успешно загружена");
	return true;
}

stock load_funcbizz() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `business_func`");
	rows = cache_num_rows();
	if(rows >= MAX_BUSINESS_COUNT) print("Кол-во func бизнеса в базе превышает предопределнное количество");
	else if(!rows) print("Не обнаружено func бизнесов в базе");
	else for(new i = 0; i < rows;i++) {
		cache_get_value_name_int(i,"bizzID", FuncBizz[i][funcbID]);
		cache_get_value_name_int(i,"ID", FuncBizz[FuncBizz[i][funcbID]][funcbSlot]);
		cache_get_value_name(i, "name", FuncBizz[FuncBizz[i][funcbID]][funcbName], 20);
		cache_get_value_name(i, "name_car", FuncBizz[FuncBizz[i][funcbID]][funcbNameCar], 12);
		cache_get_value_name_int(i,"number", FuncBizz[FuncBizz[i][funcbID]][funcbNum]);
		new b_car[256],tarif[128];

		cache_get_value(i, "car", b_car), sscanf(b_car,"p<|>a<i>[20]",FuncBizz[FuncBizz[i][funcbID]][funcbCar]);
		cache_get_value(i, "tarif", tarif), sscanf(tarif,"p<|>a<i>[4]",FuncBizz[FuncBizz[i][funcbID]][funcbTarif]);
		cache_get_value_name_int(i,"color", FuncBizz[FuncBizz[i][funcbID]][funcbColor]);
		cache_get_value_name_int(i,"color_shash", FuncBizz[FuncBizz[i][funcbID]][funcbShash]);
		cache_get_value_name_int(i,"percent", FuncBizz[FuncBizz[i][funcbID]][funcbPercent]);
		cache_get_value_name_float(i,"percent2", FuncBizz[FuncBizz[i][funcbID]][funcbPercent2]);
		cache_get_value_name_int(i,"percent3", FuncBizz[FuncBizz[i][funcbID]][funcbPercent3]);
		switch(FuncBizz[i][funcbID]) {
		case 61: {
				for(new z = 0; z < 20; z++) {
					if(FuncBizz[FuncBizz[i][funcbID]][funcbCar][z] == 0) {
						FuncBizz[FuncBizz[i][funcbID]][funcbCars][z] = INVALID_VEHICLE_ID;
						continue;
					}
					creare_funccar(FuncBizz[i][funcbID], z);
				}
			}
		}
	}
	cache_delete(result);
	printf("[Загрузка ...] Функции бизнеса успешно загружена (%i шт.)",rows);
	return true;
}

stock load_atm() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `atms`");
	rows = cache_num_rows();
	if(!rows) print("Не обнаружено ATMS в базе");
	else for(new i = 0; i < rows;i++) {
		
		cache_get_value_float(i, "ATM_X", ATMData[i][ATM_Pos][0]);
		cache_get_value_float(i, "ATM_Y", ATMData[i][ATM_Pos][1]);
		cache_get_value_float(i, "ATM_Z", ATMData[i][ATM_Pos][2]);
		cache_get_value_float(i, "ATM_ROTX", ATMData[i][ATM_Pos][3]);
		cache_get_value_float(i, "ATM_ROTY", ATMData[i][ATM_Pos][4]);
		cache_get_value_float(i, "ATM_ROTZ", ATMData[i][ATM_Pos][5]);
		
		ATMData[i][atm_Taken] = 1;

		cache_get_value_int(i, "ATM_VW", ATMData[i][atm_VW]);
		cache_get_value_int(i, "ATM_INT", ATMData[i][atm_INT]);

		cache_get_value_int(i, "cash", ATMData[i][atm_cash]);

		ATMData[i][atm_Object] = CreateDynamicObject(2754, ATMData[i][ATM_Pos][0], ATMData[i][ATM_Pos][1], ATMData[i][ATM_Pos][2], 0.0, 0.0, ATMData[i][ATM_Pos][5], ATMData[i][atm_VW], ATMData[i][atm_INT]);
		
		new str[128];
		format(str,sizeof(str),"Банкомат\nВ банкомате:"GREEN" %d$"W"\n\nНажмите"P" ALT",ATMData[i][atm_cash]);
		ATMData[i][atm_Label] = Create3DTextLabel(str,-1, ATMData[i][ATM_Pos][0], ATMData[i][ATM_Pos][1], ATMData[i][ATM_Pos][2]+1, 10.0, ATMData[i][atm_VW]);
	}
	cache_delete(result);
	printf("[Загрузка ...] Банкоматы успешно загружены (%i шт.)", rows);
	return 1;
}
stock load_fracfreez() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `fracmorozed`");
	rows = cache_num_rows();
	for(new f = 0; f < 8; f++) cache_get_value_index_int(0, f, fracmoroz[f]);
	cache_delete(result);
	printf("[Загрузка ...] Фриз банд/мафий успешно загружен (%i шт.)",rows);
	return true;
}
stock SetString(param_1[], const param_2[], size = 300) return strmid(param_1, param_2, 0, strlen(param_2), size);


stock load_apartment() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `apartment`");
	gAparmentCount = cache_num_rows();
	for(new i; i<gAparmentCount;i++) {
		cache_get_value_name_int(i,"id", Apartment[i][aID]);
		cache_get_value_name_int(i,"pID", Apartment[i][apID]);
		cache_get_value_name(i, "owner", Apartment[i][aOwner], 24);
		cache_get_value_name_float(i,"x", Apartment[i][aX]);
		cache_get_value_name_float(i,"y", Apartment[i][aY]);
		cache_get_value_name_float(i,"z", Apartment[i][aZ]);
		cache_get_value_name_int(i,"money", Apartment[i][aMoney]);
		cache_get_value_name_int(i,"lock",Apartment[i][aLock]);
		cache_get_value_name_int(i,"day",Apartment[i][aDay]);
		aArea[i] = CreateDynamicSphere(Apartment[i][aX],Apartment[i][aY],Apartment[i][aZ],1.5,Apartment[i][apID],-1,-1);
		if(GetString("None",Apartment[i][aOwner])) {
			Apartment[i][aPickup] = CreateDynamicPickup(1273,1,Apartment[i][aX],Apartment[i][aY],Apartment[i][aZ],Apartment[i][apID]);
		}
		else
		{
			Apartment[i][aPickup] = CreateDynamicPickup(1272,1,Apartment[i][aX],Apartment[i][aY],Apartment[i][aZ], Apartment[i][apID]);
		}
	}
	printf("[Загрузка ...] Квартиры успешно загружены (%i шт.)",gAparmentCount);
	cache_delete(result);
	return true;
}

stock load_business() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `business`");
	gBusinessCount = cache_num_rows();
	new sqlstring[67];
	if(gBusinessCount >= MAX_BUSINESS_COUNT) print("Кол-во бизнесов в базе превышает предопределнное количество");
	else if(!gBusinessCount) print("Не обнаружено бизнесов в базе");
	else for(new i; i<gBusinessCount;i++) {
		cache_get_value_name_int(i,"id", gBusiness[i][bizzID]);

		cache_get_value_name(i, "name", gBusiness[i][bizzName], 64);
		
		cache_get_value_name_int(i,"type", gBusiness[i][bizzType]);
		cache_get_value_name_int(i,"bint", gBusiness[i][bizzBint]);
		cache_get_value_name_int(i,"ownerid", gBusiness[i][bizzOwnerID]);
		cache_get_value_name_int(i,"sellprice", gBusiness[i][bizzSellPrice]);
		cache_get_value_name_int(i,"bank", gBusiness[i][bizzBank]);
		cache_get_value_name_int(i,"price", gBusiness[i][bizzPrice]);
		cache_get_value_name_int(i,"enter", gBusiness[i][bizzEnter]);

		cache_get_value(i, "upgrade", sqlstring , 65), sscanf (sqlstring, "p<|>iii",
		gBusiness[i][bizzUpgrade][0], gBusiness[i][bizzUpgrade][1], gBusiness[i][bizzUpgrade][2]);

		cache_get_value_name_int(i,"product", gBusiness[i][bizzProduct]);
		cache_get_value_name_int(i,"order", gBusiness[i][bizzProdOrder]);
		cache_get_value_name_int(i,"orderprice", gBusiness[i][bizzProdOrderPrice]);

		cache_get_value_name_int(i,"status", gBusiness[i][bizzStatus]);

		cache_get_value_name_float(i, "x", gBusiness[i][bizzX]);
		cache_get_value_name_float(i, "y", gBusiness[i][bizzY]);
		cache_get_value_name_float(i, "z", gBusiness[i][bizzZ]);
		cache_get_value_name_float(i, "r", gBusiness[i][bizzR]);

		cache_get_value_name_int(i,"deliving", gBusiness[i][bizzDay]);
		cache_get_value_name_int(i,"mafia", gBusiness[i][bizzMafia]);
		cache_get_value_name_int(i,"procent", gBusiness[i][bizzPr]);
		cache_get_value_name(i, "owner", gBusiness[i][bizzOwner], MAX_PLAYER_NAME);
		
		if(gBusiness[i][bizzType] != 7 && gBusiness[i][bizzType] != 18) CreateDynamicPickup(19132,1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]);

		if(gBusiness[i][bizzType] == 18) CreateDynamicPickup(1239,1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]);
		
		gBusinessText[i] = CreateDynamic3DTextLabel("_",-1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]+1.0,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
		b_area[i] = CreateDynamicSphere(gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],1.5);
		
		new icon = 0, bint = gBusiness[i][bizzBint];
		switch(bint) {
		case 0: {
				if(gBusiness[i][bizzType] == 18) icon = 27;
				if(gBusiness[i][bizzType] == 20) icon = 5;
				if(gBusiness[i][bizzType] == 14) icon = 42;
				if(gBusiness[i][bizzType] == 18) icon = 27;
				if(gBusiness[i][bizzType] == 30) icon = 17;
				if(gBusiness[i][bizzType] == 31) icon = 47;
				else icon = 47;
			}
		case 1..4,11,12: icon = 49;
		case 5..10: icon = 45;
		case 16: icon = 10;
		case 17: icon = 14;
		case 18: icon = 29;
		case 19..21: icon = 6;
		case 50: icon = 55;
		case 22: icon = 42;
		case 23: icon = 48;
		case 24: icon = 34;
		case 25: icon = 54;
		case 30: icon = 55;
		case 13,15,31,32: icon = 56;
		case 14: icon = 17;
		case 33: icon = 47;
		}
		if(icon)
		{
			if(gBusiness[i][bizzType] != 15) gBusinessIcon[i] = CreateDynamicMapIcon(gBusiness[i][bizzX], gBusiness[i][bizzY], gBusiness[i][bizzZ], icon, -1);
		}
		UpdateBusinessText(i);
	}
	printf("[Загрузка ...] Бизнесы успешно загружены (%i шт.)",gBusinessCount);
	cache_delete(result);
	return 1;
}
stock UpdateBusinessText(id) {
	new mes2[420];
	if(id < 0 || id >= MAX_BUSINESS_COUNT || !gBusiness[id][bizzID]) return -1;
	
	if(gBusiness[id][bizzOwnerID]) {
		if(gBusiness[id][bizzStatus]) {
			new control[32];
			switch(gBusiness[id][bizzMafia]) {
			case fLCN: control = "Итальянская мафия";
			case fYAKUZA: control = "Японская мафия";
			case fRM: control = "Русская мафия";
			default: control = "-";
			}
			switch(gBusiness[id][bizzType]) {
			case 7: format(mes2,sizeof(mes2),""O"%s\n\n"G"Владелец: "P"%s\n"G"Стоимость: "W"%d$\n"G"Цена за 1 литр топлива: "GREEN"%d$\n"G"Купить канистру: "W"/buyfuel\n"G"Заправиться: "W"/fill\n"G"Зарядить автомобиль: "W"/battery\n"G"Цена за 1 единицу заряда: "GREEN"10$\n"G"Крышует: "W"%s",gBusiness[id][bizzName],gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice],gBusiness[id][bizzPrice],control);
			default: {
					if(gBusiness[id][bizzEnter]) format(mes2,sizeof(mes2),""O"%s\n\n"G"Владелец: "P"%s\n"G"Стоимость: "W"$%d\n"G"Цена за вход: "GREEN"$%i\n"G"Крышует: "W"%s",gBusiness[id][bizzName],gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice],gBusiness[id][bizzEnter],control);
					else format(mes2,sizeof(mes2),""O"%s\n\n"G"Владелец: "P"%s\n"G"Стоимость: "W"%d$\n"G"Крышует: "W"%s",gBusiness[id][bizzName],gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice],control);
				}
			}
		}
		else format(mes2,sizeof(mes2),"\t\t\t"NO"ЗАКРЫТО");
	}
	else {
		new control[32];
		switch(gBusiness[id][bizzMafia]) {
		case fLCN: control = "Итальянская мафия";
		case fYAKUZA: control = "Японская мафия";
		case fRM: control = "Русская мафия";
		default: control = "Отсутствует";
		}
		switch(gBusiness[id][bizzType]) {
		case 11: format(mes2,sizeof(mes2),""O"Таксопарк\n\n"W"Название: "P"%s\n"W"Владелец: "P"нет\n"W"Стоимость: "P"%i$",gBusiness[id][bizzName],gBusiness[id][bizzSellPrice]);
		case 15: format(mes2,sizeof(mes2),""O"Банковское отделение\n\n"W"Название: "P"%s\n"W"Владелец: "P"нет\n"W"Стоимость: "P"%i$",gBusiness[id][bizzName],gBusiness[id][bizzSellPrice]);
		case 7: format(mes2,sizeof(mes2),""O"Бизнес продается\n\n"W"Название: "P"%s\n"W"Стоимость: "P"%i$\n\n"G"Для покупки введите: "W"/buyfueling",gBusiness[id][bizzName],gBusiness[id][bizzSellPrice]);
		case 22: format(mes2,sizeof(mes2),""O"Наркопритон\n"W"Владелец: "P"%s\n\n"G"Вcтаньте на пикап, чтобы войти/выйти",control);
		default:format(mes2,sizeof(mes2),""O"Бизнес продается\n\n"W"Название: "P"%s\n"W"Стоимость: "P"%i$\n",gBusiness[id][bizzName],gBusiness[id][bizzSellPrice]);
		}
	}
	UpdateDynamic3DTextLabelText(gBusinessText[id],-1,mes2);
	return true;
}
stock load_bilboards() {
	new Cache:result,rows;
	result = mysql_query(connects, "SELECT * FROM `billboards`");
	rows = cache_num_rows();
	if(!rows) return print("Билборды не найдены");
	for(new idx = 0;idx < rows; idx++) {
		cache_get_value_name(idx, "bText", BildInfo[idx][bText], 144);
		cache_get_value_name(idx, "bPosText", BildInfo[idx][bPosText], 32);
		cache_get_value_name(idx, "bOwner", BildInfo[idx][bOwner], MAX_PLAYER_NAME);

		cache_get_value_name_int(idx, "bOwned", BildInfo[idx][bOwned]);
		cache_get_value_name_int(idx, "bBackColor", BildInfo[idx][bBackColor]);
		cache_get_value_name_int(idx, "bFontFace",  BildInfo[idx][bFontFace]);
		cache_get_value_name_int(idx, "bAligment", BildInfo[idx][bAligment]);
		cache_get_value_name_int(idx, "bFontSize", BildInfo[idx][bFontSize]);

		cache_get_value_name_float(idx, "PosX", BildInfo[idx][bPos][0]);
		cache_get_value_name_float(idx, "PosY",  BildInfo[idx][bPos][1]);
		cache_get_value_name_float(idx, "PosZ", BildInfo[idx][bPos][2]);
		cache_get_value_name_float(idx, "PosA", BildInfo[idx][bPos][3]);

		cache_get_value_name_int(idx, "bDay", BildInfo[idx][bDay]);
		cache_get_value_name_int(idx, "bModel", BildInfo[idx][bObjectModel]);
		BildInfo[idx][bObjectID] = CreateDynamicObjectEx(BildInfo[idx][bObjectModel],BildInfo[idx][bPos][0], BildInfo[idx][bPos][1], BildInfo[idx][bPos][2], 0.00000000, 0.00000000, BildInfo[idx][bPos][3],1000.000,1000.000); // bObject
		UpdateBuildText(idx);
	}
	cache_delete(result);
	return printf("[Загрузка ...] Билборды успешно загружены (%i шт.)",MAX_BILLBORDS);
}
CMD:contopen(playerid) {
	for(new i = 0; i <MAX_CONTAINER; i++){
 		conteiner[i] = 0;
	}
	return 1;
}
stock load_family() {
	new Cache:result;
	result = mysql_query (connects, "SELECT * FROM `family`");
	TotalFamily = cache_num_rows();
	if(TotalFamily >= FAMILY_COUNT) print("Кол-во семей в базе больше максимального");
	else if(!TotalFamily) print("Семьи в базе не найдены");
	else for(new i = 1; i < TotalFamily; i++) {
		cache_get_value_name_int(i,"id", gFamily[i][famID]);

		cache_get_value(i,"cname",gFamily[i][famCName], 32);
		cache_get_value(i,"name",gFamily[i][famName], 32);
		cache_get_value(i,"time",gFamily[i][famDate], 32);

		cache_get_value(i,"cowner",gFamily[i][famCOwner], MAX_PLAYER_NAME);
		cache_get_value(i,"owner",gFamily[i][famOwner], MAX_PLAYER_NAME);

		cache_get_value_int(i,"color",gFamily[i][famColor]);
		cache_get_value_int(i,"drugs",gFamily[i][famDrugs]);
		cache_get_value_int(i,"mats",gFamily[i][famMats]);

		cache_get_value_int(i,"invite",gFamily[i][famInvRang]);
		cache_get_value_int(i,"uninvite",gFamily[i][famUninvRang]);
		cache_get_value_int(i,"giverank",gFamily[i][famGiveRang]);
		cache_get_value_int(i,"sklad",gFamily[i][famSklad]);
		cache_get_value_int(i,"money_rank",gFamily[i][famSkladMoney]);
		cache_get_value_int(i,"spawn_rank",gFamily[i][famSpawnCar]);
		cache_get_value_int(i,"car_rank",gFamily[i][famBuyCar]);
		
		cache_get_value_int(i,"sklad_status",gFamily[i][famskladSt]);
		
		cache_get_value_name(i, "Rank_1", FamRanks[i][0], 24);
		cache_get_value_name(i, "Rank_2", FamRanks[i][1], 24);
		cache_get_value_name(i, "Rank_3", FamRanks[i][2], 24);
		cache_get_value_name(i, "Rank_4", FamRanks[i][3], 24);
		cache_get_value_name(i, "Rank_5", FamRanks[i][4], 24);
		cache_get_value_name(i, "Rank_6", FamRanks[i][5], 24);
		cache_get_value_name(i, "Rank_7", FamRanks[i][6], 24);
		cache_get_value_name(i, "Rank_8", FamRanks[i][7], 24);

		cache_get_value_name(i, "message", gFamily[i][famMessage], 71);

		cache_get_value_int(i,"talon",gFamily[i][famTalon]);
		cache_get_value_int(i,"point",gFamily[i][famPoint]);
		cache_get_value_int(i,"house",gFamily[i][famHouse]);
		cache_get_value_int(i,"type",gFamily[i][famType]);
		cache_get_value_int(i,"nation",gFamily[i][famNation]);
		
		cache_get_value_int(i,"ulush_house",gFamily[i][famUlushHouse]);
		
		cache_get_value_int(i,"ulush_car_1",gFamily[i][famUlushCar][1]);
		cache_get_value_int(i,"ulush_car_2",gFamily[i][famUlushCar][2]);
		cache_get_value_int(i,"ulush_car_3",gFamily[i][famUlushCar][3]);
		cache_get_value_int(i,"ulush_car_4",gFamily[i][famUlushCar][4]);
		
		cache_get_value_int(i,"car_1",CarFamily[i][0][carID]);
		cache_get_value_int(i,"car_2",CarFamily[i][1][carID]);
		cache_get_value_int(i,"car_3",CarFamily[i][2][carID]);
		cache_get_value_int(i,"car_4",CarFamily[i][3][carID]);
		cache_get_value_int(i,"car_5",CarFamily[i][4][carID]);
		
		new sscanf_str_1[320];
		cache_get_value_name(i,"components_0", sscanf_str_1, 128 ) ;
		sscanf ( sscanf_str_1, "p<|>dddddddddddddd",CarFamily[i][0][famVehcom_1],CarFamily[i][0][famVehcom_2],CarFamily[i][0][famVehcom_3],
		CarFamily[i][0][famVehcom_4],CarFamily[i][0][famVehcom_5],CarFamily[i][0][famVehcom_6],
		CarFamily[i][0][famVehcom_7],CarFamily[i][0][famVehcom_8],CarFamily[i][0][famVehcom_9],
		CarFamily[i][0][famVehcom_10],CarFamily[i][0][famVehcom_11],CarFamily[i][0][famVehcom_12],
		CarFamily[i][0][famVehcom_13],CarFamily[i][0][famVehcom_14]);
		
		new sscanf_str_2[320];
		cache_get_value_name(i,"components_1", sscanf_str_2, 128 ) ;
		sscanf ( sscanf_str_2, "p<|>dddddddddddddd",CarFamily[i][1][famVehcom_1],CarFamily[i][1][famVehcom_2],CarFamily[i][1][famVehcom_3],
		CarFamily[i][1][famVehcom_4],CarFamily[i][1][famVehcom_5],CarFamily[i][1][famVehcom_6],
		CarFamily[i][1][famVehcom_7],CarFamily[i][1][famVehcom_8],CarFamily[i][1][famVehcom_9],
		CarFamily[i][1][famVehcom_10],CarFamily[i][1][famVehcom_11],CarFamily[i][1][famVehcom_12],
		CarFamily[i][1][famVehcom_13],CarFamily[i][1][famVehcom_14]);
		
		new sscanf_str_3[320];
		cache_get_value_name(i,"components_2", sscanf_str_3, 128 ) ;
		sscanf ( sscanf_str_3, "p<|>dddddddddddddd",CarFamily[i][2][famVehcom_1],CarFamily[i][2][famVehcom_2],CarFamily[i][2][famVehcom_3],
		CarFamily[i][2][famVehcom_4],CarFamily[i][2][famVehcom_5],CarFamily[i][2][famVehcom_6],
		CarFamily[i][2][famVehcom_7],CarFamily[i][2][famVehcom_8],CarFamily[i][2][famVehcom_9],
		CarFamily[i][2][famVehcom_10],CarFamily[i][2][famVehcom_11],CarFamily[i][2][famVehcom_12],
		CarFamily[i][2][famVehcom_13],CarFamily[i][2][famVehcom_14]);
		
		new sscanf_str_4[320];
		cache_get_value_name(i,"components_3", sscanf_str_4, 128 ) ;
		sscanf ( sscanf_str_4, "p<|>dddddddddddddd",CarFamily[i][3][famVehcom_1],CarFamily[i][3][famVehcom_2],CarFamily[i][3][famVehcom_3],
		CarFamily[i][3][famVehcom_4],CarFamily[i][3][famVehcom_5],CarFamily[i][3][famVehcom_6],
		CarFamily[i][3][famVehcom_7],CarFamily[i][3][famVehcom_8],CarFamily[i][3][famVehcom_9],
		CarFamily[i][3][famVehcom_10],CarFamily[i][3][famVehcom_11],CarFamily[i][3][famVehcom_12],
		CarFamily[i][3][famVehcom_13],CarFamily[i][3][famVehcom_14]);
		
		new sscanf_str_5[320];
		cache_get_value_name(i,"components_4", sscanf_str_5, 128 ) ;
		sscanf ( sscanf_str_5, "p<|>dddddddddddddd",CarFamily[i][4][famVehcom_1],CarFamily[i][4][famVehcom_2],CarFamily[i][4][famVehcom_3],
		CarFamily[i][4][famVehcom_4],CarFamily[i][4][famVehcom_5],CarFamily[i][4][famVehcom_6],
		CarFamily[i][4][famVehcom_7],CarFamily[i][4][famVehcom_8],CarFamily[i][4][famVehcom_9],
		CarFamily[i][4][famVehcom_10],CarFamily[i][4][famVehcom_11],CarFamily[i][4][famVehcom_12],
		CarFamily[i][4][famVehcom_13],CarFamily[i][4][famVehcom_14]);
		
		new sscanf_paint[320];
		cache_get_value_name(i,"paint_0", sscanf_paint, 128 ) ;
		sscanf (sscanf_paint, "p<|>ddd",CarFamily[i][0][famVehColor],CarFamily[i][0][famVehColor_1],CarFamily[i][0][famVehPaint]);
		
		cache_get_value_name(i,"paint_1", sscanf_paint, 128 ) ;
		sscanf (sscanf_paint, "p<|>ddd",CarFamily[i][1][famVehColor],CarFamily[i][1][famVehColor_1],CarFamily[i][1][famVehPaint]);
		
		cache_get_value_name(i,"paint_2", sscanf_paint, 128 ) ;
		sscanf (sscanf_paint, "p<|>ddd",CarFamily[i][2][famVehColor],CarFamily[i][2][famVehColor_1],CarFamily[i][2][famVehPaint]);
		
		cache_get_value_name(i,"paint_3", sscanf_paint, 128 ) ;
		sscanf (sscanf_paint, "p<|>ddd",CarFamily[i][3][famVehColor],CarFamily[i][3][famVehColor_1],CarFamily[i][3][famVehPaint]);
		
		cache_get_value_name(i,"paint_4", sscanf_paint, 128 ) ;
		sscanf (sscanf_paint, "p<|>ddd",CarFamily[i][4][famVehColor],CarFamily[i][4][famVehColor_1],CarFamily[i][4][famVehPaint]);

		new sscanf_st[50];
		cache_get_value_name(i,"poscar1", sscanf_st, 30);
		sscanf(sscanf_st, "p<,>ffff",CarFamily[i][0][fam_cx],CarFamily[i][0][fam_cy],CarFamily[i][0][fam_cz],CarFamily[i][0][fam_ca]);

		cache_get_value_name(i,"poscar2", sscanf_st, 30);
		sscanf(sscanf_st, "p<,>ffff",CarFamily[i][1][fam_cx],CarFamily[i][1][fam_cy],CarFamily[i][1][fam_cz],CarFamily[i][1][fam_ca]);

		cache_get_value_name(i,"poscar3", sscanf_st, 30);
		sscanf(sscanf_st, "p<,>ffff",CarFamily[i][2][fam_cx],CarFamily[i][2][fam_cy],CarFamily[i][2][fam_cz],CarFamily[i][2][fam_ca]);

		cache_get_value_name(i,"poscar4", sscanf_st, 30);
		sscanf(sscanf_st, "p<,>ffff",CarFamily[i][3][fam_cx],CarFamily[i][3][fam_cy],CarFamily[i][3][fam_cz],CarFamily[i][3][fam_ca]);

		cache_get_value_name(i,"poscar5", sscanf_st, 30);
		sscanf(sscanf_st, "p<,>ffff",CarFamily[i][4][fam_cx],CarFamily[i][4][fam_cy],CarFamily[i][4][fam_cz],CarFamily[i][4][fam_ca]);
		
		CarFamily[i][0][LoadCar] = INVALID_VEHICLE_ID;
		CarFamily[i][1][LoadCar] = INVALID_VEHICLE_ID;
		CarFamily[i][2][LoadCar] = INVALID_VEHICLE_ID;
		CarFamily[i][3][LoadCar] = INVALID_VEHICLE_ID;
		CarFamily[i][4][LoadCar] = INVALID_VEHICLE_ID;
		
		if(gFamily[i][famHouse])
		{
			for(new c = 0; c < 5; c++) {
				if(CarFamily[i][c][fam_cx] != 0)
				{
					new str[56];
					format(str,56,"{%s}%s",FamilyColor[gFamily[i][famColor]], gFamily[i][famName]);
					
					CarFamily[i][c][LoadCar] = A_CreateVehicle(CarFamily[i][c][carID], CarFamily[i][c][fam_cx],CarFamily[i][c][fam_cy],CarFamily[i][c][fam_cz],CarFamily[i][c][fam_ca], FamilyColorC[gFamily[i][famColor]], FamilyColorC[gFamily[i][famColor]], -1, VEHICLE_TYPE_FAMILY);
					VehicleInfo[CarFamily[i][c][LoadCar]][vFamily] = gFamily[i][famID];
					
					VehicleInfo[CarFamily[i][c][LoadCar]][vFuel] = 100;
					VehicleInfo[CarFamily[i][c][LoadCar]][vAkum] = 100;
					VehicleInfo[CarFamily[i][c][LoadCar]][vFslot] = c;
					SetVehicleNumberText(CarFamily[i][c][LoadCar], str);
					LoadFamilyTuning(i, CarFamily[i][c][LoadCar], c);
					
					VehicleInfo[CarFamily[i][c][LoadCar]][vColor][0] = CarFamily[i][c][famVehColor];
					VehicleInfo[CarFamily[i][c][LoadCar]][vColor][1] = CarFamily[i][c][famVehColor_1];
					
					ChangeVehicleColor(CarFamily[i][c][LoadCar], VehicleInfo[CarFamily[i][c][LoadCar]][vColor][0], VehicleInfo[CarFamily[i][c][LoadCar]][vColor][1]);
				}
			}
		}
	}
	cache_delete(result);
	printf("[Загрузка ...] Семьи успешно загружены (%i шт.)",TotalFamily);
	return 1;
}
stock load_house() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `houses`");
	gHouseCount = cache_num_rows();
	new sqlstring[67];
	if(gHouseCount >= MAX_HOUSE_COUNT) print("Кол-во домов в базе больше максимального");
	else if(!gHouseCount) print("Домов в базе не найдено");
	else for(new i = 0; i < gHouseCount; i++) {
		cache_get_value_name_int(i,"id", gHouses[i][houseID]);

		cache_get_value_name_int(i, "class", gHouses[i][houseClass]);
		cache_get_value_name_int(i, "day", gHouses[i][houseDay]);
		cache_get_value_name_int(i, "price", gHouses[i][housePrice]);
		cache_get_value_name_int(i, "hint", gHouses[i][houseHint]);

		cache_get_value(i, "improve", sqlstring , 20), sscanf (sqlstring, "p<|>iiii",
		gHouses[i][houseImprove][0], gHouses[i][houseImprove][1], gHouses[i][houseImprove][2],
		gHouses[i][houseImprove][3]);

		cache_get_value(i, "gun", sqlstring , 65), sscanf (sqlstring, "p<|>iiiiiiiii",
		gHouses[i][houseGun][0], gHouses[i][houseGun][1], gHouses[i][houseGun][2], gHouses[i][houseGun][3]
		, gHouses[i][houseGun][4], gHouses[i][houseGun][5], gHouses[i][houseGun][6], gHouses[i][houseGun][7], gHouses[i][houseGun][8]);

		cache_get_value_name_int(i, "safecode", gHouses[i][houseSafeCode]);
		cache_get_value_name_int(i, "safemoney", gHouses[i][houseSafeMoney]);
		cache_get_value_name_int(i, "drugs", gHouses[i][houseDrugs]);
		cache_get_value_name_int(i, "medkit", gHouses[i][houseHealth]);
		cache_get_value_name_int(i, "products", gHouses[i][houseProducts]);
		cache_get_value_name_int(i, "close", gHouses[i][houseClose]);

		cache_get_value_name_float(i, "x", gHouses[i][houseX]);
		cache_get_value_name_float(i, "y", gHouses[i][houseY]);
		cache_get_value_name_float(i, "z", gHouses[i][houseZ]);
		cache_get_value_name_float(i, "r", gHouses[i][houseR]);
		cache_get_value_name_float(i, "parkx", gHouses[i][houseParkX]);
		cache_get_value_name_float(i, "parky", gHouses[i][houseParkY]);
		cache_get_value_name_float(i, "parkz", gHouses[i][houseParkZ]);
		cache_get_value_name_float(i, "parkr", gHouses[i][houseParkR]);

		cache_get_value_name_int(i, "ownerid", gHouses[i][houseOwnerID]);

		cache_get_value_name(i, "owner", gHouses[i][houseOwner]);

		cache_get_value_name_int(i, "peopleid1", gHouses[i][houseHabitID][0]);
		cache_get_value_name_int(i, "peopleid2", gHouses[i][houseHabitID][1]);

		cache_get_value_name(i, "people1", gHouseArendator[i][0]);
		cache_get_value_name(i, "people2", gHouseArendator[i][1]);
		cache_get_value_name_int(i, "family", gHouses[i][houseFamily]); 
		cache_get_value_name_int(i, "family_id", gHouses[i][houseFamilyID]);
		
		gHouseArea[i] = CreateDynamicSphere(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],1.5,0,0,-1);
		if(gHouses[i][houseOwner]) {
			gHousePickup[i] = CreateDynamicPickup(1272,1,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],0,0);
			gHouseIcon[i] = CreateDynamicMapIcon(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],32,CWHITE);
		}
		else {
			gHousePickup[i] = CreateDynamicPickup(1273,1,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],0,0);
			gHouseIcon[i] = CreateDynamicMapIcon(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],31,CWHITE);
		}
		gHouses[i][houseRob] = -1;
	}
	cache_delete(result);
	printf("[Загрузка ...] Дома успешно загружены (%i шт.)", gHouseCount);
	return true;
}

stock load_greenzone() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `"TABLE_GREENZONE"`");
	rows = cache_num_rows();
	for(new i = 1; i <= rows; i++) {
		cache_get_value_name_int(i-1, "id", GREENZONE[i][grid]);

		cache_get_value_name_float(i-1, "grx", GREENZONE[i][grX]);
		cache_get_value_name_float(i-1, "gry", GREENZONE[i][grY]);
		cache_get_value_name_float(i-1, "grz", GREENZONE[i][grZ]);
		cache_get_value_name_float(i-1, "grd", GREENZONE[i][grD]);

		cache_get_value_name(i-1, "grname", GREENZONE[i][grName], 32);

		cache_get_value_name_int(i-1, "grvirt", GREENZONE[i][grVirt]);
		TOTALZONE++;
	}
	cache_delete(result);
	printf("[Загрузка ...] Зеленые зоны успешно загружены (%i шт.)",TOTALZONE);
	return 1;
}
stock load_gangzone()
{
	new Cache: result, rows;
	result = mysql_query(connects, "SELECT * FROM `"TABLE_GANGZONE"`");
	rows = cache_num_rows();

	for (new i = 0; i < rows; i++)
	{
		cache_get_value_name_int(i, "id", GZInfo[i][gID]);

		cache_get_value_name_float(i, "coord_one", GZInfo[i][gCoords][0]);
		cache_get_value_name_float(i, "coord_two", GZInfo[i][gCoords][1]);
		cache_get_value_name_float(i, "coord_three", GZInfo[i][gCoords][2]);
		cache_get_value_name_float(i, "coord_four", GZInfo[i][gCoords][3]);

		cache_get_value_name_int(i, "gang_owner", GZInfo[i][gFrakVlad]);

		GZInfo[i][gZone] = GangZoneCreate(GZInfo[i][gCoords][0], GZInfo[i][gCoords][1], GZInfo[i][gCoords][2], GZInfo[i][gCoords][3]);

		VladGzone[GZInfo[i][gFrakVlad]]++;
		GZInfo[i][gTime] = -1;

		TOTALGZ++;
	}
	cache_delete(result);
	printf("[Загрузка ...] ГангЗоны успешно загружены (%i шт.)", TOTALGZ);
	return 1;
}

stock load_fractions() {
	new string[1024];
	for(new i; i < 15; i ++) RankName[0][i] = "Гражданин";
	new Cache:result, rows;
	format(string, sizeof(string), "SELECT * FROM `fractions`");
	result = mysql_query(connects, string);
	rows = cache_num_rows();
	for(new i = 1;i <= rows;i ++) {
		cache_get_value_name_int(i-1, "ID", FI[i][fID]);

		cache_get_value_name(i-1, "Name", FI[i][fName], 32);
		cache_get_value_name(i-1, "Leader", FI[i][fLeader], MAX_PLAYER_NAME);
		cache_get_value_name(i-1, "Admin", FI[i][fAdmin], MAX_PLAYER_NAME);
		cache_get_value_name(i-1, "Time", FI[i][fTime], 53);

		cache_get_value_name_int(i-1, "Bank", FI[i][fBank]);
		cache_get_value_name_int(i-1, "BankCash", FI[i][fBankCash]);
		cache_get_value_name_int(i-1, "Drugs", FI[i][fDrugs]);
		cache_get_value_name_int(i-1, "Mats", FI[i][fMats]);
		cache_get_value_name_int(i-1, "Health", FI[i][fHealth]);
		cache_get_value_name_int(i-1, "Sklad", FI[i][fSklad]);
		cache_get_value_name_int(i-1, "Price", FI[i][fPrice]);
		cache_get_value_name_int(i-1, "Skin", FI[i][fSkin]);
		cache_get_value_name_int(i-1, "MaxRang", FI[i][fMaxRang]);
		cache_get_value_name_int(i-1, "RangInvite", FI[i][fInviteRang]);
		cache_get_value_name_int(i-1, "RangUninvite", FI[i][fUninviteRang]);
		cache_get_value_name_int(i-1, "GiveRang", FI[i][fGiveRang]);
		cache_get_value_name_int(i-1, "UseStock", FI[i][fUseStock]);
		cache_get_value_name_int(i-1, "SpawnRang", FI[i][fSpawnRang]);
		cache_get_value_name_int(i-1, "VW", FI[i][fVw]);
		cache_get_value_name_int(i-1, "INT", FI[i][fInt]);
		cache_get_value_name_int(i-1, "DrugsBuy", FI[i][fDrugsBuy]);
		cache_get_value_name_int(i-1, "DrugsPrice", FI[i][fDrugsPrice]);
		cache_get_value_name_int(i-1, "AntiTk", FI[i][fAntiTK]);
		cache_get_value_name_int(i-1, "fRating", FI[i][fRating]);

		cache_get_value_name(i-1, "Rank_1", RankName[i][0], 24);
		cache_get_value_name(i-1, "Rank_2", RankName[i][1], 24);
		cache_get_value_name(i-1, "Rank_3", RankName[i][2], 24);
		cache_get_value_name(i-1, "Rank_4", RankName[i][3], 24);
		cache_get_value_name(i-1, "Rank_5", RankName[i][4], 24);
		cache_get_value_name(i-1, "Rank_6", RankName[i][5], 24);
		cache_get_value_name(i-1, "Rank_7", RankName[i][6], 24);
		cache_get_value_name(i-1, "Rank_8", RankName[i][7], 24);
		cache_get_value_name(i-1, "Rank_9", RankName[i][8], 24);
		cache_get_value_name(i-1, "Rank_10", RankName[i][9], 24);
		cache_get_value_name(i-1, "Rank_11", RankName[i][10], 24);
		cache_get_value_name(i-1, "Rank_12", RankName[i][11], 24);
		cache_get_value_name(i-1, "Rank_13", RankName[i][12], 24);
		cache_get_value_name(i-1, "Rank_14", RankName[i][13], 24);
		cache_get_value_name(i-1, "Rank_15", RankName[i][14], 24);
		
	}
	cache_delete(result);
	printf("[Загрузка ...] Фракции успешно загружены (%i шт.)",rows);
	return true;
}
stock load_anticheat()
{
	new Cache: result, rows;
	result = mysql_query(connects, "SELECT * FROM `anticheats`");
	rows = cache_num_rows();
	for (new i = 0; i < rows; i++)
	{
		AntiCheat[i][acID] = i;
		cache_get_value_name(i, "cheatname", AntiCheat[i][acName], 63);
		cache_get_value_name_int(i, "cheatvalue", AntiCheat[i][acValue]);
	}
	if (cache_is_valid(result)) cache_delete(result);
	printf("[Загрузка ...] Античит успешно загружен (%i шт.)", rows);
	return 1;
}
stock load_diplomation() {
	new Cache:result,rows;
	new sqlstring[38];
	result = mysql_query(connects, "SELECT * FROM `diplomation`");
	rows = cache_num_rows();
	if(rows) {
		for(new i = 0; i < rows; i++) {
			cache_get_value(i, "f_dip", sqlstring , 38), sscanf (sqlstring, "p<|>iiiiiiii",
			f_diplomacy[i][0], f_diplomacy[i][1], f_diplomacy[i][2],
			f_diplomacy[i][3], f_diplomacy[i][4], f_diplomacy[i][5], f_diplomacy[i][6], f_diplomacy[i][7]);
		}
	}
	cache_delete(result);
	printf("[Загрузка ...] Дипломатия успешно загружена (%i шт.)", rows);
}

stock load_others() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `"TABLE_OTHERS"`");
	rows = cache_num_rows();
	if(rows) {
		for(new i = 0; i <rows; i++) {
			cache_get_value_index_int(i,1, action_server[0]);
			cache_get_value_index_int(i,2, zavodsklad);
			cache_get_value_index_int(i,3, action_server[1]);
			cache_get_value_index_int(i,4, action_server[2]);
			cache_get_value_index_int(i,5, casino);
			cache_get_value_index_int(i,6, woodsklad);
			cache_get_value_index_int(i,7, tk_unloading[0]);
			cache_get_value_index_int(i,8, tk_unloading[1]);
			cache_get_value_index_int(i,9, tk_unloading[2]);
			cache_get_value_index_int(i,10, tk_unloading[3]);
			cache_get_value_index_int(i,11, invite_frac[0]);//PD
			cache_get_value_index_int(i,12, invite_frac[1]);//FBI
			cache_get_value_index_int(i,13, invite_frac[2]);//ARMY
			cache_get_value_index_int(i,14, invite_frac[3]);//MEDICS
			cache_get_value_index_int(i,15, invite_frac[4]);//NEWS
			cache_get_value_index_int(i,16, invite_frac[5]);//MAFIA
			cache_get_value_index_int(i,17, invite_frac[6]);//BAND
			cache_get_value_index_int(i,18, invite_frac[7]);//WH
		}
	}
	cache_delete(result);
	return true;
}
stock load_garage() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `garage`");
	CountGarage = cache_num_rows();
	for(new i = 1; i <= CountGarage;i ++) {
		cache_get_value_name_int(i-1, "ID", FG[i][gGID]);
		cache_get_value_name_int(i-1, "OwnerID", FG[i][gOwnerID]);
		cache_get_value_name_int(i-1, "type", FG[i][gTypes]);
		cache_get_value_name_int(i-1, "Active", FG[i][gActive]);
		cache_get_value_name_int(i-1, "Open", FG[i][gOpen]);
		cache_get_value_name_float(i-1, "PosX", FG[i][posX]);
		cache_get_value_name_float(i-1, "PosY", FG[i][posY]);
		cache_get_value_name_float(i-1, "PosZ", FG[i][posZ]);
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"{F9C7A1}Гараж\n\n"W"Класс:{F9C7A1} %s"W"\nВладелец:{F9C7A1}%s"W"",
		GetNameClassG(FG[i][gTypes]), GetOwnerIDGarage(FG[i][gOwnerID]));

	//	UpdateDynamic3DTextLabelText(gContainer[i][cText], -1, STRING_GLOBAL);
		
		FGarage[FG[i][gGID]] = Create3DTextLabel(STRING_GLOBAL, 0x008080FF, FG[i][posX], FG[i][posY], FG[i][posZ], 15.0, 0, 0);
	}
	cache_delete(result);
	printf("[Загрузка ...] Гаражы успешно загружены (%i шт.)",CountGarage);
	return true;
}
stock GetOwnerIDGarage(ID)
{
	new name[50];
	switch(ID)
	{
  		case -1: name = "None";
		default: format(name, sizeof(name), "%s", player_name[ID]);
	}
	return name;
}
stock GetNameClassG(type)
{
	new str[50];
	switch(type)
	{
		case 1: str = "Низкий";
		case 2: str = "Средний";
		case 3: str = "Высокий";
	}
	return str;
}
stock load_graffity() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `graffity`");

	CountGraffity = cache_num_rows();
	if(CountGraffity) {
		new idx;
		for(idx = 1; idx <= CountGraffity; idx++) {
			new obj;
			//new obj,icon;
			cache_get_value_index_int(idx-1,0,GrafInfo[idx][gId]);
			cache_get_value_index_int(idx-1,1,GrafInfo[idx][gFrak]);
			cache_get_value_index_float(idx-1,2, GrafInfo[idx][gr_x][0]);
			cache_get_value_index_float(idx-1,3, GrafInfo[idx][gr_x][1]);
			cache_get_value_index_float(idx-1,4, GrafInfo[idx][gr_x][2]);
			cache_get_value_index_float(idx-1,5, GrafInfo[idx][gr_x][3]);
			cache_get_value_index_float(idx-1,6, GrafInfo[idx][gr_x][4]);
			cache_get_value_index_float(idx-1,7, GrafInfo[idx][gr_x][5]);
			switch(GrafInfo[idx][gFrak]) {
			case 0: obj = 18666;
			case 20: obj = 18659;
			case 21: obj = 18661;
			case 22: obj = 18663;
			case 18: obj = 18664;
			case 19: obj = 18665;
			}
			GrafInfo[idx][gObject] = CreateDynamicObject(obj, GrafInfo[idx][gr_x][0], GrafInfo[idx][gr_x][1], GrafInfo[idx][gr_x][2], GrafInfo[idx][gr_x][3], GrafInfo[idx][gr_x][4], GrafInfo[idx][gr_x][5]);
		}
		printf("[Загрузка ...] Граффити успешно загружено (%i шт.)", CountGraffity);
	}
	cache_delete(result);
	return true;
}
stock load_vehicles() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `transport` ORDER BY `model`");
	cache_get_row_count(rows);
	for(new i=0;i<rows;i++) {
		cache_get_value_index_int(i,0,gTransport[i][trID]);
		cache_get_value_index_int(i,1,gTransport[i][trModel]);
		cache_get_value_index(i,2,gTransport[i][trName], 35);
		cache_get_value_index_int(i,3,gTransport[i][trPrice]);
		cache_get_value_index_int(i,4,gTransport[i][trTank]);
		cache_get_value_index_float(i,5,gTransport[i][trConsumption]);
		cache_get_value_index_int(i,6,gTransport[i][trClass]);
		cache_get_value_index_int(i,7,gTransport[i][trFuelable]);
		cache_get_value_index_int(i,8,gTransport[i][trSellable]);
		cache_get_value_index_int(i,9,gTransport[i][trProds]);
	}
	//mysql_query(connects, "DELETE FROM `goscar` WHERE model = '596'");
	//mysql_query(connects, "DELETE FROM `goscar` WHERE model = '523'");
	printf("[Загрузка ...] Транспорт успешно загружен (%i шт.)", rows);
	//================ Транспорт Итальянской мафии ======================
	vehiclebatrak[0] = AddStaticVehicleEx(579, 1235.6318, -893.8714, 42.5592, -84.0000, 6, 6, 100);
	vehiclebatrak[1] = AddStaticVehicleEx(579, 1235.3328, -887.5833, 42.5592, -84.0000, 6, 6, 100);
	vehiclebatrak[2] = AddStaticVehicleEx(413, 1235.4478, -890.7241, 42.8491, -84.0000, 6, 6, 100);
	vehiclebatrak[3] = AddStaticVehicleEx(409, 1301.5565, -904.6199, 42.5616, 4.0000, 6, 6, 100);
	vehiclebatrak[4] = AddStaticVehicleEx(580, 1287.9712, -908.6672, 42.6356, -84.0000, 6, 6, 100);
	vehiclebatrak[5] = AddStaticVehicleEx(580, 1286.5410, -902.3293, 42.9964, -84.0000, 6, 6, 100);
	VehicleInfo[vehiclebatrak[0]][vAkum] = 100;VehicleInfo[vehiclebatrak[1]][vAkum] = 100;VehicleInfo[vehiclebatrak[2]][vAkum] = 100;VehicleInfo[vehiclebatrak[3]][vAkum] = 100;VehicleInfo[vehiclebatrak[4]][vAkum] = 100;VehicleInfo[vehiclebatrak[5]][vAkum] = 100;
	VehicleInfo[vehiclebatrak[0]][vFuel] = 100;VehicleInfo[vehiclebatrak[1]][vFuel] = 100;VehicleInfo[vehiclebatrak[2]][vFuel] = 100;VehicleInfo[vehiclebatrak[3]][vFuel] = 100;VehicleInfo[vehiclebatrak[4]][vFuel] = 100;VehicleInfo[vehiclebatrak[5]][vFuel] = 100;
	//===================================================================
	//======================= Транспорт ЛСПД ============================
	vehiclelspd[0] = AddStaticVehicleEx(427, 1553.3420, -1607.4092, 13.3082, -179.0000, 0, 0, 100);
	vehiclelspd[1] = AddStaticVehicleEx(427, 1556.9703, -1607.3798, 13.3082, -179.0000, 0, 0, 100);
	vehiclelspd[2] = AddStaticVehicleEx(427, 1560.4553, -1607.3889, 13.3082, -179.0000, 0, 0, 100);
	vehiclelspd[3] = AddStaticVehicleEx(528, 1563.9705, -1607.7632, 13.2417, -180.0000, 0, 0, 100);
	vehiclelspd[4] = AddStaticVehicleEx(528, 1567.4531, -1607.7847, 13.2417, -180.0000, 0, 0, 100);
	vehiclelspd[5] = AddStaticVehicleEx(596, 1570.7377, -1607.5173, 12.9441, -181.0000, 1, 0, 100);
	vehiclelspd[6] = AddStaticVehicleEx(596, 1574.1162, -1607.6606, 12.9441, -181.0000, 1, 0, 100);
	vehiclelspd[7] = AddStaticVehicleEx(596, 1577.1599, -1607.6594, 12.9441, -181.0000, 1, 0, 100);
	vehiclelspd[8] = AddStaticVehicleEx(596, 1580.2411, -1607.7496, 12.9441, -181.0000, 1, 0, 100);
	vehiclelspd[10] = AddStaticVehicleEx(599, 1583.7236, -1607.8884, 13.3806, -180.0000, 0, 0, 100);
	vehiclelspd[11] = AddStaticVehicleEx(599, 1587.2660, -1607.9458, 13.3806, -180.0000, 0, 0, 100);
	vehiclelspd[12] = AddStaticVehicleEx(599, 1590.5470, -1607.9381, 13.3806, -180.0000, 0, 0, 100);
	vehiclelspd[13] = AddStaticVehicleEx(497, 1546.4990, -1608.4860, 13.5145, 0.0000, 0, 0, 100);
	vehiclelspd[14] = AddStaticVehicleEx(523, 1593.8879, -1607.7197, 12.8145, -182.0000, 0, 0, 100);
	vehiclelspd[15] = AddStaticVehicleEx(523, 1596.0393, -1607.8796, 12.8145, -182.0000, 0, 0, 100);
	vehiclelspd[16] = AddStaticVehicleEx(523, 1598.0753, -1607.9111, 12.8145, -182.0000, 0, 0, 100);
	vehiclelspd[17] = AddStaticVehicleEx(523, 1600.3739, -1607.9921, 12.8145, -182.0000, 0, 0, 100);
	vehiclelspd[18] = AddStaticVehicleEx(523, 1602.5896, -1607.9382, 12.8145, -182.0000, 0, 0, 100);
	VehicleInfo[vehiclelspd[0]][vAkum] = 100;VehicleInfo[vehiclelspd[1]][vAkum] = 100;VehicleInfo[vehiclelspd[2]][vAkum] = 100;VehicleInfo[vehiclelspd[3]][vAkum] = 100;VehicleInfo[vehiclelspd[4]][vAkum] = 100;VehicleInfo[vehiclelspd[5]][vAkum] = 100;VehicleInfo[vehiclelspd[6]][vAkum] = 100;VehicleInfo[vehiclelspd[7]][vAkum] = 100;VehicleInfo[vehiclelspd[8]][vAkum] = 100;VehicleInfo[vehiclelspd[9]][vAkum] = 100;VehicleInfo[vehiclelspd[10]][vAkum] = 100;VehicleInfo[vehiclelspd[11]][vAkum] = 100;VehicleInfo[vehiclelspd[12]][vAkum] = 100;VehicleInfo[vehiclelspd[13]][vAkum] = 100;VehicleInfo[vehiclelspd[14]][vAkum] = 100;VehicleInfo[vehiclelspd[15]][vAkum] = 100;VehicleInfo[vehiclelspd[16]][vAkum] = 100;VehicleInfo[vehiclelspd[17]][vAkum] = 100;VehicleInfo[vehiclelspd[18]][vAkum] = 100;
	VehicleInfo[vehiclelspd[0]][vFuel] = 100;VehicleInfo[vehiclelspd[1]][vFuel] = 100;VehicleInfo[vehiclelspd[2]][vFuel] = 100;VehicleInfo[vehiclelspd[3]][vFuel] = 100;VehicleInfo[vehiclelspd[4]][vFuel] = 100;VehicleInfo[vehiclelspd[5]][vFuel] = 100;VehicleInfo[vehiclelspd[6]][vFuel] = 100;VehicleInfo[vehiclelspd[7]][vFuel] = 100;VehicleInfo[vehiclelspd[8]][vFuel] = 100;VehicleInfo[vehiclelspd[9]][vFuel] = 100;VehicleInfo[vehiclelspd[10]][vFuel] = 100;VehicleInfo[vehiclelspd[11]][vFuel] = 100;VehicleInfo[vehiclelspd[12]][vFuel] = 100;VehicleInfo[vehiclelspd[13]][vFuel] = 100;VehicleInfo[vehiclelspd[14]][vFuel] = 100;VehicleInfo[vehiclelspd[15]][vFuel] = 100;VehicleInfo[vehiclelspd[16]][vFuel] = 100;VehicleInfo[vehiclelspd[17]][vFuel] = 100;VehicleInfo[vehiclelspd[18]][vFuel] = 100;
	//===================================================================
	cache_delete(result);
	return 1;
}
cmd:aexit(playerid, params[])
{
	if(dostup[playerid] == 1) 
	{
		dostup[playerid] = 0;
		return SendClientMessage(playerid, COLOR_GREY, "Вы вышли с режима администратора!");
	}
	return 1;
}
CB: load_cars(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) {
		for(new i = 0; i < 2; i++) {
			new query[128];
			mysql_format(connects, query, sizeof(query), "INSERT INTO `"TABLE_CARS"` (`owner`) VALUES ('%s')" ,player_name[playerid]);
			mysql_tquery(connects, query, "", "");
		}
		return SendClientMessage(playerid, COLOR_GREY, "Произошла ошибка с загрузкой автомобиля!"),  KickEx(playerid),printf("У %s проблема с загрузкой авто", player_name[playerid]);
	}
	for(new x = 0; x < rows; x++)
	{
		cache_get_value_name_int(x, "id", CarsInfo[playerid][carID][x]);
		
		cache_get_value_name_int(x, "model", CarsInfo[playerid][carModel][x]);
		
		cache_get_value_name_int(x, "color_one", CarsInfo[playerid][carColor_one][x]);
		cache_get_value_name_int(x, "color_two", CarsInfo[playerid][carColor_two][x]);
		
		cache_get_value_name_float(x, "drived", CarsInfo[playerid][carDrived][x]);
		cache_get_value_name_float(x, "fuel", CarsInfo[playerid][carFuel][x]);
		cache_get_value_name_float(x, "Akum", CarsInfo[playerid][carAkum][x]);
		
		cache_get_value_name_int(x, "kanistra", CarsInfo[playerid][carKanistra][x]);
		cache_get_value_name_int(x, "narko", CarsInfo[playerid][carNarko][x]);
		cache_get_value_name_int(x, "mats", CarsInfo[playerid][carMats][x]);
		cache_get_value_name_int(x, "deagle", CarsInfo[playerid][carDeagle][x]);
		cache_get_value_name_int(x, "ak47", CarsInfo[playerid][carAK47][x]);
		cache_get_value_name_int(x, "m4", CarsInfo[playerid][carM4][x]);
		cache_get_value_name_int(x, "shot", CarsInfo[playerid][carShot][x]);
		
		cache_get_value_name_int(x, "paintjob", CarsInfo[playerid][carPaintJob][x]);
		cache_get_value_name(x, "number", NumberVehicle[playerid][x], 30);
		
		new sscanf_str[128];
		cache_get_value_name(x,"components", sscanf_str, 128 ) ;
		sscanf ( sscanf_str, "p<|>dddddddddddddd",CarsInfo[playerid][carVehcom_1][x],CarsInfo[playerid][carVehcom_2][x],
		CarsInfo[playerid][carVehcom_3][x],CarsInfo[playerid][carVehcom_4][x], CarsInfo[playerid][carVehcom_5][x],
		CarsInfo[playerid][carVehcom_6][x], CarsInfo[playerid][carVehcom_7][x], CarsInfo[playerid][carVehcom_8][x],
		CarsInfo[playerid][carVehcom_9][x], CarsInfo[playerid][carVehcom_10][x], CarsInfo[playerid][carVehcom_11][x],
		CarsInfo[playerid][carVehcom_12][x], CarsInfo[playerid][carVehcom_13][x],CarsInfo[playerid][carVehcom_14][x]);
	}
	if(PI[playerid][pHouse])
	{
		new houseid = PI[playerid][pHouse]-1;
		if(gHouses[houseid][houseImprove][2]){
			loading_cars(playerid,0);
			loading_cars(playerid,1);
		}
		else if(!gHouses[houseid][houseImprove][2]){
			loading_cars(playerid,0);
		}
	}
	if(PI[playerid][pRoom]){
		loading_cars(playerid,0);
	}
	return true;
}
stock loading_cars(playerid, car) {
	if(!PI[playerid][pHouse] && !PI[playerid][pRoom] && !PI[playerid][pTempKey]) return 1;
	if(PI[playerid][pRoom]) {
		if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
			CarsInfo[playerid][carFuel][0] = VehicleInfo[house_car[playerid][0]][vFuel];
			CarsInfo[playerid][carAkum][0] = VehicleInfo[house_car[playerid][0]][vAkum];
			CarsInfo[playerid][carDrived][0] = VehicleInfo[house_car[playerid][0]][vDrived];
			A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
		}
		else if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
			CarsInfo[playerid][carFuel][1] = VehicleInfo[house_car[playerid][1]][vFuel];
			CarsInfo[playerid][carAkum][1] = VehicleInfo[house_car[playerid][1]][vAkum];
			CarsInfo[playerid][carDrived][1] = VehicleInfo[house_car[playerid][1]][vDrived];
			A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;
		}
	}
	if(PI[playerid][pHouse])
	{
		new house = PI[playerid][pHouse]-1;
		if(!gHouses[house][houseImprove][2]) {
			if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
				CarsInfo[playerid][carFuel][0] = VehicleInfo[house_car[playerid][0]][vFuel];
				CarsInfo[playerid][carAkum][0] = VehicleInfo[house_car[playerid][0]][vAkum];
				CarsInfo[playerid][carDrived][0] = VehicleInfo[house_car[playerid][0]][vDrived];
				A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
			}
			else if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
				CarsInfo[playerid][carFuel][1] = VehicleInfo[house_car[playerid][1]][vFuel];
				CarsInfo[playerid][carAkum][1] = VehicleInfo[house_car[playerid][1]][vAkum];
				CarsInfo[playerid][carDrived][1] = VehicleInfo[house_car[playerid][1]][vDrived];
				A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;
			}
		}
		else if(gHouses[house][houseImprove][2]) {
			if(house_car[playerid][car] != INVALID_VEHICLE_ID) {
				A_DestroyVehicle(house_car[playerid][car]);
				CarsInfo[playerid][carFuel][car] = VehicleInfo[house_car[playerid][car]][vFuel];
				CarsInfo[playerid][carAkum][car] = VehicleInfo[house_car[playerid][car]][vAkum];
				CarsInfo[playerid][carDrived][car] = VehicleInfo[house_car[playerid][car]][vDrived];
				house_car[playerid][car] = INVALID_VEHICLE_ID;
			}
		}
	}
	if(PI[playerid][pRoom])
	{
		house_car[playerid][car] = A_CreateVehicle(CarsInfo[playerid][carModel][car], hotel_spawnscar[PI[playerid][pRoom]-1][0], hotel_spawnscar[PI[playerid][pRoom]-1][1], hotel_spawnscar[PI[playerid][pRoom]-1][2], hotel_spawnscar[PI[playerid][pRoom]-1][3] , CarsInfo[playerid][carColor_one][car] ,CarsInfo[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
		SetVehicleVirtualWorld(house_car[playerid][car], Apartment[PI[playerid][pRoom]][apID]);
		LinkVehicleToInterior(house_car[playerid][car], 4);
	}
	if(PI[playerid][pTempKey] && !PI[playerid][pHouse]) {
		if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
			CarsInfo[playerid][carFuel][0] = VehicleInfo[house_car[playerid][0]][vFuel];
			CarsInfo[playerid][carAkum][0] = VehicleInfo[house_car[playerid][0]][vAkum];
			CarsInfo[playerid][carDrived][0] = VehicleInfo[house_car[playerid][0]][vDrived];
			A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
		}
		else if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
			CarsInfo[playerid][carFuel][1] = VehicleInfo[house_car[playerid][1]][vFuel];
			CarsInfo[playerid][carAkum][1] = VehicleInfo[house_car[playerid][1]][vAkum];
			CarsInfo[playerid][carDrived][1] = VehicleInfo[house_car[playerid][1]][vDrived];
			A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;
		}
		house_car[playerid][car] = A_CreateVehicle(CarsInfo[playerid][carModel][car], gHouses[PI[playerid][pTempKey]-1][houseParkX], gHouses[PI[playerid][pTempKey]-1][houseParkY], gHouses[PI[playerid][pTempKey]-1][houseParkZ], gHouses[PI[playerid][pTempKey]-1][houseParkR] , CarsInfo[playerid][carColor_one][car] ,CarsInfo[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
	}
	if(PI[playerid][pHouse])
	{
		new house = PI[playerid][pHouse]-1;
		if(!gHouses[house][houseImprove][2]) {
			house_car[playerid][car] = A_CreateVehicle(CarsInfo[playerid][carModel][car], gHouses[house][houseParkX], gHouses[house][houseParkY], gHouses[house][houseParkZ], gHouses[house][houseParkR] , CarsInfo[playerid][carColor_one][car] ,CarsInfo[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
		}
		else if(gHouses[house][houseImprove][2]) {
			new id = -1;
			switch(gHouses[house][houseClass]) {
			case 0: id = 0;
			case 1: id = 2;
			case 2: id = 4;
			case 3: id = 6;
			}
			new hint = gHouses[house][houseHint];
			new interior = hinterior_info[hint][h_interior];
			switch(car) {
			case 0: house_car[playerid][car] = A_CreateVehicle(CarsInfo[playerid][carModel][car],cargarage[id][0],cargarage[id][1],cargarage[id][2],cargarage[id][3], CarsInfo[playerid][carColor_one][car] ,CarsInfo[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
			case 1: house_car[playerid][car] = A_CreateVehicle(CarsInfo[playerid][carModel][car],cargarage[id+1][0],cargarage[id+1][1],cargarage[id+1][2],cargarage[id+1][3], CarsInfo[playerid][carColor_one][car], CarsInfo[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
			}
			SetVehicleVirtualWorld(house_car[playerid][car],PI[playerid][pHouse]);
			LinkVehicleToInterior(house_car[playerid][car],interior);
		}
	}
	LoadTuning(playerid, house_car[playerid][car], car);
	SetVehicleParamsEx(house_car[playerid][car],false,false,false,true,false,false,false);

	if(VehicleInfo[house_car[playerid][car]][vNumberAttached]) {
		DestroyDynamic3DTextLabelEx(VehicleInfo[house_car[playerid][car]][vNumberTextID]);
		VehicleInfo[house_car[playerid][car]][vNumberTextID] = Text3D:-1;
		VehicleInfo[house_car[playerid][car]][vNumberAttached] = 0;
	}
	SetVehicleNumberText(house_car[playerid][car], NumberVehicle[playerid][car]);

	TrunkInfo[house_car[playerid][car]][tDrugs] = CarsInfo[playerid][carNarko][car];
	TrunkInfo[house_car[playerid][car]][tMats] = CarsInfo[playerid][carMats][car];
	TrunkInfo[house_car[playerid][car]][tKanistra] = CarsInfo[playerid][carKanistra][car];
	TrunkInfo[house_car[playerid][car]][tGun][0] = CarsInfo[playerid][carDeagle][car];
	TrunkInfo[house_car[playerid][car]][tGun][1] = CarsInfo[playerid][carAK47][car];
	TrunkInfo[house_car[playerid][car]][tGun][2] = CarsInfo[playerid][carM4][car];
	TrunkInfo[house_car[playerid][car]][tGun][3] = CarsInfo[playerid][carShot][car];
	VehicleInfo[house_car[playerid][car]][vLocked] = 1;
	
	VehicleInfo[house_car[playerid][car]][vFuel] = CarsInfo[playerid][carFuel][car];
	VehicleInfo[house_car[playerid][car]][vAkum] = CarsInfo[playerid][carAkum][car];
	VehicleInfo[house_car[playerid][car]][vDrived] = CarsInfo[playerid][carDrived][car];

	if(VehicleInfo[house_car[playerid][car]][vFuel] < 10) VehicleInfo[house_car[playerid][car]][vFuel] = 15;
	if(VehicleInfo[house_car[playerid][car]][vAkum] < 10) VehicleInfo[house_car[playerid][car]][vAkum] = 30;
	return true;
}
CB: friend_detectd(playerid,const inputtext[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) { 
		D(playerid, D_REG_FRIEND, DSI, ""P"Реферал", "{F87427}* В базе данных нет такого аккаунта"W"\n\nВведите ник игрока, пригласившего Вас на сервер\n\nПри достижении 3 уровня он получит {8FD318}награду", "Далее", "Пропуск");
		return true;
	}
	mysql_escape_string(inputtext,PI[playerid][pDrug], 27);
	D(playerid,D_REG_SEX,DSM, ""P"Выбор пола", "\n"G"Выберите пол "ORANGE"Вашего"G" персонажа:\n", "Мужской", "Женский");
	return true;
}
CB: change_name(playerid,const name[]) {
	new rows;
	cache_get_row_count(rows);
	if(rows) return SendClientMessage(playerid, COLOR_GREY, "Указанный ник занят");
	else {
		format(WantNickChange[playerid],MAX_PLAYER_NAME, "%s",name);
		new string[128];
		SendOk(playerid, "Заявка на смену ника отправлена администрации");
		format(string, 127, "[A] %s (ID: %i) просит сменить логин на %s", player_name[playerid], playerid, name);
		AdmMSG(COLOR_ISPOLZUY, string);

	}
	return 1;
}
stock acc_int_strcat(query[], len, const name[], number) {
	new string[90];
	format(string, sizeof(string), "`%s` = '%d',",name, number);
	strcat(query, string, len);
	return true;
}
stock acc_str_strcat(query[], len, const name[], const str[]) {
	new string[100];
	format(string, 100, "`%s` = '%s',",name, str);
	strcat(query, string, len);
	return true;
}
stock save_tune(playerid, idx) {
	new query[500], str[500];
	format(str,sizeof(str),"%i|%i|%i|%i|%i|%i|%i|%i|%i|%i|%i|%i|%i|%i",
	CarsInfo[playerid][carVehcom_1][idx],CarsInfo[playerid][carVehcom_2][idx],CarsInfo[playerid][carVehcom_3][idx],
	CarsInfo[playerid][carVehcom_4][idx],CarsInfo[playerid][carVehcom_5][idx],CarsInfo[playerid][carVehcom_6][idx],
	CarsInfo[playerid][carVehcom_7][idx],CarsInfo[playerid][carVehcom_8][idx],CarsInfo[playerid][carVehcom_9][idx],
	CarsInfo[playerid][carVehcom_10][idx],CarsInfo[playerid][carVehcom_11][idx],CarsInfo[playerid][carVehcom_12][idx],
	CarsInfo[playerid][carVehcom_13][idx],CarsInfo[playerid][carVehcom_14][idx]);
	format(query, 500, "UPDATE `cars` SET `components` = '%s' WHERE `id` = '%d'",str, CarsInfo[playerid][carID][idx]);
	mysql_tquery(connects, query, "", "");
}

stock SaveFamilyCar(fam, idx) {
	new query[800], str[800];
	format(str,sizeof(str),"%i|%i|%i|%i|%i|%i|%i|%i|%i|%i|%i|%i|%i|%i",
	CarFamily[fam][idx][famVehcom_1],CarFamily[fam][idx][famVehcom_2],CarFamily[fam][idx][famVehcom_3],
	CarFamily[fam][idx][famVehcom_4],CarFamily[fam][idx][famVehcom_5],CarFamily[fam][idx][famVehcom_6],
	CarFamily[fam][idx][famVehcom_7],CarFamily[fam][idx][famVehcom_8],CarFamily[fam][idx][famVehcom_9],
	CarFamily[fam][idx][famVehcom_10],CarFamily[fam][idx][famVehcom_11],CarFamily[fam][idx][famVehcom_12],
	CarFamily[fam][idx][famVehcom_13],CarFamily[fam][idx][famVehcom_14]);
	
	format(query, 800, "UPDATE `family` SET `components_%i` = '%s' WHERE `id` = '%d'",idx, str, fam+1);
	mysql_tquery(connects, query, "", "");
}
stock save_skill(playerid) {

	new skills[50];
	format(skills,sizeof(skills),"%i, %i, %i, %i, %i, %i, %i",PI[playerid][pGunSkill][0], PI[playerid][pGunSkill][1], PI[playerid][pGunSkill][2], PI[playerid][pGunSkill][3],
	PI[playerid][pGunSkill][4], PI[playerid][pGunSkill][5]);
	
	new query[250];
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pGunSkills`= '%s' WHERE `Name` = '%s' LIMIT 1",skills,player_name[playerid]);
	mysql_tquery(connects,query);
	return true;
}

CB: reg_friend(playerid) {
	new rows;
	cache_get_row_count(rows);
	new Name[25];
	if(!rows) return 1;
	cache_get_value_name(0,"pDrug",Name,25);
	new id = GetPlayerID(Name);
	if(IsPlayerConnected(id) && TI[id][tLogin]) {
		GiveMoney(id,100000,"за друга");
		SendClientMessage(id,CGOLD,"Вы получили 50.000$ за приглашенного друга, достигшего 3 уровня");
	}
	else {
		new query[156];
		mysql_format(connects, query, sizeof(query),"UPDATE `"TABLE_ACCOUNTS"` SET pCash = pCash + 50000 WHERE Name = '%s'",Name);
		mysql_tquery(connects,query);
	}
	return 1;
}
CB: player_register(playerid) {
	PI[playerid][pID] = cache_insert_id();
	
	new skin = skin_register[GetPVarInt(playerid,"join_ped_item")][0];
	
	SendClientMessage(playerid, COLOR_BLUE, "Поздравляем Вас с успешной регистрацией!");
	SendClientMessage(playerid, 0xfffc700ff, "[Информация]"W" Подойдите к квестому персонажу, чтобы выполнить{cebede} начальные квесты");
	SendClientMessage(playerid, 0xfffc700ff, "[Информация]"W" На парковке Вы можете арендовать мопед");
	
	PI[playerid][pSettings][0] =
	PI[playerid][pSettings][1] =
	PI[playerid][pSettings][3] =
	PI[playerid][pSettings][6] =
	PI[playerid][pSettings][8] =
	PI[playerid][pSettings][10] = 1;
	
	serv_stats[1]++;
	
	PI[playerid][pSettings][2] = fLSNEWS;
	
	Hunger(playerid,0);
	save_settings(playerid);
	
	gpss[playerid] = 1;
	SetPlayerRaceCheckpoint(playerid, 2, 1763.3773,-1906.7416,13.5880-0.8, 1763.3773,-1906.7416,13.5880-0.8, 1.0);
	
	StopAudioStreamForPlayer(playerid);
	UpdatePlayerData(playerid, "Skin", skin);
	A_SetPlayerSkin(playerid, skin);
	PlayerRegister(playerid);
	for(new i = 0; i < 2; i++) {
		new query[128];
		mysql_format(connects, query, sizeof(query), "INSERT INTO `"TABLE_CARS"` (`owner`) VALUES ('%s')" ,player_name[playerid]);
		mysql_tquery(connects, query, "", "");
	}
	return true;
}
stock LoadTuning(playerid,carid,idx) {
	if(CarsInfo[playerid][carVehcom_1][idx]!=0) ACC_AddVehicleComponent(carid, CarsInfo[playerid][carVehcom_1][idx]);
	if(CarsInfo[playerid][carVehcom_2][idx]!=0) ACC_AddVehicleComponent(carid, CarsInfo[playerid][carVehcom_2][idx]);
	if(CarsInfo[playerid][carVehcom_3][idx]!=0) ACC_AddVehicleComponent(carid, CarsInfo[playerid][carVehcom_3][idx]);
	if(CarsInfo[playerid][carVehcom_4][idx]!=0) ACC_AddVehicleComponent(carid, CarsInfo[playerid][carVehcom_4][idx]);
	if(CarsInfo[playerid][carVehcom_5][idx]!=0) ACC_AddVehicleComponent(carid, CarsInfo[playerid][carVehcom_5][idx]);
	if(CarsInfo[playerid][carVehcom_6][idx]!=0) ACC_AddVehicleComponent(carid, CarsInfo[playerid][carVehcom_6][idx]);
	if(CarsInfo[playerid][carVehcom_7][idx]!=0) ACC_AddVehicleComponent(carid, CarsInfo[playerid][carVehcom_7][idx]);
	if(CarsInfo[playerid][carVehcom_8][idx]!=0) ACC_AddVehicleComponent(carid, CarsInfo[playerid][carVehcom_8][idx]);
	if(CarsInfo[playerid][carVehcom_9][idx]!=0) ACC_AddVehicleComponent(carid, CarsInfo[playerid][carVehcom_9][idx]);
	if(CarsInfo[playerid][carVehcom_10][idx]!=0) ACC_AddVehicleComponent(carid, CarsInfo[playerid][carVehcom_10][idx]);
	if(CarsInfo[playerid][carVehcom_11][idx]!=0) ACC_AddVehicleComponent(carid, CarsInfo[playerid][carVehcom_11][idx]);
	if(CarsInfo[playerid][carVehcom_12][idx]!=0) ACC_AddVehicleComponent(carid, CarsInfo[playerid][carVehcom_12][idx]);
	if(CarsInfo[playerid][carVehcom_13][idx]!=0) ACC_AddVehicleComponent(carid, CarsInfo[playerid][carVehcom_13][idx]);
	if(CarsInfo[playerid][carVehcom_14][idx]!=0) ACC_AddVehicleComponent(carid, CarsInfo[playerid][carVehcom_14][idx]);
	if(CarsInfo[playerid][carPaintJob][idx] != -1) ChangeVehiclePaintjob(carid, CarsInfo[playerid][carPaintJob][idx]);
}

stock LoadFamilyTuning(fam, carid, idx)
{
	if(CarFamily[fam][idx][famVehcom_1]!=0) ACC_AddVehicleComponent(carid, CarFamily[fam][idx][famVehcom_1]);
	if(CarFamily[fam][idx][famVehcom_2]!=0) ACC_AddVehicleComponent(carid, CarFamily[fam][idx][famVehcom_2]);
	if(CarFamily[fam][idx][famVehcom_3]!=0) ACC_AddVehicleComponent(carid, CarFamily[fam][idx][famVehcom_3]);
	if(CarFamily[fam][idx][famVehcom_4]!=0) ACC_AddVehicleComponent(carid, CarFamily[fam][idx][famVehcom_4]);
	if(CarFamily[fam][idx][famVehcom_5]!=0) ACC_AddVehicleComponent(carid, CarFamily[fam][idx][famVehcom_5]);
	if(CarFamily[fam][idx][famVehcom_6]!=0) ACC_AddVehicleComponent(carid, CarFamily[fam][idx][famVehcom_6]);
	if(CarFamily[fam][idx][famVehcom_7]!=0) ACC_AddVehicleComponent(carid, CarFamily[fam][idx][famVehcom_7]);
	if(CarFamily[fam][idx][famVehcom_8]!=0) ACC_AddVehicleComponent(carid, CarFamily[fam][idx][famVehcom_8]);
	if(CarFamily[fam][idx][famVehcom_9]!=0) ACC_AddVehicleComponent(carid, CarFamily[fam][idx][famVehcom_9]);
	if(CarFamily[fam][idx][famVehcom_10]!=0) ACC_AddVehicleComponent(carid, CarFamily[fam][idx][famVehcom_10]);
	if(CarFamily[fam][idx][famVehcom_11]!=0) ACC_AddVehicleComponent(carid, CarFamily[fam][idx][famVehcom_11]);
	if(CarFamily[fam][idx][famVehcom_12]!= 0) ACC_AddVehicleComponent(carid, CarFamily[fam][idx][famVehcom_12]);
	if(CarFamily[fam][idx][famVehcom_13]!=0) ACC_AddVehicleComponent(carid, CarFamily[fam][idx][famVehcom_13]);
	if(CarFamily[fam][idx][famVehcom_14]!=0) ACC_AddVehicleComponent(carid, CarFamily[fam][idx][famVehcom_14]);
	
	if(CarFamily[fam][idx][famVehPaint] != -1) ChangeVehiclePaintjob(carid, CarFamily[fam][idx][famVehPaint]);
}

stock trailer_checktun(player_vehicleid, model) {
	if(PlayerTrailer[player_vehicleid][carVehcom][0] == model ||
			PlayerTrailer[player_vehicleid][carVehcom][1] == model ||
			PlayerTrailer[player_vehicleid][carVehcom][2] == model ||
			PlayerTrailer[player_vehicleid][carVehcom][3] == model ||
			PlayerTrailer[player_vehicleid][carVehcom][4] == model ||
			PlayerTrailer[player_vehicleid][carVehcom][5] == model ||
			PlayerTrailer[player_vehicleid][carVehcom][6] == model ||
			PlayerTrailer[player_vehicleid][carVehcom][7] == model ||
			PlayerTrailer[player_vehicleid][carVehcom][8] == model ||
			PlayerTrailer[player_vehicleid][carVehcom][9] == model ||
			PlayerTrailer[player_vehicleid][carVehcom][10] == model ||
			PlayerTrailer[player_vehicleid][carVehcom][11] == model ||
			PlayerTrailer[player_vehicleid][carVehcom][12] == model ||
			PlayerTrailer[player_vehicleid][carVehcom][13] == model) return 1;
	else return 0;
}
stock CheckTuning(playerid,idx,model) {
	if(CarsInfo[playerid][carVehcom_1][idx] == model ||
			CarsInfo[playerid][carVehcom_2][idx] == model ||
			CarsInfo[playerid][carVehcom_3][idx] == model ||
			CarsInfo[playerid][carVehcom_4][idx] == model ||
			CarsInfo[playerid][carVehcom_5][idx] == model ||
			CarsInfo[playerid][carVehcom_6][idx] == model ||
			CarsInfo[playerid][carVehcom_7][idx] == model ||
			CarsInfo[playerid][carVehcom_8][idx] == model ||
			CarsInfo[playerid][carVehcom_9][idx] == model ||
			CarsInfo[playerid][carVehcom_10][idx] == model ||
			CarsInfo[playerid][carVehcom_11][idx] == model ||
			CarsInfo[playerid][carVehcom_12][idx] == model ||
			CarsInfo[playerid][carVehcom_13][idx] == model ||
			CarsInfo[playerid][carVehcom_14][idx] == model) return 1;
	else return 0;
}

stock family_checktun(fam,idx,model) {
	if(CarFamily[fam][idx][famVehcom_1] == model ||
			CarFamily[fam][idx][famVehcom_2] == model ||
			CarFamily[fam][idx][famVehcom_3] == model ||
			CarFamily[fam][idx][famVehcom_4] == model ||
			CarFamily[fam][idx][famVehcom_5] == model ||
			CarFamily[fam][idx][famVehcom_6] == model ||
			CarFamily[fam][idx][famVehcom_7] == model ||
			CarFamily[fam][idx][famVehcom_8] == model ||
			CarFamily[fam][idx][famVehcom_9] == model ||
			CarFamily[fam][idx][famVehcom_10] == model ||
			CarFamily[fam][idx][famVehcom_11] == model ||
			CarFamily[fam][idx][famVehcom_12] == model ||
			CarFamily[fam][idx][famVehcom_13] == model ||
			CarFamily[fam][idx][famVehcom_14] == model) return 1;
	else return 0;
}

stock RemoveFamilyComponent(fam, carid, idx)
{
	if(CarFamily[fam][idx][famVehcom_1]!=0) RemoveVehicleComponent(carid, CarFamily[fam][idx][famVehcom_1]), CarFamily[fam][idx][famVehcom_1] = 0;
	if(CarFamily[fam][idx][famVehcom_2]!=0) RemoveVehicleComponent(carid, CarFamily[fam][idx][famVehcom_2]), CarFamily[fam][idx][famVehcom_2] = 0;
	if(CarFamily[fam][idx][famVehcom_3]!=0) RemoveVehicleComponent(carid, CarFamily[fam][idx][famVehcom_3]), CarFamily[fam][idx][famVehcom_3] = 0;
	if(CarFamily[fam][idx][famVehcom_4]!=0) RemoveVehicleComponent(carid, CarFamily[fam][idx][famVehcom_4]), CarFamily[fam][idx][famVehcom_4] = 0;
	if(CarFamily[fam][idx][famVehcom_5]!=0) RemoveVehicleComponent(carid, CarFamily[fam][idx][famVehcom_5]), CarFamily[fam][idx][famVehcom_5] = 0;
	if(CarFamily[fam][idx][famVehcom_6]!=0) RemoveVehicleComponent(carid, CarFamily[fam][idx][famVehcom_6]), CarFamily[fam][idx][famVehcom_6] = 0;
	if(CarFamily[fam][idx][famVehcom_7]!=0) RemoveVehicleComponent(carid, CarFamily[fam][idx][famVehcom_7]), CarFamily[fam][idx][famVehcom_7] = 0;
	if(CarFamily[fam][idx][famVehcom_8]!=0) RemoveVehicleComponent(carid, CarFamily[fam][idx][famVehcom_8]), CarFamily[fam][idx][famVehcom_8] = 0;
	if(CarFamily[fam][idx][famVehcom_9]!=0) RemoveVehicleComponent(carid, CarFamily[fam][idx][famVehcom_9]), CarFamily[fam][idx][famVehcom_9] = 0;
	if(CarFamily[fam][idx][famVehcom_10]!=0) RemoveVehicleComponent(carid, CarFamily[fam][idx][famVehcom_10]), CarFamily[fam][idx][famVehcom_10] = 0;
	if(CarFamily[fam][idx][famVehcom_11]!=0) RemoveVehicleComponent(carid, CarFamily[fam][idx][famVehcom_11]), CarFamily[fam][idx][famVehcom_11] = 0;
	if(CarFamily[fam][idx][famVehcom_12]!= 0) RemoveVehicleComponent(carid, CarFamily[fam][idx][famVehcom_12]), CarFamily[fam][idx][famVehcom_12] = 0;
	if(CarFamily[fam][idx][famVehcom_13]!=0) RemoveVehicleComponent(carid, CarFamily[fam][idx][famVehcom_13]), CarFamily[fam][idx][famVehcom_13] = 0;
	if(CarFamily[fam][idx][famVehcom_14]!=0) RemoveVehicleComponent(carid, CarFamily[fam][idx][famVehcom_14]), CarFamily[fam][idx][famVehcom_14] = 0;
	if(CarFamily[fam][idx][famVehPaint] != -1) ChangeVehiclePaintjob(carid,-1), CarFamily[fam][idx][famVehPaint] = -1;
}

stock RemoveComponent(c, carid, car)
{
	if(CarsInfo[c][carVehcom_1][car]!=0) RemoveVehicleComponent(carid, CarsInfo[c][carVehcom_1][car]), CarsInfo[c][carVehcom_1][car] = 0;
	if(CarsInfo[c][carVehcom_2][car]!=0) RemoveVehicleComponent(carid, CarsInfo[c][carVehcom_2][car]), CarsInfo[c][carVehcom_2][car] = 0;
	if(CarsInfo[c][carVehcom_3][car]!=0) RemoveVehicleComponent(carid, CarsInfo[c][carVehcom_3][car]), CarsInfo[c][carVehcom_3][car] = 0;
	if(CarsInfo[c][carVehcom_4][car]!=0) RemoveVehicleComponent(carid, CarsInfo[c][carVehcom_4][car]), CarsInfo[c][carVehcom_4][car] = 0;
	if(CarsInfo[c][carVehcom_5][car]!=0) RemoveVehicleComponent(carid, CarsInfo[c][carVehcom_5][car]), CarsInfo[c][carVehcom_5][car] = 0;
	if(CarsInfo[c][carVehcom_6][car]!=0) RemoveVehicleComponent(carid, CarsInfo[c][carVehcom_6][car]), CarsInfo[c][carVehcom_6][car] = 0;
	if(CarsInfo[c][carVehcom_7][car]!=0) RemoveVehicleComponent(carid, CarsInfo[c][carVehcom_7][car]), CarsInfo[c][carVehcom_7][car] = 0;
	if(CarsInfo[c][carVehcom_8][car]!=0) RemoveVehicleComponent(carid, CarsInfo[c][carVehcom_8][car]), CarsInfo[c][carVehcom_8][car] = 0;
	if(CarsInfo[c][carVehcom_9][car]!=0) RemoveVehicleComponent(carid, CarsInfo[c][carVehcom_9][car]), CarsInfo[c][carVehcom_9][car] = 0;
	if(CarsInfo[c][carVehcom_10][car]!=0) RemoveVehicleComponent(carid, CarsInfo[c][carVehcom_10][car]), CarsInfo[c][carVehcom_10][car] = 0;
	if(CarsInfo[c][carVehcom_11][car]!=0) RemoveVehicleComponent(carid, CarsInfo[c][carVehcom_11][car]), CarsInfo[c][carVehcom_11][car] = 0;
	if(CarsInfo[c][carVehcom_12][car]!=0) RemoveVehicleComponent(carid, CarsInfo[c][carVehcom_12][car]), CarsInfo[c][carVehcom_12][car] = 0;
	if(CarsInfo[c][carVehcom_13][car]!=0) RemoveVehicleComponent(carid, CarsInfo[c][carVehcom_13][car]), CarsInfo[c][carVehcom_13][car] = 0;
	if(CarsInfo[c][carVehcom_14][car]!=0) RemoveVehicleComponent(carid, CarsInfo[c][carVehcom_14][car]), CarsInfo[c][carVehcom_14][car] = 0;

	if(CarsInfo[c][carPaintJob][car] != -1) ChangeVehiclePaintjob(carid,-1); CarsInfo[c][carPaintJob][car] = -1;
}
stock AddCheater(playerid) {
	new str[10];
	if(addchet[playerid]==0) addchet[playerid]=1;
	else addchet[playerid]=2;
	for(new i;i<10;i++) {
		if(ChetInfo[i][cheatid1] == playerid)return false;
	}
	ChetInfo[Cheat1][cheatid1]=playerid;
	format(str, sizeof(str), "%d", playerid);
	TextDrawSetString(CheatText[Cheat1], str);
	Cheat1 ++;
	if(Cheat1 > 9) Cheat1 = 0;
	return 1;
}
public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	return EditObject(playerid,objectid);
}
public OnPlayerEditDynamicObject( playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz )
{
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new stringer[255];
	if(response == EDIT_RESPONSE_FINAL)
	{
	    if(GPVI(playerid,"BauldMappingCreating"))
        {
            DPV(playerid,"BauldMappingCreating");
            AddObject(objectid,x,y,z,rx,ry,rz,playerid);
            return 1;
        }
        if(GPVI(playerid,"EditOwnMap"))
        {
            DPV(playerid,"EditOwnMap");
            new idd = GPVI(playerid,"BDid");
            DPV(playerid,"BDid");
            mysql_format(connects, stringer, 255, "UPDATE `bmap` SET `x` = '%f',`y` = '%f',`z` = '%f',`rx` = '%f',`ry` = '%f',`rz` = '%f' WHERE `id` = '%d' LIMIT 1", x,y,z,rx,ry,rz,idd);
            mysql_tquery(connects, stringer);
            SCM(playerid,COLOR_GREEN,"Успешно сохранено");
            return 1;
        }
		if(EdittingATM[playerid] != 0)
		{
			new atmID = EdittingATM[playerid];
			ATMData[atmID][ATM_Pos][0]   = x;
			ATMData[atmID][ATM_Pos][1]   = y;
			ATMData[atmID][ATM_Pos][2]   = z;
			ATMData[atmID][ATM_Pos][3]   = rx;
			ATMData[atmID][ATM_Pos][4]   = ry;
			ATMData[atmID][ATM_Pos][5]   = rz;

			SaveATM(atmID);
			new string[128];
			format(string, sizeof(string), "Вы изменили позицию ATM номер %d", atmID);
			SendOk(playerid, string);

			UpdateATMLabel(atmID);
			
			if(ATMData[atmID][atm_Object]) DestroyDynamicObject(ATMData[atmID][atm_Object]);
			
			ATMData[atmID][atm_Object] = CreateDynamicObject(2754, ATMData[atmID][ATM_Pos][0], ATMData[atmID][ATM_Pos][1], ATMData[atmID][ATM_Pos][2], 0.0, 0.0, ATMData[atmID][ATM_Pos][5], ATMData[atmID][atm_VW], ATMData[atmID][atm_INT]);
			EdittingATM[playerid] = 0;
			return 1;
		}
	}
	else if(response == EDIT_RESPONSE_UPDATE) {
		SetObjectPos(objectid, x, y, z);
		SetObjectRot(objectid, rx, ry, rz);
	} 
	if (response == EDIT_RESPONSE_CANCEL) {
		new atmID = EdittingATM[playerid];
		if(EdittingATM[playerid] != 0) {
			SetTimerEx("SetObjectOldPos", 300, false, "dffffff", ATMData[atmID][atm_Object], ATMData[objectid][ATM_Pos][0], ATMData[objectid][ATM_Pos][1], ATMData[objectid][ATM_Pos][2], ATMData[objectid][ATM_Pos][3], ATMData[objectid][ATM_Pos][4], ATMData[objectid][ATM_Pos][5]);
			EdittingATM[playerid] = 0;
		}
	}
	else if(response) SetDynamicObjectPos(objectid,x, y, z), SetDynamicObjectRot(objectid,rx,ry,rz);
	return true;
}
CB: SetObjectOldPos(objectid, Float:oldX, Float:oldY, Float:oldZ, Float:oldRotX, Float:oldRotY, Float:oldRotZ) {
	SetDynamicObjectPos(objectid, oldX, oldY, oldZ);
	SetDynamicObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
	return 1;
}
public OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z) 
{
	new stringer[128];
    mysql_format(connects, stringer, 128, "SELECT * FROM `bmap` WHERE `ingameid` = '%d'", objectid);
    new Cache: query = mysql_query(connects, stringer, true);
    new rows = cache_num_rows();
    if(!rows)
    {
        EditDynamicObject(playerid,objectid);
    }
    else
    {
        new bdobj = -1;
        cache_get_value_name_int(0, "id", bdobj);
        if(bdobj == -1) return SCM(playerid,COLOR_RED,"Неизвестная ошибка ONPSDO");
        format(pTemp[playerid][var_unit_4],16,"%d",bdobj);
        format(stringer, 128, "{FF6F00}Объект №%d", bdobj);
        SPD(playerid, 1231, DSL, stringer, "{FFFFFF}1. Просмотреть информацию\n2. Телепорт к объекту\n3. Редактировать объект\n{ff0000}4. Удалить объект", "Выбрать", "Назад");
    }
	cache_delete(query);
    return 1;
}
stock AddObject(objectid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz, playerid)
{
	new stringer[350];
    mysql_format(connects, stringer, 350, "INSERT INTO `bmap` (`x`, `y`, `z`, `rx`, `ry`, `rz`, `ingameid`, `date`, `name`, `objectid`) VALUES ('%f', '%f', '%f','%f', '%f', '%f', '%d', NOW(), '%s', '%d')",
        x,y,z,rx,ry,rz,objectid,player_name[playerid], GPVI(playerid,"CreatingObjectModel"));
    mysql_tquery(connects, stringer);
    DPV(playerid,"CreatingObjectModel");
    SCM(playerid,COLOR_GREEN,"Объект успешно создан");
    return 1;
}

public OnTrailerUpdate(playerid, vehicleid) {
	return 1;
}
stock IsAGreenZone(playerid) {
	for(new i = 1; i <= TOTALZONE; i++) {
		if(IsPlayerInRangeOfPoint(playerid, GREENZONE[i][grD], GREENZONE[i][grX],GREENZONE[i][grY],GREENZONE[i][grZ]) && GREENZONE[i][grVirt] == GetPlayerVirtualWorld(playerid)) return true;
	}
	return false;
}
stock ShowStats(playerid,targetid,idx) {
	if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return true;
	new jtext[28], string[1250];
	jtext = "Безработный";
	switch(PI[targetid][pJob]) {
	case 1: jtext = "Водитель автобуса";
	case 2: jtext = "Механик";
	case 3: jtext = "Развозчик продуктов/топлива";
	case 4: jtext = "Развозчик еды";
	case 5: jtext = "Мойщик дорог";
	case 6: jtext = "Чистильщик канализаций";
	case 8: jtext  = "Таксист";
	case 9: jtext  = "Инкассатор";
	default: jtext = "Безработный";
	}
	new str[128], vips[60];
	if(PI[playerid][pPremium]) {
		new second, minute, hour, day, month, year;
		new esc = floatround((PI[playerid][pPremium]-gettime())/3600/24, floatround_ceil);
		timestamp_to_date(PI[playerid][pPremium]-unix, year, month, day, hour, minute, second);
		format(vips,sizeof(vips),"Активен (%iд %iч %iм)", esc, hour, minute);
	}
	else strcat(vips,"Отсутствует");
	format(str,128,""W"Имя:\t\t\t\t%s",player_name[targetid]), strcat(string,str);
	format(str,128,"\n"W"Премиум-аккаунт:\t\t%s",vips), strcat(string,str);
	format(str,128,"\n\nУровень:\t\t\t%i",PI[targetid][pLevel]), strcat(string,str);
	format(str,128,"\nОчки опыта:\t\t\t%i/%i",PI[targetid][pExp], (PI[targetid][pLevel])*6), strcat(string,str);
	format(str, 128, "\nПредупреждения:\t\t"W"%i", PI[targetid][pWarns]), strcat(string, str);
	if(PI[targetid][pWarns]) {
		new second, minute, hour, day, month, year;
		new esc = floatround((PI[targetid][punWarnstime]-gettime())/3600/24, floatround_ceil);
		timestamp_to_date(PI[targetid][punWarnstime]-unix, year, month, day, hour, minute, second);
		format(str, 128, "\nДо снятия осталось:\t\t"W"%iд/%iч/%iм", esc, hour, minute);
		strcat(string, str);
	}
	format(str,128,"\n\nПол:\t\t\t\t%s",(PI[targetid][pSex] == 1) ? ("Мужчина") : ("Женщина")), strcat(string,str);
	format(str,128,"\nСупруг(а):\t\t\t%s",PI[targetid][pMarried]), strcat(string,str);
	if(PI[targetid][pPhone] == 0) strcat(string,"\n\nНомер телефона:\t\tОтсутствует");
	else format(str,128,"\n\nНомер телефона:\t\t%i",PI[targetid][pPhone]), strcat(string,str);
	format(str,128,"\nМобильный счёт:\t\t%i",PI[targetid][pMobile]), strcat(string,str);
	
	format(str,128,"\n\nМашина №1:\t\t\t%s(%i)",gTransport[CarsInfo[targetid][carModel][0]-400][trName],CarsInfo[targetid][carModel][0]), strcat(string,str);
	format(str,128,"\nМашина №2:\t\t\t%s(%i)",gTransport[CarsInfo[targetid][carModel][1]-400][trName],CarsInfo[targetid][carModel][1]), strcat(string,str);

	format(str,128,"\n\nЗаконопослушность:\t\t%i",PI[targetid][pZakonp]), strcat(string,str);
	format(str,128,"\nПреступлений:\t\t%i",PI[targetid][pCrimes]), strcat(string,str);
	format(str,128,"\nАрестов:\t\t\t%i",PI[targetid][pArrested]), strcat(string,str);
	format(str,128,"\nУровень розыска:\t\t%i",PI[targetid][pSearch]), strcat(string,str);
	format(str,128,"\nНаркотиков:\t\t\t%i",PI[targetid][pDrugs]), strcat(string,str);
	format(str,128,"\nМатериалов\t\t\t%i",PI[targetid][pMats]), strcat(string,str);
	format(str,128,"\nЗависимость:\t\t\t%i",PI[targetid][pAddiction]), strcat(string,str);
	format(str,128,"\nФишек:\t\t\t%i\n",PI[targetid][pCasinoChips]), strcat(string,str);

	if(PI[targetid][pMember]) format(str,128,"\nОрганизация:\t\t\t%s",FI[PI[targetid][pMember]][fName]), strcat(string,str);
	else strcat(string,"\nОрганизация:\t\t\tОтсутствует");
	if(idx) format(str,128,"\nДолжность:\t\t\t%s (%d)",GetRankName(PI[targetid][pMember],PI[targetid][pRank]),PI[targetid][pRank]), strcat(string,str);
	else format(str,128,"\nДолжность:\t\t\t%s",GetRankName(PI[targetid][pMember],PI[targetid][pRank])), strcat(string,str);

	new house = 0;
	if(PI[targetid][pHouse] && !PI[targetid][pRoom]) {
		new classname[15];
		switch(gHouses[PI[targetid][pHouse]-1][houseClass]) {
		case 0: classname = "Эконом";
		case 1: classname = "Cредний";
		case 2: classname = "Элитный";
		case 3: classname = "Особняк";
		}	
		format(str,128,"\n\nЖилье:\t\t\tДом №%d (%s)",gHouses[PI[targetid][pHouse]-1][houseID],classname), strcat(string,str);
		house = 1;
	}
	if(PI[targetid][pRoom] && !PI[targetid][pHouse]) {
		format(str,128,"\n\nЖилье:\t\t\tКвартира № %d",PI[playerid][pRoom]), strcat(string,str);
		house = 1;
	}
	if(!house) strcat(string,"\n\nЖилье:\t\t\tНет");
	
	if(PI[targetid][pBusiness]) format(str,128,"\nБизнес:\t\t\t%s (%d)",gBusiness[PI[targetid][pBusiness]-1][bizzName],PI[targetid][pBusiness]), strcat(string,str);
	else strcat(string,"\nБизнес:\t\t\tОтсутствует"); 
	
	if(GetPlayerVehicles(playerid)) strcat(string,"\nДом на колесах\t\tЕсть");
	else strcat(string,"\nДом на колесах:\t\tНет");

	if(PI[targetid][pHacker]) format(str,128,"\nХакер:\t\t\t\t %d",PI[targetid][pHacker]), strcat(string,str);
	if(PI[targetid][pHacker]) format(str,128,"\nОпыт хакера:\t\t\t %d/20",PI[targetid][pHackProg]), strcat(string,str);

	format(str,128,"\n\n"W"Работа:\t\t\t%s",jtext), strcat(string,str);
	if(idx) {
		format(str,128,"\nБанк:\t\t\t\t%i",PI[targetid][pBank]), strcat(string,str);
		format(str,128,"\nНа руках:\t\t\t%i",PI[targetid][pCash]), strcat(string,str);
		format(str,128,"\nСкин:\t\t\t\t%i",PI[targetid][pSkin]), strcat(string,str);
		format(str,128,"\nСкинФр:\t\t\t%i",PI[targetid][pFracSkin]), strcat(string,str);

		format(str,128,"\nВарнов:\t\t\t%i",PI[targetid][pWarns]), strcat(string,str);
		
		format(str,128,"\nДата регистрации:\t\t%s",PI[targetid][pDataReg]), strcat(string,str);
		format(str,128,"\nGoogle Authenticator:\t\t%s",(PI[targetid][pGoogleSec] == 1) ? ("Включен") : ("Отключен")), strcat(string,str);
	}
	return D(playerid,DIALOG_NONE,DSM, ""P"Статистика",string, "Закрыть", "");
}

stock UpdateSkladFrakGang() {
	ClearTotalGz();
	for(new i = 0; i < TOTALGZ; i++) {
		if(GZInfo[i][gFrakVlad] == fBALLAS) TotalGZ[0]++;
		if(GZInfo[i][gFrakVlad] == fVAGOS) TotalGZ[1]++;
		if(GZInfo[i][gFrakVlad] == fGROVE) TotalGZ[2]++;
		if(GZInfo[i][gFrakVlad] == fAZTEC) TotalGZ[4]++;
		if(GZInfo[i][gFrakVlad] == fRIFA) TotalGZ[3]++;
	}
	new string[250]; 
	format(string,sizeof(string),"Склад банды {8813E7}Ballas"W"\n\n- Территорий: "P"%d\n"W"- Материалов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке банды: "P"$%d\n"W"- Прибыль за час: "P"$%d",TotalGZ[0],FI[fBALLAS][fMats],FI[fBALLAS][fDrugs],FI[fBALLAS][fBank],TotalGZ[0]*65); UpdateDynamic3DTextLabelText(gMenu[0],-1,string);
	format(string,sizeof(string),"Склад банды {DBD604}Vagos"W"\n\n- Территорий: "P"%d\n"W"- Материалов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке банды: "P"$%d\n"W"- Прибыль за час: "P"$%d",TotalGZ[1],FI[fVAGOS][fMats],FI[fVAGOS][fDrugs],FI[fVAGOS][fBank],TotalGZ[1]*65); UpdateDynamic3DTextLabelText(gMenu[1],-1,string);
	format(string,sizeof(string),"Склад банды {009F00}Grove"W"\n\n- Территорий: "P"%d\n"W"- Материалов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке банды: "P"$%d\n"W"- Прибыль за час: "P"$%d",TotalGZ[2],FI[fGROVE][fMats],FI[fGROVE][fDrugs],FI[fGROVE][fBank],TotalGZ[2]*65); UpdateDynamic3DTextLabelText(gMenu[2],-1,string);
	format(string,sizeof(string),"Склад банды {01FCFF}Aztecas"W"\n\n- Территорий: "P"%d\n"W"- Материалов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке банды: "P"$%d\n"W"- Прибыль за час: "P"$%d",TotalGZ[4],FI[fAZTEC][fMats],FI[fAZTEC][fDrugs],FI[fAZTEC][fBank],TotalGZ[4]*65); UpdateDynamic3DTextLabelText(gMenu[3],-1,string);
	format(string,sizeof(string),"Склад банды {83BFBF}Rifa"W"\n\n- Территорий: "P"%d\n"W"- Материалов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке банды: "P"$%d\n"W"- Прибыль за час: "P"$%d",TotalGZ[3],FI[fRIFA][fMats],FI[fRIFA][fDrugs],FI[fRIFA][fBank],TotalGZ[3]*65); UpdateDynamic3DTextLabelText(gMenu[4],-1,string);

	format(string,sizeof(string),"Аптечка банды {8813E7}Ballas"W"\nДоступно аптечек: "P"%d",FI[fBALLAS][fHealth]); UpdateDynamic3DTextLabelText(gHealth[0],-1,string);
	format(string,sizeof(string),"Аптечка банды {DBD604}Vagos"W"\nДоступно аптечек: "P"%d",FI[fVAGOS][fHealth]); UpdateDynamic3DTextLabelText(gHealth[1],-1,string);
	format(string,sizeof(string),"Аптечка банды {009F00}Grove"W"\nДоступно аптечек: "P"%d",FI[fGROVE][fHealth]); UpdateDynamic3DTextLabelText(gHealth[2],-1,string);
	format(string,sizeof(string),"Аптечка банды {01FCFF}Aztecas"W"\nДоступно аптечек: "P"%d",FI[fAZTEC][fHealth]); UpdateDynamic3DTextLabelText(gHealth[3],-1,string);
	format(string,sizeof(string),"Аптечка банды {83BFBF}Rifa"W"\nДоступно аптечек: "P"%d",FI[fRIFA][fHealth]); UpdateDynamic3DTextLabelText(gHealth[4],-1,string);

	if(black_prods[9] > unix) {
		new year, month, day, hour, minute, second;
		timestamp_to_date(black_prods[9]-unix, year, month, day, hour, minute, second);
		static const f_str[] = "Владелец чёрного рынка\n\t{%06x}%s\n\n"W"Война возможна через: "P"%iд %iч %iм %iс";
		new str[sizeof(f_str) +1 + (-2 + 35)];
		format(str,sizeof(str),f_str,gFractionSpawn[black_prods[0]][fracColor] >>> 8,FI[black_prods[0]][fName],day-1, hour, minute, second);
		UpdateDynamic3DTextLabelText(black_market,-1,str);
	}
	else {
		static const f_str[] = "Владелец чёрного рынка\n\t{%06x}%s\n\n"YELLOW"Можно воевать за чёрный рынок";
		new str[sizeof(f_str) +1 + (-2 + 35)];
		format(str,sizeof(str),f_str,gFractionSpawn[black_prods[0]][fracColor] >>> 8,FI[black_prods[0]][fName]);
		UpdateDynamic3DTextLabelText(black_market,-1,str);
	}
	return 1;
}
stock UpdateSkladFrakMafia() {
	new string[250];
	format(string,sizeof(string),"Склад {DDA701}Итальянской мафии"W"\n\n"W"- Материалов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке мафии: "P"$%d",FI[fLCN][fMats],FI[fLCN][fDrugs],FI[fLCN][fBank]); UpdateDynamic3DTextLabelText(mMenu[0],-1,string);
	format(string,sizeof(string),"Склад {FF0000}Японской мафии"W"\n\n"W"- Материалов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке мафии: "P"$%d",FI[fYAKUZA][fMats],FI[fYAKUZA][fDrugs],FI[fYAKUZA][fBank]); UpdateDynamic3DTextLabelText(mMenu[1],-1,string);
	format(string,sizeof(string),"Склад {B4B5B7}Русской мафии"W"\n\n"W"- Материалов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке мафии: "P"$%d",FI[fRM][fMats],FI[fRM][fDrugs],FI[fRM][fBank]); UpdateDynamic3DTextLabelText(mMenu[2],-1,string);
	return 1;
}
stock ShowAdvertList(playerid) {
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	new adlist[2056];
	new data[3][30],index,string[128];
	format(data[0],30,"{FF6347}Отправление"W""), format(data[1],30,"{FFFF00}Проверка"W""), format(data[2],30,"{33AA33}Ожидание"W"");
	adlist = "№\tОтправитель\tСтатус\n";
	for(new i;i<MAX_ADVERT_COUNT;i++) {
		if(!gAdvert[i][adBusy]) {
			format(string,sizeof(string),"%d\t-\t-\n",i+1);
			strcat(adlist,string);
		}
		else {
			if(gAdvert[i][adCheking]) index = 1;
			else if(gAdvert[i][adCheked]) index = 0;
			else index = 2;
			format(string,sizeof(string),"%d\t%s\t%s\n",i+1,gAdvert[i][adSender],data[index]);
			strcat(adlist,string);
		}
	}
	D(playerid,D_ADVERT_LIST,DSTH,"Объявления",adlist,"Принять","Отмена");
	return 1;
}
stock WriteLog(type,const Names[],const NamePlayer[],const reason[]) {
	MYSQL_GLOBAL[0] = EOS;
	mysql_format(connects, MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL),"INSERT INTO `adminlog` (`type`,`Name`,`NamePlayer`,`reason`,`date`,`time`) VALUES ('%d','%s','%s','%s',NOW(),NOW())",type,Names,NamePlayer,reason);
	mysql_tquery(connects, MYSQL_GLOBAL, "","");
	return true;
}
stock FracLog(type,const Names[],const NamePlayer[],const reason[]) {
	//string_replace(reason, "'", ' ') ;
	new query[400];
	mysql_format(connects,query,sizeof(query),"INSERT INTO `fraclog` (`type`,`Name`,`NameP`,`reason`,`date`) VALUES ('%d','%s','%s','%s',CURRENT_TIMESTAMP)",type,Names,NamePlayer,reason);
	mysql_tquery(connects, query, "","");
	return true;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ) {
	if(PI[playerid][pAdmin] > 0 || PI[playerid][pYoutube] == 1) {
		if(GetPlayerState(playerid) == 2) {
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, fX, fY, fZ+2);
		}
		else SetPlayerPosAC(playerid, fX, fY, fZ+1,0,0);
		SetPlayerPosFindZ(playerid, fX, fY, 999.0);
		return 1;
	}
	if(GetPVarInt(playerid,"selectpoint") > 0 && GetPVarInt(playerid,"selectpoint") < 3) {
		SetPVarInt(playerid,"selectpoint",2);
		SetPVarFloat(playerid,"selectpointX",fX);
		SetPVarFloat(playerid,"selectpointY",fY);
		SetPlayerMapIcon(playerid,iconTaxi,fX,fY,fZ,0,COLOR_YELLOW,1);
		SendOk(playerid,"Вы установили место назначения. Чтобы подтвердить, нажмите ~k~~CONVERSATION_YES~");
	}
	return 1;
}
stock GetString(const param1[],const param2[]) {
	return !strcmp(param1, param2, false);
}
stock CheckBanned(playerid,listitem) {
	if(listitem == 20) FirstBL[playerid] += 20;
	else FirstBL[playerid] -= 20;
	if(FirstBL[playerid] < 0) {
		FirstBL[playerid] = 0;
		return SendClientMessage(playerid, COLOR_GREY, "Больше нет забаненных");
	}
	new bstring[600];
	mysql_format(connects, bstring, sizeof(bstring), "SELECT `Name` FROM `ban` ORDER BY `ID` DESC LIMIT %i , 20", FirstBL[playerid]);
	mysql_tquery(connects, bstring, "MysqlCheckBanned", "d", playerid);
	return 1;
}
CB: MysqlCheckBanned(playerid) {
	new rows;
	cache_get_row_count(rows);
	new bstring[600], names[25];
	if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Больше нет забаненных");
	for(new i; i < rows; i ++) {
		cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
		format(bstring, sizeof(bstring), "%s%s\n", bstring, names);
	}
	if(rows == 20) strcat(bstring, ""ORANGE"Далее >>>\n");
	if(FirstBL[playerid]) strcat(bstring, ""ORANGE"<<< Назад");
	if(!D(playerid, D_BAN_LIST, DSL, ""P"Забаненые", bstring, "Выбрать", "Назад")) SendClientMessage(playerid, COLOR_GREY, "Недоступно в данный момент.");
	return 1;
}
stock IsBLName_fam(owner,fam) {
	new strings[200];
	format(strings, sizeof(strings), "SELECT `bl_family`,`bl_id` FROM `family_blacklist` WHERE `bl_id` = '%d' AND `bl_family` = '%d' LIMIT 1",owner,fam);
	new Cache:result = mysql_query(connects, strings);
	new rows = cache_num_rows();
	cache_delete(result);
	return rows;
}
stock IsBLName(owner,member) {
	new strings[200];
	format(strings, sizeof(strings), "SELECT `bl_fraction`,`bl_id` FROM `fractions_blacklist` WHERE `bl_id` = '%d' AND `bl_fraction` = '%d' LIMIT 1",owner,member);
	new Cache:result = mysql_query(connects, strings);
	new rows = cache_num_rows();
	cache_delete(result);
	return rows;
}
stock IsBannedNameReg(const name[])
{
	new strings[70 + MAX_PLAYER_NAME];
	mysql_format(connects, strings, sizeof(strings), "SELECT `Name` FROM `accounts` WHERE `Name` = '%e' LIMIT 1", name);
	new Cache: result = mysql_query(connects, strings);
	new rows = cache_num_rows();
	if (cache_is_valid(result)) cache_delete(result);
	return rows;
}
stock UnBanName(const name[])
{
	new strings[50 + MAX_PLAYER_NAME];
	if (IsBannedName(name))
	{
		mysql_format(connects, strings, sizeof(strings), "DELETE FROM `ban` WHERE `Name` = '%e'", name);
		mysql_tquery(connects, strings, "", "");
	}
	return true;
}
stock BanName(const name[], const namez[], days, const reason[])
{
	if (!IsBannedName(name))
	{
		new query[256];
		new bandate = gettime() + days;
		mysql_format(connects, query, sizeof(query), "INSERT INTO `ban` (`Name`, `Admin`, `Seconds`, `Reason`) VALUE ('%e', '%e', '%d', '%e')", name, namez, bandate, reason);
		mysql_tquery(connects, query, "", "");
	}
	return true;
}
stock IsBannedName(const name[])
{
	new strings[65 + MAX_PLAYER_NAME];
	mysql_format(connects, strings, sizeof(strings), "SELECT `Name` FROM `ban` WHERE `Name` = '%e' LIMIT 1", name);
	new Cache: result = mysql_query(connects, strings);
	new rows = cache_num_rows();
	if (cache_is_valid(result)) cache_delete(result);
	return rows;
}
stock CheckSim(const pass[]) {
	for(new i; i < strlen(pass); i ++) {
		if( (pass[i] >= 'a' && pass[i] <= 'f') ||
				(pass[i] >= 'A' && pass[i] <= 'F')) continue;
		else return false;
	}
	return true;
}
stock CheckPassword(const pass[]) {
	for(new i; i < strlen(pass); i ++) {
		if( (pass[i] >= 'a' && pass[i] <= 'z') ||
				(pass[i] >= 'A' && pass[i] <= 'Z') ||
				(pass[i] >= '?' && pass[i] <= '?') ||
				(pass[i] >= '?' && pass[i] <= '?') ||
				(pass[i] >= '0' && pass[i] <= '9')  ) continue;
		else return false;
	}
	return true;
}
stock is_text_invalid(const text[]) {
	if(strfind(text, "'", true ) != -1) return 1;
	if(strfind(text, "=", true ) != -1) return 1;
	if(strfind(text, "%", true ) != -1) return 1;
	if(strfind(text, "&", true ) != -1) return 1;
	if(strfind(text, "*", true ) != -1) return 1;
	if(strfind(text, "( ", true ) != -1) return 1;
	if(strfind(text, ")", true ) != -1) return 1;
	if(strfind(text, ",", true ) != -1) return 1;
	if(strfind(text, "`", true ) != -1) return 1;
	if(strfind(text, ";", true ) != -1) return 1;
	if(strfind(text, "|", true ) != -1) return 1;
	return 0 ;
}
stock CheckHouses(playerid,listitem) {
	if(listitem == 30) drieltorka[playerid] += 30;
	else drieltorka[playerid] -= 30;
	if(drieltorka[playerid] < 0) {
		drieltorka[playerid] = 0;
		return SendClientMessage(playerid, COLOR_GREY, "Больше домов не найдено");
	}
	new string[1512];
	new houseidd = 0,classname[20];
	for(new i = drieltorka[playerid]; i < gHouseCount; i ++) {
		if(gHouses[i][houseOwnerID] != 0) continue;
		switch(gHouses[i][houseClass]) {
		case 0:classname = "Эконом";
		case 1:classname = "Cредний";
		case 2:classname = "Элитный";
		case 3:classname = "Особняк";
		default: classname = "Неизвестно";
		}
		format(string, sizeof(string), "%sДом "P"№%d "W"[%s]"W"\n",string,i+1,classname);
		houseidd++;
		if(!houseidd) return SendClientMessage(playerid, COLOR_GREY, "Свободных домов нет");
		if(houseidd == 30) {
			strcat(string, ""ORANGE"Далее >>>\n");
			break;
		}
	}
	if(drieltorka[playerid]) strcat(string, ""ORANGE"<<< Назад\n");
	if(!D(playerid, D_RIELTOR_HOUSE, DSL, ""P"Выберите дом", string, "Выбрать", "Назад")) SendClientMessage(playerid, COLOR_GREY, "Недоступно в данный момент");
	return 1;
}
stock CheckBusiness(playerid,listitem) {
	if(listitem == 20) drieltorka[playerid] += 20;
	else drieltorka[playerid] -= 20;
	if(drieltorka[playerid] < 0) {
		drieltorka[playerid] = 0;
		return SendClientMessage(playerid, COLOR_GREY, "Больше бизнесов не найдено");
	}
	new string[1512];
	new bizzid = 0;
	format(string, sizeof(string), ""W"Номер бизнеса\t"W"Название\t"W"Тип\n", string);
	for(new i = drieltorka[playerid]; i < gBusinessCount; i ++) {
		if(gBusiness[i][bizzOwnerID] != 0) format(string, sizeof(string), "%s"P"%d\t"P"%s\t"P"%s\n",string,i+1,gBusiness[i][bizzName],gBusinessTypeName[gBusiness[i][bizzType]-1]);
		else format(string, sizeof(string), "%s"P"%d\t%s\t%s\n",string,i+1,gBusiness[i][bizzName],gBusinessTypeName[gBusiness[i][bizzType]-1]);
		Bizz_r[i][playerid] = i;
		bizzid++;
		if(bizzid == 20) {
			strcat(string, ""ORANGE"Далее >>>\n");
			break;
		}
	}
	if(drieltorka[playerid]) strcat(string, ""ORANGE"<<< Назад\n");
	if(!D(playerid, D_RIELTOR_BIZZ, DSTH, ""P"Выберите бизнес", string, "Выбрать", "Закрыть")) SendClientMessage(playerid, COLOR_GREY, "Недоступно в данный момент");
	return 1;
}
CB: CopsWanted(playerid,player_id) {
	if(!IsPlayerConnected(player_id)) {
		patrul_id[playerid] = -1;
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendOk(playerid,"Преследование завершено! Преступник покинул сервер и был посажен в КПЗ");
		DeletePVar(playerid, "Patrul");
		return true;
	}
	if(GetPlayerInterior(player_id)) {
		patrul_id[playerid] = -1;
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendOk(playerid,"Преследование завершено! Человек скрылся! [Вход в интерьер]");
		DeletePVar(playerid, "Patrul");
		DeletePVar(playerid, "patrulid");
		return true;
	}
	new Float:Position[3];
	GetPlayerPos(player_id, Position[0],Position[1],Position[2]);
	SetPlayerCheckpoint(playerid, Position[0],Position[1],Position[2], 3);
	return false;
}
stock SendOk(playerid, const text[]) {
	new string[256];
	format(string, 256, "%s", text);
	return SendClientMessage(playerid, COLOR_WHITE, string);
}
stock SendUse(playerid, const text[]) {
	new string[256];
	format(string, sizeof(string), "%s", text);
	return SendClientMessage(playerid, COLOR_WHITE, string);
}
stock GetCheckID(const name[]) {
	new ID = INVALID_PLAYER_ID;
	sscanf(name, "u", ID);
	if(IsPlayerConnected(ID)) return ID;
	return INVALID_PLAYER_ID;
}
stock check_terrs() {

	DestroyActor(actor[0]);
	DestroyActor(actor[1]);
	DestroyActor(actor[2]);
	DestroyActor(actor[3]);
	
	switch(black_prods[0]) {
	case fBALLAS: {
			actor[0] = CreateActor(102, 2303.5725,-1984.2985,13.5764,270.5137);//наркобот
			actor[1] = CreateActor(103, 2303.6292,-1993.4894,13.5696,265.9584);//бот оружия
			actor[2] = CreateActor(102, 2304.7039,-1997.4758,13.5545,236.9311);//бот материалов
			actor[3] = CreateActor(103, 2303.5745,-1988.9795,13.5729,265.0746);//бот форм
		}
	case fVAGOS: {
			actor[0] = CreateActor(108, 2303.5725,-1984.2985,13.5764,270.5137);//наркобот
			actor[1] = CreateActor(109, 2303.6292,-1993.4894,13.5696,265.9584);//бот оружия
			actor[2] = CreateActor(108, 2304.7039,-1997.4758,13.5545,236.9311);//бот материалов
			actor[3] = CreateActor(109, 2303.5745,-1988.9795,13.5729,265.0746);//бот форм
		}
	case fGROVE: {
			actor[0] = CreateActor(105, 2303.5725,-1984.2985,13.5764,270.5137);//наркобот
			actor[1] = CreateActor(106, 2303.6292,-1993.4894,13.5696,265.9584);//бот оружия
			actor[2] = CreateActor(107, 2304.7039,-1997.4758,13.5545,236.9311);//бот материалов
			actor[3] = CreateActor(105, 2303.5745,-1988.9795,13.5729,265.0746);//бот форм
		}
	case fAZTEC: {
			actor[0] = CreateActor(114, 2303.5725,-1984.2985,13.5764,270.5137);//наркобот
			actor[1] = CreateActor(116, 2303.6292,-1993.4894,13.5696,265.9584);//бот оружия
			actor[2] = CreateActor(114, 2304.7039,-1997.4758,13.5545,236.9311);//бот материалов
			actor[3] = CreateActor(116, 2303.5745,-1988.9795,13.5729,265.0746);//бот форм
		}
	case fRIFA: {
			actor[0] = CreateActor(175, 2303.5725,-1984.2985,13.5764,270.5137);//наркобот
			actor[1] = CreateActor(174, 2303.6292,-1993.4894,13.5696,265.9584);//бот оружия
			actor[2] = CreateActor(175, 2304.7039,-1997.4758,13.5545,236.9311);//бот материалов
			actor[3] = CreateActor(174, 2303.5745,-1988.9795,13.5729,265.0746);//бот форм
		}
	}
}
stock IsValid3DTextLabel(Text3D:textid) {
	if(textid != Text3D:INVALID_3DTEXT_ID) return true;
	else return false;
}
CB: GunReady(playerid) {
	for(new id = 0;id < 24;id++) {
		if(!IsPlayerInDynamicCP(playerid, gun_pickup[id]) && GetPVarInt(playerid,"loadid") == id) {
			GameTextForPlayer(  playerid,("~r~FAILED"), 5000, 1);
			TI[playerid][tJobGun][2] = 0;
			if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid,9);
			ClearAnimations(playerid);
			TI[playerid][tJobGun][1] = 1;
			return true;
		}
	}
	if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
	TI[playerid][tJobGun][2] = 1;
	ClearAnimations(playerid);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
	if(!IsPlayerAttachedObjectSlotUsed(playerid, 8)) SetPlayerAttachedObject(playerid,8,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
	SendOk(playerid,"Оружие собрано. Отнесите ящик в прицеп");
	EnableGPSForPlayer(playerid, 971.8011,-466.4688,1471.5895-0.7);
	return true;
}
stock update3dtext() {
	new string[128];

	format(string,sizeof(string),"Рыбы на складе: "O"%.1f кг",fish_sklad);
	UpdateDynamic3DTextLabelText(fish_text,-1,string);

	format(string,sizeof(string),"Боеприпасов на складе: "ORANGE"%d",zavodsklad);
	UpdateDynamic3DTextLabelText(gun_3dtext[0],-1,string);

	format(string,sizeof(string),"Боеприпасов доступно: "ORANGE"%d",zavodsklad);
	UpdateDynamic3DTextLabelText(gun_3dtext[1],-1,string);

	format(string,sizeof(string),"Боеприпасов на складе: "ORANGE"%d",zavodsklad);
	UpdateDynamic3DTextLabelText(gun_3dtext[2],-1,string);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fARMYLS][fMats]);
	UpdateDynamic3DTextLabelText(sklad_armysf[0],-1,string);
	
	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fARMYLS][fMats]);
	UpdateDynamic3DTextLabelText(sklad_armysf[1],-1,string);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fLSPD][fMats]);
	UpdateDynamic3DTextLabelText(sklad_cops[0],-1,string);
	//склад байкеров
	//format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fBikers][fMats]);
//	UpdateDynamic3DTextLabelText(sklad_cops[1],-1,string);

//	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fLVPD][fMats]);
//	UpdateDynamic3DTextLabelText(sklad_cops[2],-1,string);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fFBI][fMats]);
	UpdateDynamic3DTextLabelText(sklad_cops[3],-1,string);

	UpdateSkladFrakGang();
	UpdateSkladFrakMafia();
}
CB: ClearAnims(playerid) return ApplyAnimation(playerid, "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1, 1);
stock UpdateEconomyData(const field[],data){
	new query[156];
	mysql_format(connects, query, sizeof(query),"UPDATE `economy` SET `%s` = '%d' LIMIT 1",field,data);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateOtherData(const field[],data){
	new query[156];
	mysql_format(connects, query, sizeof(query),"UPDATE `others` SET `%s` = '%d' LIMIT 1",field,data);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
SaveFraction(fractionID) {
	new query[256];
	mysql_format(connects, query, sizeof(query),"UPDATE `fractions` SET `Leader` = '%s', `Admin` = '%s', `Time` = '%s' WHERE `ID` = '%i'",FI[fractionID][fLeader],FI[fractionID][fAdmin],FI[fractionID][fTime],fractionID);
	return mysql_tquery(connects, query, "", "");
}
SaveRank(rank,farction) {
	new query[256];
	mysql_format(connects, query, sizeof(query),"UPDATE `fractions` SET `Rank_%d` = '%s' WHERE `ID` = '%i'",rank,RankName[farction][rank-1],farction);
	return mysql_tquery(connects, query, "", "");
}

stock GiveDonate(playerid, money, const s[]="None") {
	if(strlen(s)) {
		new ip[16],query[256];
		GetPlayerIp(playerid, ip, sizeof(ip));
		mysql_format(connects,query, sizeof(query), "INSERT INTO `donate_log` (`Name`,`IP`,`Reason`,`donate`,`pDonate`) VALUES ('%s', '%s', '%s','%d','%d');",player_name[playerid],ip,s,money,PI[playerid][pRouble]);
		mysql_tquery(connects, query, "", "");
	}
	PI[playerid][pRouble] += money;
	UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
	return true;
}

stock GiveMoney(playerid, money, const s[]="None") {
	if(strlen(s)) {
		new ip[16],query[256];
		GetPlayerIp(playerid, ip, sizeof(ip));
		mysql_format(connects,query, sizeof(query), "INSERT INTO `givecash` (`Name`,`IP`,`Reason`,`Dollar`,`Cash`) VALUES ('%s', '%s', '%s','%d','%d');",player_name[playerid],ip,s,money,PI[playerid][pCash]);
		mysql_tquery(connects, query, "", "");
	}
	new string[35];
	if(money < 0) format(string,sizeof(string),"~r~ %d$",money);
	else format(string,sizeof(string),"~g~ +%d$",money);
	GameTextForPlayer(playerid, string, 5000, 1);
	
	PI[playerid][pCash] += money;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PI[playerid][pCash]);
	UpdatePlayerData(playerid,"pCash",PI[playerid][pCash]);
	return 1;
}
stock SetPlayerHospital(playerid) {
	PI[playerid][pHospital] = 1;
	UpdatePlayerData(playerid,"pHospital",PI[playerid][pHospital]);
	SetHealth(playerid,20 + random(7));
	return 0;
}
stock GetNearestPolice(playerid) {

	new Float:dist[2], total_police = 1;
	dist[0] = GetPlayerDistanceFromPoint(playerid, 191.2708,-145.2200,1020.2169);//lspd
	dist[1] = GetPlayerDistanceFromPoint(playerid, -40.2691,-176.8227,1026.9872); // RCSD

	if(dist[0] < dist[1]) total_police = 1;
	else if(dist[1] < dist[0]) total_police = 2;
	return total_police;
}
stock GetFamName(fam, rank) {
	if(rank > 0) return FamRanks[fam][(rank-1)];
	else return FamRanks[fam][0];
}
stock GetRankName(org, rank) {
	if(rank > 0) return RankName[org][(rank-1)];
	else return RankName[org][0];
}
stock SkinSelect(playerid, id) {
	if(GetPVarInt(playerid,"ChangingSkin")) {
		if(id == 0) {
			SetPVarInt(playerid,"join_ped_item",GetPVarInt(playerid,"join_ped_item")+1);
			if(GetPVarInt(playerid,"join_ped_item") == 67) SetPVarInt(playerid,"join_ped_item",0);
			else if(GetPVarInt(playerid,"join_ped_item") == 78) SetPVarInt(playerid,"join_ped_item",67);
		}
		else if(id == 1) {
			SetPVarInt(playerid,"join_ped_item",GetPVarInt(playerid,"join_ped_item")-1);
			if(GetPVarInt(playerid,"join_ped_item") == -1) SetPVarInt(playerid,"join_ped_item",66);
			else if(GetPVarInt(playerid,"join_ped_item") == 66) SetPVarInt(playerid,"join_ped_item",78);
		}
		A_SetPlayerSkin(playerid,ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][0]);
		new string[12];
		format(string,sizeof(string),"$%d",ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]);
		PlayerTextDrawSetString(playerid,buy_player_skins[playerid],string);
	}
	return 1;
}
stock UnFreeze(playerid) {
	TogglePlayerControllable(playerid, true);
	PlayerUnFreezeFix[playerid] = 0;
	PlayerUnFreezeTimerFix[playerid] = 0;
	TogglePlayerControllable(playerid, true);
}
stock FreezePlayerForTime(playerid, time)
{
	PlayerUnFreezeFix[playerid] = 1;
	PlayerUnFreezeTimerFix[playerid] = (gettime() + time);
	TogglePlayerControllable(playerid, 0);
}


stock CreateBizVehicle(biz,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime) {
	new carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_BIZZ);
	VehicleInfo[carid][vBizz] = biz;
	return carid;
}
stock CreateJobVehicle(job,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime) {
	new carid;
	carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_JOB);
	VehicleInfo[carid][vJob] = job;
	return carid;
}
stock CreateSpawnCar(model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime) {
	new carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_SPAWN);
	return carid;
}
stock CreateBusVehicle(bus,job,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime) {
	new carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_JOB);
	VehicleInfo[carid][vJob] = job;
	VehicleInfo[carid][vBus] = bus;
	return carid;
}

stock CreateTaxiVehicle(job,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime) {
	new carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_JOB);
	VehicleInfo[carid][vJob] = job;
	VehicleInfo[carid][vTaxi][0] = INVALID_OBJECT_ID;
	VehicleInfo[carid][vTaxi][1] = INVALID_OBJECT_ID;
	
	VehicleInfo[carid][vTaxi][2] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
	SetDynamicObjectMaterial(VehicleInfo[carid][vTaxi][2], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
	SetDynamicObjectMaterialText(VehicleInfo[carid][vTaxi][2], 0, "-- TAXI --\n\n55-55", 100, "Ariel", 20, 1, -984833, 0, 1);
	AttachDynamicObjectToVehicle(VehicleInfo[carid][vTaxi][2], carid, 0.000, -1.681, 0.557, -360.000, -54.999, -90.000);
	return carid;
}

stock IsABikeSped(carid){switch(GetVehicleModel(carid)){case 448,435,449,450,457,464,465,481,485,501,509,510,530,564,569,570,584,594,606,607,608,610,611:return true;}return false;}
stock IsACarNumber(carid){switch(carid){case 400..402,404,508,405,409..413,415,419,421,422,424,426,429,434,439,444,445,451,459,461..463,466,467,470,478,474,475,477,479,480,482,490,491,492,494,495,496,502..504,506,517,518,521,528,531,533,534,535,539,541..543,545,549,551,554,555..562,566,567,568,571,573,575,576,578,579,580,585..587,589,599,600..603,489:return true;}return false;}
stock IsACarModel(carid){
	switch(carid){
		case 419, 496: return 1;
	}
	return false;
}
IsAPlane(carid) return (GetVehicleState(carid) == VEHICLE_STATE_PLANE);
IsAVelik(carid) return (GetVehicleState(carid) == VEHICLE_STATE_VELIK);
IsABoat(carid) return (GetVehicleState(carid) == VEHICLE_STATE_BOAT);
IsABike(carid) return (GetVehicleState(carid) == VEHICLE_STATE_BIKE);

stock A_AddStaticVehicleEx(model,Float:x,Float:y,Float:z,Float:a,color_1,color_2,spawntime = 300,type,interior = 0,world = 0, addsiren = 0) {
	if(IsValidVehicleModel(model)) {
		new vehicleid = AddStaticVehicleEx(model,x,y,z,a,color_1,color_2,spawntime, addsiren);
		if(vehicleid != INVALID_VEHICLE_ID) {
			VehicleInfo[vehicleid][veX] = x;
			VehicleInfo[vehicleid][veY] = y;
			VehicleInfo[vehicleid][veZ] = z;
			VehicleInfo[vehicleid][veA] = a;
			VehicleInfo[vehicleid][vColor][0] = color_1;
			VehicleInfo[vehicleid][vColor][1] = color_2;
			VehicleInfo[vehicleid][vPlayer] = -1;
			VehicleInfo[vehicleid][vSpawn] = spawntime;
			VehicleInfo[vehicleid][vType] = type;
			VehicleInfo[vehicleid][vLocked] = 0;
			VehicleInfo[vehicleid][vAkum] = 100;
			VehicleInfo[vehicleid][vFuel] = 150;
			if(VehicleInfo[vehicleid][vNumberAttached]) {
				DestroyDynamic3DTextLabelEx(VehicleInfo[vehicleid][vNumberTextID]);
				VehicleInfo[vehicleid][vNumberTextID] = Text3D:-1;
				VehicleInfo[vehicleid][vNumberAttached] = 0;
			}
			LinkVehicleToInterior(vehicleid, interior);
			SetVehicleVirtualWorld(vehicleid, world);

			switch(model) {
			case 472,473,493,595,484,430,452..454,446: VehicleState[vehicleid] = VEHICLE_STATE_BOAT;
			case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:  VehicleState[vehicleid] = VEHICLE_STATE_PLANE;
			case 448,435,449,450,457,464,465,485,501,530,564,569,570,584,594,606,607,608,610,611: VehicleState[vehicleid] = VEHICLE_STATE_BIKE;
			case 509, 481, 510: VehicleState[vehicleid] = VEHICLE_STATE_VELIK;
			default: VehicleState[vehicleid] = VEHICLE_STATE_CAR;
			}
			if(model == 462) VehicleInfo[vehicleid][vFuel] = 100, VehicleInfo[vehicleid][vAkum] = 100;
		}
		return vehicleid;
	}
	return INVALID_VEHICLE_ID;
}
stock A_DestroyVehicle(vehicleid) {
	if(VG[vehicleid][vgLoading] || VG[vehicleid][vgUnloading] || VG[vehicleid][vgRobHouse] || VG[vehicleid][vgAtm] || VG[vehicleid][vgWeste]) {
		VG[vehicleid][vgLoading] = false;
		VG[vehicleid][vgUnloading] = false;
		VG[vehicleid][vgRobHouse] = false;

		if(IsValid3DTextLabel(VG[vehicleid][vgText])) DestroyDynamic3DTextLabelEx(VG[vehicleid][vgText]);
		DestroyDynamicPickup(VG[vehicleid][vgPickup]);
		VG[vehicleid][vgPickup] = 0;
		VG[vehicleid][vgAmount][0] = 0;
		VG[vehicleid][vgNarko] = 0;
		DestroyDynamicArea(VG[vehicleid][vgArea]);
		VG[vehicleid][vgArea] = 0;
		VG[vehicleid][vgAtm] = 0;
		VehicleInfo[vehicleid][vLocked] = 0;

		if(vehicleid == 482) VG[vehicleid][vgAmount][0] = 0;
	}
	if(IsValidVehicle(vehicleid)) {
		if(VehicleInfo[vehicleid][vBizz]) {
			VehicleInfo[vehicleid][vBizz] = 0;
		}
		VehicleInfo[vehicleid][vType] = VEHICLE_TYPE_NONE;
		VehicleInfo[vehicleid][vRobHouse] = false;
		if(LightsObject[vehicleid][0]!=-1 || LightsObject[vehicleid][1]!=-1) {
			if(LightsObject[vehicleid][0] != -1) DestroyDynamicObject(LightsObject[vehicleid][0]);
			if(LightsObject[vehicleid][1] != -1) DestroyDynamicObject(LightsObject[vehicleid][1]);
			LightsObject[vehicleid][0] = -1;
			LightsObject[vehicleid][1] = -1;
			SignalTick[vehicleid][0] = 0;
			SignalTick[vehicleid][1] = -1;
			Signal[vehicleid] = 0;
		}
		return DestroyVehicle(vehicleid);
	}
	return 0;
}
stock A_CreateVehicle(model,Float:x,Float:y,Float:z,Float:a,color_1,color_2,spawntime = 300,type,interior = 0,world = 0, addsiren = 0) {
	if(IsValidVehicleModel(model)) {
		new vehicleid = CreateVehicle(model,x,y,z,a,color_1,color_2,spawntime, addsiren);
		if(VehicleInfo[vehicleid][vNumberAttached]) {
			DestroyDynamic3DTextLabelEx(VehicleInfo[vehicleid][vNumberTextID]);
			VehicleInfo[vehicleid][vNumberTextID] = Text3D:-1;
			VehicleInfo[vehicleid][vNumberAttached] = 0;
		}
		if(vehicleid != INVALID_VEHICLE_ID) {
			VehicleInfo[vehicleid][veX] = x;
			VehicleInfo[vehicleid][veY] = y;
			VehicleInfo[vehicleid][veZ] = z;
			VehicleInfo[vehicleid][veA] = a;
			VehicleInfo[vehicleid][vLocked] = 0;
			VehicleInfo[vehicleid][vColor][0] = color_1;
			VehicleInfo[vehicleid][vColor][1] = color_2;
			VehicleInfo[vehicleid][vPlayer] = -1;
			VehicleInfo[vehicleid][vSpawn] = spawntime;
			VehicleInfo[vehicleid][vType] = type;
			VehicleInfo[vehicleid][vAkum] = 100;
			LinkVehicleToInterior(vehicleid, interior);
			SetVehicleVirtualWorld(vehicleid, world);
			switch(model) {
			case 472,473,493,595,484,430,452..454,446: VehicleState[vehicleid] = VEHICLE_STATE_BOAT;
			case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:  VehicleState[vehicleid] = VEHICLE_STATE_PLANE;
			case 448,435,449,450,457,464,465,485,501,530,564,569,570,584,594,606,607,608,610,611: VehicleState[vehicleid] = VEHICLE_STATE_BIKE;
			case 509, 481, 510: VehicleState[vehicleid] = VEHICLE_STATE_VELIK;
			default: VehicleState[vehicleid] = VEHICLE_STATE_CAR;
			}
			if(model == 462) VehicleInfo[vehicleid][vFuel] = 50, VehicleInfo[vehicleid][vAkum] = 100;
		}
		return vehicleid;
	}
	return INVALID_VEHICLE_ID;
}

stock ToggleEngine(vehicleid, playerid = -1) {
	if(PI[playerid][pMember] != VehicleInfo[vehicleid][vTeam])
	{
		if(VehicleInfo[vehicleid][vType] == VEHICLE_TYPE_FRACTION && PI[playerid][pHacker] > 4 && GetPVarInt(playerid, "VehicleHackers") != GetPlayerVehicleID(playerid)){
			return SCM(playerid, -1, "У вас нет доступа к данному транспорту!");
		}
	}
	
	if(vehicleid == VehicleWareHouse[0])
	{
	    if(TimerRobWeapon > 0 && TimerRobWeaponBool == true){
            SendClientMessage(playerid, COLOR_GREY, "Сначало отстоите перестрелку!");
	    	return SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, lights, alarm, doors, bonnet, boot, objective);
		}
	    if(CountMaterialVehicleWH < 1){
            SendClientMessage(playerid, COLOR_GREY, "Транспорт пуст, вы не можете увезти пустой транспорт!");
			return SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, lights, alarm, doors, bonnet, boot, objective);
		}
	}
    if(GetPVarInt(playerid, "StopEngine") == 1)
	{
    	SendClientMessage(playerid, -1, "Загрузите сумки с алкоголем");
        return SetVehicleParamsEx(GetPlayerVehicleID(playerid), 0, lights, alarm, doors, bonnet, boot, objective);
	}
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(engine == 1) SetVehicleParamsEx(vehicleid,0,lights,alarm,doors,bonnet,boot,objective);
	else {

	    if(VehicleInfo[vehicleid][vAkum] > 0.0 && VehicleInfo[vehicleid][vAkum] <= 30.0 && !IsAPlane(vehicleid) && !IsABoat(vehicleid) && !IsABike(vehicleid) && !IsAVelik(vehicleid)) {
			switch(random(2))
			{
				case 0: SendClientMessage(playerid, -1, "Мало заряда у аккумулятора! Повторите попытку завести двигатель.");
				case 1:
				{
					SetVehicleParamsEx(vehicleid,1,lights,alarm,doors,bonnet,boot,objective);
					PlayerTextDrawColor(playerid, Speed_PTD[playerid][4], 8388863);
					SetVehicleParamsEx(vehicleid, 1, lights, alarm, doors, bonnet, boot, objective);
				}
			}
			return true;
		}
		if(VehicleInfo[vehicleid][vAkum] <= 0.5 && !IsAPlane(vehicleid) && !IsABoat(vehicleid) && !IsABike(vehicleid) && !IsAVelik(vehicleid)) {
			SendClientMessage(playerid, COLOR_GREY, "Аккумулятор сел");
			return true;
		}
		/*if(VehicleInfo[vehicleid][vFuel] <= 0.5 && !IsAPlane(vehicleid) && !IsABoat(vehicleid) && !IsABike(vehicleid) && !IsAVelik(vehicleid)) {
			SendClientMessage(playerid, COLOR_GREY, "Не удалось завести двигатель");
			return true;
		}*/
		
		SetVehicleParamsEx(vehicleid,1,lights,alarm,doors,bonnet,boot,objective);
	}
	if(playerid != -1 && !IsAVelik(vehicleid) && !IsAPlane(vehicleid) && !IsABoat(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		if(engine == 0) {
			PlayerTextDrawColor(playerid, Speed_PTD[playerid][4], 8388863);
			SetVehicleParamsEx(vehicleid, 1, lights, alarm, doors, bonnet, boot, objective);
		}
		else
		{
			SetVehicleParamsEx(vehicleid, 0, lights, alarm, doors, bonnet, boot, objective);
			PlayerTextDrawColor(playerid, Speed_PTD[playerid][4], -347323649);
		}
		PlayerTextDrawShow(playerid, Speed_PTD[playerid][4]);
	}
	if(LightsObject[vehicleid][0] != -1) DestroyDynamicObject(LightsObject[vehicleid][0]);
	if(LightsObject[vehicleid][1] != -1) DestroyDynamicObject(LightsObject[vehicleid][1]);
	LightsObject[vehicleid][0] = -1;
	LightsObject[vehicleid][1] = -1;
	SignalTick[vehicleid][0] = 0;
	SignalTick[vehicleid][1] = -1;
	Signal[vehicleid] = 0;
	return 1;
}
CB:check_banned(playerid)
{
	new rows;
	cache_get_row_count(rows);
	if (!rows) return 1;

	new NAME_ADMIN[24], NAME_PLAYER[24], BAN_REASON[32], UNBAN_DATA = 0;

	cache_get_value_index(0, 1, NAME_PLAYER, 24);
	cache_get_value_index(0, 2, NAME_ADMIN, 24);
	cache_get_value_index(0, 3, BAN_REASON, 24);
	cache_get_value_index_int(0, 4, UNBAN_DATA);
	if (UNBAN_DATA > gettime())
	{
		new date_ban[6];
		timestamp_to_date(UNBAN_DATA + 10800, date_ban[0], date_ban[1], date_ban[2], date_ban[3], date_ban[4], date_ban[5]);

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), ""W"Ваш игровой аккаунт:\t"NO"%s\n\
	"W"Разблокировка:\t\t"NO"%02d/%02d/%04d %02d:%02d:%02d\n\
	"W"Причина:"NO"\t\t\t%s\n\
	"W"Заблокировал:"NO"\t\t%s", NAME_PLAYER, date_ban[2], date_ban[1], date_ban[0], date_ban[3], date_ban[4], date_ban[5], BAN_REASON, NAME_ADMIN);
		D(playerid, DIALOG_BAN, DSM, ""P"Этот аккаунт заблокирован", STRING_GLOBAL, "Закрыть", "");
		KickEx(playerid);
		return 1;
	}
	else
	{

		MYSQL_GLOBAL[0] = EOS;
		mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL), "DELETE FROM `ban` WHERE `Name` = '%s' LIMIT 1", player_name[playerid]);
		mysql_tquery(connects, MYSQL_GLOBAL);
	}
	return 1;
}
CB:	PlayerRegister(playerid) {
	new query[100];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `pID` = '%i' LIMIT 1",PI[playerid][pID]);
	mysql_tquery(connects, query, "load_account","i",playerid);
	TI[playerid][tSelectSkin] = false;
	return true;
}
CB: load_load(playerid) {
	if(TI[playerid][tLogin])
	{
		SendClientMessage(playerid, COLOR_GREY, "Произошла ошибка с загрузкой аккаунта. Пожалуйста перезайдите");
		KickEx(playerid);
		return 0x1;
	}
	new query[100];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `"TABLE_ACCOUNTS"` WHERE pID = '%d' LIMIT 1",PI[playerid][pID]);
	mysql_tquery(connects, query, "load_account", "d", playerid);
	return 1;
}
CB: load_account(playerid) {
	if (TI[playerid][tLogin])
	{
		SendClientMessage(playerid, COLOR_GREY, "Произошла ошибка с загрузкой аккаунта. Пожалуйста перезайдите");
		KickEx(playerid);
		return 0x1;
	}
	cache_get_value_name_int(0,"spawn", PI[playerid][pSpawn]);


	cache_get_value_name_int(0, "pID",PI[playerid][pID]);
	cache_get_value_name(0, "Pame",player_pame[playerid],64);
	cache_get_value_name(0, "pIpReg",PI[playerid][pIpReg],17);
	cache_get_value_name(0, "pKeyip",PI[playerid][pKeyip],5);
	cache_get_value_name(0, "pDataReg",PI[playerid][pDataReg],32);
	cache_get_value_name(0, "pMarried",PI[playerid][pMarried],MAX_PLAYER_NAME);
	cache_get_value_name(0, "pDrug",PI[playerid][pDrug],MAX_PLAYER_NAME);

	cache_get_value_name(0, "pEmail",PI[playerid][pEmail],36);
	cache_get_value_name(0, "pAccusedof",PI[playerid][pAccusedof],43);
	cache_get_value_name(0, "pVictim",PI[playerid][pVictim],MAX_PLAYER_NAME);
	cache_get_value_name(0,	"licenses",lic[playerid], 64);
	cache_get_value_name(0,	"Settings",PI[playerid][pSettings], 48);
	cache_get_value_name(0, "pPrefix_s", PI[playerid][pPrefix_s]);
    cache_get_value_name_int(0, "pPrefix_i", PI[playerid][pPrefix_i]);
	
	new slotitem[64];
	cache_get_value_name(0,	"pSlotItem",slotitem, 63);
	
	new skills[50];
	cache_get_value_name(0, "pGunSkills",skills,50);

	new Hackers[50];
	cache_get_value_name(0, "pQuestHacker",Hackers,50);

	sscanf(Hackers, 						"p<,>a<i>[4]",	PI[playerid][QuestHacker]);
	sscanf(skills, 							"p<,>a<i>[6]",	PI[playerid][pGunSkill]);
	sscanf(lic[playerid],					"p<,>a<i>[4]",	lic[playerid]);
	sscanf(PI[playerid][pSettings],			"p<|>a<i>[12]",	PI[playerid][pSettings]);
	sscanf(slotitem,						"p<|>a<i>[8]",	PI[playerid][pSlotItem]);

	cache_get_value_name_float(0,"pHP", PI[playerid][pHP]);
	cache_get_value_name_int(0,"youtube", PI[playerid][pYoutube]);
	cache_get_value_name_float(0,"pFish", PI[playerid][pFish]);
	cache_get_value_name_float(0,"pSnow", PI[playerid][pSnow]);

	cache_get_value_name_int(0,"Skin", PI[playerid][pSkin]);
	cache_get_value_name_int(0,"pLevel", PI[playerid][pLevel]);
	cache_get_value_name_int(0, "pHacker", PI[playerid][pHacker]);
	cache_get_value_name_int(0, "pCredit", PI[playerid][pCredit]);
	cache_get_value_name_int(0, "pCreditDay", PI[playerid][pCreditDay]);
	cache_get_value_name_int(0, "pKeyCar", PI[playerid][pKeyCar]);
	cache_get_value_name_int(0, "pHackProg", PI[playerid][pHackProg]);
	cache_get_value_name_int(0,"donatemoney", PI[playerid][pRouble]);
	cache_get_value_name_int(0,"pJail", PI[playerid][pJail]);
	cache_get_value_name_int(0,"tempkey", PI[playerid][pTempKey]);
	cache_get_value_name_int(0,"pSex", PI[playerid][pSex]);
	cache_get_value_name_int(0,"pArrested", PI[playerid][pArrested]);
	cache_get_value_name_int(0,"mute", PI[playerid][pMute]);
	cache_get_value_name_int(0,"pCrimes", PI[playerid][pCrimes]);
	cache_get_value_name_int(0,"pBoost", PI[playerid][pBoost]);
	cache_get_value_name_int(0,"pExp", PI[playerid][pExp]);
	cache_get_value_name_int(0,"pCash", PI[playerid][pCash]);
	cache_get_value_name_int(0,"pDrugs", PI[playerid][pDrugs]);
	cache_get_value_name_int(0,"pMats", PI[playerid][pMats]);
	cache_get_value_name_int(0,"pJailTime", PI[playerid][pJailTime]);
	cache_get_value_name_int(0,"pLeader", PI[playerid][pLeader]);
	cache_get_value_name_int(0,"pMember", PI[playerid][pMember]);
	cache_get_value_name_int(0,"pRank", PI[playerid][pRank]);
	cache_get_value_name_int(0,"pJob", PI[playerid][pJob]);
	cache_get_value_name_int(0,"pModel", PI[playerid][pFracSkin]);
	cache_get_value_name_int(0,"pPhone", PI[playerid][pPhone]);
	cache_get_value_name_int(0,"pZakonp", PI[playerid][pZakonp]);
	cache_get_value_name_int(0,"pAddiction", PI[playerid][pAddiction]);
	cache_get_value_name_int(0,"pBank", PI[playerid][pBank]);
	cache_get_value_name_int(0,"pMobile", PI[playerid][pMobile]);
	cache_get_value_name_int(0,"pSearch", PI[playerid][pSearch]);
	cache_get_value_name_int(0,"pPlayTime_one", PI[playerid][pPlayTime][0]);
	cache_get_value_name_int(0,"pPlayTime_two", PI[playerid][pPlayTime][1]);
	cache_get_value_name_int(0,"pHospital", PI[playerid][pHospital]);
	cache_get_value_name_int(0,"pRod", PI[playerid][pRod]);
	
	cache_get_value_name_int(0,"pMag", PI[playerid][pMag]);
	cache_get_value_name_int(0,"pRope", PI[playerid][pRope]);
	
	cache_get_value_name_int(0,"pRopes", PI[playerid][pRopes]);
	cache_get_value_name_int(0,"pWorms", PI[playerid][pWorms]);
	cache_get_value_name_int(0,"family", PI[playerid][pFamily]);
	cache_get_value_name_int(0,"fmute", PI[playerid][pFmute]);
	cache_get_value_name_int(0,"progress", PI[playerid][pProgress]);
	cache_get_value_name_int(0,"salary", PI[playerid][pSalary]);
	cache_get_value_name_int(0,"book", PI[playerid][pBook]);
	cache_get_value_name_int(0,"watch", PI[playerid][pWatch]);
	cache_get_value_name_int(0,"MedHeal",PI[playerid][pMedHeal]);
	cache_get_value_name_int(0,"FracDuty", start_work[playerid]);
	cache_get_value_name_int(0,"pBlago", PI[playerid][pBlago]);
	cache_get_value_name_int(0,"fwarn", PI[playerid][pfWarn]);
	cache_get_value_name_int(0,"premium", PI[playerid][pPremium]);
	cache_get_value_name_int(0,"pSatiety", PI[playerid][pSatiety]);
	cache_get_value_name_int(0,"pFamRank", PI[playerid][pFamRank]);
	cache_get_value_name_int(0,"pBox", PI[playerid][pBox]);
	cache_get_value_name_int(0,"pAdmMSG", PI[playerid][pAdmMSG]);
	cache_get_value_name_int(0,"pAdmKL", PI[playerid][pAdmKL]);
	cache_get_value_name_int(0,"pMPromo", PI[playerid][pMPromo]);
	cache_get_value_name_int(0,"pGoogle", PI[playerid][pGoogleSec]);

	cache_get_value_name_int(0, "giveAdmin",PI[playerid][giveAdmin]);
	cache_get_value_name_int(0, "giveLeader",PI[playerid][giveLeader]);
	cache_get_value_name_int(0, "giveMoney", PI[playerid][giveMoney]);
	cache_get_value_name_int(0, "giveObj",PI[playerid][giveObj]);
	cache_get_value_name_int(0, "giveDonate",PI[playerid][giveDonate]);

	cache_get_value_name(0, "GoogleCode",PI[playerid][pGoogle],63);

	cache_get_value_name_int(0,"homesell", PI[playerid][pSellNeed][0]);
	cache_get_value_name_int(0,"bizzsell", PI[playerid][pSellNeed][1]);
	cache_get_value_name_int(0,"airsell", PI[playerid][pSellNeed][3]);
	cache_get_value_name_int(0,"roomsell", PI[playerid][pSellNeed][4]);
	cache_get_value_name_int(0,"drunginv", PI[playerid][pDrugInv]);
	
	cache_get_value_name_int(0,"pDonateBank", PI[playerid][pDonateBank]);
	
	cache_get_value_name_int(0,"walk",PI[playerid][pWalk]);
	
	cache_get_value_name_int(0,"theftExp",PI[playerid][pTheftExp]);
	
	cache_get_value_name_int(0,"theftSkill",PI[playerid][pTheftlvl]);
	cache_get_value_name_int(0,"theftTime",PI[playerid][ptheftTime]);
	
	cache_get_value_name_int(0,"Advert",PI[playerid][pAdvert]);
	
	cache_get_value_name_int(0,"thrist",PI[playerid][pThrist]);
	cache_get_value_name_int(0,"MedCard",PI[playerid][pMedCard]);
	cache_get_value_name_int(0,"casino_chips",PI[playerid][pCasinoChips]);
	cache_get_value_name_int(0,"casino_lang",PI[playerid][pCasinoLanguage]);
	
	cache_get_value_name_int(0, "pWarns", PI[playerid][pWarns]);
	cache_get_value_name_int(0, "warntime", PI[playerid][punWarnstime]);
	
	cache_get_value_name_int(0,"house",PI[playerid][pHouse]);
	cache_get_value_name_int(0,"bussiness",PI[playerid][pBusiness]);
	cache_get_value_name_int(0,"apart",PI[playerid][pRoom]);
	
	cache_get_value_name_int(0,"dm_k",TI[playerid][tDM_k]);
	cache_get_value_name_int(0,"dm_d",TI[playerid][tDM_d]);
	
	cache_get_value_name_int(0,"lomka",PI[playerid][pNarcoLomka]);
	
	cache_get_value_name_int(0,"case_1",PI[playerid][pCases][0]);
	cache_get_value_name_int(0,"case_2",PI[playerid][pCases][1]);
	cache_get_value_name_int(0,"case_3",PI[playerid][pCases][2]);
	
	cache_get_value_name_int(0,"bizz_work", PI[playerid][bizz_work]);
	cache_get_value_name_int(0,"bizz_status", PI[playerid][bizz_status]);
	cache_get_value_name_int(0,"bizz_cash", PI[playerid][bizz_cash]);
	cache_get_value_name_int(0,"bizz_lcash", PI[playerid][bizz_lcash]);
	
	cache_get_value_name_int(0,"talon_fam",PI[playerid][pFamTalon]);
	cache_get_value_name_int(0,"zahvat",PI[playerid][pZahvat]);
	
	cache_get_value_name_int(0,"metal", PI[playerid][pMetal]);
	cache_get_value_name_int(0,"cloth",PI[playerid][pCloth]);
	cache_get_value_name_int(0,"stone",PI[playerid][pStone]);
	cache_get_value_name_int(0,"dress",PI[playerid][pDress]);
	
	cache_get_value_name_int(0,"event",PI[playerid][pEvent]);
	cache_get_value_name_int(0,"e_kills", PI[playerid][pEkills]);

	cache_get_value_name_int(0,"ahMenu0",ahMenu[playerid][0]);
	cache_get_value_name_int(0,"ahMenu1",ahMenu[playerid][1]);
	cache_get_value_name_int(0,"ahMenu2",ahMenu[playerid][2]);
	cache_get_value_name_int(0,"ahMenu3",ahMenu[playerid][3]);

	SetString(player_ip[playerid],player_ip_check[playerid]);
	SetHealth(playerid, PI[playerid][pHP]);
	
	new st[250];
	cache_get_value_name(0, "spawnData", st, sizeof (st) - 1);
	sscanf(st, "p<,>ffffiii",
	PI[playerid][pSpawnPos][0], PI[playerid][pSpawnPos][1], PI[playerid][pSpawnPos][2],
	PI[playerid][pSpawnPos][3], PI[playerid][pSpawnWorld], PI[playerid][pSpawnInterior],
	PI[playerid][pSpawnTime]
	);
	cache_get_value_name_int(0, "spawnTPPick", PI[playerid][pSpawnTPPick]);
	
	TI[playerid][tLoginTime] = 0;
	TI[playerid][tLogin] = true;

	new data[256];
	cache_get_value(0, "phonenumber", data), sscanf(data,"p<|>a<i>[25]",PI[playerid][pPhoneNumber]);
	
	new maximum[600];
	cache_get_value_name(0, "Item", maximum, 600);
	sscanf(maximum, "p<,>a<i>[46]", PI[playerid][pInventory]);

	new maximum_[600];
	cache_get_value_name(0, "ItemKolvo", maximum_, 600);
	sscanf(maximum_, "p<,>a<i>[46]", PI[playerid][pInventoryKolvo]);

	new get_name_store[1024];
	cache_get_value(0,"phonename",get_name_store, 1024);
	sscanf(get_name_store,"p<|>s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]",
	pPhoneName[playerid][0],pPhoneName[playerid][1],pPhoneName[playerid][2],pPhoneName[playerid][3],pPhoneName[playerid][4],
	pPhoneName[playerid][5],pPhoneName[playerid][6],pPhoneName[playerid][7],pPhoneName[playerid][8],pPhoneName[playerid][9],
	pPhoneName[playerid][10],pPhoneName[playerid][11],pPhoneName[playerid][12],pPhoneName[playerid][13],pPhoneName[playerid][14],
	pPhoneName[playerid][15],pPhoneName[playerid][16],pPhoneName[playerid][17],pPhoneName[playerid][18],pPhoneName[playerid][19],
	pPhoneName[playerid][20],pPhoneName[playerid][21],pPhoneName[playerid][22],pPhoneName[playerid][23],pPhoneName[playerid][24]);
	if(PI[playerid][pID] == 0) return SendClientMessage(playerid, COLOR_GREY, "Обратитесь к администрации, ошибка #77"),KickEx(playerid),print("Обратитесь к администрации, ошибка #77");
	
	if(biz_war_gangzone != -1) {
		GangZoneShowForPlayer(playerid, biz_war_gangzone, gFractionSpawn[MZInfo[bFrakVlad]][fracColor]);
	}
	if(IsAMafia(playerid) || IsAGang(playerid))
	{
		if(LastAirDrop[airTime] > 0)
		{
			GangZoneShowForPlayer(playerid, LastAirDrop[airZone], 0xFFFFFF11);
			GangZoneFlashForPlayer(playerid,LastAirDrop[airZone],COLOR_RED);
		}
	}
	if (PI[playerid][pWarns] > 0)
	{
		if (PI[playerid][punWarnstime] <= unix)
		{
			SendClientMessage(playerid, CGOLD, "Предупреждения были сняты");
			PI[playerid][punWarnstime] = 0;
			PI[playerid][pWarns] = 0;

			MYSQL_GLOBAL[0] = EOS;
			mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL), "UPDATE `accounts` SET `pWarns` = '0', `warntime` = '0' WHERE `pID` = '%d' LIMIT 1", PI[playerid][pID]);
			mysql_tquery(connects, MYSQL_GLOBAL, "", "");
		}
	}
	
	if(PI[playerid][pSellNeed][0]) {
		SendClientMessage(playerid,COLOR_REDD,"Ваш дом продан государству за неуплату");
		UpdatePlayerData(playerid,"homesell",0);
	}
	if(PI[playerid][pSellNeed][1]) {
		SendClientMessage(playerid,COLOR_REDD,"Ваш бизнес продан государству за неуплату");
		UpdatePlayerData(playerid,"bizzsell",0);
	}
	if(PI[playerid][pSellNeed][3]) {
		SendClientMessage(playerid,COLOR_REDD,"Ваш аэропорт продан государству за неуплату");
		UpdatePlayerData(playerid,"airsell",0);
	}
	if(PI[playerid][pSellNeed][4]) {
		SendClientMessage(playerid,COLOR_REDD,"Ваша квартира продана государтству за неуплату");
		UpdatePlayerData(playerid,"roomsell",0);
	}
	if(PI[playerid][pPremium] <= unix && PI[playerid][pPremium])
	{
		SendClientMessage(playerid,COLOR_REDD,"У Вас закончился срок действия премиум-аккаунта");
		PI[playerid][pPremium] = 0;
		UpdatePlayerData(playerid, "premium", 0);
	}
	if(PI[playerid][pCreditDay] <= unix && PI[playerid][pCreditDay])
	{
		if(PI[playerid][pCredit] > 0){
			new bint = 64;
			if(PI[playerid][pHouse]){
				GiveMoney(playerid, floatround(gHouses[PI[playerid][pHouse]][housePrice] / 100 * 20),"Оплата долга");
				PI[playerid][pHouse] = 0;
				UpdatePlayerData(playerid, "house", 0);
				SendClientMessage(playerid,COLOR_REDD,"Дом был продан государству за неуплату кредита");
				gBusiness[bint][bizzBank] += floatround(gHouses[PI[playerid][pHouse]][housePrice] / 100 * 80) ;
			}
			else if(house_car[playerid][0] != 481) {
				sell_cars(playerid, 0, 1);
				
				
			}
			else if(house_car[playerid][1] != 481) {
				sell_cars(playerid, 1, 1);
	
			}
			PI[playerid][pJail] = 1;
			PI[playerid][pJailTime] = 60*60;
			PlayerSpawn(playerid);
			new query[64];
			mysql_format(connects, query, sizeof(query),"UPDATE `business` SET `bank`='%d' WHERE `id` = '64'",gBusiness[bint][bizzBank]);
			mysql_tquery(connects, query,"","");
			PI[playerid][pCreditDay] = 0;
			PI[playerid][pCredit] = 0;
			UpdatePlayerData(playerid, "pCreditDay", PI[playerid][pCreditDay]);
			UpdatePlayerData(playerid, "pCredit", PI[playerid][pCredit]);
		}
		
	}
	if(PI[playerid][pBoost] <= unix && PI[playerid][pBoost])
	{
		SendClientMessage(playerid,COLOR_REDD,"У Вас закончился срок действия премиум-аккаунта");
		PI[playerid][pBoost] = 0;
		UpdatePlayerData(playerid, "pBoost", 0);
	}
	GetPlayerIp(playerid,player_ip_check[playerid],16);
	
	ReloadAllAnims(playerid);
	
	MYSQL_GLOBAL[0] = EOS;
	mysql_format(connects, MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL),"SELECT * FROM `"TABLE_CARS"` WHERE BINARY `owner` = '%s'",player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL,"load_cars","i",playerid);

	MYSQL_GLOBAL[0] = EOS;
	mysql_format(connects, MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL),"SELECT * FROM online_player WHERE date >= CURDATE() AND accountid = %d", PI[playerid][pID]);
	mysql_tquery(connects, MYSQL_GLOBAL, "load_online_today" , "i", playerid);

	MYSQL_GLOBAL[0] = EOS;
	mysql_format(connects, MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL),"SELECT * FROM online_player WHERE (date >= (CURDATE()-1) AND date < CURDATE()) AND accountid = %d", PI[playerid][pID]);
	mysql_tquery(connects, MYSQL_GLOBAL, "load_online_yesterday" , "i", playerid);

	MYSQL_GLOBAL[0] = EOS;
	mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL), "SELECT * FROM `questsprogress` WHERE BINARY `name` = '%s' ORDER BY `idquest`;", player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "LoadQuestMysql", "d", playerid);

	MYSQL_GLOBAL[0] = EOS;
	mysql_format(connects, MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `"TABLE_ACCOUNTS"` SET `online_status` = '1' WHERE pID = '%d'",PI[playerid][pID]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	
	new str_jb[30];
	cache_get_value_name(0, "acs_job", str_jb, 30);
	sscanf(str_jb, "p<,>a<i>[9]", PI[playerid][pAcsJob]);

	new str_jskill[40];
	cache_get_value_name(0, "job_skill", str_jskill, 40);
	sscanf(str_jskill, "p<,>a<i>[9]", PI[playerid][pExpJob]);
	
	if(PI[playerid][pCash] < 0) {
		PI[playerid][pCash] = 0;
		UpdatePlayerData(playerid,"pCash",0);
	}
	SendClientMessage(playerid, 0xfffc700ff, "[Информация]"W" Чтобы открыть меню игрока введите"YELLOW" /menu (/mm)");
	SendClientMessage(playerid, 0xfffc700ff, "[Информация]"W" Не забывайте выполнять каждый день ежедневные квесты{cecb9c} (/quest)");
    if(PI[playerid][pYoutube]) SendClientMessage(playerid, 0xfffc700ff, "[Информация]"W" Вы авторизовались как ютубер сервера"ORANGE" (/yhelp)");

	GetPlayerVehicles(playerid);
	AddPame(playerid);
	UpdatePrefixAuto(playerid);

	for(new i = 0; i < TOTALGZ; i++)
	{
		if(GZInfo[i][ZoneOnBattle]) 
		{
			GangZoneFlashForPlayer(playerid, GZInfo[i][gID], GetGangColor(GZInfo[i][gNapad]));
		}
	}
	/*if(PI[playerid][pSpawnTime] >= gettime() && PI[playerid][pSpawnPos][0] != 0 && PI[playerid][pSpawnPos][1] != 0)
	{
		D(playerid, D_SPAWN_LAST, DSM, "  ", ""W"С момента вашего выхода не прошло больше{1D99D4} 2-х минут"W"\nВы можете вернутся обратно, где находились до выхода\n\n\
		\tВы согласны вернутся обратно?", "Да", "Нет");
		PI[playerid][pSpawnTime] = (gettime() + 60);
	}*/
	
	
	PlayerSpawn(playerid);
	SpecPl(playerid, false);
	
	serv_stats[0]++;
	SetPlayerTime(playerid, tmphour, tmpminute);
	return 1;
}
IsObjectBarrier(playerid){
	new max_rear_object_id = -1;
	new Float:max_rear_object_distance = 100000;
	for(new id = 0; id < MAX_OBJECT_MOVED; id++){
		if(moved_info[id][moved_vw] != GetPlayerVirtualWorld(playerid) && moved_info[id][moved_vw] != -1) continue;
		new Float:here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, moved_info[id][movedPosX],moved_info[id][movedPosY],moved_info[id][movedPosZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), moved_info[id][movedPosX],moved_info[id][movedPosY],moved_info[id][movedPosZ]));
		if(here_distance < max_rear_object_distance){
			max_rear_object_id = id;
			max_rear_object_distance = here_distance;
		}
	}
	if(max_rear_object_distance > 15.0 && IsPlayerInAnyVehicle(playerid)) max_rear_object_id = -1;
	else if(max_rear_object_distance > 3.5 && !IsPlayerInAnyVehicle(playerid)) max_rear_object_id = -1;
	return max_rear_object_id;
}

MoveObjectBarrier(id){
	if(moved_info[id][status_moved]) return 1;
	if(IsDynamicObjectMoving(moved_info[id][moved_id])) return 1;
	if(id == 27 || id == 26) MoveDynamicObject(moved_info[id][moved_id],moved_pos_object[id][0],moved_pos_object[id][1],moved_pos_object[id][2],(moved_info[id][moved_modelid] == 968) ? (0.014) : (moved_info[id][moved_modelid] == 2920) ? (0.014) : (moved_info[id][moved_modelid] == 1495) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (10.0) : (1.2),moved_pos_object[id][3],moved_pos_object[id][4],moved_pos_object[id][5]);
	else MoveDynamicObject(moved_info[id][moved_id],moved_pos_object[id][0],moved_pos_object[id][1],moved_pos_object[id][2]+0.04,(moved_info[id][moved_modelid] == 968) ? (0.014) : (moved_info[id][moved_modelid] == 2920) ? (0.014) : (moved_info[id][moved_modelid] == 1495) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (10.0) : (1.2),moved_pos_object[id][3],moved_pos_object[id][4],moved_pos_object[id][5]);

	moved_info[id][status_moved]=true;
	return 1;
}
CB: CheckObjectBarrier(id){
	if(id == 27 || id == 26) MoveDynamicObject(moved_info[id][moved_id],moved_info[id][movedPosX],moved_info[id][movedPosY],moved_info[id][movedPosZ],(moved_info[id][moved_modelid] == 968) ? (0.014) : (moved_info[id][moved_modelid] == 2920) ? (0.014) : (moved_info[id][moved_modelid] == 1495) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (10.0) : (1.2),moved_info[id][movedPosRotationX],moved_info[id][movedPosRotationY],moved_info[id][movedPosRotationZ]);
	else MoveDynamicObject(moved_info[id][moved_id],moved_info[id][movedPosX],moved_info[id][movedPosY],moved_info[id][movedPosZ]-0.04,(moved_info[id][moved_modelid] == 968) ? (0.014) : (moved_info[id][moved_modelid] == 2920) ? (0.014) : (moved_info[id][moved_modelid] == 1495) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (10.0) : (1.2),moved_info[id][movedPosRotationX],moved_info[id][movedPosRotationY],moved_info[id][movedPosRotationZ]);
	return 1;
}
stock CheckBarrier(playerid,barrierid) {
	switch(barrierid) {
	case 4: {
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			if(!IsACop(playerid) && PI[playerid][pMember] != fWHITEHOUSE && PI[playerid][pMember] != fFBI) return 1;
		}
	case 5,13,14,15,24: {
			if(!IsACop(playerid) && PI[playerid][pMember] != fWHITEHOUSE && PI[playerid][pMember] != fFBI) return 1;
		}
	case 6: {
			if(!IsACop(playerid) && PI[playerid][pMember] != fWHITEHOUSE && PI[playerid][pMember] != fFBI) return 1;
		}

	case 8: if(!IsPlayerInAnyVehicle(playerid)) return 1;
	case 9: {
			if(PI[playerid][pMember] != fFBI && PI[playerid][pMember] != fWHITEHOUSE) return 1;
		}
	case 7: {
			if(PI[playerid][pMember] != fINSTRUCTORS) return 1;
		}
	case 16: if(PI[playerid][pMember] != fRM) return 1;
	case 11, 17: if(PI[playerid][pMember] != fARMYLS && PI[playerid][pMember] != fFBI && PI[playerid][pMember] != fWHITEHOUSE) return 1;
	case 21,22,23,18: if(PI[playerid][pMember] != fLSNEWS) return 1;
	case 10: {
			if(PI[playerid][pMember] != fLCN) return 1;
		}
	case 25: if(PI[playerid][pJob] != 9) return true;
	case 26: if(PI[playerid][pJob] != 9 || !GetPVarInt(playerid,"inc_start") || bank_vzlom[1] > 0) return true;
	case 29,30,31,32,33,34: {
			if(!IsACop(playerid) && PI[playerid][pMember] != fWHITEHOUSE && PI[playerid][pMember] != fFBI) return 1;
		}
	}
	MoveObjectBarrier(barrierid);
	return 1;
}
stock GetVehicleFreeSeat(vehicleid) {
	if(!vehicleid) return -1;
	new model = GetVehicleModel(vehicleid), maxs = GetVehicleMaxSeat(model) - 1, bool: seat[3], cnt;
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPlayerVehicleID(i) != vehicleid) continue;
		new pseat = GetPlayerVehicleSeat(i);
		if(pseat < 1 || pseat > 3) continue;
		seat[pseat-1] = true;
		cnt ++;
		if(cnt >= maxs) {
			return -1;
		}
	}
	for(new i; i < 3; i ++) {
		if(!seat[i]) return i + 1;
	}
	return -1;
}
stock GetVehicleMaxSeat(modelid) {
	switch(modelid){
	case 596..598, 427, 490: {
			return 4;
		}
	case 599, 497, 528: {
			return 2;
		}
	}
	return -1;
}
stock UpdateBizzUpgrade(id) {
	new query[186];
	mysql_format(connects, query, sizeof(query),"UPDATE `business` SET `upgrade` = '%d|%d|%d' WHERE `id` = '%d'", gBusiness[id][bizzUpgrade][0],gBusiness[id][bizzUpgrade][1],gBusiness[id][bizzUpgrade][2],id+1);
	mysql_tquery(connects, query, "", "");
	return 1;
}
stock UpdateBusinessData(id,const field[],data){
	new query[140];
	mysql_format(connects, query, sizeof(query),"UPDATE `business` SET `%s` = '%d' WHERE `id` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateAtmData(id,const field[],data){
	new query[128];
	mysql_format(connects, query, sizeof(query),"UPDATE `atms` SET `%s` = '%d' WHERE `ID` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateHotelData(id,const field[],data){
	new query[128];
	mysql_format(connects, query, sizeof(query),"UPDATE `hotels` SET `%s` = '%d' WHERE `id` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock SaveBusiness(bint) {
	new query[512];
	mysql_format(connects, query, sizeof(query),"UPDATE `business` SET `owner` = '%s', `bank`='%d',`visitors`='%d', `price`='%d', `product`='%d', `order`='%d', `orderprice`='%d', `procent`='%d' WHERE `id` = '%d'",
	gBusiness[bint][bizzOwner],
	gBusiness[bint][bizzBank],
	gBusiness[bint][bizzVisitors],
	gBusiness[bint][bizzPrice],
	gBusiness[bint][bizzProduct],
	gBusiness[bint][bizzProdOrder],
	gBusiness[bint][bizzProdOrderPrice],
	gBusiness[bint][bizzPr],
	bint+1);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock SaveMarket() {
	new query[512],temp[0x9e];
	mysql_format(connects, query, sizeof(query), "UPDATE `blackmarket` SET ");
	format(temp,sizeof(temp),"`gang`= '%i',",		black_prods[0]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`drugs`= '%i',",		black_prods[1]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`mats`= '%i',",		black_prods[2]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`armour`= '%i',",		black_prods[3]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`skin`= '%i',",		black_prods[4]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`drugsprice`= '%i',",	black_prods[5]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`matsprice`= '%i',",	black_prods[6]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`armourprice`= '%i',",black_prods[7]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`skinprice`= '%i',",	black_prods[8]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`time`= '%i' LIMIT 1",black_prods[9]), 	strcat(query,temp,sizeof(query));
	mysql_tquery(connects, query, "", "");
	return mysql_errno();
}
stock SaveHome(houseid){
	new strings[100],query[512];
	query = "UPDATE `houses` SET ";

	acc_str_strcat(query, sizeof(query), "owner",gHouses[houseid][houseOwner]);
	acc_int_strcat(query, sizeof(query), "close",gHouses[houseid][houseClose]);
	acc_int_strcat(query, sizeof(query), "day",gHouses[houseid][houseDay]);

	acc_str_strcat(query, sizeof(query), "people1",gHouseArendator[houseid][0]);
	acc_str_strcat(query, sizeof(query), "people2",gHouseArendator[houseid][1]);

	acc_int_strcat(query, sizeof(query), "safecode", gHouses[houseid][houseSafeCode]);

	strdel(query, strlen(query)-1, strlen(query));
	mysql_format(connects, query, sizeof(query), "WHERE `id` = '%d' LIMIT 1", gHouses[houseid][houseID]);
	strcat(query, strings);
	mysql_tquery(connects, query, "", "");
	return 1;
}
stock UpdateFraction(fractionID,const field[],data){
	new query[200];
	mysql_format(connects, query, sizeof(query),"UPDATE `fractions` SET `%s` = '%d' WHERE `ID` = '%d' LIMIT 1",field,data,fractionID);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdatePlayerData(playerid,const field[],data){
	new query[200];
	format(query, sizeof(query), "UPDATE `accounts` SET `%s` = '%d' WHERE `pID` = '%d' LIMIT 1",field,data,PI[playerid][pID]);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateFamily(id,const field[],data){
	new query[200];
	mysql_format(connects, query, sizeof(query),"UPDATE `family` SET `%s` = '%d' WHERE `id` = '%d' LIMIT 1",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
SavefRank(rank,fam) {
	new query[256];
	mysql_format(connects, query, sizeof(query),"UPDATE `family` SET `Rank_%d` = '%s' WHERE `id` = '%i'",rank,FamRanks[fam][rank-1],fam+1);
	return mysql_tquery(connects, query, "", "");
}
stock ShowBusinessInformation(playerid,id,dialogid){
	new status[20];
	new atext[24];
	switch(gBusiness[id][bizzMafia]){
	case fRM: atext = "Русская Мафия";
	case fLCN: atext = "Итальянская мафия";
	case fYAKUZA: atext = "Японская мафия";
	default: atext = "---";
	}
	new type = gBusiness[id][bizzType] - 1;
	if(gBusiness[id][bizzStatus]) strcat(status,""GREEN"Работает");
	else strcat(status,""NO"Не работает");

	new day;
	day = (gBusiness[id][bizzDay]-gettime())/86400;

	static const f_str[] = ""W"Название: "YELLOW"%s\n\n\
								"W"Тип: "P"%s\n\
								"W"Гос.стоимость: "ORANGE"$%d\n\
								"W"Цена товара: "ORANGE"$%d\n\n\
								"W"Продуктов: "P"%d ед. / %d ед.\n\
								"W"Продуктов заказано: "P"%d"W" ед. ["ORANGE"$%d"W" за ед.]\n\n\
								"W"Касса: "ORANGE"$%d"W"\n\
								"W"Заработано за сутки: "ORANGE"$%d"W"\n\n\
								"W"Посетителей: "P"%d\n\
								"W"Аренда бизнеса: "P"%iд\n\
								"W"Крыша: "P"%s\n\n\
								"W"Состояние: "P"%s";
	new string[650];
	format(string,sizeof(string),f_str,gBusiness[id][bizzName],gBusinessTypeName[type],
	gBusiness[id][bizzSellPrice],gBusiness[id][bizzPrice],gBusiness[id][bizzProduct],gBusiness[id][bizzUpgrade][0],gBusiness[id][bizzProdOrder],gBusiness[id][bizzProdOrderPrice],gBusiness[id][bizzBank],gBusiness[id][bizzBankDay],gBusiness[id][bizzVisitors],day, atext, status);
	return D(playerid,dialogid,DSM, ""P"Бизнес",string,"OK","");
}
stock ShowHotelInformation(playerid,id,dialogid){
	new atext[24];
	switch(gBusiness[id][bizzMafia]){
	case fRM: atext = "Русская Мафия";
	case fLCN: atext = "Итальянская мафия";
	case fYAKUZA: atext = "Японская мафия";
	default: atext = "---";
	}
	new type = gBusiness[id][bizzType] - 1;
	new day;
	day = (gBusiness[id][bizzDay]-gettime())/86400;
	static const f_str[] = ""W"Название: "YELLOW"%s\n\n\
								"W"Тип: "P"%s\n\
								"W"Гос.стоимость: "ORANGE"$%d\n\
								"W"Цена аренды номера: "ORANGE"$%d\n\n\
								"W"Касса: "ORANGE"$%d"W"\n\
								"W"Заработано за сутки: "ORANGE"$%d"W"\n\n\
								"W"Посетителей: "P"%d\n\
								"W"Аренда бизнеса: "P"%iд\n\
								"W"Крыша: "P"%s";
	new string[650];
	format(string,sizeof(string),f_str,gBusiness[id][bizzName],gBusinessTypeName[type],
	gBusiness[id][bizzSellPrice],gBusiness[id][bizzPrice],gBusiness[id][bizzBank],gBusiness[id][bizzBankDay],gBusiness[id][bizzVisitors],day,atext);
	return D(playerid,dialogid,DSM, ""P"Бизнес",string,"OK","");
}
stock GetPlayerMoneyEx(playerid) return PI[playerid][pCash];
stock isNumeric(const string[]) {
	for (new i = 0, j = strlen(string); i < j; i++) {
		if (string[i] > '9' || string[i] < '0') return 1;
	}
	return 0;
}
CB: donate_shop(playerid, number, id, price) {
	new rows;
	cache_get_row_count(rows);
	if(rows) {
		switch(id) {
		case 0: {
				D(playerid,D_DONATE_NUMBER_2,DSI,""P"Донат",""G"Покупка номера телефона\n\n\
									Введите 5 значный номер телефона, который Вы хотите приобрести:\n\
									"W"Стоимость: "GREEN"200 руб\n\n"NO"*"G" Указанный номер занят\n\n","Купить","Закрыть");
				return true;
			}
		case 1: {
				D(playerid,D_DONATE_NUMBER_2,DSI,""P"Донат",""G"Покупка номера телефона\n\n\
										Введите 4 значный номер телефона, который Вы хотите приобрести:\n\
										"W"Стоимость: "GREEN"300 руб\n\n"NO"*"G" Указанный номер занят\n\n","Купить","Закрыть");
				return true;
			}
		case 2: {
				D(playerid,D_DONATE_NUMBER_2,DSI,""P"Донат",""G"Покупка номера телефона\n\n\
										Введите 3 значный номер телефона, который Вы хотите приобрести:\n\
										"W"Стоимость: "GREEN"400 руб\n\n"NO"*"G" Указанный номер занят\n\n","Купить","Закрыть");
				return true;
			}
		case 3: {
				D(playerid,D_DONATE_NUMBER_2,DSI,""P"Донат",""G"Покупка номера телефона\n\n\
										Введите 2 значный номер телефона, который Вы хотите приобрести:\n\
										"W"Стоимость: "GREEN"500 руб\n\n"NO"*"G" Указанный номер занят\n\n","Купить","Закрыть");
				return true;
			}
		}
	}
	else {
		GiveDonate(playerid, -price, "покупка номера телефона");
		PI[playerid][pPhone] = number;
		UpdatePlayerData(playerid,"pPhone",PI[playerid][pPhone]);
		new string[64];
		format(string,sizeof(string),"Поздравляем с покупкой! Ваш новый номер: "W"%d",PI[playerid][pPhone]);
		SendClientMessage(playerid,CGOLD,string);
	}
	return true;
}

CB: sim_donate(playerid, donate, number)
{
	new rows;
	cache_get_row_count(rows);
	if(rows) {
		SendClientMessage(playerid, COLOR_GREY, "Номер телефона занят, подберите другой");
		D(playerid,D_DONATE_NUMBER,DSI,""P"Элитный номера телефона",""W"Введите ниже желаемый номер телефона\n- 5-и значный номер: 250р\n- 4-х значный номер: 300р","Купить","Назад");
		return true;
	}
	PI[playerid][pPhone] = number;
	UpdatePlayerData(playerid,"pPhone",PI[playerid][pPhone]);
	D(playerid,DIALOG_NONE,DSM," ",""W"Вы купили новый номер телефона","Закрыть","");
	GiveDonate(playerid, -donate, "покупка номера телефона");
	return true;
}

CB: sim_shop(playerid, number, id, price) {
	new rows;
	cache_get_row_count(rows);
	if(rows) {
		D(playerid,D_BIZZ_SIM,DSI, ""P"Покупка номера","\n\n"W"Введите номер, который хотите использовать (6 цифр):\n\n"NO"*"G" Указанный номер занят\n\n","Далее","Закрыть");
		return true;
	}
	PI[playerid][pPhone] = number;
	UpdatePlayerData(playerid,"pPhone",PI[playerid][pPhone]);
	GiveMoney(playerid, -price, "покупка в 24-7");
	if(gBusiness[id][bizzProduct]-gShopProduct[4] > 0) {
		gBusiness[id][bizzProduct]-= gShopProduct[4];
		bizz_pay(id,price);
	}
	if(QuestProgress[playerid][43] == 0 && AcceptQuest[playerid][43] != 0)
	{
		QuestProgress[playerid][43] ++;
		save_quest(playerid,43);
		SendOk(playerid,"Вы закончили выполнение ежедневного квеста. Квест можно завершить в (/quest)");
	}
	UpdateBusinessText(id);
	new string[64];
	format(string,sizeof(string),"Поздравляем с покупкой! Ваш новый номер: %d",PI[playerid][pPhone]);
	SendOk(playerid,string);
	show_24(playerid,id);
	return true;
}
stock show_24(playerid, id) {
	new string[512];
	string = ""W"Наименование\t"W"Стоимость\n";
	for(new i;i<SHOP_OBJECTS;i++){
		format(string,sizeof(string),""W"%s\t%s\t"GREEN"$%d\n",string,gShopObject[i],gShopPrice[i]*gBusiness[id][bizzPrice]);
	}
	D(playerid,D_BIZZ_24,DSTH,""P"Магазин 24/7",string,"Купить","Выход");
	return 1;
}
stock show_fish(playerid) {
	new id = TI[playerid][tSelectedBusinessID];
	static const f_str[] = ""P"Наименование\t"P"Стоимость\n"W"Удочка [1 шт.]\t"GREEN"$%d\n"W"Снасти [1 шт.]\t"GREEN"$%d\n"W"Наживка [10 шт.]\t"GREEN"$%d\n"W"Пропуск на ловлю рыбы [1 шт.]\t"GREEN"$%d\n"W"- Информация";
	new string[sizeof(f_str) +1 + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 6)];
	format(string,sizeof(string),f_str, 520*gBusiness[id][bizzPrice],340*gBusiness[id][bizzPrice],100*gBusiness[id][bizzPrice],400*gBusiness[id][bizzPrice]);
	D(playerid, D_BIZZ_FISH, DSTH, "Меню", string, "Купить", "Отмена");
}
stock show_poisk(playerid) {
	new id = TI[playerid][tSelectedBusinessID];
	static const f_str[] = ""P"Наименование\t"P"Стоимость\n"W"Магнит [1 шт.]\t"GREEN"$%d\n"W"Веревка [1 шт.]\t"GREEN"$%d\n"W"- Информация";
	new string[sizeof(f_str) +1 + (-2 + 6) + (-2 + 6)];
	format(string,sizeof(string),f_str, 520*gBusiness[id][bizzPrice],340*gBusiness[id][bizzPrice]);
	return D(playerid, D_BIZZ_POISK, DSTH, "Меню", string, "Купить", "Отмена");
}
stock show_tavern(playerid, id) {
	new string[180];
	string = ""W"Наименование\t"W"Стоимость\n";
	for(new i;i<4;i++){
		format(string,sizeof(string),"%s\t%s\t%d$\n",string,gTavernNames[i],gTavernCosts[i]*10*gBusiness[id][bizzPrice]);
	}
	D(playerid,D_BIZZ_TAVERN,DSTH,""P"Закусочная",string,"Далее","Выход");
	return 1;
}
stock save_salary(member) {
	new data[90];
	for(new i;i<15;i++) {
		if(!i) format(data,sizeof(data),"%d",FracSalary[member][i]);
		else format(data,sizeof(data),"%s|%d",data,FracSalary[member][i]);
	}
	switch(member) {
	case 0: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_pd = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
	case 1: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_fbi = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
	case 3: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_army = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
			printf("%s",query);
		}
	case 4: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_medics = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
	case 5: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_news = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
	case 8: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_whitehouse = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
	case 9: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_licensers = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
	case 10: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_rcsd = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
	}
	return true;
}
stock ACLoad(playerid) {
	if(PI[playerid][pAdmin] > 0)
	{
		for(new i;i<10;i++) 			TextDrawShowForPlayer(playerid, CheatText[i]);
		for(new i;i<3;i++) 				TextDrawShowForPlayer(playerid, CheatPanel[i]);
		EnableAntiCheatForPlayer(playerid, 0, 0);
		EnableAntiCheatForPlayer(playerid, 1, 0);
		EnableAntiCheatForPlayer(playerid, 2, 0);
		EnableAntiCheatForPlayer(playerid, 3, 0);
		EnableAntiCheatForPlayer(playerid, 4, 0);
		EnableAntiCheatForPlayer(playerid, 5, 0);
		EnableAntiCheatForPlayer(playerid, 6, 0);
		EnableAntiCheatForPlayer(playerid, 7, 0);
		EnableAntiCheatForPlayer(playerid, 8, 0);
		EnableAntiCheatForPlayer(playerid, 21, 0);
		return true;
	}
	return true;
}
CB: sad_temp_1(field) {
	SI[field][sad_temp] = 2;
	DestroyDynamicObject(SI[field][sad_object][0]);
	SI[field][sad_object][0] = CreateDynamicObject(673,sad_objects[field][0],sad_objects[field][1],sad_objects[field][2],sad_objects[field][3],sad_objects[field][4],sad_objects[field][5],-1,-1,-1,90.000);

	new string[128];
	format(string,sizeof(string),"Дерево\nСтадия - цветение\nФермер - %s",SI[field][sad_fermer]);
	UpdateDynamic3DTextLabelText(SI[field][sad_3dtext],-1,string);

	if(IsPlayerConnected(GetPlayerID(SI[field][sad_fermer]))) Streamer_Update(GetPlayerID(SI[field][sad_fermer]));

	SetTimerEx("sad_temp_2",30000, false, "i", field);
	return 1;
}

CB: sad_temp_2(field) {
	SI[field][sad_temp] = 3;
	new ID;
	for(new i; i < 833; i ++){
		if(sad_apple[i][a_ID] == field){	
			ID = i;
			break;
		}
	}
	SI[field][sad_object][1] = CreateDynamicObject(19576,sad_apple[ID][a_coordsX],sad_apple[ID][a_coordsY],sad_apple[ID][a_coordsZ],sad_apple[ID][a_coordsAX],sad_apple[ID][a_coordsAY],sad_apple[ID][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][2] = CreateDynamicObject(19576,sad_apple[ID+1][a_coordsX],sad_apple[ID+1][a_coordsY],sad_apple[ID+1][a_coordsZ],sad_apple[ID+1][a_coordsAX],sad_apple[ID+1][a_coordsAY],sad_apple[ID+1][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][3] = CreateDynamicObject(19576,sad_apple[ID+2][a_coordsX],sad_apple[ID+2][a_coordsY],sad_apple[ID+2][a_coordsZ],sad_apple[ID+2][a_coordsAX],sad_apple[ID+2][a_coordsAY],sad_apple[ID+2][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][4] = CreateDynamicObject(19576,sad_apple[ID+3][a_coordsX],sad_apple[ID+3][a_coordsY],sad_apple[ID+3][a_coordsZ],sad_apple[ID+3][a_coordsAX],sad_apple[ID+3][a_coordsAY],sad_apple[ID+3][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][5] = CreateDynamicObject(19576,sad_apple[ID+4][a_coordsX],sad_apple[ID+4][a_coordsY],sad_apple[ID+4][a_coordsZ],sad_apple[ID+4][a_coordsAX],sad_apple[ID+4][a_coordsAY],sad_apple[ID+4][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][6] = CreateDynamicObject(19576,sad_apple[ID+5][a_coordsX],sad_apple[ID+5][a_coordsY],sad_apple[ID+5][a_coordsZ],sad_apple[ID+5][a_coordsAX],sad_apple[ID+5][a_coordsAY],sad_apple[ID+5][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][7] = CreateDynamicObject(19576,sad_apple[ID+6][a_coordsX],sad_apple[ID+6][a_coordsY],sad_apple[ID+6][a_coordsZ],sad_apple[ID+6][a_coordsAX],sad_apple[ID+6][a_coordsAY],sad_apple[ID+6][a_coordsAZ],-1,-1,-1,20.000);

	new string[128];
	format(string,sizeof(string),"Дерево\nСтадия - созревание\nФермер - %s",SI[field][sad_fermer]);
	UpdateDynamic3DTextLabelText(SI[field][sad_3dtext],-1,string);

	if(IsPlayerConnected(GetPlayerID(SI[field][sad_fermer]))) Streamer_Update(GetPlayerID(SI[field][sad_fermer]));

	SetTimerEx("sad_temp_3",30000, false, "i", field);
	return 1;
}

CB: sad_temp_3(field) {
	SI[field][sad_temp] = 4;

	DestroyDynamicObject(SI[field][sad_object][1]);
	DestroyDynamicObject(SI[field][sad_object][2]);
	DestroyDynamicObject(SI[field][sad_object][3]);
	DestroyDynamicObject(SI[field][sad_object][4]);
	DestroyDynamicObject(SI[field][sad_object][5]);
	DestroyDynamicObject(SI[field][sad_object][6]);
	DestroyDynamicObject(SI[field][sad_object][7]);

	new ID;
	for(new i; i < 833; i ++) {
		if(sad_apple[i][a_ID] == field) {	
			ID = i;
			break;
		}
	}
	SI[field][sad_object][1] = CreateDynamicObject(19575,sad_apple[ID][a_coordsX],sad_apple[ID][a_coordsY],sad_apple[ID][a_coordsZ],sad_apple[ID][a_coordsAX],sad_apple[ID][a_coordsAY],sad_apple[ID][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][2] = CreateDynamicObject(19575,sad_apple[ID+1][a_coordsX],sad_apple[ID+1][a_coordsY],sad_apple[ID+1][a_coordsZ],sad_apple[ID+1][a_coordsAX],sad_apple[ID+1][a_coordsAY],sad_apple[ID+1][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][3] = CreateDynamicObject(19575,sad_apple[ID+2][a_coordsX],sad_apple[ID+2][a_coordsY],sad_apple[ID+2][a_coordsZ],sad_apple[ID+2][a_coordsAX],sad_apple[ID+2][a_coordsAY],sad_apple[ID+2][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][4] = CreateDynamicObject(19575,sad_apple[ID+3][a_coordsX],sad_apple[ID+3][a_coordsY],sad_apple[ID+3][a_coordsZ],sad_apple[ID+3][a_coordsAX],sad_apple[ID+3][a_coordsAY],sad_apple[ID+3][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][5] = CreateDynamicObject(19575,sad_apple[ID+4][a_coordsX],sad_apple[ID+4][a_coordsY],sad_apple[ID+4][a_coordsZ],sad_apple[ID+4][a_coordsAX],sad_apple[ID+4][a_coordsAY],sad_apple[ID+4][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][6] = CreateDynamicObject(19575,sad_apple[ID+5][a_coordsX],sad_apple[ID+5][a_coordsY],sad_apple[ID+5][a_coordsZ],sad_apple[ID+5][a_coordsAX],sad_apple[ID+5][a_coordsAY],sad_apple[ID+5][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][7] = CreateDynamicObject(19575,sad_apple[ID+6][a_coordsX],sad_apple[ID+6][a_coordsY],sad_apple[ID+6][a_coordsZ],sad_apple[ID+6][a_coordsAX],sad_apple[ID+6][a_coordsAY],sad_apple[ID+6][a_coordsAZ],-1,-1,-1,20.000);

	SI[field][sad_object][8] = CreateDynamicObject(1428,sad_stairs[field][0],sad_stairs[field][1],sad_stairs[field][2],sad_stairs[field][3],sad_stairs[field][4],sad_stairs[field][5],-1,-1,-1,90.000);

	new string[128];
	format(string,sizeof(string),"Дерево\nСтадия - сбор яблок\nФермер - %s",SI[field][sad_fermer]);
	UpdateDynamic3DTextLabelText(SI[field][sad_3dtext],-1,string);

	if(IsPlayerConnected(GetPlayerID(SI[field][sad_fermer]))) Streamer_Update(GetPlayerID(SI[field][sad_fermer]));

	SI[field][sad_time] = unix + 60*1;
	return 1;
}

CB: sad_temp_4(field,playerid){
	ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
	DeletePVar(playerid,"bailer_2");
	SetPlayerAttachedObject(playerid,4, 19637, 1, 0.016000,0.440000,0.016000,5.000001,93.500000,-96.800010,1.000000,1.000000,1.000000);
	SetPVarInt(playerid,"bailer_3",1);
	SetTimerEx("CarryDelay",1000,false,"i",playerid);

	new rand = Random(6,10);
	TI[playerid][tJobSad][2] =  rand;
	TI[playerid][tJobSad][3] += rand;
	
	new string[128];
	format(string,sizeof(string),""ORANGE"%d кг."W" яблок с дерева собраны. Всего кг. собрано - "ORANGE"%d",rand,TI[playerid][tJobSad][3]);
	SendUse(playerid,string);
	SendOk(playerid,"Отнесите яблоки на склад");
	EnableGPSForPlayer(playerid, -112.1444,4.2448,3.1257);
	sad_delete(field);
	DeletePVar(playerid,"bailer_4");
	DeletePVar(playerid,"sad_uxod");
	
	if(QuestProgress[playerid][56] < 10 && AcceptQuest[playerid][56] != 0) QuestProgress[playerid][56] ++,save_quest(playerid,56);
	if(QuestProgress[playerid][56] == 10 && AcceptQuest[playerid][56] != 0) {
		D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
	}
	return 1;
}

stock sad_delete(ID) {
	if(IsPlayerConnected(GetPlayerID(SI[ID][sad_fermer]))) DeletePVar(GetPlayerID(SI[ID][sad_fermer]),"sad_uxod");

	SI[ID][sad_temp] = 0;
	SI[ID][sad_time] = 0;

	DestroyDynamicObject(SI[ID][sad_object][0]);
	DestroyDynamicObject(SI[ID][sad_object][1]);
	DestroyDynamicObject(SI[ID][sad_object][2]);
	DestroyDynamicObject(SI[ID][sad_object][3]);
	DestroyDynamicObject(SI[ID][sad_object][4]);
	DestroyDynamicObject(SI[ID][sad_object][5]);
	DestroyDynamicObject(SI[ID][sad_object][6]);
	DestroyDynamicObject(SI[ID][sad_object][7]);
	DestroyDynamicObject(SI[ID][sad_object][8]);

	SI[ID][sad_object][0] = CreateDynamicObject(765,sad_objects[ID][0],sad_objects[ID][1],sad_objects[ID][2],sad_objects[ID][3],sad_objects[ID][4],sad_objects[ID][5],-1,-1,-1,90.000);
	UpdateDynamic3DTextLabelText(SI[ID][sad_3dtext],-1,"Дерево\nСтадия - сохнет\nФермер - Отсутствует");

	if(IsPlayerConnected(GetPlayerID(SI[ID][sad_fermer]))) Streamer_Update(GetPlayerID(SI[ID][sad_fermer]));
	return 1;
}
CB: use_medsex(playerid) {
	if(PI[playerid][pSex] == 1) {
		new rand = random(sizeof(med_gskin));
		PI[playerid][pSex] = 2;
		if(PI[playerid][pMember] == 0) PI[playerid][pSkin] = med_gskin[rand];
	}
	else {
		new rand = random(sizeof(med_mskin));
		PI[playerid][pSex] = 1;
		if(PI[playerid][pMember] == 0) PI[playerid][pSkin] = med_mskin[rand];
	}
	UpdatePlayerData(playerid,"pSex",PI[playerid][pSex]);
	if(PI[playerid][pMember] == 0) {
		UpdatePlayerData(playerid,"Skin",PI[playerid][pSkin]);
		A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
	}
	return 1;
}
stock save_other() {
	new query[512];
	mysql_format(connects, query, sizeof(query),"UPDATE `others` SET `gun_mats` = '%d',`woodsklad` = '%d'",zavodsklad,woodsklad);
	mysql_pquery(connects,query);
	return 1;
}
stock save_trailer(id) {
	new query[512];
	mysql_format(connects, query, sizeof(query),"UPDATE `"TABLE_DNK"` SET `gun` = '%d|%d|%d|%d|%d|%d|%d|%d|%d' WHERE `id` = '%d'",PlayerTrailer[id][carGun][0],
	PlayerTrailer[id][carGun][1],PlayerTrailer[id][carGun][2],PlayerTrailer[id][carGun][3],PlayerTrailer[id][carGun][4],
	PlayerTrailer[id][carGun][5],PlayerTrailer[id][carGun][6],PlayerTrailer[id][carGun][7],PlayerTrailer[id][carGun][8],PlayerTrailer[id][carID]);
	mysql_pquery(connects,query);
}
stock SaveHouseGun(id) {
	new query[512];
	mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `gun` = '%d|%d|%d|%d|%d|%d|%d|%d|%d' WHERE `id` = '%d'",gHouses[id][houseGun][0],gHouses[id][houseGun][1],gHouses[id][houseGun][2],gHouses[id][houseGun][3],gHouses[id][houseGun][4],gHouses[id][houseGun][5],gHouses[id][houseGun][6],gHouses[id][houseGun][7],gHouses[id][houseGun][8],gHouses[id][houseID]);
	mysql_pquery(connects,query);
	return 1;
}
CB: creategFamily(id) {
	gFamily[id][famID] = cache_insert_id();
	new query[512];
	mysql_format(connects, query, sizeof(query),"SELECT `time` FROM `family` WHERE `id` = '%d'", gFamily[id][famID]);
	mysql_tquery(connects, query, "get_dategFamily", "i", id);
	return 1;
}
CB: get_dategFamily(id) {
	cache_get_value(0,"time",gFamily[id][famDate],22);
	return 1;
}
stock cancel_skin(playerid) {
	CancelSelectTextDraw(playerid);
	for(new i=0; i<9; i++) {
		TextDrawHideForPlayer(playerid,buy_skins[i]);
	}
	PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
	DeletePVar(playerid,"ChangingSkin");
	TI[playerid][tTPpick] = true;
	SetPlayerPosAC(playerid, GetPVarFloat(playerid, "posx"), GetPVarFloat(playerid, "posy"), GetPVarFloat(playerid, "posz"),GetPVarInt(playerid, "vw"),GetPVarInt(playerid, "interior"));
	SetPlayerFacingAngle(playerid, GetPVarInt(playerid, "posa"));
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	DeletePVar(playerid, "posx");
	DeletePVar(playerid, "posy");
	DeletePVar(playerid, "posz");
	DeletePVar(playerid, "posa");
	DeletePVar(playerid, "interior");
	DeletePVar(playerid, "vw");
	for(new i = 0; i < 8; i++) {
		if(!PI[playerid][pSlotItem][i]) continue;
		AtachPlayerAcces(playerid, PI[playerid][pSlotItem][i],GetPlayerSkin(playerid));
	}
	return 1;
}
stock RandomMassive(massive[], size) {
	for(new i; i < size; i ++){
		new rand = random(size), mass = massive[i];
		massive[i] = massive[rand];
		massive[rand] = mass;
	}
}
family_dialog(playerid) return D(playerid,D_FAMILY,DSL, ""P"Семья", ""P"1."W" Информация о семье\n"P"2."W" Состав семьи онлайн\n"P"3."W" Состав семьи оффлайн\n"P"4."W" Настройки семьи\n"P"5."W" Передать семью\n"P"6."W" Улучшения семьи\n"P"7."W" Расформировать семью\n"P"8."W" Черный список\n"P"9."W" Национальность\n"P"10."W" Автопарк\n"P"11."W" Дом семьи\n"P"12."W" Рейтинг членов семьи\n{F0BF39}Покинуть семью", "Выбрать", "Закрыть");
family_setting(playerid) {
	new fam = PI[playerid][pFamily]-1;
	static const f_str[] = ""P"1."W" Может принимать:\t\t\t"P"%s(%i)"W"\n\
								"P"2."W" Может увольнять:\t\t\t"P"%s(%i)"W"\n\
								"P"3."W" Может повышать:\t\t\t"P"%s(%i)"W"\n\
								"P"4."W" Может пользоваться складом:\t"P"%s(%i)"W"\n\
								"P"5."W" Может брать деньги с общака\t"P"%s(%i)"W"\n\
								"P"6."W" Может спавнить автомобили\t"P"%s(%i)"W"\n\
								"P"7."W" Может управлять автопарком\t"P"%s(%i)"W"\n\
								"P"8."W" Изменить названия рангов\n\
								"P"9."W" Изменить цвет семьи\n\
								"P"10."W" Сменить название семьи"G" [200 талонов]\n\
								"P"11."W" Слоган семьи";
	new string[sizeof(f_str) +1 + (-2 + 33) + (-2 + 33) + (-2 + 33) + 50];
	format(string,sizeof(string),f_str,GetFamName(fam,gFamily[fam][famInvRang]),gFamily[fam][famInvRang],
	GetFamName(fam,gFamily[fam][famUninvRang]),gFamily[fam][famUninvRang],
	GetFamName(fam,gFamily[fam][famGiveRang]),gFamily[fam][famGiveRang],
	GetFamName(fam,gFamily[fam][famSklad]),gFamily[fam][famSklad],
	GetFamName(fam,gFamily[fam][famSkladMoney]),gFamily[fam][famSkladMoney],
	GetFamName(fam,gFamily[fam][famSpawnCar]),gFamily[fam][famSpawnCar],
	GetFamName(fam,gFamily[fam][famBuyCar]),gFamily[fam][famBuyCar]);
	return D(playerid,D_FAMILY_SET,DSL,""P"Настройки",string,"Выбрать","Назад");
}
stock SetNextJobClearCP(playerid,type) {
	new id_cp = GetPVarInt(playerid,"check_job_cleaner");
	if(id_cp == -1) id_cp = 0;
	if(gClearCPs[type][id_cp][1] == 0.0 || gClearCPs[type][id_cp][2] == 0.0) {
		SetPVarInt(playerid,"clear_salary", GetPVarInt(playerid,"clear_salary") + 2500);
		DeletePVar(playerid,"check_job_cleaner");
		DeletePVar(playerid,"route_job_cleaner");
		
		if(PI[playerid][pFamily]) {
			gFamily[PI[playerid][pFamily]-1][famTalon] += 5;
			UpdateFamily(PI[playerid][pFamily],"talon",gFamily[PI[playerid][pFamily]-1][famTalon]);
			PI[playerid][pFamTalon] += 5, UpdatePlayerData(playerid, "talon_fam", PI[playerid][pFamTalon]);
		}
		if(PI[playerid][pExpJob][1] < 80)
		{
			PI[playerid][pExpJob][1] += 1;
			if(PI[playerid][pExpJob][1] == 80) {
				PI[playerid][pAcsJob][1] = 1;
				SendOk(playerid,"Вы получили новый аксессуар за достижение! "GREEN"(/mm > навыки персонажа > полученные аксессуары)");
				save_acsjob(playerid);
			}
			save_jskill(playerid);
		}
		if(QuestProgress[playerid][53] < 5 && AcceptQuest[playerid][53] != 0) QuestProgress[playerid][53] ++,save_quest(playerid,53);
		if(QuestProgress[playerid][53] == 5 && AcceptQuest[playerid][53] != 0) {
			SendOk(playerid,"Вы закончили выполнение ежедневного квеста. Квест можно завершить в (/quest)");
		}
		D(playerid, D_JOB_CLEAR_3, DSM, ""P"Уборщик улиц", ""G"Вы проехали круг."W"\n\nУ вас есть возможность выбрать маршрут или забрать Заработную плату", "Выбрать", "Забрать");
		return true;
	}
	DisablePlayerRaceCheckpoint(playerid);

	SetPlayerRaceCheckpoint(playerid,
	(gClearCPs[type][id_cp][0] != 1.0) ? (0) : (1),
	gClearCPs[type][id_cp][1],
	gClearCPs[type][id_cp][2],
	gClearCPs[type][id_cp][3],

	gClearCPs[type][id_cp + 1][1],
	gClearCPs[type][id_cp + 1][2],
	gClearCPs[type][id_cp + 1][3], 4.0);
	SetPVarInt(playerid,"check_job_cleaner", id_cp + 1);
	return 1;
}
stock SetNextBusCP(playerid, stop = false) {
	if(GetPVarInt(playerid, "busstop")) return 1;
	new route = GetPVarInt(playerid,"route")-1;
	new id_cp = GetPVarInt(playerid,"id_cp");

	if(route == -1) route = 0;
	if(id_cp == -1) id_cp = 0;
	
	if(gBusCPs[route][id_cp][1] == 0.0 || gBusCPs[route][id_cp][2] == 0.0) {
		id_cp = 0;
		
		if(PI[playerid][pFamily]) {
			gFamily[PI[playerid][pFamily]-1][famTalon] += 20;
			UpdateFamily(PI[playerid][pFamily],"talon",gFamily[PI[playerid][pFamily]-1][famTalon]);
			PI[playerid][pFamTalon] += 20, UpdatePlayerData(playerid, "talon_fam", PI[playerid][pFamTalon]);
		}
		
		if(PI[playerid][pExpJob][5] < 50)
		{
			PI[playerid][pExpJob][5] += 1;
			if(PI[playerid][pExpJob][5] == 50) {
				PI[playerid][pAcsJob][5] = 1;
				SendOk(playerid,"Вы получили новый аксессуар за достижение! "GREEN"(/mm > навыки персонажа > полученные аксессуары)");
				save_acsjob(playerid);
			}
			save_jskill(playerid);
		}
		
		if(QuestProgress[playerid][10] < 10 && AcceptQuest[playerid][10] != 0) QuestProgress[playerid][10] ++,save_quest(playerid,10);
		if(QuestProgress[playerid][10] == 10 && AcceptQuest[playerid][10] != 0) {
			D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Водитель автобуса'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
			NextStapQI(playerid,10);
		}
		SendOk(playerid,"Конечная остановка. Вы проехали целый маршрут, чтобы завершить работу введите:"P" /unrent");
	}
	if(id_cp > 0) {
		if(gBusCPs[route][id_cp - 1][0] == 1.0 && !stop) {
			new string[156];
			SetPVarInt(playerid, "busstop", true);
			format(string,sizeof(string),"Автобус по маршруту %s отправляется через 10 секунд",gRouteName[route]);
			ProxDetector(15.0,playerid, string,0x44b2ffff);
			SetTimerEx("BusStop",(10 * 1000),0,"i",playerid);
			DisablePlayerRaceCheckpoint(playerid);
			return 1;
		}
	}
	
	DisablePlayerRaceCheckpoint(playerid);
	SetPVarInt(playerid,"bus_salary", GetPVarInt(playerid,"bus_salary") + BUS_PRICE_CHECKPOINT);
	SetPlayerRaceCheckpoint(playerid,
	(gBusCPs[route][id_cp][0] != 1.0) ? (0) : (1),
	gBusCPs[route][id_cp][1],
	gBusCPs[route][id_cp][2],
	gBusCPs[route][id_cp][3],
	gBusCPs[route][id_cp + 1][1],
	gBusCPs[route][id_cp + 1][2],
	gBusCPs[route][id_cp + 1][3], 7.0);
	SetPVarInt(playerid,"id_cp", id_cp + 1);
	return 1;
}
CB: BusStop(playerid) {
	DeletePVar(playerid, "busstop");

	SetNextBusCP(playerid, true);
	return 1;
}
stock radio_(playerid,const action[],Float:distance = 6.0) {
	new mes[145];
	format(mes,sizeof(mes),"%s сказал(а) в рацию: %s",player_name[playerid],action);
	foreach(new i:Player) {
		if(!TI[i][tLogin] || playerid == i) continue;
		if(GetPlayerDistanceToPlayer(playerid,i) > distance || GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		SendClientMessage(i,COLOR_PURPLE,mes);
	}
	return 1;
}
stock MeAction(playerid,const action[],Float:distance = 13.0) {
	new mes[145];
	format(mes,sizeof(mes),"%s %s",player_name[playerid],action);
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPlayerDistanceToPlayer(playerid,i) > distance || GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		SendClientMessage(i,COLOR_PURPLE,mes);
	}
	return 1;
}
stock EndBus(playerid) {
	if(IsValid3DTextLabel(gPlayerBusText[playerid])) DestroyDynamic3DTextLabelEx(gPlayerBusText[playerid]);
	DisablePlayerRaceCheckpoint(playerid);
	new string[80];
	new repairprice = floatround((1000.0-GetPVarFloat(playerid,"bus_damage"))*2);
	if(repairprice < 0 || repairprice > 1000) repairprice = 1000;
	PI[playerid][pBank] -= repairprice;
	PI[playerid][pSalary] += GetPVarInt(playerid,"bus_salary");
	
	
	UpdatePlayerData(playerid,"pBank",PI[playerid][pBank]);
	
	format(string,sizeof(string),"Вы заработали: "GREEN"%i$."W" Штраф за ремонт:"GREEN" %i$",GetPVarInt(playerid,"bus_salary"),repairprice);
	SendClientMessage(playerid, COLOR_WHITE,string);
	SendClientMessage(playerid, COLOR_WHITE,"Рабочий день закончен!");

	
	UpdatePlayerData(playerid,"salary",PI[playerid][pSalary]);

	DeletePVar(playerid,"bus_id");
	TI[playerid][tSpcarTime] = 0;
	DeletePVar(playerid,"id_cp");
	DeletePVar(playerid,"bus_salary");
	DeletePVar(playerid,"bus_damage");
	DeletePVar(playerid, "route");
	return 1;
}

stock EndTaxi(playerid) {
	if(!TI[playerid][tSpcarTime]) return true;
	SendClientMessage(playerid,COLOR_BLUE,"Рабочий день завершен!");
	SetVehicleToRespawn(GetPVarInt(playerid,"veh_id_taxi"));
	TI[playerid][tSpcarTime] = 0;
	DeletePVar(playerid,"veh_id_taxi");
	DisablePlayerRaceCheckpoint(playerid);
	return true;
}

stock EndClear(playerid) {
	DisablePlayerRaceCheckpoint(playerid);
	if(GetPVarInt(playerid,"clear_salary")) {
		new string[46];
		format(string,sizeof(string),"Вы заработали: "GREEN"%i$",GetPVarInt(playerid,"clear_salary"));
		SendClientMessage(playerid,COLOR_WHITE,string);
		SendClientMessage(playerid,COLOR_WHITE,"Рабочий день закончен!");
		GiveMoney(playerid, GetPVarInt(playerid,"clear_salary"), "зп на чистке дорог");
		UpdatePlayerData(playerid,"salary",PI[playerid][pSalary]);
	}
	else {
		SendClientMessage(playerid,COLOR_WHITE,"Рабочий день закончен! Вы ничего не заработали.");
	}
	DeletePVar(playerid,"clear_salary");
	DeletePVar(playerid,"clear_id");
	TI[playerid][tSpcarTime] = 0;
	DeletePVar(playerid,"check_job_cleaner");
	DeletePVar(playerid,"route_job_cleaner");
	return 1;
}
stock EndEat(playerid) {
	if(PlayerEatText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabelEx(PlayerEatText[playerid]);
		PlayerEatText[playerid] = Text3D:-1;
	}
	DeletePVar(playerid,"eatcolvo");
	DeletePVar(playerid,"eatjob");
	if(TI[playerid][tSpcarTime]){
		TI[playerid][tSpcarTime] = 0;
	}
	return 1;
}
stock EndMeh(playerid) {
	if(PlayerMehText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabelEx(PlayerMehText[playerid]);
		PlayerMehText[playerid] = Text3D:-1;
	}
	DeletePVar(playerid,"toplivo");
	DeletePVar(playerid,"mehjob");
	if(TI[playerid][tSpcarTime]){
		TI[playerid][tSpcarTime] = 0;
	}
	return 1;
}
stock EndProd(playerid)
{
	if (gPlayerProdText[playerid] != Text3D: -1)
	{
		DestroyDynamic3DTextLabel(gPlayerProdText[playerid]);
		gPlayerProdText[playerid] = Text3D: -1;
	}
	if (gPlayerProdCP[playerid] != -1) DestroyDynamicCP(gPlayerProdCP[playerid]);
	if (Trailer_job[playerid] != INVALID_VEHICLE_ID) A_DestroyVehicle(Trailer_job[playerid]), Trailer_job[playerid] = INVALID_VEHICLE_ID, DeletePVar(playerid, "attach_trailer");

	DeletePVar(playerid, "prod_vehicle_id");
	DeletePVar(playerid, "count_prod2");
	DeletePVar(playerid, "count_prod");
	TI[playerid][tSpcarTime] = 0;
	DeletePVar(playerid, "prod_id");
	return 1;
}
stock EndGun(playerid) {
	TI[playerid][tJobGun][0] = 0;
	if(GetPVarInt(playerid,"pgunobject")) {
		new objectid = GetPVarInt(playerid,"pgunobject");
		if(IsValidDynamicObject(objectid)) DestroyDynamicObject(objectid);
		DeletePVar(playerid,"pgunobject");
	}
	TI[playerid][tJobGun][2] = 0;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 9))RemovePlayerAttachedObject(playerid,9);
	if(PI[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
		SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
	}
	else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);

	if(GetPVarInt(playerid,"gun_salary") > 0) {
		static const f_str[] = "Вы заработали "ORANGE"$%d";
		new string[sizeof(f_str) +1 + (-2 + 10)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		GiveMoney(playerid,TI[playerid][tJobSalary],"ЗП оружейный завод");
	}
	else {
		static const f_str[] = "Вы заработали "ORANGE"$%d. "W"Деньги будут зачислены на Ваш банковский счёт во время зарплаты (PayDay)";
		new string[sizeof(f_str) +1 + (-2 + 10)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		PI[playerid][pSalary] += TI[playerid][tJobSalary];
		UpdatePlayerData(playerid,"salary",PI[playerid][pSalary]);
	}

	TI[playerid][tJobSalary] = 0;
	DeletePVar(playerid,"gun_salary");
	DisablePlayerRaceCheckpoint(playerid);
	for(new i = 0;i < 4;i++) {
		PlayerTextDrawHide(playerid,work_td[playerid][i]);
	}
	return 1;
}
stock EndWood(playerid) {
	TI[playerid][tJobWood][0] = 0;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 9))RemovePlayerAttachedObject(playerid,9);
	if(PI[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
		SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
	}
	else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
	DisablePlayerCheckpoint(playerid);
	if(GetPVarInt(playerid,"wood_salary") > 0) {
		static const f_str[] = "Вы заработали "ORANGE"$%d";
		new string[sizeof(f_str) +1 + (-2 + 10)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		GiveMoney(playerid,TI[playerid][tJobSalary],"ЗП лесопилка");
	}
	else {
		static const f_str[] = "Вы заработали "ORANGE"$%d. "W"Деньги будут зачислены на Ваш банковский счёт во время зарплаты (PayDay)";
		new string[sizeof(f_str) +1 + (-2 + 10)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		PI[playerid][pSalary] += TI[playerid][tJobSalary];
		UpdatePlayerData(playerid,"salary",PI[playerid][pSalary]);
	}
	ClearAnims(playerid);
	ClearAnim(playerid);
	TI[playerid][tJobSalary] = 0;
	TI[playerid][tJobWood][3] = 0;
	DeletePVar(playerid,"wood_salary");
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE );
	DisablePlayerRaceCheckpoint(playerid);
	for(new i = 0;i < 4;i++) {
		PlayerTextDrawHide(playerid,work_td[playerid][i]);
	}
	return 1;
}
stock EggEnd(playerid) { // завершение на ферме
	if(PI[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
		SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
	}
	else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
	if(GetPVarInt(playerid,"sad_salary") > 0) {
		static const f_str[] = "Вы заработали "ORANGE"$%d";
		new string[sizeof(f_str) +1 + (-2 + 5)];

		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		GiveMoney(playerid,TI[playerid][tJobSalary],"ЗП яблочный сад");
	}
	else {
		static const f_str[] = "Вы заработали "ORANGE"$%d. "W"Деньги будут зачислены на Ваш банковский счёт во время зарплаты (PayDay)";
		new string[sizeof(f_str) +1 + (-2 + 5)];

		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		PI[playerid][pSalary] += TI[playerid][tJobSalary];
		UpdatePlayerData(playerid,"salary",PI[playerid][pSalary]);
	}
	for(new i = 0;i < 4;i++) {
		PlayerTextDrawHide(playerid,work_td[playerid][i]);
	}
	EndEgg(playerid);
	TI[playerid][tJobSalary] = 0;
	DeletePVar(playerid,"egg_start");
	DeletePVar(playerid,"sad_salary");
	return true;
}

stock EndSad(playerid) {
	TI[playerid][tJobSad][0] = 0;
	DeletePVar(playerid, "bailer");
	DeletePVar(playerid, "bailer_1");
	DeletePVar(playerid, "bailer_2");
	DeletePVar(playerid, "bailer_3");
	DeletePVar(playerid, "bailer_4");
	if(PI[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
		SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
	}
	else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
	if(GetPVarInt(playerid,"sad_salary") > 0) {
		static const f_str[] = "Вы заработали "ORANGE"$%d";
		new string[sizeof(f_str) +1 + (-2 + 5)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		GiveMoney(playerid,TI[playerid][tJobSalary],"ЗП яблочный сад");
	}
	else {
		static const f_str[] = "Вы заработали "ORANGE"$%d. "W"Деньги будут зачислены на Ваш банковский счёт во время зарплаты (PayDay)";
		new string[sizeof(f_str) +1 + (-2 + 5)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		PI[playerid][pSalary] += TI[playerid][tJobSalary];
		UpdatePlayerData(playerid,"salary",PI[playerid][pSalary]);
	}
	DeletePVar(playerid,"sad_salary");
	TI[playerid][tJobSad][2] = 0;
	TI[playerid][tJobSad][3] = 0;
	TI[playerid][tJobSalary] = 0;
	for(new i = 0;i < 4;i++) {
		PlayerTextDrawHide(playerid,work_td[playerid][i]);
	}
	return 1;
}
stock EndFish(playerid) {
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 473) RemovePlayerFromVehicleAC(playerid);
	GangZoneHideForPlayer(playerid,fish_zone[GetPVarInt(playerid,"fish_place")-1]);
	DeletePVar(playerid, "fish_place");
	DeletePVar(playerid, "fish_yes");
	RemovePlayerAttachedObject(playerid, 7);
	Fishing[playerid] = false;
	TogglePlayerControllable(playerid, 1);
	TI[playerid][tProcess][0] = -1;
	TI[playerid][tProcess][1] = -1;
	for(new YN = 0;YN < 3;YN++) {
		TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
		if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
	}
	return 1;
}
stock GetYearDayCount(year) {
	if((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) return 366;
	else return 365;
}

stock GetDayNumber() {
	new d,m,y,diff,daycount,cdaycount;
	getdate(y,m,d);	
	diff = y - 2012;
	for(new i;i<diff;i++) daycount += GetYearDayCount(i+2012);
	cdaycount = GetYearDayCount(y);	
	new Mon[12];
	if(cdaycount == 365) Mon = {0,31,59,90,120,151,181,212,243,273,304,334};
	else Mon = {0,31,60,91,121,152,182,213,244,274,305,335};	
	m -= 1; //один минус переводим в индекс	
	new result = daycount+Mon[m]+d;
	return result;
}
stock PhoneStatus(playerid,bool:status) {
	if(status == true) {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		SetPlayerAttachedObject(playerid,3,18874,6,0.107999,0.015000,-0.016000,97.100006,-165.800048,-3.000013);
		MeAction(playerid,"достал(а) телефон");
	}
	else {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid,3);
		MeAction(playerid,"положил(а) телефон");
	}
}
SavePlayerNumber(playerid) {
	new query[1024];
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `phonenumber` = '%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d' WHERE `pID` = '%d' LIMIT 1",
	PI[playerid][pPhoneNumber][0],PI[playerid][pPhoneNumber][1],PI[playerid][pPhoneNumber][2],PI[playerid][pPhoneNumber][3],PI[playerid][pPhoneNumber][4],
	PI[playerid][pPhoneNumber][5],PI[playerid][pPhoneNumber][6],PI[playerid][pPhoneNumber][7],PI[playerid][pPhoneNumber][8],PI[playerid][pPhoneNumber][9],
	PI[playerid][pPhoneNumber][10],PI[playerid][pPhoneNumber][11],PI[playerid][pPhoneNumber][12],PI[playerid][pPhoneNumber][13],PI[playerid][pPhoneNumber][14],
	PI[playerid][pPhoneNumber][15],PI[playerid][pPhoneNumber][16],PI[playerid][pPhoneNumber][17],PI[playerid][pPhoneNumber][18],PI[playerid][pPhoneNumber][19],
	PI[playerid][pPhoneNumber][20],PI[playerid][pPhoneNumber][21],PI[playerid][pPhoneNumber][22],PI[playerid][pPhoneNumber][23],PI[playerid][pPhoneNumber][24],PI[playerid][pID]);
	mysql_tquery(connects, query, "", "");
	
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `phonename` = '%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s' WHERE `pID` = '%d' LIMIT 1",pPhoneName[playerid][0],pPhoneName[playerid][1],pPhoneName[playerid][2],pPhoneName[playerid][3],pPhoneName[playerid][4],
	pPhoneName[playerid][5],pPhoneName[playerid][6],pPhoneName[playerid][7],pPhoneName[playerid][8],pPhoneName[playerid][9],
	pPhoneName[playerid][10],pPhoneName[playerid][11],pPhoneName[playerid][12],pPhoneName[playerid][13],pPhoneName[playerid][14],
	pPhoneName[playerid][15],pPhoneName[playerid][16],pPhoneName[playerid][17],pPhoneName[playerid][18],pPhoneName[playerid][19],
	pPhoneName[playerid][20],pPhoneName[playerid][21],pPhoneName[playerid][22],pPhoneName[playerid][23],pPhoneName[playerid][24],PI[playerid][pID]);
	mysql_tquery(connects, query, "", "");
}

SendStreamMessage(Float:radius, playerid, const mes[], color) {
	new Float:X,
Float:Y,
Float:Z,
	vw = GetPlayerVirtualWorld(playerid);
	GetPlayerPos(playerid,X,Y,Z);
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPlayerVirtualWorld(i) == vw) {
			if(PlayerToPoint(radius,i,X,Y,Z)) SendClientMessage(i, color, mes);
		}
	}
}
stock DoAction(playerid,action[],Float:distance = 13.0) {
	if(TI[playerid][tGag]) return SendClientMessage(playerid, COLOR_GREY, "У Вас кляп");
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	new string[128];
	format(string,sizeof(string),"%s (%s)",action,player_name[playerid]);
	SendStreamMessage(distance, playerid, string, COLOR_PURPLE);
	return 1;
}
stock TryAction(playerid,action[],Float:distance = 13.0) {
	if(TI[playerid][tGag]) return SendClientMessage(playerid, COLOR_GREY, "У Вас кляп");
	if(PI[playerid][pMute] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас бан чата");
	new luck[24],string[144];
	if((random(2-0)+0) == 1) strcat(luck,"{33AA33}Удачно");
	else strcat(luck,"{FF0000}Неудачно");
	format(string,sizeof(string),"%s %s | %s",player_name[playerid],action,luck);
	SendStreamMessage(distance, playerid, string, COLOR_PURPLE);
	return 1;
}
stock AnimationTrunk(playerid,Float:x,Float:y,Float:z,Float:a,Float:pos_y,Float:pos_z) {
	new Float:trunkpos[5][4];
	trunkpos[2][0]=x;
	trunkpos[2][1]=y;
	trunkpos[2][2]=z;
	trunkpos[2][3]=a;
	trunkpos[2][0]-=1.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[2][1]-=1.5*floatcos(-trunkpos[2][3],degrees);
	trunkpos[0]=trunkpos[2];
	trunkpos[1]=trunkpos[2];
	trunkpos[0][0]=trunkpos[2][0]+2.0*floatsin(-trunkpos[2][3]+ -90.0,degrees);
	trunkpos[0][1]=trunkpos[2][1]+2.0*floatcos(-trunkpos[2][3]+ -90.0,degrees);
	trunkpos[1][0]=trunkpos[2][0]+0.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[1][1]=trunkpos[2][1]+0.5*floatcos(-trunkpos[2][3],degrees);
	GetPlayerCameraPos(playerid,trunkpos[3][0],trunkpos[3][1],trunkpos[3][2]);
	SetPVarFloat(playerid,"oldtrunkcamposx",trunkpos[3][0]);
	SetPVarFloat(playerid,"oldtrunkcamposy",trunkpos[3][1]);
	SetPVarFloat(playerid,"oldtrunkcamposz",trunkpos[3][2]);
	GetPlayerCameraFrontVector(playerid,trunkpos[4][0],trunkpos[4][1],trunkpos[4][2]);
	InterpolateCameraPos(playerid,trunkpos[3][0],trunkpos[3][1],trunkpos[3][2],trunkpos[0][0],trunkpos[0][1],trunkpos[0][2]+2.4,2000,CAMERA_MOVE);
	SetPVarFloat(playerid,"oldtrunkcamposx2",trunkpos[3][0] + trunkpos[4][0]);
	SetPVarFloat(playerid,"oldtrunkcamposy2",trunkpos[3][1] + trunkpos[4][1]);
	SetPVarFloat(playerid,"oldtrunkcamposz2",trunkpos[3][2] + trunkpos[4][2]);
	InterpolateCameraLookAt(playerid,trunkpos[3][0] + trunkpos[4][0],trunkpos[3][1] + trunkpos[4][1],trunkpos[3][2] + trunkpos[4][2],trunkpos[1][0],trunkpos[1][1],trunkpos[1][2]+0.8,2000,CAMERA_MOVE),
	ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);
	trunkpos[2][0]+=0.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[2][1]+=0.5*floatcos(-trunkpos[2][3],degrees);
	SetPlayerPosAC(playerid,trunkpos[2][0],pos_y,pos_z,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
	SetPlayerFacingAngle(playerid,trunkpos[2][3]);
	return 1;
}
stock GetVehicleShiftPos(vehicleid, style, &Float:x, &Float:y, &Float:z, Float:distance) {
	new Float:a;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);
	switch(style) {
	case 0: {
			x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
		}
	case 1: {
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
	case 2: {
			a += 90.0;
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
	case 3: {
			a -= 90.0;
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
	default: return false;
	}
	return true;
}

stock SaveTrunk(playerid, vehicleid)
{
	new x = GetNearestCar(playerid);
	CarsInfo[playerid][carNarko][x] = TrunkInfo[vehicleid][tDrugs];
	CarsInfo[playerid][carMats][x] = TrunkInfo[vehicleid][tMats];
	CarsInfo[playerid][carKanistra][x] = TrunkInfo[vehicleid][tKanistra];
	CarsInfo[playerid][carDeagle][x] = TrunkInfo[vehicleid][tGun][0];
	CarsInfo[playerid][carAK47][x] = TrunkInfo[vehicleid][tGun][1];
	CarsInfo[playerid][carM4][x] = TrunkInfo[vehicleid][tGun][2];
	CarsInfo[playerid][carShot][x] = TrunkInfo[vehicleid][tGun][3];
	new query[250];
	mysql_format(connects, query, sizeof(query),"UPDATE `cars` SET `narko` = '%d',`mats` = '%d',`kanistra` = '%d',`deagle` = '%d',`ak47` = '%d',`m4` = '%d',`shot` = '%d' WHERE id = '%d'",
	CarsInfo[playerid][carNarko][x],CarsInfo[playerid][carMats][x],CarsInfo[playerid][carKanistra][x],CarsInfo[playerid][carDeagle][x],
	CarsInfo[playerid][carAK47][x],CarsInfo[playerid][carM4],CarsInfo[playerid][carShot][x],CarsInfo[playerid][carID][x]);
	mysql_tquery(connects, query,"","");
	return 1;
}
stock trunk_close(playerid) {
	new Float:tX=GetPVarFloat(playerid,"oldtrunkcamposx");
	new Float:tY=GetPVarFloat(playerid,"oldtrunkcamposy");
	new Float:tZ=GetPVarFloat(playerid,"oldtrunkcamposz");
	new Float:tX2=GetPVarFloat(playerid,"oldtrunkcamposx2");
	new Float:tY2=GetPVarFloat(playerid,"oldtrunkcamposy2");
	new Float:tZ2=GetPVarFloat(playerid,"oldtrunkcamposz2");
	new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
	GetPlayerCameraPos(playerid,x,y,z);
	InterpolateCameraPos(playerid,x,y,z,tX,tY,tZ,1500,CAMERA_MOVE);
	GetPlayerCameraFrontVector(playerid,x2,y2,z2);
	InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,tX2,tY2,tZ2,1500,CAMERA_MOVE);
	SetTimerEx("SetCameraBehindPlayerDelay",1501,0,"i",playerid);
	GetVehicleParamsEx(idaofcar[playerid], engine, lights, alarm, doors, bonnet, boot, objective);

	SetVehicleParamsEx(idaofcar[playerid], engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_OFF, objective);
	idaofcar[playerid] = -1;
	DeletePVar(playerid,"oldtrunkcamposx");
	DeletePVar(playerid,"oldtrunkcamposy");
	DeletePVar(playerid,"oldtrunkcamposz");
	DeletePVar(playerid,"oldtrunkcamposx2");
	DeletePVar(playerid,"oldtrunkcamposy2");
	DeletePVar(playerid,"oldtrunkcamposz2");
	return 1;
}
stock ShowSettings(playerid) {
	new string[700];
	new talk[25],style[25],radio[30],spawn[30];
	switch(PI[playerid][pSettings][4]) {
	case 0 : talk = "{C34D45}[Стандартный]";
	case 7 : talk = "Нет";
	default: format(talk,sizeof(talk),""GREEN"Стиль %d",PI[playerid][pSettings][4]);
	}
	switch(PI[playerid][pSettings][5]) {
	case 0: style = "{C34D45}[Стандартный]";
	case 1: style = ""GREEN"Бокс";
	case 2: style = ""GREEN"Кунг-Фу";
	case 3: style = ""GREEN"Кик-Бокс";
	}
	switch(PI[playerid][pSettings][2]) {
	case fLSNEWS: radio = ""GREEN"Радиоцентр ЛС";
	case 0: radio = "{C34D45}[Отключено]";
	}
	
	switch(PI[playerid][pSpawn]) {
	case 0: spawn = ""GREEN"Вокзал";
	case 1: spawn = ""GREEN"Дом/квартира";
	case 2: spawn = ""GREEN"Организация";
	case 3: spawn = ""GREEN"Дом семьи";
	}
	
	format:string(""W"Наименование\t"W"Статус\n\
		Чат организации\t%s\n\
		Эфиры\t%s\nСтиль разговора\t%s\nСтиль боя\t%s\nПоказывать голод\t%s\nПоказывать кейс\t%s\n\
		Дамаг информер\t%s\nДействия Администрации\t%s\nМесто спавна\t%s",
	PI[playerid][pSettings][1] ? (""GREEN"[Включено]") : ("{C34D45}[Выключено]"),
	radio,talk,style,PI[playerid][pSettings][6] ? (""GREEN"[Включено]") : ("{C34D45}[Выключено]"),PI[playerid][pSettings][7] ? (""GREEN"[Включено]") : ("{C34D45}[Выключено]"),PI[playerid][pSettings][10] ? (""GREEN"[Включено]") : ("{C34D45}[Выключено]"),
	PI[playerid][pSettings][8] ? (""GREEN"[Включено]") : ("{C34D45}[Выключено]"),spawn);
	D(playerid,D_MENU_SETTING,DSTH,""P"Настройки",string,"Выбрать","Назад");
	return 1;
}
CB: OnPlayerAttachTrailer(playerid, vehicleid, trailerid) {
	if(trailerid != Trailer_job[playerid] && PI[playerid][pJob] != 3 && (trailerid != TK_Trailer[playerid] && (PI[playerid][bizz_work] == 61))) {
		SendClientMessage(playerid,COLOR_GREY,"Данный прицеп принадлежит другому игроку");
		return DetachTrailerFromVehicle(vehicleid);
	}
	else if(trailerid == Trailer_job[playerid]) SetPVarInt(playerid,"attach_trailer",1);
	else if(trailerid == TK_Trailer[playerid]) TI[playerid][tTrucker][0] = 0;
	return 1;
}

CB: OnPlayerDeattachTrailer(playerid,vehicleid,trailerid) {
	if(trailerid == Trailer_job[playerid]) {
		DeletePVar(playerid,"attach_trailer");
		PlayerTrailerTime[playerid] = 30;
	}
	else if(trailerid == TK_Trailer[playerid]) {
		TI[playerid][tTrucker][0] = 120;
	}
	return 1;
}
CB: UnTazer(playerid) {
	if(!IsPlayerConnected(playerid)) return 1;
	ClearAnimations(playerid);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0, 0);
	TogglePlayerControllable(playerid,true);
	TI[playerid][tTazer] = false;
	return 1;
}
stock IsPlayerStream(Float:radi, playerid, targetid) {
	if(!IsPlayerConnected(targetid)) return 0;
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(targetid,X,Y,Z);
	return PlayerToPoint(radi,playerid,X,Y,Z);
}
stock IntToStr(value) {
	new tmp[30];
	valstr(tmp, value);
	return tmp;
}
stock GoPlayerAnimation(playerid, Float:X, Float:Y, Float:Z) {
	if(IsPlayerInAnyVehicle(playerid)) return false;
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "IDLE_STANCE", 4.1, 0, 1, 1, 0, 0, 1);
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "WALK_PLAYER", 4.1, 0, 1, 1, 0, 0, 1);
	else if(IsPlayerInRangeOfPoint(playerid, 7.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "RUN_GANG1", 4.1, 0, 1, 1, 0, 0, 1);
	ApplyAnimation(playerid, "PED", "SPRINT_PANIC", 4.1, 0, 1, 1, 0, 0, 1);
	return true;
}
CB: alogin(playerid,const giveplayerid[]) {
	new inputtext[16];
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	GetPVarString(playerid,"inputtext",inputtext,15);
	new query[160];
	mysql_format(connects, query, sizeof(query),"UPDATE `admin` SET `password` = MD5('%s') WHERE `name` = '%s'",inputtext, player_name[playerid]);
	mysql_pquery(connects,query);
	SendClientMessage(playerid, CGOLD, "Добро пожаловать в команду администрации World RP!");
	cache_get_value_name_int(0,"rank",PI[playerid][pAdmin]);
	cache_get_value_name_int(0,"kick",gAdmin[playerid][0]);
	cache_get_value_name_int(0,"ban",gAdmin[playerid][1]);
	cache_get_value_name_int(0,"mute",gAdmin[playerid][2]);
	cache_get_value_name_int(0,"pm",gAdmin[playerid][3]);
	cache_get_value_name_int(0,"warn",gAdmin[playerid][4]);
	cache_get_value_name_int(0,"jail",gAdmin[playerid][5]);
	cache_get_value_name_int(0,"vig",gAdmin[playerid][6]);
	cache_get_value_name_int(0,"blockadmin",gAdmin[playerid][7]);
	
	switch (weekcurrent)
	{
	case 0: cache_get_value_int(0, "online_monday", gAdminTime[playerid]);
	case 1: cache_get_value_int(0, "online_tuesday", gAdminTime[playerid]);
	case 2: cache_get_value_int(0, "online_wednesday", gAdminTime[playerid]);
	case 3: cache_get_value_int(0, "online_thursday", gAdminTime[playerid]);
	case 4: cache_get_value_int(0, "online_friday", gAdminTime[playerid]);
	case 5: cache_get_value_int(0, "online_saturday", gAdminTime[playerid]);
	case 6: cache_get_value_int(0, "online_sunday", gAdminTime[playerid]);
	}
	if(gAdmin[playerid][7] == 1) {
		PI[playerid][pLeader] = 0;
		PI[playerid][pMember] = 0;
		PI[playerid][pRank] = 0;
		UpdatePlayerData(playerid,"pMember",PI[playerid][pMember]);
		UpdatePlayerData(playerid,"pLeader",PI[playerid][pLeader]);
		UpdatePlayerData(playerid,"pRank",PI[playerid][pRank]);
		SendClientMessage(playerid,COLOR_REDD,"Вы заморожены как администратор");
		return 1;
	}
	dostup[playerid] = 1; 
	ACLoad(playerid);
	static const f_str[] = "[A] Младший модератор %s авторизовался в админ панели";
	new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
	format(str, sizeof(str), f_str,player_name[playerid]), SendAdminMessage(0xfF0CA31ff, str);
	query = "";
	mysql_format(connects, query, sizeof(query),"UPDATE `admin` SET online_status = 1 WHERE `Name` = '%s' LIMIT 1",player_name[playerid]);
	mysql_pquery(connects, query, "", "");
	return 1;
}
CB: password_adm(playerid,const inputtext[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) {
		SendClientMessage(playerid, COLOR_GREY, "Пароль введен неверно");
		SetPVarInt(playerid, "Popytki", GetPVarInt(playerid, "Popytki") + 1);
		if(GetPVarInt(playerid, "Popytki") > 4) {
			DeletePVar(playerid, "Popytki");
			gAdmin[playerid][7] = 1;
			KickEx(playerid);
		}
	}
	else {
		cache_get_value_name_int(0,"rank",PI[playerid][pAdmin]);
		cache_get_value_name_int(0,"kick",gAdmin[playerid][0]);
		cache_get_value_name_int(0,"ban",gAdmin[playerid][1]);
		cache_get_value_name_int(0,"mute",gAdmin[playerid][2]);
		cache_get_value_name_int(0,"pm",gAdmin[playerid][3]);
		cache_get_value_name_int(0,"warn",gAdmin[playerid][4]);
		cache_get_value_name_int(0,"jail",gAdmin[playerid][5]);
		cache_get_value_name_int(0,"vig",gAdmin[playerid][6]);
		cache_get_value_name_int(0,"blockadmin",gAdmin[playerid][7]);
		switch (weekcurrent)
		{
		case 0: cache_get_value_int(0, "online_monday", gAdminTime[playerid]);
		case 1: cache_get_value_int(0, "online_tuesday", gAdminTime[playerid]);
		case 2: cache_get_value_int(0, "online_wednesday", gAdminTime[playerid]);
		case 3: cache_get_value_int(0, "online_thursday", gAdminTime[playerid]);
		case 4: cache_get_value_int(0, "online_friday", gAdminTime[playerid]);
		case 5: cache_get_value_int(0, "online_saturday", gAdminTime[playerid]);
		case 6: cache_get_value_int(0, "online_sunday", gAdminTime[playerid]);
		}
		if(gAdmin[playerid][7] == 1) {
			PI[playerid][pLeader] = 0;
			PI[playerid][pMember] = 0;
			PI[playerid][pRank] = 0;
			UpdatePlayerData(playerid,"pMember",PI[playerid][pMember]);
			UpdatePlayerData(playerid,"pLeader",PI[playerid][pLeader]);
			UpdatePlayerData(playerid,"pRank",PI[playerid][pRank]);
			SendClientMessage(playerid,COLOR_REDD,"Вы заморожены как администратор");
			return 1;
		}
		dostup[playerid] = 1;
		ACLoad(playerid);

		for(new i;i<10;i++) {
			if(ChetInfo[i][cheatid1]==playerid) {
				TextDrawSetString(CheatText[i], "-");
				Cheat1 ++;
				if(Cheat1 > 9) Cheat1 = 0;
			}
		}

		new Admin[32];
		switch(PI[playerid][pAdmin]) {
		case 1: Admin = "Младший модератор";
		case 2: Admin = "Модератор";
		case 3: Admin = "Старший модератор";
		case 4: Admin = "Администратор";
		case 5: Admin = "Главный администратор";
		case 6: Admin = "Спец. администратор";
		case 7: Admin = "Основатель";
		}
		static const f_str[] = "[A] %s %s авторизовался в админ панели";
		new str[sizeof(f_str) +1 + (-2 + 32) + (-2 + MAX_PLAYER_NAME)];

		format(str, sizeof(str), f_str,Admin,player_name[playerid],Admin), SendAdminMessage(0xfF0CA31ff, str);
		if(!GetString(player_ip_check[playerid],player_ip[playerid])) {
			new str_adm[128];
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(!PI[i][pAdmin] || !dostup[i]) continue;
				format(str_adm, sizeof(str_adm), "[! ADM !] У %s различается IP (%s) с IP последнего входа (%s)", player_name[playerid],player_ip[playerid],PI[playerid][pIpReg]);
				SendClientMessage(i, PP, str_adm);
			}
		}
		new qeury[128];
		format(qeury, sizeof(qeury), "UPDATE `admin` SET `online_connection` = NOW(), online_status = 1 WHERE `Name` = '%s' LIMIT 1", player_name[playerid]);
		mysql_pquery(connects, qeury, "", "");
	}
	return 1;
}

CB: alogin1(playerid) {
	new passwords[32];
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	cache_get_value(0, "password", passwords, 31);
	if(!strcmp(passwords,"qwerty",true)) {
		SetPVarInt(playerid,"aLogin",1);
		D(playerid, D_ALOGIN, DSP, ""P"Авторизация", ""W"Для доступа к админ привелегиям, Вам необходимо авторизоваться:\n\t"P"Придумайте пароль от 6 до 15 символов\n\n"NO"ЕСЛИ ВЫ ЗАБЫЛИ ПАРОЛЬ, НИКТО ВАМ ВОССТАНАВЛИВАТЬ ЕГО НЕ БУДЕТ", "Вход", "Отмена");
	}
	else {
		SetPVarInt(playerid,"aLogin",0);
		D(playerid, D_ALOGIN, DSP, ""P"Авторизация", ""W"Для доступа к админ привелегиям, Вам необходимо авторизоваться:", "Вход", "Отмена");
	}
	return 1;
}
CB: Moderator(playerid,const giveplayerid[],level) {
	new rows;
	cache_get_row_count(rows);
	new string[128];
	if(rows != 0) {
		new load_level;
		cache_get_value_int(0,"rank",load_level);
		if(load_level != 0) {
			if(level == 0) {
				MYSQL_GLOBAL[0] = EOS;
				mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),"DELETE FROM `admin` WHERE `Name`='%s'", giveplayerid);
				mysql_pquery(connects, MYSQL_GLOBAL, "", "");
				
				format(string, sizeof(string), "%s успешно удален из списка модераторов", giveplayerid);
				SendOk(playerid, string);
			}
			else {
				MYSQL_GLOBAL[0] = EOS;
				mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),"UPDATE `admin` SET  `rank` = '%d' WHERE `Name` = '%s' LIMIT 1", level,giveplayerid);
				mysql_pquery(connects, MYSQL_GLOBAL, "", "");
				format(string, sizeof(string), "Уровень администрирования у %s изменен на %d", giveplayerid, level);
				SendOk(playerid, string);
			}
		}
	}
	else {
		if(level == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не администратор.");
		
		MYSQL_GLOBAL[0] = EOS;
		mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),"INSERT INTO `admin` (`Name`, `rank`, `online_connection`,`CheckName`, `date_start`) VALUES ('%s', %d, NOW(),'%s', NOW())", giveplayerid,level, player_name[playerid]);
		mysql_pquery(connects, MYSQL_GLOBAL, "", "");
		
		format(string, sizeof(string), "%s успешно добавлен в список модераторов. Уровень полномочий %d", giveplayerid, level);
		SendOk(playerid,string);
	}
	new query[200];
	mysql_format(connects, query, sizeof(query), "UPDATE `accounts` SET `pAdmin` = '%d' WHERE `Name` = '%s' LIMIT 1",level, giveplayerid);
	mysql_tquery(connects, query,"","");
	return 1;
}
stock exit_garage(vehicleid, worldid, bool:tune = false) {
	new id;
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPlayerVehicleID(i) == vehicleid) {
			TI[i][tVirtualWorld] = id;
			TI[i][tInterior] = worldid;
			SetPlayerInterior(i,worldid);
			if(tune) id = i, SetPlayerVirtualWorld(i,id);
			else SetPlayerVirtualWorld(i,worldid);
			SetPlayerTime(i, tmphour, tmpminute);
		}
	}
	LinkVehicleToInterior(vehicleid, worldid);
	if(tune) SetVehicleVirtualWorld(vehicleid, id);
	else SetVehicleVirtualWorld(vehicleid, worldid);
	return 1;
}
stock enter_garage(i,vehicleid, worldid,house) {
	TI[i][tVirtualWorld] = house;
	TI[i][tInterior] = worldid;
	SetPlayerInterior(i,worldid);
	TI[i][tSelectHouse] = house-1;
	SetPlayerVirtualWorld(i,house);
	LinkVehicleToInterior(vehicleid, worldid);
	SetVehicleVirtualWorld(vehicleid, house);
	SetPlayerTime(i, tmphour, tmpminute);
	return 1;
}
stock IsAIP(const text[]) {
	new numbers;
	for(new i = 0;i < strlen(text); i++) if('0' <= text[i] <= '9') if(!('0' <= text[i+1] <= '9')) numbers ++;
	if(numbers >= 4) return true;
	return false;
}
#include "../sourse/other/typelog.inc"

CB: all_referals(playerid,const names[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Рефералы не найдены");
	new level,stats[3];
	for(new i = 0; i < rows; i++) {
		cache_get_value_int(i,"pLevel",level);
		if(level == 2) stats[0] ++;
		if(level == 3) stats[1] ++;
		if(level >= 4) stats[2] ++;
	}
	static const f_str[] = ""W"Ник: "YELLOW"%s\n\n\
							"W"Игроки достигшие 2 лвл: "ORANGE"[%d]\n\
							"W"Игроки достигшие 3 лвл: "ORANGE"[%d]\n\
							"W"Игроки достигшие 4+ лвл: "ORANGE"[%d]\n\n\
							"W"Всего игроков приглашено: "P"[%d]";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4) + (-2 + 4) + (-2 + 4) + (-2 + 4)];
	format(string,sizeof(string),f_str,names,stats[0],stats[1],stats[2],rows);
	D(playerid,DIALOG_NONE,DSM, ""P"Рефералы",string,"Закрыть","");
	return 1 ;
}
CB: AGetID(playerid, id) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
	new ids,names[MAX_PLAYER_NAME+1];
	cache_get_value_int(0,"pID",ids);
	cache_get_value(0,"Name",names,MAX_PLAYER_NAME);
	new string[256];
	format(string,sizeof(string),""W"%sНомер аккаунта:      \t%i\n",string,id);
	format(string,sizeof(string),"%sИмя:      \t\t%s\n\n",string,names);
	D(playerid,DIALOG_NONE,DSM, ""P"GETID",string,"Закрыть","");
	return 1;
}
CB: AGetStats(playerid, const name[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
	new level,awarn,money,moneyb,id;
	new leader,member,rank,house;
	new biz,regip[17],onlin[33],drug[25];
	new ip[17];
	cache_get_value_int(0,"pID",id);
	cache_get_value_int(0,"pLevel",level);
	cache_get_value_int(0,"pCash",money);
	cache_get_value_int(0,"pBank",moneyb);
	cache_get_value_int(0,"pLeader",leader);
	cache_get_value_int(0,"pMember",member);
	cache_get_value_int(0,"pRank",rank);
	cache_get_value_int(0,"bussiness",biz);
	cache_get_value_int(0,"house",house);
	cache_get_value(0,"pIpReg",regip,16);
	cache_get_value(0,"pvIp",ip,16);
	cache_get_value(0,"pOnline",onlin,32);
	cache_get_value(0,"pDrug",drug,24);
	new string[1024];
	format(string,sizeof(string),""W"%sНомер аккаунта:      \t%i\n",string,id);
	format(string,sizeof(string),"%sИмя:      \t\t%s\n\n",string,name);
	format(string,sizeof(string),"%sУровень:      \t\t%d\n",string,level);
	format(string,sizeof(string),"%sВарны:      \t\t%d\n",string,awarn);
	format(string,sizeof(string),"%sДеньги(нал):      \t%d\n",string,money);
	format(string,sizeof(string),"%sДеньги(банк):      \t%d\n",string,moneyb);
	format(string,sizeof(string),"%sЛидер:      \t\t%d\n",string,leader);
	format(string,sizeof(string),"%sФракция:      \t\t%d\n",string,member);
	format(string,sizeof(string),"%sРанг:      \t\t%d\n",string,rank);
	if(biz != 0) format(string,sizeof(string),"%sБизнес:          \t\t%d(%s)\n",string,biz,gBusiness[biz-1][bizzName]);
	else format(string,sizeof(string),"%sБизнес:          \t\t%d(Отсутствует)\n",string,biz);
	format(string,sizeof(string),"%sДом:          \t\t%d\n",string,house);
	format(string,sizeof(string),"%sR-IP:      \t\t%s\n",string,regip);
	format(string,sizeof(string),"%sL-IP:      \t\t%s\n",string,ip);
	format(string,sizeof(string),"%sOnline:\t\t\t%s\n",string,onlin);
	format(string,sizeof(string),"%sУказывал при регистрации:\t\t\t%s\n\n",string,drug);
	if(!GetString(regip,ip)) format(string,sizeof(string),"%s"NO" IP регистрации и IP последнего входа разные\n",string);
	D(playerid,DIALOG_NONE,DSM, ""P"OFFSTATS",string,"Закрыть","");
	return 1;
}
CB: get_info_player(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
	new name[MAX_PLAYER_NAME];
	new ipreg[17];
	new getonip[17];
	new datareg[32+1];

	cache_get_value(0,"Name",name, MAX_PLAYER_NAME);
	cache_get_value(0,"pIpReg",ipreg, 16);
	cache_get_value(0,"pvIp",getonip, 16);
	cache_get_value(0,"pDataReg",datareg, 32+1);

	new id,cash,level,donate;
	cache_get_value_int(0,"pID",id);
	cache_get_value_int(0,"pCash",cash);
	cache_get_value_int(0,"pLevel",level);
	cache_get_value_int(0,"donatemoney",donate);

	new string[512];
	format(string, sizeof(string), ""W"Номер аккаунта: "P"%d\nДеньги наличными: "GREEN"$%d\nУровень: "P"%d\nREG-IP: "P"%s\nLAST-IP: "P"%s\n"W"Донат: "P"%d\nЗарегистрирован: "P"%s",
	id,cash,level,ipreg,getonip,donate,datareg);
	D(playerid,DIALOG_NONE,DSM,name,string,"Закрыть","");
	return 1;
}
stock string_replace(text[], const find[2], replace, pos = 0) {
	while ((pos = strfind(text, find, false, pos)) != -1) {
		text[pos] = replace;
	}
}
CB: warninfo(playerid) {
	new rows, string[295], time[24], anick[24], reason[34], query[34];
	cache_get_row_count(rows);
	format(string, sizeof(string), "{ffcf00}Дата и время\t\t Кем выдан\tПричина"W"\n\n");
	for(new i = 0; i < rows; i++) {
		cache_get_value_name(i, "w_date", query); strmid(time, query, 0, strlen(query), 24);
		cache_get_value_name(i, "w_admin_name", query); strmid(anick, query, 0, strlen(query), MAX_PLAYER_NAME);
		cache_get_value_name(i, "w_reason", query); strmid(reason, query, 0, strlen(query), 34);
		format(string, sizeof(string), "%s%s\t%s\t%s\n",string, time, anick, reason);
	}
	D(playerid, DIALOG_NONE, DSM, ""P"Предупреждения", string, "Закрыть", "");
	return 1;
}
stock ether_closed(playerid) {
	for(new i; i<3; i++) {
		if(calls_news[i] == playerid && calls_ether[i] != INVALID_PLAYER_ID) {
			SendOk(calls_ether[i], "Ведущий отключил приём звонков");
			PhoneStatus(calls_ether[i],false);
			calls_ether[i] = INVALID_PLAYER_ID;
			calls_news[i] = INVALID_PLAYER_ID;
		}
	}
	switch(PI[playerid][pMember]) {
	case fLSNEWS: {
			if(calls_news[0] == playerid) {
				calls_news[0] = INVALID_PLAYER_ID;
				new string[128];
				format(string,sizeof(string),"%s завершил(а) приём звонков",player_name[playerid]);
				SendFamilyMessage(PI[playerid][pMember], 0x139BECFF, string);
			}
		}
	case fSFNEWS: {
			if(calls_news[1] == playerid) {
				calls_news[1] = INVALID_PLAYER_ID;
				new string[128];
				format(string,sizeof(string),"%s завершил(а) приём звонков",player_name[playerid]);
				SendFamilyMessage(PI[playerid][pMember], 0x139BECFF, string);
			}
		}
	case fLVNEWS: {
			if(calls_news[2] == playerid) {
				calls_news[2] = INVALID_PLAYER_ID;
				new string[128];
				format(string,sizeof(string),"%s завершил(а) приём звонков",player_name[playerid]);
				SendFamilyMessage(PI[playerid][pMember], 0x139BECFF, string);
			}
		}
	}
}
CB: ShowNumber(playerid,str[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Не найдено");
	new number[11],string[156],query[128], name_car[36];
	cache_get_value_name(0,"number",number,10);
	cache_get_value_name(0,"name",name_car,36);
	if(!strcmp(number,str,true)) cache_get_value_name(0,"owner",query,MAX_PLAYER_NAME);
	format(string,sizeof(string),"{FFFFFF}Гос.номер: {FFFF00}%s{FFFFFF}\nХозяин: {FFFF00}%s{FFFFFF}",str,name_car);
	D(playerid,DIALOG_NONE,DSM, ""P"Запрос",string,"Закрыть","");
	return 1;
}
CMD:robload(playerid)
{
	if(GetPlayerVehicleID(playerid) != rob_veh[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не в фургоне");
	new Float:angle,Float:distance,Float:vehx, Float:vehy, Float:vehz;
	GetVehicleModelInfo(GetVehicleModel(rob_veh[playerid]), 1, vehx, distance, vehz);
	distance = distance/2 + 0.1;
	GetVehiclePos(rob_veh[playerid], vehx, vehy, vehz);
	GetVehicleZAngle(rob_veh[playerid], angle);
	vehx += (distance * floatsin(-angle+180, degrees));
	vehy += (distance * floatcos(-angle+180, degrees));
	new string[64];
	format(string,sizeof(string),"Техника: "O"%i ед/6 ед",VG[rob_veh[playerid]][vgAmount][0]);
	VG[rob_veh[playerid]][vgText] = CreateDynamic3DTextLabel(string,COLOR_WHITE,vehx, vehy, vehz+0.5,20.0);
	VG[rob_veh[playerid]][vgPickup] = CreateDynamicPickup(19133,1,vehx, vehy, vehz-0.5);
	VG[rob_veh[playerid]][vgArea] = CreateDynamicSphere(vehx, vehy, vehz,1.0);
	VG[rob_veh[playerid]][vgRobHouse] = true;
	RemovePlayerFromVehicleAC(playerid);
	SendUse(playerid,"Загрузка техники начата");
	return true;
}
CMD:robhouse(playerid) {
	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не бандит");
	new idx = -1;
	for(new i = 0; i < gHouseCount; i ++) {
		if(IsPlayerInRangeOfPoint(playerid, 5.0, gHouses[i][houseX], gHouses[i][houseY], gHouses[i][houseZ])) {
			idx = i;
			break;
		}
	}
	if(idx == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с домом");
	if(VG[rob_veh[playerid]][vgRobHouse] == false) return SendClientMessage(playerid, COLOR_GREY, "Вы не начинали загрузку автомобиля");
	IDGZ[playerid] = GetIDGZ(playerid);
	if(IDGZ[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Грабить дом можно только на территории гетто");
	if(gHouses[idx][houseOwnerID] == PI[playerid][pID]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете ограбить свой дом");
	if(!gHouses[idx][houseOwnerID]) return SendClientMessage(playerid, COLOR_GREY, "У этого дома нет владельца");
	if(gHouses[idx][houseRob] > 0) return SendClientMessage(playerid, COLOR_GREY, "Этот дом уже грабили в этом часу");
	if(!GetInvent(playerid, 122)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет отмычек. Купить их можно в 24-7");
	gHouses[idx][houseRob] = playerid;
	JobTempProcess[playerid] = 9;
	TI[playerid][tProcess][0] = 0;
	TI[playerid][tProcess][1] = 10;
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
	for(new YN = 0;YN < 3;YN++) {
		TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
		if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
	}
	RandomYareNforJOBS(playerid);
	return 1;
}
CMD:getgun(playerid,params[]) {
	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не бандит");
	switch(PI[playerid][pMember]) {
	case fBALLAS: if(!IsPlayerInRangeOfPoint(playerid,30.0,2646.9949,-2020.8334,13.5469) && GetPlayerVirtualWorld(playerid) != 52) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться в доме/на респе Ballas");
	case fVAGOS: if(!IsPlayerInRangeOfPoint(playerid,30.0,2756.3188,-1180.4659,69.3984) && GetPlayerVirtualWorld(playerid) != 53) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться в доме/на респе Vagos");
	case fGROVE: if(!IsPlayerInRangeOfPoint(playerid,30.0,2495.8179,-1679.6707,13.3391) && GetPlayerVirtualWorld(playerid) != 54) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться в доме/на респе Grove");
	case fAZTEC: if(!IsPlayerInRangeOfPoint(playerid,30.0,1677.8265,-2117.4241,13.5469) && GetPlayerVirtualWorld(playerid) != 55) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться в доме/на респе Aztec");
	case fRIFA: if(!IsPlayerInRangeOfPoint(playerid,30.0,2181.7556,-1798.8839,13.3646) && GetPlayerVirtualWorld(playerid) != 56) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться в доме/на респе Rifa");
	}
	if(!FI[PI[playerid][pMember]][fSklad]) return SendClientMessage(playerid, COLOR_GREY, "Лидер вашей банды закрыл доступ к складу");
	if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fUseStock]) {
		new str[128];
		format(str,sizeof(str),"Склад доступен с %i ранга", FI[PI[playerid][pMember]][fUseStock]);
		SendClientMessage(playerid, COLOR_GREY,str);
		return 1;
	}
	if(sscanf(params,"dd",params[0],params[1])) {
		SendClientMessage(playerid, COLOR_GREY, "0 - SD-Pistol | 1 - Desert Eagle | 2 - MP5 | 3 - Shotgun | 4 - M4 | 5 - AK-47 | 6 - Rifle");
		return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /getgun [ID оружия] [патроны]");
	}
	new gun;
	switch(params[0]) {
	case 0: gun = 23;
	case 1: gun = 24;
	case 2: gun = 29;
	case 3: gun = 25;
	case 4: gun = 31;
	case 5: gun = 30;
	case 6: gun = 33;
	default: return 1;
	}
	SetPVarInt(playerid,"noneedgun",0);
	for(new i;i<12;i++) {
		new weapid,ammot;
		GetPlayerWeaponData(playerid,i,weapid,ammot);
		if(weapid == gun) {
			SetPVarInt(playerid,"noneedgun",1); 
			break;
		}
	}
	if(FI[PI[playerid][pMember]][fMats]<(params[1]*MakeGunData[params[0]][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно материалов");
	if(FI[PI[playerid][pMember]][fMats]<params[1] && GetPVarInt(playerid,"noneedgun")) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно материалов");
	if(params[1] < 1 || params[1] > 200) return SendClientMessage(playerid, COLOR_GREY, "Нельзя брать меньше 1 и больше 200 пт");
	MeAction(playerid,"взял(а) оружие со склада");
	if(!GetPVarInt(playerid,"noneedgun")) FI[PI[playerid][pMember]][fMats] -= MakeGunData[params[0]][mgunamount];
	SetPVarInt(playerid,"noneedgun",0);

	FI[PI[playerid][pMember]][fMats] -= params[1];
	UpdateFraction(PI[playerid][pMember],"Mats",FI[PI[playerid][pMember]][fMats]);

	GivePlayerWeapon(playerid,MakeGunData[params[0]][mgunid],params[1]);
	static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
	InLoadFrac[PI[playerid][pMember]] = false;
	format(string,sizeof(string),f_str,player_name[playerid],playerid,params[1]);
	SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
	return 1;
}
stock ghetto_war()
{
	for(new i = 0; i < TOTALGZ; i++)
	{
		if(!GZInfo[i][ZoneOnBattle]) continue;
		if(GZInfo[i][gTime] >= 1) GZInfo[i][gTime] --;
		foreach(new m: Player)
		{
			if(!TI[m][tLogin] || !IsAGang(m)) continue;
			if(GZInfo[i][gNapad] == PI[m][pMember] || GZInfo[i][gFrakVlad] == PI[m][pMember])
			{
				if(!GetPVarInt(m, "ppkz"))
				{
					CreatePlayerCapture(m);
					
					PlayerTextDrawColor(m, CaptPlayer[m][0], gang_color(GZInfo[i][gNapad]));
					PlayerTextDrawColor(m, CaptPlayer[m][1], gang_color(GZInfo[i][gFrakVlad]));

					GangZoneFlashForPlayer(m, GZInfo[i][gID], GetGangColor(GZInfo[i][gNapad]));

					new string[128];

					format(string,sizeof(string),"%s",gang_name(GZInfo[i][gNapad]));
					PlayerTextDrawSetString(m, CaptPlayer[m][0],string);

					
					TI[m][tAttack] = GZInfo[i][gNapad];
					TI[m][tDefend] = GZInfo[i][gFrakVlad];

					format(string,sizeof(string),"%s",gang_name(GZInfo[i][gFrakVlad]));
					PlayerTextDrawSetString(m, CaptPlayer[m][1],string);

					PlayerTextDrawShow(m, CaptPlayer[m][1]);

					SetPVarInt(m, "ppkz", true);
                    CreatePlayerCapture(m);
					for(new z = 0;z < 34;z++) TextDrawShowForPlayer(m, Capture[z]);
					for(new z = 0;z < 5;z++)  PlayerTextDrawShow(m, CaptPlayer[m][z]);
				}
				else
				{
					new string[128];
					format(string,sizeof(string),"%s",Convert(GZInfo[i][gTime]));
					PlayerTextDrawSetString(m, CaptPlayer[m][2], string);
					PlayerTextDrawShow(m, CaptPlayer[m][2]);

					new str[10];
					format(str,sizeof(str),"%d",CountOnZone[GZInfo[i][gFrakVlad]]);
					PlayerTextDrawSetString(m, CaptPlayer[m][3], str);
					PlayerTextDrawShow(m, CaptPlayer[m][4]);

					format(str,sizeof(str),"%d",CountOnZone[GZInfo[i][gNapad]]);
					PlayerTextDrawSetString(m, CaptPlayer[m][4], str);
					PlayerTextDrawShow(m, CaptPlayer[m][3]);
					
					PlayerTextDrawColor(m, CaptPlayer[m][0], gang_color(GZInfo[i][gNapad]));
					PlayerTextDrawColor(m, CaptPlayer[m][1], gang_color(GZInfo[i][gFrakVlad]));
					
					format(string,sizeof(string),"%s",gang_name(GZInfo[i][gNapad]));
					PlayerTextDrawSetString(m, CaptPlayer[m][0],string);

					format(string,sizeof(string),"%s",gang_name(GZInfo[i][gFrakVlad]));
					PlayerTextDrawSetString(m, CaptPlayer[m][1],string);
					PlayerTextDrawShow(m, CaptPlayer[m][1]);
				}
			}
		}
		if(GZInfo[i][gTime] < 1)
		{
			new strlolka[112];
			new check_zone[2];
			check_zone[0] = 0;
			check_zone[1] = 0;
			foreach(new x:Player)
			{
				if(!TI[x][tLogin] || !IsAGang(x)) continue;
				if(GZInfo[i][gNapad] == PI[x][pMember] || GZInfo[i][gFrakVlad] == PI[x][pMember]) 
				{
					for(new j = 0; j < 5; j++) SendDeathMessageToPlayer(x, MAX_PLAYERS, MAX_PLAYERS, EOF);
					if (IsAGang(x) && GetPVarInt(x, "ppkz")) EndCapt(x);
					if(GhettoInfo[x][ghettoKills])
					{
						new Float:K_D = GhettoInfo[x][ghettoDeaths];
						if (K_D < 1.0) K_D = 1.0;
						new cstat[250];
						format(cstat,250,""ORANGE"[Статистика капта]"W" Kills: %i | Death: %i | K/D: %.1f",
						GhettoInfo[x][ghettoKills],GhettoInfo[x][ghettoDeaths], Float:(GhettoInfo[x][ghettoKills] / K_D));
						SendOk(x, cstat);

						GhettoInfo[x][ghettoKills] = 0;
						GhettoInfo[x][ghettoDeaths] = 0;
					}
					TI[x][tAttack] = 0;
					TI[x][tDefend] = 0;
				}
			}
			if(CountOnZone[GZInfo[i][gNapad]] == CountOnZone[GZInfo[i][gFrakVlad]] || CountOnZone[GZInfo[i][gFrakVlad]] > CountOnZone[GZInfo[i][gNapad]]) {
				format(strlolka,112,"%s отстояли свою территорию",GFrac(GZInfo[i][gFrakVlad]));
				if(i == 13) black_prods[0] = GZInfo[i][gFrakVlad];
			}
			else
			{
				format(strlolka,112,"%s захватили территорию у банды %s",GFrac(GZInfo[i][gNapad]),GFrac(GZInfo[i][gFrakVlad]));
				VladGzone[GZInfo[i][gFrakVlad]]--;
				VladGzone[GZInfo[i][gNapad]]++;
				GZInfo[i][gFrakVlad] = GZInfo[i][gNapad];
				add_gang_points(GZInfo[i][gNapad],5);
				if(i == 13) black_prods[0] = GZInfo[i][gNapad];
			}
			SendBand(COLOR_ORANGE,strlolka);
			if(i == 13)
			{
				black_prods[9] = unix + 60*60*72;
				SaveMarket();
				check_terrs();
			}
			CountOnZone[GZInfo[i][gNapad]] = 0;
			CountOnZone[GZInfo[i][gFrakVlad]] = 0;
			
			GZInfo[i][gTime] = 0;
			GZInfo[i][ZoneOnBattle] = 0;
			GangZoneStopFlashForAll(GZInfo[i][gID]);
			GangZoneHideForAll(GZInfo[i][gID]);
			GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
			SaveGZ(i);
			break;
		}
	}
	return true;
}
stock UpdateMorozed() {
	new quer_moroz[350];
	mysql_format(connects, quer_moroz, sizeof(quer_moroz), "UPDATE `fracmorozed` SET `MOROZ_BALLAS`='%d',`MOROZ_VAGOS`='%d',`MOROZ_GROVE`='%d',`MOROZ_RIFA`='%d',`MOROZ_AZTECAS`='%d',`MOROZ_LCN`='%d',`MOROZ_YAKUZA`='%d',`MOROZ_RM`='%d'",fracmoroz[0],fracmoroz[1],fracmoroz[2],fracmoroz[3],fracmoroz[4],fracmoroz[5],fracmoroz[6],fracmoroz[7]);
	mysql_tquery(connects,quer_moroz,"","");
	return 1;
}
stock SetPosInFrontOfPlayer(playerid,giveplayerid,Float:distance) {
	new Float:x,Float:y,Float:z,Float:a;
	GetPlayerPos(playerid, x, y,z);
	GetPlayerFacingAngle(playerid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	SetPlayerPosAC(giveplayerid,x,y,z,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
	SetPlayerFacingAngle(giveplayerid,a);
}
stock IsLeapYear(year) return (year % 4 == 0);
stock TimestampToDate(Timestamp, &year, &month, &day, &hour, &minute, &second, HourGMT, MinuteGMT = 0) {
	new MonthTimes[12][4] = {
		{ 31, 31, 2678400, 2678400 },
		{ 28, 29, 2419200, 2505600 },
		{ 31, 31, 2678400, 2678400 },
		{ 30, 30, 2592000, 2592000 },
		{ 31, 31, 2678400, 2678400 },
		{ 30, 30, 2592000, 2592000 },
		{ 31, 31, 2678400, 2678400 },
		{ 31, 31, 2678400, 2678400 },
		{ 30, 30, 2592000, 2592000 },
		{ 31, 31, 2678400, 2678400 },
		{ 30, 30, 2592000, 2592000 },
		{ 31, 31, 2678400, 2678400 }
	};
	new tmp = 2;
	year = 1970;
	month = 1;
	Timestamp -= 172800;

	new log_amount ;
	for(;;) {
		if(log_amount>37) {
			printf ( "[TimestampToDate] %d iteration.", log_amount ) ;
		}
		log_amount ++ ;
		if(Timestamp >= 31536000) {
			year ++;
			Timestamp -= 31536000;
			tmp ++;
			if(tmp == 4) {
				if(Timestamp >= 31622400) {
					tmp = 0;
					year ++;
					Timestamp -= 31622400;
				}
				else break;
			}
		}
		else break;
	}
	for(new i = 0; i < 11; i ++) {
		if(Timestamp >= MonthTimes[i][2 + IsLeapYear(year)]) {
			month ++;
			Timestamp -= MonthTimes[i][2 + IsLeapYear(year)];
		}
		else break;
	}
	day = 1 + (Timestamp / 86400);
	Timestamp %= 86400;
	hour = HourGMT + (Timestamp / 3600);
	Timestamp %= 3600;
	minute = MinuteGMT + (Timestamp / 60);
	second = (Timestamp % 60);
	if(minute > 59) {
		minute = 0;
		hour ++;
	}
	if(hour > 23) {
		hour -= 24;
		day ++;
	}
	if(day > MonthTimes[month][IsLeapYear(year)]) {
		day = 1;
		month ++;
	}
	if(month > 12) {
		month = 1;
		year ++;
	}
	return 1;
}
stock UpdateLicenses(playerid) {
	new query[156];
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `licenses` = '%d,%d,%d,%d' WHERE `pID` = '%d'", lic[playerid][0],lic[playerid][1],lic[playerid][2],lic[playerid][3],PI[playerid][pID]);
	mysql_pquery(connects, query, "", "");
	return 1;
}
stock GetTickets(playerid) {
	TOTALTICKETS[playerid] = 0;
	new query[256];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `"TABLE_TICKETS"` WHERE `Name` = '%s'",player_name[playerid]);
	return mysql_tquery(connects, query, "check_tickets", "i", playerid);
}
CB: check_tickets(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return D(playerid,D_BANK_GL,DSM, ""P"Список штрафов",""W"Неоплаченных штрафов нет","Назад","");
	new text[144], price, item,string[1024];
	for(new x = 0; x < rows; x++) {
		cache_get_value_name_int(x, "id", TL[playerid][x][tID]);

		cache_get_value_name(x, "give_name", TL[playerid][x][tName], MAX_PLAYER_NAME);

		cache_get_value_name_int(x, "total", TL[playerid][x][tPrice]);

		cache_get_value_name(x, "reason", TL[playerid][x][tReason], 64);
		cache_get_value_name(x, "date", TL[playerid][x][tDate], 32);

		price += TL[playerid][x][tPrice];
		TOTALTICKETS[playerid]++;
		if(TOTALTICKETS[playerid] == 15) {
			SendClientMessage(playerid, COLOR_GREY, "Показаны первые 15 штрафов");
			break;
		}
	}
	strcat(string,"№\tПричина\tСумма\n");
	format(text,sizeof(text),"-.\tОплатить все штрафы\t{88F83E}%i вирт\n",price), strcat(string,text);
	for(new i; i < TOTALTICKETS[playerid]; i++) {
		item++;
		format(text,sizeof(text),"{ffffff}%i.\t%s\t{FF0000}%i вирт\n",item,TL[playerid][i][tReason], TL[playerid][i][tPrice]);
		strcat(string,text);
	}
	return D(playerid,D_TICKET,DSTH,"Список штрафов",string,"Далее","Отмена");
}
stock arrest(playerid, turma) {

	ResetPlayerWeapons(playerid);
	PI[playerid][pJail] = 1;  //GetNearestPolice(playerid);
	PI[playerid][pJailTime] = turma;
	PI[playerid][pArrested] += 1;
	PI[playerid][pZakonp] -= 3;
	if(PI[playerid][pZakonp] < -100) PI[playerid][pZakonp] = -100;
	PI[playerid][pSearch] = 0;
	SetPlayerWantedLevel(playerid, PI[playerid][pSearch]);
	SetArmour(playerid, 0);
	
	if(!PI[playerid][pJail]) PI[playerid][pJail] = 1;
	
	new query[200];
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pSearch` = '0',`pJail` = '%i',`pJailTime` = '%i',`pArrested` = '%i',`pZakonp` = '%i' WHERE `Name` = '%s'",PI[playerid][pJail],PI[playerid][pJailTime],PI[playerid][pArrested],PI[playerid][pZakonp], player_name[playerid]);
	mysql_tquery(connects, query,"","");
	return true;
}
CB: info_fraction(playerid,ID) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	new idd = 0,ids = 0;
	for(new i = 0; i < rows; i++) {
		new rang;
		cache_get_value_int(i,"pRank",rang);
		if(rang == FI[ID][fInviteRang]) idd ++;
	}
	static const f_str[] = ""W"\nОрганизация: "YELLOW"%s\n\
											"W"Лидер: "GREEN"%s\n\n\
											"W"Поставлен: "P"%s "W"| "P"%s\n\
											"W"Игроки во фракции онлайн: "P"%d\n\
											"W"Всего игроков во фракции: "P"%d\n\
											"W"Заместителей во фракции: "P"%d";
	new string[sizeof(f_str) +1 + (-2 + 25) + (-2 + 25) + (-2 + 53) + (-2 + 7)];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pMember] != ID)continue;
		if(PI[i][pRank] < 1 || PI[i][pMember] < 1) continue;
		if(!start_work[i]) continue;
		ids++;
	}
	format(string,sizeof(string),f_str,FI[ID][fName],FI[ID][fLeader],FI[ID][fAdmin],FI[ID][fTime],ids,rows,idd);
	D(playerid,DIALOG_NONE,DSM, ""P"Информация",string,"Закрыть","");
	return 1 ;
}
CB: fam_members(fam) {
	new rows;
	new query[128];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM accounts WHERE family = '%d'", fam);
	new Cache:result = mysql_query(connects, query);
	cache_get_row_count(rows);
	cache_delete(result);
	return rows;
}
stock SendVip(color, const mes[])
{
	foreach(new i:Player) { 
		if(!TI[i][tLogin]) continue;
		if(PI[i][pPremium]) SendClientMessage(i, color, mes);
	}
	return true;
}

SendSpyMessage(fraca, color, mes[]) {
	new string[144];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPVarInt(i,"tipster_listen") == fraca && GetPVarInt(i,"tipster_listen") > 0) {
			format(string, sizeof(string), "[TIPSTER] %s", mes);
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}
CB: FuelCar(playerid) {
	new step = GetPVarInt(playerid,"tank_fill");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!vehicleid) return 0;
	if(GetPVarInt(playerid,"tank_vfuel")+step <= VehicleInfo[vehicleid][vFuel]) {
		DeletePVar(playerid,"tank_fill");
		DeletePVar(playerid,"tank_vfuel");
		TogglePlayerControllable(playerid,true);
		return 1;
	}
	VehicleInfo[vehicleid][vFuel] += 1.0;
	SetTimerEx("FuelCar",500,0,"i",playerid);
	return 1;
}
stock save_slotitem(playerid) {
	new query[256];
	mysql_format(connects, query, sizeof(query),"UPDATE accounts SET pSlotItem = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `pID` = '%d' LIMIT 1",PI[playerid][pSlotItem][0],PI[playerid][pSlotItem][1],PI[playerid][pSlotItem][2],
	PI[playerid][pSlotItem][3],PI[playerid][pSlotItem][4],PI[playerid][pSlotItem][5],PI[playerid][pSlotItem][6],PI[playerid][pSlotItem][7],PI[playerid][pID]);
	mysql_tquery(connects, query);
}
stock save_settings(playerid) {
	new query[260];
	mysql_format(connects, query, sizeof(query),"UPDATE accounts SET Settings = '%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d' WHERE `pID` = '%d' LIMIT 1",PI[playerid][pSettings][0],PI[playerid][pSettings][1],PI[playerid][pSettings][2],
	PI[playerid][pSettings][3],PI[playerid][pSettings][4],PI[playerid][pSettings][5],PI[playerid][pSettings][6],PI[playerid][pSettings][7],PI[playerid][pSettings][8],PI[playerid][pSettings][9],PI[playerid][pSettings][10],PI[playerid][pSettings][11],PI[playerid][pID]);
	mysql_tquery(connects, query);
}
stock load_color(playerid) {
	for(new i = 0, cindex = 0; i < sizeof(func_bcolor); i++) {
		if(i == 0) {
			func_bcolor[i] = TextDrawCreate(475.548797, 143.249954, "usebox");
			TextDrawLetterSize(func_bcolor[i], 0.000000, 18.152412);
			TextDrawTextSize(func_bcolor[i], 141.367492, 0.000000);
			TextDrawAlignment(func_bcolor[i], 1);
			TextDrawColor(func_bcolor[i], 41215);
			TextDrawBoxColor(func_bcolor[i], -1888497599);
			TextDrawUseBox(func_bcolor[i], true);
			TextDrawSetShadow(func_bcolor[i], 0);
			TextDrawSetOutline(func_bcolor[i], 0);
			TextDrawFont(func_bcolor[i], 1);
		}
		if(i > 0) {
			if(i >= 1) func_bcolor[i] = TextDrawCreate(144.000000 + (45.000000 * cindex), 140.583419, "LD_BEAT:chit");
			if(i == 8) cindex = 0, func_bcolor[i] = TextDrawCreate(144.000000, 192.500015, "LD_BEAT:chit");
			if(i > 8) func_bcolor[i] = TextDrawCreate(144.000000 + (45.000000 * cindex), 192.500015, "LD_BEAT:chit");
			if(i == 15) cindex = 0,func_bcolor[i] = TextDrawCreate(144.000000, 244.416671, "LD_BEAT:chit");
			if(i > 15) func_bcolor[i] = TextDrawCreate(144.000000 + (45.000000 * cindex), 244.416671, "LD_BEAT:chit");
			TextDrawLetterSize( func_bcolor[i], 0.000000, 0.000000);
			TextDrawTextSize( func_bcolor[i], 58.096633, 65.333282);
			TextDrawAlignment( func_bcolor[i], 1);
			TextDrawColor(func_bcolor[i], color_td[i][col_id]);
			TextDrawSetShadow(func_bcolor[i], 0);
			TextDrawSetOutline(func_bcolor[i], 0);
			TextDrawFont( func_bcolor[i], 4);
			TextDrawSetSelectable( func_bcolor[i], true);
			cindex++;
		}
		TextDrawShowForPlayer(playerid,func_bcolor[i]);
	}
	SetPVarInt(playerid,"select_colortd",1);
	SelectTextDraw(playerid, 0xFFFFFFFF);
	SendClientMessage(playerid,0x00FF00FF,"[Подсказка] "W"Для закрытия окна нажмите "P"ESC");
	return 1;
}
CB: load_captcha(playerid) {
	for(new i = 0, cindex = 0,cindex_2 = 0; i < sizeof(Captcha); i++) {
		if(i == 0) {
			Captcha[i] = CreatePlayerTextDraw(playerid, 278.666778, 107.037078, "Enter_Passwort");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.192333, 0.894814);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);

		}
		if(i == 1) {
			Captcha[i] = CreatePlayerTextDraw(playerid,256.666473, 105.377822, "box");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 1.533334);
			PlayerTextDrawTextSize(playerid,Captcha[i], 364.000000, 0.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawUseBox(playerid,Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid,Captcha[i], 1819704319);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 1);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i == 2) {
			Captcha[i] = CreatePlayerTextDraw(playerid,256.666656, 124.459274, "box");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 18.299999);
			PlayerTextDrawTextSize(playerid,Captcha[i], 364.000000, 0.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawUseBox(playerid,Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid,Captcha[i], -197);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 0);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i == 3) {//низ слева бокс
			Captcha[i] = CreatePlayerTextDraw(playerid,256.333190, 294.948120, "box");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 1.396001);
			PlayerTextDrawTextSize(playerid,Captcha[i], 308.199218, 0.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawUseBox(playerid,Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid,Captcha[i], 1836481535);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 1);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i == 4) {//низ справа бокс
			Captcha[i] = CreatePlayerTextDraw(playerid,313.203063, 294.948089, "box");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 1.401001);
			PlayerTextDrawTextSize(playerid,Captcha[i], 364.415466, 0.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawUseBox(playerid,Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid,Captcha[i], 1836481535);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 1);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i == 5) {
			Captcha[i] = CreatePlayerTextDraw(playerid,277.033721, 293.689025, "x");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.267333, 1.471408);
			PlayerTextDrawTextSize(playerid,Captcha[i], 10.307392, 12.833320);
			PlayerTextDrawAlignment(playerid,Captcha[i], 2);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);
		}
		if(i == 6) {
			Captcha[i] = CreatePlayerTextDraw(playerid,332.700317, 293.274169, "ok");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.267333, 1.471408);
			PlayerTextDrawTextSize(playerid,Captcha[i], 38.418739, 13.416661);
			PlayerTextDrawAlignment(playerid,Captcha[i], 2);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);
		}
		if(i == 7) {
			Captcha[i] = CreatePlayerTextDraw(playerid,276.000091, 119.325920, "");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid,Captcha[i], 71.000000, 30.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], 121);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 0);
			PlayerTextDrawFont(playerid,Captcha[i], 5);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 0);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetPreviewModel(playerid,Captcha[i], 1581);
			PlayerTextDrawSetPreviewRot(playerid,Captcha[i], 2.000000, 0.000000, 0.000000, 1.000000);
		}
		if(i == 8) {
			Captcha[i] = CreatePlayerTextDraw(playerid,293.833374, 126.433341, "----");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.399999, 1.558518);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i > 8) {
			if(i >= 9) Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 139.237091,"");//123
			if(i == 12) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 174.696350,"");//4
			if(i > 12) Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 174.696350,"");//56
			if(i == 15) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 208.911254,"");//7
			if(i > 15) Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 208.911254,"");
			if(i == 18) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 286.799621, 242.511260,"");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid,Captcha[i], 47.000000, 52.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], 131165);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 0);
			PlayerTextDrawFont(playerid,Captcha[i], 5);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 0);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetPreviewModel(playerid,Captcha[i], 11727);
			PlayerTextDrawSetPreviewRot(playerid,Captcha[i], 0.000000, 0.000000, 0.000000, 1.000000);
			//PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);
			cindex++;
		}
		if(i > 18) {
			new string[512];
			format(string, sizeof(string), "%c", TextArray[i - 19]);
			if(i >= 19) Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 154.640762,string);//123
			if(i == 22) cindex_2 = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 189.570419,string);//4
			if(i > 22) Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 189.570419,string);//56
			if(i == 25) cindex_2 = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 224.414886,string);//7
			if(i > 25) Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 224.414886,string);
			if(i == 28) cindex_2 = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 310.333691, 257.600158,string);
			PlayerTextDrawTextSize(playerid, Captcha[i], 16.0, 16.0);
			PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);

			PlayerTextDrawFont(playerid, Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid, Captcha[i], 1);
			PlayerTextDrawLetterSize(playerid, Captcha[i], 0.341666, 2.151703);
			PlayerTextDrawAlignment(playerid, Captcha[i], 2);
			PlayerTextDrawSetOutline(playerid, Captcha[i], 0);
			PlayerTextDrawSetShadow(playerid, Captcha[i], 0);
			cindex_2++;
		}
		PlayerTextDrawShow(playerid, Captcha[i]);
		SelectTextDraw(playerid, COLOR_BLUE);
	}
}
stock GetCarClassName(classid,classname[],size=sizeof(classname)) {
	switch(classid) {
	case 0: format(classname,size,"Эконом");
	case 1: format(classname,size,"Стандарт");
	case 2: format(classname,size,"Спорт");
	case 3: format(classname,size,"Мото");
	}
}
CB: UpdateGameDice(s) {
	new wait_game_dice[10], count_players = 0, count_score = 0;
	format(wait_game_dice,10,"~g~%d",InfoDice[s][dice_game_start_time] - gettime());
	for(new c = 0; c < 5; c++) {
		if(InfoDice[s][dice_gamer][c] == INVALID_PLAYER_ID) continue;
		if(Casino_Flag[InfoDice[s][dice_gamer][c]][casino_bet_cash] == 0) continue;

		if(InfoDice[s][dice_score][c]) count_score++;
		count_players++;
		GameTextForPlayer(InfoDice[s][dice_gamer][c],wait_game_dice,1200,6);
		if(InfoDice[s][dice_game_start_time] <= gettime()) {
			if(InfoDice[s][dice_score][c] == 0) {
				InfoDice[s][dice_score][c] = random(11) + 2;
				UpdateTextCasino(s);
				UpdateScores(s);
			}
		}
	}
	GameTextForPlayer(InfoDice[s][dice_crup],wait_game_dice,1200,6);
	if(InfoDice[s][dice_game_start_time] <= gettime() || (count_players == count_score)) {
		new str_win_dice[156];
		new itogs[3] = -1; itogs[0] = -1; itogs[1] = -1; itogs[2] = -1;

		for(new c = 0; c < 5; c++) {
			if(InfoDice[s][dice_gamer][c] == INVALID_PLAYER_ID) continue;
			if(InfoDice[s][dice_score][c] > 1 && InfoDice[s][dice_score][c] > itogs[0]) itogs[0] = InfoDice[s][dice_score][c], itogs[1] = InfoDice[s][dice_gamer][c];
		}
		for(new c = 0; c < 5; c++) {
			if(InfoDice[s][dice_gamer][c] == INVALID_PLAYER_ID) continue;
			if(InfoDice[s][dice_score][c] > 1 && InfoDice[s][dice_gamer][c] != itogs[1] && InfoDice[s][dice_score][c] == itogs[0]) itogs[2] = InfoDice[s][dice_gamer][c];
		}
		if(itogs[2] > -1) {
			for(new c = 0; c < 5; c++) {
				if(InfoDice[s][dice_gamer][c] == INVALID_PLAYER_ID) continue;
				if(InfoDice[s][dice_score][c] > 1 && InfoDice[s][dice_score][c] == itogs[0]) {
					InfoDice[s][dice_game_start_time] = gettime() + 30;
					SendClientMessage(InfoDice[s][dice_gamer][c],CGOLD,"Вы попали в следующий раунд. У вас есть 30 секунд, чтобы бросить кубики");
				}
				else Casino_Flag[InfoDice[s][dice_gamer][c]][casino_bet_cash] = 0;
				InfoDice[s][dice_score][c] = 0;
				SetTimerEx("score_update",2000,false,"i",s);
			}
		}
		else if(itogs[1] > -1) {
			new money = floatround(InfoDice[s][dice_bank]*0.0001);
			new money_crup = floatround(InfoDice[s][dice_bank] * 0.0001);
			format(str_win_dice,sizeof(str_win_dice),"Игра завершена. Победитель: "W"%s "GREEN"(выпало: "W"%d)",player_name[itogs[1]],itogs[0]);
			PI[itogs[1]][pCasinoChips] += floatround(InfoDice[s][dice_bank] - money);
			UpdatePlayerData(itogs[1],"casino_chips",PI[itogs[1]][pCasinoChips]);

			for(new c = 0; c < 5; c++) {
				if(InfoDice[s][dice_gamer][c]==INVALID_PLAYER_ID) continue;
				Casino_Flag[InfoDice[s][dice_gamer][c]][casino_bet_cash] = 0;
				InfoDice[s][dice_score][c] = 0;
				SendClientMessage(InfoDice[s][dice_gamer][c], COLOR_GREEN, str_win_dice);
			}
			if(IsPlayerConnected(InfoDice[s][dice_crup])) {
				SendClientMessage(InfoDice[s][dice_crup], COLOR_GREEN, str_win_dice);
				PI[InfoDice[s][dice_crup]][pSalary] += money_crup;
				UpdatePlayerData(InfoDice[s][dice_crup],"salary",PI[InfoDice[s][dice_crup]][pSalary]);
			}
			InfoDice[s][dice_bank] = 0;
			InfoDice[s][dice_stavka] = 0;
			SetTimerEx("score_update",2000,false,"d",s);
			InfoDice[s][dice_game_start] = false;
			KillTimer(InfoDice[s][dice_game_start_timer]);
			InfoDice[s][dice_game_start_timer] = -1;
			/*if(!IsPlayerInDynamicArea(ids, InfoDice[s][dice_area]) && !InfoDice[s][dice_game_start]) {
				ShowCasino_TD(ids, Casino_Flag[ids][select_casino_table]);
			}*/
		}
	}
	return 1;
}
CB: score_update(s) {
	UpdateTextCasino(s);
	UpdateScores(s);
	return true;
}
stock Load_PTD_Dice(playerid) {
	if(PTD_DiceStat[playerid]==PlayerText:-1) {
		PTD_DiceStat[playerid] = CreatePlayerTextDraw(playerid, 466.178741, 278.833099, "_~w~Bet:_~p~0_~n~_~w~Bank:_~p~0_~n~_~w~Your_chips:_~p~0");
		PlayerTextDrawLetterSize(playerid, PTD_DiceStat[playerid], 0.270556, 1.500832);
		PlayerTextDrawTextSize(playerid, PTD_DiceStat[playerid], 603.924194, 35.000011);
		PlayerTextDrawAlignment(playerid, PTD_DiceStat[playerid], 1);
		PlayerTextDrawColor(playerid, PTD_DiceStat[playerid], -1);
		PlayerTextDrawUseBox(playerid, PTD_DiceStat[playerid], true);
		PlayerTextDrawBoxColor(playerid, PTD_DiceStat[playerid], 1149760170);
		PlayerTextDrawSetShadow(playerid, PTD_DiceStat[playerid], 0);
		PlayerTextDrawSetOutline(playerid, PTD_DiceStat[playerid], 1);
		PlayerTextDrawBackgroundColor(playerid, PTD_DiceStat[playerid], 187);
		PlayerTextDrawFont(playerid, PTD_DiceStat[playerid], 1);
		PlayerTextDrawSetProportional(playerid, PTD_DiceStat[playerid], 1);
	}
	PlayerTextDrawShow(playerid,PTD_DiceStat[playerid]);
	return 1;
}
stock UpdateTableText(c) {
	new update_table_text[156];
	new mark[5][10];
	for(new i=0;i<5;i++) {
		if(InfoDice[c][dice_gamer][i]==INVALID_PLAYER_ID)strcat(mark[i],"_");
		else if(Casino_Flag[InfoDice[c][dice_gamer][i]][casino_bet_cash]!=0)strcat(mark[i],"+_");
	}
	format(update_table_text, 156, "%s%s~n~%s%s~n~%s%s~n~%s%s~n~%s%s",
	mark[0],(InfoDice[c][dice_gamer][0]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][0]]),
	mark[1],(InfoDice[c][dice_gamer][1]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][1]]),
	mark[2],(InfoDice[c][dice_gamer][2]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][2]]),
	mark[3],(InfoDice[c][dice_gamer][3]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][3]]),
	mark[4],(InfoDice[c][dice_gamer][4]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][4]]));
	TextDrawSetString(Casino_TD[Casino_TD_TableNicks][c],update_table_text);
	return 1;
}
stock UpdateScores(s) {
	new mark[5][2];
	for(new i=0;i<5;i++) {
		if(InfoDice[s][dice_score][i]<=3) strcat(mark[i],"r");
		else if(InfoDice[s][dice_score][i]>=4 && InfoDice[s][dice_score][i]<=6)strcat(mark[i],"w");
		else if(InfoDice[s][dice_score][i]>=7 && InfoDice[s][dice_score][i]<=9)strcat(mark[i],"y");
		else if(InfoDice[s][dice_score][i]>=10 && InfoDice[s][dice_score][i]<=12)strcat(mark[i],"g");
	}
	new string_set_score[64];
	format(string_set_score,64,"~%s~%d~n~~%s~%d~n~~%s~%d~n~~%s~%d~n~~%s~%d",mark[0],InfoDice[s][dice_score][0],mark[1],InfoDice[s][dice_score][1],mark[2],InfoDice[s][dice_score][2],mark[3],InfoDice[s][dice_score][3],mark[4],InfoDice[s][dice_score][4]);
	TextDrawSetString(Casino_TD[Casino_TD_TableScore][s],string_set_score);
	return 1;
}
stock UpdateTextCasino(c) {
	new update_string_casino_text[500];
	format(update_string_casino_text,500,CASINO_TEXT_STRING,
	c+1,(InfoDice[c][dice_crup] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_crup]]) : ("-"),(InfoDice[c][dice_gamer][0] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][0]]) : ("-"),(InfoDice[c][dice_gamer][1] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][1]]) : ("-"),
	(InfoDice[c][dice_gamer][2] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][2]]) : ("-"),(InfoDice[c][dice_gamer][3] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][3]]) : ("-"),
	(InfoDice[c][dice_gamer][4] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][4]]) : ("-"),
	InfoDice[c][dice_stavka],InfoDice[c][dice_bank],(InfoDice[c][dice_game_start]) ? ("{37A65F}Игра начата") : ("{EB3F36}Игра не начата"));
	UpdateDynamic3DTextLabelText(InfoDice[c][dice_text], -1, update_string_casino_text);
	for(new p = 0; p < 5; p++) {
		if(InfoDice[c][dice_gamer][p]==INVALID_PLAYER_ID) continue;
		if(PTD_DiceStat[InfoDice[c][dice_gamer][p]] != PlayerText:-1 && Casino_Flag[InfoDice[c][dice_gamer][p]][show_casino_td] == 1) {
			new ptd_dice_string[80];
			format(ptd_dice_string,80,"_~w~Bet:_~g~%d_~n~_~w~Bank:_~g~%d_~n~_~w~Your_chips:_~g~%d",InfoDice[c][dice_stavka],InfoDice[c][dice_bank],PI[InfoDice[c][dice_gamer][p]][pCasinoChips]);
			PlayerTextDrawSetString(InfoDice[c][dice_gamer][p],PTD_DiceStat[InfoDice[c][dice_gamer][p]],ptd_dice_string);
		}
	}
	if(InfoDice[c][dice_crup] != INVALID_PLAYER_ID) {
		if(PTD_DiceStat[InfoDice[c][dice_crup]]!=PlayerText:-1 && Casino_Flag[InfoDice[c][dice_crup]][show_casino_td]==1) {
			new ptd_dice_string[80];
			format(ptd_dice_string,80,"_~w~Bet:_~g~%d_~n~_~w~Bank:_~g~%d_~n~_~w~Your_chips:_~g~%d",InfoDice[c][dice_stavka],InfoDice[c][dice_bank], PI[InfoDice[c][dice_crup]][pCasinoChips]);
			PlayerTextDrawSetString(InfoDice[c][dice_crup],PTD_DiceStat[InfoDice[c][dice_crup]],ptd_dice_string);
		}
	}
	UpdateTableText(c);
	UpdateScores(c);
	return 1;
}
stock ShowCasino_TD(playerid, select_table, bool:canceled = true) {
	if(Casino_Flag[playerid][show_casino_td] == 1) {
		if(Casino_Flag[playerid][casino_bet_cash] != 0 && !InfoDice[select_table][dice_game_start]) {
			PI[playerid][pCasinoChips] += Casino_Flag[playerid][casino_bet_cash];
			UpdatePlayerData(playerid,"casino_chips",PI[playerid][pCasinoChips]);
			InfoDice[select_table][dice_bank] -= InfoDice[select_table][dice_stavka];
			Casino_Flag[playerid][casino_bet_cash] = 0;
		}
		if(InfoDice[select_table][dice_crup] == playerid) {
			InfoDice[select_table][dice_crup] = INVALID_PLAYER_ID;
		}
		else {
			for(new i = 0;i<5;i++) {
				if(InfoDice[select_table][dice_gamer][i] == playerid) {
					InfoDice[select_table][dice_score][i] = 0;
					InfoDice[select_table][dice_gamer][i] = INVALID_PLAYER_ID;
					break;
				}
			}
		}
		UpdateScores(select_table);
		UpdateTextCasino(select_table);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Box]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Set_Bet]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Dice]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Exit]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_TableNicks][select_table]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_TableScore][select_table]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_TableName][select_table]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Box]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Enum]);
		for(new i = 0; i < 5; i++) {
			if(i<2)TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Modeled][i]);
			TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Lines][i]);
		}
		PlayerTextDrawHide(playerid,PTD_DiceStat[playerid]);
		if(canceled) CancelSelectTextDraw(playerid);
		Casino_Flag[playerid][show_casino_td] = 0;
		Casino_Flag[playerid][select_casino_table] = -1;
		return 1;
	}
	Load_PTD_Dice(playerid);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Box]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Set_Bet]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Dice]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Exit]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_TableNicks][select_table]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_TableScore][select_table]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_TableName][select_table]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Box]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Enum]);
	for(new i = 0; i < 5; i++) {
		if(i<2)TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Modeled][i]);
		TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Lines][i]);
	}
	SelectTextDraw(playerid,0x9BF2EAAA);
	Casino_Flag[playerid][show_casino_td] = 1;
	return 1;
}
CB: ClearAnim(playerid) return ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,0,1);
CB:DiceOff(id, targetid)
{
	ClearAnims(id);
	if (TI[id][tKubik] == 1) {
		TI[id][tKubik] = 0;
		if (IsPlayerAttachedObjectSlotUsed(id, 1)) RemovePlayerAttachedObject(id, 1); // 
	}
	ClearAnims(targetid);
	if (TI[targetid][tKubik] == 1) {
		TI[targetid][tKubik] = 0;
		if (IsPlayerAttachedObjectSlotUsed(targetid, 1)) RemovePlayerAttachedObject(targetid, 1); // 
	}
}
stock IsTextInvalid(const text[]) {
	if(strfind(text, "none", true) != -1) return 1; 
	if(strfind(text, "None", true) != -1) return 1; 
	if(strfind(text, "NONE", true) != -1) return 1; 
	if(strfind(text, "'", true) != -1) return 1; 
	if(strfind(text, "/", true) != -1) return 1; 
	if(strfind(text, "%", true) != -1) return 1; 
	if(strfind(text, ".", true) != -1) return 1;
	if(strfind(text, "%", true) != -1) return 1;
	if(strfind(text, "&", true) != -1) return 1;
	if(strfind(text, "*", true) != -1) return 1;
	if(strfind(text, "@", true) != -1) return 1;
	if(strfind(text, "(", true) != -1) return 1;
	if(strfind(text, ")", true) != -1) return 1;
	if(strfind(text, "`", true) != -1) return 1;
	if(strfind(text, ",", true) != -1) return 1;
	return 0;
}
stock IsARPName(const Name[]) {
	new simb_, RP_Name[2][24];
	new playerid;
	for(new i = 0;i < strlen(Name);i ++) {
		if(Name[i] == '_') simb_ ++;
	}
	if(simb_ != 1) return false;
	sscanf(Name,"p<_>s[24]s[24]",RP_Name[0],RP_Name[1]);
	if(!IsAGoodName(RP_Name[0]) || !IsAGoodName(RP_Name[1])) return false;
	if(IsPlayerNPC(playerid)) return true;
	return true;
}
stock IsAGoodName(const Name[]) {
	new playerid;
	new NameChars;
	if(IsPlayerNPC(playerid))return 1;
	if(strlen(Name) < 2) return false;
	if(Name[0] < 'A' || Name[0] > 'Z') return false;
	for(new i = 1;i < strlen(Name);i ++) {
		if(Name[i] < 'a' || Name[i] > 'z') {
			if(Name[i] >= 'A' && Name[i] <= 'Z') NameChars ++;
			else return false;
		}
		if(NameChars > 1) return false;
	}
	return true;
}
CB: CallChangeName(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(rows) {
		SendClientMessage(playerid, COLOR_GREY, "Данный никнейм занят");
		DeletePVar(playerid,"WantNickChange");
		return 1;
	}

	new playerName[MAX_PLAYER_NAME+1];
	GetPVarString(playerid, "WantNickChange", playerName, MAX_PLAYER_NAME);
	new string[156];
	format(string,sizeof(string),"[A] %s[%d] подал завку на смену ника. Желаемый ник: %s",player_name[playerid],playerid,playerName);
	SendAdminMessage(COLOR_YELLOW, string);
	AdmMSG(COLOR_YELLOW,"Чтобы сменить ему ник Используйте /setnick");
	SendOk(playerid, "Заявка на смену ника отправлена администрации");
	return 1;
}
CB: GrandChangeName(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) ChangeName(playerid);
	else SendClientMessage(playerid, COLOR_GREY, "Данный никнейм занят");
	return 1;
}

stock ChangeName(playerid) {
	new playerName[MAX_PLAYER_NAME+1];
	GetPVarString(playerid, "WantNickChange", playerName, MAX_PLAYER_NAME);
	if(GetPlayerID(playerName) != INVALID_PLAYER_ID) {
		return SendClientMessage(playerid, COLOR_GREY, "У вас присутствуют запрещенные символы в никнейме");
	}

	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `accounts` SET `Name` = '%s' WHERE `pID` = '%d' LIMIT 1",playerName,PI[playerid][pID]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");

	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `accounts` SET `pDrug` = '%s' WHERE BINARY `pDrug` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	
	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `questsprogress` SET `name` = '%s' WHERE BINARY `name` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	
	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `houses` SET `owner` = '%s' WHERE BINARY `owner` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	
	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `cars` SET `owner` = '%s' WHERE BINARY `owner` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	
	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `business` SET `owner` = '%s' WHERE BINARY `owner` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	
	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `accounts` SET `pMarried` = '%s' WHERE BINARY `pMarried` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	
	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `admin` SET `Name` = '%s' WHERE BINARY `Name` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	
	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `fractions_blacklist` SET `bl_name` = '%s' WHERE BINARY `bl_name` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	
	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `billboards` SET `bOwner` = '%s' WHERE BINARY `bOwner` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	
	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `promocode` SET `Name` = '%s' WHERE BINARY `Name` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	
	MYSQL_GLOBAL[0] = EOS;
	mysql_format(connects, MYSQL_GLOBAL, sizeof (MYSQL_GLOBAL), "UPDATE `"TABLE_DNK"` SET `owner` = '%s' WHERE `owner` = '%s'", playerName, player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	
	foreach (new player_vehicleid: playerVehicles) {
		if (strcmp(PlayerTrailer[player_vehicleid][carOwner], player_name[playerid])) continue;
		SetString(PlayerTrailer[player_vehicleid][carOwner], playerName);
	}

	if(PI[playerid][pFamily] > 0) {
		MYSQL_GLOBAL[0] = EOS;
		if(!strcmp(gFamily[PI[playerid][pFamily]-1][famOwner],player_name[playerid])){
			strmid(gFamily[PI[playerid][pFamily]-1][famOwner],playerName,0,strlen(playerName),MAX_PLAYER_NAME);
			mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),"UPDATE `family` SET `owner` = '%s' WHERE `ID` = '%d' LIMIT 1",playerName,gFamily[PI[playerid][pFamily]-1][famID]);
			mysql_tquery(connects, MYSQL_GLOBAL, "", "");
		}
		if(!strcmp(gFamily[PI[playerid][pFamily]-1][famCOwner],player_name[playerid])){
			strmid(gFamily[PI[playerid][pFamily]-1][famCOwner],playerName,0,strlen(playerName),MAX_PLAYER_NAME);
			MYSQL_GLOBAL[0] = EOS;
			mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL), "UPDATE `family` SET `cowner` = '%s' WHERE `ID` = '%d' LIMIT 1",playerName,gFamily[PI[playerid][pFamily]-1][famID]);
			mysql_tquery(connects, MYSQL_GLOBAL, "", "");
		}
	}
	if(PI[playerid][pHouse] > 0) {
		strmid(gHouses[PI[playerid][pHouse]-1][houseOwner], playerName, 0, strlen(playerName), MAX_PLAYER_NAME);
		SaveHome(PI[playerid][pHouse]-1);
	}
	MYSQL_GLOBAL[0] = EOS;
	mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),"INSERT INTO `nickname_history` (`nh_owner`,`nh_oldname`,`nh_newname`,`nh_date`) VALUES ('%d','%s','%s',NOW())",
	PI[playerid][pID], player_name[playerid],playerName);
	mysql_tquery(connects, MYSQL_GLOBAL);

	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `adminlog` SET `NamePlayer` = '%s' WHERE BINARY `NamePlayer` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");

	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `givecash` SET `Name` = '%s' WHERE BINARY `Name` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");

	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `fraclog` SET `Name` = '%s' WHERE BINARY `Name` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");

	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `fraclog` SET `NameP` = '%s' WHERE BINARY `NameP` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	
	MYSQL_GLOBAL[0] = EOS;
	format(MYSQL_GLOBAL,sizeof(MYSQL_GLOBAL), "UPDATE `streamers` SET `Name` = '%s' WHERE BINARY `Name` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	
	if(PI[playerid][pBusiness] > 0) {
		strmid(gBusiness[PI[playerid][pBusiness]-1][bizzOwner],playerName,0,strlen(playerName),MAX_PLAYER_NAME);
		UpdateBusinessText(PI[playerid][pBusiness]-1);
	}
	
	new string[128];
	format(string,sizeof(string), "%s изменил(а) имя на %s",player_name[playerid],playerName);
	SendClientMessageToAll(COLOR_YELLOW, string);
	SetPVarInt(playerid,"changename_fix",true);
	SetPlayerName(playerid, playerName);
	strmid(player_name[playerid], playerName, 0, strlen(playerName), 31);
	SendClientMessage(playerid,COLOR_YELLOW,"Пропишите новый ник в окне SA-MP");
	
	DeletePVar(playerid,"grand_fix");
	DeletePVar(playerid,"WantNickChange");

	return 1;
}
bizz_finka(bizz, cash) {
	new rows, query[120];
	cache_get_row_count(rows);
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `business_stats` WHERE `bizz` = '%d' AND date = CURDATE()",bizz);
	mysql_tquery(connects, query, "biz_update", "ii", bizz, cash);
}
CB: biz_update(bizid, price) {
	new rows, query[120];
	cache_get_row_count(rows);
	if(!rows)
	{
		mysql_format(connects, query, sizeof(query),"INSERT INTO `business_stats` (`date`,`bizz`, `money`) VALUES (NOW(),'%d','%d')", bizid, price) ;
		mysql_tquery(connects, query, "", "");
	}
	else {
		mysql_format(connects, query, sizeof(query),"UPDATE `business_stats` SET `money` = `money`+'%d' WHERE bizz = '%d' AND date = CURDATE()", price, bizid) ;
		mysql_tquery(connects, query, "", "");
	}
	return true;
}
CB: bizz_stats(playerid,bizz) {
	new rows, sym = 0, string[800], str[800];
	new dates[ 16 ], money;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid,COLOR_GREY,"Доходы в бизнесе отсутствуют");
	format(str, sizeof(str),""ORANGE"Статистика доходов за последние 7 дней:\n\n",Nalog[3]);
	if(rows)
	{
		if(rows >= 8) {
			new query[128];
			mysql_format(connects, query, sizeof(query),"DELETE FROM `business_stats` WHERE `bizz` = '%d';", bizz);
			mysql_query(connects, query);
			SendClientMessage(playerid,COLOR_GREY, "Доходы за последние 7 дней обновлены. Откройте список доходов");
			return true;
		}
		for ( new i = 0 ; i < rows ; i ++ )
		{
			cache_get_value_name_int(i,"money", money);
			cache_get_value_name(i,"date", dates,16);
			format(str, sizeof(str),"%s"P"%d. "W"%s\t\t"GREEN"$%d\n",str,i+1,dates, money);
			sym += money;
		}
		format(string, sizeof(string),"%s"W"Всего\t\t\t"GREEN"$%d",str, sym);
		D(playerid,DIALOG_NONE,DSM, ""P"Доходы", string, "Закрыть", "");
	}
	return true;
}
stock EnableGPSForPlayer(playerid, Float:x, Float:y, Float:z) {
	gpss[playerid] = 1;
	SetPlayerRaceCheckpoint(playerid, 2, Float:x, Float:y, Float:z,Float:x, Float:y, Float:z, 3.0);
	return 1;
}
stock bizz_pay(bizz,price) {
	new percent_mafia = 0;
	if(gBusiness[bizz][bizzMafia]) {
		percent_mafia = floatround((price)/100) * Nalog[4];
		AddMafiaBank(bizz,floatround(percent_mafia));
	}
	bizz_finka(bizz, price);
	new income = percent_mafia;
	gBusiness[bizz][bizzBank] += (price-income);
	UpdateBusinessData(bizz+1,"bank",gBusiness[bizz][bizzBank]);
	gBusiness[bizz][bizzBankDay] += (price-income);
	UpdateBusinessData(bizz+1,"bankday",gBusiness[bizz][bizzBankDay]);

	UpdateBusinessData(bizz+1,"product",gBusiness[bizz][bizzProduct]);
}
stock AddMafiaBank(bizid, sum) {
	switch(gBusiness[bizid][bizzMafia]) {
	case fLCN: gBankMafia[0][bizid] += sum,FI[fLCN][fBank] += sum, UpdateFraction(fLCN,"Bank",FI[fLCN][fBank]);
	case fYAKUZA: gBankMafia[1][bizid] += sum,FI[fYAKUZA][fBank] += sum, UpdateFraction(fYAKUZA,"Bank",FI[fYAKUZA][fBank]);
	case fRM: gBankMafia[2][bizid] += sum,FI[fRM][fBank] += sum, UpdateFraction(fRM,"Bank",FI[fRM][fBank]);
	}
	return 1;
}
stock GetEngineStat(vehicleid) {
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}
GetVehicleState(vehicleid) return VehicleState[vehicleid];
stock skin_player(playerid) {
	A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
	PI[playerid][pFracSkin] = 0;
	UpdatePlayerData(playerid,"pModel",0);
}
CB: OnPlayerCaptchaLoaded(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "История еще пуста");
	new string[128], string_strcat[800], status[32], ip[32], _date[32];
	for(new z; z < rows; z++) {
		cache_get_value_name(z, "clIP", ip);
		cache_get_value_name(z, "clDate", _date);
		cache_get_value_name(z, "clStatus", status);
		format(string, sizeof(string), "{FFFFFF}%d. Дата: %s | IP: %s - %s\n", z+1, _date, ip, (strval(status) ? (""GREEN"Удачно"W"") : (""NO"Неудачно"W"")));
		strcat(string_strcat, string);
	}
	D(playerid, DIALOG_NONE, DSM, ""P"Информация", string_strcat, "Закрыть", "");
	return true;
}
stock dialog_business(playerid,bizz,listitem) {
	switch(listitem) {
	case 0: {
			static const f_str[] = ""W"Состояние счета: "GREEN"$%d\n"P"1."W" Снять деньги\n"P"2."W" Положить деньги";
			new string[sizeof(f_str) +1 + (-2 + 10)];
			format(string,sizeof(string),f_str,gBusiness[bizz][bizzBank]);
			D(playerid,D_BIZZ_BANK,DSL,""P"Управление кассой",string,"Далее","Назад");
		}
	case 1: D(playerid,dBusinessProd,DSI, ""P"Заказ продуктов","\n\n"W"Введите кол-во продуктов, которое хотите заказать:\n\nСтоимость 1 продукта на закупе 5$\n\n","Далее","Отмена");
	case 2: ShowBusinessInformation(playerid,bizz,D_BIZZ_STATS);
	case 3: {
			if(gBusiness[bizz][bizzStatus]) {
				gBusiness[bizz][bizzStatus] = 0;
				SendOk(playerid,"Бизнес закрыт");
			}
			else {
				gBusiness[bizz][bizzStatus] = 1;
				SendOk(playerid,"Бизнес открыт");
			}
			UpdateBusinessData(bizz+1,"status",gBusiness[bizz][bizzStatus]);
			UpdateBusinessText(bizz);
		}
	case 4: {
			static const f_str[] = ""P"1."W" Расширение склада "GREEN"$100.000 "ORANGE"[%s]\n\
										"P"2."W" Отображение в GPS "GREEN"$200.000 "ORANGE"[%s]\n\
										"P"3."W" Снижение субдсидии "GREEN"$200.000 "ORANGE"[%s]";
			new string[sizeof(f_str) +1 + (-2 + 12) + (-2 + 12) + (-2 + 12)];
			format(string,sizeof(string),f_str,gBusiness[bizz][bizzUpgrade][0]>=10000?("Имеется"):("Отсутствует"),gBusiness[bizz][bizzUpgrade][1]==1?("Имеется"):("Отсутствует"),gBusiness[bizz][bizzUpgrade][2]==1?("Имеется"):("Отсутствует"));
			D(playerid,D_BIZZ_UPGRADE,DIALOG_STYLE_LIST,""P"Улучшения",string,"Купить","Назад");
		}
	case 5: {
			if(gBusiness[bizz][bizzType] == 7) D(playerid,D_BIZZ_PRICE,DSI, ""P"Бизнес","\n\n"W"Введите цену за 1 литр\nПримечание: от "GREEN"$30"W" до "GREEN"$50\n\n","Изменить","Отмена");
			else D(playerid,D_BIZZ_PRICE,DSI, ""P"Бизнес","\n\n"W"Введите цену за 1 ед. товара\nПримечание: от "GREEN"$5"W" до "GREEN"$10\n\n","Изменить","Отмена");
		}
	case 6: D(playerid,D_BIZZ_ENTER,DSI, ""P"Бизнес","\n\n"W"Введите цену за вход\nПримечание: от "GREEN"$0"W" до "GREEN"$5000\n\n","Изменить","Отмена");
	case 7: {
			new query[156];
			mysql_format(connects, query, sizeof(query),"SELECT * FROM `business_stats` WHERE `bizz` = '%i'", bizz);
			mysql_tquery(connects, query, "bizz_stats", "ii", playerid,bizz);
		}
	case 8: {
			new procent = floatround((gBusiness[bizz][bizzSellPrice]/100) *Nalog[3]);
			static const f_str[] = "\n\n"W"Вы действительно хотите продать бизнес государству за "GREEN"%d$?\n\n"G"Для продажи бизнеса игроку введите: /sellbusiness [ID игрока] [Сумма]\n\n";
			new string[sizeof(f_str) +1 + (-2 + 8)];
			format(string,sizeof(string),f_str,gBusiness[bizz][bizzSellPrice]-procent);
			D(playerid,D_BIZZ_SELL,DSM, ""P"Бизнес",string,"Продать","Отмена");
		}
	case 9:{
			SPD(playerid, D_BIZZ_MICRO_PROCENT, DSI, "Изменение процента", ""W"Введите в поле ниже, под какой процент, вы хотите занимать деньги.",">>>","x");
	}
	}
}
stock GetNearestATM(playerid) {
	new atmID = -1;
	for(new i = 0; i < MAX_ATM; i++) {
		if(IsPlayerInRangeOfPoint(playerid, 2.5, ATMData[i][ATM_Pos][0], ATMData[i][ATM_Pos][1], ATMData[i][ATM_Pos][2])) {
			atmID = i;
			break;
		}
	}
	SetPVarInt(playerid,"atm_id",atmID);
	return atmID;
}

SaveATM(atmID) {
	new query[257];
	mysql_format(connects, query, sizeof(query),"UPDATE `atms` SET `ATM_X` = '%f', `ATM_Y` = '%f', `ATM_Z` = '%f', `ATM_VW` = '%i'", ATMData[atmID][ATM_Pos][0], ATMData[atmID][ATM_Pos][1], ATMData[atmID][ATM_Pos][2], ATMData[atmID][atm_VW]);
	mysql_format(connects, query, sizeof(query),"%s, `ATM_ROTX` = '%f', `ATM_ROTY` = '%f', `ATM_ROTZ` = '%f', `ATM_INT` = '%d' WHERE `ID` = '%d'", query, ATMData[atmID][ATM_Pos][3], ATMData[atmID][ATM_Pos][4], ATMData[atmID][ATM_Pos][5], ATMData[atmID][atm_INT], atmID);
	return mysql_tquery(connects, query);
}

UpdateATMLabel(atmID) {
	new str[128];
	format(str,sizeof(str),"Банкомат\nВ банкомате:"GREEN" %d$"W"\n\nНажмите"P" ALT",ATMData[atmID][atm_cash]);
	Update3DTextLabelText(ATMData[atmID][atm_Label],-1, str);
}

stock ShowATMMenu(playerid) {
	ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);
	D(playerid, D_ATM, DSL, ""P"Банкомат",
	""GREEN"1."W" Снять наличные\n\
		"GREEN"2."W" Положить наличные\n\
		"GREEN"3."W" Пополнить счет телефона", "Далее", "Закрыть");
	return 1;
}
stock GetWeekName(UTC, name[], const size = sizeof(name)) {
	return strunpack(name, gDaysOfWeek[((unix + UTC * 3600) / 86400) % 7], size);
}
stock getDay() {
	new week_name[10];
	GetWeekName(0, week_name);
	return week_name;
}
stock SpecPlayer(playerid,id) {
	if(!IsPlayerConnected(id) || id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");

	if(SERIU[playerid][sID] != id && PI[playerid][pAdmin] < 5) {
		new str[128];
		format(str,sizeof(str),"[A] %s[%d] начал следить за %s[%d]",player_name[playerid],playerid,player_name[id],id);
		AdmMSG(0xAFAFAFAA, str);
	}
	SpecPl(playerid,true);
	if(SERIU[playerid][sID] != INVALID_PLAYER_ID) TI[SERIU[playerid][sID]][tSpectr] = INVALID_PLAYER_ID;
	TI[id][tSpectr] = playerid;

	SERIU[playerid][sID] = id;
	SetPlayerInterior(playerid,GetPlayerInterior(id));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(id));
	if(IsPlayerInAnyVehicle(id)) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(id));
	else PlayerSpectatePlayer(playerid, id);
	ShowMenuForPlayer(specmenu,playerid);
	recon_update(playerid,id);
	return 1;
}
stock recon_update(playerid,id) {
	if(!IsPlayerConnected(id)) pc_cmd_reoff(playerid), GameTextForPlayer(playerid, "Player Disconected", 700, 3);
	new Float:hppp, Float:aermor, Float:health,nedee,oner[30],speedcar, mes2[350];
	GetPlayerArmour(id,aermor);
	GetPlayerHealth(id,hppp);
	if(IsPlayerInAnyVehicle(id)) GetVehicleHealth(GetPlayerVehicleID(id),health);
	if(GetPlayerState(id) == 2) {
		new carid = GetPlayerVehicleID(id);
		if(GetEngineStat(carid)) oner = "on";
		else oner = "off";
		nedee = floatround(VehicleInfo[carid][vFuel], floatround_floor);
		speedcar = GetPlayerVehicleSpeed(id);
	}
	format(mes2,sizeof(mes2),"~w~%s~n~ID: %d~n~~n~~r~Ping: ~w~%d~n~~n~~y~LVL: ~w~%d~n~~y~EXP: ~w~%d~n~~y~Health: ~w~%.2f~n~~y~Armour: ~w~%.2f~n~~n~~g~Weapon: ~w~%d~n~~g~Ammo: ~w~%d~n~~n~~g~Speed: ~w~%d~n~~g~Car HP: ~w~%.0f~n~~g~Car Speed: ~w~%d~n~~g~Car ENGINE: ~w~%s~n~~g~Car Fuel: ~w~%d~n~",player_name[id],id,GetPlayerPing(id),PI[id][pLevel],PI[id][pExp],hppp,aermor,GetPlayerWeapon(id),GetPlayerAmmo(id), GetPlayerVehicleSpeed(id),health,speedcar,oner,nedee);
	PlayerTextDrawSetString(playerid,RECON[playerid],mes2);
	return true;
}

CB: CheckDelAcc(playerid, name[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
	new acc_id, acc_lvl;
	cache_get_value_name_int(0, "pID", acc_id),
	cache_get_value_name_int(0, "pLevel", acc_lvl);
	if(GetPVarInt(playerid, "delstatus") == acc_id) {
		
		new query[128], info[85];

		mysql_format(connects, query, sizeof(query),"SELECT * FROM `"TABLE_HOUSE"` WHERE `ownerid` = '%d'", acc_id);
		mysql_tquery(connects, query, "check_house", "i", acc_id);
		
		mysql_format(connects, query, sizeof(query),"SELECT * FROM `"TABLE_BIZZ"` WHERE `ownerid` = '%d'", acc_id);
		mysql_tquery(connects, query, "check_bizz", "i", acc_id);
		
		mysql_format(connects, query, sizeof(query), "DELETE FROM `accounts` WHERE BINARY `Name` = '%s'", name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `"TABLE_ADMIN"` WHERE name = '%s'",name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `"TABLE_CARS"` WHERE BINARY owner = '%s'",name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `questsprogress` WHERE BINARY name = '%s'",name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `ban` WHERE BINARY Name = '%s'",name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `promocode_used` WHERE idacca = '%s'",acc_id);
		mysql_tquery(connects, query, "", "");

		format(info, sizeof(info), "[A] Аккаунт %s [ID: %d] [LVL: %d] успешно удален", name, acc_id, acc_lvl);
		AdmMSG(CADMIN_INFO,info);
		DeletePVar(playerid, "delstatus");

		WriteLog(LOG_DELACC,player_name[playerid],name,"Удаление аккаунта");
	}
	else {
		SetPVarInt(playerid, "delstatus", acc_id);
		new string[128];
		format(string, sizeof(string), "Ник: %s, номер: %d, лвл: %d. Удалить аккаунт?",name,acc_id,acc_lvl);
		SendClientMessage(playerid, 0xFF6600AA, string);
		SendClientMessage(playerid, COLOR_YELLOW, "Для ОТМЕНЫ удаления введите /delacc без ника");
		SendClientMessage(playerid, COLOR_YELLOW, "Для ПОДТВЕРЖДЕНИЯ повторите /delacc [ник]");
	}
	return true;
}
CB:check_house(id)
{
	new rows, query[128];
	cache_get_row_count(rows);
	if(rows)
	{
		mysql_format(connects, query, sizeof(query),"UPDATE `"TABLE_HOUSE"` SET `ownerid` = '0' WHERE `ownerid` = '%d'",id);
		mysql_tquery(connects,query);
	}
	return true;
}
CB:check_bizz(id)
{
	new rows, query[128];
	cache_get_row_count(rows);
	if(rows)
	{
		mysql_format(connects, query, sizeof(query),"UPDATE `"TABLE_BIZZ"` SET `ownerid` = '0' WHERE `ownerid` = '%d'",id);
		mysql_tquery(connects,query);
	}
	return true;
}

CB: UpdatePlayerDonate(playerid) {
	cache_get_value_name_int(0,"donatemoney",PI[playerid][pRouble]);
	pc_cmd_donate(playerid);
	return 1;
}
stock GetArendCarID(vehicleid, &arend_id = INVALID_PLAYER_ID) {
	// Возвращает ID ячейки в массиве ArendInfo
	// В переменную "arend_id" записывает ID игрока, арендующего ТС

	arend_id = INVALID_PLAYER_ID;
	for(new i = 0; i < sizeof(ArendInfo); i ++) {
		if(vehicleid == ArendInfo[i][aID]) {
			if(IsPlayerConnected(ArendInfo[i][aPlayerID])) {
				arend_id = ArendInfo[i][aPlayerID];
			}
			return i;
		}
	}
	return -1;
}

stock GetVehicleArendID(vehicleid) {
	new playerid = INVALID_PLAYER_ID, get_rent = GetArendCarID(vehicleid, playerid);
	if(get_rent != (-1)) {
		if(playerid == INVALID_PLAYER_ID || !IsPlayerConnected(playerid)) {
			ArendInfo[get_rent][aPlayerID] = INVALID_PLAYER_ID;
			return INVALID_PLAYER_ID;
		}
		return ArendInfo[get_rent][aPlayerID];
	}
	return INVALID_PLAYER_ID;
}
arendaor_closed(h) {
	new query[128];
	for(new i = 0; i < 2; i++) {
		if(strcmp(gHouseArendator[h][i],"None")) {
			new bool:check_online = false;
			foreach(new x:Player) {
				if(!TI[x][tLogin]) continue;
				if(!strcmp(gHouseArendator[h][i],player_name[x])) {
					SendClientMessage(x,COLOR_REDD,"Вы были выселены с дома");
					UpdatePlayerData(x,"tempkey",0);
					PI[x][pTempKey] = 0;
					check_online = true;
					if(house_car[x][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[x][0]);
					if(house_car[x][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[x][1]);
					break;
				}
			}
			if(!check_online) {
				mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `tempkey` = '0' WHERE `Name` = '%s' LIMIT 1",gHouseArendator[h][i]);
				mysql_pquery(connects, query, "", "");
			}
			strmid(gHouseArendator[h][i],"None",0,strlen("None"),31);
		}
		SaveHome(h);
	}
}
stock ShowFPass(playerid,actplayerid) {
	new jobname[32],classname[15],string[1024];
	new houseid = PI[playerid][pHouse]-1;
	if(PI[playerid][pJob] > 0) {
		switch(PI[playerid][pJob]) {
		case 1: jobname = "Водитель автобуса";
		case 2: jobname = "Механик";
		case 3: jobname = "Развозчик продуктов/топлива";
		case 4: jobname = "Развозчик еды";
		case 5: jobname = "Мойщик дорог";
		case 6: jobname = "Чистильщик канализаций";
		case 8: jobname  = "Таксист";
		case 9: jobname  = "Инкассатор";
		default: jobname = "Безработный";
		}
	}
	new housenumber[15];
	if(houseid > 0) {
		switch(gHouses[houseid][houseClass]) {
		case 0: classname = "Эконом";
		case 1: classname = "Cредний";
		case 2: classname = "Элитный";
		case 3: classname = "Особняк";
		}	
		valstr(housenumber,PI[playerid][pHouse]);
	}
	else {
		housenumber = "Отсутствует";
		classname = "Отсутствует";
	}
	strcat(string, "\n\t"P"ОБЩИЕ ДАННЫЕ:\n\n");
	format(string, sizeof(string), "%s\t"ORANGE"Имя: "W"%s\n\t"ORANGE"Лет в штате: "W"%d\n\tМесто работы: %s\n\t"ORANGE"%s: "W"%s\n\t"ORANGE"Законопослушность: "W"%d\n\n",
	string,player_name[playerid],PI[playerid][pLevel],jobname,(PI[playerid][pSex] == 1) ? ("Жена") : ("Муж"),(strlen(PI[playerid][pMarried]) > 4) ? ("Есть") : ("Нет"),PI[playerid][pZakonp]);
	format(string, sizeof(string), "%s\t"P"ПРОПИСКА:\n\n\t"ORANGE"Дом: "W"%s\n\t"ORANGE"Класс дома: "W"%s\n\n", string,housenumber,classname);
	if(PI[playerid][pRank] > 0 && PI[playerid][pMember] > 0) {
		format(string, sizeof(string), "%s\t"P"ТРУДОВОЕ УСТРОЙСТВО:\n\n\t"ORANGE"Место работы: "W"%s\n\t"ORANGE"Звание: "W"%s\n\n\n",string, FI[TI[playerid][tMasked]][fName],GetRankName(TI[playerid][tMasked],TI[playerid][tFakePass]+1));
	}
	else strcat(string, "\t"P"ТРУДОВОЕ УСТРОЙСТВО:\n\t"W"Отсутствует\n\n");
	D(actplayerid,DIALOG_NONE,DSM,"        		{FAD086}ПАСПОРТ        ",string,"Закрыть","");
	return 1;
}
stock ShowUdJur(playerid,giveplayerid) {
	new string[236];
	format(string, sizeof(string), "\t"P"==== ИНФОРМАЦИЯ ====\n\n\
									"W"Имя: "GREEN"%s\n\
									"W"Лет в штате: "GREEN"%d\n\
									"W"Место работы: "GREEN"%s\n\
									"W"Должность: "GREEN"%s(%d)", player_name[playerid],PI[playerid][pLevel],FI[PI[playerid][pMember]][fName],GetRankName(PI[playerid][pMember],PI[playerid][pRank]),PI[playerid][pRank]);
	D(giveplayerid, DIALOG_NONE, DSM, ""P"Удостоверение",string,"Закрыть","");

	SetPlayerAttachedObject(playerid,2,1581,5,0.092000,0.030999,-0.006000,15.399999,82.499771,178.099761,0.195999,0.114999,0.221000);
	ApplyAnimation(playerid,"GHANDS","gsign5LH",4.1,0,0,0,0,0,1);
	SetTimerEx("PlayerUdostover",1000,false,"i",playerid);
}
stock ShowUd(playerid,giveplayerid) {
	new string[236];
	format(string, sizeof(string), "\t"P"==== ИНФОРМАЦИЯ ====\n\n\
									"W"Имя: "GREEN"%s\n\
									"W"Лет в штате: "GREEN"%d\n\
									"W"Подразделение: "GREEN"%s\n\
									"W"Звание: "GREEN"%s(%d)", player_name[playerid],PI[playerid][pLevel],FI[PI[playerid][pMember]][fName],GetRankName(PI[playerid][pMember],PI[playerid][pRank]),PI[playerid][pRank]);
	D(giveplayerid, DIALOG_NONE, DSM, ""P"Удостоверение",string,"Закрыть","");

	SetPlayerAttachedObject(playerid,2,1581,5,0.092000,0.030999,-0.006000,15.399999,82.499771,178.099761,0.195999,0.114999,0.221000);
	ApplyAnimation(playerid,"GHANDS","gsign5LH",4.1,0,0,0,0,0,1);
	SetTimerEx("PlayerUdostover",1000,false,"i",playerid);
}
stock ShowSkill(playerid,giveplayerid) {
	new strname[56];
	format(strname, sizeof(strname), "{ffcf00}Навыки владения оружия %s", player_name[playerid]);
	new strkill[1006];
	new points[6];
	points[0] = 100 - PI[playerid][pGunSkill][0];
	points[1] = 100 - PI[playerid][pGunSkill][1];
	points[2] = 100 - PI[playerid][pGunSkill][2];
	points[3] = 100 - PI[playerid][pGunSkill][3];
	points[4] = 100 - PI[playerid][pGunSkill][4];
	points[5] = 100 - PI[playerid][pGunSkill][5];
	if(PI[playerid][pGunSkill][0] > 100) PI[playerid][pGunSkill][0] = 100;
	if(PI[playerid][pGunSkill][1] > 100) PI[playerid][pGunSkill][1] = 100;
	if(PI[playerid][pGunSkill][2] > 100) PI[playerid][pGunSkill][2] = 100;
	if(PI[playerid][pGunSkill][3] > 100) PI[playerid][pGunSkill][3] = 100;
	if(PI[playerid][pGunSkill][4] > 100) PI[playerid][pGunSkill][4] = 100;
	if(PI[playerid][pGunSkill][5] > 100) PI[playerid][pGunSkill][5] = 100;
	format(strkill,1000,""W"SD-Pistol:\t"P"%s "W"%d/100%%\nDesert Eagle:\t"P"%s "W"%d/100%%\nShotGun:\t"P"%s "W"%d/100%%\nMP5\t\t"P"%s "W"%d/100%%\nAK47:\t\t"P"%s "W"%d/100%%\nM4:\t\t"P"%s "W"%d/100%%\n\n\n\
	"W"Стиль боя\tБокс %s\n\
	"W"Стиль боя\tКунг-Фу %s\n\
	"W"Стиль боя\tКик-Бокс %s",
	ToDevelopSkills(PI[playerid][pGunSkill][0],points[0]),PI[playerid][pGunSkill][0],
	ToDevelopSkills(PI[playerid][pGunSkill][1],points[1]),PI[playerid][pGunSkill][1],
	ToDevelopSkills(PI[playerid][pGunSkill][2],points[2]),PI[playerid][pGunSkill][2],
	ToDevelopSkills(PI[playerid][pGunSkill][3],points[3]),PI[playerid][pGunSkill][3],
	ToDevelopSkills(PI[playerid][pGunSkill][4],points[4]),PI[playerid][pGunSkill][4],
	ToDevelopSkills(PI[playerid][pGunSkill][5],points[5]),PI[playerid][pGunSkill][5],
	PI[playerid][pBox] < 1 ? (""G"[Не изучен]"):(""ORANGE"[Изучен]"),
	PI[playerid][pBox] < 2 ? (""G"[Не изучен]"):(""ORANGE"[Изучен]"),
	PI[playerid][pBox] < 3 ? (""G"[Не изучен]"):(""ORANGE"[Изучен]"));
	D(giveplayerid, DIALOG_NONE, DSM, strname, strkill, "Закрыть","");
}
stock ShowWBook(playerid,giveplayerid) {
	new query[138];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `jobinfo` WHERE `ji_uid` ='%d' AND ( `ji_fraction` < 15 OR `ji_fraction` > 22 )", PI[playerid][pID]);
	mysql_tquery(connects, query, "joblist_callback", "ii", playerid, giveplayerid);	
}

stock ShowLic(playerid,giveplayerid) {
	static const f_str[] = ""W"Водительские права: %s\n\
							"W"Лицензия пилота: %s\n\
							"W"Лицензия на водный транспорт: %s\n\
							"W"Лицензия на оружие: %s";
	new string[sizeof(f_str) +100];
	format(string,sizeof(string),f_str,(lic[playerid][0]) ? (""GREEN"Есть") : (""NO"Нет"),(lic[playerid][1]) ? (""GREEN"Есть") : (""NO"Нет"),(lic[playerid][2]) ? (""GREEN"Есть") : (""NO"Нет"),(lic[playerid][3]) ? (""GREEN"Есть") : (""NO"Нет"));
	D(giveplayerid, DIALOG_NONE, DSM, ""P"Лицензии", string, "Закрыть", "");
}
stock ShowPass(playerid,actplayerid) {
	new jobname[32],classname[15],string[1024];
	new houseid = PI[playerid][pHouse]-1;
	jobname = "Безработный";
	if(PI[playerid][pJob] > 0) {
		switch(PI[playerid][pJob]) {
		case 1: jobname = "Водитель автобуса";
		case 2: jobname = "Механик";
		case 3: jobname = "Развозчик продуктов/топлива";
		case 4: jobname = "Развозчик еды";
		case 5: jobname = "Мойщик дорог";
		case 6: jobname = "Чистильщик канализаций";
		case 8: jobname  = "Таксист";
		case 9: jobname  = "Инкассатор";
		}
	}
	new housenumber[15];
	if(houseid > 0) {
		switch(gHouses[houseid][houseClass]) {
		case 0: classname = "Эконом";
		case 1: classname = "Cредний";
		case 2: classname = "Элитный";
		case 3: classname = "Особняк";
		}	
		valstr(housenumber,PI[playerid][pHouse]);
	}
	else {
		housenumber = "Отсутствует";
		classname = "Отсутствует";
	}
	strcat(string, "\n\t"P"ОБЩИЕ ДАННЫЕ:\n\n");
	format(string, sizeof(string), "%s\t"ORANGE"Имя: "W"%s\n\t"ORANGE"Лет в штате: "W"%d\n\t"ORANGE"Место работы: "W"%s\n\t"ORANGE"%s: "W"%s\n\t"ORANGE"Законопослушность: "W"%d\n\n",
	string,player_name[playerid],PI[playerid][pLevel],jobname, (PI[playerid][pSex] == 1) ? ("Жена") : ("Муж"),(strlen(PI[playerid][pMarried]) > 4) ? ("Есть") : ("Нет"),PI[playerid][pZakonp]);
	format(string, sizeof(string), "%s\t"P"ПРОПИСКА:\n\n\t"ORANGE"Дом: "W"%s\n\t"ORANGE"Класс дома: "W"%s\n\n", string,housenumber,classname);

	if(PI[playerid][pRank] > 0 && PI[playerid][pMember] > 0) {
		format(string, sizeof(string), "%s\t"P"ТРУДОВОЕ УСТРОЙСТВО:\n\n\t"ORANGE"Организация: "W"%s\t"ORANGE"Звание: "W"%s\n\n\n",string, FI[PI[playerid][pMember]][fName],GetRankName(PI[playerid][pMember],PI[playerid][pRank]));
	}
	
	else strcat(string, "\t"P"ТРУДОВОЕ УСТРОЙСТВО:\n\t"W"Отсутствует\n\n");
	D(actplayerid,DIALOG_NONE,DSM,"        		{FAD086}ПАСПОРТ        ",string,"Закрыть","");
	return 1;
}
stock Police_eqment(playerid) {
	if(PI[playerid][pMember] != fLSPD && PI[playerid][pMember] != fRCSD && !start_work[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Доступно только для полицейских");
	new string[600];
	format(string,sizeof(string),""P"1."W" Кепка %s\n"P"2."W" Фуражка %s\n"P"3."W" Шлем \"SWAT\" %s\n\
	"P"4."W" Шляпа шерифа %s\n"P"5."W" Мотоциклетный шлем %s\n"P"6."W" Респиратор %s\n"P"7."W" Фонарик %s\n\
	"P"8."W" Бронежилет %s\n"P"9."W" Щит (на руку) %s\n"P"10."W" Щит (на спину) %s\n\
	- Снять все снаряжение",
	(police_eqm[playerid][0]) ? ("{F6B74A}(используется)") : (" "),
	(police_eqm[playerid][1]) ? ("{F6B74A}(используется)") : (" "),
	(police_eqm[playerid][2]) ? ("{F6B74A}(используется)") : (" "),
	(police_eqm[playerid][3]) ? ("{F6B74A}(используется)") : (" "),
	(police_eqm[playerid][4]) ? ("{F6B74A}(используется)") : (" "),
	(police_eqm[playerid][5]) ? ("{F6B74A}(используется)") : (" "),
	(police_eqm[playerid][6]) ? ("{F6B74A}(используется)") : (" "),
	(police_eqm[playerid][7]) ? ("{F6B74A}(используется)") : (" "),
	(police_eqm[playerid][8]) ? ("{F6B74A}(используется)") : (" "),
	(police_eqm[playerid][9]) ? ("{F6B74A}(используется)") : (" "),
	(police_eqm[playerid][10]) ? ("{F6B74A}(используется)") : (" "));
	D(playerid, D_POLICE_EQ, DST, ""P"Полицейское снаряжение", string, "Выбрать", "Закрыть");
	return true;
}
stock ShowGetGun(playerid) {
	if(!PI[playerid][pMember]) return true;
	new string[512];
	new id_str_set_gun[64];
	new team;
	if(GetPlayerInterior(playerid) == 6 && PI[playerid][pMember] == fLSPD) team = fLSPD;
	switch(GetPlayerVirtualWorld(playerid)) {
	case 31:  {
			if(PI[playerid][pMember] == fARMYLS) team = fARMYLS;
		}
	case 6: {
			if(PI[playerid][pMember] == fRCSD) team = fRCSD;
		}
//	case 42: team = fLVPD;
	case 43: {
			if(PI[playerid][pMember] == fFBI) team = fFBI;
		}
	}
	if(!team) return true;
	string = ""W"";
	for(new i = 0 ; i < 12 ; i++) {
		if(FW[i][team][fwGunID] == 0 || FW[i][team][fwGunAmmo] == 0) continue;
		if(FW[i][team][fwArmor] == 1) {
			format(id_str_set_gun, sizeof(id_str_set_gun), ""P"%d."W" Бронежилет\n",i+1);
			strcat(string,id_str_set_gun);
			continue;
		}
		format(string,sizeof(string) , "%s"P"%d."W" %s\t%d\n",string,i+1,FW[i][team][fwName],FW[i][team][fwGunAmmo]);
	}
	D(playerid,dGiveGunTD,DST,""P"Оружие",string,"Выбрать","Отмена");
	return true;
}
CB: AttachTrailerToVehicleEx(trailerid,vehicleid) AttachTrailerToVehicle(trailerid,vehicleid);
CB: UnCallisionForPlayer(playerid) DisableRemoteVehicleCollisions(playerid, false);
CB: OnServerRestarting() {
	SendClientMessageToAll(COLOR_REDD,"World Role Play | Restart...");
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		//save_car(i,0), save_car(i,1);
		SetPlayerInterior(i, 0);
		SetPlayerVirtualWorld(i, 0);
		InterpolateCameraPos(i, 1178.088012, 1204.779541, 105.671997, 2501.051269, 1285.838867, 118.900398, 5000);
		InterpolateCameraLookAt(i, 1175.603149, 1201.194458, 103.228073, 2496.586669, 1285.855346, 116.649597, 5000);
		KickEx(i);
	}
	SendRconCommand("gmx");
	printf("Auto Restart - Reloading...");
	return true;
}
CB: promo_check(playerid, code[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid,COLOR_GREY, "Указанный промокод не найден");
	new code_money, code_skils, code_lics, used_count;
	cache_get_value_index_int(0, 1, code_money);
	cache_get_value_index_int(0, 2, code_skils);
	cache_get_value_index_int(0, 3, code_lics);
	cache_get_value_index_int(0, 5, used_count);
	SetPVarInt(playerid, "code_money_", code_money);
	SetPVarInt(playerid, "code_skills_", code_skils);
	SetPVarInt(playerid, "code_lics_", code_lics);
	SetPVarInt(playerid, "used_count_", used_count);
	new query[200];
	mysql_format(connects, query, sizeof(query), "SELECT * FROM "T_PROMOCODE_USED" WHERE idacca = %d", PI[playerid][pID]);
	mysql_tquery(connects, query, "promo_check2", "ds", playerid, code);
	return 1;
}
CB:promo_check2(playerid, code[])
{
	new rows;
	cache_get_row_count(rows);
	if(rows) {
		SendClientMessage(playerid,COLOR_GREY, "Вы уже использовали промокод");
		DeletePVar(playerid, "code_money_");
		DeletePVar(playerid, "code_skills_");
		DeletePVar(playerid, "code_lics_");
		DeletePVar(playerid, "used_count_");
		return 1;
	}
	new query[300];
	mysql_format(connects, query, sizeof(query), "INSERT INTO "T_PROMOCODE_USED" (idacca,code) VALUE (%d,'%s')", PI[playerid][pID], code);
	mysql_tquery(connects, query, "", "");
	new code_money, used_count,code_skills, code_lics;
	code_money = GetPVarInt(playerid, "code_money_");
	code_skills = GetPVarInt(playerid, "code_skills_");
	code_lics = GetPVarInt(playerid, "code_lics_");
	used_count = GetPVarInt(playerid, "used_count_");

	SendClientMessage(playerid,0xfF1CF46ff,"Вы активировали промокод.");

	if(code_skills != 6)
	{
		new str2[6][13] = {"SD-Pistol","Deagle","ShotGun","MP5","AK-47","M4"};
		new stri[200];
		format(stri,sizeof(stri),"Вы получили полный скилл на оружие{F1CF46} %s",str2[code_skills]);
		SendOk(playerid,stri);
		PI[playerid][pGunSkill][code_skills] = 100;
		save_skill(playerid);
	}
	if(code_lics != 4) {
		new str3[4][20] = {"Вод.права","Полёты","Вод.транспорт","Оружие"};
		new stri[200];
		format(stri,sizeof(stri),"Вы получили лицензию на{F1CF46} %s",str3[code_lics]);
		SendOk(playerid,stri);
		lic[playerid][code_lics] = 1;
		UpdateLicenses(playerid);
	}
	
	if(PI[playerid][pLevel] < 3) {
		PI[playerid][pMPromo] = code_money;
		UpdatePlayerData(playerid, "pMPromo", code_money);
		new str[250];
		format(str,sizeof(str),"При достижении 3-го уровня, Вы получите{AFD848} %d$", code_money);
		SendClientMessage(playerid,COLOR_WHITE, str);
	}
	else
	{
		GiveMoney(playerid, code_money, "промокод");
		new str[250];
		format(str,sizeof(str),"Вы получили{AFD848} %d$"W" за активацию промокода", code_money);
		SendClientMessage(playerid,COLOR_WHITE, str);
	}

	used_count ++;

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, 120, "UPDATE "T_PROMOCODE" SET used_count = %d WHERE code = '%s'", used_count, code);
	mysql_tquery(connects, STRING_GLOBAL, "", "");

	DeletePVar(playerid, "code_money_");
	DeletePVar(playerid, "used_count_");
	return 1;
}

CB: promo_create(playerid, code[], player[]) {
	new rows;
	cache_get_row_count(rows);
	if(rows >= 150) return SendClientMessage(playerid,COLOR_GREY, "Достигнут лимит промокодов (150 шт.)");
	new load_code[32], free_slot = -1;
	for(new i; i < rows; i++) {
		cache_get_value_index(i, 0, load_code, 32);
		if(!strcmp(load_code, code, false)) {
			free_slot = i;
			break;
		}
	}
	if(free_slot != -1) {
		SendClientMessage(playerid,COLOR_GREY, "Указанный промокод уже есть в списке");
		DeletePVar(playerid, "promoname");
		DeletePVar(playerid, "promoskills");
		DeletePVar(playerid, "promolic");
		DeletePVar(playerid, "promomoney");
		return 0;
	}
	new promodays = GetPVarInt(playerid, "promoskills");
	new promoplayers = GetPVarInt(playerid, "promolic");
	new promomoney = GetPVarInt(playerid, "promomoney");
	
	new query[350];
	mysql_format(connects, query, sizeof(query), "INSERT INTO "T_PROMOCODE" (code,money,skills,lics,data,Name) VALUES ('%s',%d,%d,%d,%d,'%s')", code, promomoney, promodays, promoplayers, gettime()+promodays, player);
	mysql_tquery(connects, query, "", "");

	new str2[7][13] = {"SD-Pistol","Deagle","ShotGun","MP5","AK-47","M4","Не выдавать"};
	new str3[5][20] = {"Вод.права","Полёты","Вод.транспорт","Оружие","Не выдавать"};

	new string[356];
	format(string, sizeof(string), "\
		"W"Промокод "P"%s"W" успешно создан!\n\
		Количество денег "GREEN"$%i"W"\n\
		Навыки владения оружием: "ORANGE"%s"W"\n\
		Лицензия: "ORANGE"%s",
	code,promomoney,str2[promodays],str3[promoplayers]);
	D(playerid, DIALOG_NONE, DSM, "Промокод создан", string, "Закрыть", "");
	DeletePVar(playerid, "promoname");
	DeletePVar(playerid, "promolic");
	DeletePVar(playerid, "promoskills");
	DeletePVar(playerid, "promomoney");
	return 1;
}

CB: promo_show(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) {
		SendClientMessage(playerid,COLOR_GREY, "Промокоды не найдены");
		return D(playerid, D_PROMO, DSL, ""P"Промокоды", ""P"1."W" Список промокодов\n"P"2."W" Создать промокод\n"P"3."W" Удалить промокод", "Выбрать", "Назад");
	}
	new code[32], code_money, code_days, used_count;
	new string[2500];
	strcat(string, ""W"Название\t\t"W"Сумма\t\t"W"Использован\n");
	for(new i; i < rows; i++) {
		cache_get_value_index(i, 0, code, 32);
		cache_get_value_index_int(i, 1, code_money);
		cache_get_value_index_int(i, 2, code_days);
		cache_get_value_index_int(i, 5, used_count);
		format(string, sizeof(string),"%s%s\t\t%d$\t\t%d раз\n", string, code, code_money, used_count);
	}
	D(playerid, DIALOG_NONE, DST, "Список промокодов", string, "Закрыть", "");
	return 1;
}

CB: promo_dell(playerid, code[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid,COLOR_GREY, "Указанный промокод не найден");
	new string[128];
	format(string, sizeof(string), ""W"Промокод "ORANGE"%s""W"" успешно удалён", code);
	D(playerid, DIALOG_NONE, DSM, " ", string, "Закрыть", "");
	new query[128];
	mysql_format(connects, query, sizeof(query), "DELETE FROM "T_PROMOCODE" WHERE code = '%s'", code);
	mysql_tquery(connects, query, "", "");
	return 1;
}
stock AdvertTimer() {
	new string[144];
	if(gAdvertTime > 0) gAdvertTime--;
	for(new d;d<MAX_ADVERT_COUNT;d++) {
		if(gAdvert[d][adTime] > 0) gAdvert[d][adTime]--;
		if(gAdvert[d][adCheked] && gAdvert[d][adTime] == 0) {
			if(IsPlayerConnected(gAdvert[d][adID]) && strlen(gAdvert[d][adText])) {
				if(gAdvert[d][adVIP]) {
					format(string,sizeof(string),"VIP | СМИ %s | %s. Объявление от: %s[%d] (тел. %d)",gAdvert[d][adNews],gAdvert[d][adText],gAdvert[d][adSender],gAdvert[d][adID],gAdvert[d][adPhone]);
					SendClientMessageToAll(0xf00ff00ff,string);
				}
				else {
					format(string,sizeof(string),"Объявление: %s. Объявление от: %s[%d] (тел. %d)",gAdvert[d][adText],gAdvert[d][adSender],gAdvert[d][adID],gAdvert[d][adPhone]);
					SendClientMessageToAll(0xf00ff00ff, string);
				}
				
				format(string,sizeof(string),"\t\t\t\tОбъявление допустил(а) в эфир: %s",gAdvert[d][adCheker]);
				SendClientMessageToAll(0xf08a229ff, string);

				strdel(gAdvert[d][adSender],0,24);
				gAdvert[d][adPhone] = 0;
				strdel(gAdvert[d][adText],0,100);
				strdel(gAdvert[d][adCheker],0,24);
				gAdvert[d][adID] = -1;
				gAdvert[d][adBusy] = false;
				gAdvert[d][adCheked] = false;
				gAdvert[d][adCheking] = false;
				gAdvert[d][adTime] = 0;
				gAdvert[d][adVIP] = false;
			}
			else {
				strdel(gAdvert[d][adSender],0,24);
				gAdvert[d][adPhone] = 0;
				strdel(gAdvert[d][adText],0,100);
				strdel(gAdvert[d][adCheker],0,24);
				gAdvert[d][adBusy] = false;
				gAdvert[d][adID] = -1;
				gAdvert[d][adCheked] = false;
				gAdvert[d][adCheking] = false;
				gAdvert[d][adTime] = 0;
				gAdvert[d][adVIP] = false;
			}
		}
	}
	if(gAdvertCount > 0) gAdvertCount--;
	return 1;
}
CB: drug_effect(playerid) {
	new hour, minute;
	gettime(hour, minute);
	SetPlayerTime(playerid, tmphour, tmpminute);
	SetPlayerWeather(playerid, 1);
	SetPlayerDrunkLevel(playerid, 0);
	return 1;
}
CMD:alogin(playerid, params[]) {
	if(GetPVarInt(playerid, "check_alogin") > gettime()) return true;
	new query[156];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `admin` WHERE `Name` = '%s'", player_name[playerid]);
	mysql_tquery(connects, query, "alogin1", "i",playerid);
	SetPVarInt(playerid, "check_alogin", gettime()+5);
	return 1;
}
CMD:ahelp(playerid) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	D(playerid,D_ADMC,DSL,""P"Админ помощь",""P"1."W" Уровень [1]\n"P"2."W" Уровень [2]\n"P"3."W" Уровень [3]\n"P"4."W" Уровень [4]\n"P"5."W" Уровень [5]\n"P"6."W" Уровень [6]\n"P"7."W" Уровень [7]","Выбрать","Отмена");
	return 1;
}
stock SaveGZ(i) {
	new query[256];
	mysql_format(connects, query, sizeof(query),"UPDATE `gangzone` SET `gang_owner`= '%d' WHERE `id` = '%d' LIMIT 1",GZInfo[i][gFrakVlad],GZInfo[i][gID]);
	mysql_pquery(connects,query);
	return 1;
}
stock active_accept(playerid) {
	if(TI[playerid][tDiceID] != INVALID_PLAYER_ID ||
			GetPVarInt(playerid,"hi") ||
			GetPVarInt(playerid,"invstat") != -1 ||
			GetPVarInt(playerid, "lices") ||
			GetPVarInt(playerid, "pts") ||
			GetPVarInt(playerid, "skills") ||
			GetPVarInt(playerid, "lic_") ||
			GetPVarInt(playerid, "uds") ||
			GetPVarInt(playerid, "udjur") ||
			GetPVarInt(playerid, "pass") ||
			GetPVarInt(playerid, "tk_id") ||
			GetPVarInt(playerid, "fpass") ||
			HealOffer[playerid] != INVALID_PLAYER_ID ||
			GetPVarInt(playerid, "repairoffee") ||
			GetPVarInt(playerid, "kiss") ||
			GetPVarInt(playerid, "drugoffee") ||
			GetPVarInt(playerid, "gunoffee") ||
			GetPVarInt(playerid, "ZoneOffer") ||	
			GetPVarInt(playerid, "sim_id_sell") ||
			GetPVarInt(playerid, "bizzProdaet") ||
			GetPVarInt(playerid, "id_hotdog") ||
			GetPVarInt(playerid, "hCarSeller") ||
			GetPVarInt(playerid, "houseSeller")) return 1;
	else return 0;
}

CMD:a(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new string[144],text[130];
	if(sscanf(params,"s[128]",text)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /a [текст]");
	format(string, sizeof(string), "[A-%d] %s[%i]: %s",PI[playerid][pAdmin],player_name[playerid],playerid,text);
	SendAdminMessage(0xfDFC05Dff, string);
	return true;
}

CMD:jt(playerid)
{
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
	return true;
}

CMD:dump(playerid) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	//Profiler_Dump();
	return true;
}
CMD:kick(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new text[130],string[356], giveplayerid;
	if(sscanf(params, "us[128]",giveplayerid,text)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /kick [playerid] [причина]");
	if(PlayerAdminFix[playerid] > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Можно раз в 10 секунд");
	PlayerAdminFix[playerid] = gettime() + 10;
	if(isAdminStatus(player_name[giveplayerid])) return 1;
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if(IsAIP(text))return 1;
	if(strlen(text) > 30) return SendClientMessage(playerid, COLOR_GREY, "Не больше 30 символов");
	if(!TI[giveplayerid][tLogin]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не авторизован на сервере");
	format(string, 128, "Администратор %s кикнул %s. Причина: %s",player_name[playerid],player_name[giveplayerid],text);
	SendAdminActionMessage(COLOR_LIGHTRED, string);
	WriteLog(LOG_KICK,player_name[playerid],player_name[giveplayerid],text);
	gAdmin[playerid][ADMIN_KICK] ++;
	new hour,minute;
	new year,month,day;

	getdate(year, month, day);
	gettime(hour,minute);
	static const f_str[] = "\
			"W"Внимание! Вы были "NO"кикнуты"W" с сервера.\n\n\
			"W"Кикнул: "NO"%s\n\
			"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
			"W"Причина: "ORANGE"%s\n\n\
			"W"Если вы считаете, что это ошибка, сделайте скриншот(F8) данного окна,\n\
			иначе Ваша жалоба будет не принята.";
	format(string,sizeof(string),f_str,player_name[playerid], day, month, year,hour, minute, text);

	new str[MAX_PLAYER_NAME+1];
	format(str,sizeof(str),"%s",player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрыть", "");
	KickEx(giveplayerid);
	return true;
}
alias:pm("ans");
CMD:pm(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new text[130],string[144],giveplayerid;
	if(sscanf(params, "us[128]",giveplayerid,text)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /pm [playerid] [текст]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(strlen(text) > 150) return SendClientMessage(playerid, COLOR_GREY, "Не больше 150 символов");
	if(IsAIP(text)) return 1;
	if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя ответить самому себе");
	format(string, sizeof(string), "Администратор %s[%i] ответил:"W" %s",player_name[playerid],playerid,text);
	SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
	format(string, sizeof(string), "Администратор %s[%d] ответил %s[%d]:"W" %s",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid,text);
	SendAdminMessage(COLOR_LIGHTRED, string);
	PlayerPlaySound(giveplayerid, 4203, 0.0, 0.0, 0.0); 
	return true;
}

CMD:reps(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(!rep_system) return SendClientMessage(playerid, COLOR_GREY, "Временно недоступно. Воспользуйтесь /pm");
	for(new i;i<MAX_REPORTS;i++) {
		if(PlayerReport[i] != -1) {
			if(ReportSlot[i] == 1) continue;
			new string[400];
			format(string, sizeof(string), ""W"Жалоба от %s[%i]\n\n"G"%s\n", player_name[PlayerReport[i]], PlayerReport[i], TextReport[i]);
			D(playerid,D_REPORT_1,DSI, ""P"Репорт",string,"Принять","Отмена");
			ReportID[playerid] = i;
			ReportSlot[i] = 1;
			return 1;
		}
	}
	SendClientMessage(playerid, COLOR_GREY, "Репорт пуст");
	return 1;
}

CMD:gg(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /gg [id]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	new string[128]; 
	format(string,sizeof(string),"Администратор %s[%i] желает Вам приятной игры!",player_name[playerid],playerid);
	SendClientMessage(giveplayerid, 0xfB9DF4Eff, string);
	format(string, sizeof(string), "%s[%i] к %s[%i] пожелал приятной игры",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid);
	SendAdminMessage(COLOR_LIGHTRED, string);
	PlayerPlaySound(giveplayerid, 4203, 0.0, 0.0, 0.0);
	return true;
}
CMD:mute(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new time, text[33],string[144],giveplayerid;	
	if(sscanf(params, "uds[32]",giveplayerid,time,text)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /mute [playerid] [минуты] [причина]");
	if(PlayerAdminFix[playerid] > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Можно раз в 10 секунд");
	PlayerAdminFix[playerid] = gettime() + 10;
	if(isAdminStatus(player_name[giveplayerid])) return 1;
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if(PI[giveplayerid][pMute]) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже имеется блокировка чата");
	if(IsAIP(text))return 1;
	if(strlen(text) > 30) return SendClientMessage(playerid, COLOR_GREY, "Причина должна быть меньше 30 символов");
	if(time < 1 || time > 300) return SendClientMessage(playerid, COLOR_GREY, "Выдать бан чата можно максимум на 300 минут");
	PI[giveplayerid][pMute] = time*60;
	UpdatePlayerData(giveplayerid,"mute",PI[giveplayerid][pMute]);
	format(string, sizeof(string), "Администратор %s заблокировал чат %s на %d мин. Причина: %s",player_name[playerid],player_name[giveplayerid], time, text);
	SendAdminActionMessage(COLOR_LIGHTRED, string);
	SendOk(giveplayerid, "Время до снятия бана чата: "P"/time");
	gAdmin[playerid][ADMIN_MUTE] ++;
	WriteLog(LOG_MUTE,player_name[playerid],player_name[giveplayerid],text);
	return true;
}
CMD:offunmute(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new string[220],giveplayerid;
	if(isnull(params) || strlen(params) > 25) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /offunmute [Nick Name]");
	sscanf(params, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок онлайн");
	new query[128];
	mysql_format(connects, query, sizeof(query),"SELECT `mute` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", params);
	new mute = 0;
	new Cache:result = mysql_query(connects, string);
	new rows = cache_num_rows();
	if(rows > 0) {
		cache_get_value_int(0, "mute", mute);
		if(mute == 0) {
			SendClientMessage(playerid, COLOR_GREY, "У данного игрока нет бана чата");
			cache_delete(result);
			return 1;
		}
		mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `mute` = '0' WHERE `Name` = '%s' LIMIT 1", params);
		mysql_pquery(connects,query);
		new str[128];
		format(str, sizeof(str), "[A] %s[%d] снят бан чата в оффлайн игроку %s", player_name[playerid], playerid, params);
		AdmMSG(0xAFAFAFAA, str);
	}
	cache_delete(result);
	return 1;
}
CMD:unmute(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new string[144],giveplayerid;	
	if(sscanf(params, "u",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /unmute [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(!PI[giveplayerid][pMute]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет бана чата");
	PI[giveplayerid][pMute] = 0;
	UpdatePlayerData(giveplayerid,"mute",0);
	format(string, sizeof(string), "Администратор %s снял бан чата у %s",player_name[playerid],player_name[giveplayerid]);
	SendAdminActionMessage(COLOR_LIGHTRED, string);
	WriteLog(LOG_UNMUTE,player_name[playerid],player_name[giveplayerid],"снял бан чата");
	return true;
}
CMD:offmute(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new name[MAX_PLAYER_NAME],time,reason[31],giveplayerid;

	if(sscanf(params, "s[20]is[30]",name,time,reason)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /offmute [ник] [минуты] [причина]");
	if(strlen(reason) > 30) return SendClientMessage(playerid, COLOR_GREY, "Причина должна быть меньше 30 символов");
	sscanf(name, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок онлайн");
	if(time > 300 || time < 5) return SendClientMessage(playerid, COLOR_GREY, "От 5 до 300 минут");
	if(GetPVarInt(playerid,"ban")>gettime()) return SendClientMessage(playerid, COLOR_GREY, "Можно раз в 10 секунд");
	SetPVarInt(playerid,"ban",gettime()+10);
	new query[128];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1",name);
	new Cache:result = mysql_query(connects, query);
	new rows = cache_num_rows();
	if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не найден");
	new query_str[128];
	mysql_format(connects, query_str, sizeof(query_str),"UPDATE `accounts` SET mute = '%d' WHERE BINARY Name = '%s'",time*60,name);
	mysql_tquery(connects,query_str);
	cache_delete(result);

	new string[144];
	format(string, sizeof(string), "Вы выдали мут игроку %s на %d минут",name,time);
	SendClientMessage(playerid, COLOR_LIGHTRED, string);

	format(string, sizeof(string), "[A] (OFFMUTE) %s[%d] выдал мут игроку %s на %d минут. Причина: %s",player_name[playerid],playerid,name,time,reason);
	AdmMSG(0xAFAFAFAA, string);
	gAdmin[playerid][ADMIN_MUTE] ++;
	WriteLog(LOG_MUTE,player_name[playerid],name,reason);
	return 1;
}

CMD:weap(playerid,params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return	SendClientMessage(playerid, COLOR_WHITE,"Используйте: /weap [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	new Gun[13], Ammos[13],string[700];
	for(new i = 0; i < 13; i++) {
		GetPlayerWeaponData(giveplayerid, i, Gun[i], Ammos[i]);
		format(string, sizeof(string), "%s"W"Slot: %i\t Weaponid: %i\t Ammo: %i\n", string, i, Gun[i], Ammos[i]);
		if(i == 12) format(string, sizeof(string), "%s\n",string);
	}
	D(playerid, DIALOG_NONE, DSM, player_name[giveplayerid], string, "Weapon", "");
	return 1;
}
CMD:cweap(playerid, params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /cweap [id]");
	new string[150];
	ResetPlayerWeapons(id);
	format(string,sizeof(string),"Вы отобрали оружие у игрока %s[%d]",player_name[id],id);
	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
	return true;
}
CMD:fspcar(playerid)
{
	if(!PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
	new string[128];
	if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fSpawnRang]) {
		format(string,128,"Доступно с %i ранга", FI[PI[playerid][pMember]][fSpawnRang]);
		SendClientMessage(playerid, COLOR_GREY,string);
		return true;
	}
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(!IsValidVehicle(i)) continue;
		if(VehicleInfo[i][vTeam] != PI[playerid][pMember]) continue;
		if(IsVehicleOccupied(i)) continue;
		SetVehicleToRespawn(i);
	}
	format(string,sizeof(string),"[F] %s %s заспавнил незанятые машины", GetRankName(PI[playerid][pMember],PI[playerid][pRank]),player_name[playerid],playerid);
	SendFamilyMessage(PI[playerid][pMember],COLOR_LIGHTRED, string);
	return true;
}
stock GetPlayerAdminLevel(playerid)
{
    new levelll;
    levelll = PI[playerid][pAdmin];
    if(ahMenu[playerid][2]) levelll = ahMenu[playerid][2];
    return levelll;
}
CMD:admins(playerid) {
	if(PI[playerid][pAdmin] < 1 && !PI[playerid][pPremium]) return true;
	new countleader = 0;
	new string[2000],str[156];
	new Admin[64];
	string = "ID\tНик\tДолжность\tУровень\n";
	new a_str[64];
	foreach(new i:Player) 
	{
		if(!IsPlayerConnected(i) || (!TI[i][tLogin]) || (PI[i][pAdmin] <= 0)) continue;
		if(ahMenu[i][0]) continue;
		switch(GetPlayerAdminLevel(i)) {
		case 1: Admin = "{FFCC00}Младший Модератор";
		case 2: Admin = "{FFCC00}Модератор";
		case 3: Admin = "{FFCC00}Старший Модератор";
		case 4: Admin = "{009900}Администратор";
		case 5: Admin = "{6369ff}Главный Администратор";
		case 6: Admin = "{ff0036}Спец. Администратор";
		case 7: Admin = "{FF0000}Основатель";
		default: Admin = "{FF0000}Основатель";
		}
		if(PI[i][pPrefix_i]) format(Admin,64,PI[i][pPrefix_s]);
		format(a_str,sizeof(a_str),"\t%s\t%d",Admin,GetPlayerAdminLevel(i));
		if(ahMenu[i][1]) format(a_str,64," ");
		format(str, sizeof(str), ""W"%i\t%s%s%s\n",i,player_name[i],a_str,TI[i][tAFK]>=3?("{ffa800} [AFK]"):("")),strcat(string,str);
		countleader++;
	}
	if(countleader > 0) {
		D(playerid, DIALOG_NONE, DSTH, ""P"Администрация",string, "Закрыть", "");
		new str_adm[128];
		format(str_adm, sizeof(str_adm), "В сети "P"%i"W" администратор(ов)", countleader);
		SendOk(playerid,str_adm);
	}
	else D(playerid, DIALOG_NONE, DSM, ""P"Администрация",""W"Нет администраторов в сети", "Закрыть", "");
	return 1;
}
CMD:afklist(playerid) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new count = 0 ;
	new string[3000];
	foreach(new i : Player) {
		if(!TI[i][tLogin]) continue;
		if(TI[i][tAFK] < 3) continue;
		new str[128];
		format(str, sizeof(str), ""W"%s[%d] | %d LVL | "NO"AFK: %d\n", player_name[i], i, PI[i][pLevel], TI[i][tAFK]);
		strcat (string, str);
		count++;
	}
	if(count == 0) return SendClientMessage(playerid, COLOR_GREY, "Нет игроков в AFK");
	else D(playerid,DIALOG_NONE,DSM, ""P"Игроки в AFK", string, "Закрыть", "");
	return 1 ;
}
CMD:jail(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new time,text[31],string[144],giveplayerid;
	if(sscanf(params, "uds[30]",giveplayerid,time,text)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /jail [playerid] [минуты] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(PI[giveplayerid][pJailTime]) return SendClientMessage(playerid, COLOR_GREY, "Игрок в тюрьме");
	if(time > 300 || time < 1) return SendClientMessage(playerid, COLOR_GREY, "От 1 до 300 минут");
	if(strlen(text) > 30) return SendClientMessage(playerid, COLOR_GREY, "Причина должна быть меньше 30 символов");
	if(IsAIP(text))return 1;
	format(string, sizeof(string), "Вы посадили %s в тюрьму",player_name[giveplayerid]);
	SendClientMessage(playerid, COLOR_LIGHTRED, string);

	format(string, sizeof(string), "Администратор %s посадил в ДеМорган %s на %d минут. Причина: %s",player_name[playerid],player_name[giveplayerid],time,text);
	SendAdminActionMessage(COLOR_LIGHTRED, string);

	ResetPlayerWeapons(giveplayerid);
	PI[giveplayerid][pJail] = 3;
	PI[giveplayerid][pJailTime] = time*60;

	UpdatePlayerData(giveplayerid,"pJailTime", PI[giveplayerid][pJailTime]);
	UpdatePlayerData(giveplayerid,"pJail", 3);
	
	start_work[giveplayerid] = 0;

	GameTextForPlayer(giveplayerid, "~w~YOU IN ~R~JAIL", 5000, 4);
	format(string, sizeof(string), "Вы были посажены в тюрьму администратором %s на %i минут(ы). Причина: %s", player_name[playerid], time, text);
	SendOk(giveplayerid, string);
	SendOk(giveplayerid, "Время до выхода на свободу: {FCCB37}/time");
	PlayerSpawn(giveplayerid);
	if(giveplayerid != playerid) gAdmin[playerid][ADMIN_JAIL] ++;
	WriteLog(LOG_JAIL,player_name[playerid],player_name[giveplayerid],text);
	return true;
}
CMD:offunjail(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new string[220],giveplayerid;
	if(isnull(params) || strlen(params) > 25) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /offunjail [Nick Name]");
	sscanf(params, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок онлайн");
	mysql_format(connects, string, sizeof(string),"SELECT `pJailTime` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", giveplayerid);
	new jail = 0;
	new Cache:result = mysql_query(connects, string);
	new rows = cache_num_rows();
	if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не найден");
	cache_get_value_int(0, "pJailTime", jail);
	if(jail == 0) {
		SendClientMessage(playerid, COLOR_GREY, "Данный игрок не находится в КПЗ");
		cache_delete(result);
		return 1;
	}
	new query[350];
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pJailTime` = '0',`pJail` = '0' WHERE `Name` = '%s' LIMIT 1", params);
	mysql_pquery(connects,query);
	new str[128];
	format(str, sizeof(str), "[A] %s[%d] вытащил изз КПЗ в оффлайн игрока %s", player_name[playerid], playerid, params);
	AdmMSG(0xAFAFAFAA, str);
	
	SendClientMessage(playerid,COLOR_WHITE,"Вы успешно достали игрока с КПЗ");
	cache_delete(result);
	return 1;
}
CMD:offjail(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new name[MAX_PLAYER_NAME],time,reason[31],giveplayerid;
	if(sscanf(params, "s[20]is[30]",name,time,reason)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /offjail [ник] [минуты] [причина]");
	if(strlen(reason) > 30) return SendClientMessage(playerid, COLOR_GREY, "Причина должна быть меньше 30 символов");
	sscanf(name, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок онлайн");
	if(time > 300 || time < 5) return SendClientMessage(playerid, COLOR_GREY, "От 5 до 300 минут");
	new query[128];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", name);
	new Cache:result = mysql_query(connects, query);
	new rows = cache_num_rows();
	if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не найден");
	new query_str[350];
	mysql_format(connects, query_str, sizeof(query_str),"UPDATE  `accounts` SET pJail = '3',pJailTime = '%d' WHERE BINARY Name = '%s'",time*60,name);
	mysql_tquery(connects,query_str);
	cache_delete(result);
	new string[128];
	format(string, sizeof(string), "Вы посадили %s в тюрьму на %d минут",name,time);
	SendClientMessage(playerid, COLOR_LIGHTRED, string);
	format(string, sizeof(string), "Администратор %s посадил в ДеМорган %s на %d минут. Причина: %s",player_name[playerid],name,time,reason);
	SendAdminActionMessage(COLOR_LIGHTRED, string);
	gAdmin[playerid][ADMIN_JAIL] ++;
	WriteLog(LOG_JAIL,player_name[playerid],name,reason);
	return 1;
}
CMD:unjail(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /unjail [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(!PI[giveplayerid][pJailTime] && PI[giveplayerid][pJail] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в тюрьме");
	new string[128];
	format(string, sizeof(string), "Вы освободили %s", player_name[giveplayerid]);
	SendClientMessage(playerid, 0x09B000AA, string);
	format(string, sizeof(string), "[A] %s[%d] выпустил игрока %s[%d] из тюрьмы.",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid);
	AdmMSG(CADMIN_INFO,string);
	format(string, sizeof(string), "Администратор %s[%d] выпустил Вас на свободу!",player_name[playerid],playerid);
	SendOk(giveplayerid,string);
	PI[giveplayerid][pJailTime] = 0;
	PI[giveplayerid][pJail] = 0;
	UpdatePlayerData(giveplayerid,"pJailTime", 0);
	UpdatePlayerData(giveplayerid,"pJail", 0);
	PlayerSpawn(giveplayerid);
	WriteLog(LOG_UNJAIL,player_name[playerid],player_name[giveplayerid],"выпустил из тюрьмы");
	return 1;
}
CMD:prisoners(playerid, const params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;

	new string[(57+MAX_PLAYER_NAME-4+3+11+1)*30];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!PI[i][pJailTime]) continue;
		format(string, sizeof(string), "%s"ORANGE"%s"W" | ID: "P"%d"W" | Время: "GREEN"%d\n", string, player_name [i], i, PI[i][pJailTime]);
	}
	if(isnull(string)) SendClientMessage(playerid, COLOR_GREY, "Заключенных нет");
	else D(playerid, DIALOG_NONE, DSM, ""P"Список заключенных", string, "Закрыть", "");
	return 1;
}
alias:aad("msg");
CMD:aad(playerid, params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 100) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /aad [сообщение]");
	if(GetPVarInt(playerid,"aad") > gettime() && PI[playerid][pAdmin] < 4) {
		SendClientMessage(playerid, COLOR_GREY, "Можно раз в 15 секунд");
		return false;
	}
	SetPVarInt(playerid,"aad",gettime()+15);
	new string[144];
	format(string, sizeof(string), "Администратор %s: %s", player_name[playerid], params);
	SendClientMessageToAll(0xFFCD00AA,string);
	return 1;
}
CMD:gettime(playerid, params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /gettime [ид игрока]");
	new string[800];
	if(PI[giveplayerid][pMute] > 0) {
		format(string, 128, "Осталось молчать: "P"%d"W" секунд", PI[giveplayerid][pMute]);
		SendOk(playerid, string);
	}
	if(PI[giveplayerid][pJailTime] > 0) {
		format(string, 128, "Осталось сидеть: "P"%d"W" секунд", PI[giveplayerid][pJailTime]);
		SendUse(playerid, string);
	}
	new hour, minuite, second, year, month, day, saturday = 1310155200, w = gettime(), day_week;
	gettime(hour, minuite, second);
	getdate(year, month, day);
	while(w - saturday > 60 * 60 * 24) {
		w -= 60 * 60 * 24;
		day_week ++;
	}
	while(day_week >= 7) day_week -= 7;
	static const Names_Months[12][12] = {"января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"};
	static const Names_Days[7][12] = {"суббота","воскресенье","понедельник","вторник","среда","четверг","пятница"};
	format(string, sizeof(string), "\
		"W"Текущее время: "P"%02d:%02d\n\
		"W"Сегодняшняя дата: {33AA33}%s, %d %s %04d г.\n\n\
		"W"Время в игре за час:\t\t"YELLOW"%d мин\n\
		"W"Время в игре за сегодня:\t"P"%s\n\
		"W"Время в игре за вчера:\t"P"%s\n\
		"W"AFK за сегодня:\t\t"ORANGE"%s\n\
		"W"AFK за вчера:\t\t\t"ORANGE"%s\n\n\
		"W"Отредактированных объявлений за сегодня: "ORANGE"%d",
	hour, minuite,
	Names_Days[day_week], day, Names_Months[month-1], year,
	PI[giveplayerid][pPlayTime][0],
	ConvertsCmdTime(gOnlinePlayer[giveplayerid][0]),
	ConvertsCmdTime(gOnlinePlayer[giveplayerid][1]),
	ConvertsCmdTime(gOnlinePlayerAFK[giveplayerid][0]),
	ConvertsCmdTime(gOnlinePlayerAFK[giveplayerid][1]));
	D(playerid, DIALOG_NONE, DSM, ""P"Точное время", string, "Закрыть", "");
	return 1;
}
CMD:alock(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new Float:X,Float:Y, Float:Z;
	GetVehiclePos(GetNearestVehicle(playerid), X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid,2.5,X, Y, Z)) return SendClientMessage(playerid, COLOR_GREY, "Вы не рядом с автомобилем!");
	GetVehicleParamsEx(GetNearestVehicle(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
	switch(doors) {
	case 0: GameTextForPlayer(playerid, "~r~LOCK", 5000, 3), SetVehicleDoorStatus(GetNearestVehicle(playerid), playerid);
	case 1: GameTextForPlayer(playerid, "~g~UNLOCK", 5000, 3), SetVehicleDoorStatus(GetNearestVehicle(playerid), playerid);
	}
	return true;
}
CMD:tp(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 && dostup[playerid] == 0 && PI[playerid][pYoutube] == 0) return true;
	D(playerid, D_TP_LIST, DSL,""P"Телепорт", ""P"1."W" Организации\n"P"2."W" Работы\n"P"3."W" Прочее\n"P"4."W" Админ зона", "Выбрать", "Отмена");
	return true;
}
CMD:yhelp(playerid) {
    if(PI[playerid][pYoutube] == 0) return true;
    D(playerid,DIALOG_NONE,DSM, ""P"Команды ютубера","{FCCB37}/hp"W" - пополнить свои жизни\n\
	{FCCB37}/aveh"W" - создать транспорт\n\
	{FCCB37}/gomp"W" - создать мероприятие\n\
	{FCCB37}/yskin"W" - выдать себе временный скин\n\n\
	"G"*"W" Открыт телепорт по метке на карте","Закрыть","");
	return true;
}
CMD:serv(playerid) {
    if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new str[450];
	format(str,sizeof(str),"Посетило сервер\t%d человек(а)\nЗарегистрировано\t%d человек(а)",serv_stats[0],serv_stats[1]);
	D(playerid,DIALOG_NONE,DSL, ""P"Статистика за сегодня",str,"X","");
	return true;
}
CMD:aveh(playerid) {
   if(PI[playerid][pYoutube] == 0) return true;
   D(playerid,D_YOUTUBE,DSL, ""P"Транспорт",""P"1."W" Mitsubishi Lancer\n"P"2."W" NRG-500\n"P"3."W" BMX\n"P"4."W" Vortex\n"P"5."W" S.W.A.T\n"P"6."W" Monster\n"P"7."W" Bugatti Veyron\n"P"8."W" Maverick","Выбрать","Закрыть");
   return true;
}
CMD:yskin(playerid, params[]) {
	if(PI[playerid][pYoutube] == 0) return true;
	new skin;
	if(sscanf(params, "i", skin)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /tskin [id скина]");
	if(skin == 74 || skin > 311 || skin < 1) return SendClientMessage(playerid, COLOR_GREY, "Неправильный ID скина!");
	A_SetPlayerSkin(playerid, skin);
	SendOk(playerid,"Вы изменили себе скин");
	return true;
}
CMD:setyt(playerid, params[])
{
   if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
   new name[24], string[350];
   if(sscanf(params,"s[24]i",name, params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /setyt [имя игрока] [1 - выдать, 0 - забрать]");
   mysql_format(connects, string, sizeof(string),"SELECT * FROM `accounts` WHERE `Name` = '%s'", name);
   mysql_pquery(connects, string, "make_youtube", "dsd",playerid, name, params[0]);
   return true;
}
CMD:re(playerid,params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Запрещено начинать слежку с транспорта");
	new giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /re(con) [ид игрока]");
	if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(!TI[giveplayerid][tLogin]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не авторизован");
	if(SERIU[playerid][sID] == INVALID_PLAYER_ID) {
		//if(TI[playerid][tSpectate]==true) SpecPl(playerid,false);
		TI[playerid][preOrg] = PI[playerid][pMember];
		TI[playerid][preOrgg] = PI[playerid][pRank];
		GetPlayerPos(playerid,TI[playerid][Admin_X],TI[playerid][Admin_Y],TI[playerid][Admin_Z]);
		avir[playerid] = GetPlayerVirtualWorld(playerid);
		aint[playerid] = GetPlayerInterior(playerid);
		//TogglePlayerControllable(playerid,true);
		PlayerTextDrawShow(playerid,RECON[playerid]);
	}
	start_work[playerid] = true;
	PI[playerid][pMember] = PI[giveplayerid][pMember];
	PI[playerid][pRank] = 1;
	TI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	SpecPlayer(playerid,giveplayerid);
	ShowMenuForPlayer(specmenu,playerid);
	return 1;
}
CMD:reoff(playerid) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	Lastspec[playerid]=SERIU[playerid][sID];
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) SpecPl(playerid,false);
	HideMenuForPlayer(specmenu,playerid);
	SettingSpawn(playerid);
	SetHealth(playerid,100);
	if(GetPVarInt(playerid, "ppkz")) EndCapt(playerid);
	return 1;
}
CMD:getskills(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /getskills [id игрока]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, not_id);
	new strname[56];
	format(strname, sizeof(strname), "{ffcf00}Навыки владения оружия %s", player_name[giveplayerid]);
	new strkill[1006];
	new points[6];
	points[0] = 100 - PI[giveplayerid][pGunSkill][0];
	points[1] = 100 - PI[giveplayerid][pGunSkill][1];
	points[2] = 100 - PI[giveplayerid][pGunSkill][2];
	points[3] = 100 - PI[giveplayerid][pGunSkill][3];
	points[4] = 100 - PI[giveplayerid][pGunSkill][4];
	points[5] = 100 - PI[giveplayerid][pGunSkill][5];
	format(strkill,1000,""W"SD-Pistol:\t"P"%s "W"%d/100%%\nDesert Eagle:\t"P"%s "W"%d/100%%\nShotGun:\t"P"%s "W"%d/100%%\nMP5\t\t"P"%s "W"%d/100%%\nAK47:\t\t"P"%s "W"%d/100%%\nM4:\t\t"P"%s "W"%d/100%%",
	ToDevelopSkills(PI[giveplayerid][pGunSkill][0],points[0]),PI[giveplayerid][pGunSkill][0],
	ToDevelopSkills(PI[giveplayerid][pGunSkill][1],points[1]),PI[giveplayerid][pGunSkill][1],
	ToDevelopSkills(PI[giveplayerid][pGunSkill][2],points[2]),PI[giveplayerid][pGunSkill][2],
	ToDevelopSkills(PI[giveplayerid][pGunSkill][3],points[3]),PI[giveplayerid][pGunSkill][3],
	ToDevelopSkills(PI[giveplayerid][pGunSkill][4],points[4]),PI[giveplayerid][pGunSkill][4],
	ToDevelopSkills(PI[giveplayerid][pGunSkill][5],points[5]),PI[giveplayerid][pGunSkill][5]);
	D(playerid, DIALOG_NONE, DSM, strname, strkill, "Закрыть","");
	return 1;
}
//-----------------------------------------[2 уровень]-------------------------------------------//
CMD:aimcheck(playerid) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(SERIU[playerid][sID] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Вы ни за кем не следите");
	new targetid = GetPlayerTargetPlayer(SERIU[playerid][sID]);
	if(targetid != INVALID_PLAYER_ID && GetPlayerState(targetid) == 1 && TI[targetid][tAFK] < 3)  {
		new Float:x[2], Float:y[2], Float:z[2], Float:a;
		GetPlayerPos(SERIU[playerid][sID], x[0], y[0], z[0]);
		GetPlayerFacingAngle(SERIU[playerid][sID], a);
		GetXYInFrontOfPoint(x[0], y[0], a, -3.0);
		new Float:aimhp;
		GetPlayerHealth(targetid,aimhp);
		SetPVarFloat(targetid,"aimtest",aimhp);
		GetPlayerPos(targetid, x[1], y[1], z[1]);
		SetPlayerPosAC(targetid, x[0], y[0], z[0],TI[targetid][tVirtualWorld], TI[targetid][tInterior]);
		SetHealth(targetid,300);
		SendClientMessage(targetid,COLOR_YELLOW,"Не волнуйтесь! Это обычная проверка на аим");
		SetTimerEx("onPTMCheck", 500, false, "iifffi", SERIU[playerid][sID], targetid, x[1], y[1], z[1], playerid);
		new string[128];
		format(string, sizeof string, "[A] %s[%d] проверяет игрока %s[%d] на аим", player_name[playerid],playerid, player_name[SERIU[playerid][sID]], SERIU[playerid][sID]);
		SendAdminMessage(COLOR_GREY, string);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок ни в кого не целится");
	return 1;
}
CMD:get(playerid,params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 23)  return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /get [Nick Name]");
	new query[256];
	mysql_format(connects, query, sizeof(query),"SELECT `pID`, `Name`, `pCash`, `pLevel`, `pIpReg`, `pvIp`, `pDataReg`, `donatemoney` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", params);
	mysql_tquery(connects, query, "get_info_player", "i", playerid);
	return 1;
}
CMD:spcar(playerid, params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	return true;
}
CMD:gotocar(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /gotocar [id]");
	new Float: x,Float:y,Float:z;
	GetVehiclePos(params[0],x,y,z);
	SetPlayerPosAC(playerid,x,y,z,GetVehicleVirtualWorld(params[0]),0);
	return true;
}
CMD:getherecar(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new id, string[150], Float:X, Float:Z, Float:Y;
	if(sscanf(params,"d",id)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /getherecar [id]");
	GetPlayerPos(playerid,X,Y,Z);
	SetVehicleVirtualWorld(id,GetPlayerVirtualWorld(playerid));
	SetVehiclePos(id, X-4, Y, Z+1);
	format(string,sizeof(string),"Вы телепортировали к себе авто ID: %d",id);
	SendOk(playerid,string);
	return true;
}
alias:goto("g");
CMD:goto(playerid,params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /g(oto) [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(playerid == giveplayerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if(!TI[giveplayerid][tLogin]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не авторизован на сервере");
	new Float:X, 
Float:Y, 
Float:Z, 
Float:A;
	switch(GetPlayerState(giveplayerid)) {
	case PLAYER_STATE_DRIVER, PLAYER_STATE_PASSENGER: {
			GetVehiclePos(GetPlayerVehicleID(giveplayerid), X, Y, Z);
			GetVehicleZAngle(GetPlayerVehicleID(giveplayerid), A);
		}
	case PLAYER_STATE_ONFOOT: {
			GetPlayerPos(giveplayerid, X, Y, Z);
			GetPlayerFacingAngle(giveplayerid, A);
		}
	default: return SendClientMessage(playerid, COLOR_GREY, "Игрок не заспавнился");
	}
	switch(GetPlayerState(playerid)) {
	case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER: {
			SetPlayerPosAC(playerid,X,Y+1.5,Z,GetPlayerVirtualWorld(giveplayerid),GetPlayerInterior(giveplayerid));
			SetPlayerFacingAngle(playerid,A);
		}
	case PLAYER_STATE_DRIVER: {
			new vehicleid = GetPlayerVehicleID(playerid);
			SetVehiclePos(vehicleid, X, Y+1.5, Z);
			SetVehicleZAngle(vehicleid, A);
			LinkVehicleToInterior(vehicleid,GetPlayerInterior(giveplayerid));
			SetVehicleVirtualWorld(vehicleid,GetPlayerVirtualWorld(giveplayerid));
		}
	default: return 1;
	}
	if(TI[giveplayerid][tSelectedBusinessID]) TI[playerid][tSelectedBusinessID] = TI[giveplayerid][tSelectedBusinessID];
	if(TI[giveplayerid][tSelectHouse]) TI[playerid][tSelectHouse] = TI[giveplayerid][tSelectHouse];
	return 1;
}
CMD:hp(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 && dostup[playerid] == 0 && PI[playerid][pYoutube] == 0) return true;
	SetHealth(playerid, 100);
	SetFullness(playerid, 100);
	if(IsPlayerInAnyVehicle(playerid)) {
		SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
		RepairVehicle(GetPlayerVehicleID(playerid));
		return true;
	}
	return true;
}
alias:spawn("sp");
CMD:spawn(playerid, const params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	PlayerSpawn(playerid);
	return true;
}
CMD:fv(playerid, const params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(IsPlayerInAnyVehicle(playerid)) {
		SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
		RepairVehicle(GetPlayerVehicleID(playerid));
		return true;
	}
	else {
		if(sscanf(params,"u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /fv [ID игрока]");
		if(GetPlayerState(giveplayerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не в автомобиле");
		SetVehicleHealth(GetPlayerVehicleID(giveplayerid), 1000.0);
		RepairVehicle(GetPlayerVehicleID(giveplayerid));
		return 1;
	}
}
CMD:atipster(playerid,params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;

	new fraction_member;		
	if(sscanf(params,"i", fraction_member)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /atipster [ID фракции]");
	if(!(1 <= fraction_member <= MAX_FRACTIONS)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /atipster [ID фракции]");

	if(GetPVarInt(playerid,"admin_tipster")) {
		SendOk(playerid,"Вы отключили прослушку");
		DeletePVar(playerid,"admin_tipster");
	}
	else {
		SetPVarInt(playerid,"admin_tipster", fraction_member);
		new string[70];
		format(string, sizeof(string),"Вы начали прослушку фракции %s", FI[fraction_member][fName]);
		SendOk(playerid,string);
		SendOk(playerid,"Используйте /tipster еще раз чтобы отключить прослушку");
	}	
	return 1;
}
CMD:astats(playerid, params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /astats [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	ShowStats(playerid,giveplayerid,1);
	return true;
}
//-----------------------------------------[3 уровень]-------------------------------------------//
CMD:tskin(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0 || PI[playerid][pYoutube] == 0) return true;
	new skin,giveplayerid;
	if(sscanf(params, "ud", giveplayerid,skin)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /tskin [id игрока] [id скина]");
	if(skin == 74 || skin > 311 || skin < 1) return SendClientMessage(playerid, COLOR_GREY, "Неправильный ID скина!");
	A_SetPlayerSkin(giveplayerid, skin);
	SendOk(giveplayerid,"Администратор выдал Вам временный скин");
	return true;
}
CMD:skin(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new skin;
	if(sscanf(params, "d",skin)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /skin [id скина]");
	if(skin == 74 || skin > 311 || skin < 1) return SendClientMessage(playerid, COLOR_GREY, "Неправильный ID скина!");
	PI[playerid][pSkin] = skin;
	A_SetPlayerSkin(playerid, PI[playerid][pSkin]);
	UpdatePlayerData(playerid,"Skin",PI[playerid][pSkin]);
	return true;
}
CMD:inf(playerid, params[]) { 
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new string[150];
	format(string, sizeof(string), "Инт %d Мир %d",GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
	SendOk(playerid,string);
	return true;
}
CMD:ban(playerid, params[])
{
	if (PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new day, text[130], string[415], giveplayerid;
	if (sscanf(params, "uds[128]", giveplayerid, day, text)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /ban [playerid] [дни] [причина]");
	if (!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if (strlen(text) > 30) return SendClientMessage(playerid, COLOR_GREY, "Не больше 30 символов");
	if (IsAIP(text)) return 1;
	if (giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if(isAdminStatus(player_name[giveplayerid])) return 1;
	if (day > 30 || 1 > day) return SendClientMessage(playerid, COLOR_GREY, "От 1 до 30 дней");
	
	if(PI[giveplayerid][pMember] > 0) {
		format(string, 128, "Администратор %s забанил игрока %s на %d дней. Причина: %s / %s (%d ранг)",player_name[playerid],player_name[giveplayerid],day,text, FI[PI[giveplayerid][pMember]][fName], PI[giveplayerid][pRank]);
		SendAdminActionMessage(COLOR_LIGHTRED,string);
	}
	else {
		format(string, 128, "Администратор %s забанил игрока %s на %d дней. Причина: %s",player_name[playerid],player_name[giveplayerid],day,text);
		SendAdminActionMessage(COLOR_LIGHTRED,string);
	}
	new ip[17];
	GetPlayerIp(giveplayerid, ip, sizeof(ip));
	format(string, sizeof(string), "Name [%s]  R-IP [%s]  L-IP [%s]  IP [%s]", player_name[giveplayerid], PI[giveplayerid][pIpReg], player_ip[giveplayerid], ip);
	SendAdminMessage(COLOR_LIGHTRED, string);

	new time_ban;
	time_ban = day * 86400;
	
	BanName(player_name[giveplayerid], player_name[playerid], time_ban, text);
	WriteLog(LOG_BAN, player_name[playerid], player_name[giveplayerid], text);
	gAdmin[playerid][ADMIN_BAN] ++;
	new hour, minute;
	new year, month, days;

	getdate(year, month, days);
	gettime(hour, minute);
	string = "";
	static const f_str[] = "\
	"W"Внимание! Ваш аккаунт был "NO"заблокирован"W"\n\n\
	"W"Заблокировал: "NO"%s\n\
	"W"Дни: "ORANGE"%d\n\
	"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
	"W"Причина: "ORANGE"%s\n\n\
	"W"Если вы считаете, что это ошибка, сделайте скриншот(F8) данного окна,\n\
	иначе Ваша жалоба будет не принята.";
	format(string, sizeof(string), f_str, player_name[playerid], day, days, month, year, hour, minute, text);

	new str[MAX_PLAYER_NAME + 1];
	format(str, sizeof(str), "%s", player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрыть", "");

	KickEx(giveplayerid);
	return true;
}
CMD:iban(playerid, params[])
{
	if (PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new text[130], string[415], giveplayerid;
	if (sscanf(params, "us[128]", giveplayerid, text)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /iban [playerid] [причина]");
	if (!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if (giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if (IsAIP(text)) return 1;
	if (strlen(text) > 30) return SendClientMessage(playerid, COLOR_GREY, "Не больше 30 символов");
	if(isAdminStatus(player_name[giveplayerid])) return 1;
	format(string, 128, "Администратор %s забанил игрока %s. Причина: %s", player_name[playerid], player_name[giveplayerid], text);
	SendAdminActionMessage(COLOR_LIGHTRED, string);
	new ip[17];
	GetPlayerIp(giveplayerid, ip, sizeof(ip));
	format(string, sizeof(string), "Name [%s]  R-IP [%s]  L-IP [%s]  IP [%s]", player_name[giveplayerid], PI[giveplayerid][pIpReg], player_ip[giveplayerid], ip);
	SendAdminMessage(COLOR_LIGHTRED, string);
	BanName(player_name[giveplayerid], player_name[playerid], 100 * 86400, text);
	WriteLog(LOG_BAN, player_name[playerid], player_name[giveplayerid], text);
	gAdmin[playerid][ADMIN_BAN] ++;
	new hour, minute;
	new year, month, days;

	getdate(year, month, days);
	gettime(hour, minute);
	string = "";
	static const f_str[] = "\
	"W"Внимание! Ваш аккаунт был "NO"заблокирован"W"\n\n\
	"W"Заблокировал: "NO"%s\n\
	"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
	"W"Причина: "ORANGE"%s\n\n\
	"W"Если вы считаете, что это ошибка, сделайте скриншот(F8) данного окна,\n\
	иначе Ваша жалоба будет не принята.";
	format(string, sizeof(string), f_str, player_name[playerid], days, month, year, hour, minute, text);

	new str[MAX_PLAYER_NAME + 1];
	format(str, sizeof(str), "%s", player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрыть", "");
	KickEx(giveplayerid);
	return true;
}
CMD:delfences(playerid, params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	for(new i;i<MAX_OGRAD;i++) {
		if(object[i]!=-1) {
			GetDynamicObjectPos(object[i],x,y,z);
			if(IsPlayerInRangeOfPoint(playerid,2,x,y,z)) {
				if(objectrot[i] != -1) {
					DestroyDynamicObject(objectrot[i]);
					objectrot[i]=-1;
				}
				DestroyDynamicObject(object[i]);
				object[i]=-1;
				SendOk(playerid,"Ограждение успешно убрано");
				return 1;
			}
		}
	}
	return true;
}
CMD:warn(playerid, params[])
{
	if (PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new text[130], string[415], giveplayerid;
	if (sscanf(params, "us[128]", giveplayerid, text)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /warn [playerid] [причина]");
	if (PlayerAdminFix[playerid] > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Можно раз в 10 секунд");
	PlayerAdminFix[playerid] = gettime() + 10;

	//if (giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, not_id);
	//if (giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if (IsAIP(text))return 1;
	if (strlen(text) > 30) return SendClientMessage(playerid, COLOR_GREY, "Не больше 30 символов");
	//if(isAdminStatus(player_name[giveplayerid])) return 1;
	if (PI[giveplayerid][pAdmin] > PI[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_GREY, "Администратору нельзя выдать предупреждение");
	if (PI[giveplayerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Лидеру нельзя выдать предупреждение");

	new hour, minute;
	new year, month, days;

	getdate(year, month, days);
	gettime(hour, minute);

	if (PI[giveplayerid][pWarns]++ >= 2)
	{
		if(PI[giveplayerid][pMember] > 0) {
			format(string, 500, "Администратор %s забанил игрока (3 предупреждения) %s на 30 дней. Причина: %s / %s (%d ранг)",player_name[playerid],player_name[giveplayerid], text,FI[PI[giveplayerid][pMember]][fName], PI[giveplayerid][pRank]);
			SendAdminActionMessage(COLOR_LIGHTRED,string);
		}
		else {
			format(string, 500, "Администратор %s забанил игрока (3 предупреждения) %s на 30 дней. Причина: %s", player_name[playerid],player_name[giveplayerid], text);
			SendAdminActionMessage(COLOR_LIGHTRED,string);
		}

		new time_ban;
		time_ban = 30 * 86400;
		
		BanName(player_name[giveplayerid], player_name[playerid], time_ban, text);
		WriteLog(LOG_BAN, player_name[playerid], player_name[giveplayerid], text);
		gAdmin[playerid][ADMIN_BAN] ++;
		string = "";
		static const f_str[] = "\
		"W"Внимание! Ваш аккаунт был "NO"заблокирован"W"\n\n\
		"W"Заблокировал: "NO"%s\n\
		"W"Дни: "ORANGE"%d\n\
		"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
		"W"Причина: "ORANGE"%s\n\n\
		"W"Если вы считаете, что это ошибка, сделайте скриншот(F8) данного окна,\n\
		иначе Ваша жалоба будет не принята.";
		format(string, sizeof(string), f_str, player_name[playerid], 30, days, month, year, hour, minute, text);

		new str[MAX_PLAYER_NAME + 1];
		format(str, sizeof(str), "%s", player_name[giveplayerid]);
		D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрыть", "");
		KickEx(giveplayerid);
	}
	else
	{
		if (!GetPVarInt(giveplayerid, "AntiWarn"))
		{
			PI[giveplayerid][pLeader] = 0;
			PI[giveplayerid][punWarnstime] = unix + 7 * 86400;
			PI[giveplayerid][pLeader] = 0;
			PI[giveplayerid][pJob] = 0;
			PI[giveplayerid][pMember] = 0;
			PI[giveplayerid][pRank] = 0;
			UpdatePlayerData(giveplayerid, "pWarns", PI[giveplayerid][pWarns]);
			UpdatePlayerData(giveplayerid, "warntime", PI[giveplayerid][punWarnstime]);
			UpdatePlayerData(giveplayerid, "pLeader", 0);
			UpdatePlayerData(giveplayerid, "pJob", 0);
			UpdatePlayerData(giveplayerid, "pMember", 0);
			UpdatePlayerData(giveplayerid, "pRank", 0);
			KickEx(giveplayerid);
		}
		if(PI[giveplayerid][pMember] > 0) {
			format(string, 500, "Администратор %s выдал предупреждение игроку %s [%d|3]. Причина: %s / %s (%d ранг)",player_name[playerid],player_name[giveplayerid],PI[giveplayerid][pWarns],text,FI[PI[giveplayerid][pMember]][fName], PI[giveplayerid][pRank]);
			SendAdminActionMessage(COLOR_LIGHTRED,string);
		}
		else {
			format(string, 500, "Администратор %s выдал предупреждение игроку %s [%d|3]. Причина: %s",player_name[playerid],player_name[giveplayerid],PI[giveplayerid][pWarns],text);
			SendAdminActionMessage(COLOR_LIGHTRED,string);
		}
		WriteLog(LOG_WARN, player_name[playerid], player_name[giveplayerid], text);
		SetPVarInt(giveplayerid, "AntiWarn", true);
		static const f_str[] = "\
	"W"Внимание! Вам выдали "NO"предупреждение"W"\n\n\
	"W"Выдал: "NO"%s\n\
	"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
	"W"Причина: "ORANGE"%s\n\n\
	"W"Если вы считаете, что это ошибка, сделайте скриншот(F8) данного окна,\n\
	иначе Ваша жалоба будет не принята.";
		format(string, sizeof(string), f_str, player_name[playerid], days, month, year, hour, minute, text);
		gAdmin[playerid][ADMIN_WARN] ++;
	}
	add_jobinfo(giveplayerid, "Недееспособен");

	new str[MAX_PLAYER_NAME + 1];
	format(str, sizeof(str), "%s", player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрыть", "");
	return 1;
}
CMD:hid(playerid,params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new houseid;
	if(sscanf(params,"d", houseid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /hid [номер дома]");
	new string[30];
	if(!(1 <= houseid <= gHouseCount)) {
		format(string, sizeof(string), "От 1 до %d", gHouseCount);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}
	SetPlayerPosAC(playerid, gHouses[houseid-1][houseX], gHouses[houseid-1][houseY], gHouses[houseid-1][houseZ],0,0);
	SetPlayerFacingAngle(playerid, gHouses[houseid-1][houseR]);
	GameTextForPlayer(playerid, "~w~HOUSE", 5000, 1);
	return 1;
}
CMD:graff(playerid,params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new graff;
	if(sscanf(params,"d", graff)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /graff [номер граффити]");
	if(!(1 <= graff < 121)) return SendClientMessage(playerid, COLOR_GREY, "От 1 до 120");
	SetPlayerPosAC(playerid,GrafInfo[graff][gr_x][0],GrafInfo[graff][gr_x][1],GrafInfo[graff][gr_x][2],0,0);
	GameTextForPlayer(playerid, "~w~GRAFFITY", 5000, 1);
	return 1;
}
CMD:asellbiz(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new bizzid, query[200];
	if(sscanf(params,"d", bizzid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /asellbiz [номер бизнеса]");
	new string[30];
	if(!(0 <= bizzid <= gBusinessCount)) {
		format(string, sizeof(string), "От 0 до %d",gBusinessCount);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}
	mysql_format(connects, query, sizeof(query),"UPDATE `business` SET `ownerid` = '0', `owner` = '', `status` = '1', `price` = '5',`order` = '0',`orderprice` = '0',`upgrade` = '5000|0|0' WHERE `id` = '%d'",bizzid+1);
	mysql_tquery(connects, query,"","");
	gBusiness[bizzid][bizzOwnerID] = 0;
	gBusiness[bizzid][bizzStatus] = 1;
	gBusiness[bizzid][bizzPrice] = 5;
	gBusiness[bizzid][bizzUpgrade][0] = 5000;
	gBusiness[bizzid][bizzUpgrade][1] = 0;
	gBusiness[bizzid][bizzUpgrade][2] = 0;
	SetString(gBusiness[bizzid][bizzOwner],"");
	UpdateBusinessText(bizzid);
	GameTextForPlayer(playerid, "~w~SELL", 5000, 1);
	return true;
}

CMD:cenahouse(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new money;
	if(sscanf(params,"i", money)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /cenahouse [стоимость]");
	new query[128];
	for(new i = 0; i < gHouseCount ; i ++)
	{
		if(PlayerToPoint(2.0,playerid, gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ]))
		{
			GameTextForPlayer(playerid, "OK", 5000, 1);
			mysql_format(connects, query, sizeof(query),"UPDATE `house` SET `price` = '%d' WHERE `id` = '%d'",money,i+1);
			mysql_tquery(connects, query,"","");
			gHouses[i][housePrice] = money;
		}
	}
	return true;
}

CMD:cenabiz(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new money;
	if(sscanf(params,"i", money)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /cenabiz [стоимость]");
	new query[128];
	for(new i = 0; i < gBusinessCount; i ++)
	{
		if(PlayerToPoint(2.0,playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]))
		{
			GameTextForPlayer(playerid, "OK", 5000, 1);
			mysql_format(connects, query, sizeof(query),"UPDATE `business` SET `sellprice` = '%d' WHERE `id` = '%d'",money,i+1);
			mysql_tquery(connects, query,"","");
			gBusiness[i][bizzSellPrice] = money;
			UpdateBusinessText(i);
		}
	}
	return true;
}

CMD:bizid(playerid) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new text_mes[20];
	for(new i = 0; i < gBusinessCount; i ++)
	{
		if(PlayerToPoint(2.0,playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]))
		{
			format(text_mes,sizeof(text_mes),"%d",i);
			GameTextForPlayer(playerid, text_mes, 5000, 1);
		}
	}
	return true;
}

CMD:bizz(playerid,params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new bizzid;
	if(sscanf(params,"d", bizzid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /bizz [номер бизнеса]");
	new string[30];
	if(!(0 <= bizzid <= gBusinessCount)) {
		format(string, sizeof(string), "От 0 до %d", gBusinessCount);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}
	SetPlayerPosAC(playerid,gBusiness[bizzid][bizzX], gBusiness[bizzid][bizzY], gBusiness[bizzid][bizzZ],0,0);
	SetPlayerFacingAngle(playerid, gBusiness[bizzid][bizzR]);
	GameTextForPlayer(playerid, "~w~BIZZ", 5000, 1);
	return 1;
}
/*CMD:int(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new interior;
	if(sscanf(params,"i", interior)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /int [1-140]");

	switch(interior) {
		case 1: SetPlayerPosAC(playerid,-25.884499,-185.868988,1003.549988), SetPlayerInterior(playerid,17);
		case 2: SetPlayerPosAC(playerid,6.091180,-29.271898,1003.549988), SetPlayerInterior(playerid,10);
		case 3: SetPlayerPosAC(playerid,-30.946699,-89.609596,1003.549988), SetPlayerInterior(playerid,18);
		case 4: SetPlayerPosAC(playerid,-25.132599,-139.066986,1003.549988), SetPlayerInterior(playerid,16);
		case 5: SetPlayerPosAC(playerid,-27.312300,-29.277599,1003.549988), SetPlayerInterior(playerid,4);
		case 6: SetPlayerPosAC(playerid,-26.691599,-55.714897,1003.549988), SetPlayerInterior(playerid,6);
		case 7: SetPlayerPosAC(playerid,-1827.147338,7.207418,1061.143554), SetPlayerInterior(playerid,14);
		case 8: SetPlayerPosAC(playerid,2.384830,33.103397,1199.849976), SetPlayerInterior(playerid,1);
		case 9: SetPlayerPosAC(playerid,315.856170,1024.496459,1949.797363), SetPlayerInterior(playerid,9);
		case 10: SetPlayerPosAC(playerid,286.148987,-40.644398,1001.569946), SetPlayerInterior(playerid,1);
		case 11: SetPlayerPosAC(playerid,286.800995,-82.547600,1001.539978), SetPlayerInterior(playerid,4);
		case 12: SetPlayerPosAC(playerid,296.919983,-108.071999,1001.569946), SetPlayerInterior(playerid,6);
		case 13: SetPlayerPosAC(playerid,314.820984,-141.431992,999.661987), SetPlayerInterior(playerid,7);
		case 14: SetPlayerPosAC(playerid,316.524994,-167.706985,999.661987), SetPlayerInterior(playerid,6);
		case 15: SetPlayerPosAC(playerid,302.292877,-143.139099,1004.062500), SetPlayerInterior(playerid,7);
		case 16: SetPlayerPosAC(playerid,235.508994,1189.169897,1080.339966), SetPlayerInterior(playerid,3);
		case 17: SetPlayerPosAC(playerid,225.756989,1240.000000,1082.149902), SetPlayerInterior(playerid,2);
		case 18: SetPlayerPosAC(playerid,223.043991,1289.259888,1082.199951), SetPlayerInterior(playerid,1);
		case 19: SetPlayerPosAC(playerid,225.630997,1022.479980,1084.069946), SetPlayerInterior(playerid,7);
		case 20: SetPlayerPosAC(playerid,295.138977,1474.469971,1080.519897), SetPlayerInterior(playerid,15);
		case 21: SetPlayerPosAC(playerid,328.493988,1480.589966,1084.449951), SetPlayerInterior(playerid,15);
		case 22: SetPlayerPosAC(playerid,385.803986,1471.769897,1080.209961), SetPlayerInterior(playerid,15);
		case 23: SetPlayerPosAC(playerid,375.971985,1417.269897,1081.409912), SetPlayerInterior(playerid,15);
		case 24: SetPlayerPosAC(playerid,490.810974,1401.489990,1080.339966), SetPlayerInterior(playerid,2);
		case 25: SetPlayerPosAC(playerid,447.734985,1400.439941,1084.339966), SetPlayerInterior(playerid,2);
		case 26: SetPlayerPosAC(playerid,227.722992,1114.389893,1081.189941), SetPlayerInterior(playerid,5);
		case 27: SetPlayerPosAC(playerid,260.983978,1286.549927,1080.299927), SetPlayerInterior(playerid,4);
		case 28: SetPlayerPosAC(playerid,221.666992,1143.389893,1082.679932), SetPlayerInterior(playerid,4);
		case 29: SetPlayerPosAC(playerid,27.132700,1341.149902,1084.449951), SetPlayerInterior(playerid,10);
		case 30: SetPlayerPosAC(playerid,-262.601990,1456.619995,1084.449951), SetPlayerInterior(playerid,4);
		case 31: SetPlayerPosAC(playerid,22.778299,1404.959961,1084.449951), SetPlayerInterior(playerid,5);
		case 32: SetPlayerPosAC(playerid,140.278000,1368.979980,1083.969971), SetPlayerInterior(playerid,5);
		case 33: SetPlayerPosAC(playerid,234.045990,1064.879883,1084.309937), SetPlayerInterior(playerid,6);
		case 34: SetPlayerPosAC(playerid,-68.294098,1353.469971,1080.279907), SetPlayerInterior(playerid,6);
		case 35: SetPlayerPosAC(playerid,-285.548981,1470.979980,1084.449951), SetPlayerInterior(playerid,15);
		case 36: SetPlayerPosAC(playerid,-42.581997,1408.109985,1084.449951), SetPlayerInterior(playerid,8);
		case 37: SetPlayerPosAC(playerid,83.345093,1324.439941,1083.889893), SetPlayerInterior(playerid,9);
		case 38: SetPlayerPosAC(playerid,260.941986,1238.509888,1084.259888), SetPlayerInterior(playerid,9);
		case 39: SetPlayerPosAC(playerid,1038.509888,-0.663752,1001.089966), SetPlayerInterior(playerid,3);
		case 40: SetPlayerPosAC(playerid,446.622986,509.318970,1001.419983), SetPlayerInterior(playerid,12);
		case 41: SetPlayerPosAC(playerid,2216.339844,-1150.509888,1025.799927), SetPlayerInterior(playerid,15);
		case 42: SetPlayerPosAC(playerid,833.818970,7.418000,1004.179993), SetPlayerInterior(playerid,3);
		case 43: SetPlayerPosAC(playerid,-100.325996,-22.816500,1000.741943), SetPlayerInterior(playerid,3);
		case 44: SetPlayerPosAC(playerid,964.376953,2157.329834,1011.019958), SetPlayerInterior(playerid,1);
		case 45: SetPlayerPosAC(playerid,-2239.569824,130.020996,1035.419922), SetPlayerInterior(playerid,6);
		case 46: SetPlayerPosAC(playerid,662.641601,-571.398803,16.343263), SetPlayerInterior(playerid,0);
		case 47: SetPlayerPosAC(playerid,614.581420,-23.066856,1004.781250), SetPlayerInterior(playerid,1);
		case 48: SetPlayerPosAC(playerid,612.508605,-129.236114,1001.992187), SetPlayerInterior(playerid,3);
		case 49: SetPlayerPosAC(playerid,-1786.603759,1215.553466,28.531250), SetPlayerInterior(playerid,0);
		case 50: SetPlayerPosAC(playerid,-2048.605957,162.093444,28.835937), SetPlayerInterior(playerid,1);
		case 51: SetPlayerPosAC(playerid,2170.284,1618.629,999.9766), SetPlayerInterior(playerid,1);
		case 52: SetPlayerPosAC(playerid,1889.975,1018.055,31.88281), SetPlayerInterior(playerid,10);
		case 53: SetPlayerPosAC(playerid,-2158.719971,641.287964,1052.369995), SetPlayerInterior(playerid,1);
		case 54: SetPlayerPosAC(playerid,1133.069946,-9.573059,1000.750000), SetPlayerInterior(playerid,12);
		case 55: SetPlayerPosAC(playerid,207.737991,-109.019997,1005.269958), SetPlayerInterior(playerid,15);
		case 56: SetPlayerPosAC(playerid,204.332993,-166.694992,1000.578979), SetPlayerInterior(playerid,14);
		case 57: SetPlayerPosAC(playerid,207.054993,-138.804993,1003.519958), SetPlayerInterior(playerid,3);
		case 58: SetPlayerPosAC(playerid,203.778000,-48.492397,1001.799988), SetPlayerInterior(playerid,1);
		case 59: SetPlayerPosAC(playerid,226.293991,-7.431530,1002.259949), SetPlayerInterior(playerid,5);
		case 60: SetPlayerPosAC(playerid,161.391006,-93.159156,1001.804687), SetPlayerInterior(playerid,18);
		case 61: SetPlayerPosAC(playerid,493.390991,-22.722799,1000.686951), SetPlayerInterior(playerid,17);
		case 62: SetPlayerPosAC(playerid,501.980988,-69.150200,998.834961), SetPlayerInterior(playerid,11);
		case 63: SetPlayerPosAC(playerid,-227.028000,1401.229980,27.769798), SetPlayerInterior(playerid,18);
		case 64: SetPlayerPosAC(playerid,460.099976,-88.428497,999.621948), SetPlayerInterior(playerid,4);
		case 65: SetPlayerPosAC(playerid,454.973950,-110.104996,999.717957), SetPlayerInterior(playerid,5);
		case 66: SetPlayerPosAC(playerid,452.489990,-18.179699,1001.179993), SetPlayerInterior(playerid,1);
		case 67: SetPlayerPosAC(playerid,681.474976,-451.150970,-25.616798), SetPlayerInterior(playerid,1);
		case 68: SetPlayerPosAC(playerid,366.923980,-72.929359,1001.507812), SetPlayerInterior(playerid,10);
		case 69: SetPlayerPosAC(playerid,365.672974,-10.713200,1001.869995), SetPlayerInterior(playerid,9);
		case 70: SetPlayerPosAC(playerid,372.351990,-131.650986,1001.449951), SetPlayerInterior(playerid,5);
		case 71: SetPlayerPosAC(playerid,377.098999,-192.439987,1000.643982), SetPlayerInterior(playerid,17);
		case 72: SetPlayerPosAC(playerid,244.411987,305.032990,999.231995), SetPlayerInterior(playerid,1);
		case 73: SetPlayerPosAC(playerid,271.884979,306.631989,999.325989), SetPlayerInterior(playerid,2);
		case 74: SetPlayerPosAC(playerid,291.282990,310.031982,999.154968), SetPlayerInterior(playerid,3);
		case 75: SetPlayerPosAC(playerid,302.181000,300.722992,999.231995), SetPlayerInterior(playerid,4);
		case 76: SetPlayerPosAC(playerid,322.197998,302.497986,999.231995), SetPlayerInterior(playerid,5);
		case 77: SetPlayerPosAC(playerid,346.870025,309.259033,999.155700), SetPlayerInterior(playerid,6);
		case 78: SetPlayerPosAC(playerid,-959.873962,1952.000000,9.044310), SetPlayerInterior(playerid,17);
		case 79: SetPlayerPosAC(playerid,388.871979,173.804993,1008.389954), SetPlayerInterior(playerid,3);
		case 80: SetPlayerPosAC(playerid,220.4109,1862.277,13.147), SetPlayerInterior(playerid,0);
		case 81: SetPlayerPosAC(playerid,772.112000,-3.898650,1000.687988), SetPlayerInterior(playerid,5);
		case 82: SetPlayerPosAC(playerid,774.213989,-48.924297,1000.687988), SetPlayerInterior(playerid,6);
		case 83: SetPlayerPosAC(playerid,773.579956,-77.096695,1000.687988), SetPlayerInterior(playerid,7);
		case 84: SetPlayerPosAC(playerid,1527.229980,-11.574499,1002.269958), SetPlayerInterior(playerid,3);
		case 85: SetPlayerPosAC(playerid,1523.509888,-47.821198,1002.269958), SetPlayerInterior(playerid,2);
		case 86: SetPlayerPosAC(playerid,2496.049805,-1693.929932,1014.750000), SetPlayerInterior(playerid,3);
		case 87: SetPlayerPosAC(playerid,1263.079956,-785.308960,1091.959961), SetPlayerInterior(playerid,5);
		case 88: SetPlayerPosAC(playerid,1291.725341,-788.319885,96.460937), SetPlayerInterior(playerid,0);
		case 89: SetPlayerPosAC(playerid,516.650,-18.611898,1001.459961), SetPlayerInterior(playerid,3);
		case 90: SetPlayerPosAC(playerid,2464.109863,-1698.659912,1013.509949), SetPlayerInterior(playerid,2);
		case 91: SetPlayerPosAC(playerid,2526.459961,-1679.089966,1015.500000), SetPlayerInterior(playerid,1);
		case 92: SetPlayerPosAC(playerid,2543.659912,-1303.629883,1025.069946), SetPlayerInterior(playerid,2);
		case 93: SetPlayerPosAC(playerid,1212.019897,-28.663099,1001.089966), SetPlayerInterior(playerid,3);
		case 94: SetPlayerPosAC(playerid,744.542969,1437.669922,1102.739990), SetPlayerInterior(playerid,6);
		case 95: SetPlayerPosAC(playerid,1204.809937,-11.586800,1001.089966), SetPlayerInterior(playerid,2);
		case 96: SetPlayerPosAC(playerid,1204.809937,13.586800,1001.089966), SetPlayerInterior(playerid,2);
		case 97: SetPlayerPosAC(playerid,940.921997,-17.007000,1001.179993), SetPlayerInterior(playerid,3);
		case 98: SetPlayerPosAC(playerid,964.106995,-53.205498,1001.179993), SetPlayerInterior(playerid,3);
		case 99: SetPlayerPosAC(playerid,-2661.009766,1415.739990,923.305969), SetPlayerInterior(playerid,3);
		case 100: SetPlayerPosAC(playerid,-2637.449951,1404.629883,906.457947), SetPlayerInterior(playerid,3);
		case 101: SetPlayerPosAC(playerid,-735.5619504,484.351318,1371.952270), SetPlayerInterior(playerid,1);
		case 102: SetPlayerPosAC(playerid,-794.8064,491.6866,1376.195), SetPlayerInterior(playerid,1);
		case 103: SetPlayerPosAC(playerid,-835.2504,500.9161,1358.305), SetPlayerInterior(playerid,1);
		case 104: SetPlayerPosAC(playerid,-813.431518,533.231079,1390.782958), SetPlayerInterior(playerid,1);
		case 105: SetPlayerPosAC(playerid,2350.339844,-1181.649902,1028.000000), SetPlayerInterior(playerid,5);
		case 106: SetPlayerPosAC(playerid,2807.619873,-1171.899902,1025.579956), SetPlayerInterior(playerid,8);
		case 107: SetPlayerPosAC(playerid,318.564972,1118.209961,1083.979980), SetPlayerInterior(playerid,5);
		case 108: SetPlayerPosAC(playerid,1412.639893,-1.787510,1000.931946), SetPlayerInterior(playerid,1);
		case 109: SetPlayerPosAC(playerid,1302.519897,-1.787510,1000.931946), SetPlayerInterior(playerid,18);
		case 110: SetPlayerPosAC(playerid,2522.0,-1673.383911,14.8), SetPlayerInterior(playerid,0);
		case 111: SetPlayerPosAC(playerid,-219.322601,1410.444824,27.773437), SetPlayerInterior(playerid,18);
		case 112: SetPlayerPosAC(playerid,2324.419922,-1147.539917,1050.719971), SetPlayerInterior(playerid,12);
		case 113: SetPlayerPosAC(playerid,-972.4957,1060.983,1358.914), SetPlayerInterior(playerid,10);
		case 114: SetPlayerPosAC(playerid,411.625977,-21.433298,1001.799988), SetPlayerInterior(playerid,2);
		case 115: SetPlayerPosAC(playerid,418.652985,-82.639793,1001.959961), SetPlayerInterior(playerid,3);
		case 116: SetPlayerPosAC(playerid,412.021973,-52.649899,1001.959961), SetPlayerInterior(playerid,12);
		case 117: SetPlayerPosAC(playerid,-204.439987,-26.453999,1002.299988), SetPlayerInterior(playerid,16);
		case 118: SetPlayerPosAC(playerid,-204.439987,-8.469600,1002.299988), SetPlayerInterior(playerid,17);
		case 119: SetPlayerPosAC(playerid,-204.439987,-43.652496,1002.299988), SetPlayerInterior(playerid,3);
		case 120: SetPlayerPosAC(playerid,246.783997,63.900200,1003.639954), SetPlayerInterior(playerid,6);
		case 121: SetPlayerPosAC(playerid,246.375992,109.245995,1003.279968), SetPlayerInterior(playerid,10);
		case 122: SetPlayerPosAC(playerid,288.745972,169.350998,1007.179993), SetPlayerInterior(playerid,3);
		case 123: SetPlayerPosAC(playerid,1494.429932,1305.629883,1093.289917), SetPlayerInterior(playerid,3);
		case 124: SetPlayerPosAC(playerid,-2029.719971,-115.067993,1035.169922), SetPlayerInterior(playerid,3);
		case 125: SetPlayerPosAC(playerid,420.484985,2535.589844,10.020289), SetPlayerInterior(playerid,10);
		case 126: SetPlayerPosAC(playerid,-2184.751464,2413.111816,5.156250), SetPlayerInterior(playerid,0);
		case 127: SetPlayerPosAC(playerid,-1397.782470,-203.723114,1051.346801), SetPlayerInterior(playerid,7);
		case 128: SetPlayerPosAC(playerid,-1398.103515,933.445434,1041.531250), SetPlayerInterior(playerid,15);
		case 129: SetPlayerPosAC(playerid,-1428.809448,-663.595886,1060.219848), SetPlayerInterior(playerid,4);
		case 130: SetPlayerPosAC(playerid,-1486.861816,1642.145996,1060.671875), SetPlayerInterior(playerid,14);
		case 131: SetPlayerPosAC(playerid,-1401.830000,107.051300,1032.273000), SetPlayerInterior(playerid,1);
		case 132: SetPlayerPosAC(playerid,1382.615600,2184.345703,11.023437), SetPlayerInterior(playerid,0);
		case 133: SetPlayerPosAC(playerid,297.9414,-64.3876,1001.5156), SetPlayerInterior(playerid,4);
		case 134: SetPlayerPosAC(playerid,302.1602,-164.7588,999.6105), SetPlayerInterior(playerid,6);
		case 135: SetPlayerPosAC(playerid,614.31,-125.22,997.99), SetPlayerInterior(playerid,3);
		case 136: SetPlayerPosAC(playerid,72.03800201,394.72299194,1041.23596191), SetPlayerInterior(playerid,5);
		case 137: SetPlayerPosAC(playerid,258.6563,-42.7578,1001.0234), SetPlayerInterior(playerid,14);
		case 138: SetPlayerPosAC(playerid,1887.25000000,508.48001099,1204.37194824), SetPlayerInterior(playerid,5);
		case 139: SetPlayerPosAC(playerid,1583.48498535,534.78302002,1128.39794922), SetPlayerInterior(playerid,5);
		case 140: SetPlayerPosAC(playerid,2527.09692383,464.17098999,2636.01293945), SetPlayerInterior(playerid,8);
		default: SendClientMessage(playerid, COLOR_WHITE,"Используйте: /int [1-140]");
	}
	return 1;
}*/
CMD:gethere(playerid,params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /gethere [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	new player_state = GetPlayerState(giveplayerid);
	if(!(1 <= player_state <= 3)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не вступил в игру");
	if(PI[playerid][pAdmin] < PI[giveplayerid][pAdmin]) return SendClientMessage(playerid, COLOR_GREY, "Его нельзя телепортировать");
	if(playerid == giveplayerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if(PI[giveplayerid][pJailTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок в тюрьме");
	if(!TI[giveplayerid][tLogin]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не авторизован на сервере");
	new Float:X,
Float:Y,Float:Z, 
Float:A,
	vehicleid = GetPlayerVehicleID(giveplayerid),
	interior = GetPlayerInterior(playerid),
	virtualworld = GetPlayerVirtualWorld(playerid);
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);

	switch(GetPlayerState(giveplayerid)) {
	case PLAYER_STATE_ONFOOT: {
			SetPlayerPosAC(giveplayerid, X,Y+2,Z,virtualworld,interior);
			SetPlayerFacingAngle(giveplayerid, A);
		}
	case PLAYER_STATE_DRIVER: {
			LinkVehicleToInterior(vehicleid, interior);
			SetVehicleVirtualWorld(vehicleid, virtualworld);
			SetVehiclePos(vehicleid, X, Y+2, Z);
			SetVehicleZAngle(vehicleid, A);
		}
	case PLAYER_STATE_PASSENGER: {
			RemovePlayerFromVehicleAC(giveplayerid);
			SetPlayerPosAC(giveplayerid, X, Y+2, Z,virtualworld,interior);
			SetPlayerFacingAngle(giveplayerid, A);
		}
	}
	new string[128];
	format(string, sizeof(string), "Вы были телепортированы администратором %s", player_name[playerid]);
	SendOk(giveplayerid,string);

	format(string, sizeof(string), "Вы телепортировали %s к себе", player_name[giveplayerid]);
	SendOk(playerid,string);
	return 1;
}
CMD:spcars(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /spcars [время]");
	if(giveplayerid < 5 || giveplayerid > 30) return SendClientMessage(playerid, COLOR_GREY, "От 5 до 30 секунд");
	new string[64];
	format(string,sizeof(string), "Машины заспавнятся через %i секунд",giveplayerid);
	SendOk(playerid, string);
	SendClientMessageToAll(COLOR_RED,string);
	SetTimerEx("SpcarsAvto",giveplayerid*1000,false,"i",playerid);
	return true;
}
CMD:setnick(playerid,params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"i",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /setnick [id]");
	new playerName[MAX_PLAYER_NAME+1];
	GetPVarString(giveplayerid, "WantNickChange", playerName, MAX_PLAYER_NAME);
	if(!strlen(playerName)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не подавал завку на смену ника");
	WriteLog(LOG_CHANGENAME,player_name[playerid],player_name[giveplayerid],playerName);
	if(GetPVarInt(giveplayerid,"changename_fix")) return 1;
	ChangeName(giveplayerid);
	new string[128];
	format(string, sizeof(string), "[A] %s разрешил смену ника игроку %s",player_name[playerid],player_name[giveplayerid]);
	AdmMSG(0xAFAFAFAA, string);
	return 1;
}
CMD:freeze(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return	SendClientMessage(playerid, COLOR_WHITE,"Используйте: /freeze [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(PI[giveplayerid][pAdmin] > PI[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_GREY, "Его нельзя");
	TogglePlayerControllable(giveplayerid, 0);
	new string[128];
	format(string, sizeof(string), "[A] %s был заморожен администратором %s",player_name[giveplayerid],player_name[playerid]);
	AdmMSG(0xAFAFAFAA, string);
	return true;
}
CMD:unfreeze(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return	SendClientMessage(playerid, COLOR_WHITE,"Используйте: /unfreeze [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(PI[giveplayerid][pAdmin] > PI[playerid][pAdmin]) return SendClientMessage(playerid, COLOR_GREY, "Его нельзя");
	TogglePlayerControllable(giveplayerid, 1);
	new string[128];
	format(string, sizeof(string), "[A] %s разморозил %s",player_name[playerid],player_name[giveplayerid]);
	AdmMSG(0xAFAFAFAA, string);
	return true;
}
CMD:slap(playerid,params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /slap [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);

	new Float:slx, 
Float:sly, 
Float:slz;
	GetPlayerPos(giveplayerid, slx, sly, slz);
	SetPlayerPosAC(giveplayerid, slx, sly, slz+5,TI[giveplayerid][tVirtualWorld], TI[giveplayerid][tInterior]);
	PlayerPlaySound(giveplayerid, 1130, slx, sly, slz+5);
	return 1;
}
CMD:markt(playerid) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new Float: MarkX, Float: MarkY, Float: MarkZ;
	GetPlayerPos(playerid, MarkX, MarkY, MarkZ);
	SetPVarFloat(playerid, "MarkX", MarkX);
	SetPVarFloat(playerid, "MarkY", MarkY);
	SetPVarFloat(playerid, "MarkZ", MarkZ);
	SetPVarInt(playerid, "MarkInt", GetPlayerInterior(playerid));
	SetPVarInt(playerid, "MarkVW", GetPlayerVirtualWorld(playerid));
	SendOk(playerid, "Позиция для телепорта сохранена");
	return 1;
}
CMD:gotomark(playerid) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(GetPlayerState(playerid) == 2) {
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, GetPVarFloat(playerid, "MarkX"), GetPVarFloat(playerid, "MarkY"), GetPVarFloat(playerid, "MarkZ"));
	}
	else SetPlayerPosAC(playerid, GetPVarFloat(playerid, "MarkX"), GetPVarFloat(playerid, "MarkY"), GetPVarFloat(playerid, "MarkZ"),GetPVarInt(playerid, "MarkVW"),GetPVarInt(playerid, "MarkInt"));
	SendOk(playerid, "Вы телепортировались на сохраненную ранее позицию");
	return 1;
}
CMD:satiety(playerid) {
	new str[150];
	format(str,sizeof(str),""W"Сытость:\t"ORANGE"%d",PI[playerid][pSatiety]);
	D(playerid,DIALOG_NONE,DSM, ""P"Информация",str,"Закрыть","");
}
CMD:hunger(playerid, params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new hp,giveplayerid;
	if(sscanf(params, "ud",giveplayerid,hp)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /hunger [playerid] [сытость]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(hp >= 101) return SendClientMessage(playerid, COLOR_GREY, "Нельзя давать больше 100 хп");
	PI[giveplayerid][pSatiety] = hp;
	UpdatePlayerData(giveplayerid,"pSatiety",PI[giveplayerid][pSatiety]);
	SetFullness(giveplayerid, PI[giveplayerid][pSatiety]);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] установил %d сытости игроку %s[%d]",player_name[playerid],playerid,hp,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string);
	return true;
}
CMD:sethp(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new hp,giveplayerid;
	if(sscanf(params, "ud",giveplayerid,hp)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /sethp [playerid] [HP]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(hp < 0 || hp > 1000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя давать меньше 0 хп и больше 1000 хп");
	SetHealth(giveplayerid, hp);
	PI[giveplayerid][pHP] = hp;
	return true;
}
CMD:setarm(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new hp,giveplayerid;
	if(sscanf(params, "ud",giveplayerid,hp)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /setarm [playerid] [armour]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(hp >= 101) return SendClientMessage(playerid, COLOR_GREY, "Нельзя давать больше 100 брони");
	SetArmour(giveplayerid, hp);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] установил %d брони игроку %s[%d]",player_name[playerid],playerid,hp,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string);
	return true;
}
CMD:offstats(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new text = strlen(params);
	if(!text) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /offstats [Nick Name]");
	if(text < 3 || text > 24) return SendClientMessage(playerid, COLOR_GREY, "От 3 до 24 символов");
	new query[128];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `accounts` WHERE `Name` = '%s' LIMIT 1", params);
	mysql_tquery(connects, query, "AGetStats", "is", playerid, params);
	return 1;
}
CMD:getid(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /getid [ID]");
	new query[128];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `accounts` WHERE `pID` = '%d' LIMIT 1", giveplayerid);
	mysql_tquery(connects, query, "AGetID", "ii", playerid, giveplayerid);
	return 1;
}
//4
CMD:asettax(playerid,params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /asettax [деньги]");
	if(giveplayerid < 1 || giveplayerid > 1000000) return SendClientMessage(playerid, COLOR_GREY, "От $1 до $1000000");
	FI[fWHITEHOUSE][fBank] += giveplayerid;
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] добавил в казну штата $%d",player_name[playerid],playerid,giveplayerid);
	AdmMSG(0xAFAFAFAA, string);
	return 1;
}
CMD:awarehouse(playerid, const params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	static const f_str[] = "\
							"W"На складе Нац. Гвардии: \t\t"ORANGE"%i\n\
							"W"На складе RCSD: \t\t"ORANGE"%i\n\
							"W"На складе FBI: \t\t\t"ORANGE"%i\n\
							"W"На складе LSPD: \t\t\t"ORANGE"%i\n\
							"W"На складе Angels MC: \t\t\t"ORANGE"%i\n\
							"W"На складе Bandidos MC: \t\t\t"ORANGE"%i\n\
							"W"На складе Итальянская мафии: \t"ORANGE"%i\n\
							"W"На складе Японской мафии: \t\t"ORANGE"%i\n\
							"W"На складе Русской мафии: \t\t"ORANGE"%i\n\
							"W"На складе Ballas: \t\t\t"ORANGE"%i\n\
							"W"На складе Vagos: \t\t\t"ORANGE"%i\n\
							"W"На складе Grove: \t\t\t"ORANGE"%i\n\
							"W"На складе Aztecas: \t\t\t"ORANGE"%i\n\
							"W"На складе Rifa: \t\t\t"ORANGE"%i\n\
							"W"Оружейный завод: \t\t\t"ORANGE"%i\n\
							"W"Лесопилка: \t\t\t\t"ORANGE"%i";
	new string[sizeof(f_str) +1 + 100];
	format(string,sizeof(string),f_str,FI[fARMYLS][fMats],FI[fRCSD][fMats],FI[fFBI][fMats],FI[fLSPD][fMats],
	FI[fBikers][fMats],FI[fBikersTwo][fMats],FI[fLCN][fMats],FI[fYAKUZA][fMats],FI[fRM][fMats],
	FI[fBALLAS][fMats],FI[fVAGOS][fMats],FI[fGROVE][fMats],FI[fAZTEC][fMats],FI[fRIFA][fMats],zavodsklad,woodsklad);
	D(playerid,DIALOG_NONE,DSM, ""P"Состояние складов",string,"Закрыть","");
	return true;
}
//-----------------------------------------[4 уровень]-------------------------------------------//
CMD:skick(playerid,params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new string[144],giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /skick [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	format(string, sizeof(string), "[A] %s[%d] кикнул без лишнего шума игрока %s[%d]",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid);
	AdmMSG(CADMIN_INFO,string);
	KickEx(giveplayerid);
	WriteLog(LOG_SKICK,player_name[playerid],player_name[giveplayerid],"SKick");
	return 1;
}
alias:rban("ipban");
CMD:rban(playerid, params[])
{
	if (PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new ban_ip[16], ban_reason_ip [32];
	if (sscanf ( params, "s[16]s[32]", ban_ip, ban_reason_ip)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /rban [IP] [причина]");
	if (strfind (ban_ip, "*.*", true ) != -1 ) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: Неправильный ip адрес.");

	new null;
	for (new i = 0; i < strlen(ban_ip[0]); i++)
	{
		if (strfind(ban_ip[i], ".", true) == 0) null++;
	}
	if (null != 3) return SendClientMessage(playerid, COLOR_GREY, "Неверный IP адрес. Пример для бана подсети: 127.0.0. (Должны присутствовать 3 точки)");

	MYSQL_GLOBAL[0] = EOS;
	mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL), "INSERT INTO `banip` (`IP`,`admin`,`reason`) VALUES ('%s','%e','%e')", ban_ip, player_name[playerid], ban_reason_ip);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	new string[200];
	format(string, sizeof(string), "[A] %s[%d] забанил IP: %s Причина: %s", player_name[playerid], playerid, ban_ip, ban_reason_ip);
	SendAdminMessage(CADMIN_INFO, string);
	format(string, sizeof(string), "блокировка IP Причина: %s", ban_reason_ip);
	WriteLog(LOG_BANIP, player_name[playerid], ban_ip, string);
	return true;
}
CMD:unrban(playerid, params[])
{
	if (PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if (isnull(params) || strlen(params) > 18) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /unrban [IP адрес]");
	new null;
	for (new i = 0; i < strlen(params[0]); i++)
	{
		if (strfind(params[i], ".", true) == 0) null++;
	}
	if (null != 3) return SendClientMessage(playerid, COLOR_GREY, "Неверный IP адрес");

	MYSQL_GLOBAL[0] = EOS;
	mysql_format(connects, MYSQL_GLOBAL, sizeof (MYSQL_GLOBAL), "DELETE FROM `banip` WHERE `IP` = '%s'", params);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] разбанил IP: %s", player_name[playerid], playerid, params);
	SendAdminMessage(CADMIN_INFO, string);
	WriteLog(LOG_UNBANIP, player_name[playerid], params, "разблокировка IP");
	return true;
}
CMD:offban(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new name[25],text[130],string[128],day,giveplayerid;
	if(sscanf(params, "p< >s[24]ds[128]", name,day,text)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /offban [Nick Name] [дни] [причина]");
	if(day > 30 || 1 > day) return SendClientMessage(playerid, COLOR_GREY, "От 1 до 30 дней");
	sscanf(name, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок онлайн");
	if(strlen(text) > 30) return SendClientMessage(playerid, COLOR_GREY, "Не больше 30 символов");
	if(!IsBannedNameReg(name)) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не зарегистрирован на сервере");
	BanName(name, player_name[playerid], day, text);
	format(string, sizeof(string), "Администратор %s забанил %s на %d дней в оффлайне. Причина: %s",player_name[playerid], name, day, text);
	SendAdminActionMessage(COLOR_LIGHTRED,string);
	gAdmin[playerid][ADMIN_BAN] ++;
	WriteLog(LOG_BAN,player_name[playerid],name,text);
	return true;
}
CMD:ioffban(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new name[25],text[130],string[128],giveplayerid;
	if(sscanf(params, "p< >s[24]s[128]", name,text)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /ioffban [Nick Name] [причина]");
	if(!IsBannedNameReg(name)) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не зарегистрирован на сервере");
	sscanf(name, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок онлайн");
	if(strlen(text) > 30) return SendClientMessage(playerid, COLOR_GREY, "Не больше 30 символов");
	BanName(name, player_name[playerid], 1000, text);
	format(string, sizeof(string), "Администратор %s забанил %s в оффлайне. Причина: %s",player_name[playerid], name, text);
	SendAdminActionMessage(COLOR_LIGHTRED,string);
	gAdmin[playerid][ADMIN_BAN] ++;
	WriteLog(LOG_BAN,player_name[playerid],name,text);
	return true;
}
CMD:offwarn(playerid, params[])
{
	if (PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new name[MAX_PLAYER_NAME], text[130], giveplayerid;
	if (sscanf(params, "s[24]s[64]", name, text)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /offwarn [Nick Name] [причина]");
	sscanf(name, "u", giveplayerid);
	if (giveplayerid != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок онлайн");
	if (strlen(text) > 30) return SendClientMessage(playerid, COLOR_GREY, "Не больше 30 символов");

	MYSQL_GLOBAL[0] = EOS;
	mysql_format(connects, MYSQL_GLOBAL, sizeof (MYSQL_GLOBAL), "SELECT * FROM `accounts` WHERE `Name` = '%e'", name);
	mysql_tquery(connects, MYSQL_GLOBAL, "offwarn", "dss", playerid, name, text);
	return true;
}
CMD:unban(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new string[220];
	if(isnull(params) || strlen(params) > 25) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /unban [Nick Name]");
	if(!IsBannedName(params)) return  SendClientMessage(playerid, COLOR_GREY, "Данный игрок не заблокирован");
	mysql_escape_string(params, UnbanName[playerid], 27);
	new NAME_ADMIN[24], NAME_PLAYER[24], BAN_REASON[32], UNBAN_DATA[27];
	mysql_format(connects, string, sizeof(string),"SELECT * FROM `ban` WHERE BINARY `Name` = '%s' LIMIT 1", UnbanName[playerid]);
	new Cache:result = mysql_query(connects, string);
	new rows = cache_num_rows();
	if(rows)
	{
		cache_get_value_index(0,2,NAME_PLAYER,24);
		cache_get_value_index(0,1,NAME_ADMIN,24);
		cache_get_value_index(0,3,BAN_REASON,37);
		cache_get_value_index(0,5,UNBAN_DATA, 27);
		format(string,sizeof(string),"\
			"W"Заблокирован:\t"NO"%s\n\
			"W"Заблокировал:\t"ORANGE"%s\n\
			"W"Причина:\t\t"ORANGE"%s\n\
			"W"Разблокировка:\t"ORANGE"%s",
		NAME_PLAYER,NAME_ADMIN, BAN_REASON, UNBAN_DATA);
		D(playerid,D_UNBAN,DSM, ""P"Информация о забаненном",string,"Разбанить","Отмена");
	}
	cache_delete(result);
	return 1;
}
CMD:setfuel(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return 1;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в машине");
	new giveplayerid, giveakum;
	if(sscanf(params, "dd", giveplayerid, giveakum)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /setfuel [кол-во литров][кол-во заряда аккамулятора]");
	if(giveplayerid < 10 || giveplayerid > 150) return SendClientMessage(playerid, COLOR_GREY, "Литров от 10 до 150");
	new vehid = GetPlayerVehicleID(playerid);
	new string[128];
	format(string,sizeof(string),"Вы установили транспорту %d литров топлива и %d заряда аккамулятора",giveplayerid, giveakum);
	SendOk(playerid,string);
	VehicleInfo[vehid][vFuel] = giveplayerid;
	VehicleInfo[vehid][vAkum] = giveakum;
	return 1;
}
CMD:fin(playerid,params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new i = 0;
	for(new b; b < gBusinessCount; b++) {
		if(PlayerToPoint(10.0, playerid, gBusiness[b][bizzX], gBusiness[b][bizzY], gBusiness[b][bizzZ])) {
			new query[156];
			mysql_format(connects, query, sizeof(query),"SELECT * FROM `business_stats` WHERE `bizz` = '%i'", b);
			mysql_tquery(connects, query, "bizz_stats", "ii", playerid,b);
			i = 1;
		}
	}
	if(i == 0) SendClientMessage(playerid, COLOR_GREY, "Вы не рядом с бизнесом");
	return 1;
}
CMD:veh(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new car, color1, color2;
	if(sscanf(params,"ddd",car,color1,color2)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /veh [CAR ID] [color] [color]");
	if(car < 400 || car > 611) return SendClientMessage(playerid, COLOR_GREY, "ID автомобиля от 400 до 611");
	if(color1 < 0 || color1 > 256 || color2 < 0 || color2 > 256) return SendClientMessage(playerid, COLOR_GREY, "№ цвета автомобиля от 0 до 256");
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(VehicleInfo[i][vType] != VEHICLE_TYPE_ADMIN) continue;
	}
	new Float:X,Float:Y,Float:Z,Float:A;
	GetPlayerPos(playerid, X,Y,Z);
	GetPlayerFacingAngle(playerid,A);
	X += 1.5;
	new vehicleid = A_CreateVehicle(car, X,Y,Z,A, color1, color2, -1,VEHICLE_TYPE_ADMIN);
	SetVehicleParamsEx(vehicleid,false,false,false,false,false,false,false);
	SetVehicleNumberPlate(vehicleid, "Admin Car");
	LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
	SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
	VehicleInfo[vehicleid][veX] = X;
	VehicleInfo[vehicleid][veY] = Y;
	VehicleInfo[vehicleid][veZ] = Z;
	VehicleInfo[vehicleid][vFuel] = gTransport[GetVehicleModel(vehicleid)-400][trTank];
	VehicleInfo[vehicleid][vAkum] = 100;
	
	new string[90];
	format(string, sizeof(string), "[A] %s[%d] создал авто. ID: %i",player_name[playerid],playerid,vehicleid);
	AdmMSG(0xAFAFAFAA, string);
	SendOk(playerid,"Чтобы удалить авто,введите: "P"/delveh");
	SendOk(playerid,"Чтобы удалить все админ авто,введите: "P"/alldelveh");
	return true;
}

CMD:plveh(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params,"uiii", params[0], params[1], params[2],params[3])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /plveh [id игрока] [id модели] [цвет 1] [цвет 2]");
	if(params[1] < 400 || params[1] > 611) return SendClientMessage(playerid, COLOR_GREY, "ID машины должен быть от 400 до 611!");
	if(params[2] < 0 || params[2] > 255) return SendClientMessage(playerid, COLOR_GREY, "ID цвета должен быть от 0 до 255!");
	if(params[3] < 0 || params[3] > 255) return SendClientMessage(playerid, COLOR_GREY, "ID цвета должен быть от 0 до 255!");
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(VehicleInfo[i][vType] != VEHICLE_TYPE_ADMIN) continue;
	}
	new Float:X,Float:Y,Float:Z,Float:A;
	GetPlayerPos(params[0], X,Y,Z);
	GetPlayerFacingAngle(params[0],A);
	X += 1.5;
	new vehicleid = A_CreateVehicle(params[1], X,Y,Z,A, params[2], params[3], -1,VEHICLE_TYPE_ADMIN);
	SetVehicleParamsEx(vehicleid,false,false,false,false,false,false,false);
	SetVehicleNumberPlate(vehicleid, "Admin Car");
	LinkVehicleToInterior(vehicleid, GetPlayerInterior(params[0]));
	VehicleInfo[vehicleid][veX] = X;
	VehicleInfo[vehicleid][veY] = Y;
	VehicleInfo[vehicleid][veZ] = Z;
	VehicleInfo[vehicleid][vFuel] = 100.0;
	VehicleInfo[vehicleid][vAkum] = 100;
	t_PutPlayerInVehicle(params[0], vehicleid, 0);
	return true;
}

CMD:delveh(playerid) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new vehicleid = GetPlayerVehicleID(playerid);
	if(VehicleInfo[vehicleid][vType] != VEHICLE_TYPE_ADMIN) return SendClientMessage(playerid, COLOR_GREY, "Данный автомобиль нельзя удалить");
	A_DestroyVehicle(vehicleid);
	new string[90];
	format(string, sizeof(string), "[A] %s[%d] удалил авто. ID: %i",player_name[playerid],playerid,vehicleid);
	AdmMSG(0xAFAFAFAA, string);
	SendOk(playerid,"Автомобиль удален");
	return 1;
}
CMD:alldelveh(playerid) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(VehicleInfo[i][vType] != VEHICLE_TYPE_ADMIN) continue;
		A_DestroyVehicle(i);
	}
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] удалил все созданные авто",player_name[playerid],playerid);
	AdmMSG(0xAFAFAFAA, string);
	SendOk(playerid,"Все админ авто удалены");
	return 1;
}
CMD:unwarn(playerid, params[])
{
	if (PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if (sscanf(params, "d", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /unwarn [playerid]");
	if (!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if (PI[giveplayerid][pWarns] == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет предупреждений");

	PI[giveplayerid][pWarns]--;
	UpdatePlayerData(giveplayerid, "pWarns", PI[giveplayerid][pWarns]);
	new string[92];
	format(string, sizeof(string), "[A] %s[%d] удалил 1 предупреждение игроку %s[%d]", player_name[playerid], playerid, player_name[giveplayerid], giveplayerid);
	AdmMSG(0xAFAFAFAA, string);

	format(string, sizeof(string), "Администратор %s удалил Вам 1 предупреждение", player_name[playerid]);
	SendClientMessage(giveplayerid, CGOLD, string);
	
	WriteLog(LOG_UNWARN, player_name[playerid], player_name[giveplayerid], "снял варн");
	return 1;
}
CMD:offunwarn(playerid, params[])
{
	if (PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new string[220], giveplayerid;
	if (isnull(params) || strlen(params) > 25) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /offunwarn [Nick Name]");
	sscanf(params, "u", giveplayerid);
	if (giveplayerid != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок онлайн");
	mysql_format(connects, string, sizeof(string), "SELECT `pWarns` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", params);
	new warns = 0;
	new Cache: result = mysql_query(connects, string);
	new rows = cache_num_rows();
	if (rows > 0)
	{
		cache_get_value_int(0, "pWarns", warns);
		if (warns == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Варны отсутствуют");
			if (cache_is_valid(result)) cache_delete(result);
			return 1;
		}

		MYSQL_GLOBAL[0] = EOS;
		mysql_format(connects, MYSQL_GLOBAL, sizeof MYSQL_GLOBAL, "UPDATE `accounts` SET `pWarns` = '%d' WHERE `Name` = '%s' LIMIT 1", warns - 1, params);
		mysql_pquery(connects, MYSQL_GLOBAL);
		new str[128];
		format(str, sizeof(str), "[A] %s[%d] удалил предупреждения в оффлайн игроку %s", player_name[playerid], playerid, params);
		AdmMSG(0xAFAFAFAA, str);
		
		WriteLog(LOG_WARN, player_name[playerid], params, "снял варн");
		
		SendClientMessage(playerid,COLOR_WHITE,"Вы успешно сняли предупреждение");
	}
	if (cache_is_valid(result)) cache_delete(result);
	return 1;
}
CMD:weather(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /weather [id]");
	new string[128];
	format(string, sizeof(string), "[A] %s сменил номер погоды на %d", player_name[playerid], giveplayerid);
	AdmMSG(0xAFAFAFAA, string);
	SetWeather(giveplayerid);
	return true;
}
CMD:settime(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /weather [id]");
	new string[128];
	format(string, sizeof(string), "[A] %s сменил номер погоды на %d", player_name[playerid], giveplayerid);
	AdmMSG(0xAFAFAFAA, string);
	SetWorldTime(giveplayerid);
	return true;
}
CMD:uval(playerid, params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new reason[130],giveplayerid;
	if(sscanf(params, "ds[128]", giveplayerid, reason)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /uval [id] [причина]");
	if(strlen(reason)>40) return SendClientMessage(playerid, COLOR_GREY, "Не больше 40 символов");
	if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(!PI[giveplayerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации");
	if(GetString(FI[PI[giveplayerid][pMember]][fLeader],player_name[giveplayerid])) return SendClientMessage(playerid, COLOR_GREY, "Лидера можно снять только через /makeleader");

	static const f_str[] = "Администратор %s[%i] уволил Вас из организации. Причина: %s";
	new string[sizeof(f_str) +1 + (-2 + 25) + (-2 + 4) + (-2 + 31)];

	format(string, sizeof(string), f_str, player_name[playerid],playerid, reason);
	SendClientMessage(giveplayerid, 0xFF182DFF, string);

	format(string, sizeof(string), "[A] %s[%d] выгнал игрока %s[%d] из фракции",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string);

	SetArmour(giveplayerid, 0);
	ResetPlayerWeapons(giveplayerid);

	if(start_work[giveplayerid]) {
		SendOk(giveplayerid,"Рабочий день окончен");
		start_work[giveplayerid] = 0;
		UpdatePlayerData(giveplayerid, "FracDuty", 0);
	}
	add_jobinfo(giveplayerid,reason);
	
	if(IsAGang(giveplayerid) && GetPVarInt(giveplayerid, "ppkz")) EndCapt(giveplayerid);
	
	PI[giveplayerid][pAdvert] = 0;
	UpdatePlayerData(giveplayerid,"Advert", 0);
	
	PI[giveplayerid][pMember] = 0;
	PI[giveplayerid][pRank] = 0;
	PI[giveplayerid][pFracSkin] = 0;
	PI[giveplayerid][pLeader] = 0;
	PI[giveplayerid][pMedHeal] = 0;
	PI[giveplayerid][pZahvat] = 0;
	
	UpdatePlayerData(giveplayerid,"MedHeal",0);
	SetPlayerColor(giveplayerid, TEAM_HIT_COLOR);
	if(PI[giveplayerid][pHouse] > 0) PI[giveplayerid][pSpawn] = 1;
	else PI[giveplayerid][pSpawn] = 0;
	UpdatePlayerData(giveplayerid,"pModel",PI[giveplayerid][pFracSkin]);
	UpdatePlayerData(giveplayerid,"pMember",PI[giveplayerid][pMember]);
	UpdatePlayerData(giveplayerid,"pLeader",PI[giveplayerid][pLeader]);
	UpdatePlayerData(giveplayerid,"spawn",PI[giveplayerid][pSpawn]);
	UpdatePlayerData(giveplayerid,"pRank",PI[giveplayerid][pRank]);
	UpdatePlayerData(giveplayerid,"zahvat",PI[giveplayerid][pZahvat]);
	
	skin_player(giveplayerid);
	WriteLog(LOG_UVAL,player_name[playerid],player_name[giveplayerid],reason);
	//NickName(playerid);
	return 1;
}
CMD:ears(playerid) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	static const command_message[][] = {
		"Слушать смс ON",
		"Слушать смс OFF"
	};
	SendClientMessage(playerid, COLOR_REDD, command_message[GetPVarInt(playerid, "BigEarSms")]);
	SetPVarInt(playerid, "BigEarSms", !GetPVarInt(playerid, "BigEarSms"));
	return 1;
}
CMD:hpall(playerid,params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /hpall [радиус]");
	if(giveplayerid < 5 || giveplayerid > 15) return SendClientMessage(playerid, COLOR_GREY, "Радиус от 5 до 15 метров");
	new Float:pos[3];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(IsPlayerInRangeOfPoint(i, params[0], pos[0], pos[1], pos[2])) {
			SetHealth(i, 100.0);
			SendOk(i, "Администратор восстановил Вам здоровье");
		}
	}
	SendOk(playerid, "Всем игрокам в указанном радиусе было восстановлено здоровье");
	return 1;
}
CMD:spall(playerid,params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /spall [радиус]");
	if(giveplayerid < 5 || giveplayerid > 15) return SendClientMessage(playerid, COLOR_GREY, "Радиус от 5 до 15 метров");
	new Float:pos[3];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(IsPlayerInRangeOfPoint(i, params[0], pos[0], pos[1], pos[2])) {
			PlayerSpawn(i);
		}
	}
	SendOk(playerid, "Все игроки в указанном радиусе были заспавнены");
	return 1;
}
CMD:gettax(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;	
	new string[128];
	format(string, sizeof(string), "В казне штата: "ORANGE"$%i", FI[fWHITEHOUSE][fBank]);
	SendOk(playerid, string);
	return 1;
}
CMD:sban(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new day,text[130],string[415],giveplayerid;
	if(sscanf(params, "uds[128]",giveplayerid,day,text)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /sban [playerid] [дни] [причина]");
	if(PlayerAdminFix[playerid] > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Можно раз в 10 секунд");
	PlayerAdminFix[playerid] = gettime() + 10;
	if(isAdminStatus(player_name[giveplayerid])) return 1;
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if(strlen(text)>30) return SendClientMessage(playerid, COLOR_GREY, "Не больше 30 символов");
	if(IsAIP(text)) return 1;
	if(day > 30 || 1 > day) return SendClientMessage(playerid, COLOR_GREY, "От 1 до 30 дней");
	format(string, 144, "[A] %s[%d] забанил игрока %s без лишнего шума на %d дней. Причина: %s",player_name[playerid],playerid, player_name[giveplayerid],day,text);
	AdmMSG(CADMIN_INFO,string);
	new ip[17];
	GetPlayerIp(giveplayerid,ip,sizeof(ip));
	format(string, sizeof(string), "Name [%s]  R-IP [%s]  L-IP [%s]  IP [%s]",player_name[giveplayerid],PI[giveplayerid][pIpReg],player_ip[giveplayerid],ip);
	AdmMSG(CADMIN_INFO,string);
	BanName(player_name[giveplayerid], player_name[playerid], day, text);
	WriteLog(LOG_SBAN,player_name[playerid],player_name[giveplayerid],text);
	gAdmin[playerid][ADMIN_BAN] ++;
	new hour,minute;
	new year,month,days;

	getdate(year, month, days);
	gettime(hour,minute);
	string = "";
	static const f_str[] = "\
			"W"Внимание! Ваш аккаунт был "NO"заблокирован"W"\n\n\
			"W"Заблокировал: "NO"%s\n\
			"W"Дни: "ORANGE"%d\n\
			"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
			"W"Причина: "ORANGE"%s\n\n\
			"W"Если вы считаете, что это ошибка, сделайте скриншот(F8) данного окна,\n\
			иначе Ваша жалоба будет не принята.";
	format(string,sizeof(string),f_str,player_name[playerid], day,days, month, year,hour, minute, text);

	new str[MAX_PLAYER_NAME+1];
	format(str,sizeof(str),"%s",player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрыть", "");
	KickEx(giveplayerid);
	return true;
}
alias:gun("givegun");
CMD:gun(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new gun,ammo,giveplayerid;
	if(sscanf(params, "udd",giveplayerid,gun,ammo)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /gun [id] [id оружия] [патроны]");
	if(ammo < 1 || ammo > 9999) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меньше 1 или больше 9999 патронов!");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(gun > 46) return SendClientMessage(playerid, COLOR_GREY, "Оружие не должно быть больше 46");
	if(gun != 24 && gun != 25 && gun != 26 && gun != 29 && gun != 30 && gun != 31 && gun != 33) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать запрещенное оружие");
	GivePlayerWeapon(giveplayerid,gun,ammo);
	
	static const f_str[] = "Оружие было выдано игроку %s";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
	format(string,sizeof(string),f_str, player_name[giveplayerid]);
	SendOk(playerid,string);

	WriteLog(LOG_GUN,player_name[playerid],player_name[giveplayerid],"выдача оружия");
	return true;
}
//-----------------------------------------[5 уровень]-------------------------------------------//
CMD:amusic(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new nonf;
	if(sscanf(params, "f",nonf)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /amusic [радиус 1 - 300 или 0 - выключить] [ссылка]");
	if(nonf == 0) {
		Sounds = 0;
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			StopAudioStreamForPlayer(i);
			UseSound[i] = 0;
		}
		return SendOk(playerid, "Музыка отключена");
	}
	new path[150];
	if(sscanf(params, "ds[150]",params[0],path)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /amusic [радиус 1 - 300 или 0 - выключить] [ссылка]");
	if(params[0] < 1 || params[0] > 300) return SendClientMessage(playerid, COLOR_GREY, "От 1 до 300");
	format(stream, sizeof(stream),"%s",path);
	rads = params[0];
	Sounds = 1;
	new Float:x1,Float:y1,Float:z1;
	GetPlayerPos(playerid,x1,y1,z1);
	streampos[0] = x1;
	streampos[1] = y1;
	streampos[2] = z1;
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		UseSound[i] = 0;
	}
	SendOk(playerid, "Музыка включена");
	return 1;
}
CMD:enter(playerid) {
	new Float:x, Float:y,Float:z;
	new car = GetNearestVehicle(playerid);
	GetVehiclePos(car, x, y, z);
	GetVehicleParamsEx(car,engine,lights,alarm,doors,bonnet,boot,objective);
	if(IsPlayerInRangeOfPoint(playerid,4.5,x,y,z) && doors == 0)
	{
		if(GetVehicleModel(car) == 454)
		{
			SetPlayerPosAC(playerid,1150.9573,-551.8545,1122.1689, car, 2);
			SetPlayerFacingAngle(playerid,88.9087);
			SetPlayerInterior(playerid,2);
			SetPlayerVirtualWorld(playerid, car);
			FreezePlayerForTime(playerid,3);
			SetCameraBehindPlayer(playerid);
			TI[playerid][tBoatEnter] = car;
			SetPVarFloat(playerid,"ex_cord_x",x);
			SetPVarFloat(playerid,"ex_cord_y",y);
			SetPVarFloat(playerid,"ex_cord_z",z);
		}
	}
	return true;
}

CMD:kdd(playerid) {
	if(TI[playerid][tDM] == 0) return true;
	new string[450], number = 0;
	format(string,sizeof(string),""W"# Ник\t"W"Убийства\t"W"Смертей\n");
	foreach(new i:Player)
	{
		if(!TI[i][tLogin]) continue;
		if(number > 15) continue;
		if(TI[i][tDM] == TI[playerid][tDM])
		{
			number++;
			if(playerid == i) format(string,sizeof(string),"%s{71CC71}%i. %s\t%i\t%i\n",string,number,player_name[i],TI[i][tDM_k],TI[i][tDM_d]);
			else format(string,sizeof(string),"%s%i. %s\t%i\t%i\n",string,number,player_name[i],TI[i][tDM_k],TI[i][tDM_d]);
		}
	}
	D(playerid,DIALOG_NONE,DSTH, ""P"Статистика",string,"Закрыть","");
	return true;
}

CMD:hexit(playerid) {
	if(hellow[playerid] == 0) return true;
	
	SetPlayerPosAC(playerid, 1511.8196,-1663.4633,13.3226, 0, 0);
	SetPlayerFacingAngle(playerid, 90.6334);
	ResetPlayerWeapons(playerid);
	SetCameraBehindPlayer(playerid);
	
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	
	new freezeSeconds = 0;
	switch (GetPlayerPing(playerid)) {
	case 0 .. 49: freezeSeconds = 2;
	case 50 .. 199: freezeSeconds = 3;
	case 200 .. 499: freezeSeconds = 4;
	default: freezeSeconds = 5;
	}
	FreezePlayerForTime(playerid, freezeSeconds);
	
	PlayerTextDrawHide(playerid, DmArenaTextDraw[playerid]);
	
	hellow[playerid] = 0;
	return true;
}

CMD:exitdm(playerid) {
	if(TI[playerid][tDM] == 0) return true;
	SetPlayerPosAC(playerid, -1143.6364,-283.7115,1128.3345, 2, 2);
	SetPlayerFacingAngle(playerid, 179.6827);
	FreezePlayerForTime(playerid,2);
	ResetPlayerWeapons(playerid);
	players_dm[TI[playerid][tDM]-1]--;
	TI[playerid][tDM] = 0;
	PlayerTextDrawHide(playerid, DmArenaTextDraw[playerid]);
	SetCameraBehindPlayer(playerid);
	return true;
}

CMD:endtune(playerid) {
	if(IsPlayerInRangeOfPoint(playerid,15.0, -2463.8516,2513.8286,1014.7252))
	{
		SetVehiclePos(GetPlayerVehicleID(playerid), 882.1031,-1339.8259,13.3671);
		SetVehicleZAngle(GetPlayerVehicleID(playerid), 0.7275);
		exit_garage(GetPlayerVehicleID(playerid),0);
	}
	return true;
}

CMD:selltr(playerid, const params[]) {
	if(!GetPlayerVehicles(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома на колесах!");
	if(!params[0]) {
		new string[156];
		format(string,sizeof(string),""W"Вы хотите продать дом на колесах за "ORANGE"$%d?\n\n"G"Для продажи дома игроку введите: /selltr [ID игрока] [Цена]",TRAILER_SELL/100*50);
		D(playerid,D_TRAILER_SELL,DSM, ""P"Продажа дома",string,"Да","Нет");
		return true;
	}
	if(sscanf(params, "dd",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /selltr [ID игрока] [Сумма]");
	if(params[1] < 1 || params[1] > 5000000) return SendClientMessage(playerid, COLOR_GREY, "Сумма не может быть меньше 1$ не больше 5000000$");
	if(!IsPlayerConnected(params[0]) || playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");
	if(active_accept(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть активное предложение");
	if(GetPlayerVehicles(params[0])) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже есть дом на колесах");


	new string[144];
	format(string, sizeof(string), ""P"%s "W"предложил(а) Вам купить его дом на колесах за "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
	format(string, sizeof(string), "Вы предложили "P"%s "W"купить Ваш дом на колесах за "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);
	SetPVarInt(params[0],"hCarSeller",playerid + 1);
	SetPVarInt(playerid,"hCarBuyer",params[0] + 1);
	SetPVarInt(params[0],"hCarPrices",params[1]);
	GetPlayerVehicles(playerid);
	return true;
}
CMD:trgps(playerid) {
	if(!GetPlayerVehicles(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома на колесах!");
	if(GetPlayerInterior(playerid) > 0) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в помещении");
	if(GetPVarInt(playerid,"route")) return SendClientMessage(playerid, COLOR_GREY, "Сначала закончите работу водителя автобуса");
	if(GetPVarInt(playerid,"WaitExam")) return SendClientMessage(playerid, COLOR_GREY, "Невозможно во время сдачи экзамена");
	if(GetPVarInt(playerid,"check_job_cleaner")) return SendClientMessage(playerid, COLOR_GREY, "Невозможно во время работы мойщика дорог");
	if(GetPVarInt(playerid,"RaceCP")) return SendClientMessage(playerid, COLOR_GREY, "Невозможно использовать в данный момент");
	new
	player_vehicle_id = playerVehicleID[playerid],
	vehicleid = PlayerTrailer[player_vehicle_id][carVehicle];
	new Float:vehiclePos[3];
	GetVehiclePos(vehicleid, vehiclePos[0], vehiclePos[1], vehiclePos[2]);
	SendClientMessage(playerid, CGOLD, "Местоположение вашего трейлера успешно отмечено в вашем GPS");
	EnableGPSForPlayer(playerid, vehiclePos[0], vehiclePos[1], vehiclePos[2]);
	return true;
}
alias:trpark("park");
CMD:trpark(playerid) {
	ParkPlayerVehicle(playerid);
	return true;
}
CMD:trdate(playerid) {
	if(!GetPlayerVehicles(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома на колесах!");
	new day = (PlayerTrailer[playerVehicleID[playerid]][carDay]-gettime())/86400, str[120];
	format(str,sizeof(str),""W"Дом на колесах оплачен на"P" %i дней\n\n"G"* Не забывайте в банке оплачивать дом на колесах!", day);
	D(playerid, DIALOG_NONE, DSM, ""P"Оплата дома на колесах",str, "Закрыть", "");
	return true;
}
CMD:bonus(playerid) {
	if(PI[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Использование бонус-кода доступно со 2-го уровня");
	D(playerid, D_FAKE_PROMO, DIALOG_STYLE_INPUT, ""P"Ввод бонус-кода", ""W"Введите ниже действующий бонус-код:", "Принять", "Закрыть");
	return true;
}
CMD:createbonus(playerid)
{
	if (PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;

	PlayerPromoText[playerid][0] = EOS;
	PlayerPromoDonate[playerid] = 0;
	PlayerPromoMoney[playerid] = 0;
	PlayerPromoCount[playerid] = 0;

	D(playerid, D_FAKE_PROMO_CREATE, DIALOG_STYLE_INPUT, ""P"Создание бонус-кода", "Введите бонус-код который хотите создать", "Принять", "Отмена");
	return true;
}

CMD:endtrade(playerid) {
	if(PI[playerid][pPalatka] == 0) return true;
	EndTrade(playerid);
	return true;
}

CMD:gzcolor(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /gzcolor [банда]");
	if(giveplayerid != fBALLAS && giveplayerid != fVAGOS && giveplayerid != fGROVE && giveplayerid != fAZTEC && giveplayerid != fRIFA) return SendClientMessage(playerid, COLOR_GREY, "Банда указана не верно");
	for(new i = 0; i < TOTALGZ; i++) {
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) {

			new str[250];
			mysql_format(connects, str, sizeof(str),"INSERT INTO `log_zone` (`Name`, `band_old`,`band_new`) VALUES ('%s','%i','%i')",player_name[playerid],GZInfo[i][gFrakVlad], giveplayerid);
			mysql_pquery(connects, str, "", "");
			
			new msg[350];
			format(msg, sizeof(msg), "[A] %s[%d] передал территорию %s банде %s",player_name[playerid],playerid, FI[GZInfo[i][gFrakVlad]][fName],FI[giveplayerid][fName]);
			AdmMSG(0xAFAFAFAA, msg);

			GZInfo[i][gFrakVlad] = giveplayerid;
			if(i == 13) {
				black_prods[0] = giveplayerid;
				black_prods[9] = unix + 60*60*72;
				SaveMarket();
				check_terrs();
			}
			GangZoneStopFlashForAll(GZInfo[i][gZone]);
			GangZoneHideForAll(GZInfo[i][gZone]);
			GangZoneShowForAll(GZInfo[i][gZone],GetGangZoneColor(i));
			
			new query[128];
			mysql_format(connects, query, sizeof(query),"UPDATE `"TABLE_GANGZONE"` SET `gang_owner` = '%i' WHERE `id` = %i",GZInfo[i][gFrakVlad],GZInfo[i][gID]);
			mysql_tquery(connects, query, "", "");
			return true;
		}
	}
	return true;
}
CMD:getdonate(playerid, params[]) {
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 25) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /getdonate [ник]");
	new query[156];
	mysql_format(connects, query, sizeof(query),"SELECT donatemoney FROM accounts WHERE Name = '%s'", params);
	mysql_tquery(connects, query, "OnPlayerDonateCheck", "is", playerid, params);
	return 1;
}
CMD:respv(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new Float: position[3],Float:rad;
	if(sscanf(params, "f", rad)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /respv [радиус]");
	if(rad > 100 || rad < 2) return SendClientMessage(playerid, COLOR_GREY, "Радиус от 2 до 100");
	GetPlayerPos(playerid, position[0], position[1], position[2]);
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		GetVehiclePos(i,position[0],position[1],position[2]);
		if(IsPlayerInRangeOfPoint(playerid,rad,position[0],position[1],position[2])) SetVehicleToRespawn(i);
	}
	SendOk(playerid, "Машины в выбранном радиусе заспавнены");
	return true;
}
//-----------------------------------------[6 уровень]-------------------------------------------//
CMD:reloadbans(playerid, params[]) {
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	SendRconCommand("reloadbans");
	SendOk(playerid, "Бан-лист перезагружен");
	return true;
}
CMD:saveall(playerid, params[]) {
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	//	SaveServer();
	SendOk(playerid, "Все данные сохранены");
	return true;
}
CMD:restartservera(playerid,params[]) {
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	SendClientMessageToAll(COLOR_YELLOW, "Через две минуты произойдет автоматическая перезагрузка сервера");
	SendClientMessageToAll(COLOR_YELLOW, "Просьба закончить все свои работы. Спасибо за понимание");
	SetTimer("OnServerRestarting", 100000, false);
	return true;
}
CMD:delacc(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params,"s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /delacc [Nick Name]");
	if(GetPlayerID(params[0]) != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Нельзя удалить аккаунт, игрок в сети");
	if(!strlen(params[0])) {
		if(GetPVarInt(playerid, "delstatus")) {
			SendClientMessage(playerid, COLOR_YELLOW, "Вы отменили удаление аккаунта");
			DeletePVar(playerid, "delstatus");
		}
		else SendClientMessage(playerid, COLOR_WHITE,"Используйте: /delacc [Nick Name]");
	}
	else {
		new query[128];
		mysql_format(connects, query, sizeof(query),"SELECT * FROM `accounts` WHERE BINARY `Name` = '%s'", params[0]);
		mysql_tquery(connects, query, "CheckDelAcc", "ds", playerid, params[0]);
	}
	return true;
}
//-----------------------------------------[5 уровень]-------------------------------------------//
CMD:tpcor(playerid,params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new Float:x,Float:z,Float:y;
	if(sscanf(params,"p<,>fff",x,y,z)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /tpcor [x] [y] [z]");
	SetPlayerPosAC(playerid,Float:x,Float:y,Float:z,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
	return 1;
}

CMD:addzone(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || !dostup[playerid]) return true;
	new string[1024],str[56];
	strcat(string,"Создать зеленую зону\n");
	for(new g = 1; g <= TOTALZONE; g++) {
		format(str, sizeof(str), "%i. %s\n", GREENZONE[g][grid], GREENZONE[g][grName]);
		strcat(string,str);
	}
	return D(playerid, D_GREENZONE, 2, "Зеленые зоны", string, "Выбрать", "Закрыть");
}
CMD:svw(playerid,params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /sv [WORLD]");
	SetPlayerVirtualWorld(playerid,giveplayerid);
	
	static const f_str[] = "Виртуальный мир: %i";
	new string[sizeof(f_str) +1 + (-2 + 4)];
	
	format(string, sizeof(string), f_str,giveplayerid);
	SendClientMessage(playerid,-1,string);
	return 1;
}
CMD:si(playerid,params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /si [INTERIOR]");
	SetPlayerInterior(playerid,giveplayerid);
	
	static const f_str[] = "Интерьер: %i";
	new string[sizeof(f_str) +1 + (-2 + 4)];

	format(string, sizeof(string), f_str,giveplayerid);
	SendClientMessage(playerid,-1,string);
	return 1;
}
CMD:payday(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	PayDay(playerid);
	return true;
}
CMD:cc(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	for(new i = 0; i < 60; i++) SendClientMessageToAll(COLOR_WHITE, "");
	SendClientMessageToAll(-1,"Игровой чат очищен администрацией сервера");
	return true;
}
CMD:lskin(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new skin,giveplayerid;
	if(sscanf(params, "ud", giveplayerid,skin)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /lskin [id игрока] [id скина]");
	if(!PI[giveplayerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не лидер!");
	if(skin == 74 || skin < 1 || skin > 311) return SendClientMessage(playerid, COLOR_GREY, "Неправильный ID скина!");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	new string[72];
	format(string, sizeof(string), "Вы изменили скин лидеру %s на номер: %i",player_name[giveplayerid],skin);
	SendOk(playerid, string);
	PI[giveplayerid][pFracSkin] = skin;
	A_SetPlayerSkin(giveplayerid,PI[giveplayerid][pFracSkin]);
	UpdatePlayerData(giveplayerid, "pModel", PI[giveplayerid][pFracSkin]);
	return true;
}
CMD:setskin(playerid, params[]) {
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new skin,giveplayerid;
	if(sscanf(params, "ud", giveplayerid,skin)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /setskin [id игрока] [id скина]");
	if(skin == 74 || skin > 311 || skin < 1) return SendClientMessage(playerid, COLOR_GREY, "Неправильный ID скина!");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	PI[giveplayerid][pSkin] = skin;
	new string[72];
	format(string, sizeof(string), "Вы изменили скин %s на номер: %i",player_name[giveplayerid],skin);
	SendOk(playerid, string);
	A_SetPlayerSkin(giveplayerid, PI[giveplayerid][pSkin]);
	UpdatePlayerData(giveplayerid,"Skin",PI[giveplayerid][pSkin]);
	return true;
}
CMD:fuelcars(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new null,string[128];
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(!VehicleInfo[i][vJob] && !VehicleInfo[i][vTeam]) continue;
		VehicleInfo[i][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
		null++;
	}
	format(string,sizeof(string),"%i автомобилей было заправлено!", null);
	SendOk(playerid,string);
	return 1;
}

CMD:gm(playerid) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(gm_player[playerid] == 0) gm_player[playerid] = 1, SendOk(playerid, "Вы включили GM");
	else gm_player[playerid] = 0, SendOk(playerid, "Вы выключили GM");
	return true;
}

CMD:apromo(playerid) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	D(playerid, D_PROMO, DSL, ""P"Промокоды", ""P"1."W" Список промокодов\n"P"2."W" Создать промокод\n"P"3."W" Удалить промокод", "Выбрать", "Назад");
	return true;
}

CMD:setskill(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SendUse(playerid, "Введите: /setskill [id игрока]");
	if(!IsPlayerConnected(params[0])) return true;
	PI[params[0]][pGunSkill][0] = 100;
	PI[params[0]][pGunSkill][1] = 100;
	PI[params[0]][pGunSkill][2] = 100;
	PI[params[0]][pGunSkill][3] = 100;
	PI[params[0]][pGunSkill][4] = 100;
	PI[params[0]][pGunSkill][5] = 100;
	SendOk(playerid, "Уровень владения оружием игроку установлен");
	SendOk(params[0], "Администратор выдал Вам скиллы на оружие"G" (/myskill)");
	save_skill(params[0]);
	SetPlayerSkills(params[0]);
	return true;
}

CMD:givemoney(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(!PI[playerid][giveMoney]) return SCM(playerid,-1,""cError"У Вас нет доступа к данной команде!");
	new id,money,string[50], str[400];
	if(sscanf(params,"ud",id,money)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /givemoney [id/name] [money]");
	if(!IsPlayerConnected(id)) return false;
	format(str,sizeof(str),"%s выдал %s",player_name[playerid],player_name[id]);
	GiveMoney(id,money,str);
	format(string,sizeof(string),"Вы дали игроку %s $%d",player_name[id],money);
	SendClientMessage(playerid,-1,string);
	return true;
}

CMD:givedonate(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(!PI[playerid][giveDonate]) return SCM(playerid,-1,""cError"У Вас нет доступа к данной команде!");
	if(GetString(player_name[playerid], "Tommy_Wilson") || GetString(player_name[playerid], "James_Marna") || GetString(player_name[playerid], "Joyse_Farmer") || GetString(player_name[playerid], "Bonik_Uzi"))
	{
		new id,money,string[150];
		if(sscanf(params,"ud",id,money)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /givedonate [id/name] [money]");
		if(!IsPlayerConnected(id)) return false;
		new str[350];
		format(str,sizeof(str),"A - %s, выдал %s",player_name[playerid],player_name[id]);
		GiveDonate(id, money, str);
		format(string,sizeof(string),"Вы дали донат %s %d руб",player_name[id],money);
		SendClientMessage(playerid,-1,string);
	}
	return true;
}
CMD:setacc(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new stat,amount,giveplayerid;
	if(sscanf(params, "udd",giveplayerid,stat,amount)) {
		SendClientMessage(playerid, COLOR_WHITE,"Используйте: /setacc [id] [номер] [количество]");
		SendClientMessage(playerid, COLOR_GRAD4, "[1] Уровень | [2] Законопослушность| [3] Материалы");
		SendClientMessage(playerid, COLOR_GRAD2, "[4] Exp | [5] Работа игрока | [6] Счёт мобильного");
		SendClientMessage(playerid, COLOR_GRAD2, "[7] Наркотики | [8] | Наркозависимость");
		return true;
	}
	if(!IsPlayerConnected(giveplayerid)) return true;
	if(giveplayerid == INVALID_PLAYER_ID) return true;
	switch (stat) {
	case 1: {
			PI[giveplayerid][pLevel] = amount;
			DollahScoreUpdate(giveplayerid);
			UpdatePlayerData(giveplayerid,"pLevel",amount);
		}
	case 2: PI[giveplayerid][pZakonp] = amount,UpdatePlayerData(giveplayerid,"pZakonp",amount);
		//	case 3: PI[giveplayerid][pMats] = amount,UpdatePlayerData(giveplayerid,"pMats",amount);
	case 4: PI[giveplayerid][pExp] = amount,UpdatePlayerData(playerid,"pExp",PI[playerid][pExp]);
	case 5: PI[giveplayerid][pJob] = amount,UpdatePlayerData(giveplayerid,"pJob",amount);
	case 6: PI[giveplayerid][pMobile] = amount,UpdatePlayerData(giveplayerid,"pMobile",amount);
	case 8: PI[giveplayerid][pAddiction] = amount;
	}
	SendOk(playerid, "Успешно изменено");
	return true;
}
CMD:setstat(playerid, params[]) {
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new stat,amount,giveplayerid;
	if(sscanf(params, "udd",giveplayerid,stat,amount)) {
		SendClientMessage(playerid, COLOR_WHITE,"Используйте: /setstat [id] [номер] [количество]");
		SendClientMessage(playerid, COLOR_GRAD4, "[1] Уровень | [2] Законопослушность| [3] Материалы");
		SendClientMessage(playerid, COLOR_GRAD3, "[4] Фишки | [5] Exp");
		SendClientMessage(playerid, COLOR_GRAD2, "[6] VIP | [7] Работа игрока| [8] Деньги в банке");
		SendClientMessage(playerid, COLOR_GRAD2, "[9] Счёт мобильного | [10] Деньги | [11] Наркотики");
		SendClientMessage(playerid, COLOR_GRAD2, "[12] Донат счётчик [13] Наркозависимость [14] Аптечки");
		SendClientMessage(playerid, COLOR_GRAD2, "[15] Голод");
		return true;
	}
	if(!IsPlayerConnected(giveplayerid)) return true;
	if(giveplayerid == INVALID_PLAYER_ID) return true;
	switch (stat)
	{
	case 1: {
			PI[giveplayerid][pLevel] = amount;
			DollahScoreUpdate(giveplayerid);
			UpdatePlayerData(giveplayerid,"pLevel",amount);
		}
	case 2: PI[giveplayerid][pZakonp] = amount,UpdatePlayerData(giveplayerid,"pZakonp",amount);
	case 3: {
			PI[giveplayerid][pMats] = amount;
			UpdatePlayerData(giveplayerid,"pMats",PI[giveplayerid][pMats]);
		}
	case 4: {
			PI[giveplayerid][pCasinoChips] = amount;
			UpdatePlayerData(playerid,"casino_chips",PI[giveplayerid][pCasinoChips]);
		}
	case 5: PI[giveplayerid][pExp] = amount,UpdatePlayerData(playerid,"pExp",PI[playerid][pExp]);
	case 6: {
			PI[giveplayerid][pPremium] = gettime()+(amount*24*60*60);
			UpdatePlayerData(giveplayerid,"premium",PI[giveplayerid][pPremium]);
		}
	case 7: PI[giveplayerid][pJob] = amount,UpdatePlayerData(giveplayerid,"pJob",amount);
	case 8: PI[giveplayerid][pBank] = amount,UpdatePlayerData(giveplayerid,"pBank",amount);
	case 9: PI[giveplayerid][pMobile] = amount,UpdatePlayerData(giveplayerid,"pMobile",amount);
	case 10: PI[giveplayerid][pCash] = amount,UpdatePlayerData(giveplayerid,"pCash",amount);
	case 11: {
			PI[giveplayerid][pDrugs] = amount;
			UpdatePlayerData(giveplayerid,"pDrugs",PI[giveplayerid][pDrugs]);
		}
	case 12: {
			new str[350];
			format(str,sizeof(str),"A - %s, выдал %s",player_name[playerid],player_name[playerid]);
			GiveDonate(giveplayerid, amount, str);
		}
	case 13: PI[giveplayerid][pAddiction] = amount;
	case 14: {
			if(GetInvSet(giveplayerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре у игрока недостаточно места");
			AddItem(giveplayerid, 1, amount);
		}
	case 15: SetFullness(giveplayerid, amount);
	}
	SendOk(playerid, "Успешно изменено");
	return true;
}
alias:captstats("cstats");
CMD:captstats(playerid) {
	if(!IsAGang(playerid)) return true;
	if(!GhettoInfo[playerid][GhettoGUI]) {
		if(TI[playerid][tAttack] == 0) return SendClientMessage(playerid, COLOR_GREY, "В данный момент не проходит война за территорию");
		ghetto_ShowGUI(playerid);
	}
	else ghetto_HideGUI(playerid);
	return true;
}
CMD:gives(playerid,params[]) {
	new giveplayerid;
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /gives [id игрока]");
	SendClientMessage(giveplayerid,COLOR_ORANGE,"Администратор выдал Вам все скиллы, наркотики и материалы!");
	SendClientMessage(giveplayerid,COLOR_ORANGE,"Приятной игры!");
	
	PI[giveplayerid][pDrugs] += 25000;
	UpdatePlayerData(giveplayerid,"pDrugs",PI[giveplayerid][pDrugs]);
	
	PI[giveplayerid][pMats] += 100000;
	UpdatePlayerData(giveplayerid,"pMats",PI[giveplayerid][pMats]);
	
	PI[giveplayerid][pGunSkill][0] = 100;
	PI[giveplayerid][pGunSkill][1] = 100;
	PI[giveplayerid][pGunSkill][2] = 100;
	PI[giveplayerid][pGunSkill][3] = 100;
	PI[giveplayerid][pGunSkill][4] = 100;
	PI[giveplayerid][pGunSkill][5] = 100;
	save_skill(giveplayerid);
	SetPlayerSkills(giveplayerid);
	
	SendOk(playerid, "Выдано успешно");
	return true;
}

CMD:setmats(playerid,params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new amount,giveplayerid;
	if(sscanf(params, "dd",giveplayerid,amount)) SendClientMessage(playerid, COLOR_WHITE,"Используйте: /setstat [id] [количество]"),
	SendClientMessage(playerid, COLOR_WHITE,"Используйте: 1. Полиция ЛС | 2. Angels MC | 3. Bandidos MC | 4. ФБР | 5. Нац. Гвардия"),
	SendClientMessage(playerid, COLOR_WHITE,"Используйте: 7. Ballas | 8. Vagos | 9. Grove | 10. Aztecas | 11. Rifa"),
	SendClientMessage(playerid, COLOR_WHITE,"Используйте: 12. Итальянская мафия(LCN) | 13. Японская мафия(YAKUZA) | 14. Русская мафия(RM)"),
	SendClientMessage(playerid, COLOR_WHITE,"Используйте: 15. Оружейный завод | 16. Лесопилка | 17. RCSD");
	switch(giveplayerid) {
	case 1: FI[fLSPD][fMats] = amount,UpdateFraction(fLSPD,"Mats",FI[fLSPD][fMats]);
	case 2: FI[fBikers][fMats] = amount,UpdateFraction(fBikers,"Mats",FI[fBikers][fMats]);
	case 3: FI[fBikersTwo][fMats] = amount,UpdateFraction(fBikersTwo,"Mats",FI[fBikersTwo][fMats]);
	case 4: FI[fFBI][fMats] = amount,UpdateFraction(fFBI,"Mats",FI[fFBI][fMats]);
	case 5: FI[fARMYLS][fMats] = amount,UpdateFraction(fARMYLS,"Mats",FI[fARMYLS][fMats]);

	case 7: FI[fBALLAS][fMats] = amount,UpdateFraction(fBALLAS,"Mats",FI[fBALLAS][fMats]);
	case 8: FI[fVAGOS][fMats] = amount,UpdateFraction(fVAGOS,"Mats",FI[fVAGOS][fMats]);
	case 9: FI[fGROVE][fMats] = amount,UpdateFraction(fGROVE,"Mats",FI[fGROVE][fMats]);
	case 10: FI[fAZTEC][fMats] = amount,UpdateFraction(fAZTEC,"Mats",FI[fAZTEC][fMats]);
	case 11: FI[fRIFA][fMats] = amount,UpdateFraction(fRIFA,"Mats",FI[fRIFA][fMats]);

	case 12: FI[fLCN][fMats] = amount,UpdateFraction(fLCN,"Mats",FI[fLCN][fMats]);
	case 13: FI[fYAKUZA][fMats] = amount,UpdateFraction(fYAKUZA,"Mats",FI[fYAKUZA][fMats]);
	case 14: FI[fRM][fMats] = amount,UpdateFraction(fRM,"Mats",FI[fRM][fMats]);

	case 15: zavodsklad = amount,UpdateOtherData("gun_mats",zavodsklad);
	case 16: woodsklad = amount,UpdateOtherData("woodsklad",woodsklad);
	case 17: FI[fRCSD][fMats] = amount,UpdateFraction(fRCSD,"Mats",FI[fRCSD][fMats]);
		
	default: SendClientMessage(playerid, COLOR_GREY, "Произошла ошибка");
	}
	if(giveplayerid != 0) SendOk(playerid,"Вы успешно пополнили склад");
	return 1;
}
CMD:getip(playerid, params[]) {
	if (PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if (sscanf(params, "d", params[0])) return SendClientMessage(playerid,COLOR_WHITE, "Введите: /getip [playerid]");
	if (params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY, "Данный игрок не авторизован");
	if (IsPlayerConnected(params[0]) == 0) return SendClientMessage(playerid,COLOR_GREY, "Данный игрок не авторизован");

	new ip[17];
	GetPlayerIp(params[0], ip, 16);

	new string[250];
	format(string, sizeof(string), "Nik [%s]   R-IP [%s]   L-IP [%s]   IP [%s]", player_name[params[0]], PI[params[0]][pIpReg], player_ip[params[0]], ip);
	SendClientMessage(playerid, 0x6BB3FFAA, string);
	return true;
}
CMD:newobj(playerid)
{
    if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(!PI[playerid][giveObj]) return SCM(playerid,-1,""cError"У Вас нет доступа к данной команде!");
    SPD(playerid, 1288, DSL, "{C70000}Bauld Mapping", "1. Создать объект\n2. Редактировать объекты\n3. Выбрать объекты", "Выбрать", "Отмена");
    return 1;
}
stock RemoveStandartObject(playerid)
{
    RemoveBuildingForPlayer(playerid, 4024, 1479.8672, -1790.3984, 56.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 1448.2344, -1755.8984, 14.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 4002, 1479.8672, -1790.3984, 56.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 5024, 1748.8438, -1883.0313, 14.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 4983, 1961.0313, -1871.4063, 23.7734, 0.25);
}
stock ShowServerPanel(playerid)
{
    SPD(playerid,8502,DSL,"Управление сервером","- Поменять название сервера\n- Скинуть название сервера до дефолта\n- Установить пароль\n- Снять пароль\n- Переключить x3 Donate\n- Переключить x3 PayDay","Выбрать","Закрыть");
    return 1;
}
stock ShowActorsPanel(playerid)
{
    SPD(playerid,1776,DST,""rServer"Управление автомобилями фракций","{FFFFFF}1. Инструкция по созданию актёров\t"oServer"»\n{FF0000}2. Создать актёра\t"oServer"»","Выбрать","Отмена");
	return 1;
}
function LoadLastActor() return mysql_tquery(connects, "SELECT * FROM actors ORDER BY id DESC LIMIT 1", "LoadActors");
function LoadActorBD() return mysql_tquery(connects, "SELECT * FROM `actors`", "LoadActors");
stock upLoadActors(type)
{
	mysql_tquery(connects, "ALTER TABLE `actors` DROP `id`");
	mysql_tquery(connects, "ALTER TABLE `actors` ADD `id` INT(11) NOT NULL AUTO_INCREMENT FIRST, ADD PRIMARY KEY (`id`)");
	if(type == 0) SetTimer("LoadActorBD", 1000, false);
	else if(type == 1) SetTimer("LoadLastActor", 1000, false);
	return 1;
}
function LoadActors()
{
    new time = GetTickCount();
    new rows = cache_num_rows();
    if(!rows) return printf("Актёры не найдены");
    if(rows > MAX_D_ACTORS) return printf("Превышено количество актеров, не могу начать установку");
    for_1(f, rows)
    {
	    new _temp_id_;
		cache_get_value_name_int(f, "id", _temp_id_);
		cache_get_value_name_float(f, "x", actorspos[_temp_id_][0]);
		cache_get_value_name_float(f, "y", actorspos[_temp_id_][1]);
		cache_get_value_name_float(f, "z", actorspos[_temp_id_][2]);
		cache_get_value_name_float(f, "a", actorspos[_temp_id_][3]);
		cache_get_value_name_int(f, "skin", actors[_temp_id_][2]);
		cache_get_value_name_int(f, "vw", actors[_temp_id_][1]);
		cache_get_value_name(f, "text", actors_string[_temp_id_]);
		cache_get_value_name_int(f, "s_text", actors3d_s[_temp_id_]);
		cache_get_value_name_int(f, "anim_actors", anim_actors[_temp_id_]);
		actors[_temp_id_][0] = CreateActor(actors[_temp_id_][2], actorspos[_temp_id_][0],actorspos[_temp_id_][1],actorspos[_temp_id_][2],actorspos[_temp_id_][3]);
		if(actors3d_s[_temp_id_] == 1) actors3d[_temp_id_] = CreateDynamic3DTextLabel(actors_string[_temp_id_], -1, actorspos[_temp_id_][0],actorspos[_temp_id_][1],actorspos[_temp_id_][2], 10.0);
		SetActorVirtualWorld(actors[_temp_id_][0],actors[_temp_id_][1]);
		ActorAnimation(actors[_temp_id_][0],anim_actors[_temp_id_]);
	}
    printf("[MySQL]: Успешная загрузка 'LoadActors' - загружено %i актёров за %i м.с", rows, GetTickCount() - time);
	return 1;
}
CMD:actoranim(playerid)
{
    if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
    //if(!PI[playerid][giveAedit]) return SCM(playerid,-1,""cError"У Вас нет доступа к данной команде!");
	for(new j = 0; j < MAX_D_ACTORS; j++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, actorspos[j][0],actorspos[j][1],actorspos[j][2])) choosen_actor[playerid] = j;
	}
	if(choosen_actor[playerid] == 0) return SCM(playerid,-1,""cError"В радиусе 2х метров от Вас нет актёров");
	SPD(playerid, dActorAnim, DSL, ""rServer"Список анимаций", "1. Стойка дилера\n2. Передал что-то\n3. Съел что-то\n4. Справить нужду\n5. Медитация\n\
	6. Сидеть раненым\n7. Спать на боку\n8. Лечь на спину\n9. Шлепнуть рукой\n10. Наносить граффити 1\n11. Наносить граффити 2\n12. Курение\n13. Ограбление\n14. Одеть маску\n15. Руки в верх\n16. Позвать кого-то\n\
	17. Поднять руки\n18. Болельщик 1\n19. Болельщик 2\n20. Болельщик 3\n21. Показать средний палец\n22. Выпить что-то\n23. Махать руками\n24. Мужское курение\n25. Прилечь 1\n26. Прилечь 2\n27. Прилечь 3\n\
	28. Прилечь 4\n29. Присесть на пол\n30. Читать реп 1\n3151. Читать реп 2\n32. Читать реп 3\n33. Читать реп 4\n34. Набивать мяч\n35. Кинуть мяч\n36. Поднять мяч\n37. Позвать\n38. Чинить авто\n39. Прислониться к авто\n\
	40. Сложить руки вместе\n41. Держать биту 1\n42. Держать биту 2\n43. Гангстерский жест 1\n44. Гангстерский жест 2\n45. Гангстерский жест 3\n46. Гангстерский жест 4\n47. Гангстерский жест 5\n48. Гангстерский жест 6\n\
	49. Гангстерский жест 7\n50. Гангстерский жест 8\n51. Плакать\n52. Присесть 1\n53. Присесть 2\n54. Присесть облокотившись\n55. Женское курение\n56. Искусственное дыхание\n57. Облокотится\n58. Облокотится 2\n\
	59. Facepalm\n60. Чесаться", "Выбрать", "Отмена");
	return 1;
}
CMD:del(playerid)
{
    if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
    //if(!PI[playerid][giveAedit]) return SCM(playerid,-1,""cError"У Вас нет доступа к данной команде!");
    choosen_actor[playerid] = 0;
	for(new j = 0; j < MAX_D_ACTORS; j++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, actorspos[j][0],actorspos[j][1],actorspos[j][2])) choosen_actor[playerid] = j;
	}
	if(choosen_actor[playerid] == 0) return SCM(playerid,-1,""cError"В радиусе 2х метров от Вас нет актёров");
	new i = choosen_actor[playerid];
	FSPD(playerid,dDeleteActor,DSM,""cServer"Удаление актёров","Удалить","Отменить","{FFFFFF}Подтвердите действие:\n\nУдаление актёра ID:%d (SkinID: %d)\nТекст на актёре: %s\n{FFFFFF}X-координата актёра: %f\nY-координата актёра: %f\nZ-координата актёра: %f\nA-координата актёра: %f\n\
	Виртуальный мир актёра: %d\nАнимация: %s",i,actors[i][2],(actors3d_s[i] == 0) ? ("{FF0000}Отсутствует") : (actors_string[i]),actorspos[i][0],actorspos[i][1],actorspos[i][2],actorspos[i][3],actors[i][1],(anim_actors[i] == -1) ? ("{FF0000}Отключена") : ("{00FF00}Включена"));
	return 1;
}
stock ActorAnimation(actorID,anim)
{
    switch(anim)
	{
	    case 0: ApplyActorAnimation(actorID, "DEALER", "Dealer_idle",4.1,1,0,0,0,0);
		case 1: ApplyActorAnimation(actorID, "DEALER", "Dealer_Deal",4.1,0,0,0,0,0);
		case 2: ApplyActorAnimation(actorID, "FOOD", "Eat_Burger",4.1,0,0,0,0,0);
		case 3: ApplyActorAnimation(actorID, "PAULNMAC", "Piss_in",4.1,0,0,0,0,0);
		case 4: ApplyActorAnimation(actorID, "PARK", "Tai_Chi_Loop",4.1,1,0,0,0,0);
		case 5: ApplyActorAnimation(actorID, "CRACK", "Crckidle1",4.1,1,0,0,0,0);
		case 6: ApplyActorAnimation(actorID, "CRACK", "Crckidle2",4.1,1,0,0,0,0);
		case 7: ApplyActorAnimation(actorID, "CRACK", "Crckidle4",4.1,1,0,0,0,0);
		case 8: ApplyActorAnimation(actorID, "SWEET", "sweet_ass_slap",4.1,0,0,0,0,0);
		case 9: ApplyActorAnimation(actorID, "SPRAYCAN", "spraycan_full",4.1,1,0,0,0,0);
		case 10: ApplyActorAnimation(actorID, "GRAFFITI", "spraycan_fire",4.1,1,0,0,0,0);
		case 11: ApplyActorAnimation(actorID, "SMOKING", "M_smkstnd_loop",4.1,1,0,0,0,0);
		case 12: ApplyActorAnimation(actorID, "SHOP", "ROB_Loop_Threat",4.1,1,0,0,0,0);
		case 13: ApplyActorAnimation(actorID, "SHOP", "ROB_shifty",4.1,0,0,0,0,0);
		case 14: ApplyActorAnimation(actorID, "SHOP", "SHP_Rob_HandsUP",4.1,1,0,0,0,0);
		case 15: ApplyActorAnimation(actorID, "RYDER", "Ryd_Beckon_02",4.1,1,0,0,0,0);
		case 16: ApplyActorAnimation(actorID, "RIOT", "Riot_Angry",4.1,0,0,0,0,0);
		case 17: ApplyActorAnimation(actorID, "RIOT", "Riot_Angry_B",4.1,1,0,0,0,0);
		case 18: ApplyActorAnimation(actorID, "RIOT", "Riot_Chant",4.1,1,1,0,0,0);
		case 19: ApplyActorAnimation(actorID, "RIOT", "Riot_Punches",4.1,1,0,0,0,0);
		case 20: ApplyActorAnimation(actorID, "PED", "fucku",4.1,0,0,0,0,0);
		case 21: ApplyActorAnimation(actorID, "BAR", "dnK_StndM_loop",4.1,0,0,0,0,0);
		case 22: ApplyActorAnimation(actorID, "BD_FIRE", "BD_Panic_03",4.1,1,0,0,0,0);
		case 23: ApplyActorAnimation(actorID, "BD_FIRE", "M_smklean_loop",4.1,1,0,0,0,0);
		case 24: ApplyActorAnimation(actorID, "BEACH", "bather",4.1,1,0,0,0,0);
		case 25: ApplyActorAnimation(actorID, "BEACH", "Lay_Bac_loop",4.1,1,0,0,0,0);
		case 26: ApplyActorAnimation(actorID, "BEACH", "Parksit_w_loop",4.1,1,0,0,0,0);
		case 27: ApplyActorAnimation(actorID, "BEACH", "Sitnwait_Loop_W",4.1,1,0,0,0,0);
		case 28: ApplyActorAnimation(actorID, "BEACH", "Parksit_M_loop",4.1,1,0,0,0,0);
		case 29: ApplyActorAnimation(actorID, "benchpress", "gym_bp_celebrate",4.1,1,0,0,0,0);
		case 30: ApplyActorAnimation(actorID, "LOWRIDER", "Rap_C_loop",4.1,1,0,0,0,0);
		case 31: ApplyActorAnimation(actorID, "LOWRIDER", "Rap_B_loop",4.1,1,0,0,0,0);
		case 32: ApplyActorAnimation(actorID, "LOWRIDER", "Rap_A_loop",4.1,1,0,0,0,0);
		case 33: ApplyActorAnimation(actorID, "BSKTBALL", "BBALL_idleloop",4.1,1,0,0,0,0);
		case 34: ApplyActorAnimation(actorID, "BSKTBALL", "BBALL_Jump_Shot",4.1,0,0,0,0,0);
		case 35: ApplyActorAnimation(actorID, "BSKTBALL", "BBALL_pickup",4.1,0,0,0,0,0);
		case 36: ApplyActorAnimation(actorID, "CAMERA", "camstnd_cmon",4.1,0,0,0,0,0);
		case 37: ApplyActorAnimation(actorID, "CAR", "fixn_car_loop",4.1,1,0,0,0,0);
		case 38: ApplyActorAnimation(actorID, "CAR_CHAT", "car_talkm_loop",4.1,1,0,0,0,0);
		case 39: ApplyActorAnimation(actorID, "COP_AMBIENT", "coplook_loop",4.1,1,0,0,0,0);
		case 40: ApplyActorAnimation(actorID, "CRACK", "Bbalbat_Idle_01",4.1,1,0,0,0,0);
		case 41: ApplyActorAnimation(actorID, "CRACK", "Bbalbat_Idle_02",4.1,1,0,0,0,0);
		case 42: ApplyActorAnimation(actorID, "GHANDS", "gsign1",4.1,0,0,0,0,0);
		case 43: ApplyActorAnimation(actorID, "GHANDS", "gsign2",4.1,0,0,0,0,0);
		case 44: ApplyActorAnimation(actorID, "GHANDS", "gsign3",4.1,0,0,0,0,0);
		case 45: ApplyActorAnimation(actorID, "GHANDS", "gsign4",4.1,0,0,0,0,0);
		case 46: ApplyActorAnimation(actorID, "GHANDS", "gsign5",4.1,0,0,0,0,0);
		case 47: ApplyActorAnimation(actorID, "GHANDS", "gsign1LH",4.1,0,0,0,0,0);
		case 48: ApplyActorAnimation(actorID, "GHANDS", "gsign2LH",4.1,0,0,0,0,0);
		case 49: ApplyActorAnimation(actorID, "GHANDS", "gsign4LH",4.1,0,0,0,0,0);
		case 50: ApplyActorAnimation(actorID, "GRAVEYARD", "mrnF_loop",4.1,1,0,0,0,0);
		case 51: ApplyActorAnimation(actorID, "MISC", "seat_LR",4.1,1,0,0,0,0);
		case 52: ApplyActorAnimation(actorID, "INT_HOUSE", "Lou_in",4.1,0,1,1,1,1);
		case 53: ApplyActorAnimation(actorID, "INT_OFFICE", "OFF_sit_Bored_loop",4.1,1,0,0,0,0);
		case 54: ApplyActorAnimation(actorID, "LOWRIDER", "F_smklean_loop",4.1,1,0,0,0,0);
		case 55: ApplyActorAnimation(actorID, "MEDIC", "CPR",4.1,0,0,0,0,0);
		case 56: ApplyActorAnimation(actorID, "GANGS", "LeanIn",4.1,0,1,1,1,1);
		case 57: ApplyActorAnimation(actorID, "MISC", "plyrlean_loop",4.1,1,0,0,0,0);
		case 58: ApplyActorAnimation(actorID, "MISC", "plyr_shkhead",4.1,0,0,0,0,0);
		case 59: ApplyActorAnimation(actorID, "MISC", "scratchballs_01",4.1,1,0,0,0,0);
	}
	return 1;
}
stock AddPame(playerid)
{
	if(strlen(player_pame[playerid]) <= 1) return 1;
	pame_text[playerid] = Create3DTextLabel(player_pame[playerid], 0xFFFFFFDD, 0.0, 0.0, 12000.0, 3, 0, 1);
	Attach3DTextLabelToPlayer(pame_text[playerid], playerid, 0.0, 0.0, -0.8);
	return 1;
}
CMD:pame(playerid, params[])
{
	if(sscanf(params,"s[64]",params[0])) return SendClientMessage(playerid, -1, "Введите: /pame [ описание ]");
    if(pame_text[playerid] != Text3D:-1) return SendClientMessage(playerid, -1, "У вас уже стоит описание. Для удаление используйте: /dellpame");
    FSCM(playerid,COLOR_BLUE,"Вы создали описание персонажа: %s", params[0]);
	new query[155];
	format(player_pame[playerid],64,"%s",params[0]);
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `Pame` = '%s' WHERE `pID` = '%d' LIMIT 1",player_pame[playerid],PI[playerid][pID]);
	mysql_tquery(connects, query, "", "" ) ;
	AddPame(playerid);
    return 1;
} 
CMD:dellpame(playerid, params[])
{
    if(pame_text[playerid] == Text3D:-1) return SendClientMessage(playerid, -1, "Вы не создавали описание персонажа. Используйте: /pame [ описание ]"); // Проверка на то, создан ли у игрока описание или нет.
	new query[155];
	format(player_pame[playerid],64,"");
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `Pame` = '' WHERE `pID` = '%d' LIMIT 1",player_pame[playerid],PI[playerid][pID]);
	mysql_tquery(connects, query, "", "" ) ;
    SendClientMessage(playerid, -1, "Вы удалили описание своего персонажа");
    Delete3DTextLabel(pame_text[playerid]); 
    pame_text[playerid] = Text3D:-1;
    return 1;
} 
CMD:aedit(playerid)
{
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
    //if(!PI[playerid][giveAedit]) return SCM(playerid,-1,""cError"У Вас нет доступа к данной команде!");
	SPD(playerid,5736,DIALOG_STYLE_LIST,""rServer"Управление обновлениями","{FFFFFF}1. Управление актёрами\n2. Управление сервером","Выбрать","Отмена");
	return 1;
}
CMD:prefix(playerid,params[])
{
    if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
    if(sscanf(params, "d", params[0]))
    {
        SCM(playerid, -1, ""cHelp"Введите: /prefix [id]");
        return 1;
    }
    if(!IsPlayerConnected(params[0])) return SCM(playerid, 0xFF0000FF, "[Ошибка]{B4B5B7} Неверный id.");
	if(!PI[params[0]][pAdmin]) return true;
    if(PI[params[0]][pPrefix_i]) return SCM(playerid, -1, ""cError"У игрока уже есть префикс. Сначала удалите его: /delprefix!");
    SetPVarInt(playerid,"EditingPlayerPrefix",params[0]);
    SPD(playerid,2095,DSI,"Создание префикса для игрока","{FFFFFF}Введите префикс, который желаете применить игроку.\nУчтите, что Вы можете использовать HEX цвет в {}","Сохранить","Закрыть");
    return 1;
}
stock UpdatePrefixAuto(playerid)
{
    if(PI[playerid][pAdmin]) return 1;
    if(!PI[playerid][pPrefix_i]) return 1;
    PI[playerid][pPrefix_i] = 0;
    SavePrefix(playerid);
    return 1;
}
stock SavePrefix(i)
{
	new string[128];
    mysql_format(connects, string, 128, "UPDATE `accounts` SET `pPrefix_s` = '%s', `pPrefix_i` = '%d' WHERE `ID` = '%i' LIMIT 1", PI[i][pPrefix_s],PI[i][pPrefix_i], PI[i][pID]);
    mysql_tquery(connects, string);
    return 1;
}
stock SetPrefix(playerid,byid,prefixtext[])
{
    if(!IsPlayerConnected(byid)) return 1;
    if(!IsPlayerConnected(playerid)) return 1;
    set_string(PI[playerid][pPrefix_s],prefixtext);
    PI[playerid][pPrefix_i] = 1;
    FSAM(-1, "{AFAFAF}[A] Администратор %s[%i] выдал префикс %s[%i] [%s{AFAFAF}]", player_name[byid], byid, player_name[playerid], playerid,prefixtext);
    SavePrefix(playerid);
    return 1;
}
CMD:delprefix(playerid,params[])
{
    if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
    if(sscanf(params, "d", params[0]))
    {
        SCM(playerid, -1, ""cHelp"Введите: /delprefix [id]");
        return 1;
    }
    if(!IsPlayerConnected(params[0])) return SCM(playerid, 0xFF0000FF, "[Ошибка]{B4B5B7} Неверный id.");
	if(!PI[params[0]][pAdmin]) return true;
    if(!PI[params[0]][pPrefix_i]) return SCM(playerid, -1, ""cError"У игрока нету префикса. Сначала создайте его: /prefix!");
    PI[params[0]][pPrefix_i] = 0;
    SavePrefix(params[0]);
    FSAM(-1, "{AFAFAF}[A] Администратор %s[%i] забрал префикс у %s[%i]", player_name[playerid], playerid, player_name[params[0]], params[0]);
    return 1;
}
CMD:givecmd(playerid,params[])
{
    if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
    if(sscanf(params, "d", params[0])) return SCM(playerid, -1, ""cHelp"Введите: /givecmd [id]");
    givecmd_(playerid,params[0]);
    return 1;
}
stock givecmd_(playerid,targetid)
{
    if(!IsPlayerConnected(targetid)) return SCM(playerid, 0xFF0000FF, "[Ошибка]{B4B5B7} Неверный id.");
    if(PI[targetid][pAdmin] == 0) return SCM(playerid,-1,""cError"Игрок не является администратором");
    working_at_admin[playerid] = targetid;
    new string[1024];
    format(string,sizeof(string),"{808080}Команды администратора\t%s\n", player_name[targetid]);
    format(string,sizeof(string),"%s{FFFFFF}/makeadmin\t%s\n/makeleader\t%s\n/newobj /obj\t%s\n/givedonate\t%s\n/givemoney\t%s",string,
        (PI[targetid][giveAdmin] == 0) ? ("{FF0000}Деактивирована") : ("{00FF00}Активирована"),
		(PI[targetid][giveLeader] == 0) ? ("{FF0000}Деактивирована") : ("{00FF00}Активирована"),
		(PI[targetid][giveObj] == 0) ? ("{FF0000}Деактивирована") : ("{00FF00}Активирована"),
		(PI[targetid][giveDonate] == 0) ? ("{FF0000}Деактивирована") : ("{00FF00}Активирована"),
		(PI[targetid][giveMoney] == 0) ?  ("{FF0000}Деактивирована") : ("{00FF00}Активирована")
	);
    SPD(playerid, 1431, DST, " ", string, "Выбрать","Закрыть");
    return 1;
}
stock dialog_1431_helper(playerid,listitem,response)
{
    if(!response) return 1;
    new targetid = working_at_admin[playerid];
	if(PI[playerid][pAdmin] == 0) return SCM(playerid,-1,""cError"Игрок не является администратором!");
	new stringer[128];
    switch(listitem)
    {
        case 0: givecmd_(playerid,targetid);
        case 1:
        {
            if(PI[targetid][giveAdmin] == 0) PI[targetid][giveAdmin] = 1;
            else PI[targetid][giveAdmin] = 0;
            mysql_format(connects, stringer, 128, "UPDATE `accounts` SET `giveAdmin` = '%d' WHERE `pID` = '%d'", PI[targetid][giveAdmin], PI[targetid][pID]);
            mysql_tquery(connects, stringer);
            FSCM(playerid,COLOR_GRAY,"Вы успешно %s команду /makeadmin администратору %s",(PI[targetid][giveAdmin] == 0) ? ("забрали") : ("выдали"), player_name[targetid]);
        }
		case 2:
        {
            if(PI[targetid][giveLeader] == 0) PI[targetid][giveLeader] = 1;
            else PI[targetid][giveLeader] = 0;
            mysql_format(connects, stringer, 128, "UPDATE `accounts` SET `giveLeader` = '%d' WHERE `pID` = '%d'", PI[targetid][giveLeader], PI[targetid][pID]);
            mysql_tquery(connects, stringer);
            FSCM(playerid,COLOR_GRAY,"Вы успешно %s команду /makeleader администратору %s",(PI[targetid][giveLeader] == 0) ? ("забрали") : ("выдали"), player_name[targetid]);
        }
		case 3:
        {
            if(PI[targetid][giveObj] == 0) PI[targetid][giveObj] = 1;
            else PI[targetid][giveObj] = 0;
            mysql_format(connects, stringer, 128, "UPDATE `accounts` SET `giveObj` = '%d' WHERE `pID` = '%d'", PI[targetid][giveObj], PI[targetid][pID]);
            mysql_tquery(connects, stringer);
            FSCM(playerid,COLOR_GRAY,"Вы успешно %s команду /newobj /obj администратору %s",(PI[targetid][giveObj] == 0) ? ("забрали") : ("выдали"), player_name[targetid]);
        }
		case 4:
        {
            if(PI[targetid][giveDonate] == 0) PI[targetid][giveDonate] = 1;
            else PI[targetid][giveDonate] = 0;
            mysql_format(connects, stringer, 128, "UPDATE `accounts` SET `giveDonate` = '%d' WHERE `pID` = '%d'", PI[targetid][giveDonate], PI[targetid][pID]);
            mysql_tquery(connects, stringer);
            FSCM(playerid,COLOR_GRAY,"Вы успешно %s команду /givedonate администратору %s",(PI[targetid][giveDonate] == 0) ? ("забрали") : ("выдали"), player_name[targetid]);
        }
		case 5:{
			if(PI[targetid][giveMoney] == 0) PI[targetid][giveMoney] = 1;
            else PI[targetid][giveMoney] = 0;
            mysql_format(connects, stringer, 128, "UPDATE `accounts` SET `giveMoney` = '%d' WHERE `pID` = '%d'", PI[targetid][giveMoney], PI[targetid][pID]);
            mysql_tquery(connects, stringer);
            FSCM(playerid,COLOR_GRAY,"Вы успешно %s команду /givemoney администратору %s",(PI[targetid][giveMoney] == 0) ? ("забрали") : ("выдали"), player_name[targetid]);
		}
		
    }
    givecmd_(playerid,targetid);
    return 1;
}
CMD:makeadmin(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(!PI[playerid][giveAdmin]) return SCM(playerid,-1,""cError"У Вас нет доступа к данной команде!");
	new Name[30],Level;
	if(sscanf(params, "s[30]d",Name,Level)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /makeadmin [id / ник] [уровень]");
	if(!isAdminStatus(Name)) {
	   if(!(0 <= Level <= 6)) return SendClientMessage(playerid, COLOR_GREY, "Неверное значение, уровень должен 0 или 5");
	}
	else {
	   if (!(0 <= Level <= 7)) return SendClientMessage(playerid,COLOR_GREY, "От 0 до 7");
	}
	new query[128];
	if (!isNumeric(Name))
	{
		new id_name = strval(Name);
		if (!IsPlayerConnected(id_name)) return SendClientMessage(playerid, COLOR_GREY, not_id);
		mysql_format(connects, query, sizeof(query), "SELECT * FROM `admin` WHERE `name` = '%e' LIMIT 1", player_name[id_name]);
		mysql_pquery(connects, query, "Moderator", "dsd", playerid, player_name[id_name], Level);
		return 1;
	}
	mysql_format(connects, query, sizeof(query), "SELECT * FROM `admin` WHERE `name` = '%e' LIMIT 1", Name);
	mysql_pquery(connects, query, "Moderator", "dsd", playerid, Name, Level);
	return 1;
}

CMD:last(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна эта функция");
	if(isnull(params) || strlen(params) > 25) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /last [Nick_Name]");
	new query[128];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",params);
	new Cache:result = mysql_query(connects, query);
	new rows = cache_num_rows();
	if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
	cache_get_value_name(0, "pOnline",query,30);
	static const f_str[] = "Ник: %s | Последний вход: %s";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 9)];
	format(string,sizeof(string),f_str,params,query);
	SendClientMessage(playerid,COLOR_BLUE,string);
	cache_delete(result);
	return true;
}
CMD:makeleader(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(!PI[playerid][giveLeader]) return SCM(playerid,-1,""cError"У Вас нет доступа к данной команде!");
	new string[64], strings[600], count_leader = 0;
	strcat(strings,"№\tОрганизация\tЛидер\n");
	for(new i = 1;i < MAX_FRACTIONS;i ++)
	{
		if(!GetString(FI[i][fName],"Закрыто"))
		{
			count_leader++;
			format(string,sizeof(string),"%i\t%s\t%s\n",count_leader,FI[i][fName],FI[i][fLeader]);
			strcat(strings,string);
		}
	}
	D(playerid,D_MAKELEADER_INFO,DSTH,"Лидеры организаций",strings,"Выбрать","Отмена");
	return 1;
}
CMD:infoips(playerid,params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 19) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /infoips [IP]");
	new QUERY[256];
	mysql_format(connects, QUERY, sizeof(QUERY),"SELECT HIGH_PRIORITY * FROM `"TABLE_ACCOUNTS"` WHERE `pvIp` LIKE '%s%s%s'","%",params,"%");
	new Cache:result = mysql_query(connects, QUERY);
	new rows = cache_num_rows();
	if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "IP адрес не найден");
	new tmpas[16],regip[16],mname[32],level;
	for(new i = 0; i < rows; i++) {
		cache_get_value_name(i, "Name", mname, MAX_PLAYER_NAME);
		cache_get_value_name(i, "pvIp", tmpas, 16);
		cache_get_value_name(i, "pIpReg", regip, 16);
		cache_get_value_name_int(i,"pLevel", level);

		static const f_str[] = "%s | LAST-IP: %s | REG-IP: %s | LVL: %d";
		new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 16) + (-2 + 16) + (-2 + 4)];

		format(string,sizeof(string),f_str,mname,tmpas, regip,level);
		SendClientMessage(playerid,COLOR_WHITE,string);
	}
	cache_delete(result);
	return true;
}
CMD:mutelist(playerid, const params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new countmute = 0,string[1024],str[128];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pMute] > 0) {
			format(str, sizeof(str), ""YELLOW"%d. "ORANGE"%s"W" | ID: "P"%d"W" | Секунд: "GREEN"%d\n",countmute+1,player_name[i],i,PI[i][pMute]),strcat(string,str);
			countmute++;
		}
	}
	if(countmute == 0) return SendClientMessage(playerid, COLOR_GREY, "Нет игроков с Баном чата");
	D(playerid, DIALOG_NONE, DSM, ""P"Игроки с баном чата", string, "Закрыть", "");
	return true;
}
CMD:agetip(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 25) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /agetip [Ник]");
	new QUERY[128];
	mysql_format(connects, QUERY, sizeof(QUERY),"SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",params);
	new Cache:result = mysql_query(connects, QUERY),ip[2][17];
	new rows = cache_num_rows();
	if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден!");

	cache_get_value_name(0, "pvIp", ip[0], 16);
	cache_get_value_name(0, "pIpReg", ip[1], 16);

	static const f_str[] = "Ник: %s | IP: %s | IP при регистрации: %s";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 17) + (-2 + 17)];

	format(string,sizeof(string),f_str,params,ip[0],ip[1]);
	SendClientMessage(playerid,COLOR_BLUE,string);
	cache_delete(result);
	return true;
}
CMD:captfreeze(playerid,params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new gang_id, time,string[128], band[16];
	if(sscanf(params,"ii",gang_id, time)) {
		SendClientMessage(playerid,-1,"/captfreeze [id] [часов]");
		SendClientMessage(playerid,-1,"1 - The Ballas | 2 - The Vagos | 3 - The Grove");
		SendClientMessage(playerid,-1,"4 - The Rifa | 5 - The Aztecas | 6 - LCN");
		SendClientMessage(playerid,-1,"7 - Yakuza | 8 - Russian Mafia");
		return 1;
	}
	if(gang_id < 1 || gang_id > 8 || time < 0) {
		SendClientMessage(playerid,-1,"/captfreeze [id] [часов]");
		SendClientMessage(playerid,-1,"1 - The Ballas | 2 - The Vagos | 3 - The Grove");
		SendClientMessage(playerid,-1,"4 - The Rifa | 5 - The Aztecas | 6 - LCN");
		SendClientMessage(playerid,-1,"7 - Yakuza | 8 - Russian Mafia");
		return 1;
	}
	switch(gang_id)
	{
	case 1: band = "банду";
	case 2: band = "банду";
	case 3: band = "банду";
	case 4: band = "банду";
	case 5: band = "банду";
	case 6: band = "мафию";
	case 7: band = "мафию";
	case 8: band = "мафию";
	case 9: band = "банду";
	default: band = "None";
	}
	if(time == 0) {
		fracmoroz[gang_id-1] = 0;
		format(string, sizeof(string), "Администратор %s разморозил %s %s",player_name[playerid],band,fracmorozName[gang_id-1]);
	}
	else {
		fracmoroz[gang_id-1] = unix+(3600*time);
		format(string, sizeof(string), "Администратор %s заморозил %s %s на %d час(ов)",player_name[playerid],band,fracmorozName[gang_id-1],time);
	}
	SendAdminActionMessage(COLOR_LIGHTRED, string);
	UpdateMorozed();
	return 1;
}
CMD:apanel(playerid, const params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new string[1612];
	switch(PI[playerid][pAdmin]) {
	case 1: format(string,sizeof(string),""P"1."W" Администрация\n"P"2."W" Заспавниться\n"P"3."W" Устроиться на работу\n"P"4."W" Игроки в тюрьме\n"P"5."W" Игроки с баном чата\n"P"6."W" Админ информация %s\n"P"7."W" Kill List %s",(!PI[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!PI[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"));
	case 2: format(string,sizeof(string),""P"1."W" Администрация\n"P"2."W" Заспавниться\n"P"3."W" Устроиться на работу\n"P"4."W" Игроки в тюрьме\n"P"5."W" Игроки с баном чата\n"P"6."W" Админ информация %s\n"P"7."W" Kill List %s\n"P"8."W" Онлайн организаций\n"P"9."W" Починить автомобиль",(!PI[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!PI[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"));
	case 3: format(string,sizeof(string),""P"1."W" Администрация\n"P"2."W" Заспавниться\n"P"3."W" Устроиться на работу\n"P"4."W" Игроки в тюрьме\n"P"5."W" Игроки с баном чата\n"P"6."W" Админ информация %s\n"P"7."W" Kill List %s\n"P"8."W" Онлайн организаций\n"P"9."W" Починить автомобиль\n"P"10."W" Состояние складов\n"P"11."W" Узнать заморозки банд/мафий",(!PI[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!PI[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"));
	case 4: format(string,sizeof(string),""P"1."W" Администрация\n"P"2."W" Заспавниться\n"P"3."W" Устроиться на работу\n"P"4."W" Игроки в тюрьме\n"P"5."W" Игроки с баном чата\n"P"6."W" Админ информация %s\n"P"7."W" Kill List %s\n"P"8."W" Онлайн организаций\n"P"9."W" Починить автомобиль\n"P"10."W" Состояние складов\n"P"11."W" Узнать заморозки банд/мафий\n"P"12."W" Банлист\n"P"13."W" Возможно взломаны\n"P"14."W" Билборды\n",(!PI[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!PI[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"));
	case 5: format(string,sizeof(string),""P"1."W" Администрация\n"P"2."W" Заспавниться\n"P"3."W" Устроиться на работу\n"P"4."W" Игроки в тюрьме\n"P"5."W" Игроки с баном чата\n"P"6."W" Админ информация %s\n"P"7."W" Kill List %s\n"P"8."W" Онлайн организаций\n"P"9."W" Починить автомобиль\n"P"10."W" Состояние складов\n"P"11."W" Узнать заморозки банд/мафий\n"P"12."W" Банлист\n"P"13."W" Возможно взломаны\n"P"14."W" Билборды\n"P"15."W" Казино %s\n"P"16."W" Заполнить склады банд/мафий\n"P"17."W" Ограничение Invite",(!PI[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!PI[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!casino) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"));
	case 6,7: format(string,sizeof(string),""P"1."W" Администрация\n"P"2."W" Заспавниться\n"P"3."W" Устроиться на работу\n"P"4."W" Игроки в тюрьме\n"P"5."W" Игроки с баном чата\n"P"6."W" Админ информация %s\n"P"7."W" Kill List %s\n"P"8."W" Онлайн организаций\n"P"9."W" Починить автомобиль\n"P"10."W" Состояние складов\n"P"11."W" Узнать заморозки банд/мафий\n"P"12."W" Банлист\n"P"13."W" Возможно взломаны\n"P"14."W" Билборды\n"P"15."W" Казино %s\n"P"16."W" Заполнить склады банд/мафий\n"P"17."W" Ограничение Invite\n"P"18."W" Промокоды\n"P"19."W" Пополнить продукты в бизнес(сколько заказал владелец)",(!PI[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!PI[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!casino) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"));
	}
	D(playerid,D_ADMIN_PANEL,DSL,""P"Админ панель",string,"Выбрать","Отмена");
	return true;
}
CMD:ainfo(playerid,params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new string[512];
	format(string,sizeof(string),""ORANGE"Киков: "W"\t\t%d\n"ORANGE"Банов: "W"\t\t%d\n"ORANGE"Мутов: "W"\t\t%d\n"ORANGE"Репутация: "W"\t\t%d\n"ORANGE"Варнов: "W"\t\t%d\n"ORANGE"Джайлов: "W"\t\t%d\n\n"ORANGE"Онлайн за текущий день:"W"\t%s",gAdmin[playerid][0],gAdmin[playerid][1],gAdmin[playerid][2],gAdmin[playerid][3],gAdmin[playerid][4],gAdmin[playerid][5],ConvertsCmdTime(gAdminTime[playerid]));
	D(playerid,DIALOG_NONE,DSM,player_name[playerid],string,"Закрыть","");
	return 1;
}
CMD:admstats(playerid,params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	D(playerid, D_ADMIN_TIME, DSI, ""P"Статистика администратора", "\n\n"W"Для просмотра статистики администратора\nукажите его ник:\n\n", "Ввод", "Отмена");
	return 1;
}
CMD:agiverank(playerid,params[]) {
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new rankid,giveplayerid;
	if(sscanf(params,"ui", giveplayerid, rankid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /agiverank [id] [ранг]");
	if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(!PI[giveplayerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в организации");
	if(rankid > (FI[PI[giveplayerid][pMember]][fMaxRang]-1) || rankid < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы допустили ошибку");
	new string[128];
	format(string, sizeof(string), "[A] %s изменил ранг игроку %s c %d на %d", player_name[playerid],player_name[giveplayerid],PI[giveplayerid][pRank],rankid);
	AdmMSG(0xAFAFAFAA, string);

	format(string, sizeof(string), "Администратор "P"%s"W" изменил Вам ранг на "W"%d",player_name[playerid],rankid);
	SendUse(giveplayerid, string);

	PI[giveplayerid][pRank] = rankid;
	UpdatePlayerData(giveplayerid,"pRank", rankid);
	return 1;
}
CMD:setbizmafia(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;

	new mafiaid;
	if(sscanf(params,"d",mafiaid)) {
		SendClientMessage(playerid, COLOR_WHITE,"Используйте: /setbizmafia [номер]");
		SendClientMessage(playerid,-1, "1 - Итальянская | 2 - Японская | 3 - Русская");
		return 1;
	}
	if(mafiaid < 1 || mafiaid > 3) return 1;
	for(new b; b < gBusinessCount; b++) {
		if(!PlayerToPoint(4.0,playerid,gBusiness[b][bizzX],gBusiness[b][bizzY],gBusiness[b][bizzZ])) continue;
		switch(mafiaid) {
		case 1: gBusiness[b][bizzMafia] = fLCN;
		case 2: gBusiness[b][bizzMafia] = fYAKUZA;
		case 3: gBusiness[b][bizzMafia] = fRM;
		}
		static const mafia_name[][] = {
			"Итальянская мафия",
			"Японская мафия",
			"Русская мафия"
		};
		new string[128];
		format(string, sizeof(string), "[A] %s изменил контроль бизнеса %s - %s", player_name[playerid], gBusiness[b][bizzName], mafia_name[mafiaid-1]);
		AdmMSG(0xAFAFAFAA, string);
		UpdateBusinessText(b);
		UpdateBusinessData(b+1,"mafia",gBusiness[b][bizzMafia]);
		break;
	}
	return 1;
}
CMD:gspawn(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /gspawn [id]");

	if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, not_id);
	PlayerSpawn(giveplayerid);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] заспавнил игрока %s[%d]",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string);
	format(string, sizeof(string), "Вас заспавнил администратор %s[%d]",player_name[playerid],playerid);
	SendOk(giveplayerid, string);
	return 1;
}
CMD:inet(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new stats[100], stringstats[70], string[60],giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /inet [playerid]");
	GetPlayerNetworkStats(giveplayerid, stats, sizeof(stats));
	new last = strfind(stats, "Packetloss: ");
	new Float:packetloss = 0.0;
	if(last != -1) {
		strmid(stringstats, stats, last, strlen(stats));
		new last2 = strfind(stringstats, "%");
		if(last != -1)  {
			strdel(stats, 0, strlen(stats));
			strmid(stats, stringstats, last2-3, last2);
			packetloss = floatstr(stats);
		}
	}
	format(string, sizeof(string), "Name: %s | PacketLoss: %.0f",player_name[giveplayerid],packetloss);
	SendClientMessage(playerid,0x6BB3FFAA,string);
	return true;
}
CMD:timestat(playerid) {
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new str[600];
	format(str, sizeof(str),"Последнее время прокрутки Timer_Unix: (%d ms). пик: (%d ms).\n", time_grandtimer, time_grandtimer_max);
	format(str, sizeof(str),"%sПоследнее время прокрутки OnPlayerUpdate: (%d ms). пик: (%d ms).\nПоследнее время прокрутки \"newkeys\": (%d ms). пик: (%d ms).\nПоследнее время прокрутки \"second_timer\": (%d ms). пик: (%d ms).\nПоследнее время прокрутки \"PAYDAY\": (%d ms). пик: (%d ms).\nПоследнее время прокрутки \"Minute Timer\": (%d ms). пик: (%d ms).", str, time_update,time_update_max,time_newkeys,time_newkeys_max,time_second,time_second_max,timer_payday,timer_paydaymax,minute_update,minute_update_max);
	D(playerid,DIALOG_NONE,DSM, ""P"Нагрузка мода", str, "Закрыть", "");
	return 1;
}
CMD:getvw(playerid) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new str[64];
	format(str, sizeof(str), "Виртуальный мир: %i %i",GetPlayerVirtualWorld(playerid),TI[playerid][tSelectedBusinessID]);
	SendClientMessage(playerid,-1,str);
	return 1;
}
CMD:poscar(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /poscar [дом]");
	new carid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(carid) != 560) return SendClientMessage(playerid, COLOR_GREY, "Сядьте в султан");
	
	new Float: lwx, Float:lwy, Float:lwz,Float:a;
	GetVehiclePos(carid,lwx, lwy, lwz);
	GetVehicleZAngle(carid,a);

	gHouses[params[0]-1][houseParkX] = lwx;
	gHouses[params[0]-1][houseParkY] = lwy;
	gHouses[params[0]-1][houseParkZ] = lwz;
	gHouses[params[0]-1][houseParkR] = a;
	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	SendOk(playerid, "Координаты машины установлены(Я надеюсь ты поставил машину ровно)");
	new query[256];
	mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `parkx` = '%.2f',`parky` = '%.2f',`parkz` = '%.2f',`parkr` = '%.2f' WHERE id = '%i'",gHouses[params[0]-1][houseParkX],gHouses[params[0]-1][houseParkY],gHouses[params[0]-1][houseParkZ],gHouses[params[0]-1][houseParkR],params[0]);
	mysql_tquery(connects, query);
	return true;
}
CMD:mp(playerid) {
	if(!Teleport) return SendClientMessage(playerid, COLOR_GREY, "Активных мероприятий нет");
	if(MPTeleportPlayer[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже телепортировались на мероприятие");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
	if(PI[playerid][pJailTime] >= 1) return SendClientMessage(playerid, COLOR_GREY, "Вы в тюрьме");
	if(PI[playerid][pHospital]) return SendClientMessage(playerid, COLOR_GREY, "Вы в больнице");
	if(Teleport_Players[1] >= Teleport_Players[0]) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно мест на мероприятии");
	
	SetPlayerPosAC(playerid, TeleportFloat[0], TeleportFloat[1]+2, TeleportFloat[2],TeleportInfo[1],TeleportInfo[0]);
	Teleport_Players[1]++;
	
	SendClientMessage(playerid, COLOR_WHITE, "Вы телепортировались на мероприятие!");
	
	MPTeleportPlayer[playerid] = 1;
	return 1;
}
CMD:gomp(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 && dostup[playerid] == 0 && PI[playerid][pYoutube] == 0) return true;
	if(!Teleport) D(playerid, D_MP, DSL, ""P"МЕРОПРИЯТИЕ", ""P"1."W" Создать телепорт\n"P"2."W" Раздать оружие\n"P"3."W" Раздать жизнь\n"P"4."W" Раздать броню\n"P"5."W" Обезоружить всех\n"P"6."W" Забрать броню\n"P"7."W" Заморозить игроков (радиус 50м)\n"P"8."W" Разморозить игроков (радиус 50м)\n"P"9."W" Выдать временный скин\n"P"10."W" Ввести название\n"P"11."W" Указать кол-во участников на МП", "Выбрать", "Отмена");
	else D(playerid, D_MP, DSL, ""P"МЕРОПРИЯТИЕ", ""P"1."W" Удалить телепорт\n"P"2."W" Раздать оружие\n"P"3."W" Раздать жизнь\n"P"4."W" Раздать броню\n"P"5."W" Обезоружить всех\n"P"6."W" Забрать броню\n"P"7."W" Заморозить игроков (радиус 50м)\n"P"8."W" Разморозить игроков (радиус 50м)\n"P"9."W" Выдать временный скин\n"P"10."W" Ввести название\n"P"11."W" Указать кол-во участников на МП", "Выбрать", "Отмена");
	return 1;
}
CMD:bizwar(playerid) {
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не мафиози");
	if(PI[playerid][pRank] < 9) return SendClientMessage(playerid, COLOR_GREY, "Вам не доступна данная команда");
	if(BizWarTime[0] > 0 || BizWarTime[1] > 0) return SendClientMessage(playerid, COLOR_GREY, "Война за бизнес уже идет");
	//if(tmphour < 10 || tmphour >= 22) return SendClientMessage(playerid, COLOR_GREY, "Использовать команду можно только с 12:00 до 22:00");
	if(BizHourTime > 0) {
		new string[128];
		format(string,sizeof(string),"Таймер до следующего захвата {AFAFAF}[%i мин]", BizHourTime);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}
	new gang1 = -1;
	switch(PI[playerid][pMember]) {
	case fLCN: gang1 = MOROZ_LCN;
	case fYAKUZA: gang1 = MOROZ_YAKUZA;
	case fRM: gang1 = MOROZ_RM;
	}
	if(gang1 != -1) {
		if(fracmoroz[gang1] > unix) return SendClientMessage(playerid, COLOR_GREY, "Ваша мафия не может принимать участия в войнах. (заморожена администратором)");
	}
	for(new h;h<gBusinessCount;h++) {
		if(!IsPlayerInRangeOfPoint(playerid,3,gBusiness[h][bizzX], gBusiness[h][bizzY], gBusiness[h][bizzZ])) continue;
		switch(GetPlayerVirtualWorld(playerid)) {
		case 46: h = 7;
		case 47: h = 8;
		case 48: h = 9;
		}
		new gang = -1;
		switch(gBusiness[h][bizzMafia]) {
		case fLCN: gang = MOROZ_LCN;
		case fYAKUZA: gang = MOROZ_YAKUZA;
		case fRM: gang = MOROZ_RM;
		}
		if(gang != -1) {
			if(fracmoroz[gang] > unix) return SendClientMessage(playerid, COLOR_GREY, "Мафия, которой Вы хотите забить стрелу не может принимать участия в войнах. (заморожена администратором)");
		}
		/*if(gBusiness[h][bizzType] != 22) {
			if(gBusiness[h][bizzOwnerID] == 0) return SendClientMessage(playerid, COLOR_GREY, "У бизнеса нет владельца");
		}*/
		if(gBusiness[h][bizzMafia] == PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Этот бизнес под крышей Вашей мафии");
		if(gBusiness[h][bizzMafia] <= 0) {
			gBusiness[h][bizzMafia] = PI[playerid][pMember];
			UpdateBusinessData(h+1,"mafia",gBusiness[h][bizzMafia]);
			UpdateBusinessText(h);
			SendClientMessage(playerid, COLOR_BLUE, "Бизнес взят под крышу Вашей мафии");
			return 1;
		}
		else {
			new string[156];
			format(string, sizeof(string), ""W"Данный бизнес "GREEN"%s"W" принадлежит {%06x}%s\n\n"P"\tВы согласны начать захват бизнеса?",gBusiness[h][bizzName], gFractionSpawn[gBusiness[h][bizzMafia]][fracColor] >>> 8,GetMN(gBusiness[h][bizzMafia]));
			if(!IsPlayerInBandOnline(gBusiness[h][bizzMafia])) return SendClientMessage(playerid, COLOR_GREY, "Мафия на которую вы собираетесь напасть нет в сети");
			D(playerid,D_BIZWAR,DSM, ""P"Атака бизнеса",string,"Да","Нет");
			SetPVarInt(playerid, "bizwar_id", h);
			return 1;
		}
	}
	return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться рядом с бизнесом");
}
CMD:bizrasf(playerid, params[]) { // расформ бизов
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params,"i",params[0])) {
		SendClientMessage(playerid, COLOR_WHITE,"Используйте: /bizrasf [id мафии]");
		SendClientMessage(playerid,-1, "15 - Итальянская | 16 - Японская | 17 - Русская");
		return true;
	}
	if(params[0] != 15 && params[0] != 16 && params[0] != 17) return 1;
	new query[300];
	mysql_format(connects, query, sizeof(query),"UPDATE `business` SET `mafia` = '0' WHERE `mafia` = '%i'",params[0]);
	mysql_tquery(connects, query,"","");
	for(new i; i<gBusinessCount; i++)
	{
		if(gBusiness[i][bizzMafia] == params[0]) {
			gBusiness[i][bizzMafia] = 0;
		}
		UpdateBusinessText(i);
	}
	SendClientMessage(playerid, COLOR_BLUE, "Бизнесы у данной мафии успешно расформированы");
	return true;
}

CMD:bizlist(playerid, params[]) {
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не мафиози");
	new count_business = 1,string[3400];
	string = ""W"№\t"W"Название бизнеса\t"W"Доход за сегодня\n";
	new fracid = -1;
	switch(PI[playerid][pMember]) {
	case fLCN:fracid = 0;
	case fYAKUZA:fracid = 1;
	case fRM:fracid = 2;
	}
	for(new i; i<gBusinessCount; i++) {
		if(gBusiness[i][bizzMafia] != PI[playerid][pMember]) continue;
		if(fracid != -1) {
			if(count_business > 50) break;
			format(string, sizeof(string), "%s"P"%i\t%s\t$%d\n",string, count_business, gBusiness[i][bizzName],gBankMafia[fracid][i]);
			count_business++;
		}
	}
	if(count_business < 50) D(playerid, DIALOG_NONE, DSTH, ""P"Бизнесы мафии", string, "Закрыть", "");
	else D(playerid, dBizList, DSTH, ""P"Бизнесы мафии", string, "Далее", "Закрыть");
	return 1;
}
CMD:tie(playerid,params[]) {
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /tie [id]");
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
	if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(TI[playerid][tTied])  return SendClientMessage(playerid, COLOR_GREY, "Вы связаны");
	if(TI[giveplayerid][tTied]) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже связан");
	if(!IsPlayerStream(3.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
	if(!IsPlayerInAnyVehicle(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в машине!");
	if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY,not_id);
	if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) != 2 && !IsPlayerInVehicle(giveplayerid, GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в машине");
	if(PI[giveplayerid][pMember] == fFBI)
	{
		if(QuestProgress[playerid][25] == 0 && AcceptQuest[playerid][25] != 0)
		{
			QuestProgress[playerid][25] ++;
			save_quest(playerid,25);
			D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Похищение'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
		}
	}
	if(QuestProgress[playerid][32] < 10 && AcceptQuest[playerid][32] != 0) QuestProgress[playerid][32] ++,save_quest(playerid,32);
	if(QuestProgress[playerid][32] == 10 && AcceptQuest[playerid][32] != 0) {
		D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Прочная веревка'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
	}
	new string[128];
	format(string, sizeof(string), "достал(а) веревку и связал(а) %s", player_name[giveplayerid]);
	MeAction(playerid,string, 5.0);
	TogglePlayerControllable(giveplayerid, 0);
	TI[giveplayerid][tTied] = true;
	return 1;
}
CMD:untie(playerid,params[]) {
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendClientMessage(playerid, CWHITE, "Используйте: /untie [id]");
	else if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY,not_id);
	else if(!IsPlayerStream(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
	else if(TI[playerid][tTied])  return SendClientMessage(playerid, COLOR_GREY, "Вы связаны");
	else if(!TI[giveplayerid][tTied]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не связан");
	else if(giveplayerid == playerid)  return SendClientMessage(playerid, COLOR_GREY,not_id);
	new string[128];
	format(string, sizeof(string), "%s развязал %s", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	TogglePlayerControllable(giveplayerid, 1);
	TI[giveplayerid][tTied] = false;
	return 1;
}
CMD:giveradio(playerid,params[]) {
	new giveplayerid;
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не мафиози");
	if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
	else if(sscanf(params,"d",giveplayerid))return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /giveradio [id]");
	else if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, not_id);
	else if (!IsPlayerStream(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
	else if(giveplayerid == playerid) return 1;
	else if(!GetPVarInt(giveplayerid,"takeradio")) return SendClientMessage(playerid, COLOR_GREY, "У игрока не отбирали рацию");
	new string[128];
	format(string, sizeof(string), "%s вернул(а) Вам рацию", player_name[playerid]);
	SendClientMessage(giveplayerid, 0x6ab1ffaa, string);
	DeletePVar(giveplayerid,"takeradio");
	format(string, sizeof(string), "%s вернул(а) рацию %s 'y", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	return 1;
}
CMD:takeradio(playerid,params[]) {
	new giveplayerid;
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не мафиози");
	if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
	if(sscanf(params,"d",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /takeradio [id]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(GetPVarInt(giveplayerid,"takeradio")) return SendClientMessage(playerid, COLOR_GREY, "У него нет рации");
	if(!IsPlayerStream(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
	else if(!TI[giveplayerid][tTied]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не связан");
	if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, not_id);
	new string[128];
	format(string, sizeof(string), "%s забрал(а) у Вас рацию", player_name[playerid]);
	SendClientMessage(giveplayerid, 0x6ab1ffaa, string);
	SetPVarInt(giveplayerid,"takeradio", true);
	format(string, sizeof(string), "%s забрал(а) рацию у %s", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	return 1;
}
CMD:bag(playerid,params[]) {
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не мафиози");
	if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
	if(sscanf(params,"i",params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /bag [playerid]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	new str_mh[78];
	if(p_mh[params[0]]==PlayerText:-1) {
		p_mh[params[0]]=CreatePlayerTextDraw(params[0],0.000000,0.000000,"|");
		PlayerTextDrawBackgroundColor(params[0],p_mh[params[0]], 255);
		PlayerTextDrawFont(params[0],p_mh[params[0]], 1);
		PlayerTextDrawLetterSize(params[0],p_mh[params[0]], 0.500000, 49.799957);
		PlayerTextDrawColor(params[0],p_mh[params[0]], -1);
		PlayerTextDrawSetOutline(params[0],p_mh[params[0]], 0);
		PlayerTextDrawSetProportional(params[0],p_mh[params[0]], 1);
		PlayerTextDrawSetShadow(params[0],p_mh[params[0]], 1);
		PlayerTextDrawUseBox(params[0],p_mh[params[0]], 1);
		PlayerTextDrawBoxColor(params[0],p_mh[params[0]], 255);
		PlayerTextDrawTextSize(params[0],p_mh[params[0]],640.000000,0.000000);
		PlayerTextDrawShow(params[0],p_mh[params[0]]);
		format(str_mh,78,"надел(а) мешок на голову %s",player_name[params[0]]);
		MeAction(playerid,str_mh);
		SendOk(playerid,"Чтобы снять мешок нажмите "P"/bag"W" еще раз");
	}
	else {
		PlayerTextDrawHide(params[0],p_mh[params[0]]);
		PlayerTextDrawDestroy(params[0],p_mh[params[0]]);
		p_mh[params[0]]=PlayerText:-1;
		format(str_mh,78,"снял(а) мешок с головы %s",player_name[params[0]]);
		MeAction(playerid,str_mh);
	}
	return true;
}
CMD:givephone(playerid,params[]) {
	new giveplayerid;
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не мафиози");
	if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
	else if(sscanf(params,"d",giveplayerid))return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /givephone [id]");
	else if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, not_id);
	else if(GetPlayerDistanceToPlayer(playerid, giveplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	else if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя вернуть телефон самому себе");
	else if(!GetPVarInt(giveplayerid,"takephone")) return SendClientMessage(playerid, COLOR_GREY, "У игрока не отбирали телефон");
	new string[128];
	format(string, sizeof(string), "%s вернул(а) Вам телефон", player_name[playerid]);
	SendClientMessage(giveplayerid, 0x6ab1ffaa, string);
	DeletePVar(giveplayerid,"takephone");
	format(string, sizeof(string), "%s вернул(а) телефон %s 'y", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	return 1;
}
CMD:takephone(playerid,params[]) {
	new giveplayerid;
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не мафиози");
	if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
	if(sscanf(params,"d",giveplayerid))return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /takephone [id]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(GetPVarInt(giveplayerid,"takephone") || !PI[giveplayerid][pPhone]) return SendClientMessage(playerid, COLOR_GREY, "У него нет телефона");
	else if(GetPlayerDistanceToPlayer(playerid, giveplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	else if(!TI[giveplayerid][tTied]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не связан");
	if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, not_id);
	new string[128];
	format(string, sizeof(string), "%s забрал(а) у Вас мобильный", player_name[playerid]);
	SendClientMessage(giveplayerid, 0x6ab1ffaa, string);
	SetPVarInt(giveplayerid,"takephone", true);
	format(string, sizeof(string), "%s забрал(а) мобильный у %s", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	return 1;
}
CMD:gag(playerid,params[]) {
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /gag [id]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(!TI[giveplayerid][tTied]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не связан");
	if(TI[playerid][tTied]) return SendClientMessage(playerid, COLOR_GREY, "Вы связаны");
	if(GetPlayerDistanceToPlayer(playerid, giveplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	new string[128];
	if(TI[giveplayerid][tGag]) {
		TI[giveplayerid][tGag] = false;
		TI[giveplayerid][tGagTime] = 0;
		format(string, sizeof(string), "%s вытащил кляп у %s'a", player_name[playerid] ,player_name[giveplayerid]);
		SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	}
	else {
		if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
		if(PI[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
		TI[giveplayerid][tGag] = true;
		TI[giveplayerid][tGagTime] = 600;
		format(string, sizeof(string), "%s вставил кляп в рот %s'у", player_name[playerid] ,player_name[giveplayerid]);
		SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	}
	return 1;
}
alias:zone("gmap");
CMD:zone(playerid) {
	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вам не доступна эта функция");
	new total = 0,string[128];
	for(new i = 0; i < TOTALGZ; i++) {
		if(GZInfo[i][gFrakVlad] == PI[playerid][pMember]) total++;
	}
	format(string,sizeof(string),"Территорий под контролем: "P"%d",total);
	SendOk(playerid,string);
	return 1;
}
CMD:gangtop(playerid) {
	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вам не доступна эта функция");
	D(playerid,D_GANGTOP,DST, ""P"GANG TOP", ""P"1."W" По территориям\n"P"2."W" По граффити\n"P"3."W" Текущий рейтинг банды", "Выбрать", "Закрыть");
	return 1;
}
CMD:dipinfo(playerid) {
	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вам не доступна эта функция");
	dialog_diplom(playerid,false);
	return 1;
}
CMD:givekey(playerid, params[]) {
	if(!PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вам не доступна эта функция");
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /givekey [id]");
	if(playerid == giveplayerid) return SendClientMessage(playerid, COLOR_GREY, "Вы указали свой ID");
	if(IsAGang(playerid)) if(PI[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
	if(GetPlayerDistanceToPlayer(playerid, giveplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
	if(TI[giveplayerid][tEnter][PI[playerid][pMember]]) {
		MeAction(playerid,"забрал(а) пропуск");
		TI[giveplayerid][tEnter][PI[playerid][pMember]] = false;
		SendOk(giveplayerid,"У Вас забрали пропуск");
		return 1;
	}
	if(!TI[giveplayerid][tEnter][PI[playerid][pMember]]) {
		MeAction(playerid,"выдал(а) пропуск");
		TI[giveplayerid][tEnter][PI[playerid][pMember]] = true;
		SendOk(giveplayerid,"Вам выдали пропуск");
		return 1;
	}
	return 1;
}
CMD:air(playerid) {
	if(!IsAGang(playerid) && !IsAMafia(playerid)) return SendClientMessage(playerid,COLOR_GREY,"Вы не состоите в банде/мафии");
	if(!LastAirDrop[airTime]) return SendClientMessage(playerid,COLOR_GREY,"В данный момент не проходит захват AirDrop");
	EnableGPSForPlayer(playerid,LastAirDrop[airPos][0],LastAirDrop[airPos][1],LastAirDrop[airPos][2]);
	SendClientMessage(playerid,CGOLD,"Местоположение AirDrop успешно отмечено в вашем GPS");
	return true;
}
CMD:gpay(playerid, params[]) {
	if(!IsAGang(playerid) || !PI[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Вам не доступна эта функция");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /gpay [сумма]");
	if(params[0] < 1 || params[0] > 100000) return SendClientMessage(playerid, COLOR_GREY, "От $1 и до $100.000");
	new num = 0;
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pMember] != PI[playerid][pMember] || playerid == i) continue;
		num++;
	}
	if(num == 0) return SendClientMessage(playerid, COLOR_GREY, "В организации никого нет");
	new string[128];
	format(string, sizeof(string), "\n\n"W"Вы действительно хотите выдать премию в размере "ORANGE"$%d"W" членам Вашей банды?\n\n", params[0]*num);
	D(playerid, D_GANG_PAY, DSM, ""P"Выдача премии", string, "Выдать", "Отмена");
	SetPVarInt(playerid, "prem_gang_money", params[0]);
	return 1 ;
}
CMD:endcapture(playerid)
{
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	for (new i = 0; i < TOTALGZ; i++)
	{
		if(GZInfo[i][gTime] < 1) continue;
		new string[250];
		GZInfo[i][gNapad] = PI[playerid][pMember];
				
		capture_kd[GZInfo[i][gFrakVlad]] = 0;
		capture_kd[GZInfo[i][gNapad]] = 0;
		
		capture_war[PI[playerid][pMember]] = GZInfo[i][gFrakVlad];

		GZInfo[i][gTime] = 1;
		
		CountOnZone[GZInfo[i][gNapad]] = 0;
		CountOnZone[GZInfo[i][gFrakVlad]] = 0;


		format(string, 112, "Капт %s и %s был остоновлен Администратором %s",GFrac(PI[playerid][pMember]),GFrac(GZInfo[i][gFrakVlad]),player_name[playerid]);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		GangZoneFlashForAll(GZInfo[i][gID], GetGangColor(GZInfo[i][gNapad]));

		GZInfo[i][ZoneOnBattle] = 0;
		break;
	}
	return 1;
}
CMD:capture(playerid) {
	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вам не доступна эта функция");
	if(PI[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 5 ранга");
	if(tmphour < 10 || tmphour > 23) return SendClientMessage(playerid, COLOR_GREY, "Использовать команду можно только с 10:00 до 23:00");
	if(tmpminute != 0) return SendClientMessage(playerid, COLOR_GREY, "Захватить территорию можно в следующем часу");
	if(capture_kd[PI[playerid][pMember]] != 0) return SendClientMessage(playerid,COLOR_GREY,"Ваша банда уже воюет / воевала за территорию в этом часу.");
	if(!IsPlayerInBandOnline(PI[playerid][pMember])) return SendClientMessage(playerid, COLOR_GREY, "В вашей банде должно быть не меньше двух человек");
	new gang1 = -1;
	switch(PI[playerid][pMember]) {
	case fBALLAS: gang1 = MOROZ_BALLAS;
	case fVAGOS: gang1 = MOROZ_VAGOS;
	case fGROVE: gang1 = MOROZ_GROVE;
	case fAZTEC: gang1 = MOROZ_AZTECAS;
	case fRIFA: gang1 = MOROZ_RIFA;
	}
	if(gang1 != -1) {
		if(fracmoroz[gang1] > unix) {
			SendClientMessage(playerid, COLOR_GREY, "Ваша банда заморожена");
			return 1;
		}
	}
	for (new i = 0; i < TOTALGZ; i++)
	{
		if (PlayerToKvadrat(playerid, GZInfo[i][gCoords][0], GZInfo[i][gCoords][1], GZInfo[i][gCoords][2], GZInfo[i][gCoords][3]) && GZInfo[i][gFrakVlad] != PI[playerid][pMember] && GZInfo[i][ZoneOnBattle] == 0 && capture_kd[GZInfo[i][gFrakVlad]] == 0)
		{
			new string[250];
			if(PI[playerid][pMember] == GZInfo[i][gFrakVlad]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете захватить собственную территорию");
			if(i == 85 && black_prods[9] > unix) return SendClientMessage(playerid, COLOR_GREY, "В данный момент борьба за чёрный рынок недоступна");
			if(capture_kd[GZInfo[i][gFrakVlad]] == 1) return SendClientMessage(playerid,COLOR_GREY,"Нападаемая банда уже воюет / воевала за территорию в этом часу");
			if(f_diplomacy[PI[playerid][pMember] - 15][GZInfo[i][gFrakVlad] - 15] == dip_status_alliance) return SendClientMessage(playerid, COLOR_GREY, "С данной бандой заключен союз");
			if(f_diplomacy[PI[playerid][pMember] - 15][GZInfo[i][gFrakVlad] - 15] == dip_status_neutral) return SendClientMessage(playerid, COLOR_GREY, "С данной бандой заключен нейтралитет");
			if(!IsPlayerInBandOnline(GZInfo[i][gFrakVlad])) return SendClientMessage(playerid, COLOR_GREY, "Банда на которую вы собираетесь напасть нет в сети / Меньше двух человек");
			new gang = -1;
			switch(GZInfo[i][gFrakVlad]) {
			case fBALLAS: gang = MOROZ_BALLAS;
			case fVAGOS: gang = MOROZ_VAGOS;
			case fGROVE: gang = MOROZ_GROVE;
			case fAZTEC: gang = MOROZ_AZTECAS;
			case fRIFA: gang = MOROZ_RIFA;
			}
			if(gang != -1) {
				if(fracmoroz[gang] > unix) {
					SendClientMessage(playerid, COLOR_GREY, "Банду которую вы хотите захватить невозможно");
					SendClientMessage(playerid, COLOR_GREY, "Она заморожена администратором, ожидайте сообщения в чате когда заморозка будет снята");
					return 1;
				}
			}
			GZInfo[i][gNapad] = PI[playerid][pMember];
			
			capture_kd[GZInfo[i][gFrakVlad]] = 1;
			capture_kd[GZInfo[i][gNapad]] = 1;
			
			capture_war[PI[playerid][pMember]] = GZInfo[i][gFrakVlad];

			GZInfo[i][gTime] = 60*15;
			
			CountOnZone[GZInfo[i][gNapad]] = 0;
			CountOnZone[GZInfo[i][gFrakVlad]] = 0;

			format(string, 112, "%s(%s) начал(a) захват территории банды %s",GFrac(PI[playerid][pMember]),player_name[playerid],GFrac(GZInfo[i][gFrakVlad]));
			SendBand(COLOR_LIGHTRED,string);

			format(string, 144, "[A] Начался капт между бандой %s и %s",GFrac(PI[playerid][pMember]),GFrac(GZInfo[i][gFrakVlad]));
			AdmMSG(COLOR_YELLOW, string);

			GangZoneFlashForAll(GZInfo[i][gID], GetGangColor(GZInfo[i][gNapad]));

			GZInfo[i][ZoneOnBattle] = 1;

			if(QuestProgress[playerid][22] < 5 && AcceptQuest[playerid][22] != 0) QuestProgress[playerid][22] ++,save_quest(playerid,22);
			if(QuestProgress[playerid][22] == 5 && AcceptQuest[playerid][22] != 0) {
				D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Завоеватель'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
			}
			break;
		}
	}
	return 1;
}
CMD:famsklad(playerid, params[]) {
	new fam = PI[playerid][pFamily]-1;
	if(!PI[playerid][pFamily]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в семье");
	if(!GetString(gFamily[fam][famOwner],player_name[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
	new str[9];
	if(gFamily[fam][famskladSt] == 0) gFamily[fam][famskladSt] = 1,str = "закрыл";
	else gFamily[fam][famskladSt] = 0,str = "открыл";
	static const f_str[] = "%s[%d] %s(а) сбережения семьи";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 9)];
	format(string,sizeof(string),f_str,player_name[playerid],playerid,str);
	FamMSG(fam+1,string);
	UpdateFamily(fam+1,"sklad_status",gFamily[fam][famskladSt]); 
	return 1;
}

CMD:warelock(playerid, params[]) {
	if((!IsAGang(playerid) && !IsAMafia(playerid) && !IsABikers(playerid)) || PI[playerid][pRank] < FI[PI[playerid][pMember]][fInviteRang]) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
	new str[9];
	if(FI[PI[playerid][pMember]][fSklad] == 0) FI[PI[playerid][pMember]][fSklad] = 1,str = "открыл";
	else FI[PI[playerid][pMember]][fSklad] = 0,str = "закрыл";
	static const f_str[] = "[F] %s[%d] %s(а) склад";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 9)];

	format(string,sizeof(string),f_str,player_name[playerid],playerid,str);
	SendFamilyMessage(PI[playerid][pMember],0x6ab1ffaaff,string);
	UpdateFraction(PI[playerid][pMember],"Sklad",FI[PI[playerid][pMember]][fSklad]);
	return 1;
}
CMD:sellgun(playerid,params[]) {
	new gunname[22];
	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не бандит");
	if(PI[playerid][pJailTime]) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в тюрьме");
	if(TI[playerid][tDuel] != -1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать на дуэлях");
	if(sscanf(params,"s[18]ddu",gunname,params[0],params[1],params[2])) {
		SendClientMessage(playerid, COLOR_WHITE,"Введите: /sellgun [название оружия] [патроны] [цена] [playerid]");
		SendClientMessage(playerid, COLOR_WHITE,"Введите: /gunlist - название оружия и расходы материалов");
		return true;
	}
	if(!IsPlayerConnected(params[2])) return SendClientMessage(playerid, COLOR_GREY, not_id);
	if(params[1] > 50000 || params[1] < 4) return SendClientMessage(playerid, COLOR_GREY,"Неверная цена/патроны");
	if(params[0] <= 0 || params[0] > 10000) return SendClientMessage(playerid, COLOR_GREY,"За раз можно делать до 10000 патрон");

	if(strcmp(gunname,"sdpistol", true) == 0) SetPVarInt(params[2],"gunid",23), SetPVarInt(params[2],"sell_gunmats",1);
	else if(strcmp(gunname,"deagle", true) == 0) SetPVarInt(params[2],"gunid",24), SetPVarInt(params[2],"sell_gunmats",3);
	else if(strcmp(gunname,"shotgun", true) == 0) SetPVarInt(params[2],"gunid",25), SetPVarInt(params[2],"sell_gunmats",3);
	else if(strcmp(gunname,"smg", true) == 0) SetPVarInt(params[2],"gunid",29), SetPVarInt(params[2],"sell_gunmats",2);
	else if(strcmp(gunname,"ak47", true) == 0) SetPVarInt(params[2],"gunid",30), SetPVarInt(params[2],"sell_gunmats",3);
	else if(strcmp(gunname,"m4", true) == 0) SetPVarInt(params[2],"gunid",31), SetPVarInt(params[2],"sell_gunmats",3);
	else if(strcmp(gunname,"rifle", true) == 0) SetPVarInt(params[2],"gunid",33), SetPVarInt(params[2],"sell_gunmats",5);
	else return SendClientMessage(playerid,COLOR_GREY,"Неизвестное оружие, используйте /gunlist");
	if(PI[playerid][pMats] < (GetPVarInt(playerid,"sell_gunmats")*params[0])) return SendClientMessage(playerid, COLOR_GREY,"У вас недостаточно материалов!");
	IDGZ[playerid] = GetIDGZ(playerid);
	if(IDGZ[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Продавать оружие можно только в гетто");
	if(playerid == params[2])
	{
		GivePlayerWeapon(playerid,GetPVarInt(params[2],"gunid"),params[0]);
		PI[playerid][pMats] -= (GetPVarInt(playerid,"sell_gunmats")*params[0]);
		UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
		MeAction(playerid,"сделал(а) себе оружие из материалов");
		return true;
	}
	if(!ProxDetectorS(5.0, playerid, params[2])) return SendClientMessage(playerid, COLOR_GREY, "Человек должен быть рядом с вами");
	SetPVarInt(playerid,"gunoffee",params[2]);
	SetPVarInt(params[2],"gunoffee",params[2]);
	SetPVarInt(params[2],"gunoffer",playerid);
	SetPVarInt(params[2],"gunprice",params[1]);
	SetPVarInt(params[2],"gunammo",params[0]);
	SetPVarInt(params[2],"sell_gunmats",GetPVarInt(params[2],"sell_gunmats")*params[0]);
	
	new string[512];
	format(string, sizeof(string), "Вы предложили "P"%s"W" купить %s [%d] за "ORANGE"$%d",player_name[params[2]],gunname,params[0],params[1]);
	SendUse(playerid, string);
	format(string, sizeof(string), ""P"%s"W" предложил Вам купить %s [%d] за "ORANGE"$%d",player_name[playerid],gunname,params[0],params[1]);
	SendUse(params[2], string);
	SendClientMessage(params[2],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
	return true;
}
CMD:gunlist(playerid)
{
	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не бандит");
	D(playerid,DIALOG_NONE,DSTH,"Сборка оружия","Оружие\tРасход материалов\nSdpistol\t1\nDeagle\t3\nShotgun\t3\nSMG\t2\nAK-47\t3\nM4A1\t3\nRifle\t5","Закрыть","");
	return true;
}
CMD:makegun(playerid) {
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не мафиози");
	if(!PI[playerid][pMats]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет материалов");
	if(PI[playerid][pJailTime]) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в тюрьме");
	if(TI[playerid][tDuel] != -1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать на дуэлях");
	new string[512];
	string = "Оружие\tБоеприпасов"W"\n";
	for(new i = 0; i < 7; i++) {
		format(string,sizeof(string),"%s%s\t%i\n",string,MakeGunData[i][mgunname],MakeGunData[i][mgunamount]);
	}
	D(playerid,D_MAKEGUN,DSTH,"Сборка оружия",string,"Выбрать","Закрыть");
	return 1;
}
CMD:bmarket(playerid) {
	if(!IsAGang(playerid) || PI[playerid][pRank] < FI[PI[playerid][pMember]][fInviteRang]) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
	if(black_prods[0] != PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Чёрный рынок крышует другая банда");
	static const f_str[] = "Наименование\tЦена\tСклад\n\
							Наркотики\t%d\t%d\n\
							Материалы\t%d\t%d\n\
							Бронежилет\t%d\t%d\n\
							Армейская форма\t%d\t%d\n";
	new string[sizeof(f_str) +2 + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5)];
	format(string,sizeof(string),f_str,black_prods[5],black_prods[1],black_prods[6],black_prods[2],black_prods[7],black_prods[3],black_prods[8],black_prods[4]);
	D(playerid,D_BLACK_MARKET,DSTH,"Чёрный рынок",string,"Выбрать","Отмена");
	return 1;
}
CMD:fmute(playerid, params[]) {
	if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fInviteRang]) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
	new id, time, reason[100], string[150];
	if(sscanf(params,"dds[100]", id, time, reason)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /fmute [id] [время] [причина]");
	if(IsAIP(reason)) return 1;
	if(time < 1 || time > 60) return SendClientMessage(playerid, COLOR_GREY, "Выдать заглушку нельзя менее 1 минуты и более 60 минут");
	if(PI[id][pMember] != PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не состоит в Вашей организации");
	if(PI[id][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете выдать заглушку лидеру");
	if(PI[id][pFmute]) return SendClientMessage(playerid, COLOR_GREY, "У данного игрока уже есть заглушка");
	format(string,sizeof(string),"%s заглушил(а) игрока %s на %d минут. Причина: %s",player_name[playerid],player_name[id],time,reason);
	SendFamilyMessage(PI[playerid][pMember],COLOR_LIGHTRED, string);
	PI[id][pFmute] = time*60;
	UpdatePlayerData(id,"fmute",PI[id][pFmute]);
	return true;
}
CMD:funmute(playerid, params[]) {
	if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fInviteRang]) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
	new id, string[150];
	if(sscanf(params,"d", id)) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /funmute [id]");
	if(PI[id][pMember] != PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не состоит в Вашей организации");
	if(!PI[id][pFmute]) return SendClientMessage(playerid, COLOR_GREY, "У данного игрока нет заглушки");
	format(string,sizeof(string),"%s разглушил(а) игрока %s",player_name[playerid],player_name[id]);
	SendFamilyMessage(PI[playerid][pMember],COLOR_LIGHTRED, string);
	PI[id][pFmute] = 0;
	UpdatePlayerData(id,"fmute",PI[id][pFmute]);
	return true;
}
CMD:sellzone(playerid,params[]) {
	if(!PI[playerid][pLeader]) return 1;
	IDGZ[playerid] = GetIDGZ(playerid);
	new giveplayerid;
	if(IDGZ[playerid] != -1) {
		new i = IDGZ[playerid];
		if(PI[playerid][pLeader] != GZInfo[i][gFrakVlad]) return SendClientMessage(playerid, COLOR_GREY, "Вы не на своей территории");
		else if(sscanf(params,"dd",giveplayerid,params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Используйте: /sellzone [id] [цена]");
		else if(params[1] < 10000 || params[1] > 100000) return SendClientMessage(playerid, COLOR_GREY, "Цена должна быть: от 10000 до 100000");
		else if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, not_id);
		else if(!IsPlayerStream(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от этого человека");
		else if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Эта итак Ваша территория");
		if(i == 97 || i == 93 || i == 41 || i == 0 || i == 24) return SendClientMessage(playerid, COLOR_GREY, "Нельзя продать спавн банды");
		if(!PI[giveplayerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Продажа территорий доступна лидерам банд");

		new string[325];
		format(string, sizeof(string), "Вы предложили "P"%s"W" купить территорию за "ORANGE"$%d",player_name[giveplayerid],params[1]);
		SendUse(playerid, string);
		format(string, sizeof(string), ""P"%s"W" предложил Вам купить территорию за за "ORANGE"$%d",player_name[playerid],params[1]);
		SendUse(giveplayerid, string);
		SendClientMessage(giveplayerid,COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

		SetPVarInt(giveplayerid,"ZoneOffer", playerid + 1);
		SetPVarInt(giveplayerid,"ZonePrice", params[1]);
		SetPVarInt(giveplayerid,"sellzone", PI[playerid][pMember]);
	}
	return 1;
}
stock TextFind(const text[],const findtext[]) return strfind(text, findtext) != -1;

stock ValidChar(mailchar) {
	if((mailchar >= 'A' && mailchar <= 'Z') || (mailchar >= 'a' && mailchar <= 'z')
			|| (mailchar >= '0' && mailchar <= '9') || (mailchar == '-') || (mailchar == '_')
			|| (mailchar == '@') || (mailchar == '.')) return 1;
	return 0;
}

stock IsValidEmail(const email[]) {
	new bool:Succes = true;
	new bool:Good;
	for(new i; i < strlen(email); i++) {
		if(email[i] == '@') {
			if(!Good) Good = true;
			else {
				Good = false;
				break;
			}
		}
		if(!ValidChar(email[i])) Succes = false;
	}
	if(!Good) Succes = false;
	if(!TextFind(email,".ru") && !TextFind(email,".com") && !TextFind(email,".ua") && !TextFind(email,".su")) Succes = false;
	if(!TextFind(email,"@")) Succes = false;
	return Succes;
}
CB: OnPlayerDonateCheck(playerid, name[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");
	new credits;
	cache_get_value_int(0, "donatemoney", credits);
	SetPVarInt(playerid, "check_credits", credits);
	SetPVarString(playerid, "check_name", name);
	new query[256];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM freekassa_payments WHERE account = '%s' AND status = 1 ORDER BY dateComplete DESC LIMIT 0,20;", name);
	mysql_tquery(connects, query, "unitpay_callback", "dd", playerid, 1);
	return 1;
}
CB: unitpay_callback(playerid, type) {
	switch(type) {
	case 0: {
			new rows;
			cache_get_row_count(rows);
			if(!rows) return SendClientMessage(playerid, COLOR_GREY, "История пополнений отсутствует");
			new sum, datetime[30], str[1000];
			for(new i; i < rows; i++) {
				cache_get_value_index_int(i, 3, sum);
				cache_get_value_index(i, 6, datetime, 30);
				format(str, sizeof(str), "%s%s - %i %s\n", str, datetime, sum, (sum==1)?("рубль"):(sum<5)?("рубля"):("руб"));
			}
			new string[1024];
			format(string, sizeof(string), "\
				"W"Состояние счёта:\t\t"GREEN"%i руб\n\
				{3399FF}20 последних пополнений"W"\n\n\
				%s\n\
				"ORANGE"Пополнить счёт можно на "P"ml-rp.ru",
			PI[playerid][pRouble], str);
			D(playerid, DIALOG_NONE, DSM, ""P"Информация о пополнениях", string, "Закрыть", "");
		}
	case 1: {
			new rows;
			cache_get_row_count(rows);
			new name[MAX_PLAYER_NAME];
			GetPVarString(playerid,"check_name",name,MAX_PLAYER_NAME);
			DeletePVar(playerid,"check_name");
			if(!rows) {
				new string[512];
				format(string, sizeof(string), "\
					"W"Ник:\t\t\t\t%s\n\
					"W"Состояние счёта:\t\t"GREEN"%i руб\n\
					{AFAFAF}История пополнений отсутствует\n",
				name, GetPVarInt(playerid, "check_credits"));
				D(playerid, DIALOG_NONE, DSM, ""P"Информация о пополнениях", string, "Закрыть", "");
				DeletePVar(playerid, "check_credits");
				return 1;
			}
			new sum, datetime[30], str[1000];
			for(new i; i < rows; i++) {
				cache_get_value_index_int(i, 3, sum);
				cache_get_value_index(i, 6, datetime, 30);
				format(str, sizeof(str), "%s%s - %i %s\n", str, datetime, sum, (sum==1)?("рубль"):(sum<5)?("рубля"):("руб"));
			}
			new string[1024];
			format(string, sizeof(string), "\
				"W"Ник:\t\t\t\t%s\n\
				"W"Состояние счёта:\t\t"GREEN"%i руб\n\
				{3399FF}20 последних пополнений"W"\n\n\
				%s",
			name, GetPVarInt(playerid, "check_credits"), str);
			D(playerid, DIALOG_NONE, DSM, ""P"Информация о пополнениях", string, "Закрыть", "");
			DeletePVar(playerid, "check_credits");
		}
	}
	return 1;
}

CB: load_online_today(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) {
		gOnlinePlayer[playerid][0] = 0;
		gOnlinePlayerAFK[playerid][0] = 0;
	}
	else {
		cache_get_value_index_int(0,3,gOnlinePlayer[playerid][0]);
		cache_get_value_index_int(0,4,gOnlinePlayerAFK[playerid][0]);
	}
	return 1;
}
CB: load_online_yesterday(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) {
		gOnlinePlayer[playerid][1] = 0;
		gOnlinePlayerAFK[playerid][1] = 0;
	}
	else {
		cache_get_value_index_int(0,3,gOnlinePlayer[playerid][1]);
		cache_get_value_index_int(0,4,gOnlinePlayerAFK[playerid][1]);
	}
	return 1;
}

CMD:quest(playerid) {
	D(playerid,D_MENU_QUEST,DSL,""P"Задания",""P"1."W" Активные задания\n"P"2."W" Начальные квесты для новичков\n"P"3.{F2E577} Ежедневные квесты\n"P"4."W" Организационные квесты","Выбрать","Отмена");
	return 1;
}
stock NextStapQI(playerid,id) {
	switch(id) {
	case 1: {
			if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] != 1) {
				SendOk(playerid,"Местоположение Carl'a отмечено в вашем GPS");
				gpss[playerid] = 1;
				SetPlayerRaceCheckpoint(playerid, 2, 1768.1006,-1935.9192,13.5691-0.8, 1768.1006,-1935.9192,13.5691-0.8, 1.0);
			}
			else if(QuestProgress[playerid][id] == 1) {
				gpss[playerid] = 1;
				SetPlayerRaceCheckpoint(playerid, 2, 1763.3773,-1906.7416,13.5880-0.8, 1763.3773,-1906.7416,13.5880-0.8, 1.0);
			}
		}
	case 57: {
	 	    if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] != 1) {
		          EnableGPSForPlayer(playerid, 1055.3672,-303.7405,73.9922);
                  SendOk(playerid,"Отправляйтесь к другу, чтобы встретится!");
			}
			else if(QuestProgress[playerid][id] == 100) {
		     	  EnableGPSForPlayer(playerid, 1509.8165,-1662.8397,13.3226);
                  SendOk(playerid,"Отправляйтесь к мэрии, чтобы завершить задание");
	        }
		}
	case 58: {
	        if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] != 1) {
                  SendOk(playerid,"Отправляйтесь к дому Фредди");
                  SendOk(playerid,"Подсказка: Рядом с домом находится VineWood Burger");
			}
			else if(QuestProgress[playerid][id] == 100) {
		     	  EnableGPSForPlayer(playerid, 1509.8165,-1662.8397,13.3226);
                  SendOk(playerid,"Отправляйтесь к мэрии, чтобы завершить задание");
	        }
	    }
 	case 59: {
	        if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] != 1) {
                  EnableGPSForPlayer(playerid, 2413.9656,19.6305,26.9844);
                  SendOk(playerid,"Отправляйтесь к Ведьме, чтобы встретится!");
			}
			else if(QuestProgress[playerid][id] == 100) {
		     	  EnableGPSForPlayer(playerid, 1509.8165,-1662.8397,13.3226);
                  SendOk(playerid,"Отправляйтесь к мэрии, чтобы завершить задание");
	        }
	    }
  	case 60: {
	        if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] != 1) {
                  EnableGPSForPlayer(playerid, 885.3270,-1077.4008,24.2946);
                  SendOk(playerid,"Отправляйтесь к Могилке, чтобы ее полить!");
			}
			else if(QuestProgress[playerid][id] == 100) {
		     	  EnableGPSForPlayer(playerid, 1509.8165,-1662.8397,13.3226);
                  SendOk(playerid,"Отправляйтесь к мэрии, чтобы завершить задание");
	        }
	    }
	}
	save_quest(playerid,id);
	return 1;
}
stock quest_mafia(playerid) {
	switch(PI[playerid][pMember]) {
	case fRM: EnableGPSForPlayer(playerid,937.1579,1726.5500,8.8516);
	case fYAKUZA: EnableGPSForPlayer(playerid,2634.2864,1829.5825,11.0234);
	case fLCN: EnableGPSForPlayer(playerid,1454.8684,757.1157,11.0234);
	}
}
stock quest_gung(playerid) {
	switch(PI[playerid][pMember]) {
	case fBALLAS: EnableGPSForPlayer(playerid,2650.5886,-2025.8745,13.5469);
	case fVAGOS: EnableGPSForPlayer(playerid,2751.7124,-1179.9391,69.398);
	case fGROVE: EnableGPSForPlayer(playerid,2498.2842,-1687.7340,13.5188); 
	case fAZTEC: EnableGPSForPlayer(playerid,1669.6034,-2118.1514,13.5469); 
	case fRIFA: EnableGPSForPlayer(playerid,2188.7183,-1815.0797,13.5469);
	}
}
stock save_quest(playerid,id) {
	new query[300];
	mysql_format(connects, query, sizeof(query),"UPDATE `questsprogress` SET `progress`='%d',`accept`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], AcceptQuest[playerid][id], id, player_name[playerid]);
	mysql_tquery(connects, query);
}

stock SendBotMessage(playerid, const mesage[])
{
	new id;
	if(!TI[playerid][tLogin]) return 0;
	new Float:x, Float:y, Float:z,Float:x1, Float:y1, Float:z1;
	new Float: minDist,minA=-1, text[120];
	GetPlayerPos(playerid, x1, y1, z1);
	for(new i;i<MAX_ACTORSS;i++)
	{
		GetActorPos(actor[i], x, y, z);
		new Float: Dist=PointToPoint(x,y,z,x1,y1,z1);
		if(Dist < 10)
		{
			if(GetActorVirtualWorld(actor[i]) != GetPlayerVirtualWorld(playerid)) return true;
			if (minDist>Dist || minDist==0)
			{
				minA = i;
				minDist = Dist;
			}
		}
		if(minA!=-1)
		{
			ApplyActorAnimation(actor[minA],"PED", "IDLE_CHAT",4.1,0,1,1,1,1);
			format(text,sizeof(text),"%s",mesage);
			Update3DTextLabelText(tActor[minA], -1, text);
			actortime[minA]=10;
			id =minA;
		}
	}
	if(strfind(mesage, "\n")==-1) SendClientMessage(playerid,COLOR_GREY,mesage);
	return id;
}
CB: LoadQuestMysql(playerid) {
	new rows;
	cache_get_row_count(rows);
	for(new i; i< rows; i++) {
		new idquest;
		cache_get_value_index_int(i,0,idquest);
		cache_get_value_index_int(i,1,QuestProgress[playerid][idquest]);
		cache_get_value_index_int(i,2,AcceptQuest[playerid][idquest]);
		cache_get_value_index_int(i,4,time_quest[playerid][idquest]);
	}
	return 1;
}
CB: SpecPl(playerid,bool:spec) {
	TI[playerid][tSpectate] = spec;
	spec_t[playerid] = spec;
	TogglePlayerSpectating(playerid, spec);
}
stock RandomYareNforJOBS(playerid) {
	if(TI[playerid][tProcess][0] < 0) {
		ClearAnimations(playerid,1);
		ApplyAnimation(playerid, "CARRY", "null", 1.0, 0, 0, 0, 0, 0, 0);
		PlayerClearAnim[playerid] = 1;
		TogglePlayerControllable(playerid, 1);
		TI[playerid][tProcess][0] = -1;
		TI[playerid][tProcess][1] = -1;
		for(new YN = 0;YN < 3;YN++) {
			TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
			if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
		}
		if(GetPVarInt(playerid,"anim_build") == 2)
		{
			DestroyPlayerObject(playerid,Welding[playerid]);
			Welding[playerid] = 0;
			DeletePVar(playerid,"anim_build");
			ClearAnimations(playerid);
		}
		if(JobTempProcess[playerid] == 5) {
			WD::[TI[playerid][tJobWood][2]][woodUse] = false;
			TI[playerid][tJobWood][2] = -1;
		}
		if(JobTempProcess[playerid] == 7) {
			RemovePlayerAttachedObject(playerid, 7);
			Fishing[playerid] = false;
		}
		if(JobTempProcess[playerid] == 9) {
			DeleteItem(playerid, 122, 1);
		}
		if(JobTempProcess[playerid] == 10) {
			Poisk[playerid] = false;
		}
		JobTempProcess[playerid] = 0;
		return true;
	}
	new yarentext[32],yarenbutton;
	format(yarentext,32,"~w~PRESS_");
	switch(random(3)) {
	case 0:strcat(yarentext,"~g~Y"),yarenbutton = 65536;
	case 1:strcat(yarentext,"~g~H"),yarenbutton = 2455;
	case 2:strcat(yarentext,"~g~N"),yarenbutton = 131072;
	}
	PlayerTextDrawFont(playerid, YandNsysTDPlayer[playerid][0], 1);
	PlayerTextDrawSetString(playerid,YandNsysTDPlayer[playerid][0],yarentext);
	PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][0]);
	SetPVarInt(playerid,"Klavisha",yarenbutton);
	if(TI[playerid][tProcess][0] > 10) TI[playerid][tProcess][0] = 10;
	switch(TI[playerid][tProcess][0]) {
	case 0:PlayerTextDrawSetString(playerid,YandNsysTDPlayer[playerid][1],"~w~IIIIIIIIII");
	case 1..9: {
			new yarenstring[100];
			for(new g = 0;g < TI[playerid][tProcess][0];g++) {
				if(g == 0)strcat(yarenstring,"~g~I");
				else strcat(yarenstring,"I");
			}
			new svoboda = 10 - TI[playerid][tProcess][0];
			for(new go = 0;go < svoboda;go++) {
				if(go == 0)strcat(yarenstring,"~w~I");
				else strcat(yarenstring,"I");
			}
			PlayerTextDrawSetString(playerid,YandNsysTDPlayer[playerid][1],yarenstring);
		}
	case 10:PlayerTextDrawSetString(playerid,YandNsysTDPlayer[playerid][1],"~g~IIIIIIIIII");
	}
	PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][1]);
	return true;
}
stock MyButtonSystem(playerid) {
	new testprocees = 10/TI[playerid][tProcess][1];
	TI[playerid][tProcess][0] += testprocees;
	RandomYareNforJOBS(playerid);
	switch(JobTempProcess[playerid]) { // 4 резерв
	case 1: ApplyAnimation(playerid, "FLAME","FLAME_FIRE", 4.1,1,1,1,1,0,0);
	case 2: ApplyAnimation(playerid, "PED","IDLE_taxi", 4.1,1,1,1,1,0,0);
	case 3: ApplyAnimation(playerid, "BUDDY","buddy_reload", 4.1,1,1,1,1,0,0);
	case 5: ApplyAnimation(playerid, "CHAINSAW","WEAPON_csaw", 4.1,1,1,1,1,0,0);
	case 6: ApplyAnimation(playerid, "CHAINSAW","CSAW_G", 4.1,1,1,1,1,0,0);
	case 7: ApplyAnimation(playerid,"SWORD","SWORD_3",4.1, 0, 1, 1, 1, 0, 1);
	case 8: ApplyAnimation(playerid,"INT_SHOP","shop_cashier",4.1,1,0,0,1,1, 1);
	case 9: ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,0,0,1,1, 1);
	case 15: ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,0,0,1,1, 1);
	case 16: ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,0,0,1,1, 1);
	case 17: ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",4.1,1,0,0,1,1, 1);
	case 18: ApplyAnimation(playerid, "OTB", "BETSLP_LOOP",4.1,1,0,0,1,1, 1);
	case 19: ApplyAnimation(playerid, "OTB", "BETSLP_LOOP",4.1,1,0,0,1,1, 1);
	case 20: ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,0,0,1,1, 1);
	case 21: ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",4.1,1,0,0,1,1, 1);
	case 22,23: ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,0,0,0,0,1);
	case 24: ApplyAnimation(playerid, "CAR_CHAT", "CAR_Sc4_BL", 4.1, 1, 1, 1, 1, 0, 0);
	}
	if(TI[playerid][tProcess][0] >= 10) {
		TI[playerid][tProcess][0] = -1;
		TI[playerid][tProcess][1] = -1;
		for(new YN = 0;YN < 3;YN++) {
			TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
			if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
		}
		switch(JobTempProcess[playerid]) {
		case 1: {
				sad_temp_1(TI[playerid][tJobSad][1]-1);
				PlayerDelayBailer(playerid);
				DeletePVar(playerid,"bailer");
				JobTempProcess[playerid] = 0;
			}
		case 2: {
				sad_temp_4(TI[playerid][tJobSad][1]-1,playerid);
				JobTempProcess[playerid] = 0;
			}
		case 4: {
				JobTempProcess[playerid] = 0;
				SetPVarInt(playerid,"inc_atm",1);
			}
		case 3: {
				GunReady(playerid);
				TI[playerid][tJobGun][1] = 1;
				JobTempProcess[playerid] = 0;
			}
		case 5: {
				WoodsPlayer(playerid,TI[playerid][tJobWood][2]);
				JobTempProcess[playerid] = 0;
			}
		case 7: {
				fish_player(playerid);
				JobTempProcess[playerid] = 0;
			}
		case 8: {
				if(GetPVarInt(playerid,"JOBOSMOTR") > 0) {
					JobTempProcess[playerid] = 0;
					new automobile = GetPVarInt(playerid,"JOBOSMOTR");
					DeletePVar(playerid,"JOBOSMOTR");
					DeleteItem(playerid, 121, 1);
					new vehydid = GetPVarInt(playerid,"MechOsmotrVEHID");
					ApplyAnimation(playerid, "CARRY", "null", 1.0, 0, 0, 0, 0, 0, 0);
					PlayerClearAnim[playerid] = 1;
					TogglePlayerControllable(playerid, true);
					new panels_job,doors_job,lights_job,tires_job;
					GetVehicleDamageStatus(vehydid, panels_job,doors_job,lights_job,tires_job);
					switch(automobile) {
					case 1: SendOk(playerid,"Двери транспорта успешно починены"),UpdateVehicleDamageStatus(vehydid,panels_job,0,lights_job,tires_job),SetPlayerChatBubble(playerid, "починил двери транспорта", COLOR_PURPLE, 15, 5000);
					case 2: SendOk(playerid,"Корпус транспорта успешно починен"),UpdateVehicleDamageStatus(vehydid,0,doors_job,lights_job,tires_job),SetPlayerChatBubble(playerid, "починил корпус транспорта", COLOR_PURPLE, 15, 5000);
					case 3: SendOk(playerid,"Фары транспорта успешно починены"),UpdateVehicleDamageStatus(vehydid,panels_job,doors_job,0,tires_job),SetPlayerChatBubble(playerid, "починил фары транспорта", COLOR_PURPLE, 15, 5000);
					case 4: SendOk(playerid,"Колеса транспорта успешно починены"),UpdateVehicleDamageStatus(vehydid,panels_job,doors_job,lights_job,0),SetPlayerChatBubble(playerid, "заменил колеса транспорта", COLOR_PURPLE, 15, 5000);
					case 5: SendOk(playerid,"Двигатель транспорта успешно починен"),SetVehicleHealth(vehydid,1000),SetPlayerChatBubble(playerid, "починил двигатель транспорта", COLOR_PURPLE, 15, 5000),GetVehicleParamsEx(vehydid,engine,lights,alarm,doors,bonnet,boot,objective),SetVehicleParamsEx(vehydid,engine,lights,alarm,doors,false,boot,objective);
					case 6: SendOk(playerid,"Аккумулятор транспорта успешно заменен"),VehicleInfo[vehydid][vAkum] = 100.0,SetPlayerChatBubble(playerid, "заменил аккумулятор транспорта", COLOR_PURPLE, 15, 5000),GetVehicleParamsEx(vehydid,engine,lights,alarm,doors,bonnet,boot,objective),SetVehicleParamsEx(vehydid,engine,lights,alarm,doors,false,boot,objective);
					}
				}
			}
		case 9: {
				SetPVarInt(playerid,"load_rob",1);
				ApplyAnimation(playerid, "CARRY", "null", 1.0, 0, 0, 0, 0, 0, 0);
				PlayerClearAnim[playerid] = 1;
				TogglePlayerControllable(playerid, true);
			}
		case 10: {
				poisk_player(playerid);
				JobTempProcess[playerid] = 0;
			}
		case 15: {
				new Float:vehx, Float:vehy, Float:vehz;
				new car = thef_car[playerid];
				GetVehiclePos(car, vehx, vehy, vehz);
				if(!PlayerToPoint(4.0,playerid,vehx, vehy, vehz)) return SendClientMessage(playerid, COLOR_GREY, "Вы находитесь не рядом с автомобилем");
				ApplyAnimation(playerid, "CARRY", "null", 1.0, 0, 0, 0, 0, 0, 0);
				PlayerClearAnim[playerid] = 1;
				TogglePlayerControllable(playerid, true);
				JobTempProcess[playerid] = 0;
				new Float:X, Float:Y, Float:Z, police = 0;
				GetPlayerPos(playerid, X, Y, Z);
				foreach(new i:Player) {
					if(!TI[i][tLogin]) continue;
					if(IsPlayerInRangeOfPoint(i,8.0,X,Y,Z) && playerid != i && GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid)) police = 1;
				}
				if(police == 1)
				{
					SendClientMessage(playerid,CBADINFO,"Неизвестный объявил Вас в розыск. Причина: угон т/с");
					PI[playerid][pSearch]++;
					UpdatePlayerData(playerid,"pSearch",PI[playerid][pSearch]);
					SetPlayerCriminal(playerid,player_name[playerid], "угон т/с");
					new string[220];
					format(string,220,"[Внимание] %s объявлен(а) в розыск [%d/6]. Обвинитель: Неизвестно. Причина: угон т/с",player_name[playerid],PI[playerid][pSearch]);
					SendTeamMessage(CDEPARTMENT,string);
					SetPlayerWantedLevel(playerid, PI[playerid][pSearch]);
					police = 0;
				}
				SetVehicleParamsEx(thef_car[playerid], false, false, true, false, false, false, false);
				SendOk(playerid,"Замок взломан, заведите двигатель"P" (/theft)");
			}
		case 17: {
				ApplyAnimation(playerid, "CARRY", "null", 1.0, 0, 0, 0, 0, 0, 0);
				PlayerClearAnim[playerid] = 1;
				Egg[PlayerEgg[playerid]][gCount] -= 2;
				EggCount[playerid] += 2;
				EggSklad[playerid] = CreateDynamicCP(-85.2413,-0.8394,3.1172, 1.0,0,0,playerid);
				SendOk(playerid,"Вы собрали 2 яица у курицы, положите их на склад");
				EggUpdate(playerid);
			}
		case 21: {
				new u = GetPVarInt(playerid,"id_kanal") - 1;
				ApplyAnimation(playerid, "CARRY", "null", 1.0, 0, 0, 0, 0, 0, 0);
				PlayerClearAnim[playerid] = 1;
				SendOk(playerid,"Вы собрали мусор. Отнесите его в рабочую машину");
				SetPlayerAttachedObject(playerid, 8, 1264, 6, 0.222, 0.024, 0.128, 1.90, -90.0, 0.0, 0.5,0.5, 0.5);
				SetPVarInt(playerid,"_musor",1);
				if(Sewer[u][seAmmout] > 0) Sewer[u][seAmmout] --;
				if(Sewer[u][seAmmout] == 0)
				{
					Sewer[u][seTime] = gettime()+900;
				}
			}
		case 22: {
				PlayerBuild2Fix[playerid] = 1;
				PlayerBuild2ExFix[playerid] = unix + 15;
				GameTextForPlayer(playerid, "WELDING", 3000, 1);
				RemovePlayerAttachedObject(playerid,7);
				if(PlayerToPoint(1.0,playerid,1714.7004,431.2858,30.6005)) Welding[playerid] = CreatePlayerObject(playerid,18717, 1714.601928, 430.948181, 29.089813, 0.000000, 0.000000, 0.000000, 300.00);
				if(PlayerToPoint(1.0,playerid,1708.7887,432.3742,30.6758)) Welding[playerid] = CreatePlayerObject(playerid,18717, 1709.094726, 432.262817, 29.125740, 0.000000, 0.000000, 0.000000, 300.00);
				if(PlayerToPoint(1.0,playerid,1704.7019,432.6210,30.6758)) Welding[playerid] = CreatePlayerObject(playerid,18717, 1704.762695, 432.941131, 29.025735, 0.000000, 0.000000, 0.000000, 300.00);
				if(PlayerToPoint(1.0,playerid,1702.6716,428.5514,30.6758)) Welding[playerid] = CreatePlayerObject(playerid,18717, 1702.343505, 428.636322, 29.135738, 0.000000, 0.000000, 0.000000, 300.00);
				if(PlayerToPoint(1.0,playerid,1693.6610,431.5511,30.6758)) Welding[playerid] = CreatePlayerObject(playerid,18717, 1693.695922, 431.868621, 29.245740, 0.000000, 0.000000, 0.000000, 300.00);
			}
		case 23: {
				if(PlayerToPoint(3.0,playerid,2719.1243,-2503.9795,13.4942)) MoveObjectBarrier(11);//хуй
				if(PlayerToPoint(3.0,playerid,2718.5977,-2405.0637,13.4643)) MoveObjectBarrier(17);
				ClearAnimations(playerid);
				ApplyAnimation(playerid, "CARRY", "null", 1.0, 0, 0, 0, 0, 0, 0);
			}
		case 24: {
				clothes_timer(playerid);
				JobTempProcess[playerid] = 0;
			}
		case 25:{
                MoveDynamicObject(gateopen[1], 74.5659, -222.0172, -1.3977, 3.0);
				System32Weapon(1);
			    gAteStatus = true;
			    DeletePVar(playerid, "KeyWareHouseWeapon");
			    JobTempProcess[playerid] = 0;
			}
		case 26:{
		       	ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
				SetPVarInt(playerid, "PlusWareHouse", 1);
				SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				JobTempProcess[playerid] = 0;
			//	
			}
		case 27:{
				switch(random(4)){
					case 0,1,3: return System32Weapon(2);
					case 2: return System32Weapon(3);
					default: return System32Weapon(2);
					
				}
				JobTempProcess[playerid] = 0;
			}
		case 28: {
				System32Garage(playerid);
				JobTempProcess[playerid] = 0;
			}
		case 29: {
				switch(random(2)){
					case 0: HackerCamera(playerid, 1);
					case 1: HackerCamera(playerid, 2);
				}
			}
		case 30:{
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, 1643.3060,-1681.9083,21.4215)) return 1;
				new string[400], num = 0;
				foreach(new i: Player)
				{
					if(PI[i][pSearch])
					{
						if(num == 30) break;
						format(string, sizeof(string), "%s"W"%s(%i) - %i-й уровень розыска\n", string, player_name[i], i, PI[i][pSearch]);
						num++;
					}
				}
				if(num == 0) format(string, sizeof(string), ""W"Список розыскиваемых отсутствует!");
				D(playerid, D_QUEST_HACKER_3, DIALOG_STYLE_LIST, ""P"Список розыскиваемых", string, "Закрыть", "");
			}
		case 31:{
				new pIDss = GetPVarInt(playerid, "WantedID");
				if(!IsPlayerConnected(pIDss)) return SCM(playerid,COLOR_GRAY,"Игрок вышел из игры!");
				PI[pIDss][pSearch] = 0;
				UpdatePlayerData(playerid,"pSearch",PI[pIDss][pSearch]);
				SetPlayerWantedLevel(pIDss, PI[pIDss][pSearch]);
				SCM(playerid, COLOR_GREY, "[Система]: Вы успешно взломали базу данных ФБР!");
				SCM(playerid, COLOR_GREEN, "[Система]: Отправляйтесь к хакеру.");
				DeletePVar(playerid, "WantedID");
				SetPVarInt(playerid, "QuesR", 1);
				EnableGPSForPlayer(playerid, 208.7502,-225.6151,1.7786);
			}
		case 32:{
			new vehicleid = GetPlayerVehicleID(playerid);
			ToggleEngine(vehicleid, playerid);
			SCM(playerid, COLOR_GREY, "[Мысли]: Отлично! Отлично! Теперь бы до ехать без всяких происшетсвий.");
			SetPlayerCheckpoint(playerid, 2804.0691,-1430.0247,19.9313, 3.0);
			}
		case 33: return HideButton(playerid, 33);
		case 34: return HideButton(playerid, 34);
		case 35: return HideButton(playerid, 35);
		case 36: return HideButton(playerid, 36);
		case 37: return HideButton(playerid, 37);
		case 38: return HideButton(playerid, 38);
		}
		
	}
	return true;
}
stock System32Weapon(type){
	foreach(Player,i){
	    if(!IsAMafiaAndGang(i)) return 1;
     	if(!IsPlayerInRangeOfPoint(i, 150.0, 118.5647,-273.9576,1.6274)) return 1;
		switch(type){
			case 1: return  SendClientMessage(i, COLOR_WHITE, "Так-с ворота открыли, теперь надо отключить сигнализацию в диспетчерской.");
			case 2:{
                SendClientMessage(i, COLOR_GREY, "Не удачная попытка отключение сигнализации!");
				SendClientMessage(i, COLOR_GREY, "Всем гос.структурам было отправлено сообщение о проникновение на склад!");
				SendClientMessage(i, COLOR_GREY, "Чёрт! Ворота закрылись, что ж... Будем воевать с гос.структурами.");
				SendDepMessage(COLOR_ALLDEPT, "[Сигнализация] Неизвестные проникли на оружейный завод! Остановите их! (/accept)");
				Accepts = true;
				TimerRobWeaponBool = true;
				TimerRobWeapon = 60*15;
				
				MoveDynamicObject(gateopen[1], 74.5659, -222.0172, 3.0080, 3.0);
				gAteStatus = false;
				
				CreateCaptures();
				return 1;
			}
			case 3:{
                SendClientMessage(i, COLOR_GREY, "Сигнализация успешно отключена!");
                Accepts = true;
				return 1;
			}

		}
	}
	return 1;
}
stock CreateCaptures()
{
    foreach(Player,i){
	    if(!IsAMafiaAndGang(i) && !IsACopAndArm(i)) return 1;
		CreatePlayerCapture(i);
		PlayerTextDrawColor(i, CaptPlayer[i][0], 204);
		PlayerTextDrawColor(i, CaptPlayer[i][1], 884736);
		CreatePlayerCapture(i);
		PlayerTextDrawSetString(i, CaptPlayer[i][5],"WAR");
		PlayerTextDrawSetString(i, CaptPlayer[i][0],"State");
		PlayerTextDrawSetString(i, CaptPlayer[i][1], "Crime");
		PlayerTextDrawSetString(i, CaptPlayer[i][2], Convert(TimerRobWeapon));
		for(new z = 0;z < 34;z++) TextDrawShowForPlayer(i, Capture[z]);
		for(new z = 0;z < 6;z++)  PlayerTextDrawShow(i, CaptPlayer[i][z]);
		return 1;
	}
	return 1;
}
forward TimerRobb();
public TimerRobb()
{
    foreach(Player, i){
		if(TimerEndWeapon > 0){
			if(IsAMafiaAndGang(i)){
		        TimerRobWeapon--;
		        if(TimerEndWeapon == 60*5){
			 		SendClientMessage(i, COLOR_GREY, "У вас осталось 5 минут для того что бы разгрузить грузовик!");
			 	}
		        if(TimerEndWeapon < 1){
	                SetVehicleToRespawn(VehicleWareHouse[0]);
	                TimerEndWeapon = 0;
	                SendClientMessage(i, COLOR_GREY, "Вы не успели разгрузить транспорт! Транспорт был возращён на оружейный склад!");
	                CountMaterialVehicleWH = 0;
					MoveDynamicObject(gateopen[1], 74.5659, -222.0172, 3.0080, 3.0);
					gAteStatus = false;
					Accepts = false;
					TimerRobWeaponBool = false;
					KillerWarCop = 0;
					KillerWarGang = 0;
				}
			}
		}
		if(TimerRobWeapon > 0 && TimerRobWeaponBool == true){
			GangZoneShowForAll(GZ_ZONE1, 0xFFFFFF96);
			GangZoneFlashForAll(GZ_ZONE1,COLOR_RED);
			PlayerTextDrawSetString(i, CaptPlayer[i][2], Convert(TimerRobWeapon));
	        TimerRobWeapon--;
	        if(TimerRobWeapon < 1){
	            for(new z = 0;z < 34;z++) TextDrawHideForPlayer(i, Capture[z]);
				for(new z = 0;z < 6;z++)  PlayerTextDrawHide(i, CaptPlayer[i][z]);
	            TimerRobWeapon = 0;
	            TimerRobWeaponBool = false;
	            GangZoneHideForAll(GZ_ZONE1);
	            MoveDynamicObject(gateopen[1], 74.5659, -222.0172, -1.3977, 3.0);
	    		gAteStatus = true;
	    		PlayerTextDrawSetString(i, CaptPlayer[i][5],"CAPTURE");
				KillerWarCop = 0;
				KillerWarGang = 0;
			

			}
		}
	}
}

stock NonSym(const str[], max = 0, min = 0)  {
	static BadNameChars[][2] = {"/","\n","`","~","%","^","&","[","]","{","}","|","'"};
	for(new i = 0; i < sizeof( BadNameChars ); i++) {
		if(strfind( str, BadNameChars[i], true ) != -1 || strlen( str ) > max || strlen( str ) < min) return 1;
	}
	return 0;
}
stock Hunger(playerid,type) {
	switch(type) {
	case 0: {
			TextDrawShowForPlayer(playerid,HungerFon[0]);
			TextDrawShowForPlayer(playerid,HungerFon[1]);
			PlayerTextDrawTextSize(playerid,HungerProgres[playerid], 549.5 + PI[playerid][pSatiety] / 100.0 * 54.5, 40.000000);
			PlayerTextDrawShow(playerid,HungerProgres[playerid]);
		}
	case 1: {
			PlayerTextDrawHide(playerid,HungerProgres[playerid]);
			TextDrawHideForPlayer(playerid,HungerFon[0]);
			TextDrawHideForPlayer(playerid,HungerFon[1]);
		}
	}
}

stock SetFullness(playerid, ammount) {
	if(ammount > 100) PI[playerid][pSatiety] = 100;
	else if(ammount < 0) PI[playerid][pSatiety] = 0;
	else PI[playerid][pSatiety] = ammount;
	if(PI[playerid][pSettings][6] > 0) Hunger(playerid,0);
	UpdatePlayerData(playerid,"pSatiety",PI[playerid][pSatiety]);
	return true;
}
stock GiveFullness(playerid, ammount) {
	SetFullness(playerid,PI[playerid][pSatiety] + ammount);
	if(PI[playerid][pSatiety] + ammount > 100) PI[playerid][pSatiety] = 100;
	if(PI[playerid][pSettings][6] > 0) Hunger(playerid,0);
}
stock GetVehicleSpeed(vehicleid) {
	new Float:coord[3];
	GetVehicleVelocity(vehicleid,coord[0],coord[1],coord[2]);	
	new Float:speed = floatsqroot(floatpower(floatabs(coord[0]), 2.0) + floatpower(floatabs(coord[1]), 2.0) + floatpower(floatabs(coord[2]), 2.0)) * 100.3;
	return floatround(speed);
}
stock GetPlayerSpeed(playerid)
{
	new Float: Velocity[3];
	GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);
	return floatround(floatsqroot(Velocity[0] * Velocity[0] + Velocity[1] * Velocity[1] + Velocity[2] * Velocity[2]) * 100);
}

stock _GetVehicleSpeed(vehicleid) {
	new Float:X, Float:Y, Float:Z, Float:speed;
	GetVehicleVelocity(vehicleid, X, Y, Z) ;
	speed =((floatsqroot((X*X) + (Y*Y))*10) / 1.65) * 30;
	return floatround(speed, floatround_round);
}
CB: NoRoof(playerid) {
	new carid = GetPlayerSurfingVehicleID(playerid);
	if(carid != INVALID_VEHICLE_ID) {
		new Float:speed = GetVehicleSpeed(carid);
		new cm = GetVehicleModel(carid);
		switch(cm) {
		case 430,446,452,453,454,472,473,478,484,493,554,543,595,422,605,600,592:{return 1;}
		default:{}
		}
		if(speed > 30) {
			new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPosAC(playerid, slx, sly, slz+2.5,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
			ApplyAnimation(playerid, "ped", "getup", 4.0, 0, 1, 0, 0, 0,0);
		}
	}
	return 1;
}

CB: WoodsPlayer(playerid,wood) {
	new j = TI[playerid][tJobWood][2];
	WD::[j][woodUse] = false;
	SetPlayerAttachedObject(playerid,8,1463,5,0.073999,0.186000,0.105998,95.299972,-175.499984,-72.199935,0.540999,0.350999,0.610999);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
	TI[playerid][tJobWood][3] = 2;
	TI[playerid][tJobWood][1] = 1;
	TogglePlayerControllable(playerid,true);
	TI[playerid][tJobWood][2] = -1;
	return 1;
}
stock IsValidPlayer(player, playerid) {
	return (player != INVALID_PLAYER_ID && player == playerid);
}
stock GetEndWord(const text[], word) {
	new len = strlen(text);
	for(new i = word; i < len; i ++) {
		if(i == (len-1) ) return i + 1;
		else if(text[i] == ' ') return i;
	}
	return -1;
}
stock GetWord(const text[], word, wordstr[], sizword) {
	new w;
	for(new i; i < strlen(text); i ++) {
		if(text[i] != ' ' && ( (i-1) < 0 || text[i - 1] == ' ') ) {
			if(w == word) {
				strmid(wordstr, text, i, GetEndWord(text, i), sizword);
				return i;
			}
			w ++;
		}
	}
	return 0;
}
stock GetPlayerFAngle(playerid, &Float:angle) {
	if(IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
	else GetPlayerFacingAngle(playerid, angle);
}
CheckPlayerGoCuff(playerid) {
	GotoInfo[playerid][gtX] = 0.0;
	GotoInfo[playerid][gtY] = 0.0;
	GotoInfo[playerid][gtZ] = 0.0;
	GotoInfo[playerid][gtTPX] = 0.0;
	GotoInfo[playerid][gtTPY] = 0.0;
	GotoInfo[playerid][gtTPZ] = 0.0;

	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) GotoInfo[GotoInfo[playerid][gtGoID]][gtID] = INVALID_PLAYER_ID;

	GotoInfo[playerid][gtID] = INVALID_PLAYER_ID;
	GotoInfo[playerid][gtGoID] = INVALID_PLAYER_ID;
	GotoInfo[playerid][gtState] = 0;
	GotoInfo[playerid][gtStayed] = 0;
	return true;
}
stock TurnPlayerFaceToPlayer(playerid, facingtoid) {
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	SetPlayerFaceToPoint(playerid, x, y);
	return true;
}
stock SetPlayerFaceToPoint(playerid, Float:X, Float:Y) {
	new Float:angle;
	new Float:misc = 5.0;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	angle = 180.0-atan2(x-X,y-Y);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
	return true;
}
stock ShiftCords(style, &Float:x, &Float:y, &Float:z, Float:a, Float:distance) {
	#pragma unused z
	switch(style) {
	case 0: {
			x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
		}
	case 1: {
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
	default: return false;
	}
	return true;
}
stock DropGun(playerid,weaponid,ammo) {
	if(GPDIO[weaponid] == 0 ) return SendClientMessage(playerid, COLOR_GREY, "Данное оружие нельзя выбросить");
	new string[556];
	for(new freeslot=0;freeslot<MAX_DROP_GUNS;freeslot++) {
		if(drop_gun[freeslot][dg_object] != -1) continue;
		new Float: pos[4];
		GetPlayerPos(playerid, pos[0], pos[1] , pos[2]);
		GetPlayerFacingAngle(playerid, pos [ 3 ] ) ;
		
		drop_gun[freeslot][dg_object] = CreateDynamicObject(GPDIO[weaponid],pos[0], pos[1], pos[2]-0.97, 96, 110,pos[3]);
		drop_gun[freeslot][dg_gun]  =  weaponid;
		drop_gun[freeslot][dg_ammo] = ammo;
		Streamer_Update(playerid);

		new weapons[13][2];
		for(new S = 0; S<13; S++) {
			GetPlayerWeaponData(playerid, S, weapons[S][0], weapons[S][1]) ;
		}
		ResetPlayerWeapons(playerid);
		for(new S = 0; S<13 ; S++) {
			if(weapons[S][0] != drop_gun[freeslot][dg_gun] && weapons[S][0] != 0) {
				GivePlayerWeapon(playerid,weapons[S][0],weapons[S][1]);
			}
		}
		drop_gun[freeslot][dg_time] = 2;
		format(string,sizeof(string),""STANDART_GUN_TEXT"", WeaponNames[drop_gun[freeslot][dg_gun]]);
		if(drop_gun[freeslot][dg_text] == Text3D:-1) drop_gun[freeslot][dg_text] = Create3DTextLabel(string,0xFFFFFFFF, pos[0], pos[1], pos[2] + 0.2, 10.5, GetPlayerVirtualWorld(playerid));
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0,0);
		MeAction(playerid,"выбросил(а) оружие");
		break;
	}
	return true;
}
CB: onPTMCheck(playerid, targetid, Float:x, Float:y, Float:z, checker) {
	SetHealth(targetid,GetPVarFloat(targetid,"aimtest"));
	DeletePVar(targetid,"aimtest");
	SetPlayerPosAC(targetid, x, y, z,TI[targetid][tVirtualWorld], TI[targetid][tInterior]);
	SendClientMessage(checker,-1,"Если игрок повернулся на {FF9900}180 градусов"W", то он использует AIM");
}
stock GetXYInFrontOfPoint(&Float:x, &Float:y, Float:angle, Float:distance) {
	x += (distance * floatsin(-angle, degrees));
	y += (distance * floatcos(-angle, degrees));
}
stock GetMN(fraca) {
	new mafianame[28];
	switch(fraca) {
	case fYAKUZA: mafianame = "Japan Mafia";
	case fRM: mafianame = "Russian Mafia";
	case fLCN: mafianame = "Italian Mafia";
	}
	return mafianame;
}
stock MafiaTimeCapture(faction, MafiaNapadss) {
	SendFamilyMessage(faction, 0xFF0000FF, "Внимание, стрела началась!");
	SendFamilyMessage(MafiaNapadss, 0xFF0000FF, "Внимание, стрела началась!");
	BizWarTime[0] = 0;
	BizWarTime[1] = 60*10;
	return true;
}
BizWarTimer() {
	if(BizWarTime[1] > 0) {
		BizWarTime[1]--;
		foreach(new m:Player) {
			if(!TI[m][tLogin]) continue;
			new string[128];
			if(GetPVarInt(m,"ppkz2") && !IsAMafia(m)) EndBizwar(m);
			if(MZInfo[bFrakVlad]!=PI[m][pMember] && MZInfo[bNapad] != PI[m][pMember]) continue;
			if(!GetPVarInt(m,"ppkz2")) {
				GangZoneFlashForPlayer(m,biz_war_gangzone,gFractionSpawn[MZInfo[bNapad]][fracColor]);
				TextDrawShowForPlayer(m, Bizwar[0]);
				format(string,50,"~w~Time: ~g~%s",date("%ii:%ss",BizWarTime[1]));
				TextDrawSetString(Bizwar[0],string);
				format(string,50,"~w~%s Kills: ~g~0",GetMN(MZInfo[bFrakVlad]));
				TextDrawSetString(Bizwar[1],string);
				TextDrawShowForPlayer(m, Bizwar[1]);
				format(string,50,"~w~%s Kills: ~g~0",GetMN(MZInfo[bNapad]));
				TextDrawSetString(Bizwar[2],string);
				TextDrawShowForPlayer(m, Bizwar[2]);
				SetPVarInt(m,"ppkz2",true);
			}
			else {
				format(string,50,"~w~Time: ~g~%s",date("%ii:%ss",BizWarTime[1]));
				TextDrawSetString(Bizwar[0],string);
				format(string,50,"~w~%s Kills: ~g~%d",GetMN(MZInfo[bFrakVlad]),MZInfo[bCountDead][MZInfo[bFrakVlad]]);
				TextDrawSetString(Bizwar[1],string);
				format(string,50,"~w~%s Kills: ~g~%d",GetMN(MZInfo[bNapad]),MZInfo[bCountDead][MZInfo[bNapad]]);
				TextDrawSetString(Bizwar[2],string);
			}
		}
		if(BizWarTime[1] == 1) {
			new mafianame[24];
			switch(MZInfo[bNapad]) {
			case fYAKUZA: mafianame = "Japan Mafia";
			case fRM: mafianame = "Russian Mafia";
			case fLCN: mafianame = "Italian Mafia";
			}
			new mafianamev[24],string[240];
			switch(MZInfo[bFrakVlad]) {
			case fYAKUZA: mafianamev = "Japan Mafia";
			case fRM: mafianamev = "Russian Mafia";
			case fLCN: mafianamev = "Italian Mafia";
			}
			if(MZInfo[bCountDead][MZInfo[bFrakVlad]] > MZInfo[bCountDead][MZInfo[bNapad]]) {
				format(string,sizeof(string), "%s не удалось отобрать у вас контроль над бизнесом %s. Бизнес отбит",GetMN(MZInfo[bNapad]),gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bFrakVlad], 0xFF0000FF, string);
				format(string,sizeof(string), "Вам не удалось отобрать у мафии %s котроль над бизнесом %s. Бизнес оставлен",GetMN(MZInfo[bFrakVlad]),gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bNapad], 0xFF0000FF, string);
			}
			else if(MZInfo[bCountDead][MZInfo[bFrakVlad]] == MZInfo[bCountDead][MZInfo[bNapad]]) {
				format(string,sizeof(string), "Стрела за бизнес %s закончилась ничьей. Бизнес потерян",gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bFrakVlad], 0xFF0000FF, string);
				format(string,sizeof(string), "Стрела за бизнес %s закончилась ничьей. Бизнес оставлен",gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bNapad], 0xFF0000FF, string);
				UpdateBusinessText(MZInfo[bBiz]);
			}
			else {
				format(string,sizeof(string), "%s забрала у вас контроль над бизнесом %s. Бизнес потерян",GetMN(MZInfo[bNapad]),gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bFrakVlad], 0xFF0000FF, string);
				format(string,sizeof(string), "Вы отобрали контроль над бизнесом %s у мафии %s. Бизнес захвачен",gBusiness[MZInfo[bBiz]][bizzName],GetMN(MZInfo[bFrakVlad]));
				SendFamilyMessage(MZInfo[bNapad], 0xFF0000FF, string);
				gBusiness[MZInfo[bBiz]][bizzMafia] = MZInfo[bNapad];
				UpdateBusinessData(MZInfo[bBiz]+1,"mafia",gBusiness[MZInfo[bBiz]][bizzMafia]);
				UpdateBusinessText(MZInfo[bBiz]);
			}
			new id_killed = -1;
			new max_killed = -1;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(GetPVarInt(i,"m_killed_shot")) {
					if(GetPVarInt(i,"m_killed_shot")>max_killed) {
						max_killed = GetPVarInt(i,"m_killed_shot");
						id_killed = i;
					}
					DeletePVar(i,"m_killed_shot");
				}
			}
			foreach(new m:Player) {
				if(!TI[m][tLogin]) continue;
				if(MZInfo[bFrakVlad]!=PI[m][pMember] && MZInfo[bNapad]!=PI[m][pMember]) continue;
				if(id_killed != -1 && max_killed != -1) {
					format(string,128,"Уничтожил больше всего противников "W"%s {E6251E}Убийств: "W"%i", player_name[id_killed],max_killed);
					SendClientMessage(m,0xE8FF1CFF,string);
					
					if(QuestProgress[id_killed][29] < 2 && AcceptQuest[id_killed][29] != 0) QuestProgress[id_killed][29] ++,save_quest(id_killed,29);
					if(QuestProgress[id_killed][29] == 2 && AcceptQuest[id_killed][29] != 0) {
						D(id_killed,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Лучший захватчик'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
					}
					
					if(PI[id_killed][pFamily]) reputation_family(PI[id_killed][pFamily]-1,3);
				}
				EndBizwar(m);
			}
			MZInfo[bFrakVlad] = 0;
			MZInfo[bNapad] = 0;
			MZInfo[bBiz] = 255;

			GangZoneStopFlashForAll(biz_war_gangzone);
			GangZoneHideForAll(biz_war_gangzone);
			GangZoneDestroy(biz_war_gangzone);
			biz_war_gangzone = - 1;
			war_gangzone = - 1;

			BizWarTime[1] = 0;
			BizHourTime = 10;
			MZInfo[bCountDead][MZInfo[bNapad]] = 0;
			MZInfo[bCountDead][MZInfo[bFrakVlad]] = 0;
		}
	}
}
EndBizwar(m) {
	TextDrawHideForPlayer(m,Bizwar[0]);
	TextDrawHideForPlayer(m,Bizwar[1]);
	TextDrawHideForPlayer(m,Bizwar[2]);
	DeletePVar(m,"ppkz2");
	//for(new num; num < 10; num++) SendDeathMessageToPlayer(m,6000,5005, 255);
}
stock IsASymbol(text[], first, end) {
	if(first < 0) first = 0;
	if(end >= strlen(text)) end = strlen(text) - 1;
	for(new i = first; i <= end; i ++) return true;
	return false;
}
stock CheatKickEx(playerid,code)
{
	// С 54 , сейчас 66 (Нет 54, 55, 66)
	if(!TI[playerid][tLogin]) return true;
	if(PI[playerid][pAdmin] >= 4) return 1;
	if(code == 60 || code == 66) ResetPlayerWeapons(playerid); // weapon cheat
	if(playerid != INVALID_PLAYER_ID)
	{
		new acHour, acMin, acSec ,string[600], year, month, day;
		gettime(acHour, acMin, acSec);
		getdate(year, month, day);

		format(string,sizeof(string), ""ORANGE"Вы были кикнуты по подозрению в читерстве!\n\n\
		"W"Подробная информация:\n\n\
		— Код ошибки:"ORANGE" #%i"W"\n\
		— Дата и время:"ORANGE" %02d:%02d:%02d %02i-%02i-%02i"W"\n\
		— Задержка:"ORANGE" %i"W" мс и"ORANGE" %.2f"W" packets\n\n\
		Если же Вы считаете, что это произошло по ошибке, то оставьте\n\
		заявку в тех. разделе на нашем форуме, предварительно сделав скриншот",
		code,acHour, acMin, acSec, day, month, year, GetPlayerPing(playerid),NetStats_PacketLossPercent(playerid));
		D(playerid, DIALOG_NONE, DSM, ""P"Античит", string, "Закрыть", "");
		
		format(string, 144, "[ANTICHEAT] %s был кикнут по причине чит (#%d)", player_name[playerid],code);
		SendAdminMessage(COLOR_GREY, string);
		KickEx(playerid);
	}
	return true;
} 
CB: OnCheatDetected(playerid, const ip_address[], type, code) {
	if(playerid != INVALID_PLAYER_ID && AntiCheat[code][acValue] == 1)
	{
		switch(code) {
		case 2: {
				printf("[anticheat] OnCheatDetected(%s, code = %d)", player_name[playerid], code);
			}
		case 5, 11, 14, 32, 39: return true;
		case 38: {
				SendClientMessage(playerid, COLOR_GREY, "ВНИМАНИЕ!"W" У Вас слабое интернет соединение");
				SendClientMessage(playerid, COLOR_GREY, "Для более комфортной игры необходимо оптимизировать работу сетевого экрана ПК");
				SendClientMessage(playerid, COLOR_GREY, "А также, настоятельно рекомендуем Вам проверить ПК на присутствие вредоносного ПО");
				return true;
			}
		case 12: return SetPlayerHealth(playerid, PI[playerid][pHP]);
			//case 13: return SetPlayerArmour(playerid, GetPlayerARM(playerid));
		case 15..17: DelGun(playerid);
		case 40: {
				SendClientMessage(playerid, COLOR_GREY, MAX_CONNECTS_MSG);
				AntiCheatKickWithDesync(playerid, 40);
				return true;
			}
		case 41: {
				SendClientMessage(playerid, COLOR_GREY, UNKNOWN_CLIENT_MSG);
				AntiCheatKickWithDesync(playerid, 41);
				return true;
			}
		case 43..47: {
				DelGun(playerid);
				KickEx(playerid);
				return true;
			}
		case 30: {
				PlayerSpawn(playerid);
				return true;
			}
		}
		new acHour, acMin, acSec ,string[600], year, month, day;
		gettime(acHour, acMin, acSec);
		getdate(year, month, day);
		format(string,sizeof(string), ""ORANGE"Вы были кикнуты по подозрению в читерстве!\n\n\
		"W"Подробная информация:\n\n\
		— Код ошибки:"ORANGE" %s[#%i]"W"\n\
		— Дата и время:"ORANGE" %02d:%02d:%02d %02i-%02i-%02i"W"\n\
		— Задержка:"ORANGE" %i"W" мс и"ORANGE" %.2f"W" packets\n\n\
		Если же Вы считаете, что это произошло по ошибке, то оставьте\n\
		заявку в тех. разделе на нашем форуме, предварительно сделав скриншот",
		AntiCheat[code][acName],code,acHour, acMin, acSec, day, month, year, GetPlayerPing(playerid),NetStats_PacketLossPercent(playerid));
		D(playerid, DIALOG_NONE, DSM, ""P"Античит", string, "Закрыть", "");

		format(string, 144, "[ANTICHEAT] %s был кикнут %s (#%d)", player_name[playerid],AntiCheat[code][acName],code);
		SendAdminMessage(COLOR_GREY, string);
		//
		AntiCheatKickWithDesync(playerid, code);
	}
	else if(playerid != INVALID_PLAYER_ID && AntiCheat[code][acValue] == 2) {
		TI[playerid][tCheatsDetects]++;
		TI[playerid][tCheatsDetectsTime] = 6;
		if (NEW_TYPE_AC_ENABLED && TI[playerid][tCheatsDetects] >= 2) {
			TI[playerid][tCheatsDetects] = 0;
			printf("[anticheat] OnCheatDetected(%s, code = %d|2)", player_name[playerid], code);
			new acHour, acMin, acSec ,string[600], year, month, day;
			gettime(acHour, acMin, acSec);
			getdate(year, month, day);
			format(string,sizeof(string), ""ORANGE"Вы были кикнуты по подозрению в читерстве!\n\n\
			"W"Подробная информация:\n\n\
			— Код ошибки:"ORANGE" %s[#%i]"W"\n\
			— Дата и время:"ORANGE" %02d:%02d:%02d %02i-%02i-%02i"W"\n\
			— Задержка:"ORANGE" %i"W" мс и"ORANGE" %.2f"W" packets\n\n\
			Если же Вы считаете, что это произошло по ошибке, то оставьте\n\
			заявку в тех. разделе на нашем форуме, предварительно сделав скриншот",
			AntiCheat[code][acName],code,acHour, acMin, acSec, day, month, year, GetPlayerPing(playerid),NetStats_PacketLossPercent(playerid));
			D(playerid, DIALOG_NONE, DSM, ""P"Античит", string, "Закрыть", "");

			format(string, 144, "[ANTICHEAT] %s был кикнут %s (#%d)", player_name[playerid],AntiCheat[code][acName],code);
			SendAdminMessage(COLOR_GREY, string);
			AntiCheatKickWithDesync(playerid, code);
		}
		AddCheater(playerid);
	}
	return true;
}
stock UpdateBuildText(b_id) {
	new font_face[12];
	switch(BildInfo[b_id][bFontFace]) {
	case 0: font_face = "Arial";
	case 1: font_face = "Calibri";
	case 2: font_face = "Tahoma";
	case 3: font_face = "Verdana";
	}
	new text[144+16];
	if(!BildInfo[b_id][bOwned]) {
		text = "{000000}Рекламное место свободно";
		BildInfo[b_id][bAligment] = 1, BildInfo[b_id][bFontSize]=25, BildInfo[b_id][bBackColor] = 1;
	}
	else format(text,144+16,"{000000}%s",BildInfo[b_id][bText]);
	return SetDynamicObjectMaterialText(BildInfo[b_id][bObjectID], 0,text, 130, font_face, BildInfo[b_id][bFontSize], 0, 0xFF000000,Colors_BIG[BildInfo[b_id][bBackColor]], BildInfo[b_id][bAligment]);
}
stock ShowPlayerEditMenu(playerid) {
	new string[400] = ""P"№ Параметр\t"P"Значение\n", str[64], p_var = GetPVarInt(playerid,"SelectBildID"), font_face[12], aligment_name[18];
	BildIntro(playerid, p_var, -13);
	switch(BildInfo[p_var][bFontFace]) {
	case 0: font_face = "Arial";
	case 1: font_face = "Calibri";
	case 2: font_face = "Tahoma";
	case 3: font_face = "Verdana";
	}
	switch(BildInfo[p_var][bAligment]) {
	case 0: aligment_name = "По левому краю";
	case 1: aligment_name = "По центру";
	case 2: aligment_name = "По правому краю";
	}
	strcat(string,"\n"P"1."W" Текст\t"G"Изменить");
	format(str,64,"\n"P"2."W" Цвет фона\t{%s}Фон",Colors_LOW[BildInfo[p_var][bBackColor]]), strcat(string,str);
	format(str,64,"\n"P"3."W" Шрифт текста\t%s",font_face), strcat(string,str);
	format(str,64,"\n"P"4."W" Размер текста\t%i",BildInfo[p_var][bFontSize]), strcat(string,str);
	format(str,64,"\n"P"5."W" Выравнивание текста\t%s",aligment_name), strcat(string,str);
	strcat(string,"\n"P"6."W" Разорвать договор аренды");
	return D(playerid,D_BILL_SETTING,DSTH,""P"Настройка рекламы",string,"Выбрать","Закрыть");
}
stock BildIntro(playerid, b_id, c_dist) {
	new Float: x = BildInfo[b_id][bPos][0], Float: y = BildInfo[b_id][bPos][1];
	GetXYInFront(x, y, BildInfo[b_id][bPos][3], c_dist);
	TogglePlayerControllable(playerid, false);
	SetPlayerPosAC(playerid, x, y, BildInfo[b_id][bPos][2],TI[playerid][tVirtualWorld], TI[playerid][tInterior],true);
	SetPlayerCameraPos(playerid, x, y, BildInfo[b_id][bPos][2]);
	SetPlayerCameraLookAt(playerid, BildInfo[b_id][bPos][0], BildInfo[b_id][bPos][1], BildInfo[b_id][bPos][2]);
	return SetPlayerInterior(playerid, 0), true;
}
stock BildExit(playerid) {
	SetPlayerInterior(playerid,2);
	FreezePlayerForTime(playerid,3);
	SetPlayerPosAC(playerid, GetPVarFloat(playerid,"bild_x"),GetPVarFloat(playerid,"bild_y"),GetPVarFloat(playerid,"bild_z"),TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
	SetCameraBehindPlayer(playerid);
	return true;
}
stock GetXYInFront(&Float:x, &Float:y, Float:angle, Float:distance) {
	x += (distance * floatsin(-angle, degrees));
	y += (distance * floatcos(-angle, degrees));
}
CB: OnCheckStatsAdmin(playerid, name[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Администратор не найден");
	new string[150], string2[250],stringer[1512];
	new check_online_monday, check_online_tuesday, check_online_wednesday,
	check_online_thursday, check_online_friday, check_online_saturday,
	check_online_sunday, check_online_allday,
	check_kicked, check_warned, check_baned, check_muted,
	check_jail,check_rep,check_pm;

	cache_get_value_name_int(0, "online_monday",check_online_monday);
	cache_get_value_name_int(0, "online_tuesday",check_online_tuesday);
	cache_get_value_name_int(0, "online_wednesday",check_online_wednesday);
	cache_get_value_name_int(0, "online_thursday",check_online_thursday);
	cache_get_value_name_int(0, "online_friday",check_online_friday);
	cache_get_value_name_int(0, "online_saturday",check_online_saturday);
	cache_get_value_name_int(0, "online_sunday",check_online_sunday);

	cache_get_value_name_int(0, "kick",check_kicked);
	cache_get_value_name_int(0, "ban",check_baned);
	cache_get_value_name_int(0, "warn",check_warned);
	cache_get_value_name_int(0, "mute",check_muted);
	cache_get_value_name_int(0, "pm",check_pm);
	cache_get_value_name_int(0, "jail",check_jail);
	cache_get_value_name_int(0, "rep",check_rep);

	strcat(stringer, "{FFA200}Недельный онлайн\n\n");
	format(string, sizeof(string), ""W"Понедельник:\t\t"P"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_monday), (check_online_monday/3600>=3)?("{46CA00}Выполнена"):(check_online_monday/3600>=2)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
	strcat(stringer, string);
	format(string, sizeof(string), ""W"Вторник\t\t"P"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_tuesday),  (check_online_tuesday/3600>=3)?("{46CA00}Выполнена"):(check_online_tuesday/3600>=2)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
	strcat(stringer, string);
	format(string, sizeof(string), ""W"Среда\t\t\t"P"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_wednesday),  (check_online_wednesday/3600>=3)?("{46CA00}Выполнена"):(check_online_wednesday/3600>=2)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
	strcat(stringer, string);
	format(string, sizeof(string), ""W"Четверг\t\t"P"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_thursday),  (check_online_thursday/3600>=3)?("{46CA00}Выполнена"):(check_online_thursday/3600>=2)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
	strcat(stringer, string);
	format(string, sizeof(string), ""W"Пятница\t\t"P"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_friday),  (check_online_friday/3600>=3)?("{46CA00}Выполнена"):(check_online_friday/3600>=2)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
	strcat(stringer, string);
	format(string, sizeof(string), ""W"Суббота\t\t"P"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_saturday),  (check_online_saturday/3600>=3)?("{46CA00}Выполнена"):(check_online_saturday/3600>=2)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
	strcat(stringer, string);
	format(string, sizeof(string), ""W"Воскресенье\t\t"P"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_sunday),  (check_online_sunday/3600>=3)?("{46CA00}Выполнена"):(check_online_sunday/3600>=2)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
	strcat(stringer, string);

	check_online_allday = check_online_monday + check_online_tuesday + check_online_wednesday + check_online_thursday + check_online_friday + check_online_saturday + check_online_sunday;

	format(string, sizeof(string), "\n{AFAFAF}Общий онлайн:\t"P"%s "W"| Норма онлайна - %s\n\n", ConvertsCmdTime(check_online_allday), (check_online_allday/3600>=21)?("{46CA00}Выполнена"):(check_online_allday/3600>=19)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
	strcat(stringer, string);

	strcat(stringer, "{FFA200}Выдача наказаний\n\n");
	format(string2, sizeof(string2), ""W"Кикнул:\t\t\t\t"P"%i\n", check_kicked);
	strcat(stringer, string2);
	format(string2, sizeof(string2), ""W"Заварнил:\t\t\t\t"P"%i\n", check_warned);
	strcat(stringer, string2);
	format(string2, sizeof(string2), ""W"Забанил:\t\t\t\t"P"%i\n", check_baned);
	strcat(stringer, string2);
	format(string2, sizeof(string2), ""W"Prison:\t\t\t\t\t"P"%i\n", check_jail);
	strcat(stringer, string2);
	format(string2, sizeof(string2), ""W"Замутил:\t\t\t\t"P"%i\n", check_muted);
	strcat(stringer, string2);
	format(string2, sizeof(string2), ""W"Репорты:\t\t\t\t"P"%i\n", check_pm);
	strcat(stringer, string2);
	format(string2, sizeof(string2), ""W"РЕПУТАЦИЯ:\t\t\t\t"P"%i", check_rep);
	strcat(stringer, string2);

	D(playerid, DIALOG_NONE, DSM, name, stringer, "Закрыть", "");
	return 1;
}
stock getDayEx()
{
	new hour, minuite, second, year, month, day, w = gettime(), saturday = 1310155200, day_week;
	gettime(hour, minuite, second);
	getdate(year, month, day);
	while (w - saturday > 60 * 60 * 24)
	{
		w -= 60 * 60 * 24;
		day_week ++;
	}
	while (day_week >= 7) day_week -= 7;
	return day_week;
}
CB: SetCameraBehindPlayerDelay(playerid) SetCameraBehindPlayer(playerid);
CB: SaveQuests(playerid,id) {
	new query[356];
	mysql_format(connects, query, sizeof(query),"UPDATE `questsprogress` SET `progress`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], id, player_name[playerid]);
	mysql_tquery(connects, query);
	return 1;
}
stock AtachPlayerAcces(playerid, setobject,skinid) {
	switch(setobject) {
	case 19035,19034,19033,19032,19031,19030,19029,19028,19027,19026,19025,19024,19023,19022,19021,19020,19019,19018,19017,19016,19015,19014,19013,19012,19011,19010,19009,19008,19007,19006: {
			switch (skinid)
			{
			case 1: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.030999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.039999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.104998,0.044999,-0.000001, 0.000000,90.000000,90.500007, 1.000000,1.099000,1.080000);
			case 4: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.128998,0.026999,-0.001000, 76.200012,73.100074,15.000033, 1.000000,1.130000,1.080000);
			case 5: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.128998,0.037999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.217000,1.080000);
			case 6: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.105997,0.029999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.017000,1.080000);
			case 7: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098997,0.054999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 8: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088997,0.040999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 9: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.034999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 10: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081997,0.039999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 11: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.039999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 12: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.035999,0.001999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 13: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082998,0.031999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 14: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.056999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 15: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.019999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 17: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.035999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 19: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081998,0.035999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 20: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.030999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 21: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.047999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 22: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 23: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 24: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.037999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.085000,1.080000);
			case 25: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.034999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 26: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 27: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 28: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.046999,-0.006000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 29: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.051999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 31: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.052999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 39: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.080998,0.034999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 40: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.030999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 41: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.042999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 42: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.036999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 44: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.041999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.029000,1.027000);
			case 46: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.059999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 49: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.035999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 50: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.105998,0.012999,-0.008000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 54: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.052999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 58: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.028999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,0.994000,1.027000);
			case 59: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.036999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.100000,1.027000);
			case 60: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.050999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.130000,1.027000);
			case 61: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.048999,-0.004000, 138.500000,87.300071,-47.999965, 0.880000,0.993001,1.027000);
			case 66: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 67: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.041999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 68: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.051999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 69: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.070998,0.048999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 70: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.055999,0.005999, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 71: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 72: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.053999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 73: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.045999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 76: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.072998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.127000,1.027000);
			case 78: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.114998,0.023999,0.007999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 79: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.036999,0.009999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 83: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.042999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 90: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.046999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 91: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.040999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 93: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.051999,-0.001000, -121.799896,96.400039,-147.299835, 0.880000,1.139000,1.027000);
			case 94: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.045998,0.024999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.950000,1.027000);
			case 95: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.013999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.982000,1.027000);
			case 96: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.106998,0.041999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
			case 97: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.060998,0.040999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
			case 98: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.068999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 101: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.042999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 102: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.056999,-0.001000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 103: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.116000,1.027000);
			case 105: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
			case 106: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.050999,-0.003000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
			case 107: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.100998,0.039999,-0.003000, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
			case 108: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.037999,0.002999, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
			case 109: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.147000,1.027000);
			case 110: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.126000,1.027000);
			case 111: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.108998,0.029999,-0.003000, -92.899909,88.200088,-176.599822, 1.020000,1.079000,1.027000);
			case 112: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.027999,-0.003000, -92.899909,88.200088,-176.599822, 0.904000,0.976999,1.027000);
			case 113: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.109998,0.051999,-0.001000, -92.899909,88.200088,-176.599822, 0.904000,1.115000,1.027000);
			case 117: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
			case 118: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
			case 119: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.044999,-0.001000, -92.899909,94.700088,-176.599822, 0.904000,1.115000,1.027000);
			case 120: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.040999,0.001999, -92.899909,92.700088,-176.599822, 0.904000,1.115000,1.027000);
			case 121: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.279000,1.162999);
			case 122: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.122000,1.093999);
			case 124: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.033999,-0.002001, -92.899909,96.000068,-176.599822, 1.055000,1.122000,1.093999);
			case 125: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.002001, -92.899909,92.200057,-174.999862, 1.025000,1.062000,1.093999);
			case 126: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.000001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 127: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.041999,-0.001001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 128: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.047999,-0.003000, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 134: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082998,0.029999,0.001999, -92.899909,103.300056,-179.899917, 0.871000,1.031000,1.093999);
			case 135: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.037999,-0.002000, -92.899909,103.300056,-174.699890, 0.871000,1.031000,1.093999);
			case 136: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.025999,-0.002000, -92.899909,103.300056,-173.099945, 0.871000,1.031000,1.093999);
			case 142: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.049999,-0.005001, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
			case 147: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.031999,0.005999, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
			case 148: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.060998,0.045999,0.003999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
			case 150: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066998,0.043999,0.002999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
			case 153: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.077998,0.023999,0.007999, -92.899909,105.900032,-176.499954, 0.871000,1.085999,1.093999);
			case 154: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.058998,0.040999,-0.002001, -92.899909,96.300025,-176.099960, 0.871000,1.085999,1.093999);
			case 155: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.052999,-0.005001, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
			case 160: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.100998,0.028999,-0.001000, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
			case 163: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.030999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
			case 164: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
			case 165: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075998,0.046999,-0.000001, -92.899909,97.100036,-174.299972, 0.871000,1.085999,1.093999);
			case 166: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.074998,0.043999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
			case 169: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.067998,0.040999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
			case 170: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.053999,-0.005001, -92.899909,92.100044,-175.899978, 0.871000,1.069999,1.093999);
			case 171: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.042999,-0.001000, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
			case 172: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.067998,0.044999,0.001999, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
			case 176: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.047999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 177: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.041999,-0.007001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 179: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 180: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.099998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 181: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.122998,0.036999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 182: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.033999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 183: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.028999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 184: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.006001, -92.899909,92.100044,-175.899978, 0.980000,1.078999,1.093999);
			case 186: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.034999,0.000999, -92.899909,92.100044,-176.700012, 0.980000,1.078999,1.093999);
			case 187: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075998,0.023999,0.004999, -92.899909,105.300056,-176.700012, 0.980000,1.119999,1.093999);
			case 188: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.034999,-0.000001, -92.899909,105.300056,-173.700042, 0.980000,1.119999,1.093999);
			case 189: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.033999,0.000999, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 190: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 191: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 192: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.040999,-0.002000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 193: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 194: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 195: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.036999,0.000999, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
			case 200: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.037999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
			case 202: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 206: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 210: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.022999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 211: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.070998,0.040999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 212: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,92.900062,-176.100021, 0.839000,0.981999,1.093999);
			case 213: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.048999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 214: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.063998,0.045999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 216: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.063998,0.044999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 217: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.048999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 219: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.068998,0.044999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 220: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.054998,0.059999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 221: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.046999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
			case 222: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.053999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
			case 223: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.071999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 224: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 225: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 226: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 227: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.109998,0.057999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 228: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.068999,-0.000000, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 229: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.073998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,1.161999,1.093999);
			case 230: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.055998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,0.999000,1.093999);
			case 233: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.064998,0.048999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
			case 235: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.053998,0.027999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
			case 236: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.038999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,1.093000,1.093999);
			case 239: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.021999,0.004999, -92.899909,106.200004,-176.100021, 0.839000,0.959000,1.093999);
			case 240: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.051999,0.000999, -92.899909,87.499969,-176.100021, 0.839000,1.129000,1.093999);
			case 247: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.099998,0.051999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.129000,1.093999);
			case 248: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.062999,-0.001000, -92.899909,96.499946,-176.100021, 0.839000,1.182000,1.093999);
			case 250: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.054999,-0.004000, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
			case 252: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.045999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
			case 254: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.048999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,1.134000,1.093999);
			case 255: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.031999,0.005999, -92.899909,96.499946,-176.100021, 0.839000,0.972000,0.954999);
			case 258: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
			case 259: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
			case 261: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.023999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,0.945999,1.113999);
			case 262: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081998,0.048999,-0.002001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
			case 265: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094997,0.037999,-0.000001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
			case 266: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.103997,0.034999,-0.005001, -92.899909,88.299957,-177.600051, 0.839000,1.097000,1.113999);
			case 267: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 270: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 272: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093997,0.050999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 273: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.041999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 274: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088997,0.035999,-0.003001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 275: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 276: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.033999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.027999);
			case 280: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.037999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 281: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085997,0.036999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 282: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 283: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 286: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 287: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.072997,0.056999,0.007999, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 288: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.034999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 291: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.050999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 292: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075997,0.032000,-0.005001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.038999,-0.008001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.045999,-0.000001, 95.799949,87.600059,-4.900008, 0.878000,1.087000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.040999,-0.000001, 95.799949,67.300048,-4.900008, 0.878000,1.087000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.044999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.033999,-0.004001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.052999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 307: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар очки, не будет отображаться на этом скине");
			}
		}
		case 19320:
		{
			switch(skinid)
	    	{
			   case 1..311:SetPlayerAttachedObject(playerid, 2, 19320, 2, 0.1570, -0.0040, 0.0000, 0.0000, 89.8000, 0.0000, 0.6560, 0.6340, 0.7240);
			   default: SendClientMessage(playerid, COLOR_GREY, !"Аксессуар тыква, не будет отображаться на этом скине");
		    }
	    }
		case 2226:
	    {
	 	  switch(skinid)
		  {
	        case 1: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.071000, -0.202000, -0.065999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 1
			case 2: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.071000, -0.209000, -0.065999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 2
			case 3: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.071000, -0.195999, -0.057999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 3
			case 4: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.086000, -0.195999, -0.057999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 4
			case 5: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.086000, -0.238000, -0.057999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 5
			case 6: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.102000, -0.227000, -0.057999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 6
			case 7: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.070000, -0.208000, -0.057999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 7
			case 8: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.070000, -0.196999, -0.057999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 8
			case 9: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.070000, -0.184999, -0.057999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 9
			case 10: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.021000, -0.184999, -0.057999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 10
			case 11: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.109999, -0.163999, -0.057999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 11
			case 12: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.074999, -0.163999, -0.057999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 12
			case 13: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.106999, -0.163999, -0.057999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 13
			case 14: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.106999, -0.163999, -0.063999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 14
			case 15: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.094999, -0.192999, -0.063999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 15
			case 16: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.117999, -0.192999, -0.063999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 16
			case 17: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.097999, -0.180999, -0.063999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 17
			case 18: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.061999, -0.180999, -0.063999,  0.000000, 37.099975, 0.000000,  0.651999, 0.767000, 0.738000); // 18
			case 19: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.102999, -0.180999, -0.063999,  0.000000, 37.099975, 0.000000,  0.647999, 0.767000, 0.738000); // 19
			case 20: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.188999, -0.063999,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 20
			case 21: SetPlayerAttachedObject(playerid, 5, 2226, 1, 0.0430, -0.1830, -0.0590, 0.0000, 34.5000, 0.0000, 0.6760, 0.7840, 0.7600, -1, -1);
			case 22: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.075999, -0.219999, -0.063999,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 22
			case 23: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.075999, -0.196999, -0.063999,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 23
			case 24: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.075999, -0.196999, -0.063999,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 24
			case 25: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.075999, -0.196999, -0.063999,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 25
			case 27: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.085999, -0.193000, -0.063999,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 27
			case 28: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.085999, -0.187000, -0.063999,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 28
			case 29: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.060999, -0.210000, -0.063999,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 29
			case 30: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.083999, -0.187000, -0.077000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 30
			case 31: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.044999, -0.189000, -0.077000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 31
			case 32: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.067999, -0.161999, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 32
			case 33: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.045999, -0.161999, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 33
			case 34: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.086999, -0.189000, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 34
			case 35: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.086999, -0.183000, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 35
			case 36: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.080999, -0.179000, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 36
			case 37: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.076999, -0.172999, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 37
			case 38: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.023999, -0.166999, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 38
			case 39: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.023999, -0.191000, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 39
			case 40: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.086999, -0.168999, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 40
			case 41: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.091999, -0.156999, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 41
			case 42: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.077999, -0.169999, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 42
			case 43: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.038999, -0.169999, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 43
			case 44: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.038999, -0.157999, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 44
			case 45: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.065999, -0.177999, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 45
			case 46: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.203999, -0.062000,  0.000000, 37.099975, 0.899999,  0.647999, 0.767000, 0.738000); // 46
			case 47: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.196999, -0.062000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 47
			case 48: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.186999, -0.062000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 48
			case 49: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.171999, -0.062000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 49
			case 50: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.190999, -0.062000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 50
			case 51: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.115999, -0.175999, -0.062000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 51
			case 52: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.115999, -0.175999, -0.062000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 52
			case 53: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.038999, -0.175999, -0.062000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 53
			case 54: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.024999, -0.175999, -0.062000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 54
			case 55: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.163999, -0.062000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 55
			case 56: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.154999, -0.062000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 56
			case 57: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.107999, -0.183999, -0.062000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 57
			case 58: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.059999, -0.164999, -0.062000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 58
			case 59: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.074999, -0.177999, -0.070000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 59
			case 60: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.192999, -0.070000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 60
			case 61: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.179999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 61
			case 62: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.171999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 62
			case 63: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.103999, -0.152999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 63
			case 64: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.133999, -0.152999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 64
			case 65: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.133999, -0.152999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 65
			case 66: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.096999, -0.193999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 66
			case 67: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.096999, -0.193999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 67
			case 68: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.087999, -0.174999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 68
			case 69: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.090999, -0.154999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 69
			case 70: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.080999, -0.180999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 70
			case 71: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.080999, -0.190999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 71
			case 72: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.072999, -0.182999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 72
			case 73: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.072999, -0.172999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 73
			case 74: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.110999, -0.168999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 74
			case 75: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.110999, -0.155999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 75
			case 76: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.094000, -0.146999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 76
			case 77: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.024000, -0.174999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 77
			case 78: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.103999, -0.199999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 78
			case 79: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.094999, -0.192999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 79
			case 80: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.094999, -0.177999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 80
			case 81: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.094999, -0.177999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 81
			case 82: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.094999, -0.186999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 82
			case 83: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.094999, -0.180999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 83
			case 84: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.094999, -0.195999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 84
			case 85: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.101000, -0.176999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 85
			case 86: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.083000, -0.203999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 86
			case 87: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.131000, -0.156999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 87
			case 88: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.036000, -0.156999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 88
			case 89: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.026000, -0.187999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 89
			case 90: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.120000, -0.154999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 90
			case 91: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.103000, -0.149999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 91
			case 92: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.103000, -0.132999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 92
			case 93: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.105000, -0.149999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 93
			case 94: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.070000, -0.149999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 94
			case 95: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.070000, -0.145999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 95
			case 96: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.135000, -0.186999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 96
			case 97: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.082000, -0.174999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 97
			case 98: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.078000, -0.201999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 98
			case 99: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.123000, -0.162999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 99
			case 100: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.106000, -0.180999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 100
			case 101: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.107000, -0.215999, -0.063000,  0.000000, 37.099975, 1.300000,  0.647999, 0.767000, 0.738000); // 101
			case 102: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.092000, -0.192999, -0.063000,  0.000000, 37.099975, 2.800000,  0.647999, 0.767000, 0.738000); // 102
			case 103: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.121000, -0.224999, -0.063000,  0.000000, 37.099975, 2.800000,  0.647999, 0.767000, 0.738000); // 103
			case 104: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.093000, -0.213999, -0.063000,  0.000000, 37.099975, 2.800000,  0.647999, 0.767000, 0.738000); // 104
			case 105: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.110000, -0.230999, -0.063000,  0.000000, 37.099975, 2.800000,  0.647999, 0.767000, 0.738000); // 105
			case 106: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.083000, -0.206999, -0.063000,  0.000000, 37.099975, 2.800000,  0.647999, 0.767000, 0.738000); // 106
			case 107: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.093000, -0.200999, -0.063000,  0.000000, 37.099975, 2.800000,  0.647999, 0.767000, 0.738000); // 107
			case 108: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.101000, -0.178999, -0.063000,  0.000000, 37.099975, 2.800000,  0.647999, 0.767000, 0.738000); // 108
			case 109: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.075000, -0.176999, -0.063000,  0.000000, 37.099975, 2.800000,  0.647999, 0.767000, 0.738000); // 109
			case 110: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081000, -0.181999, -0.063000,  0.000000, 37.099975, 2.800000,  0.647999, 0.767000, 0.738000); // 110
			case 111: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.088000, -0.172999, -0.063000,  0.000000, 37.099975, 2.800000,  0.647999, 0.767000, 0.738000); // 111
			case 112: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.062000, -0.172999, -0.063000,  0.000000, 37.099975, 2.800000,  0.647999, 0.767000, 0.738000); // 112
			case 113: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.076000, -0.185999, -0.063000,  0.000000, 37.099975, 2.800000,  0.647999, 0.767000, 0.738000); // 113
			case 114: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.090000, -0.182999, -0.063000,  0.000000, 37.099975, 2.800000,  0.647999, 0.767000, 0.738000); // 114
			case 115: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.084000, -0.188999, -0.063000,  0.000000, 37.099975, 5.700001,  0.647999, 0.767000, 0.738000); // 115
			case 116: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.093000, -0.199999, -0.063000,  0.000000, 37.099975, 5.700001,  0.632999, 0.767000, 0.738000); // 116
			case 117: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089000, -0.188999, -0.072000,  0.000000, 37.099975, 5.700001,  0.632999, 0.767000, 0.738000); // 117
			case 118: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.082000, -0.197999, -0.072000,  0.000000, 37.099975, 5.700001,  0.632999, 0.767000, 0.738000); // 118
			case 119: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.071000, -0.190999, -0.069999,  0.000000, 37.099975, 3.000002,  0.632999, 0.767000, 0.738000); // 119
			case 120: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.071000, -0.199999, -0.069999,  0.000000, 37.099975, 3.000002,  0.632999, 0.767000, 0.738000); // 120
			case 121: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.086000, -0.210999, -0.069999,  0.000000, 37.099975, 3.000002,  0.632999, 0.767000, 0.738000); // 121
			case 122: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.090000, -0.187999, -0.070999,  0.000000, 37.099975, 3.000002,  0.632999, 0.767000, 0.738000); // 122
			case 123: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.084000, -0.187999, -0.070999,  0.000000, 37.099975, 3.000002,  0.632999, 0.767000, 0.738000); // 123
			case 124: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.084000, -0.170999, -0.070999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 124
			case 125: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.067999, -0.185999, -0.070999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 125
			case 126: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.067999, -0.198999, -0.070999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 126
			case 127: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.067999, -0.209999, -0.059999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 127
			case 128: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.069000, -0.179999, -0.059999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 128
			case 129: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.033000, -0.167999, -0.059999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 129
			case 130: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.033000, -0.185999, -0.059999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 130
			case 131: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.116000, -0.164999, -0.059999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 131
			case 132: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.043000, -0.151999, -0.059999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 132
			case 133: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.084000, -0.171999, -0.051999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 133
			case 134: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.034000, -0.158999, -0.073999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 134
			case 135: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.069000, -0.192999, -0.073999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 135
			case 136: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.016000, -0.164999, -0.073999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 136
			case 137: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.078000, -0.155999, -0.073999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 137
			case 138: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.122999, -0.146999, -0.056999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 138
			case 139: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.122999, -0.146999, -0.076999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 139
			case 140: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.122999, -0.146999, -0.076999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 140
			case 141: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.112999, -0.158999, -0.076999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 141
			case 142: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.102999, -0.193999, -0.083000,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 142
			case 143: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.193999, -0.079000,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 143
			case 144: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.209999, -0.079000,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 144
			case 145: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.096999, -0.161999, -0.079000,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 145
			case 146: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.096999, -0.179999, -0.079000,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 146
			case 147: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.097999, -0.173999, -0.064999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 147
			case 148: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.097999, -0.159999, -0.064999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 148
			case 149: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.097999, -0.260999, -0.070999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 149
			case 150: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.097999, -0.155999, -0.070999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 150
			case 151: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.097999, -0.168999, -0.070999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 151
			case 152: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.152998, -0.070999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 152
			case 153: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.172998, -0.052999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 153
			case 154: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.172998, -0.052999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 154
			case 155: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.208999, -0.073999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 155
			case 156: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.181998, -0.073999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 156
			case 157: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.081999, -0.157998, -0.073999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 157
			case 158: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.088999, -0.171998, -0.073999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 158
			case 159: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.084999, -0.171998, -0.073999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 159
			case 160: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.075999, -0.143998, -0.073999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 160
			case 161: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.075999, -0.185998, -0.073999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 161
			case 162: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.087999, -0.172998, -0.073999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 162
			case 163: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.110999, -0.183998, -0.073999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 163
			case 164: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.110999, -0.177998, -0.073999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 164
			case 165: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.037999, -0.196998, -0.064999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 165
			case 166: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.040999, -0.196998, -0.064999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 166
			case 167: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.104999, -0.175998, -0.064999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 167
			case 168: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.082999, -0.175998, -0.064999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 168
			case 169: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.083000, -0.151998, -0.064999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 169
			case 170: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.083000, -0.183998, -0.064999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 170
			case 171: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.083000, -0.183998, -0.064999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 171
			case 172: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.096000, -0.154998, -0.064999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 172
			case 173: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.096000, -0.181998, -0.071999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 173
			case 174: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.091000, -0.185998, -0.071999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 174
			case 175: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.091000, -0.181998, -0.071999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 175
			case 176: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.084000, -0.211998, -0.071999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 176
			case 177: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.084000, -0.211998, -0.071999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 177
			case 178: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.102000, -0.162998, -0.071999,  0.000000, 37.099975, 3.000002,  0.644999, 0.767000, 0.738000); // 178
			case 179: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.094999, -0.173998, -0.071999,  0.000000, 37.099975, -0.499997,  0.644999, 0.767000, 0.738000); // 179
			case 180: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.079999, -0.203998, -0.071999,  0.000000, 37.099975, 2.000003,  0.644999, 0.767000, 0.738000); // 180
			case 181: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.121999, -0.177998, -0.071999,  0.000000, 37.099975, 2.000003,  0.644999, 0.767000, 0.738000); // 181
			case 182: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.086999, -0.177998, -0.059999,  0.000000, 37.099975, 2.000003,  0.644999, 0.767000, 0.738000); // 182
			case 183: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.086999, -0.164998, -0.059999,  0.000000, 37.099975, 2.000003,  0.644999, 0.767000, 0.738000); // 183
			case 184: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.087999, -0.190998, -0.059999,  0.000000, 37.099975, 2.000003,  0.644999, 0.767000, 0.738000); // 184
			case 185: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.079999, -0.184998, -0.059999,  0.000000, 37.099975, 2.000003,  0.644999, 0.767000, 0.738000); // 185
			case 186: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.079999, -0.192998, -0.059999,  0.000000, 37.099975, 2.000003,  0.644999, 0.767000, 0.738000); // 186
			case 187: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.071999, -0.177998, -0.059999,  0.000000, 37.099975, 2.000003,  0.644999, 0.767000, 0.738000); // 187
			case 188: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.071999, -0.177998, -0.059999,  0.000000, 37.099975, 2.000003,  0.644999, 0.767000, 0.738000); // 188
			case 189: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.083999, -0.185998, -0.059999,  0.000000, 37.099975, 2.000003,  0.644999, 0.767000, 0.738000); // 189
			case 190: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.120999, -0.165998, -0.059999,  0.000000, 37.099975, 4.400004,  0.644999, 0.767000, 0.738000); // 190
			case 191: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.132999, -0.154998, -0.059999,  0.000000, 37.099975, 4.400004,  0.644999, 0.767000, 0.738000); // 191
			case 192: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.132999, -0.145998, -0.059999,  0.000000, 37.099975, 4.400004,  0.644999, 0.767000, 0.738000); // 192
			case 193: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.132999, -0.145998, -0.059999,  0.000000, 37.099975, 4.400004,  0.644999, 0.767000, 0.738000); // 193
			case 194: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.117999, -0.142998, -0.059999,  0.000000, 37.099975, 4.400004,  0.644999, 0.767000, 0.738000); // 194
			case 195: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.106999, -0.142998, -0.059999,  0.000000, 37.099975, 4.400004,  0.644999, 0.767000, 0.738000); // 195
			case 196: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.021999, -0.158998, -0.059999,  0.000000, 37.099975, 4.400004,  0.644999, 0.767000, 0.738000); // 196
			case 197: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.021999, -0.199998, -0.059999,  0.000000, 37.099975, 4.400004,  0.644999, 0.767000, 0.738000); // 197
			case 198: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.111999, -0.170998, -0.059999,  0.000000, 37.099975, 4.400004,  0.644999, 0.767000, 0.738000); // 198
			case 199: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.027999, -0.170998, -0.065999,  0.000000, 37.099975, 4.400004,  0.644999, 0.767000, 0.738000); // 199
			case 200: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.087999, -0.170998, -0.065999,  0.000000, 37.099975, -0.099994,  0.644999, 0.767000, 0.738000); // 200
			case 201: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.111999, -0.157998, -0.065999,  0.000000, 37.099975, 1.700005,  0.644999, 0.767000, 0.738000); // 201
			case 202: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.111999, -0.169998, -0.065999,  0.000000, 37.099975, 1.700005,  0.644999, 0.767000, 0.738000); // 202
			case 203: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.098999, -0.186998, -0.065999,  0.000000, 37.099975, 5.500004,  0.644999, 0.767000, 0.738000); // 203
			case 204: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.098999, -0.186998, -0.065999,  0.000000, 37.099975, 5.500004,  0.644999, 0.767000, 0.738000); // 204
			case 205: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.098999, -0.186998, -0.065999,  0.000000, 37.099975, 5.500004,  0.644999, 0.767000, 0.738000); // 205
			case 206: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.098999, -0.176998, -0.065999,  0.000000, 37.099975, 5.500004,  0.644999, 0.767000, 0.738000); // 206
			case 207: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.098999, -0.171998, -0.065999,  0.000000, 37.099975, 5.500004,  0.644999, 0.767000, 0.738000); // 207
			case 208: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.098999, -0.197998, -0.065999,  0.000000, 37.099975, 5.500004,  0.644999, 0.767000, 0.738000); // 208
			case 209: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.055999, -0.162997, -0.065999,  0.000000, 37.099975, 5.500004,  0.644999, 0.767000, 0.738000); // 209
			case 210: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.049999, -0.154997, -0.065999,  0.000000, 37.099975, 5.500004,  0.644999, 0.767000, 0.738000); // 210
			case 211: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.100999, -0.143997, -0.065999,  0.000000, 37.099975, 5.500004,  0.644999, 0.767000, 0.738000); // 211
			case 212: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.027999, -0.162997, -0.065999,  0.000000, 37.099975, 1.400005,  0.644999, 0.767000, 0.738000); // 212
			case 213: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.080999, -0.189997, -0.065999,  0.000000, 37.099975, 4.200005,  0.644999, 0.767000, 0.738000); // 213
			case 214: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.090999, -0.152997, -0.065999,  0.000000, 37.099975, 4.200005,  0.644999, 0.767000, 0.738000); // 214
			case 215: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.090999, -0.152997, -0.065999,  0.000000, 37.099975, 4.200005,  0.644999, 0.767000, 0.738000); // 215
			case 216: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.090999, -0.152997, -0.065999,  0.000000, 37.099975, 4.200005,  0.644999, 0.767000, 0.738000); // 216
			case 217: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.090999, -0.163997, -0.065999,  0.000000, 37.099975, 0.700006,  0.644999, 0.767000, 0.738000); // 217
			case 218: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.023999, -0.163997, -0.065999,  0.000000, 37.099975, 0.700006,  0.644999, 0.767000, 0.738000); // 218
			case 219: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.086999, -0.150997, -0.065999,  0.000000, 37.099975, 0.700006,  0.644999, 0.767000, 0.738000); // 219
			case 220: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.086999, -0.193997, -0.065999,  0.000000, 37.099975, 5.500005,  0.644999, 0.767000, 0.738000); // 220
			case 221: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.176997, -0.065999,  0.000000, 37.099975, 4.200006,  0.644999, 0.767000, 0.738000); // 221
			case 222: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.176997, -0.065999,  0.000000, 37.099975, 4.200006,  0.644999, 0.767000, 0.738000); // 222
			case 223: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.196997, -0.065999,  0.000000, 37.099975, 6.300006,  0.644999, 0.767000, 0.738000); // 223
			case 224: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.074999, -0.135997, -0.042999,  0.000000, 37.099975, -7.699989,  0.644999, 0.767000, 0.738000); // 224
			case 225: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.074999, -0.135997, -0.042999,  0.000000, 37.099975, -7.699989,  0.644999, 0.767000, 0.738000); // 225
			case 226: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.074999, -0.135997, -0.042999,  0.000000, 37.099975, -7.699989,  0.644999, 0.767000, 0.738000); // 226
			case 227: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.095999, -0.200997, -0.065999,  0.000000, 37.099975, -0.699989,  0.644999, 0.767000, 0.738000); // 227
			case 228: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.080999, -0.191997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 228
			case 229: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.045999, -0.159997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 229
			case 230: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.061999, -0.154997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 230
			case 231: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.002999, -0.154997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 231
			case 232: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.002999, -0.154997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 232
			case 233: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.100999, -0.154997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 233
			case 234: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.040999, -0.150997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 234
			case 235: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.040999, -0.150997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 235
			case 236: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.047999, -0.150997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 236
			case 237: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.087999, -0.150997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 237
			case 238: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.087999, -0.150997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 238
			case 239: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.087999, -0.192997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 239
			case 240: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.087999, -0.187997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 240
			case 241: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.075999, -0.213997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 241
			case 242: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.094999, -0.205997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 242
			case 243: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.094999, -0.177997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 243
			case 244: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.094999, -0.157997, -0.065999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 244
			case 245: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.069999, -0.204997, -0.055000,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 245
			case 246: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.069999, -0.168997, -0.055000,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 246
			case 247: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.084999, -0.180997, -0.062999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 247
			case 248: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.078999, -0.180997, -0.062999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 248
			case 249: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.071999, -0.180997, -0.062999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 249
			case 250: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.088999, -0.180997, -0.062999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 250
			case 251: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.090999, -0.161997, -0.062999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 251
			case 252: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.090999, -0.161997, -0.062999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 252
			case 253: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.050999, -0.161997, -0.062999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 253
			case 254: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.183997, -0.062999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 254
			case 255: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.078999, -0.168997, -0.062999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 255
			case 256: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.095999, -0.158997, -0.062999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 256
			case 257: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.095999, -0.158997, -0.062999,  0.000000, 37.099975, 2.500010,  0.644999, 0.767000, 0.738000); // 257
			case 258: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.095999, -0.202997, -0.062999,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 258
			case 259: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.095999, -0.202997, -0.062999,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 259
			case 260: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.095999, -0.188997, -0.062999,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 260
			case 261: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.052999, -0.172997, -0.062999,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 261
			case 262: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.061999, -0.193997, -0.062999,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 262
			case 263: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.100999, -0.159997, -0.062999,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 263
			case 264: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.077999, -0.208997, -0.062999,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 264
			case 265: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.077999, -0.208997, -0.062999,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 265
			case 266: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.077999, -0.208997, -0.062999,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 266
			case 267: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.304999, -0.199997, -0.087000,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 267
			case 268: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.097999, -0.191997, -0.079000,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 268
			case 269: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.097999, -0.237997, -0.079000,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 269
			case 270: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.097999, -0.203997, -0.068000,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 270
			case 271: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.078999, -0.203997, -0.068000,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 271
			case 272: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.070999, -0.203997, -0.068000,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 272
			case 273: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.058999, -0.187997, -0.068000,  0.000000, 37.099975, 5.400009,  0.644999, 0.767000, 0.738000); // 273
			case 274: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.090999, -0.187997, -0.068000,  0.000000, 37.099975, 1.700010,  0.644999, 0.767000, 0.738000); // 274
			case 275: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.090999, -0.187997, -0.068000,  0.000000, 37.099975, 1.700010,  0.644999, 0.767000, 0.738000); // 275
			case 276: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.090999, -0.187997, -0.068000,  0.000000, 37.099975, 1.700010,  0.644999, 0.767000, 0.738000); // 276
			case 277: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.090999, -0.225997, -0.058000,  0.000000, 37.099975, 1.700010,  0.644999, 0.767000, 0.738000); // 277
			case 278: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.122999, -0.217997, -0.058000,  0.000000, 37.099975, 1.700010,  0.644999, 0.767000, 0.738000); // 278
			case 279: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.122999, -0.217997, -0.058000,  0.000000, 37.099975, 1.700010,  0.644999, 0.767000, 0.738000); // 279
			case 280: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.097999, -0.194997, -0.058000,  0.000000, 37.099975, 1.700010,  0.644999, 0.767000, 0.738000); // 280
			case 281: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.097999, -0.194997, -0.058000,  0.000000, 37.099975, 1.700010,  0.644999, 0.767000, 0.738000); // 281
			case 282: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.097999, -0.197997, -0.058000,  0.000000, 37.099975, 1.700010,  0.644999, 0.767000, 0.738000); // 282
			case 283: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.091999, -0.187997, -0.058000,  0.000000, 37.099975, 1.700010,  0.644999, 0.767000, 0.738000); // 283
			case 284: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.077999, -0.177997, -0.058000,  0.000000, 37.099975, 1.700010,  0.644999, 0.767000, 0.738000); // 284
			case 285: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.077999, -0.188997, -0.058000,  0.000000, 37.099975, 1.700010,  0.644999, 0.767000, 0.738000); // 285
			case 286: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.087999, -0.188997, -0.058000,  0.000000, 37.099975, 3.300009,  0.644999, 0.767000, 0.738000); // 286
			case 287: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.087999, -0.196997, -0.062000,  0.000000, 37.099975, 3.300009,  0.644999, 0.767000, 0.738000); // 287
			case 288: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.087999, -0.190997, -0.062000,  0.000000, 37.099975, 3.300009,  0.644999, 0.767000, 0.738000); // 288
			case 289: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.071999, -0.200997, -0.062000,  0.000000, 37.099975, 3.300009,  0.644999, 0.767000, 0.738000); // 289
			case 290: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.071999, -0.195996, -0.062000,  0.000000, 37.099975, 3.300009,  0.644999, 0.767000, 0.738000); // 290
			case 291: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.079999, -0.185996, -0.062000,  0.000000, 37.099975, 3.300009,  0.644999, 0.767000, 0.738000); // 291
			case 292: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.185996, -0.062000,  0.000000, 37.099975, 3.300009,  0.644999, 0.767000, 0.738000); // 292
			case 293: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.101999, -0.185996, -0.062000,  0.000000, 37.099975, 0.000010,  0.644999, 0.767000, 0.738000); // 293
			case 294: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.083999, -0.185996, -0.062000,  0.000000, 37.099975, 0.000010,  0.644999, 0.767000, 0.738000); // 294
			case 295: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.016999, -0.195996, -0.062000,  0.000000, 37.099975, 0.000010,  0.644999, 0.767000, 0.738000); // 295
			case 296: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.016999, -0.195996, -0.062000,  0.000000, 37.099975, 0.000010,  0.644999, 0.767000, 0.738000); // 296
			case 297: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.064999, -0.195996, -0.062000,  0.000000, 37.099975, 0.000010,  0.644999, 0.767000, 0.738000); // 297
			case 298: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.102999, -0.180996, -0.062000,  0.000000, 37.099975, 0.000010,  0.644999, 0.767000, 0.738000); // 298
			case 299: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.135999, -0.201996, -0.062000,  0.000000, 37.099975, 3.400009,  0.644999, 0.767000, 0.738000); // 299
			case 300: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.095999, -0.195996, -0.063000,  0.000000, 37.099975, 3.400009,  0.644999, 0.767000, 0.738000); // 300
			case 301: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.095999, -0.195996, -0.063000,  0.000000, 37.099975, 3.400009,  0.644999, 0.767000, 0.738000); // 301
			case 302: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.095999, -0.190996, -0.063000,  0.000000, 37.099975, 3.400009,  0.644999, 0.767000, 0.738000); // 302
			case 303: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.190996, -0.063000,  0.000000, 37.099975, 3.400009,  0.644999, 0.767000, 0.738000); // 303
			case 304: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.190996, -0.063000,  0.000000, 37.099975, 3.400009,  0.644999, 0.767000, 0.738000); // 304
			case 305: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.190996, -0.063000,  0.000000, 37.099975, 3.400009,  0.644999, 0.767000, 0.738000); // 305
			case 306: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.162996, -0.063000,  0.000000, 37.099975, 3.400009,  0.644999, 0.767000, 0.738000); // 306
			case 307: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.155996, -0.063000,  0.000000, 37.099975, 3.400009,  0.644999, 0.767000, 0.738000); // 307
			case 308: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.155996, -0.063000,  0.000000, 37.099975, 3.400009,  0.644999, 0.767000, 0.738000); // 308
			case 309: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.155996, -0.063000,  0.000000, 37.099975, 3.400009,  0.644999, 0.767000, 0.738000); // 309
			case 310: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.188996, -0.063000,  0.000000, 37.099975, 3.400009,  0.644999, 0.767000, 0.738000); // 310
			case 311: SetPlayerAttachedObject(playerid, 5, 2226, 1,  0.089999, -0.184996, -0.063000,  0.000000, 37.099975, 3.400009,  0.644999, 0.767000, 0.738000); // 311
		}
	}
	case 362: {
			switch(skinid)
			{
			case 1..311:  SetPlayerAttachedObject(playerid, 5, 362, 1,  0.527999, -0.181999, -0.004999,  176.599990, -178.399581, 0.000000,  0.653000, 0.776999, 0.827000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар миниган на спину, не будет отображаться на этом скине");
			}
	}
	case 19136: {
			switch(skinid)
			{
			case 1..311: SetPlayerAttachedObject(playerid,2,19136,2,0.1070,0.0149,0.0000,0.0000,0.0000,0.0000,1.0540,1.0720,0.9779, 0, 0);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар дреды, не будет отображаться на этом скине");
			}
	}
	case 339: {
			switch(skinid)
			{
			case 1..311: SetPlayerAttachedObject(playerid, 5, 339, 1, 0.3169, -0.1409, -0.2320, -0.6999, -49.5000, -0.6999, 1.0000, 1.0000, 0.8570);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар катана, не будет отображаться на этом скине");
			}
		}
	case 19528:
		{
			switch(skinid)
			{
			case 1..311:SetPlayerAttachedObject(playerid, 0, 19528, 2, 0.1350, 0.0000, 0.0040, 0.0000, 0.0000, -29.2000, 1.0000, 1.2890, 1.0170);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар шляпа волшебника, не будет отображаться на этом скине");
			}
		}
	case 19521: {
			switch(skinid)
			{
			case 1..311: SetPlayerAttachedObject(playerid, 0, 19521, 2, 0.1869, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар водительская фуражка, не будет отображаться на этом скине");
			}
		}
	case 19197: SetPlayerAttachedObject(playerid, 0, 19197, 2, 0.2100, 0.0000, 0.0000, 0.0000, 84.5000, 0.0000, 0.2660, 0.2730, 0.0000, -1, -1);
	case 19590: {
			switch(skinid)
			{
			case 1..311:SetPlayerAttachedObject(playerid,5,19590,1,-0.101999,-0.140000,-0.105999,0.000000,-27.400001,90.199966,1.000000,1.000000,1.000000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар меч, не будет отображаться на этом скине");
			}
		}
	case 368:
		{
			switch(skinid)
			{
			case 1..311: SetPlayerAttachedObject(playerid, 1, 368, 2, -0.043999, 0.045000, -0.007999, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000, 0, 0);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар очки ночного виденья, не будет отображаться на этом скине");
			}
		}
	case 19904:
		{
			switch(skinid)
			{
			case 1..311: SetPlayerAttachedObject(playerid,5,19904,1,0.041999,0.069000,0.006999,177.299987,88.100006,0.000000,1.133999,1.390000,0.999999);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар жилет, не будет отображаться на этом скине");
			}
		}
	case 2511:
		{
			switch(skinid)
			{
			case 1..311:SetPlayerAttachedObject(playerid, 5, 2511, 1,0.189999, -0.185999, -0.035999, 82.199905, 16.000019, 70.899978, 0.205999, 0.401000, 0.319999, 0, 0);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар самолетик, не будет отображаться на этом скине");
			}
		}
	case 11712:
		{
			switch(skinid)
			{
			case 1..311:SetPlayerAttachedObject(playerid, 6, 11712, 17,-0.037000, 0.164999, 0.011000, 94.200027,63.199962, 1.599997, 1.000000, 0.570000, 0.601000, 0, 0);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар церковный крест, не будет отображаться на этом скине");
			}
		}
	case 2908:
		{
			switch(skinid)
			{
			case 1..311:SetPlayerAttachedObject(playerid,2,2908,2,0.073999,0.072000,0.004999,173.200027,5.599996,89.399955,1.434000,1.130001,1.609000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар маска зомби, не будет отображаться на этом скине");
			}
		}
	case 2690:
		{
			switch(skinid)
			{
			case 1..311:SetPlayerAttachedObject(playerid,5,2690,1,0.093000,-0.184000,0.016000,4.100003,60.199981,0.000000,1.000000,1.000000,1.000000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар огнетушитель, не будет отображаться на этом скине");
			}
		}
	case 19487:
		{
			switch (skinid)
			{
			case 1: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.101999,0.004999,0.000000, 0.499999,87.200019,91.700004, 1.072000,1.068000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.119999,0.010999,0.002000, 0.499999,87.200019,91.700004, 1.163999,1.109000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.148000,0.001999,0.002000, 0.499999,87.200019,91.700004, 1.163999,1.109000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.134999,-0.001000,-0.003000, 0.499999,87.200019,91.700004, 1.163999,1.130000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.115999,0.021999,-0.003000, 0.499999,87.200019,91.700004, 1.163999,1.130000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.085999,0.000999,-0.003000, 0.499999,87.200019,91.700004, 1.163999,1.130000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.100999,0.003999,-0.003000, 0.499999,87.200019,91.700004, 1.039999,1.032000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.107999,0.009999,-0.003000, 0.499999,87.200019,91.700004, 1.039999,1.032000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.120999,-0.003000,-0.003000, 0.499999,87.200019,91.700004, 1.039999,1.032000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.137999,0.010999,0.000000, 0.499999,87.200019,91.700004, 1.039999,1.097000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.097999,-0.018000,0.000000, 0.499999,87.200019,91.700004, 1.039999,1.097000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.115999,0.003999,0.000000, -78.300010,113.100013,-13.799970, 1.039999,1.097000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.109999,-0.003000,-0.003999, -78.300010,113.100013,-13.799970, 1.039999,1.097000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.109999,-0.003000,0.000000, -78.300010,113.100013,-13.799970, 1.114999,1.097000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.109999,-0.003000,0.000000, -78.300010,113.100013,-13.799970, 1.114999,1.097000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.094999,0.014999,0.004000, -78.300010,113.100013,-13.799970, 1.114999,1.097000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.092000,0.012999,0.002000, -78.300010,103.000015,-13.799970, 1.233999,1.090000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.092000,0.011999,-0.006999, -78.300010,103.000015,-13.799970, 1.190000,1.202000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.092000,-0.001000,-0.003999, -78.300010,103.000015,-13.799970, 1.190000,1.202000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.031000,0.006999,-0.003999, -78.300010,103.000015,-13.799970, 1.063999,1.144000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.080000,0.024999,0.002000, -78.300010,103.000015,-13.799970, 1.013999,1.013000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.094000,-0.002000,0.000000, -78.300010,103.000015,-13.799970, 1.013999,1.013000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.112000,0.017999,-0.002999, -78.300010,103.000015,-13.799970, 1.110000,1.071000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.112000,0.009999,-0.002999, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.129000,-0.014000,-0.004999, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.092000,0.022999,0.002000, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.092000,-0.007000,0.002000, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.092000,-0.012000,0.007000, -78.300010,103.000015,-13.799970, 1.341000,1.138000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.132000,0.011999,0.001000, -78.300010,103.000015,-13.799970, 1.243999,1.178000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.088000,-0.000000,0.001000, -78.300010,103.000015,-13.799970, 1.009999,0.943000,0.814999);
			case 60: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.107000,0.002999,-0.007999, -78.300010,108.500007,-13.799970, 1.091999,1.096000,0.814999);
			case 66: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.111999,0.013000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.111999,0.013000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.111999,0.013000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.122999,-0.011000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.122999,0.008999,0.006000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.108999,0.013999,0.001000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.118999,0.013999,0.001000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.118999,-0.012000,-0.002999, 83.900001,67.399971,0.000000, 1.137000,1.054999,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.097999,0.030000,-0.002999, 83.900001,67.399971,0.000000, 1.250000,1.192000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.097999,0.011999,-0.002999, 83.900001,67.399971,0.000000, 1.263000,1.166000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.097999,0.011999,-0.002999, 83.900001,67.399971,0.000000, 1.263000,1.166000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.080999,-0.014000,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.080999,-0.014000,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.108999,0.006999,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.108999,-0.004000,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.116999,0.019999,0.002000, 83.900001,81.599967,0.000000, 1.164000,1.059000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.116999,-0.001000,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.129999,0.005999,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.129999,0.005999,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.151000,-0.003000,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.116000,-0.004000,-0.001999, 83.900001,81.599967,0.000000, 1.285000,1.145000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.104000,0.009999,-0.001999, 83.900001,81.599967,0.000000, 1.069000,1.012000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.104000,0.009999,-0.001999, 83.900001,81.599967,0.000000, 1.069000,1.012000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.143000,0.005999,0.001000, 83.900001,81.599967,0.000000, 1.069000,1.096000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.143000,-0.000000,0.001000, 83.900001,67.899978,0.000000, 1.069000,1.096000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.084000,0.021999,0.001000, 83.900001,67.899978,0.000000, 1.069000,1.096000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.084000,0.021999,0.001000, 83.900001,67.899978,0.000000, 1.069000,1.096000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.109000,0.007999,-0.003999, 83.900001,67.899978,0.000000, 1.088001,1.096000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.132000,-0.017000,0.001000, 83.900001,67.899978,0.000000, 1.088001,1.096000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.121000,-0.007000,0.001000, 83.900001,67.899978,0.000000, 1.088001,1.096000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.121000,-0.005000,-0.001999, 83.900001,67.899978,0.000000, 1.201001,1.245000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.121000,-0.005000,-0.001999, 83.900001,67.899978,0.000000, 1.201001,1.245000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.095000,0.011999,-0.001999, 83.900001,67.899978,0.000000, 1.038001,1.037000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.113000,-0.007000,0.006000, 83.900001,67.899978,0.000000, 1.151000,1.146000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.113000,-0.001000,0.006000, 83.900001,67.899978,0.000000, 1.151000,1.146000,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.024000,0.000999,0.001000, 83.900001,67.899978,0.000000, 0.996000,0.988000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.094000,-0.015000,0.010000, 83.900001,67.899978,0.000000, 1.064000,1.090000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.094000,-0.015000,0.004000, 83.900001,67.899978,0.000000, 1.260000,1.090000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.118000,-0.015000,0.004000, 83.900001,67.899978,0.000000, 1.260000,1.090000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.073000,-0.002000,0.004000, 83.900001,67.899978,3.199999, 1.154000,1.075000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.146000,-0.024000,0.004000, 83.900001,67.899978,3.199999, 1.154000,1.202000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.080000,0.016999,0.004000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.115000,0.003999,0.004000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.102000,0.003999,0.004000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.102000,0.003999,0.002000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.102000,0.003999,0.002000, 83.900001,67.899978,3.199999, 1.111000,1.102000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.102000,0.003999,0.002000, 83.900001,67.899978,3.199999, 1.111000,1.102000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.114000,-0.027000,0.002000, 83.900001,67.899978,3.199999, 1.180000,1.102000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.114000,0.002999,-0.002999, 83.900001,67.899978,3.199999, 1.108000,1.106000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.123000,-0.008000,0.001000, 83.900001,67.899978,3.199999, 1.195000,1.106000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.099000,-0.002000,0.001000, 83.900001,67.899978,3.199999, 1.195000,1.106000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.099000,-0.002000,-0.006999, 83.900001,67.899978,3.199999, 1.195000,1.106000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.112000,0.002999,-0.006999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.145000,-0.017000,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.098000,0.008999,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.098000,0.008999,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.098000,0.008999,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.121000,-0.002000,0.005000, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.097000,-0.002000,-0.001999, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.097000,-0.002000,0.005000, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.097000,-0.002000,0.005000, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.097000,0.001999,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.129000,-0.005000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.070000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.111000,0.001999,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.070000,1.000000);
			case 203: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.100000,-0.002000,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.111000,0.021999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.093000,0.004999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.114000,0.012999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 209: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.088000,0.008999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.088000,-0.008000,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.133000,-0.003000,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.138000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.124000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.120000,1.138000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.143000,-0.020000,0.005000, 83.900001,67.899978,3.199999, 1.120000,1.238000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.107000,-0.015000,0.005000, 83.900001,67.899978,3.199999, 1.293000,1.238000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.125000,0.006999,0.005000, 83.900001,67.899978,3.199999, 1.329000,1.055001,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.090000,-0.015000,-0.001999, 83.900001,67.899978,3.199999, 1.232000,1.192001,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.116000,0.016999,-0.001999, 83.900001,67.899978,3.199999, 1.140000,1.131000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.122000,0.005999,-0.001999, 83.900001,67.899978,3.199999, 1.206000,1.205001,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.092000,-0.009000,-0.001999, 83.900001,67.899978,3.199999, 1.115000,1.071000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.112000,-0.021000,0.002000, 83.900001,67.899978,3.199999, 1.021000,0.924000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.069000,-0.009000,-0.001999, 83.900001,67.899978,3.199999, 1.021000,0.924000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.097000,-0.002000,0.003000, 83.900001,67.899978,3.199999, 1.092000,1.010000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.128000,-0.007000,0.003000, 83.900001,67.899978,3.199999, 1.136000,1.116000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.097000,0.001999,-0.001999, 83.900001,67.899978,3.199999, 1.136000,1.116000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.118000,-0.009000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.118000,-0.002000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.131000,-0.002000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.131000,-0.014000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.086000,0.010999,-0.002999, 83.900001,67.899978,3.199999, 1.029000,1.033000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.107000,-0.004000,-0.002999, 83.900001,67.899978,3.199999, 1.029000,1.033000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.107000,-0.008000,-0.002999, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 268: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.107000,-0.008000,-0.002999, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.135000,-0.002000,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.095000,-0.002000,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.113000,0.000999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.113000,0.000999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.092000,0.008999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.101000,0.011999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.101000,0.006999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.101000,0.014999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.101000,0.007999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.157000,-0.001000,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.085000,0.005999,-0.003999, 83.900001,67.899978,3.199999, 1.078999,0.962000,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.144000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.100000,-0.002000,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.118000,-0.023000,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.152000,-0.016000,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.102000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 2, setobject, 2, 0.102000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар колпак, не будет отображаться на этом скине");
			}
		}
	case 1212:
		{
			switch (skinid)
			{
			case 1..21:SetPlayerAttachedObject(playerid, 5, setobject, 1,  0.110999, -0.087000, -0.036000,  90.800086, 2.200000, -36.000003,  2.038001, 2.363999, 1.312999); // 21
			case 22..49:SetPlayerAttachedObject(playerid, 5, setobject, 1,  0.132000, -0.073000, 0.001999,  90.800086, 2.200000, -36.000003,  2.038001, 2.363999, 1.312999); // 49
			case 50..311:SetPlayerAttachedObject(playerid, 5, setobject, 1,  0.110000, -0.088000, 0.001999,  90.800086, 2.200000, -36.000003,  2.038001, 2.363999, 1.312999); // 171
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар доллар на спине, не будет отображаться на этом скине");
			}
		}
	case 19094:
		{
			switch(skinid)
			{
			case 1..311: SetPlayerAttachedObject(playerid,2,19094,2,0.1809,0.0000,0.0000,0.0000,0.0000,0.0000,1.0000,1.0000,1.0000,0,0);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар бургер на голову, не будет отображаться на этом скине");
			}
		}
	case 1254:
		{
			switch(skinid)
			{
			case 1..21:SetPlayerAttachedObject(playerid, 6, setobject, 1,  0.169000, 0.149999, -0.008999,  1.099992, 87.000038, -1.099999,  0.313999, 0.274999, 0.285999); // 21
			case 22..49:SetPlayerAttachedObject(playerid, 6, setobject, 1,  0.169000, 0.122999, -0.008999,  1.099992, 87.000038, -1.099999,  0.313999, 0.274999, 0.285999); // 49
			case 50..311:SetPlayerAttachedObject(playerid, 6, setobject, 1,  0.169000, 0.130999, -0.008999,  1.099992, 87.000038, -1.099999,  0.424999, 0.319999, 0.356999); // 286
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар череп на грудь, не будет отображаться на этом скине");
			}
		}
	case 19137:
		{
			switch(skinid)
			{
			case 1..311:SetPlayerAttachedObject(playerid, 2,19137,2,0.095999,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000); //by yevhen babych
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар маска петуха, не будет отображаться на этом скине");
			}
		}
	case 8492:
		{
			switch(skinid)
			{
			case 1..311: SetPlayerAttachedObject(playerid, 5, 8492, 1, -0.009000, -0.126000, -0.050000, 31.499847, -88.900085, 25.199985, 0.083999, 0.014000, 0.133999, 0, 0);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар крылья на спину, не будет отображаться на этом скине");
			}
		}
	case 18963:
		{
			switch(skinid)
			{
			case 1..311:SetPlayerAttachedObject(playerid, 2,18963,2,0.086999,0.055000,0.000000,0.000000,87.600013,95.100013,1.364001,1.279000,1.221999);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар маска CJ, не будет отображаться на этом скине");
			}
		}
	case 3056:
		{
			switch (skinid)
			{
			case 1..20:SetPlayerAttachedObject(playerid, 5, setobject, 1,  0.304999, -0.142000, 0.000000,  0.000000, 87.700035, 89.600059,  0.477000, 0.501999, 0.440999); // 1
			case 21..48:SetPlayerAttachedObject(playerid, 5, setobject, 1,  0.304999, -0.142000, 0.000000,  0.000000, 87.700035, 89.600059,  0.477000, 0.501999, 0.440999); // 21
			case 49..170:SetPlayerAttachedObject(playerid, 5, setobject, 1,  0.304999, -0.112000, 0.000000,  0.000000, 87.700035, 89.600059,  0.477000, 0.501999, 0.440999); // 160
			case 171..299:SetPlayerAttachedObject(playerid, 5, setobject, 1,  0.304999, -0.122000, 0.000000,  0.000000, 87.700035, 89.600059,  0.477000, 0.501999, 0.440999); // 171
			case 300..311:SetPlayerAttachedObject(playerid, 5, setobject, 1,  0.316999, -0.127000, 0.000000,  0.000000, 87.700035, 89.600059,  0.477000, 0.501999, 0.440999); // 303
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар магнит, не будет отображаться на этом скине");
			}
		}
	case 19624:
		{
			switch (skinid)
			{
			case 1: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.069000,0.025000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.068000,0.025000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.068000,0.025000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.109000,0.025000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.132000,0.013000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 6: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.087000,0.013000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.087000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 8: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.087000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.106000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.106000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.106000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.106000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 13: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.106000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.106000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.069000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 16: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.069000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.069000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.074000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 19: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.074000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.074000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 22: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 23: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 24: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 27: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 29: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 31: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 32: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.031000,0.029000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 33: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.031000,0.022000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 34: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.031000,0.022000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 35: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.063000,0.031000,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 36: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.063000,0.031000,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 37: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.063000,0.031000,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 38: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.080000,0.010999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 39: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.080000,0.010999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.080000,0.010999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 41: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.080000,0.010999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 42: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.080000,0.026000,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.080000,0.021999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 50: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.015999,-0.002000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 51: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.015999,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 52: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.015999,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 53: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.015999,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.015999,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 61: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 62: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 63: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 64: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 65: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 71: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.089000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.089000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.089000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 74: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.089000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 75: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.094000,0.015000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.094000,0.015000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 77: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 78: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 80: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 81: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.023000,0.028000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 85: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.083000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 87: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,-0.009999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 89: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,-0.009999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 92: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 99: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 104: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 107: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 115: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.079000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.087000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.087000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.087000,0.023000,0.024000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.087000,0.023000,0.007000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.087000,0.023000,0.007000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.087000,0.023000,0.007000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 131: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.087000,0.023000,0.007000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.087000,0.023000,0.020000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 133: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.087000,0.023000,0.020000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 134: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.087000,0.023000,0.020000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 135: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.087000,0.023000,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 136: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.076000,0.023000,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 137: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 138: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 139: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 140: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 141: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 142: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 143: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.108000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 144: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.108000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 145: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.108000,0.032000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 146: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.108000,0.032000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.104000,0.036999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.104000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 149: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.094000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 150: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.101000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.101000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 152: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.101000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 153: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.081000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.102000,0.016999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 155: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.102000,0.016999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.102000,0.016999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.091000,0.009999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 158: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.077000,0.009999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 159: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.018999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.089000,0.018999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 161: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.097000,0.018999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 167: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 168: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.020000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 173: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 174: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 175: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 178: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.022000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.015000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 181: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.015000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.090000,0.026999,0.015000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.081000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.021000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.021000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 195: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 196: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 197: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 198: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 199: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 201: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 203: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 204: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 205: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.077000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 209: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.077000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.077000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.077000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 212: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.093000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.093000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 214: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.093000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 215: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.111000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.111000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 218: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 219: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.099000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 220: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.109000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 224: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 225: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 230: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 231: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 232: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 233: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 237: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 238: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 239: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 241: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 242: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 243: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 244: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 245: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 246: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 248: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 249: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 251: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 253: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 255: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 256: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 257: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 260: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 261: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.070000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.070000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 263: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.070000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 264: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.070000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.102000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 266..310: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.077000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 7, setobject, 5,  0.077000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар чемодан, не будет отображаться на этом скине");
			}
		}
	case 341:
		{
			switch(skinid)
			{
			case 1..21:SetPlayerAttachedObject(playerid, 5, setobject, 1,  0.500999, -0.196000, 0.061000,  -4.899923, -178.700042, 0.000000,  1.000000, 1.000000, 1.000000); // 21
			case 22..49:SetPlayerAttachedObject(playerid, 5, setobject, 1,  0.486999, -0.208000, 0.052000,  -4.899923, -178.700042, 0.000000,  1.000000, 1.000000, 1.000000); // 49
			case 50..62:SetPlayerAttachedObject(playerid, 5, setobject, 1,  0.500999, -0.196000, 0.061000,  -4.899923, -178.700042, 0.000000,  1.000000, 1.000000, 1.000000); // 62
			case 63..171:SetPlayerAttachedObject(playerid, 5, setobject, 1,  0.500999, -0.196000, 0.061000,  -4.899923, -178.700042, 0.000000,  1.000000, 1.000000, 1.000000); // 171
			case 172..311:SetPlayerAttachedObject(playerid, 5, setobject, 1,  0.505999, -0.196000, 0.061000,  -4.899923, -178.700042, 0.000000,  1.000000, 1.000000, 1.000000); // 286
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар бензопила, не будет отображаться на этом скине");
			}
		}
	case 19069,19067,19068: {
			switch(skinid) {
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.033000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,0.000998, 0.000000,90.000000,95.899993, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098997,0.000999,0.000998, 0.000000,90.000000,95.899993, 1.175000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.006999,0.000998, 0.000000,90.000000,95.899993, 1.092000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,-0.006000,0.000998, 0.000000,90.000000,95.899993, 1.137000,1.050999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.013999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.017000,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.017000,0.001998, 0.000000,90.000000,95.899993, 0.987000,1.091999,0.866999);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.017000,0.001998, 0.000000,90.000000,95.899993, 1.122000,1.091999,0.866999);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.021000,0.001998, 0.000000,90.000000,95.899993, 1.181999,1.091999,0.866999);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130997,0.017000,-0.003001, 0.000000,90.000000,95.899993, 1.181999,1.091999,0.866999);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.027000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.009000,-0.003001, 0.000000,90.000000,95.899993, 1.071000,1.091999,0.866999);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.022000,-0.003001, 0.000000,90.000000,95.899993, 1.071000,1.091999,0.866999);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.022000,-0.003001, 0.000000,90.000000,95.899993, 1.125999,1.091999,0.866999);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.002999,-0.003001, 0.000000,90.000000,95.899993, 1.125999,1.091999,0.866999);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.024000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.035999,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.014000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.014000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.014999,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.005999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.002999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.012999,0.008999, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 63: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
			case 64: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.025999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.024999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.004000,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.019999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.005999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 75: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.015000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.003000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.034000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.016000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 85: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016000,-0.010001, 0.000000,90.000000,95.400001, 1.151999,1.240999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.016000,-0.004000, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.027000,-0.004000, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 89: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.007000,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.007000,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.001999,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,-0.003999,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.005000,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,-0.011999,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122997,0.032000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.009000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.009000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,-0.002000, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101997,0.002000,-0.002000, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.002000,0.002999, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,0.012000,0.003999, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.019000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.004000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.004000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.010000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.007000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.007000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.000000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.003999,0.000999, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.003999,0.000999, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.026000,-0.010001, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.016000,-0.004000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.019000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.035998,0.005000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 138: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.005000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 144: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.007999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.001999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.001999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.004999,0.010999, 0.000000,90.000000,95.400001, 1.176999,1.087000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.009000,0.000999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.002999,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,-0.007999,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.011000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.008000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.182998,-0.009999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.003999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.026000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.014000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,-0.006999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.006000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.006000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.001999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.001999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.001000,0.002998, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001000,-0.001001, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.004000,-0.009001, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.021999,0.001999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.021999,0.001999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.011000,-0.004000, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.015000,0.000999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,0.015000,0.000999, 0.000000,90.000000,96.400009, 1.231999,1.000000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.005000,0.000999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,-0.001999,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,-0.001999,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.010000,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.010000,0.001999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.010000,0.001999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.010000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.022000,-0.003000, 0.000000,90.000000,96.400009, 0.964999,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.010000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.010000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.009999,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
			case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.004000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.004000,-0.005000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.004000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.003000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.013000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.015000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.005999,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007000,0.007999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007000,0.007999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.003000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.003000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар шапка, не будет отображаться на этом скине");
			}
		}
	case 18953,18954: {
			switch(skinid) {
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016000,-0.002001, 0.000000,-0.799996,-8.600006, 1.000000,1.000000,1.050999);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.022000,0.008999, 2.000010,-5.999990,5.400008, 1.000000,1.042000,1.079000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.018000,-0.000001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.018000,-0.000001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,0.032000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.007000,-0.002001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.032000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098997,0.008000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.020000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.016000,0.003998, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.004000,0.000998, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.014000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.023000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.026000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.131000,1.206000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.026000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.131000,1.206000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.005000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.052000,1.206000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.063998,0.015000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.052000,1.206000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.027000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.909000,1.206000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.005000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.974000,1.206000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.040000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.017000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.004000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.020000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.000999,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.000999,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.025000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.014000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.953000,0.969000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,0.006000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.953000,0.969000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.006000,-0.004000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.025000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.030000,-0.000000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.001000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.001000,0.003999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.003999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.010000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.029000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.018000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.013000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.013000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.005000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.005000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.013000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.021000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.014000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.025000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.000999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.009999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.024000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.017000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.018000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.018000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,-0.003999,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.017000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.009000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.009000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.018000,-0.002000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,-0.002000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.005000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.011000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 190: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 199: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.020000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.012000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.004000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.010000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.021000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 218: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.015000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.012999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.017999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.014000,0.001999, 2.000010,2.000011,-26.199983, 1.000000,0.970000,1.166000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.003000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,0.970000,1.166000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.029000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,0.970000,1.166000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.023000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.132000,1.166000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.011000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.002999,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.073998,0.010000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.010000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.015000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 243: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.091998,0.023000,0.001998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,-0.004001, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.005000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.019000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.010000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.027000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.015000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.013000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.007999,0.002998, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.007999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.020000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.020000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.003999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.003999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.131999);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.021000,-0.003001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.131999);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.030000,-0.003001, 0.000000,0.899997,-23.200000, 1.000000,1.075999,1.131999);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.013000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.885999,1.131999);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.013000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.885999,1.131999);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.131999);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар шапка, не будет отображаться на этом скине");
			}
		}
	case 18947,18948,18949,18950,18951: {
			switch(skinid) {
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.014000,-0.001001, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.070000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.014000,-0.001001, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.070000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.014000,-0.008000, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.126000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.014000,-0.002001, 0.000000,0.600003,13.600016, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.014000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.001000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000999,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000999,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.008000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.007000,0.003998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,-0.027000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.001000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.007999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.004999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.005000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.000000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.015000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.006999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099998,0.000000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.024000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,-0.004999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.037000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.008999,-0.002001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.013000,-0.002001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.028000,0.000998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.009999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.010000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.017000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.017000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.006999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.196998,0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,0.002999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.010000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.011000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.000000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.003999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.016000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.023000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.006999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.010999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.005000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,0.007999,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.011000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.011000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,-0.012000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.012000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.022000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.007000,-0.005001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.008999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.003000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.011000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,-0.011000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.004999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.003000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.009000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.001000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.010999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.005999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.010999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.020000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.176998,0.017000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.012999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.003000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,-0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,-0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.188998,0.001999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.001999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.010000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.010000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.002999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.002999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.168998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007999,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.020000,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146999,0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.800999,0.970000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146999,0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар шляпа, не будет отображаться на этом скине");
			}
		}
	case 18933,18932,18928,18942,18943,18940,18929,18926: {
			switch(skinid) {
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.014001, -175.400024,173.999984,-178.299957, 1.000000,1.000000,1.072000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.014001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.009999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.009999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.020000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.015001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.019001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.022000,-0.007000, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.014000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.016001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 24: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,0.968000,1.044999);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,0.968000,1.044999);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.012999,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,1.120000,1.075000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.000999,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.011000,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.024000,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,-0.004000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,0.989000,1.042999);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.016999,-0.010001, -175.400024,173.999984,164.000030, 0.954999,0.989000,1.042999);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,-0.010000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.006000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.006000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.031000,-0.022001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.003999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.014999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.033000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,-0.033000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.177997,0.000999,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.013000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,0.982000,1.019999);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.013000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.126000,1.019999);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,-0.001000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.126000,1.019999);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133997,0.005999,-0.011001, -175.400024,173.999984,164.000030, 0.954999,1.005999,1.019999);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.003999,-0.011001, -175.400024,173.999984,164.000030, 0.954999,0.952999,1.019999);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.007999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,0.952999,1.019999);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,-0.023000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.012999,-0.004000, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,-0.026000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.186997,0.000999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.027000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 93: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143997,-0.024000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,-0.024000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,-0.004000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,0.003999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157997,-0.022000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.028000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,-0.028000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,-0.021000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.002000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.002000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.009000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,-0.005000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,-0.005000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,0.959000,0.932000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,0.959000,0.932000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,0.971000);
			case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.020001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.020001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,-0.022000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133997,-0.018000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.018000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.018000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,0.000999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.024000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.010000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163997,0.019999,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 138: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 139: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 141: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 145: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.014000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 146: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.014000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.033000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.178997,-0.028000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179997,-0.042000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,0.002999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,-0.001000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,-0.001000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,0.000999,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.005000,-0.008000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.005000,-0.008000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.022000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145997,-0.009000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163997,-0.025000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.016000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,-0.029000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.016000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.021000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.128000,1.059000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.003000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.015999,1.009000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.003000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.015999,1.009000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.006000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.068999,1.009000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.012000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.016000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.022000,-0.004000, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.001000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.016000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.028000,-0.016001, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.037000,-0.020000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.023000,-0.017000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.033000,-0.019000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 195: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,-0.041000,-0.019000, -175.400024,173.999984,153.500061, 1.074999,1.109999,1.146000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.023000,-0.019000, -175.400024,173.999984,153.500061, 1.074999,1.109999,1.146000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.002000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.004000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.002999,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.033000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.025000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.019000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 219: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.045000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,-0.039000,-0.006000, -175.400024,173.999984,153.500061, 1.074999,1.139999,1.159999);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.041000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.139999,1.159999);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.010999,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,-0.015000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.012999,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.003000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.006000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 233: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.009000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.018000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,-0.011000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,-0.004000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 237: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.018000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.009000,-0.015000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.068999);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.011000,-0.015000, -175.400024,173.999984,169.400070, 1.074999,1.101999,1.106000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187998,-0.023000,-0.011000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.183000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.010000,-0.020000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
			case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.013000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.029000,-0.011000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.019000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.137000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.030000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.137000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,-0.004000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,0.955999,0.924000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.016000,-0.014000, -175.400024,173.999984,158.000030, 1.074999,0.955999,0.924000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.021000,-0.014000, -175.400024,173.999984,158.000030, 1.074999,1.033999,1.004000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.027000,-0.012000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.012000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.012000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.006000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.011000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.013000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.021000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.019000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.176998,-0.031000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.015000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,-0.028000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.032000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.072000,-0.016000, -175.400024,173.999984,139.900024, 1.074999,0.970999,1.044000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.020000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.005000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.001999,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 306: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.017000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 307: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.028000,-0.017000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 308: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 309: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.011000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.011000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			default:SendClientMessage(playerid, COLOR_GREY, "Аксессуар кепка, не будет отображаться на этом скине!");
			}
		}
	case 18955,18956,18957,18959: {
			switch(skinid) {
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105997,0.034000,0.000998, 6.799999,90.000000,97.500000, 0.925999,1.092999,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.034000,-0.005001, 8.500000,89.899986,76.199981, 1.024999,1.115999,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.034000,0.006998, 8.500000,89.899986,99.799995, 1.090999,1.115999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.034000,0.006998, 8.500000,89.899986,99.799995, 1.090999,1.115999,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.045000,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.016999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093997,0.016999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.028999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094997,0.015999,-0.004001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.037000,-0.004001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,-0.001999,-0.005001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.031000,-0.002001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.085997,0.019000,0.000998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.014000,0.000998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.027000,-0.004001, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.027000,0.004998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.029000,-0.002001, 8.500000,89.899986,81.099990, 1.047000,1.030999,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.029000,-0.007001, 8.500000,89.899986,81.099990, 1.047000,1.088999,1.000000);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.082997,0.023000,-0.004000, 8.500000,89.899986,81.099990, 1.047000,1.088999,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101997,0.023000,-0.003001, 8.500000,89.899986,81.099990, 1.047000,1.156999,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.058998,0.026000,-0.009001, 8.500000,89.899986,81.099990, 0.913000,0.994999,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083997,0.036000,0.002998, 8.500000,89.899986,81.099990, 0.913000,0.994999,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,0.027000,-0.003001, 8.500000,89.899986,81.099990, 0.988000,1.017999,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.045999,-0.003001, 8.500000,89.899986,81.099990, 1.016000,1.113999,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.035000,-0.006001, 8.500000,89.899986,81.099990, 1.016000,1.113999,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.018000,-0.009001, 8.500000,89.899986,81.099990, 1.091000,1.150999,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097997,0.046000,-0.009001, 8.500000,89.899986,81.099990, 1.091000,1.150999,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097997,0.056999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.049999,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.010999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.049999,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.010999,-0.003001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.037999,-0.007001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090997,0.017999,-0.007001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.026999,-0.004001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.026999,-0.005001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.036999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.037999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.033999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.036999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.025999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.040999,0.006998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.040999,-0.002001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.018999,-0.002001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.035999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.018999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.018999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.013999,-0.003001, 8.500000,89.899986,81.099990, 1.002000,1.011999,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.049999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.011999,1.000000);
			case 89: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.007999,-0.001001, 8.500000,89.899986,81.099990, 1.002000,1.065999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.027999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.022999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,0.009999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.031999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,0.028999,0.001998, 8.500000,89.899986,81.099990, 1.042000,1.123999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.044999,-0.005001, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.033999,-0.005001, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.028999,0.004999, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.019999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.023999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.037999,-0.004000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.031999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.030999,-0.002000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.029999,-0.002000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.029999,-0.005000, 8.500000,89.899986,81.099990, 1.042000,1.059999,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.036999,-0.003000, 8.500000,89.899986,81.099990, 0.935000,0.948999,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.036999,-0.003000, 8.500000,89.899986,81.099990, 0.935000,0.948999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.032999,-0.005000, 8.500000,89.899986,81.099990, 0.935000,1.012999,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.017999,-0.005000, 8.500000,89.899986,81.099990, 0.980000,1.012999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.016000,0.004999, 0.000000,90.000000,115.000000, 1.000000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.024000,-0.005001, 0.000000,90.000000,115.000000, 1.057999,1.191999,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.030000,-0.001000, 0.000000,90.000000,93.100013, 1.057999,1.102999,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.034000,-0.001000, 0.000000,90.000000,93.100013, 0.913999,1.102999,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.013000,-0.001000, 0.000000,90.000000,93.100013, 0.970999,1.102999,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.027000,0.000999, 0.000000,90.000000,93.100013, 1.066999,1.102999,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.046000,-0.008000, 0.000000,90.000000,93.100013, 1.099999,1.102999,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.028000,0.000999, 0.000000,90.000000,93.100013, 0.797999,0.900999,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.078998,0.028000,-0.004000, 0.000000,90.000000,93.100013, 0.797999,0.900999,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.006000,-0.000000, 0.000000,90.000000,93.100013, 0.850999,0.943999,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000000,-0.000000, 0.000000,90.000000,93.100013, 0.850999,0.943999,1.000000);
			case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.013000,-0.000000, 0.000000,90.000000,93.100013, 0.913999,0.943999,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.002000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 152: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.002000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.006000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,0.001000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.021000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100997,0.027000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.031000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.031000,-0.003000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.022000,-0.003000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.032000,-0.004000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.032000,-0.004000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.002999,-0.005000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.025000,-0.005000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.016000,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.016000,-0.000000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149997,0.016000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,0.021999,-0.004000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,0.021999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.013999,-0.009000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.025999,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.025999,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.025999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.025999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.016999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.016999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.024000,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.018999,-0.000000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155997,0.012999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155997,0.018999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.023000,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.023000,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.044999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083997,0.033999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.043999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084997,0.027999,0.002999, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.027999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.027999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.019999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.031999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.015999,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.004999,0.000999, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.034000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.014000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.048000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.034000,-0.000000, 0.000000,90.000000,93.100013, 1.076999,1.121999,1.024999);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094997,0.019000,-0.000000, 0.000000,90.000000,93.100013, 0.934999,1.003999,1.024999);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099997,0.005000,-0.000000, 0.000000,90.000000,93.100013, 0.934999,1.003999,1.024999);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.073998,0.020000,-0.001001, 0.000000,90.000000,101.900001, 1.000000,1.000000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,0.032999,0.000998, 0.000000,90.000000,101.900001, 1.000000,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.031999,-0.000001, 0.000000,90.000000,101.900001, 1.059000,1.115999,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.020999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.027999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122997,0.027999,-0.004001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.027999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.026999,0.007998, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.031999,0.002998, 0.000000,90.000000,101.900001, 1.067000,1.123000,1.047000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.025999,0.003998, 0.000000,90.000000,101.900001, 1.067000,1.123000,1.047000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.041999,-0.004001, 0.000000,90.000000,101.900001, 0.963000,0.953000,1.047000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,-0.004001, 0.000000,90.000000,101.900001, 0.963000,0.953000,1.047000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,-0.002001, 0.000000,90.000000,101.900001, 0.963000,0.996000,1.047000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,0.000998, 0.000000,90.000000,101.900001, 0.963000,0.996000,1.047000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.020999,0.000998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096997,0.025999,0.000998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.026999,0.003998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.026999,0.003998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.024999,0.001998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,0.001998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,-0.003001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.034999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,0.024999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.032999,-0.001001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090997,0.028999,-0.003001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.028999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.023999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.005999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.015999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.035999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.000001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.024999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.027999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			default:SendClientMessage(playerid, COLOR_GREY, "Аксессуар кепка, не будет отображаться на этом скине!");
			}
		}
	case 19558: {
			switch(skinid) {
			case 1..311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161000,0.013999,-0.000999,86.099945,81.700019,3.600003,1.000000,1.000000,1.000000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар кепка развозчика пиццы, не будет отображаться на этом скине!");
			}
		}
	case 19161, 19162: {
			switch(skinid) {
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
			default:SendClientMessage(playerid, COLOR_GREY, "Аксессуар кепка, не будет отображаться на этом скине!");
			}
		}
	case 18924,18925,18921,18923,18922: {
			switch(skinid) {
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.000999,-0.010001, 0.199998,-5.700015,-8.800018, 1.000000,1.000000,1.085000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.000000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.005000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.015000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.011999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.011000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.021999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.002000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.006000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.016999,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.015000,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,0.947999,1.029000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.076999,1.029000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.008000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.076999,1.029000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.006000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.172999,1.123000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.011999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.172999,1.200000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.012000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.017000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.011999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,0.004000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.005999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.002000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.004999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.008000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.001000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.013000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.006999,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,0.001998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,0.001998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.022999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.022999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.005999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.014999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.001000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.001000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.015000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.003999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.007999,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.007999,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.002000,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.002999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,0.000000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.014999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.010999,-0.000001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.001999,-0.008001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.001999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.002000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003999,-0.006001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.005000,-0.009000, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.018000,-0.009000, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.020999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.015999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.015999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.003999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,1.027999,1.079000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,-0.013999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,1.208999,1.217000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.009000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,0.009000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.008999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.008999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.002000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.003999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.009999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.009999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.005999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.008999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.183998,-0.008999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.001000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.013999,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.002000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.006000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.006000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.002000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.012999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.012999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.004999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.005999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.010999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.002999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.012000,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.012000,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.003999,0.001999, 0.199998,-5.700015,-8.800018, 1.074000,0.936999,0.979000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.003000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.001999,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.002000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.177998,-0.007999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,-0.019999,-0.000000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.012000,-0.000000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.015999,-0.000000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.012000,-0.002000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.000000,-0.005000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.006999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.005999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.005000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.009999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.000999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.012000,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.001999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.007000,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.009999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.017999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.007999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.007999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179998,-0.007999,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар берет, не будет отображаться на этом скине");
			}
		}
	case 1609:
		{
			switch(skinid)
			{
			case 1..311:SetPlayerAttachedObject(playerid, 5, 1609, 1, -0.0049, -0.1469, -0.0099, -92.6000, -179.7999, 91.7000, 0.1979, 0.2389, 0.1800, 0, 0);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар черепаха, не будет отображаться на этом скине");
			}
		}
/*	case 2226:
		{
			switch(skinid)
			{
			case 1..311:SetPlayerAttachedObject(playerid,5,2226,1,-0.015000,-0.183000,-0.097000,0.000000,27.800003,0.000000,0.759000,0.706000,0.780999);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар бумбокс, не будет отображаться на этом скине");
			}
		}*/
	case 19079:
		{
			switch(skinid)
			{
			case 1..311:SetPlayerAttachedObject(playerid, 4, 19079, 17, 0.029000, -0.057000, 0.148000, 0.000000, 0.000000, 0.000000, 0.603999, 0.543000, 0.594999, 0, 0);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар попугая, не будет отображаться на этом скине");
			}
		}
	case 11704:
		{
			switch(skinid)
			{
			case 1..311: SetPlayerAttachedObject(playerid,3,11704,2,0.072999,0.087000,0.000000,0.000000,90.000000,180.000000,0.337000,0.653000,0.466001);
			default:  SendClientMessage(playerid, COLOR_GREY, "Аксессуар маска демона, не будет отображаться на этом скине");
			}
		}
	case 19314:
		{
			switch(skinid)
			{
			case 1..311:SetPlayerAttachedObject(playerid,2,19314,2,0.0869,-0.0070,0.0010,-4.9999,-2.5999,-101.7999,0.5939,0.6319,0.3300,0,0);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар рога на голову, не будут отображаться на этом скине");
			}
		}
	case 18968,18967,18969: {
			switch(skinid) {
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.005001, 0.000000,90.000000,93.500007, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007999,0.001998, 0.000000,90.000000,93.500007, 1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.015000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.004999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.018000,-0.000001, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.006999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.006999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.012000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,-0.000000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.027000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.013000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.002998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.013000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.013000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.009999,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.014000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.014000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.014000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.003000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,0.017999,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.029000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.008999,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.037999,-0.001001, 0.000000,90.000000,93.699989, 1.078999,1.074000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.023000,-0.001001, 0.000000,90.000000,93.699989, 1.078999,1.074000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.004999,-0.005000, 0.000000,90.000000,93.699989, 1.078999,1.138000,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.043999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.031999,-0.004000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.017999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.024999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.024999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.026999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.019999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.019999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.014999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.008999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.002999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 78: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.006999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.006999,0.006999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.182998,0.025999,0.003999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,0.020999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,0.020999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.011999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.032999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.010999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.005999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.022999,0.001999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.001999,0.001999, 0.199999,91.999984,90.599967, 0.934999,0.991000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.015999,-0.000000, 0.199999,91.999984,90.599967, 0.986999,1.020000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.010999,-0.000000, 0.199999,91.999984,90.599967, 0.986999,1.020000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.035999,-0.003000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.015999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.015999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.015999,-0.005000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.006001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.001000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.005001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.005001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.017999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.014999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.014999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.014999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.014999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.020999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.020999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.020999,-0.002000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,0.003999, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.011999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.033999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 131: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 146: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,-0.002000,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,-0.001000,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.017999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.017999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.009999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.011999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 195: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 196: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 199: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.010999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.021999,-0.000000, 0.199999,91.999984,90.599967, 0.855999,1.005000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.018999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.015999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 218: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.015999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 219: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.008999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.007000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179998,0.021999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 224: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 225: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.002000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.009000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.022999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.012999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.000999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 230: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.015999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 233: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 237: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.002000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.017999,0.000999, 0.199999,91.999984,90.599967, 1.002999,1.090000,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.001998, 0.000000,90.000000,82.699989, 1.000000,1.057000,1.000000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,0.030000,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 263: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.004999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.008999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.005999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.005999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.014999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.011999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.013999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.013999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.003000,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,0.009999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.009999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.172998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.015000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар панамка, не будет отображаться на этом скине");
			}
		}
	case 18911,18912,18913,18914,18915,18916,18917,18918,18919: {
			switch (skinid) {
			case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093999,0.018000,0.001999, -86.200012,-1.500002,-96.000038, 1.029999,1.000000,1.006999);
			case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.083999,0.029000,0.001999, -86.200012,-1.500002,-96.000038, 1.029999,1.000000,1.006999);
			case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.104999,0.024000,0.001999, -86.200012,-1.500002,-96.000038, 1.083999,1.000000,1.107000);
			case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.131999,0.012999,0.001999, -84.100021,5.999998,-96.600036, 1.268999,1.000000,1.107000);
			case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.106999,0.023999,0.001999, -84.100021,5.999998,-96.600036, 1.354999,1.000000,1.107000);
			case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097999,0.006999,0.001999, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.028999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 8: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.020999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.010999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.024999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 11: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.018999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.009999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 13: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.014999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.083999,0.030999,0.000999, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,-0.004000,-0.002000, -84.100021,6.599998,-95.200027, 1.123999,1.000000,1.032000);
			case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.018999,-0.002000, -84.100021,6.599998,-95.200027, 1.123999,1.000000,1.032000);
			case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.014999,-0.004000, -87.500000,2.199998,-95.200027, 1.123999,1.000000,1.032000);
			case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.062999,0.007999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.005999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.023999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.027999,-0.004000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.022999,-0.004000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.003999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.032000);
			case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.008999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.017999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 27: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.017999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.025999,-0.006000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.039000);
			case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.034999,0.000999, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.039000);
			case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.019999,-0.007000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.112000);
			case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.022999,-0.006000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.112000);
			case 32: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,-0.008000,-0.003000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.975000);
			case 33: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.013999,0.009999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 35: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 36: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 37: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 38: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.032999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.018999,-0.002000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.006999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.975000);
			case 43: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012999,0.014999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.884000);
			case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.034999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.884000);
			case 45: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.934000);
			case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.033000,-0.004000, -87.500000,16.199996,-95.200027, 1.098999,1.000000,1.053000);
			case 47: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.025000,-0.004000, -87.500000,16.199996,-95.200027, 1.098999,1.000000,1.053000);
			case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.018000,-0.004000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.102000);
			case 49: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.014000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.086999,0.024000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.004000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.017000,-0.001000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.022000,-0.006000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.011000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.015000,-0.000000, -87.500000,16.199996,-95.200027, 1.069999,1.000000,0.930000);
			case 68: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.022000,-0.000000, -87.500000,16.199996,-95.200027, 0.967999,1.000000,0.930000);
			case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.048999,0.024000,0.000999, -87.500000,16.199996,-95.200027, 1.033999,1.000000,0.930000);
			case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.021000,0.002999, -87.500000,16.199996,-95.200027, 1.033999,1.000000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.026000,0.002999, -87.500000,16.199996,-95.200027, 0.940999,1.000000,0.944000);
			case 73: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.026000,0.002999, -87.500000,16.199996,-95.200027, 0.940999,1.000000,0.944000);
			case 78: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.087999,0.009000,0.007999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.009000,0.007999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.022000,0.002999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 84: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.018000,0.002999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008000,-0.002000, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.017999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.020000);
			case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.010999,-0.000000, -87.500000,16.199996,-95.200027, 1.031999,1.000000,1.020000);
			case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.018999,-0.000000, -87.500000,16.199996,-95.200027, 1.031999,1.000000,1.020000);
			case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.002000,-0.000000, -87.500000,16.199996,-95.200027, 0.877999,1.000000,0.965000);
			case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.021999,-0.000000, -87.500000,16.199996,-95.200027, 0.877999,1.000000,0.965000);
			case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.007999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,0.965000);
			case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.035000,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.022999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.015999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 102: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.015999,-0.000000, -87.500000,16.199996,-95.200027, 1.043999,1.000000,1.048000);
			case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 104: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 107: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 109: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 110: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.984000);
			case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.003999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.917000);
			case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.031999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.008000);
			case 114: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.027999,-0.005000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 115: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024999,-0.004000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 116: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.024999,-0.007000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.013999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.013999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.968000);
			case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.003000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.968000);
			case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.072999,1.000000,1.123000);
			case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.072999,1.000000,1.123000);
			case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.117999,1.000000,1.177000);
			case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.010999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,1.177000);
			case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.024999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 128: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.035999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 134: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.010999,0.000999, -87.500000,16.199996,-95.200027, 0.912999,1.000000,0.925000);
			case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.023999,0.000999, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 137: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.002000,-0.004000, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 141: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.020999,0.000999, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 142: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 0.997999,1.000000,1.059000);
			case 143: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.009999,0.005999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 152: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.062999,0.014999,0.000999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.927000);
			case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.014999,-0.002000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.927000);
			case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.023999,-0.006000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,1.068000);
			case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.024999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.016999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.016999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.031999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.020999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.020999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.018999,-0.006000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,1.045000);
			case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.012999,-0.004000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.014999,0.000999, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 173: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.030999,0.000999, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 174: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 175: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 177: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.025999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.020999,-0.004000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.098999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.009999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.026999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.018999,-0.001000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.013999,-0.001000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.013999,0.007999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.025999,0.002999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 189: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.016999,-0.001000, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 190: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 194: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 195: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 203: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 204: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.082000,0.020999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 208: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 0.892999,1.000000,1.014000);
			case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.007999,-0.000000, -87.500000,16.199996,-95.200027, 0.995999,1.000000,0.883000);
			case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.026999,-0.002000, -87.500000,16.199996,-95.200027, 0.995999,1.000000,0.883000);
			case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072999,0.024999,-0.003000, -87.500000,16.199996,-95.200027, 0.859000,1.000000,0.883000);
			case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072999,0.038999,-0.003000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,0.883000);
			case 214: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.043999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.060999,1.000000,0.894000);
			case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,0.894000);
			case 220: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015000,0.029999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 221: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 222: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.025999,-0.002000, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.205000);
			case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.075999,0.021999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,1.087000);
			case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.075999,0.030999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,1.087000);
			case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.010999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,0.965000);
			case 233: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.018999,0.000000, -87.500000,16.199996,-95.200027, 1.033999,1.000000,0.965000);
			case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,-0.004000,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.003999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 236: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.028999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 237: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.009999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.081999,0.015999,0.009000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.016999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.016999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.032999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 249: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058999,0.032999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058999,0.023999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.020999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.003999,0.005000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,0.005000, -87.500000,16.199996,-95.200027, 1.129998,1.000000,1.158000);
			case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,0.005000, -87.500000,16.199996,-95.200027, 1.129998,1.000000,1.158000);
			case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041999,0.014999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.052999,0.006999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,-0.000000,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.008999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 269: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 270: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 271: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.019999,0.000000, -87.500000,16.199996,-95.200027, 1.079998,1.000000,1.043000);
			case 273: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 1.079998,1.000000,1.043000);
			case 274: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 284: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.024999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 285: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.016999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.001000,-0.002999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.010999,0.008000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.005999,-0.000999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 289: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.005999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 290: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.013999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.027999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.007999,-0.003999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.011999,-0.006999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 294: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,0.003000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.020999,0.001000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.020999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 297: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.017999,0.003000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,0.001000, -87.500000,16.199996,-95.200027, 1.059998,1.000000,1.062000);
			case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
			case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.011999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар бандана, не будет отображаться на этом скине");
			}
		}
	case 19350:
		{
			switch( skinid)
			{
			case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036998,0.113999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.126999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.137999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.081998,0.137999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064998,0.135999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050998,0.116999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.139000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.003998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023998,0.129000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 11: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.119000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015998,0.118000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.148000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.108000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005998,0.124000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.127000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.117000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.139000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.133000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.123000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.118000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026998,0.125000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 27: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.128000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.135000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.139000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.143000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.139000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 32: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.102000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 33: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.006001,0.111000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 34: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.130000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 35: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.114000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 36: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.120000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 37: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.118000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 38: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047998,0.136000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.127000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.118000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 41: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.125000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.130000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 45: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010998,0.120000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.143000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 47: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026998,0.137000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.130000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 55: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.016998,0.117000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 56: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015998,0.117000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055998,0.137000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.123000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.124000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.136000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 61: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.127000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 62: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.130000,0.005999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.122000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.120000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.009998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.130000,0.005999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 71: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.104000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 72: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.123000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 73: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.122000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 76: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010998,0.116000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 78: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072998,0.120000,0.006999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.120000,0.006999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 82: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.136000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.121000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 84: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.120000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.054998,0.122000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.124000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.117000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.124000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 94: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.003001,0.102000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.099000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004998,0.122000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026998,0.143000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.132000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.124000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.133000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 104: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.135000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.132000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.132000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.115000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.105000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 114: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 115: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 116: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.127000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.127000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.127000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.123000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.129000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.131000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040998,0.133000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040998,0.109000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.116000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.131000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 132: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.014001,0.115000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017998,0.127000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 137: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.098000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 141: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010998,0.118000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 143: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040998,0.124000,0.003999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.116000,0.003999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.116000,0.003999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 151: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.128000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 152: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.110000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.117000,0.006999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005998,0.122000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 156: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025998,0.134000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 158: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 159: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.128000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045998,0.114000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 161: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.129000,0.004999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.123000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017998,0.123000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017998,0.122000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.013998,0.116000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.134000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.134000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060998,0.130000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017998,0.119000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.119000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.136000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023998,0.125000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023998,0.125000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.771000);
			case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.125000,0.005999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.129000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 192: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 194: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 195: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.126000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.043998,0.130000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.130000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 207: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.117000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 208: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.128000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.123000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.112000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.128000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 214: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.116000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 215: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.116000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 216: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.116000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.123000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 219: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.016998,0.150000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 224: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.006998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 225: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.006998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 226: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.052998,0.137000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.148000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 230: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.001998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 231: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.145000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.099000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.001998,0.109000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064998,0.113000,0.005999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015998,0.124000,0.002999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 241: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.134000,0.002999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 242: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 243: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.126000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025998,0.134000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 249: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.134000,0.005999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.136000,-0.004000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025998,0.123000,0.003999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.125000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036998,0.115000,0.006999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036998,0.143000,0.002999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.143000,0.002999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 261: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.108000,0.002999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019998,0.124000,-0.003000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.110000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036998,0.116000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 271: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.054998,0.126000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.131000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.108000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.108000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.110000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.111000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.108000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.109000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 284: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.140000,0.006999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.107000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.016998,0.129000,0.004999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.108000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 289: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.115000,0.003999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 290: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021998,0.118000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.125000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.118000,-0.004000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.120000,-0.004000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 294: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.117000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014998,0.124000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045998,0.138000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045998,0.122000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.043998,0.134000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.112000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.113000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.108000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.126000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.127000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.127000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.127000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.109000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.109000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар бандана, не будет отображаться на этом скине");
			}
		}
	case 19351:
		{
			switch (skinid)
			{
			case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.108000,0.003000, 0.000000,0.000000,-81.399993, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.117000,0.003000, 0.000000,0.000000,-60.399993, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.130000,0.000999, 0.000000,0.000000,-60.399993, 1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.126000,-0.000000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058000,0.125000,-0.002000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039000,0.112000,0.001999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026000,0.127000,-0.002000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.001999,0.105000,-0.001000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017000,0.119000,-0.001000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005000,0.109000,-0.001000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 13: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023000,0.114000,0.000999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021000,0.136000,0.000999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004000,0.097000,-0.002000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029000,0.110000,0.001999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002000,0.113000,0.001999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025000,0.118000,-0.003000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026000,0.107000,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028000,0.130000,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034000,0.125000,-0.006000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025000,0.123000,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.108000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.104000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018999,0.118000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.124000,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.125000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.130000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.129000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 32: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.016999,0.094000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 33: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.013999,0.101000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 34: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038000,0.119000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017999,0.117000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.009999,0.107000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.135000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.121000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005999,0.104000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005999,0.104000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.049999,0.122000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.109000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008999,0.112000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.124000,-0.004999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 61: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.114000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.109000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.109000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.111000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014999,0.117000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.110000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.108000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.124000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.115000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.104000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.006000,0.088000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.083000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.118000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.133000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026999,0.120000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.109999,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.123000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 104: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.129000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 107: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.116999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.104999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.095999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.121999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.121999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 115: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.121999,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.123999,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014999,0.117999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014999,0.117999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.020999,0.115999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.020999,0.113999,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.118000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.119999,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.125999,-0.004999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034999,0.122999,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034999,0.100000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.020999,0.105999,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032999,0.119999,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.019000,0.098999,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012999,0.109999,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 136: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.098000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 137: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.087000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 141: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.001999,0.105000,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 143: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.124000,-0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.108000,0.006999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004999,0.106000,0.004999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017999,0.114000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.104000,0.005999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.001999,0.107000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.124000,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.124000,0.003999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036999,0.104000,0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 161: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036999,0.116000,0.003999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.111000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.109000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.109000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.109000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010999,0.106000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010999,0.106000,0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024999,0.123000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.107000,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.003999,0.110000,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.118000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.009999,0.106999,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036999,0.106999,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024999,0.121999,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024999,0.108999,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017999,0.108999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.118999,0.008000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.121999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 198: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012999,0.114999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032999,0.109999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.119999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.119999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.003999,0.109999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.115999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.097999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.006999,0.112999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.101999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.114999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.104999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036999,0.110999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018999,0.135999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.104999,0.003999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044999,0.125999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.134999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.108999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 230: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005999,0.104999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.079999,0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.005000,0.088999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.104000,0.007000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.013999,0.111000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 243: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.111000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.116000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.122000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 249: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.122000,0.006000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.121000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 251: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004999,0.116000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.109000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.113000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.100000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.129000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.129000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 261: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032999,0.094000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.107000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.020999,0.105000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038999,0.098000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.107000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 270: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.109000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 271: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.114000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.119000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.095000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.101000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.100000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.098000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.099000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024999,0.099000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 284: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.131000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008999,0.118000,0.009000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.095000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 289: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034999,0.101000,0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018999,0.104000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.114000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.105000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.110000,-0.006000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.106000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010999,0.115000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.127000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.125000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038999,0.110000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.125000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.096000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.100000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.099000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			default:SendClientMessage(playerid, COLOR_GREY, "Аксессуар усы, не будет отображаться на этом скине");
			}
		}
	case 19101..19120: {
			switch (skinid) {
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.007000,0.012999, 0.000000,173.499969,-154.900054, 1.151999,1.000000,1.145000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.015000,0.012999, 0.000000,173.499969,-149.600036, 1.205000,1.089999,1.200000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.183998,-0.015000,0.012999, 0.000000,173.499969,-149.600036, 1.205000,1.089999,1.200000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.026000,0.008998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.013000,0.008998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.023000,0.009998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.023000,0.009998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.023000,0.006998, 0.000000,177.799987,-149.600036, 1.123000,1.089999,1.200000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.023000,0.006998, 0.000000,177.799987,-149.600036, 1.123000,1.089999,1.200000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.003000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.026000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.002999,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,-0.002000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.004999,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,-0.012999,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,-0.012999,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.019999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.007999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 50: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.020000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.020000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.020000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.001000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.001000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.007999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.010000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 78: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 79: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.012000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.001999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.009001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,0.002999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.002000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.002000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.011000,-0.005001, -177.599960,179.399978,169.899948, 1.196000,1.089999,1.130000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,-0.011000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.007000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.024000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.002000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.007000,0.002998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.025000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.025000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.012000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.002000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.002000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.019999,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.013000,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,-0.001999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,-0.001999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.017999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.017999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.007999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.021999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.021999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.019999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,0.001000,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.168998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.008999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.009999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.009999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.197998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.332000,1.058999,1.191000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.00001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			default:SendClientMessage(playerid, COLOR_GREY, "Аксессуар каска, не будет отображаться на этом скине");
			}
		}
	case 19036,19037,19038: {
			switch(skinid) {
			case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.030999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.039999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.104998,0.044999,-0.000001, 0.000000,90.000000,90.500007, 1.000000,1.099000,1.080000);
			case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.128998,0.026999,-0.001000, 76.200012,73.100074,15.000033, 1.000000,1.130000,1.080000);
			case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.128998,0.037999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.217000,1.080000);
			case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.105997,0.029999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.017000,1.080000);
			case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.098997,0.054999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 8: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088997,0.040999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.034999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.081997,0.039999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 11: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.076998,0.039999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.076998,0.035999,0.001999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 13: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.082998,0.031999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094998,0.056999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079998,0.019999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.098998,0.035999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.081998,0.035999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.030999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.047999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.037999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.085000,1.080000);
			case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.034999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 27: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.046999,-0.006000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.051999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.052999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.080998,0.034999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.071998,0.030999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 41: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079998,0.042999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 42: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.036999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.041999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.029000,1.027000);
			case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.059999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 49: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.035999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 50: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.105998,0.012999,-0.008000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 54: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.052999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.028999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,0.994000,1.027000);
			case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.036999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.100000,1.027000);
			case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.050999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.130000,1.027000);
			case 61: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.048999,-0.004000, 138.500000,87.300071,-47.999965, 0.880000,0.993001,1.027000);
			case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.097998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.097998,0.041999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 68: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.051999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.070998,0.048999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.055999,0.005999, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 71: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.033999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 72: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.053999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 73: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.045999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 76: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.072998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.127000,1.027000);
			case 78: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.114998,0.023999,0.007999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094998,0.036999,0.009999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.042999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.076998,0.046999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.071998,0.040999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.071998,0.051999,-0.001000, -121.799896,96.400039,-147.299835, 0.880000,1.139000,1.027000);
			case 94: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.045998,0.024999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.950000,1.027000);
			case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.084998,0.013999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.982000,1.027000);
			case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.106998,0.041999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
			case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.060998,0.040999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
			case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094998,0.068999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.042999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 102: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.056999,-0.001000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.116000,1.027000);
			case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
			case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.098998,0.050999,-0.003000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
			case 107: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.100998,0.039999,-0.003000, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
			case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.037999,0.002999, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
			case 109: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.147000,1.027000);
			case 110: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.126000,1.027000);
			case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.108998,0.029999,-0.003000, -92.899909,88.200088,-176.599822, 1.020000,1.079000,1.027000);
			case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.027999,-0.003000, -92.899909,88.200088,-176.599822, 0.904000,0.976999,1.027000);
			case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.109998,0.051999,-0.001000, -92.899909,88.200088,-176.599822, 0.904000,1.115000,1.027000);
			case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
			case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
			case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.044999,-0.001000, -92.899909,94.700088,-176.599822, 0.904000,1.115000,1.027000);
			case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.040999,0.001999, -92.899909,92.700088,-176.599822, 0.904000,1.115000,1.027000);
			case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.279000,1.162999);
			case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.122000,1.093999);
			case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.033999,-0.002001, -92.899909,96.000068,-176.599822, 1.055000,1.122000,1.093999);
			case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.033999,-0.002001, -92.899909,92.200057,-174.999862, 1.025000,1.062000,1.093999);
			case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.033999,-0.000001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.041999,-0.001001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 128: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.047999,-0.003000, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 134: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.082998,0.029999,0.001999, -92.899909,103.300056,-179.899917, 0.871000,1.031000,1.093999);
			case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.071998,0.037999,-0.002000, -92.899909,103.300056,-174.699890, 0.871000,1.031000,1.093999);
			case 136: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.025999,-0.002000, -92.899909,103.300056,-173.099945, 0.871000,1.031000,1.093999);
			case 142: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.049999,-0.005001, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
			case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.031999,0.005999, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
			case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.060998,0.045999,0.003999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
			case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066998,0.043999,0.002999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
			case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.077998,0.023999,0.007999, -92.899909,105.900032,-176.499954, 0.871000,1.085999,1.093999);
			case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.058998,0.040999,-0.002001, -92.899909,96.300025,-176.099960, 0.871000,1.085999,1.093999);
			case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.052999,-0.005001, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
			case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.100998,0.028999,-0.001000, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
			case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.030999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
			case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
			case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.075998,0.046999,-0.000001, -92.899909,97.100036,-174.299972, 0.871000,1.085999,1.093999);
			case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.074998,0.043999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
			case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.067998,0.040999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
			case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.053999,-0.005001, -92.899909,92.100044,-175.899978, 0.871000,1.069999,1.093999);
			case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.042999,-0.001000, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
			case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.067998,0.044999,0.001999, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
			case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.047999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 177: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.041999,-0.007001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.099998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.122998,0.036999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079998,0.033999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.028999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.050999,-0.006001, -92.899909,92.100044,-175.899978, 0.980000,1.078999,1.093999);
			case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.034999,0.000999, -92.899909,92.100044,-176.700012, 0.980000,1.078999,1.093999);
			case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.075998,0.023999,0.004999, -92.899909,105.300056,-176.700012, 0.980000,1.119999,1.093999);
			case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.034999,-0.000001, -92.899909,105.300056,-173.700042, 0.980000,1.119999,1.093999);
			case 189: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.033999,0.000999, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 190: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 192: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.040999,-0.002000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 194: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 195: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.036999,0.000999, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
			case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.037999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
			case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.084998,0.022999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.070998,0.040999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,92.900062,-176.100021, 0.839000,0.981999,1.093999);
			case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.098998,0.048999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 214: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.063998,0.045999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 216: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.063998,0.044999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.048999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 219: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.068998,0.044999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 220: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.054998,0.059999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 221: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.046999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
			case 222: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.053999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
			case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.071999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 224: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 225: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 226: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.109998,0.057999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.068999,-0.000000, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.073998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,1.161999,1.093999);
			case 230: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.055998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,0.999000,1.093999);
			case 233: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.064998,0.048999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
			case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.053998,0.027999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
			case 236: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.084998,0.038999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,1.093000,1.093999);
			case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.021999,0.004999, -92.899909,106.200004,-176.100021, 0.839000,0.959000,1.093999);
			case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.051999,0.000999, -92.899909,87.499969,-176.100021, 0.839000,1.129000,1.093999);
			case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.099998,0.051999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.129000,1.093999);
			case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.062999,-0.001000, -92.899909,96.499946,-176.100021, 0.839000,1.182000,1.093999);
			case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.054999,-0.004000, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
			case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.045999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
			case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.097998,0.048999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,1.134000,1.093999);
			case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079998,0.031999,0.005999, -92.899909,96.499946,-176.100021, 0.839000,0.972000,0.954999);
			case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
			case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
			case 261: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094998,0.023999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,0.945999,1.113999);
			case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.081998,0.048999,-0.002001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
			case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094997,0.037999,-0.000001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
			case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.103997,0.034999,-0.005001, -92.899909,88.299957,-177.600051, 0.839000,1.097000,1.113999);
			case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 270: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093997,0.050999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 273: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079997,0.041999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 274: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088997,0.035999,-0.003001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.033999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.027999);
			case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.037999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085997,0.036999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.082997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.072997,0.056999,0.007999, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.034999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.050999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.075997,0.032000,-0.005001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.083997,0.038999,-0.008001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079997,0.045999,-0.000001, 95.799949,87.600059,-4.900008, 0.878000,1.087000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079997,0.040999,-0.000001, 95.799949,67.300048,-4.900008, 0.878000,1.087000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090997,0.044999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090997,0.033999,-0.004001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090997,0.052999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.033999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			default:SendClientMessage(playerid, COLOR_GREY, "Аксессуар маска, не будет отображаться на этом скине");
			}
		}
	case 18976: {
			switch (skinid) {
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
			default:SendClientMessage(playerid, COLOR_GREY, "Аксессуар спорт-шлем, не будет отображаться на этом скине");
			}
		}
	case 18977, 18978, 18979, 18645: {
			switch (skinid) {
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
			default:SendClientMessage(playerid, COLOR_GREY, "Аксессуар спорт-шлем, не будет отображаться на этом скине");
			}
		}
	case 19421, 19422, 19423, 19424: {
			switch (skinid) {
			case 1: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.286000,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.303999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
			case 3: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.293999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
			case 4: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
			case 5: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.355999,0.071000,0.005000, -81.499992,-113.599922,94.599967, 1.099000,1.044999,1.000000);
			case 6: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.347999,0.090000,0.000000, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.323998,0.104999,-0.008999, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 8: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.301999,0.112999,0.001999, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.314998,0.089999,0.001999, -90.599975,-108.399971,91.199943, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.243998,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333998,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.313999,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 13: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.361999,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.338999,0.102000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.325999,0.096000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 16: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.367999,0.096000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.346999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.299998,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 19: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.354999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.336999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.336999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 22: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.357999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 23: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 24: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.349999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 27: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.338999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.343999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342999,0.102000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 33: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.294999,0.092000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 34: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.348999,0.108000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 35: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.328999,0.108000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 36: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.324999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 37: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.324999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 38: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.251999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 39: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.251999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.298999,0.086000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 43: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.277999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 44: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.277999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 45: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.299999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.323999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 47: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 48: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.343999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 57: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.354999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 58: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.278999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 59: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.319999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 60: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.344999,0.109000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 61: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.319999,0.109000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 66: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 68: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 71: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 72: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.320999,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 73: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.320999,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 78: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.380998,0.109999,0.003000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 79: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.364998,0.109999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 90: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.100000,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 91: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.100000,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 93: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.328998,0.094999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 94: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.260998,0.094999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 95: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.266998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 96: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.360998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 97: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.311998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 98: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.318998,0.098999,0.000000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 100: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.341998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 102: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331998,0.102999,-0.008999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 105: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.366998,0.082000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 106: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 107: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 108: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 109: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 110: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 111: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.360998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 112: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.309998,0.084999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 113: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.332998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 114: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.339998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 115: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 116: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 117: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.304998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 118: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.304998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 119: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 120: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 121: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.339998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 122: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.091999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.091999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 124: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 125: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 126: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 127: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 128: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.316998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 134: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.247998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 136: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.247998,0.099999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 137: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.319998,0.089999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 141: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.319998,0.089999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 142: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.339998,0.097999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 143: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.348998,0.109000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 147: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.109000,0.007000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 148: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.095000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 150: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.095000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 153: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.110000,0.008000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 154: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.312998,0.110000,-0.004999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 155: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.110000,-0.010999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 156: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327998,0.110000,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 160: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.303998,0.098000,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 163: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.361998,0.098000,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 164: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.355998,0.107000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 165: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.271998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 166: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.271998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 170: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 171: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 172: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 173: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 174: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 175: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 176: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 177: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 179: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 180: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 181: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.086000,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 182: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 183: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 184: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.103999,-0.006999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 185: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.330998,0.090999,-0.006999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 186: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.330998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 187: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.111999,0.013000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 188: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.099999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 189: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326998,0.099999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 190: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 191: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 194: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 195: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.358998,0.101999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 202: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.324998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 206: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.324998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 208: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.318998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.256998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 211: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.330998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 212: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.252998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 217: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 219: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.091999,0.003000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 220: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.091999,0.003000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 221: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.351998,0.111999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 222: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.351998,0.111999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 223: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.092999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 227: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.361998,0.096999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 228: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331998,0.109999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 229: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.274998,0.109999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 230: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.301998,0.101999,-0.003999, -90.599975,-104.999977,92.599967, 1.109000,1.000000,1.000000);
			case 233: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.336998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
			case 234: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.277998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
			case 235: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.268998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
			case 236: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.274998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 239: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.387998,0.111999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 240: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.325998,0.087999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 247: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.345998,0.103999,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 248: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.345998,0.103999,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 250: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.103999,-0.002999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 252: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.103999,-0.005999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 254: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.103999,-0.005999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 255: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.332998,0.103999,0.009000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 258: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.348998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 259: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.348998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 261: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.276998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 262: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.317998,0.083999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 265: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.317998,0.083999,-0.004999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 266: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.304998,0.070999,-0.004999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 267: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.531998,0.082000,-0.039000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 269: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.368998,0.068000,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 270: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.355998,0.091000,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 271: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.339998,0.094000,0.002000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 272: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 273: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.315998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 274: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 275: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 276: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 280: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 281: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 282: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 283: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 284: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.104999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 285: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.090999,0.002000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 286: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.086999,-0.003999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 287: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.345998,0.097999,-0.000999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 288: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.341998,0.097999,-0.000999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 289: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.307996,0.097000,-0.000999, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 290: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.307996,0.097000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 291: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.307996,0.097000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 292: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.328996,0.074000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 293: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.338996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 294: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.338996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 295: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.260996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 296: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.260996,0.093999,0.007001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 297: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.318996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 298: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.312996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 300: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 301: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 302: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 303: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 304: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 305: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 306: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 307: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 308: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 309: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 310: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			default:SendClientMessage(playerid, COLOR_GREY, "Аксессуар наушники, не будет отображаться на этом скине");
			}
		}
	case 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053: {
			switch (skinid) {
			case 1: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.003998,-0.001999, 51.200016,53.199977,142.800018, 0.963999,0.916999,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.001999,-0.005999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.001999,-0.007999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.001999,-0.012999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.018998,-0.000999, 51.200016,70.499969,142.800018, 1.354999,1.441999,1.000000);
			case 8: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.003998,-0.011999, 51.200016,70.499969,142.800018, 1.354999,1.441999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 13: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.002998,-0.015999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.010998,-0.012999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 23: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 24: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.009998,-0.011999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.008998,-0.008999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.008998,-0.008999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.008998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 31: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 32: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,0.008001, 51.200016,70.499969,142.800018, 0.964999,0.921999,1.000000);
			case 34: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 35: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.054000,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 36: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.054000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 37: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.054000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 38: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.024000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.024000,-0.003998,-0.010998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 41: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,0.001001, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 42: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,-0.012998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.015998,-0.008998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.008998,-0.008998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,0.001001,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,0.001001,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.007998,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 51: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.010998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 52: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.010998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 53: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.003998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.003998,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.026999,0.005001,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003000,-0.003998,-0.007998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003000,-0.011998,-0.004998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003000,-0.002998,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 61: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011999,-0.014998,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.007998, 51.200016,70.499969,142.800018, 1.271999,1.359999,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.007998, 51.200016,70.499969,142.800018, 1.271999,1.359999,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.010998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 78: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.014998,-0.005998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.014998,-0.005998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,0.001001,-0.028998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,-0.007998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.009998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.001998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.017998,-0.008998, 51.200016,70.499969,142.800018, 1.093999,1.223999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.040998,-0.008998, 51.200016,70.499969,142.800018, 1.093999,1.223999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.002998,0.001001, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.002998,-0.002998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.007998,-0.006998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.003998,-0.004998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 104: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,0.001001,-0.001998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.026999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.363999,1.386999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.026999,0.000001,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 107: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,0.000001,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.022999,-0.008998,-0.012998, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.001001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.001001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.006000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.128999,1.127999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.007998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.001998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.007000,-0.010998,-0.010998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.007000,-0.004998,-0.005998, 51.200016,70.499969,142.800018, 1.232999,1.202999,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.024999,-0.005998,-0.005998, 51.200016,70.499969,142.800018, 1.232999,1.202999,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.011998,0.013001, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 133: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.005998,-0.008998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 134: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.012998,-0.005998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 142: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.004998,-0.001998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.004998,-0.001998, 51.200016,70.499969,142.800018, 0.984000,0.977999,1.000000);
			case 149: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.015998,-0.001998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.010998,-0.005998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.013998,-0.005998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
			case 155: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.000998,-0.005998, 51.200016,70.499969,142.800018, 1.250000,1.087999,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.000998,-0.009998, 51.200016,70.499969,142.800018, 1.064000,1.210999,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.009998,-0.008998, 51.200016,70.499969,142.800018, 1.064000,1.210999,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.212000,1.210999,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.212000,1.210999,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.001998,-0.004998, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
			case 167: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.010998,-0.013999, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.005998,-0.004998, 51.200016,70.499969,142.800018, 1.016000,1.304999,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.005998,0.002001, 51.200016,70.499969,142.800018, 1.292000,1.304999,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.005998,-0.007998, 51.200016,70.499969,142.800018, 1.292000,1.304999,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.008998,0.001001, 51.200016,70.499969,142.800018, 0.956000,1.095999,1.000000);
			case 173: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.006998,0.000001, 51.200016,70.499969,142.800018, 1.195000,1.197999,1.000000);
			case 174: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.195000,1.197999,1.000000);
			case 175: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.450000,1.353999,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 181: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.017998,-0.008998, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.011998,-0.001998, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.008998,-0.010999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.000000, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.008999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.008999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 195: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 196: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 198: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.014998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.021999,-0.008998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 201: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.021999,-0.008998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 209: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,0.008000, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.011998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 214: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.011998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 215: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.003998,-0.003999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 220: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.010998,-0.003999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 224: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 225: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.003998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 231: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.003998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 233: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 239: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.009998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.002998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 255: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.008998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 263: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 269: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 270: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,0.005001, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 271: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.008998,-0.006999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.020000,-0.013998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 283: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 285: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.002998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 287: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 288: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 289: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.050999,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.028999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 307: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			default:SendClientMessage(playerid, COLOR_GREY, "Аксессуар часы, не будет отображаться на этом скине");
			}
		}
	case 18910, 18909, 18908, 18907, 18906: {
			switch (skinid) {
			case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,-0.001000,0.000000, -92.499984,-7.199993,-98.099990, 1.114999,1.000000,0.901000);
			case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.006999,0.007000, -92.499984,-7.199993,-98.099990, 1.188999,1.256000,1.157000);
			case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.141999,-0.000000,0.001999, -92.499984,-7.199993,-98.099990, 1.175999,1.256000,1.083999);
			case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.141999,-0.000000,0.001999, -92.499984,-7.199993,-98.099990, 1.175999,1.256000,1.083999);
			case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.123000,0.017000,0.001999, -84.299972,-5.799993,-98.099990, 1.216999,1.256000,1.011999);
			case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.091000,0.003000,0.001999, -84.299972,-5.799993,-98.099990, 1.237999,1.256000,1.057999);
			case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.104000,0.013000,0.006000, -91.399986,-5.799993,-92.200004, 1.262999,1.256000,1.122999);
			case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071000,-0.015999,-0.000000, -91.399986,-5.799993,-92.200004, 1.181999,1.256000,0.974999);
			case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.100000,0.009000,-0.000000, -91.399986,-5.799993,-92.200004, 1.262999,1.256000,0.974999);
			case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.085999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 0.994999,1.256000,1.021000);
			case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 1.037999,1.256000,1.094000);
			case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 1.132999,1.256000,1.094000);
			case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,0.004000, -91.399986,-5.799993,-92.200004, 1.157999,1.056999,0.877000);
			case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,0.004000, -91.399986,-5.799993,-92.200004, 1.005999,1.056999,1.086000);
			case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,-0.002000, -91.399986,-5.799993,-92.200004, 1.277999,1.056999,1.107000);
			case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097999,0.016000,-0.000000, -91.399986,-5.799993,-92.200004, 1.022999,1.056999,0.863000);
			case 45: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097999,-0.002999,-0.000000, -91.399986,-5.799993,-92.200004, 1.022999,1.056999,1.034000);
			case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120999,0.020000,-0.000000, -91.399986,-5.799993,-92.200004, 1.135999,1.056999,1.154000);
			case 47: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120999,0.011000,-0.000000, -91.399986,-5.799993,-92.200004, 1.135999,1.056999,1.154000);
			case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.130999,-0.004999,-0.000000, -91.399986,-5.799993,-92.200004, 1.189999,1.056999,1.195000);
			case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.130999,0.024000,-0.000000, -91.399986,-5.799993,-92.200004, 1.189999,1.056999,1.195000);
			case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.092000,0.002000,-0.000000, -91.399986,-5.799993,-92.200004, 1.002999,1.056999,0.939000);
			case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.126999,0.006000,-0.000000, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,1.119000);
			case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,0.001000,-0.000000, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
			case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,0.001000,0.000999, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
			case 68: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,0.027000,0.000999, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
			case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,-0.017999,0.003999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,0.950000);
			case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,0.012000,0.004999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,0.950000);
			case 76: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,-0.019999,0.004999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,1.005000);
			case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.096000,-0.010999,0.000999, -91.399986,-5.799993,-92.200004, 1.084999,1.358999,0.969000);
			case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.096000,-0.010999,0.007000, -91.399986,-5.799993,-92.200004, 1.206999,1.358999,1.074000);
			case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.096000,-0.010999,-0.000000, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
			case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.114000,0.004000,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
			case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.092000,-0.004999,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
			case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.099000,0.021000,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,1.086000);
			case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.115000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.133999,1.358999,1.158000);
			case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.115000,0.003000,0.001999, -91.399986,-5.799993,-92.200004, 1.133999,1.358999,1.158000);
			case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.115000,-0.001999,-0.004000, -91.399986,-5.799993,-92.200004, 1.318998,1.358999,1.158000);
			case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.118000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.197998,1.126999,0.946000);
			case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.086000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.055998,1.126999,0.946000);
			case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.126999,1.101000);
			case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.080998,1.126999,0.975000);
			case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.080998,1.126999,0.975000);
			case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,0.975000);
			case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,-0.005999,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,1.113000);
			case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.000000,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,1.113000);
			case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.000000,-0.002000, -91.399986,-5.799993,-92.200004, 1.242998,1.126999,1.113000);
			case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.000000,-0.002000, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.008000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.129000,-0.009999,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.129000,0.008000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.119998,1.157999,1.061000);
			case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.181998,1.157999,1.135000);
			case 151: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.449998,1.497999,1.211000);
			case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.001999, -91.399986,-5.799993,-92.200004, 1.075998,1.218000,1.063000);
			case 156: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,-0.002999,0.001999, -91.399986,-5.799993,-92.200004, 1.325998,1.434000,1.209000);
			case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.084000,0.015000,0.001999, -91.399986,-5.799993,-92.200004, 1.171998,1.086000,0.945000);
			case 162: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.171998,1.086000,0.945000);
			case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.000998,1.086000,0.897000);
			case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.002000,0.001999, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
			case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.002000,0.001999, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
			case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.010000,0.005000, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
			case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.010000,-0.001999, -91.399986,-5.799993,-92.200004, 1.091998,1.086000,1.215000);
			case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.132000,-0.007999,0.003000, -91.399986,-5.799993,-92.200004, 1.091998,1.086000,1.142000);
			case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.132000,-0.007999,0.003000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
			case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.112000,0.006000,0.003000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
			case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.139000,-0.006000,0.000000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
			case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.044998,1.086000,1.035000);
			case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.044998,1.086000,1.035000);
			case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.135000,-0.002999,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.124000,-0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,-0.010000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,-0.001000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 189: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.125000,-0.008000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.160998,1.306000,1.239000);
			case 192: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.160998,1.306000,1.239000);
			case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.222998,1.306000,1.103000);
			case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.020999,0.001000, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
			case 207: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.087000,0.006999,-0.000999, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
			case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.087000,-0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
			case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.109000,-0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.180998,1.306000,0.950000);
			case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.006000,0.002000, -91.399986,-5.799993,-92.200004, 1.180998,1.306000,0.950000);
			case 221: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.002000,0.002000, -91.399986,-5.799993,-92.200004, 1.301998,1.306000,1.174000);
			case 222: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,-0.007999,0.002000, -91.399986,-5.799993,-92.200004, 1.301998,1.306000,1.204000);
			case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.017000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
			case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.017000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
			case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.004000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
			case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097000,-0.009999,0.002000, -91.399986,-5.799993,-92.200004, 1.200998,1.306000,1.009000);
			case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,-0.020999,0.002000, -91.399986,-5.799993,-92.200004, 0.980998,1.115000,0.973000);
			case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064000,-0.004999,0.002000, -91.399986,-5.799993,-92.200004, 1.021999,1.115000,0.973000);
			case 236: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.002000, -91.399986,-5.799993,-92.200004, 1.051999,1.115000,1.028000);
			case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.010000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
			case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
			case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
			case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.237999,1.115000,1.182000);
			case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.104000,-0.002999,0.002000, -91.399986,-5.799993,-92.200004, 1.302999,1.267000,1.182000);
			case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.099999,1.267000,1.007000);
			case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.099999,1.267000,1.007000);
			case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093000,0.002000,-0.000999, -91.399986,-5.799993,-92.200004, 1.200999,1.267000,0.945000);
			case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.100000,-0.008999,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
			case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.122000,0.000000,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
			case 273: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.081000,0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
			case 274: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.092000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.092000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.102000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.102000,0.016000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.102000,0.004000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.110000,0.011000,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
			case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.110000,0.005000,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
			case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.110000,-0.002999,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
			case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.110000,0.002000,0.001000, -91.399986,-5.799993,-92.200004, 1.177999,1.267000,1.027000);
			case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,-0.017999,0.001000, -91.399986,-5.799993,-92.200004, 1.177999,1.267000,1.027000);
			case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			default:SendClientMessage(playerid, COLOR_GREY, "Аксессуар бандана, не будет отображаться на этом скине");
			}
		}
	case 3026: {
			switch(skinid) {
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.204000,-0.064999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000 );
			case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.237000,-0.064999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000 );
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.228000,-0.062999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000 );
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.056999,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,0.918998,0.905000 );
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.117999,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000 );
			case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.079999,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000 );
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.219000,-0.057999,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000 );
			case 8: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207000,-0.061999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000 );
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207000,-0.058999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000 );
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.262000,-0.071999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000 );
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.189000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.184000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.116000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.158000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156000,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.184999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.129999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.159999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.159999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.243000,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.167000,-0.077000,-0.014999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.188000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.188000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 31: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.239000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.173000,-0.068999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.199000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.150000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 38: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.222000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 39: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.222000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 41: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.067000,-0.017999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 42: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.067000,-0.017999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.196000,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.203000,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.171999,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 50: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 53: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.218999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.232999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.174999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.174999,-0.074000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.116999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.202999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 62: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 65: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.115999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.141999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.146999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.146999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.155999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.167999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.162999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 77: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.118999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.136999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.136999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.888999 );
			case 88: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.124999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.911998,0.753999 );
			case 89: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.124999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.911998,0.753999 );
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.057000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.999998,0.826000 );
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.057000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
			case 93: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.122999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.113999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.022999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.071999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.806000 );
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.046999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.806000 );
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.046999,-0.112000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.853998,0.900000 );
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.055999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.853998,0.900000 );
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.055999,-0.123000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.097999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.035999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.093999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.051999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.107999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.098999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.112999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 129: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.186999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 130: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 131: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.069000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.175999,-0.069000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.078000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156999,-0.064000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.093999,-0.094000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161999,-0.082000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.111999,-0.086000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.076999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 144: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 146: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.068000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.068000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.060000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.081000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 152: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.115999,-0.064000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.072000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.107999,-0.072000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.086000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 157: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.065000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.067999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.127999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.127999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.095999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.094999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 190: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.044999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 198: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 201: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 203: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 204: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 207: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.095999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.154999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.063999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.148999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 214: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 215: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 216: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 219: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 224: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 225: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.103999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.043999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.068999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.139999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.103999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 233: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.067999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.045999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.072999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.063999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 253: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.113999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.062999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.130999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 263: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.078000,-0.011999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.097999,-0.078000,-0.011999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1,   0.121000,-0.078000,-0.030000 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.064999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.064999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.102999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.109999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.090000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.080999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.080999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.069999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.069999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.057999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.060999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.070999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.135999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.130999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
			default:SendClientMessage(playerid, COLOR_GREY, "Аксессуар рюкзак, не будет отображаться на этом скине");
			}
		}
	case 19878:
		{
			switch(skinid)
			{
			case 1..311:SetPlayerAttachedObject(playerid,5,19878,1,0.146999,-0.155000,-0.012000,-88.499992,-4.499999,-42.999996,0.607999,0.582000,1.000000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар скейт, не будет отображаться на этом скине");
			}
		}
	case 19319, 19318, 19317:
		{
			switch (skinid)
			{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.080000,-0.118999,-0.045999, 0.000000,113.100006,0.000000, 0.717999,1.000000,0.702999);
			case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.023000,-0.130000,-0.034000, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.023000,-0.127000,-0.034000, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063000,-0.119000,-0.034000, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082999,-0.159000,-0.052999, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082999,-0.148999,-0.052999, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082999,-0.120999,-0.052999, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.095999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.076999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.084999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.089999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.111999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.096999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.108999,-0.052999, -8.800000,119.000007,8.100000, 0.688000,1.000000,0.696000);
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.108999,-0.052999, 2.799998,119.000007,0.900001, 0.688000,1.000000,0.696000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.110999,-0.052999, 10.099999,119.000007,-6.299997, 0.688000,1.000000,0.696000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.119999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.142999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.129999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.117999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.117999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.106999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.145999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.105999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.079999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.102999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.102999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.113999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.113999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.113999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.094999,-0.112999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.094999,-0.092999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.134999,-0.106999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.134999,-0.134999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.120999,-0.052999, 10.799995,114.099998,-4.700001, 0.688000,1.000000,0.696000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.109999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.109999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.082999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.128999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.128999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.103999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.126999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.126999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.099999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.105999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.121999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.097999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.097999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.134999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.129999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.110999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.110999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.130999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.130999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.095999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.088999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.118999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.106999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.123999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.111999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.137999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.116999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.157000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.140999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.163000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.134000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.134000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.104000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.117000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.130000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.121000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.132000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.141000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.108000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.123000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.083000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.109000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.123000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.127000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.097000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.090000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.099000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.087000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.120000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.084000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.087000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 141: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.083000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.135000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.058000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 144: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.058000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.058000,-0.102000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.088000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.077000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.098000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.112000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.139000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.089000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.109000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.101000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.103000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 167: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 168: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.083000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.116000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.110000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.076000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.134000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.134000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.130000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.162000,-0.096000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.070000,-0.120000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.070000,-0.099000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.126000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.126000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.102000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.100000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.119000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.102000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 203: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 204: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.101000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.122999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.082000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.114000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.097000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.133000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.083000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 231: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.085000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.098000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.086000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.118000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.124000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 241: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.139000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 242: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.137000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 249: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.113000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.113000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.131000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.131000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.137000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.137000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.292000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.052000,-0.178000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.133000,-0.127000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.134000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.111000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.124000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.124000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.176000,-0.108000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.176000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.094000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.131000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			default: SendClientMessage(playerid, COLOR_GREY, "Аксессуар гитара, не будет отображаться на этом скине");
			}
		}
	case 371: {
			switch(skinid) {
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.087999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.041999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.181999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.012000,-0.139999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.139999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 8: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.122999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.107999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.077999,-0.127999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.030000,-0.105999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.099999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.099999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.021999,-0.126999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 41: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 42: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.098999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.118999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.032000,-0.118999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.032000,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 53: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.066999,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.066999,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.097999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.087999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.037000,-0.125999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.038999,-0.099999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.099999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.007999,-0.117999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 62: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.020999,-0.106999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 65: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.103999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.003000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.003000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.031000,-0.115999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.115999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.046000,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.007999,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.002000,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.017999,-0.116999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 77: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.051999,-0.116999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.024000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.039000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.039000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 85: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.002000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.121999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 88: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.111999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.009000,-0.094999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 93: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.009000,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.067999,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.030999,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.045000,-0.120999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.101999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.140999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.026999,-0.131999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.026999,-0.159999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.044999,-0.156999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.012999,-0.170999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.147999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.147999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.096999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.114999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.114999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.041999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.135999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.135999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.093999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.050999,-0.093999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.017000,-0.094999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.091999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.127999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.098999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.089999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 141: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.084999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.100999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.100999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.087999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.135999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 152: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.122999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 157: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.105999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.105999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.093999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.102999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.042000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.042000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.045999,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.045999,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 167: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 168: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.086999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.119999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.119999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.106999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.035000,-0.106999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 190: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 196: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.047999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 198: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.030000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 199: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.067999,-0.101999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.101999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 201: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.094999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 214: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 215: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 216: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 219: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.103999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.035000,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.024999,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.099999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.030999,-0.085999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.085999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 233: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.024000,-0.093999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.026000,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 241: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.124999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 242: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.124999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 243: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.031999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.004999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.068000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 253: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.010999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.016000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.002999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.039999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.039999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.231000,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 268: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.157999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.129999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.129999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.010000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.005999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.002000,-0.136999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.054000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.054000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.127999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.055000,-0.119000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.041000,-0.130999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.073999,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.073999,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.106999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.123999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.120999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.120999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			default:SendClientMessage(playerid, COLOR_GREY, "Аксессуар рюкзак, не будет отображаться на этом скине");
			}
		}
	case 19559: {
			switch(skinid) {
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000 );
			case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085000,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000 );
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085000,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000 );
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.046999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.067000,1.079998,1.029000 );
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.047999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.330000,1.319998,1.228000 );
			case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.095000,-0.047999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.978000,1.154998,1.164000 );
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049000,-0.039000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.084000,1.154998,1.164000 );
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062000,-0.039000,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.942000,1.184998,1.164000 );
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.077000,-0.039000,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.942000,1.184998,1.164000 );
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.052000,-0.048999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.869000,1.184998,1.164000 );
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.093000,-0.035999,-0.006000 ,  0.000000,90.000000,0.000000 ,  0.869000,1.184998,1.164000 );
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.044999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000 );
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.044999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000 );
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000 );
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000 );
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.108000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000 );
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.014999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000 );
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.014999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.012000,1.071998,1.093000 );
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.078000,1.071998,1.093000 );
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.951000,1.071998,1.093000 );
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.062000,1.173999,1.093000 );
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.062000,1.173999,1.093000 );
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.033999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.119000,1.173999,1.093000 );
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.033999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.119000,1.173999,1.093000 );
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.058000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.885001,1.006999,1.093000 );
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.885001,1.006999,1.093000 );
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000 );
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000 );
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000 );
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.965001,0.922999,0.975000 );
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.917001,0.961999,0.894000 );
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.103000,-0.017000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.917001,0.961999,0.894000 );
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.103000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000 );
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.090000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000 );
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.090000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000 );
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.146999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.962001,0.902998,0.999000 );
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.851001,0.902998,0.999000 );
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.972001,1.047998,1.178999 );
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.009000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.972001,1.047998,1.178999 );
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.029000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.036001,0.948998,1.219999 );
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.020000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.036001,0.948998,1.219999 );
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.020000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999 );
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.031000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999 );
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.040000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999 );
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.091000,-0.050999,0.000000 ,  0.000000,90.000000,0.000000 ,  1.096999,0.971998,1.035001 );
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.102999,-0.031999,0.008000 ,  0.000000,90.000000,0.000000 ,  1.096999,0.971998,1.138001 );
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085999,-0.036998,0.008000 ,  0.000000,90.000000,0.000000 ,  1.096999,1.117999,1.138001 );
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085999,-0.072999,0.002999 ,  0.000000,90.000000,0.000000 ,  1.096999,1.117999,1.138001 );
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.022999,-0.043999,0.002999 ,  0.000000,90.000000,0.000000 ,  0.933999,1.000999,1.138001 );
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.022999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  0.901998,1.000999,1.138001 );
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.065999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.039999,1.176999,1.394001 );
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.039999,1.176999,1.394001 );
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.031999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.034999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.177999,1.176999,1.394001 );
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.198999,1.176999,1.394001 );
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.198999,1.176999,1.394001 );
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.026999,1.176999,1.394001 );
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.026999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.018000,-0.066999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.144999,1.436999,1.394001 );
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001 );
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001 );
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001 );
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.948999,1.224999,1.394001 );
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.256999,1.394001 );
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001 );
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001 );
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001 );
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,0.001999 ,  0.000000,90.000000,0.000000 ,  1.123998,1.363999,1.394001 );
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,0.001999 ,  0.000000,90.000000,0.000000 ,  0.980999,1.067999,1.082000 );
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.067999,1.432999,1.372001 );
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.939999,0.939999,1.126001 );
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.007000 ,  0.000000,90.000000,0.000000 ,  0.869999,0.939999,1.126001 );
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001 );
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001 );
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001 );
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.154999,1.391999,1.199001 );
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.080999,1.245999,1.199001 );
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.870999,1.104999,1.199001 );
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.979999,1.306999,1.199001 );
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.080999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.487999,1.199001 );
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.080999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.487999,1.199001 );
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.001999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001 );
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.001999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001 );
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001 );
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.088999,1.270001 );
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.068999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.044999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.104999,1.239999,1.270001 );
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.104999,1.239999,1.270001 );
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.050999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.050999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.043999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.069999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.069999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.039999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.006000,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.058999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.892999,1.239999,1.270001 );
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.016000,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.892999,1.239999,1.270001 );
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.040999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.077999,1.239999,1.270001 );
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.040999,-0.010000 ,  0.000000,90.000000,0.000000 ,  0.950999,1.239999,1.270001 );
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.021999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.239999,1.270001 );
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.034999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.034999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.017999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078999,-0.080999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.057999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.039998,1.337998,1.324001 );
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.057999,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.982998,1.153998,1.324001 );
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.057999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001 );
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.077999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001 );
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.077999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001 );
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.068999,0.003999 ,  0.000000,90.000000,0.000000 ,  1.009999,1.295998,1.324001 );
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.030999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.097998,1.295998,1.324001 );
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.030999,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.045999,1.053998,1.249001 );
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.052999,-0.005999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.239999,1.130998,1.372001 );
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.042999,-0.012999,-0.014000 ,  0.000000,90.000000,0.000000 ,  1.239999,1.130998,1.372001 );
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.029999,-0.038999,-0.010000 ,  0.000000,90.000000,0.000000 ,  0.867999,0.918998,1.073001 );
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.015999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.042998,1.238001 );
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.051999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.245999,-0.034999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
			case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
			case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.048999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.036999,-0.011999,-0.017000 ,  0.000000,90.000000,0.000000 ,  1.216999,1.113998,1.238001 );
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.036999,-0.009999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.026999,0.996998,1.238001 );
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.037999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.073999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
			case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.082999,0.974998,1.238001 );
			case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.082999,0.974998,1.238001 );
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.037999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001 );
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.051999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001 );
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001 );
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001 );
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001 );
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.079999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001 );
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.009000,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.038999,1.172998,1.238001 );
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.009000,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.074999,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.076999,1.220998,1.238001 );
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.076999,1.220998,1.238001 );
			default:SendClientMessage(playerid, COLOR_GREY, "Аксессуар рюкзак, не будет отображаться на этом скине");
			}
		}
	}
	return 1;
}
stock texdraw_skill(playerid,weapon) {
	for(new i = 0;i < 4;i++) {
		TextDrawShowForPlayer(playerid,skill_td[i]);
		if(i < 2) PlayerTextDrawShow(playerid,skill_player_td[playerid][i]);
	}
	switch(weapon) {
	case 0: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"SD-PISTOL");
	case 1: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"Desert Eagle");
	case 2: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"SHOTGUN");
	case 3: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"MP5");
	case 4: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"AK-47");
	case 5: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"M4");
	}
	new str[13];
	format(str,sizeof str, "%d/100",PI[playerid][pGunSkill][weapon]);
	PlayerTextDrawSetString(playerid,skill_player_td[playerid][1],str);
	SetTimerEx("destroyTDskill",2500,false,"i",playerid);
}
CB: destroyTDskill(playerid) {
	for(new i = 0;i < 4;i++) {
		TextDrawHideForPlayer(playerid,skill_td[i]);
		if(i < 2) PlayerTextDrawHide(playerid,skill_player_td[playerid][i]);
	}
}
const UNOCCUPIED_SYNC = 209;
IPacket:UNOCCUPIED_SYNC(playerid, BitStream:bs)
{
	new UNOCCUPIED[PR_UnoccupiedSync];
	BS_ReadUint8(bs, 8);
	BS_ReadUnoccupiedSync(bs, UNOCCUPIED);
	//
	if(!(-1.0 <= UNOCCUPIED[PR_roll][0] <= 1.00000)
			|| !(-1.0 <= UNOCCUPIED[PR_roll][1] <= 1.00000)
			|| !(-1.0 <= UNOCCUPIED[PR_direction][0] <= 1.00000)
			|| !(-1.0 <= UNOCCUPIED[PR_roll][2] <= 1.00000)
			|| !(-1.0 <= UNOCCUPIED[PR_direction][1] <= 1.00000)
			|| !(-1.0 <= UNOCCUPIED[PR_direction][2] <= 1.00000)
			|| !(-20000.0 <= UNOCCUPIED[PR_position][0] <= 20000.00000)
			|| !(-20000.0 <= UNOCCUPIED[PR_position][1] <= 20000.00000)
			|| !(-20000.0 <= UNOCCUPIED[PR_position][2] <= 20000.00000)
			|| !(-1.00000 <= UNOCCUPIED[PR_angularVelocity][0] <= 1.00000)
			|| !(-1.00000 <= UNOCCUPIED[PR_angularVelocity][1] <= 1.00000)
			|| !(-1.00000 <= UNOCCUPIED[PR_angularVelocity][2] <= 1.00000)
			|| !(-100.00000 <= UNOCCUPIED[PR_velocity][0] <= 100.00000)
			|| !(-100.00000 <= UNOCCUPIED[PR_velocity][1] <= 100.00000)
			|| !(-100.00000 <= UNOCCUPIED[PR_velocity][2] <= 100.00000)) return false;
	return true;
}

stock A_SetPlayerSkin(playerid,skin) {
	SetPlayerSkin(playerid,skin);
	for(new i=0; i < 10; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	for(new i = 0; i < 8; i++) {
		if(!PI[playerid][pSlotItem][i]) continue;
		AtachPlayerAcces(playerid, PI[playerid][pSlotItem][i],GetPlayerSkin(playerid));
	}
	for(new i; i < 10; i++) {
		police_eqm[playerid][i] = 0;
	}
	return 1;
}
stock Convertss(number) {
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(string, 30, "%d:%02d:%02d", hours, mins, secs);
	else format(string, 30, "%d:%02d", mins, secs);
	return string;
}
stock GetCoordDoorVehicle(vehicleid, &Float:x, &Float:y, &Float:z) // угон
{
	new Float:angle,Float:distance;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);  
	distance = distance/2 + 0.1; 
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, angle); 
	x -= (distance * floatsin(-angle+89, degrees)); 
	y -= (distance * floatcos(-angle+89, degrees)); 
	return 1;
}  
stock GetCoordBonnetVehicle(vehicleid, &Float:x, &Float:y, &Float:z) {
	new Float:angle,Float:distance;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
	distance = distance/2 + 0.1;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, angle);
	x -= (distance * floatsin(-angle+180, degrees));
	y -= (distance * floatcos(-angle+180, degrees));
	return true;
}

stock GetCoordBootVehicle(vehicleid, &Float:x, &Float:y, &Float:z) {
	new Float:angle,Float:distance;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
	distance = distance/2 + 0.1;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, angle);
	x += (distance * floatsin(-angle+180, degrees));
	y += (distance * floatcos(-angle+180, degrees));
	return true;
}

stock GetBoatDoorPos(vehicleid, &Float:x, &Float:y, &Float:z )
{
	new Float:v_angle, Float:v_distance_d, Float:v_distance_a ;
	switch ( GetVehicleModel ( vehicleid ) )
	{
	case 454: x = -0.6802, y = -2.6828, z = 0.8636 ;
	}
	x += 0.20 ;
	v_distance_d = floatsqroot ( ( x * x ) + ( y * y ) ) ;
	v_distance_a = atan2 ( x, y ) ;
	GetVehicleZAngle ( vehicleid, v_angle ) ;
	GetVehiclePos ( vehicleid, x, y, z ) ;
	x += v_distance_d * floatsin ( v_distance_a - v_angle, degrees ) ;
	y += v_distance_d * floatcos ( v_distance_a - v_angle, degrees ) ;
	return 1 ;
}

stock GetCoordDoorTrailer(vehicleid, &Float:x, &Float:y, &Float:z)
{
	new Float:angle,Float:distance;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
	distance = distance/2 + 0.1;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, angle);
	x -= (distance * floatsin(-angle-90, degrees));
	y -= (distance * floatcos(-angle-90, degrees));
	return 1;
}
stock save_diplomation(playerid,frac) {
	new query[90];
	mysql_format(connects, query, sizeof(query), "UPDATE `diplomation` SET `f_dip` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `f_id` =  '%d' LIMIT 1",
	f_diplomacy[PI[playerid][pMember] - 15][0], f_diplomacy[PI[playerid][pMember] - 15][1],
	f_diplomacy[PI[playerid][pMember] - 15][2], f_diplomacy[PI[playerid][pMember] - 15][3],
	f_diplomacy[PI[playerid][pMember] - 15][4], f_diplomacy[PI[playerid][pMember] - 15][5],
	f_diplomacy[PI[playerid][pMember] - 15][6], f_diplomacy[PI[playerid][pMember] - 15][7],frac);
	mysql_tquery(connects, query, "", "");
}
stock dialog_diplom(playerid,bool:type) {
	static const f_str[][] = {
		""G"Нейтралитет",
		""NO"Война",
		""GREEN"Союз",
		""P"Запрос на союз",
		""P"Запрос на союз"
	};
	new pvar_string[8], step;
	new string[310];
	for(new i = 0 ; i < 8; i ++) {
		if(i + 15 == PI[playerid][pMember]) continue;

		format(pvar_string, 8, "d_%d", step);
		SetPVarInt(playerid, pvar_string, i + 15);

		strcat(string, "{");
		strcat(string, GetColorFrac(i + 15));
		strcat(string, "}");
		strcat(string, FI[i + 15][fName]);
		strcat(string, "\t");
		strcat(string, f_str[f_diplomacy[PI[playerid][pMember] - 15][i]]);
		strcat(string, "\n");
		step++;
	}
	if(type == true) D(playerid, D_DIPLOMATION, DIALOG_STYLE_TABLIST, ""P"Дипломатия", string, "Выбрать", "Отмена");
	else D(playerid, DIALOG_NONE, DIALOG_STYLE_TABLIST, ""P"Дипломатия", string, "Закрыть", "");
	return 1;
}
CB: joblist_callback(playerid, targetid) {
	new rows = cache_num_rows(),fields = 0;
	if(rows) {
		new string[3000];
		if(rows > 15) fields = rows - 15;
		format(string, 82, ""W"Дата приёма\t"W"Дата увольнения\t"W"Ранг\t"W"Организация\n");
		for(new i = fields; i < rows; i++) {
			new ji_dateinvite[16],
			ji_dateuninvite[16],
			ji_reason[48],
			ji_fraction,
			ji_warnings,
			ji_rang;

			new str[16 + 16 + 48 + 32 + 24];
			cache_get_value_name_int(i, "ji_fraction", ji_fraction);
			cache_get_value_name_int(i, "ji_warnings", ji_warnings);
			cache_get_value_name_int(i, "ji_rang", ji_rang);

			cache_get_value_name(i, "ji_date_invite", ji_dateinvite, 16);
			cache_get_value_name(i, "ji_date_uninvite", ji_dateuninvite, 16);
			cache_get_value_name(i, "ji_reason", ji_reason, 48);
			
			format(str, sizeof(str), ""W"%s\t%s\t%s(%d)\t%s\n",
			ji_dateinvite,
			ji_dateuninvite,
			GetRankName(ji_fraction,ji_rang),
			ji_rang,
			FI[ji_fraction][fName],
			ji_reason);
			strcat(string, str);
		}
		D(targetid, DIALOG_NONE, DSTH, ""P"Трудовая книжка", string, "Закрыть", "");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Записи в трудовой книжке отсутствуют");
	return 1 ;
}
stock add_jobinfo(playerid,const string[]) {
	new query[310];
	mysql_format(connects, query, sizeof(query),"INSERT INTO `jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_warnings`,`ji_rang`) SELECT `pID`, `fraction_date`, NOW(), '%s','%d','%d','%d' FROM `accounts` WHERE `pID` = '%d'",
	string, PI[playerid][pMember], PI[playerid][pfWarn],PI[playerid][pRank], PI[playerid][pID]);
	mysql_tquery(connects, query, "", "" ) ;
}
stock off_add_jobinfo(const name[],const string[]) {
	new strings[200];
	format(strings, sizeof(strings), "SELECT `pID`,`pMember`,`pRank`,`fwarn` FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1",name);
	new Cache:result = mysql_query(connects, strings);
	new rows = cache_num_rows();
	new id,member,warn,rank;
	if(rows) {
		cache_get_value_name_int(0, "pID",id);
		cache_get_value_name_int(0, "pMember",member);
		cache_get_value_name_int(0, "pRank",rank);
		cache_get_value_name_int(0, "fwarn",warn);
	}
	cache_delete(result);

	new query[310];
	mysql_format(connects, query, sizeof(query),"INSERT INTO `jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_warnings`,`ji_rang`) SELECT `pID`, `fraction_date`, NOW(), '%s','%d','%d','%d' FROM `accounts` WHERE `pID` = '%d'",
	string, member, warn,rank, id);
	mysql_tquery(connects, query, "", "" ) ;
	return 1;
}
stock add_datefrac(playerid) {
	new query[100];
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `fraction_date` = NOW() WHERE `pID` = '%d' LIMIT 1",PI[playerid][pID]);
	mysql_tquery(connects, query, "", "" ) ;
}
stock IsValidVehicleModel(modelid) { // Проверка на существующую модель транспорта
	if(modelid >= 400 && modelid <= 611) {
		return true;
	}
	return false;
}
stock GetVehicleRotation(vehicleid,&Float:rx,&Float:ry,&Float:rz) {
	new Float:qw,Float:qx,Float:qy,Float:qz;
	GetVehicleRotationQuat(vehicleid,qw,qx,qy,qz);
	rx = asin(2*qy*qz-2*qx*qw ) ;
	ry = -atan2(qx*qz+qy*qw,0.5-qx*qx-qy*qy);
	rz = -atan2(qx*qy+qz*qw,0.5-qx*qx-qz*qz);
}

stock RemovePlayerFromVehicleAC(playerid) {
	switch(GetVehicleModel(GetPlayerVehicleID(playerid))) {
	case 0, 441, 464, 465, 501, 564, 594: return 0; 
	}
	RemovePlayerFromVehicle(playerid ) ;
	SetPVarInt ( playerid, "removetimer", 15 ) ;
	RemovePlayerFromVehicle ( playerid ) ;
	return true;
}

stock cars_select(playerid, id) { // выбор авто на подиуме
	A_DestroyVehicle(car_shop[playerid]);
	switch(GetPVarInt(playerid,"get_class"))
	{
	case 1: { // спорт
			new max_cars = sizeof(salon_sport);
			if(id == 0) {
				SetPVarInt(playerid,"select_cars",GetPVarInt(playerid,"select_cars")+1);
				if(GetPVarInt(playerid,"select_cars") >= max_cars) SetPVarInt(playerid,"select_cars",0);
			}
			else if(id == 1) {
				if(GetPVarInt(playerid,"select_cars") <= 0) SetPVarInt(playerid,"select_cars",max_cars);
				SetPVarInt(playerid,"select_cars",GetPVarInt(playerid,"select_cars")-1);
			}
			car_shop[playerid] = AddStaticVehicle(salon_sport[GetPVarInt(playerid,"select_cars")][0], 45.0986,-14.8016,1225.3112,89.6199, car_color[playerid][0], car_color[playerid][1]);
		}
	case 2: { // эконом
			new max_cars = sizeof(salon_econom);
			if(id == 0) {
				SetPVarInt(playerid,"select_cars",GetPVarInt(playerid,"select_cars")+1);
				if(GetPVarInt(playerid,"select_cars") >= max_cars) SetPVarInt(playerid,"select_cars",0);
			}
			else if(id == 1) {
				if(GetPVarInt(playerid,"select_cars") <= 0) SetPVarInt(playerid,"select_cars",max_cars);
				SetPVarInt(playerid,"select_cars",GetPVarInt(playerid,"select_cars")-1);
			}
			car_shop[playerid] = AddStaticVehicle(salon_econom[GetPVarInt(playerid,"select_cars")][0], 45.0986,-14.8016,1225.3112,89.6199, car_color[playerid][0], car_color[playerid][1]);
		}
	case 3: { // средний класс
			new max_cars = sizeof(salon_sred);
			if(id == 0) {
				SetPVarInt(playerid,"select_cars",GetPVarInt(playerid,"select_cars")+1);
				if(GetPVarInt(playerid,"select_cars") >= max_cars) SetPVarInt(playerid,"select_cars",0);
			}
			else if(id == 1) {
				if(GetPVarInt(playerid,"select_cars") <= 0) SetPVarInt(playerid,"select_cars",max_cars);
				SetPVarInt(playerid,"select_cars",GetPVarInt(playerid,"select_cars")-1);
			}
			car_shop[playerid] = AddStaticVehicle(salon_sred[GetPVarInt(playerid,"select_cars")][0], 45.0986,-14.8016,1225.3112,89.6199, car_color[playerid][0], car_color[playerid][1]);
		}
	case 4: { // мото-вело
			new max_cars = sizeof(salon_moto);
			if(id == 0) {
				SetPVarInt(playerid,"select_cars",GetPVarInt(playerid,"select_cars")+1);
				if(GetPVarInt(playerid,"select_cars") >= max_cars) SetPVarInt(playerid,"select_cars",0);
			}
			else if(id == 1) {
				if(GetPVarInt(playerid,"select_cars") <= 0) SetPVarInt(playerid,"select_cars",max_cars);
				SetPVarInt(playerid,"select_cars",GetPVarInt(playerid,"select_cars")-1);
			}
			car_shop[playerid] = AddStaticVehicle(salon_moto[GetPVarInt(playerid,"select_cars")][0], 45.0986,-14.8016,1225.3112,89.6199, car_color[playerid][0], car_color[playerid][1]);
		}
	}
	SetVehicleVirtualWorld(car_shop[playerid], playerid+1);
	LinkVehicleToInterior(car_shop[playerid], 2);
	
	new modelid = GetVehicleModel(car_shop[playerid])-400;
	new string[70];
	format(string,sizeof(string),"_%s",salon_namecars[modelid]);
	PlayerTextDrawSetString(playerid, auto_PTD[playerid][0],string);
	PlayerTextDrawHide(playerid,auto_PTD[playerid][0]);
	PlayerTextDrawShow(playerid,auto_PTD[playerid][0]);

	format(string,sizeof(string),"$%d", gTransport[modelid][trPrice]);
	PlayerTextDrawSetString(playerid, auto_PTD[playerid][1],string);
	
	PlayerTextDrawHide(playerid,auto_PTD[playerid][1]);
	PlayerTextDrawShow(playerid,auto_PTD[playerid][1]);
	return true;
}

stock accs_select(playerid, id) {
	if(GetPVarInt(playerid,"buy_accses")) {
		new price;
		switch(type_acces[playerid]) {
		case 1: {
				new max_accs = sizeof(acces_id_glass);
				if(id == 0) {
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
				}
				else if(id == 1) {
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
				}
				AtachPlayerAcces(playerid, acces_id_glass[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_glass[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_glass[GetPVarInt(playerid,"acs_select")][0]);
				SetPVarInt(playerid,"id_invent",acces_id_glass[GetPVarInt(playerid,"acs_select")][2]);
			}
		case 2: {
				new max_accs = sizeof(acces_id_hat)-1;
				if(id == 0) {
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
				}
				else if(id == 1) {
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
				}
				AtachPlayerAcces(playerid, acces_id_hat[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_hat[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_hat[GetPVarInt(playerid,"acs_select")][0]);
				SetPVarInt(playerid,"id_invent",acces_id_hat[GetPVarInt(playerid,"acs_select")][2]);
			}
		case 3: {
				new max_accs = sizeof(acces_id_bonnet)-1;
				if(id == 0) {
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
				}
				else if(id == 1) {
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
				}
				AtachPlayerAcces(playerid, acces_id_bonnet[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_bonnet[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_bonnet[GetPVarInt(playerid,"acs_select")][0]);
				SetPVarInt(playerid,"id_invent",acces_id_bonnet[GetPVarInt(playerid,"acs_select")][2]);
			}
		case 4: {
				new max_accs = sizeof(acces_id_cap)-1;
				if(id == 0) {
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
				}
				else if(id == 1) {
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
				}
				AtachPlayerAcces(playerid, acces_id_cap[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_cap[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_cap[GetPVarInt(playerid,"acs_select")][0]);
				SetPVarInt(playerid,"id_invent",acces_id_cap[GetPVarInt(playerid,"acs_select")][2]);
			}
		case 5: {
				new max_accs = sizeof(acces_id_beret)-1;
				if(id == 0) {
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
				}
				else if(id == 1) {
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
				}
				AtachPlayerAcces(playerid, acces_id_beret[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_beret[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_beret[GetPVarInt(playerid,"acs_select")][0]);
				SetPVarInt(playerid,"id_invent",acces_id_beret[GetPVarInt(playerid,"acs_select")][2]);
			}
		case 6: {
				new max_accs = sizeof(acces_id_bandanas)-1;
				if(id == 0) {
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
				}
				else if(id == 1) {
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
				}
				AtachPlayerAcces(playerid, acces_id_bandanas[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_bandanas[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_bandanas[GetPVarInt(playerid,"acs_select")][0]);
				SetPVarInt(playerid,"id_invent",acces_id_bandanas[GetPVarInt(playerid,"acs_select")][2]);
			}
		case 7: {
				new max_accs = sizeof(acces_id_panam)-1;
				if(id == 0) {
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
				}
				else if(id == 1) {
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
				}
				AtachPlayerAcces(playerid, acces_id_panam[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_panam[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_panam[GetPVarInt(playerid,"acs_select")][0]);
				SetPVarInt(playerid,"id_invent",acces_id_panam[GetPVarInt(playerid,"acs_select")][2]);
			}
		case 8: {
				new max_accs = sizeof(acces_id_sporthat)-1;
				if(id == 0) {
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
				}
				else if(id == 1) {
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
				}
				AtachPlayerAcces(playerid, acces_id_sporthat[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_sporthat[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_sporthat[GetPVarInt(playerid,"acs_select")][0]);
				SetPVarInt(playerid,"id_invent",acces_id_sporthat[GetPVarInt(playerid,"acs_select")][2]);
			}
		case 9: {
				new max_accs = sizeof(acces_id_kask)-1;
				if(id == 0) {
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
				}
				else if(id == 1) {
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
				}
				AtachPlayerAcces(playerid, acces_id_kask[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_kask[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_kask[GetPVarInt(playerid,"acs_select")][0]);
				SetPVarInt(playerid,"id_invent",acces_id_kask[GetPVarInt(playerid,"acs_select")][2]);
			}
		case 10: {
				new max_accs = sizeof(acces_id_mask)-1;
				if(id == 0) {
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
				}
				else if(id == 1) {
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
				}
				AtachPlayerAcces(playerid, acces_id_mask[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_mask[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_mask[GetPVarInt(playerid,"acs_select")][0]);
				SetPVarInt(playerid,"id_invent",acces_id_mask[GetPVarInt(playerid,"acs_select")][2]);
			}
		case 11: {
				new max_accs = sizeof(acces_id_headphones)-1;
				if(id == 0) {
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
				}
				else if(id == 1) {
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
				}
				AtachPlayerAcces(playerid, acces_id_headphones[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_headphones[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_headphones[GetPVarInt(playerid,"acs_select")][0]);
				SetPVarInt(playerid,"id_invent",acces_id_headphones[GetPVarInt(playerid,"acs_select")][2]);
			}
		case 12: {
				new max_accs = sizeof(acces_id_watch)-1;
				if(id == 0) {
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
				}
				else if(id == 1) {
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
				}
				AtachPlayerAcces(playerid, acces_id_watch[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_watch[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_watch[GetPVarInt(playerid,"acs_select")][0]);
				SetPVarInt(playerid,"id_invent",acces_id_watch[GetPVarInt(playerid,"acs_select")][2]);
			}
		}
		SetPVarInt(playerid, "price_acs", price);
		new string[12];
		format(string,sizeof(string),"$%d",price);
		PlayerTextDrawSetString(playerid,buy_player_skins[playerid],string);
	}
	return 1;
}
stock accs_close(playerid) {
	new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
	GetPlayerCameraPos(playerid,x,y,z);
	InterpolateCameraPos(playerid,x,y,z,212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234,1200);
	GetPlayerCameraFrontVector(playerid,x2,y2,z2);
	InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,212.5107,-41.5253,1002.0234,1200);
	buyacces(playerid);
	return 1;
}
public OnQueryError(errorid, const error[], const callback[], const query[], MySQL:handle) {
	print ("[OnQueryError] SQL ERROR. QUERY:") ;
	return print ( query ) ;
}
stock reputation_family(family,point) {
	gFamily[family][famPoint] += point;
	if(gFamily[family][famPoint] < 0) gFamily[family][famPoint] = 0;
	UpdateFamily(family+1,"point",gFamily[family][famPoint]);
}

stock t_PutPlayerInVehicle( playerid, carid, seat )
{
	return PutPlayerInVehicle(playerid,carid,seat);
}

stock SetPlayerPosAC(playerid, Float:x, Float:y, Float:z, world, interior, setUP = false) {
	if(playerid != INVALID_PLAYER_ID) {
		if(!setUP) {
			if(TI[playerid][tVirtualWorld] != world)
			{
				TI[playerid][tVirtualWorld] = world;
				SetPlayerVirtualWorld(playerid, world);
			}
			if(TI[playerid][tInterior] != interior) {
				TI[playerid][tInterior] = interior;
				SetPlayerInterior(playerid, interior);
			}
		}
		else {
			SetPlayerVirtualWorld(playerid, world);
			SetPlayerInterior(playerid, interior);
		}
		SetPlayerPos(playerid, x,y,z);
		//NickName(playerid);
	}
	return true;
}
stock auto_news(slot,playerid) {
	format(gAdvert[slot][adSender],24,"%s",player_name[playerid]);
	gAdvert[slot][adID] = playerid;
	gAdvert[slot][adPhone] = PI[playerid][pPhone];
	gAdvert[slot][adBusy] = true;
	gAdvert[slot][adTime] = gAdvertTime;
	gAdvertTime += 30;

	SetString(gAdvert[slot][adCheker],"World Bot");
	
	gAdvert[slot][adCheking] = false;
	gAdvert[slot][adCheked] = true;

	SendOk(playerid,"Объявление подано в редакцию. Ожидайте публикации");
}

stock SpeedVehicle(playerid)
{
	new Float:ST[4];
	if(IsPlayerInAnyVehicle(playerid))
	GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 100.3;
	return floatround(ST[3]);
}

stock Float:GetSpeed(Float:x = 0.0, Float:y = 0.0, Float:z = 0.0) {             // Скорость
	return floatsqroot((x * x) + (y * y) + (z * z)) * 100.0;
}
stock SearchIndex(index, ...) {                                                 // Поиск нужного значения
	for(new id = (numargs() - 1); id >= 1; --id) {
		if(index == getarg(id)) {
			return true;
		}
	}
	return false;
}
CB: StartDrawing(playerid) {
	new keys,updown,leftright;
	GetPlayerKeys(playerid,keys,updown,leftright);
	if(keys != 4) {
		GraffitiFailed(playerid);
		KillTimer(graf_timer[playerid]);
		return 1;
	}
	GameTextForPlayer(playerid,"~g~START PAINT", 1000, 5);
	SetPVarInt(playerid, "SettingGraffiti", 1);
	graf_timer[playerid] = SetTimerEx("graffity", 8000, 0, "i", playerid);
	return 1;
}
GraffitiDone(playerid) {
	if(!GetPVarInt(playerid, "SettingGraffiti")) return 1;
	new keys,updown,leftright;
	GetPlayerKeys(playerid,keys,updown,leftright);
	if(keys != 4) {
		GraffitiFailed(playerid);
		KillTimer(graf_timer[playerid]);
		return 1;
	}
	new obj;
	switch(PI[playerid][pMember]) {
	case 0: obj = 18666;
	case 20: obj = 18659;
	case 21: obj = 18661;
	case 22: obj = 18663;
	case 18: obj = 18664;
	case 19: obj = 18665;//вагос
	}
	DestroyDynamicObject(GrafInfo[GetPVarInt(playerid,"Grafity")][gObject]);
	GrafInfo[GetPVarInt(playerid,"Grafity")][gObject] = CreateDynamicObject(obj, GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][0], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][1], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][2], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][3], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][4], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][5]);
	GrafInfo[GetPVarInt(playerid,"Grafity")][gFrak] = PI[playerid][pMember];

	if(GetPVarInt(playerid, "SettingGraffiti") == 1) DeletePVar(playerid, "SettingGraffiti");
	GameTextForPlayer(playerid,"~g~GOOD", 1000, 5);
	Streamer_Update(playerid);
	new query[128];
	mysql_format(connects, query, sizeof(query),"UPDATE `graffity` SET `gGang` = '%d' WHERE `gID` = '%d'",PI[playerid][pMember],GetPVarInt(playerid,"Grafity"));
	mysql_tquery(connects, query);
	if(PI[playerid][pMember]) add_gang_points(PI[playerid][pMember],1);
	return 1;
}

GraffitiFailed(playerid) {
	if(GetPVarInt(playerid, "SettingGraffiti") == 1) {
		DeletePVar(playerid, "SettingGraffiti");
	}
	GameTextForPlayer(playerid,"~r~FAILED", 1000, 5);
	return 1;
}
CB: graffity(playerid) {
	GraffitiDone(playerid);
	return 1;
}

public OnPlayerShootDynamicObject(playerid, weaponid, objectid, Float:x, Float:y, Float:z) {
	new fare = 0;
	if(PI[playerid][pMember] == fARMYLS && PlayerToPoint(10.0,playerid,2737.7830,-2555.4817,13.6425) && BULLET_HIT_TYPE_OBJECT)
	{
		fare = 1;
	}
	else {
		if(PlayerToPoint(15.0,playerid,341.7520,-170.7615,987.6703) && BULLET_HIT_TYPE_OBJECT && GetPVarInt(playerid,"gun_weap"))
		fare = 1;
	}
	if(fare)
	{
		switch(weaponid)
		{
		case 23: {
				SetPVarInt(playerid, "SkillSD",GetPVarInt(playerid, "SkillSD") +1);
				if(GetPVarInt(playerid, "SkillSD") >= Ammo_SDPISTOL && PI[playerid][pGunSkill][0] < 100) {
					PI[playerid][pGunSkill][0] += 1;
					SetPVarInt(playerid, "SkillSD",0);
					texdraw_skill(playerid,0);
					SetPlayerSkills(playerid);
					skill_gun[playerid] = 1;
				}
			}
		case 24: {
				SetPVarInt(playerid, "SkillD",GetPVarInt(playerid, "SkillD") +1);
				if(GetPVarInt(playerid, "SkillD") >= Ammo_DEAGLE && PI[playerid][pGunSkill][1] < 100) {
					PI[playerid][pGunSkill][1] += 1;
					SetPVarInt(playerid, "SkillD",0);
					texdraw_skill(playerid,1);
					SetPlayerSkills(playerid);
					skill_gun[playerid] = 1;
				}
			}
		case 25: {
				SetPVarInt(playerid, "SkillShot",GetPVarInt(playerid, "SkillShot") +1);
				if(GetPVarInt(playerid, "SkillShot") >= Ammo_SHOTGUN && PI[playerid][pGunSkill][2] < 100) {
					PI[playerid][pGunSkill][2]+=1;
					SetPVarInt(playerid, "SkillShot",0);
					skill_gun[playerid] = 1;
				}
			}
		case 29: {
				SetPVarInt(playerid, "SkillMP5",GetPVarInt(playerid, "SkillMP5") +1);
				if(GetPVarInt(playerid, "SkillMP5") >= Ammo_MP5 && PI[playerid][pGunSkill][3] < 100) {
					PI[playerid][pGunSkill][3]+=1;
					SetPVarInt(playerid, "SkillMP5",0);
					texdraw_skill(playerid,3);
					SetPlayerSkills(playerid);
					skill_gun[playerid] = 1;
				}
			}
		case 30: {
				SetPVarInt(playerid, "SkillAk47",GetPVarInt(playerid, "SkillAk47") +1);
				if(GetPVarInt(playerid, "SkillAk47") >= Ammo_AK47 && PI[playerid][pGunSkill][4] < 100) {
					PI[playerid][pGunSkill][4] += 1;
					SetPVarInt(playerid, "SkillAk47",0);
					texdraw_skill(playerid,4);
					SetPlayerSkills(playerid);
					skill_gun[playerid] = 1;
				}
			}
		case 31: {
				SetPVarInt(playerid, "SkillM4",GetPVarInt(playerid, "SkillM4") +1);
				if(GetPVarInt(playerid, "SkillM4") >= Ammo_M4A1 && PI[playerid][pGunSkill][5] < 100) {
					PI[playerid][pGunSkill][5] += 1;
					SetPVarInt(playerid, "SkillM4",0);
					texdraw_skill(playerid,5);
					SetPlayerSkills(playerid);
					skill_gun[playerid] = 1;
				}
			}
		}
	}
	return true;
}
stock leave_robhouse(playerid) {
	if(rob_veh[playerid] != INVALID_VEHICLE_ID) {
		new vehicleid = rob_veh[playerid];
		if(IsValid3DTextLabel(VG[vehicleid][vgText])) DestroyDynamic3DTextLabelEx(VG[vehicleid][vgText]);
		DestroyDynamicPickup(VG[vehicleid][vgPickup]);
		VG[vehicleid][vgPickup] = 0;
		DestroyDynamicArea(VG[vehicleid][vgArea]);
		VG[vehicleid][vgArea] = 0;
		A_DestroyVehicle(rob_veh[playerid]);
		rob_veh[playerid] = INVALID_VEHICLE_ID;
		DeletePVar(playerid,"load_rob");
	}
}
stock add_gang_points(member,points) {
	FI[member][fRating] += points;
	UpdateFraction(member,"fRating",FI[member][fRating]);
}
stock gangtops() {
	new Cache:result = mysql_query(connects, "SELECT `ID`, `fRating` FROM `fractions` ORDER BY `fRating` DESC LIMIT 3");
	new rows = cache_num_rows();
	new string[128],id;
	if(rows) {
		for(new i; i < rows; i ++) {
			cache_get_value_name_int(i, "ID",id);
			if(i == 0) {
				format(string,sizeof(string),"%s занимает 1 место в Gang-Top за текущую неделю",FI[id][fName]);
				SendBand(COLOR_RED, string);
				FI[id][fMats] += 2500;
				UpdateFraction(id,"Mats",FI[id][fMats]);
				UpdateFraction(id,"Bank",FI[id][fBank]);
			}
			if(i == 1) {
				format(string,sizeof(string),"%s занимает 2 место в Gang-Top за текущую неделю",FI[id][fName]);
				SendBand(COLOR_RED, string);

				FI[id][fMats] += 1000;
				UpdateFraction(id,"Mats",FI[id][fMats]);
				UpdateFraction(id,"Bank",FI[id][fBank]);
			}
			if(i == 2) {
				format(string,sizeof(string),"%s занимает 3 место в Gang-Top за текущую неделю",FI[id][fName]);
				SendBand(COLOR_RED, string);
				FI[id][fMats] += 500;
				UpdateFraction(id,"Mats",FI[id][fMats]);
				UpdateFraction(id,"Bank",FI[id][fBank]);
			}
		}
	}
	cache_delete(result);
	FI[fBALLAS][fRating] = FI[fVAGOS][fRating] = FI[fGROVE][fRating] = FI[fAZTEC][fRating] = FI[fRIFA][fRating] = 0;
}
stock dialog_lmenu(playerid,listitem) {
	switch(listitem) {
	case 0..4: {
			new string[1256];
			for(new i=1; i<=FI[PI[playerid][pMember]][fMaxRang]; i++) {
				new frac_rank_check = -1;
				if(listitem == 0) frac_rank_check = FI[PI[playerid][pMember]][fInviteRang];
				else if(listitem == 1) frac_rank_check = FI[PI[playerid][pMember]][fUninviteRang];
				else if(listitem == 2) frac_rank_check = FI[PI[playerid][pMember]][fGiveRang]; 
				else if(listitem == 3) frac_rank_check = FI[PI[playerid][pMember]][fUseStock];
				else if(listitem == 4) frac_rank_check = FI[PI[playerid][pMember]][fSpawnRang];
				if(frac_rank_check == -1) return true;
				format(string,sizeof(string),"%s%i. %s%s\n", string,i,(i==frac_rank_check)?(""P""):(""W""),GetRankName(PI[playerid][pMember],i));
			}
			SetPVarInt(playerid,"leader_rank", listitem);
			D(playerid,D_LMENU_RANK,DSL,""P"Выберите ранг",string,"Выбрать", "Закрыть");
		}
	case 5: {
			static const f_str[] = ""W"Состояние счета: "ORANGE"$%d\n"P"1."W" Снять деньги";
			new string[sizeof(f_str) +1 + (-2 + 10)];
			format(string,sizeof(string),f_str,FI[PI[playerid][pMember]][fBank]);
			D(playerid,D_LMENU_BANK,DSL,""P"Управление банком фракции",string,"Далее","Закрыть");
		}
	case 6: {
			if(FI[PI[playerid][pMember]][fAntiTK]) {
				FI[PI[playerid][pMember]][fAntiTK] = 0;
				SendOk(playerid,"Функция Анти Team Kill успешно отключена");
			}
			else {
				FI[PI[playerid][pMember]][fAntiTK] = 1;
				SendOk(playerid,"Функция Анти Team Kill успешно включена");
			}
			UpdateFraction(PI[playerid][pMember],"AntiTk",FI[PI[playerid][pMember]][fAntiTK]);
			pc_cmd_lmenu(playerid);
		}
	case 7: {
			if(PI[playerid][pMember] != fWHITEHOUSE || PI[playerid][pLeader] != fWHITEHOUSE) {
		
			new string[1256];
			strcat(string, ""W"");
			for(new i = 1; i <= FI[PI[playerid][pMember]][fMaxRang]; i++) {
				format(string,sizeof(string),"%s%s\n",string,GetRankName(PI[playerid][pMember],i));
			}
			D(playerid,D_EDIT_RANK_1,DSL,""P"Выберите ранг",string,"Выбрать","Назад");
			}
			else return SCM(playerid, COLOR_YELLOW, "В правительстве нельзя изменять название рангов!");
			return 1;
		}
	case 8: pc_cmd_offmembers(playerid);
	case 9: pc_cmd_bl(playerid);
	case 10: {
			if(!IsAGang(playerid) && !IsAMafia(playerid)) return 1;
			dialog_diplom(playerid,true);
		}
	}
	return 1;
}

stock SetHealth(playerid, Float:heal) {
	PI[playerid][pHP] = heal;
	SetPlayerHealth(playerid, heal);
	return true;
}

stock SetArmour(playerid, Float: Armour)
{
	TI[playerid][tArmour] = Armour;
	return SetPlayerArmour(playerid, Armour);
}

stock EggUpdate(playerid) {
	new g = PlayerEgg[playerid];
	new string[150];
	format(string,sizeof(string),""YELLOW"Курятник\n\n"W"Ухаживает:"P" %s\n"W"Корм курицы:"P" [ %d/10 ]\n"W"Снесено яиц:"P" [ %d/20 ]",player_name[playerid],Egg[g][gKorm],Egg[g][gCount]);
	UpdateDynamic3DTextLabelText(Egg[g][gText], -1, string);
}

stock EndEgg(playerid) {
	if(GetPVarInt(playerid,"egg_start") == 1 && PlayerEgg[playerid] != -1) {
		new g = PlayerEgg[playerid];
		strmid(Egg[g][gName], "None", 0, strlen("None"),6);
		new string[250];
		format(string,sizeof(string),""YELLOW"Курятник\n\n"W"Ухаживает:"P" %s\n"W"Корм курицы:"P" [ %d/10 ]\n"W"Снесено яиц:"P" [ %d/20 ]\n\n"W"Начать ухаживать"P" [ ALT ]",Egg[g][gName],Egg[g][gKorm],Egg[g][gCount]);
		UpdateDynamic3DTextLabelText(Egg[g][gText], -1, string);
		PlayerKorm[playerid] = 0;
		EggCount[playerid] = 0;
		PlayerEgg[playerid] = -1;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid, 8);
		if(EggSklad[playerid]) DestroyDynamicCP(EggSklad[playerid]);
		
	}
}
stock key_activate(playerid)
{
	if(TI[playerid][tDiceID] != INVALID_PLAYER_ID) {
		new id = TI[playerid][tDiceID];
		new ids = TI[id][tDiceIDs];
		new money = TI[playerid][tDiceMoney];
		if(money >= 100)
		{
			if(QuestProgress[id][26] == 0 && AcceptQuest[id][26] != 0)
			{
				QuestProgress[id][26] ++;
				save_quest(id,26);
				D(id,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Азарт'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
			}
		}
		TI[playerid][tDiceID] = TI[id][tDiceIDs] = INVALID_PLAYER_ID;
		TI[playerid][tDiceMoney] = 0;
		TI[playerid][tDiceClosed] = TI[id][tDiceClosed] = false;
		if(ids != playerid) return SendClientMessage(playerid, COLOR_GREY, "Игрок покинул игру");
		if(!TI[id][tLogin]) return SendClientMessage(playerid, COLOR_GREY, "Игрок который хотел с Вами играть оффлайн");
		else if(PI[playerid][pCasinoChips] < money) {
			SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно фишек");
			SendOk(id,"У игрока недостаточно фишек");
			return 1;
		}
		else if(PI[id][pCasinoChips] < money) {
			SendOk(playerid,"У игрока недостаточно фишек");
			SendClientMessage(id,COLOR_GREY,"У Вас недостаточно фишек");
			return 1;
		}
		if(!PlayerToPoint(2.0,playerid,295.3712,-112.4607,1036.6692) && !PlayerToPoint(2.0,playerid,300.7174,-112.3977,1036.6692)) {
			SendClientMessage(playerid, COLOR_GREY, "Вы не у стола для игры 1x1");
			SendOk(id,"Игрок отклонил Ваше предложение");
			return 1;
		}
		new dice = random(6)+1;
		new dice1 = random(6)+1;
		new string[128];
		format(string,sizeof(string), "%s и %s бросили кости. Результат: {CC9900}%i:%i",player_name[id],player_name[playerid],dice,dice1);
		ProxDetector(15.0,playerid, string,0x44b2ffff);
		SetTimerEx("DiceOff",5000, false, "ii",playerid, id);
		TI[id][tKubik] = 1;
		TI[playerid][tKubik] = 1;
		TI[playerid][tDiceTime] = TI[id][tDiceTime] = unix+10;
		format(string,sizeof(string), "Выпало: %i",dice1);
		SetPlayerChatBubble(playerid,string,COLOR_ORANGE,30.0,10000);
		format(string,sizeof(string), "Выпало: %i",dice);
		SetPlayerChatBubble(id,string,TEAM_GROVE_COLOR,30.0,10000);
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
		SetPlayerAttachedObject(playerid, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
		ApplyAnimation(id,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
		SetPlayerAttachedObject(id, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
		if(dice > dice1) {
			format(string, sizeof(string), "Поздравляем, Вы выиграли! Выигрыш составляет: "GREEN"%d",money);
			SendClientMessage(id, CGOLD, string);
			SendOk(playerid, "К сожалению, Вы проиграли");
			
			PI[id][pCasinoChips] += money;
			UpdatePlayerData(id,"casino_chips",PI[id][pCasinoChips]);
			
			PI[playerid][pCasinoChips] -= money;
			UpdatePlayerData(playerid,"casino_chips",PI[playerid][pCasinoChips]);
		}
		if(dice < dice1) {
			format(string, sizeof(string), "Поздравляем, Вы выиграли! Выигрыш составляет: "GREEN"%d",money);
			SendClientMessage(playerid, CGOLD, string);
			SendOk(id, "К сожалению, Вы проиграли");
			
			PI[playerid][pCasinoChips] += money;
			UpdatePlayerData(playerid,"casino_chips",PI[playerid][pCasinoChips]);
			
			PI[id][pCasinoChips] -= money;
			UpdatePlayerData(id,"casino_chips",PI[id][pCasinoChips]);
			
		}
		else if(dice == dice1) {
			SendOk(playerid, "Игра закончилась в ничью");
			SendOk(id, "Игра закончилась в ничью");
		}
	}
	else if(GetPVarInt(playerid,"give_inv"))
	{
		new acter = GetPVarInt(playerid,"give_inv")-1;
		new invent = GetPVarInt(playerid,"pl_inv");
		new ammout = GetPVarInt(playerid,"pl_count");
		new slot = GetPVarInt(acter,"pl_slot");
		new cash = GetPVarInt(playerid,"pl_money");
		if(acter >= 0) {
			if(IsPlayerConnected(playerid) && IsPlayerConnected(acter))
			{
				if(!ProxDetectorS(5.0, playerid, acter)) {
					SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от игрока");
					SendClientMessage(acter, COLOR_GREY, "Вы слишком далеко от игрока");
					DeletePVar(playerid,"give_inv");
					DeletePVar(playerid,"invent");
					DeletePVar(playerid,"ammout");
					return 1;
				}
				if(GetInvSet(playerid) >= 40) {
					SendClientMessage(acter, COLOR_GREY,"В инвентаре у игрока недостаточно места");
					SendClientMessage(playerid, COLOR_GREY, "В вашем инвентаре недостаточно места");
					DeletePVar(playerid,"give_inv");
					DeletePVar(playerid,"invent");
					DeletePVar(playerid,"ammout");
					return true;
				}
				if(GetInvent(acter, invent) < ammout) {
					SendClientMessage(playerid, COLOR_GREY, "У игрока недостаточно предметов для передачи");
					SendClientMessage(acter, COLOR_GREY, "У вас недостаточно предметов для передачи");
					DeletePVar(playerid,"give_inv");
					DeletePVar(playerid,"invent");
					DeletePVar(playerid,"ammout");
					return true;
				}
				if(PI[playerid][pCash] < cash) {
					SendClientMessage(acter, COLOR_GREY, "У игрока недостаточно денег");
					SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег");
					DeletePVar(playerid,"give_inv");
					DeletePVar(playerid,"invent");
					DeletePVar(playerid,"ammout");
					return true;
				}
				PI[acter][pInventoryKolvo][slot] -= ammout;
				if(PI[acter][pInventoryKolvo][slot] <= 0)
				{
					PI[acter][pInventoryKolvo][slot] = 0;
					PI[acter][pInventory][slot] = 0;
				}
				SaveInventory(acter);
				
				PlayerTextDrawBackgroundColor(acter, inventory_slot[playerid][slot], 370810879);
				InvUpdate(acter, slot, PI[acter][pInventory][slot]);
				
				AddItem(playerid, invent, ammout);
				
				PI[acter][pActivTrade][slot] = 0;
				
				ClickInv[acter] = -1;
				
				GiveMoney(acter,cash,"продажа предмета");
				GiveMoney(playerid,-cash,"покупка предмета");
				
				new str[250], string[450];
				format(str,sizeof(str),"%s передал %s [%s] за %d$",player_name[playerid],player_name[acter], ItemsInfo[invent][ItemName], cash);
				
				mysql_format(connects, string,sizeof(string),"INSERT INTO `invent_log` (`Name`,`item`,`amount`) VALUES ('%s','%s','%d')",player_name[playerid],str,ammout);
				mysql_tquery(connects, string, "","");
				
				SendOk(acter,"Вы передали игроку предмет с инвентаря");
				DeletePVar(acter,"activ_trade");
				DeletePVar(playerid,"give_inv");
				DeletePVar(playerid,"invent");
				DeletePVar(playerid,"pl_count");
			}
		}
		return true;
	}
	else if(GetPVarInt(playerid,"pts")) {
		new acter = GetPVarInt(playerid,"pts")-1;
		DeletePVar(playerid,"pts");
		if(acter >= 0) {
			if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
				CarPass(acter,playerid);
				new string[128];
				format(string,sizeof(string),"показал(а) документы на т/с %s",player_name[playerid]);
				MeAction(acter,string);
			}
		}
	}
	else if(GetPVarInt(playerid,"lices")) {
		new acter = GetPVarInt(playerid,"lices")-1;
		DeletePVar(playerid,"lices");
		if(acter >= 0) {
			if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
				ShowLic(acter,playerid);
				new string[128];
				format(string,sizeof(string),"показал(а) свои лицензии %s",player_name[playerid]);
				MeAction(acter,string);
			}
		}
	}
	else if(GetPVarInt(playerid,"skillss")) {
		new acter = GetPVarInt(playerid,"skillss")-1;
		DeletePVar(playerid,"skillss");
		if(acter >= 0) {
			if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
				ShowSkill(acter,playerid);
				new string[128];
				format(string,sizeof(string),"показал(а) навыки владения оружием %s",player_name[playerid]);
				MeAction(acter,string);
			}
		}
	}
	else if(GetPVarInt(playerid,"wbook")) {
		new acter = GetPVarInt(playerid,"wbook")-1;
		DeletePVar(playerid,"wbook");
		if(acter >= 0) {
			if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
				ShowWBook(acter,playerid);
				new string[128];
				format(string,sizeof(string),"показал(а) трудовую книжку %s",player_name[playerid]);
				MeAction(acter,string);
			}
		}
	}
	else if(GetPVarInt(playerid,"uds")) {
		new acter = GetPVarInt(playerid,"uds")-1;
		DeletePVar(playerid,"uds");
		if(acter >= 0) {
			if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
				ShowUd(acter,playerid);
				new string[128];
				format(string,sizeof(string),"достал(а) удостоверение и показал(а) его %s",player_name[playerid]);
				MeAction(acter,string);
			}
		}
	}
	else if(GetPVarInt(playerid,"udjur")) {
		new acter = GetPVarInt(playerid,"udjur")-1;
		DeletePVar(playerid,"udjur");
		if(acter >= 0) {
			if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
				ShowUdJur(acter,playerid);
				new string[128];
				format(string,sizeof(string),"достал(а) удостоверение журналиста и показал(а) его %s",player_name[playerid]);
				MeAction(acter,string);
			}
		}
	}
	else if(GetPVarInt(playerid,"lic_")) {
		new acter = GetPVarInt(playerid,"lic_")-1;
		new cash = GetPVarInt(playerid,"lic_cash");
		DeletePVar(playerid,"lic_");
		if(acter >= 0) {
			if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
				
				SendOk(playerid,"Поздравляем с покупкой новой лицензии!");
				SendOk(acter,"Лицензия продана");
				
				GiveMoney(playerid,-cash,"покупка лицензии");
				GiveMoney(acter,cash,"продажа лицензии");
				
				if(QuestProgress[playerid][3] == 0 && AcceptQuest[playerid][3] != 0)
				{
					QuestProgress[playerid][3] ++;
					D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Вод. удостоверение'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
					NextStapQI(playerid,3);
				}
				
				FI[fINSTRUCTORS][fBank] += cash;
				UpdateFraction(fINSTRUCTORS,"Bank",FI[fINSTRUCTORS][fBank]);
				
				lic[playerid][GetPVarInt(playerid,"lic_type")] = 1;
				UpdateLicenses(playerid);
				DeletePVar(playerid,"lic_cash");
				DeletePVar(playerid,"lic_");
			}
		}
	}
	else if(GetPVarInt(playerid,"pass")) {
		new acter = GetPVarInt(playerid,"pass")-1;
		DeletePVar(playerid,"pass");
		if(acter >= 0) {
			if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
				ShowPass(acter,playerid);
				new string[128];
				format(string,sizeof(string),"достал(а) паспорт и показал(а) его %s",player_name[playerid]);
				MeAction(acter,string);
			}
		}
	}
	else if(GetPVarInt(playerid,"fpass")) {
		new acter = GetPVarInt(playerid,"fpass")-1;
		DeletePVar(playerid,"fpass");
		if(acter >= 0) {
			if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
				ShowFPass(acter,playerid);
				new string[128];
				format(string,sizeof(string),"достал(а) паспорт и показал его %s",player_name[playerid]);
				MeAction(acter,string);
			}
		}
	}
	else if(GetPVarInt(playerid,"medcard")) {
		new acter = GetPVarInt(playerid,"medcard")-1;
		DeletePVar(playerid,"medcard");
		if(acter >= 0) {
			if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
				ShowMedcard(acter,playerid);
				new string[128];
				format(string,sizeof(string),"достал(а) мед.карту и показал ее %s",player_name[playerid]);
				MeAction(acter,string);
			}
		}
	}
	else if(GetPVarInt(playerid,"selectpoint") == 2) {
		new driverid = GetPVarInt(playerid,"taxidriver");
		if(GetPlayerState(playerid) != PLAYER_STATE_PASSENGER) {
			SetPVarInt(playerid,"selectpoint",0);
			SetPVarInt(playerid,"taxidriver",0);
			RemovePlayerMapIcon(playerid,iconTaxi);
		}
		new Float:x, Float:y;
		x = GetPVarFloat(playerid,"selectpointX");
		y = GetPVarFloat(playerid,"selectpointY");
		SetPlayerMapIcon(driverid,iconTaxi,x,y,0.0,0,COLOR_YELLOW,1);
		SetPVarFloat(playerid,"selectpointX",x);
		SetPVarFloat(playerid,"selectpointY",y);
		SetPVarInt(playerid,"selectpoint",0);
		SetPVarInt(driverid,"selectpoint",0);
		SendOk(playerid,"Данные о месте назначения отправлены таксисту");
		SendUse(driverid,"Пассажир установил "YELLOW"метку "W"на карте. Чтобы убрать метку введите: /untaxi");
	}
	else if(GetPVarInt(playerid,"fam_owner")) {
		new fam = GetPVarInt(playerid,"family");
		new own = GetPVarInt(playerid,"fam_owner")-1;
		PI[own][pFamily] = 0;
		UpdatePlayerData(own,"family",0);
		PI[own][pFamRank] = 0;
		UpdatePlayerData(own,"pFamRank",0);
		SendOk(own,"Вы успешно передали свою семью");
		DeletePVar(playerid,"fam_owner");
		DeletePVar(playerid,"fmily");
		SendOk(playerid,"Вы теперь владелец семьи. Управление семьей - /fmenu");
		PI[playerid][pFamily] = fam+1;
		UpdatePlayerData(playerid,"family",fam+1);
		PI[playerid][pFamRank] = 8;
		UpdatePlayerData(playerid,"pFamRank",8);
		strmid(gFamily[fam][famOwner],player_name[playerid],0,strlen(player_name[playerid]),MAX_PLAYER_NAME);
		new query[200];
		mysql_format(connects, query, sizeof(query),"UPDATE `family` SET `owner` = '%s' WHERE `id` = '%d' LIMIT 1",player_name[playerid], fam+1);
		mysql_tquery(connects, query,"","");
		new string[120];
		format(string,sizeof(string),"[FAMILY] "W"%s{%s} новый владелец семьи!",player_name[playerid],FamilyColor[gFamily[PI[playerid][pFamily]-1][famColor]]);
		FamMSG(PI[playerid][pFamily],string);
	}
	else if(GetPVarInt(playerid,"family_invite")) {
		new fam = GetPVarInt(playerid,"family_invite")-1;
		DeletePVar(playerid,"family_invite");
		if(PI[fam][pFamily]) {
			new string[128];
			PI[playerid][pFamily] = PI[fam][pFamily];
			UpdatePlayerData(playerid,"family",PI[playerid][pFamily]);
			PI[playerid][pFamRank] = 1;
			UpdatePlayerData(playerid,"pFamRank",1);
			
			PI[playerid][pFamTalon] = 0;
			UpdatePlayerData(playerid, "talon_fam", PI[playerid][pFamTalon]);

			format(string,sizeof(string),"[FAMILY] "W"%s{%s} вступил в семью",player_name[playerid],FamilyColor[gFamily[PI[playerid][pFamily]-1][famColor]]);
			FamMSG(PI[playerid][pFamily],string);
		}
		if(PI[playerid][pFamily]) {
			if(fam_lable[playerid] == Text3D:-1) {
				new string[50];
				if(gFamily[PI[playerid][pFamily]-1][famType]) format(string,sizeof(string),"[$] {%s}%s",FamilyColor[gFamily[PI[playerid][pFamily]-1][famColor]],gFamily[PI[playerid][pFamily]-1][famName]);
				else format(string,sizeof(string),"{%s}%s",FamilyColor[gFamily[PI[playerid][pFamily]-1][famColor]],gFamily[PI[playerid][pFamily]-1][famName]);
				fam_lable[playerid] = CreateDynamic3DTextLabel(string, -1, 0.0, 0.0, 0.025, 5.0, playerid,INVALID_VEHICLE_ID,1);
			}
		}
	}
	else if(GetPVarInt(playerid,"fight_offer")) {
		new i = GetPVarInt(playerid,"fight_offer")-1;
		if(PI[i][pCash] < GetPVarInt(playerid,"fight_price") || PI[playerid][pCash] < GetPVarInt(playerid,"fight_price")) {
			SendClientMessage(playerid, COLOR_GREY, "У Игрока/Вас недостаточно средств");
			DeletePVar(playerid,"fight_offer");
			DeletePVar(playerid,"fight_price");
			return 1;
		}
		if(!ProxDetectorS(5.0, playerid, i)) {
			SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко от Вас");
			DeletePVar(playerid,"fight_offer");
			DeletePVar(playerid,"fight_price");
			return 1;
		}
		if(!TI[playerid][tGym] || !TI[i][tGym]) {
			SendClientMessage(playerid, COLOR_GREY, "Вы/Игрок не в спортзале");
			DeletePVar(playerid,"fight_offer");
			DeletePVar(playerid,"fight_price");
			return 1;
		}
		if(RingInfo[0][rgStart] == 1) return SendClientMessage(playerid, COLOR_GREY, "Ринг занят, ожидайте когда закончится бой");
		RingInfo[0][rgPlayer][0] = i;
		RingInfo[0][rgPlayer][1] = playerid;
		RingInfo[0][rgStart] = 1;
		RingInfo[0][rgPrice] = GetPVarInt(playerid,"fight_price");
		RingInfo[0][rgLoad][0] = 1;
		new bussid = TI[playerid][tSelectedBusinessID];
		bizz_pay(bussid,GetPVarInt(playerid,"fight_price")/100*30);
		GiveMoney(playerid, -GetPVarInt(playerid,"fight_price"), "запись на бой");
		GiveMoney(i, -GetPVarInt(playerid,"fight_price"), "запись на бой");
		new string[156];
		format(string,sizeof(string),""G"Вы записались на бой. Противник "P"%s."W" Ставка: "ORANGE"$%i",player_name[i],GetPVarInt(playerid,"fight_price"));
		SendOk(playerid,string);
		format(string,sizeof(string),""P"%s"W" принял ваше предложение. Ставка: "ORANGE"$%i",player_name[playerid], GetPVarInt(playerid,"fight_price"));
		SendOk(i,string);
		TI[RingInfo[0][rgPlayer][0]][tFight] = RingInfo[0][rgPlayer][1];
		TI[RingInfo[0][rgPlayer][1]][tFight] = RingInfo[0][rgPlayer][0];
		DeletePVar(playerid,"fight_offer");
		DeletePVar(playerid,"fight_price");
		//
		SetPVarInt(playerid,"fight_start", 1);
		SetPVarInt(i, "fight_start", 1);
		return 1;
	}
	else if(GetPVarInt(playerid, "invstat") == playerid) {
		new pltot = GetPVarInt(playerid, "invinv");
		new skinid = GetPVarInt(playerid, "invskin");
		DeletePVar(playerid, "invinv");
		DeletePVar(playerid, "invskin");
		SetPVarInt(playerid, "invstat",-1);
		if(!IsPlayerConnected(pltot)) return SendClientMessage(playerid, COLOR_GREY, "Игрок пригласивший Вас в организациию оффлайн");
		new fractionid = PI[pltot][pMember];
		PI[playerid][pMember] = fractionid;
		PI[playerid][pRank] = 1;
		PI[playerid][pFracSkin] = skinid;
		PI[playerid][pJob] = 0;
		start_work[playerid] = 1;
		PI[playerid][pSpawn] = 2;
		PI[playerid][pfWarn] = 0;
		UpdatePlayerData(playerid,"pModel",PI[playerid][pFracSkin]);
		UpdatePlayerData(playerid,"pMember",PI[playerid][pMember]);
		UpdatePlayerData(playerid,"pRank",PI[playerid][pRank]);
		UpdatePlayerData(playerid,"pJob",PI[playerid][pJob]);
		UpdatePlayerData(playerid,"FracDuty",start_work[playerid]);
		UpdatePlayerData(playerid,"fwarn",0);
		PI[playerid][pFmute] = 0;
		UpdatePlayerData(playerid,"spawn",PI[playerid][pSpawn]);
		UpdatePlayerData(playerid,"fmute",PI[playerid][pFmute]);
		SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
		new string[128];
		format(string,sizeof(string),""P"%s"W" был принят в Вашу организацию",player_name[playerid]);
		SendUse(pltot,string);
		format(string,sizeof(string),"Вы были приняты во фракцию "P"%s",FI[PI[playerid][pMember]][fName]);
		SendOk(playerid,string);
		A_SetPlayerSkin(playerid, PI[playerid][pFracSkin]);
		add_datefrac(playerid);
		FracLog(LOGS_INVITE,player_name[pltot],player_name[playerid],"invite");
	}
	else if(HealOffer[playerid] != INVALID_PLAYER_ID) {
		if(!IsPlayerConnected(HealOffer[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Игрок предложивший Вам лечение оффлайн"),HealOffer[playerid] = INVALID_PLAYER_ID;
		if(PI[playerid][pCash] < HealPrice[playerid]) {
			SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег");
			static const f_str[] = "У %s недостаточно денежных средств для лечения";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
			format(string,sizeof(string),f_str,player_name[playerid]);
			SendOk(HealOffer[playerid],string);
			HealOffer[playerid] = INVALID_PLAYER_ID;
			return 1;
		}
		SetHealth(playerid, 100.0);

		static const f_str_1[] = "Доктор "P"%s"W" вылечил вас за "ORANGE"$%d";
		new string_1[sizeof(f_str_1) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];

		format(string_1,sizeof(string_1),f_str_1,player_name[HealOffer[playerid]],HealPrice[playerid]);
		SendUse(playerid,string_1);
		
		PI[HealOffer[playerid]][pMedHeal] += 1;
		UpdatePlayerData(HealOffer[playerid],"MedHeal",PI[HealOffer[playerid]][pMedHeal]);

		GiveMoney(playerid, -HealPrice[playerid], "оплата за лечение медику");

		new price = floatround(HealPrice[playerid]*0.2);

		static const f_str_2[] = "Вы вылечили "P"%s"W" за "ORANGE"$%d";
		new string_2[sizeof(f_str_2) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];

		format(string_2,sizeof(string_2),f_str_2,player_name[playerid],price);
		SendUse(HealOffer[playerid],string_2);
		GiveMoney(HealOffer[playerid], price,"оплата за лечение игрока");
		HealOffer[playerid] = INVALID_PLAYER_ID;
		return 1;
	}
	else if(GetPVarInt(playerid,"gunoffee") == playerid && GetPVarInt(playerid,"gunoffer") != playerid) {
		new offer = GetPVarInt(playerid,"gunoffer");
		new price = GetPVarInt(playerid,"gunprice");
		if(GetPVarInt(offer,"gunoffee") == playerid) {
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");

			PI[GetPVarInt(playerid,"gunoffer")][pMats] -= GetPVarInt(playerid,"sell_gunmats");
			UpdatePlayerData(playerid,"pMats",PI[GetPVarInt(playerid,"gunoffer")][pMats]);
			
			GivePlayerWeapon(playerid, GetPVarInt(playerid,"gunid"), GetPVarInt(playerid,"gunammo"));
			
			GiveMoney(offer, price, "продажа оружия");
			GiveMoney(playerid, -price, "покупка оружия");
			new mes[128];
			format(mes,sizeof(mes),"продал(а) оружие %s",player_name[playerid]);
			MeAction(offer,mes);
			
			DeletePVar(playerid,"gunammo");
			DeletePVar(playerid,"gunid");
			DeletePVar(playerid,"gunoffee");
			DeletePVar(playerid,"gunoffer");
			DeletePVar(playerid,"gunprice");
			DeletePVar(offer,"gunoffee");
			return true;
		}
	}
	else if(GetPVarInt(playerid,"drugoffee") == playerid && GetPVarInt(playerid,"drugoffer") != playerid) {
		new offer = GetPVarInt(playerid,"drugoffer");
		new price = GetPVarInt(playerid,"drugprice");
		new value = GetPVarInt(playerid,"drugvalue");
		if(GetPVarInt(offer,"drugoffee") == playerid) {
			DeletePVar(playerid,"drugoffee");
			DeletePVar(playerid,"drugoffer");
			DeletePVar(playerid,"drugvalue");
			DeletePVar(playerid,"drugprice");
			DeletePVar(offer,"drugoffee");
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно средств");
			GiveMoney(offer, price, "продажа нарко");
			GiveMoney(playerid, -price, "покупка нарко");
			
			if(QuestProgress[offer][21] < 10 && AcceptQuest[offer][21] != 0) QuestProgress[offer][21] ++,save_quest(offer,21);
			if(QuestProgress[offer][21] == 10 && AcceptQuest[offer][21] != 0) {
				D(offer,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Наркоторговец'\n\t"NO"Квест можно завершить в списке квестов (/quest)","Закрыть","");
			}
			
			PI[playerid][pDrugs] += value;
			PI[offer][pDrugs] -= value;
			UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
			UpdatePlayerData(offer,"pDrugs",PI[offer][pDrugs]);

			new string[137];
			format(string,sizeof(string),""P"%s"W" передал Вам "P"%d"W" грамм наркотиков за "ORANGE"$%d",player_name[offer],value,price);
			SendUse(playerid,string);
			format(string,sizeof(string),"Вы передали "P"%d"W" грамм наркотиков игроку %s за "ORANGE"$%d",value,player_name[playerid],price);
			SendUse(offer,string);
			ApplyAnimation(playerid,"DEALER","shop_pay",4.1, 0, 1, 1, 0, 0, 1);
			ApplyAnimation(offer,"DEALER","shop_pay",4.1, 0, 1, 1, 0, 0, 1);
		}
	}
	else if(GetPVarInt(playerid,"ZoneOffer")) {
		new price = GetPVarInt(playerid,"ZonePrice");
		new offter = GetPVarInt(playerid,"ZoneOffer")-1;
		new sell = GetPVarInt(playerid,"sellzone");
		DeletePVar(playerid,"ZoneOffer");
		DeletePVar(playerid,"ZonePrice");
		DeletePVar(playerid,"sellzone");
		if(!IsPlayerConnected(offter)) return SendClientMessage(playerid, COLOR_GREY, "Игрок предложивший Вам купить территорию оффлайн");
		if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас не достаточно денег");
		IDGZ[playerid] = GetIDGZ(playerid);
		if(IDGZ[playerid] != -1) {
			new i = IDGZ[playerid];
			if(GZInfo[i][gFrakVlad] != sell) return SendClientMessage(playerid, COLOR_GREY, "Вам не предлагали купить эту территорию");
			VladGzone[GZInfo[i][gFrakVlad]]--;
			VladGzone[PI[playerid][pMember]]++;
			GZInfo[i][gFrakVlad] = PI[playerid][pMember];
			GangZoneStopFlashForAll(GZInfo[i][gID]);
			GangZoneHideForAll(GZInfo[i][gID]);
			GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
			SaveGZ(i);
		}

		new string[137];
		format(string,sizeof(string),""P"%s"W" купил у Вас территорию за "ORANGE"$%d",player_name[playerid],price);
		SendUse(offter,string);
		format(string,sizeof(string),"Вы купили территорию у "P"%s"W" за "ORANGE"$%d",player_name[offter], price);
		SendUse(playerid,string);
		GiveMoney(offter,price, "продажа территории");
		GiveMoney(playerid, -price, "покупка территории");
	}
	else if(GetPVarInt(playerid,"hi")) {
		new hi = GetPVarInt(playerid,"hi")-1;
		if(!IsPlayerConnected(hi)) return SendClientMessage(playerid, COLOR_GREY, "Игрок который хотел пожать Вам руку оффлайн");
		new Float:angle,string[128];
		GetPlayerFacingAngle(hi, angle);
		SetPlayerFacingAngle(playerid, angle + 180);
		ApplyAnimation(hi,"GANGS","hndshkfa",4.0,0,0,0,0,0,1);
		ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0,1);
		format(string, sizeof(string), "пожал(а) руку %s'у", player_name[playerid]);
		MeAction(hi,string, 5.0);
		DeletePVar(playerid,"hi");
	}
	else if(GetPVarInt(playerid,"kiss")) {
		new kiss = GetPVarInt(playerid,"kiss")-1;
		if(!IsPlayerConnected(kiss)) return SendClientMessage(playerid, COLOR_GREY, "Игрок который хотел поцеловать Вас оффлайн");
		if(!IsPlayerStream(4.0, playerid, kiss)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
		else {
			SetPosInFrontOfPlayer(kiss,playerid,1);
			new Float:a;
			GetPlayerFacingAngle(kiss,a);
			SetPlayerFacingAngle(playerid,180 + a);
			ApplyAnimation(kiss,"BD_FIRE","GRLFRD_KISS_03",4.0,0,0,0,0,0,1);
			ApplyAnimation(playerid,"BD_FIRE","PLAYA_KISS_03",4.0,0,0,0,0,0,0);
			DeletePVar(playerid,"kiss");
			SetPVarInt(kiss, "pc_cmd_kiss", unix+15);
			SetPVarInt(playerid, "pc_cmd_kiss", unix+15);
		}
	}
	else if(GetPVarInt(playerid,"repairoffee") == playerid && GetPVarInt(playerid,"repairoffer") != playerid) {
		new offer = GetPVarInt(playerid,"repairoffer");
		new price = GetPVarInt(playerid,"repairprice");
		if(GetPVarInt(offer,"repairoffee") == playerid) {
			SetPVarInt(playerid,"repairoffee",-1);
			SetPVarInt(playerid,"repairoffer",-1);
			DeletePVar(playerid,"repairprice");
			DeletePVar(playerid,"repairoffee");
			new vehicleid = GetPlayerVehicleID(playerid);
			if(!vehicleid) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в автомобиле");
			if(GetPlayerMoneyEx(playerid) < price) {
				SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
				SendOk(offer,"У игрока недостаточно средств");
				return true;
			}
			if(QuestProgress[offer][55] < 5 && AcceptQuest[offer][55] != 0) QuestProgress[offer][55] ++,save_quest(offer,55);
			if(QuestProgress[offer][55] == 5 && AcceptQuest[offer][55] != 0) {
				D(offer,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
			}
			if(PI[offer][pExpJob][7] < 400)
			{
				PI[offer][pExpJob][7] += 1;
				if(PI[offer][pExpJob][7] == 400) {
					PI[offer][pAcsJob][7] = 1;
					SendOk(offer,"Вы получили новый аксессуар за достижение! "GREEN"(/mm > навыки персонажа > полученные аксессуары)");
					save_acsjob(offer);
				}
				save_jskill(offer);
			}
			GiveMoney(offer, price, "механик отремонтировал");
			GiveMoney(playerid, -price, "отремонтировался у механика");
			SetVehicleHealth(vehicleid,1000.0);
			RepairVehicle(vehicleid);
			new string[137];
			format(string,sizeof(string),"Механик "P"%s"W" отремонтировал Вам транспорт за "ORANGE"$%d",player_name[offer],price);
			SendUse(playerid,string);
			format(string,sizeof(string),"Вы отремонтировали транспорт игроку "P"%s"W" за "ORANGE"$%d",player_name[playerid],price);
			SendUse(offer,string);
		}
	}
	else if(GetPVarInt(playerid, "sim_id_sell")) {
		new sell_sim_id = GetPVarInt(playerid, "sim_id_sell")-1;
		new sell_sim_sum = GetPVarInt(playerid, "sim_summ");
		new string[120];
		format(string,sizeof(string),"Вы действительно хотите приобрели SIM-карту у "P"%s "G"за "ORANGE"$%i?", player_name[sell_sim_id],sell_sim_sum);
		D(playerid, D_SELL_SIM, DSM, ""P"Покупка SIM-карты", string, "Да", "Нет");
	}
	if(GetPVarInt(playerid,"bizzProdaet")) {
		new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
		new id = PI[id_prodaet][pBusiness]-1;
		new status[20];
		new atext[24];
		switch(gBusiness[id][bizzMafia]) {
		case fRM: atext = "Русская Мафия";
		case fLCN: atext = "Итальянская мафия";
		case fYAKUZA: atext = "Японская мафия";
		default: atext = "---";
		}
		new type = gBusiness[id][bizzType] - 1;
		if(gBusiness[id][bizzStatus]) strcat(status,"{7FB151}Работает");
		else strcat(status,"{FF4242}Не работает");

		new day;
		day = (gBusiness[id][bizzDay]-gettime())/86400;

		static const f_str[] = ""W"Название: "O"%s\n\n\
										"W"Тип: "O"%s\n\
										"W"Гос.стоимость: "GREEN"$%d\n\
										"W"Цена товара: "GREEN"$%d\n\n\
										"W"Продуктов: "O"%d ед.\n\
										"W"Продуктов заказано: "O"%d"W" ед. ["GREEN"$%d"W" за ед]\n\n\
										"W"Касса: "GREEN"$%d"W"\n\
										"W"Заработано за сутки: "GREEN"$%d"W"\n\n\
										"W"Посетителей: "O"%d\n\
										"W"Аренда бизнеса: "O"%iд\n\
										"W"Крыша: "O"%s\n\n\
										"W"Состояние: "O"%s\n\n\
										"W"Вы действительно хотите купить данный бизнес за "GREEN"$%d?";
		new string[700];
		format(string,sizeof(string),f_str,gBusiness[id][bizzName],gBusinessTypeName[type],
		gBusiness[id][bizzSellPrice],gBusiness[id][bizzPrice],gBusiness[id][bizzProduct],gBusiness[id][bizzProdOrder],gBusiness[id][bizzProdOrderPrice],gBusiness[id][bizzBank],gBusiness[id][bizzBankDay]
		,gBusiness[id][bizzVisitors],day,atext, status,GetPVarInt(playerid,"bizzCena"));

		D(playerid,D_BIZZ_BUY_2,DSM, ""P"Покупка бизнеса",string,"Купить","Отмена");
	} 
	if(GetPVarInt(playerid,"car_prodaet") && GetPVarInt(playerid,"sellcar")) {
		new id_prodaet = GetPVarInt(playerid,"car_prodaet")-1;
		new car_cena = GetPVarInt(playerid,"carCena");
		new car = GetPVarInt(id_prodaet,"carnumber");

		new improve[256];
		if(CarsInfo[id_prodaet][carVehcom_1][car]) strcat(improve,"\t\t\t[Спойлер]\n");
		if(CarsInfo[id_prodaet][carVehcom_2][car]) strcat(improve,"\t\t\t[Капот]\n");
		if(CarsInfo[id_prodaet][carVehcom_3][car]) strcat(improve,"\t\t\t[Воздухозаборник]\n");
		if(CarsInfo[id_prodaet][carVehcom_4][car]) strcat(improve,"\t\t\t[Боковая юбка]\n");
		if(CarsInfo[id_prodaet][carVehcom_5][car]) strcat(improve,"\t\t\t[Фары]\n");
		if(CarsInfo[id_prodaet][carVehcom_6][car]) strcat(improve,"\t\t\t[Нитро]\n");
		if(CarsInfo[id_prodaet][carVehcom_7][car]) strcat(improve,"\t\t\t[Выхлопная труба]\n");
		if(CarsInfo[id_prodaet][carVehcom_8][car]) strcat(improve,"\t\t\t[Диски]\n");
		if(CarsInfo[id_prodaet][carVehcom_9][car]) strcat(improve,"\t\t\t[Стерео]\n");
		if(CarsInfo[id_prodaet][carVehcom_10][car]) strcat(improve,"\t\t\t[Гидравлика]\n");
		if(CarsInfo[id_prodaet][carVehcom_11][car]) strcat(improve,"\t\t\t[Передний бампер]\n");
		if(CarsInfo[id_prodaet][carVehcom_12][car]) strcat(improve,"\t\t\t[Задний бампер]\n");

		new model = CarsInfo[id_prodaet][carModel][car]-400;
		new classname[12];
		GetCarClassName(gTransport[model][trClass],classname);
		static const f_str[] = "\t\t"ORANGE"==== ИНФОРМАЦИЯ ====\n\n\
							"W"Марка авто: \t\t"P"%s\n\
							"W"Класс: \t\t\t"P"%s\n\
							"W"Пробег: \t\t"P"%.0fкм\n\
							"W"Бензобак: \t\t"P"%dл\n\
							"W"Тюнинг:\n\
							"GREEN"%s\n\n\
							"W"Вы хотите купить автомобиль у"ORANGE" %s"W" за"ORANGE" %d$?";
		new string[720];
		format(string,sizeof(string),f_str,gTransport[model][trName],classname,CarsInfo[id_prodaet][carDrived][car],gTransport[model][trTank],improve, player_name[id_prodaet], car_cena);
		D(playerid,D_SELL_CAR_2,DSM, ""P"Продажа автомобиля",string,"Да","Отмена");
	}
	if(GetPVarInt(playerid,"carProdaet") && GetPVarInt(playerid,"sellcar_type")) {
		new id_prodaet = GetPVarInt(playerid,"carProdaet")-1;
		new car_cena = GetPVarInt(playerid,"carCena");
		new car1 = GetPVarInt(id_prodaet,"numbercar1")-1;
		new car2 = GetPVarInt(id_prodaet,"numbercar2")-1;

		new improve[256];
		if(CarsInfo[id_prodaet][carVehcom_1][car1]) strcat(improve,"\t\t\t[Спойлер]\n");
		if(CarsInfo[id_prodaet][carVehcom_2][car1]) strcat(improve,"\t\t\t[Капот]\n");
		if(CarsInfo[id_prodaet][carVehcom_3][car1]) strcat(improve,"\t\t\t[Воздухозаборник]\n");
		if(CarsInfo[id_prodaet][carVehcom_4][car1]) strcat(improve,"\t\t\t[Боковая юбка]\n");
		if(CarsInfo[id_prodaet][carVehcom_5][car1]) strcat(improve,"\t\t\t[Фары]\n");
		if(CarsInfo[id_prodaet][carVehcom_6][car1]) strcat(improve,"\t\t\t[Нитро]\n");
		if(CarsInfo[id_prodaet][carVehcom_7][car1]) strcat(improve,"\t\t\t[Выхлопная труба]\n");
		if(CarsInfo[id_prodaet][carVehcom_8][car1]) strcat(improve,"\t\t\t[Диски]\n");
		if(CarsInfo[id_prodaet][carVehcom_9][car1]) strcat(improve,"\t\t\t[Стерео]\n");
		if(CarsInfo[id_prodaet][carVehcom_10][car1]) strcat(improve,"\t\t\t[Гидравлика]\n");
		if(CarsInfo[id_prodaet][carVehcom_11][car1]) strcat(improve,"\t\t\t[Передний бампер]\n");
		if(CarsInfo[id_prodaet][carVehcom_12][car1]) strcat(improve,"\t\t\t[Задний бампер]\n");

		new improve2[256];
		if(CarsInfo[playerid][carVehcom_1][car2]) strcat(improve2,"\t\t\t[Спойлер]\n");
		if(CarsInfo[playerid][carVehcom_2][car2]) strcat(improve2,"\t\t\t[Капот]\n");
		if(CarsInfo[playerid][carVehcom_3][car2]) strcat(improve2,"\t\t\t[Воздухозаборник]\n");
		if(CarsInfo[playerid][carVehcom_4][car2]) strcat(improve2,"\t\t\t[Боковая юбка]\n");
		if(CarsInfo[playerid][carVehcom_5][car2]) strcat(improve2,"\t\t\t[Фары]\n");
		if(CarsInfo[playerid][carVehcom_6][car2]) strcat(improve2,"\t\t\t[Нитро]\n");
		if(CarsInfo[playerid][carVehcom_7][car2]) strcat(improve2,"\t\t\t[Выхлопная труба]\n");
		if(CarsInfo[playerid][carVehcom_8][car2]) strcat(improve2,"\t\t\t[Диски]\n");
		if(CarsInfo[playerid][carVehcom_9][car2]) strcat(improve2,"\t\t\t[Стерео]\n");
		if(CarsInfo[playerid][carVehcom_10][car2]) strcat(improve2,"\t\t\t[Гидравлика]\n");
		if(CarsInfo[playerid][carVehcom_11][car2]) strcat(improve2,"\t\t\t[Передний бампер]\n");
		if(CarsInfo[playerid][carVehcom_12][car2]) strcat(improve2,"\t\t\t[Задний бампер]\n");

		new model1 = CarsInfo[playerid][carModel][car2]-400;
		new model2 = CarsInfo[id_prodaet][carModel][car1]-400;
		new classname[12];
		new classname2[12];
		GetCarClassName(gTransport[model1][trClass],classname);
		GetCarClassName(gTransport[model2][trClass],classname2);
		static const f_str[] = "\t\t\t"ORANGE"==== ИНФОРМАЦИЯ ====\n\n\
										"YELLOW"\t\t\tВаше авто:\n\n\
										"W"Марка авто: \t\t"P"%s\n\
										"W"Класс: \t\t\t"P"%s\n\
										"W"Пробег: \t\t"P"%.0fкм\n\
										"W"Бензобак: \t\t"P"%dл\n\
										"W"Тюнинг:\n\
										"GREEN"%s\n\n\
										"YELLOW"\t\t\tОбмен на авто:\n\n\
										"W"Марка авто: \t\t"P"%s\n\
										"W"Класс: \t\t\t"P"%s\n\
										"W"Пробег: \t\t"P"%.0fкм\n\
										"W"Бензобак: \t\t"P"%dл\n\
										"W"Тюнинг:\n\
										"GREEN"%s\n\n\
										"NO"Вы действительно хотите совершить обмен с Вашей доплатой:"ORANGE" $%d?";
		new string[900];
		format(string,sizeof(string),f_str,gTransport[model1][trName],classname,CarsInfo[id_prodaet][carDrived][car1],gTransport[model1][trTank],improve2,
		gTransport[model2][trName],classname2,CarsInfo[id_prodaet][carDrived][car2],gTransport[model2][trTank],improve,car_cena);
		D(playerid,D_CAR_BUY,DSM, ""P"Обмен авто",string,"Да","Отмена");
	}
	if(GetPVarInt(playerid,"hCarSeller")) {
		new str[250];
		format(str,sizeof(str),""W"Вы действительно хотите купить дом на колесах за"ORANGE" $%d?",GetPVarInt(playerid,"hCarPrices"));
		D(playerid,D_TRAILER_BUY_2,DSM,""P"Покупка дома",str,"Купить","Отмена");
	}
	if(GetPVarInt(playerid,"houseSeller")) {
		new id_prodaet = GetPVarInt(playerid,"houseSeller")-1;
		new id = PI[id_prodaet][pHouse]-1;

		new classname[20],status[12];
		switch(gHouses[id][houseClass]) {
		case 0:classname = "Эконом";
		case 1:classname = "Cредний";
		case 2:classname = "Элитный";
		case 3:classname = "Особняк";
		default: classname = "Неизвестно";
		}
		new cnt;
		for(new i;i<3;i++) {
			if(gHouses[id][houseHabitID][i]) cnt++;
		}
		if(gHouses[id][houseClose]) strcat(status,"Закрыт");
		else strcat(status,"Открыт");
		new improve[96];
		if(gHouses[id][houseImprove][0]) strcat(improve,"Автоматические двери\n");
		if(gHouses[id][houseImprove][1]) strcat(improve,"Снижение субсидий\n");
		if(gHouses[id][houseImprove][0] == 0 && gHouses[id][houseImprove][1] == 0) strcat(improve,"Отсутствуют");

		new day;
		day = (gHouses[id][houseDay]-gettime())/86400;
		static const f_str[] = ""W"Номер дома: \t\t"O"%d\n\
										"W"Класс: \t\t\t"O"%s\n\
										"W"К-во жильцов: \t"O"%d/%d\n\
										"W"Аренда дома: \t\t"O"%iд\n\
										"W"Статус: \t\t"O"%s\n\
										"W"Гос. цена: \t\t"O"%d\n\n\
										"P"Улучшения:\n\
										"GREEN"%s\n\n\
										"W"Вы действительно хотите купить данный дом за "GREEN"$%d"W"?";
		new string[512];
		format(string,sizeof(string),f_str,id+1,classname,cnt,gHouses[id][houseClass],day,status,gHouses[id][housePrice],improve,GetPVarInt(playerid,"housePrices"));
		D(playerid,D_HOUSE_BUY_2,DSM, ""P"Покупка дома",string,"Купить","Отмена");
	}
	return true;
}

stock key_dectivate(playerid) {
	if(TI[playerid][tDiceID] != INVALID_PLAYER_ID) {
		new id = TI[playerid][tDiceID];
		TI[playerid][tDiceMoney] = 0;
		TI[playerid][tDiceClosed] = TI[id][tDiceClosed] = false;
		new string[128];
		format(string,sizeof(string),"Вы отказались играть в кости с %s",player_name[id]);
		SendOk(playerid, string);

		format(string,sizeof(string),"%s отказался играть с вами в кости",player_name[playerid]);
		SendOk(id, string);
		if(TI[id][tDiceIDs] == playerid) TI[playerid][tDiceID] = TI[id][tDiceIDs] = INVALID_PLAYER_ID;
		else TI[playerid][tDiceID] = INVALID_PLAYER_ID;
	}
	else if(GetPVarInt(playerid,"give_inv")) {
		
		new acter = GetPVarInt(playerid,"give_inv")-1;
		SendClientMessage(playerid, COLOR_GREY, "Вы отказались принимать предмет");
		SendClientMessage(GetPVarInt(playerid,"give_inv")-1, COLOR_GREY, "Игрок отказался принимать предмет");
		PI[acter][pActivTrade][GetPVarInt(acter,"pl_slot")] = 0;
		
		DeletePVar(acter,"activ_trade");
		DeletePVar(playerid,"give_inv");
		DeletePVar(playerid,"pl_inv");
		DeletePVar(playerid,"pl_count");
		DeletePVar(playerid,"pl_slot");
	}
	else if(GetPVarInt(playerid,"lices")) {
		SendOk(playerid,"Вы отказались от просмотра лицензий");
		SendOk(GetPVarInt(playerid,"lices")-1,"Игрок отказался от просмотра лицензий");
		DeletePVar(playerid,"lices");
	}
	else if(GetPVarInt(playerid,"roullet")) {
		SendOk(playerid,"Вы отказались от покупки предмета");
		SendOk(GetPVarInt(playerid,"roullet")-1,"Игрок отказался от покупки предмета");
		DeletePVar(GetPVarInt(playerid,"roullet")-1,"roull_active");
		DeletePVar(playerid,"roullet");
	}
	else if(GetPVarInt(playerid,"lic_")) {
		SendOk(playerid,"Вы отказались от покупки лицензии");
		SendOk(GetPVarInt(playerid,"lic_")-1,"Игрок отказался от покупки лицензии");
		DeletePVar(playerid,"lic_");
	}
	else if(GetPVarInt(playerid,"pts")) {
		SendOk(playerid,"Вы отказались от просмотра документов на т/с");
		SendOk(GetPVarInt(playerid,"pts")-1,"Игрок отказался от просмотра документов на т/с");
		DeletePVar(playerid,"pts");
	}
	else if(GetPVarInt(playerid,"skillss")) {
		SendOk(playerid,"Вы отказались от просмотра навыков владения оружием");
		SendOk(GetPVarInt(playerid,"skillss")-1,"Игрок отказался от просмотра ваших навыков владения оружием");
		DeletePVar(playerid,"skillss");
	}
	else if(GetPVarInt(playerid,"wbook")) {
		SendOk(playerid,"Вы отказались от просмотра трудовой книжки");
		SendOk(GetPVarInt(playerid,"wbook")-1,"Игрок отказался от просмотра вашей трудовой книжки");
		DeletePVar(playerid,"wbook");
	}
	else if(GetPVarInt(playerid,"uds")) {
		SendOk(playerid,"Вы отказались от просмотра удостоверения");
		SendOk(GetPVarInt(playerid,"uds")-1,"Игрок отказался от просмотра удостоверения");
		DeletePVar(playerid,"uds");
	}
	else if(GetPVarInt(playerid,"udjur")) {
		SendOk(playerid,"Вы отказались от просмотра удостоверения журналиста");
		SendOk(GetPVarInt(playerid,"udjur")-1,"Игрок отказался от просмотра удостоверения журналиста");
		DeletePVar(playerid,"udjur");
	}
	else if(GetPVarInt(playerid,"pass")) {
		SendOk(playerid,"Вы отказались от просмотра паспорта");
		SendOk(GetPVarInt(playerid,"pass")-1,"Игрок отказался от просмотра паспорта");
		DeletePVar(playerid,"pass");
	}
	else if(GetPVarInt(playerid,"fpass")) {
		SendOk(playerid,"Вы отказались от просмотра паспорта");
		SendOk(GetPVarInt(playerid,"fpass")-1,"Игрок отказался от просмотра паспорта");
		DeletePVar(playerid,"fpass");
	}
	else if(GetPVarInt(playerid,"medcard")) {
		SendOk(playerid,"Вы отказались от просмотра мед.карты");
		SendOk(GetPVarInt(playerid,"medcard")-1,"Игрок отказался от просмотра мед.карты");
		DeletePVar(playerid,"medcard");
	}
	else if(HealOffer[playerid] != INVALID_PLAYER_ID) {
		SendOk(playerid, "Вы отказались от лечения");
		SendOk(HealOffer[playerid], "Игрок отказался от лечения");
		HealOffer[playerid] = INVALID_PLAYER_ID;
	}
	else if(GetPVarInt(playerid,"repairoffee") == playerid && GetPVarInt(playerid,"repairoffer") != playerid) {
		new offer = GetPVarInt(playerid,"repairoffer");
		if(GetPVarInt(offer,"repairoffee") == playerid) {
			SetPVarInt(playerid,"repairoffee",-1);
			SetPVarInt(playerid,"repairoffer",-1);
			DeletePVar(playerid,"repairprice");
			DeletePVar(offer,"repairoffee");
			new string[128];
			format(string, sizeof(string), "Вы отказались от починки транспорта игроком %s", player_name[offer]);
			SendOk(playerid, string);
			format(string, sizeof(string), "%s отказался от починки транспорта", player_name[playerid]);
			SendOk(offer, string);
		}
	}
	else if(GetPVarInt(playerid, "invstat") == playerid) {
		SendOk(playerid,"Вы отказались от вступления в организацию");
		SendOk(GetPVarInt(playerid, "invinv"),"Игрок отказался от вступления в организацию");
		DeletePVar(playerid, "invinv");
		DeletePVar(playerid, "invskin");
		SetPVarInt(playerid, "invstat",-1);
	}
	else if(GetPVarInt(playerid,"kiss")) {
		SendOk(playerid,"Вы отказались от поцелуя");
		SendOk(GetPVarInt(playerid,"kiss")-1,"Игрок отказался от поцелуя");
		DeletePVar(playerid,"kiss");
	}
	if(GetPVarInt(playerid,"hi")) {
		SendOk(playerid,"Вы отказались от рукопожатия");
		SendOk(GetPVarInt(playerid,"hi")-1,"Игрок отказался от рукопожатия");
		DeletePVar(playerid,"hi");
	}
	if(GetPVarInt(playerid,"family_invite")) {
		SendOk(playerid,"Вы отказались от предложения вступить в семью");
		SendOk(GetPVarInt(playerid,"family_invite") - 1,"Игрок отказался от предложения вступить в Вашу семью");
		DeletePVar(GetPVarInt(playerid,"family_invite") - 1,"family_invite");
		DeletePVar(playerid,"family_invite");
	}
	else if(GetPVarInt(playerid, "drugoffee") == playerid && GetPVarInt(playerid,"drugoffer") != playerid) {
		new offer = GetPVarInt(playerid,"drugoffer");
		if(GetPVarInt(offer,"drugoffee") == playerid) {
			DeletePVar(playerid,"drugoffee");
			DeletePVar(playerid,"drugoffer");
			DeletePVar(playerid,"drugprice");
			DeletePVar(offer,"drugoffee");

			new string[128];
			format(string, sizeof(string), "Вы отказались от покупки наркотиков у игрока %s", player_name[offer]);
			SendOk(playerid, string);
			format(string, sizeof(string), "%s отказался от покупки наркотиков", player_name[playerid]);
			SendOk(offer, string);
		}
	}
	else if(GetPVarInt(playerid, "gunoffee") == playerid && GetPVarInt(playerid,"gunoffer") != playerid) {
		new offer = GetPVarInt(playerid,"gunoffer");
		if(GetPVarInt(offer,"gunoffee") == playerid) {
			DeletePVar(playerid,"gunoffee");
			DeletePVar(playerid,"gunoffer");
			DeletePVar(playerid,"gunprice");
			DeletePVar(offer,"gunoffee");

			new string[128];
			format(string, sizeof(string), "Вы отказались от покупки оружия у игрока %s", player_name[offer]);
			SendOk(playerid, string);
			format(string, sizeof(string), "%s отказался от покупки оружия", player_name[playerid]);
			SendOk(offer, string);
		}
	}
	else if(GetPVarInt(playerid, "ZoneOffer")) {
		SendOk(GetPVarInt(playerid,"ZoneOffer")-1, "Игрок отказался от покупки территории");
		SendOk(playerid, "Вы отказались от покупки территории");
		DeletePVar(playerid,"ZoneOffer");
		DeletePVar(playerid,"ZonePrice");
		DeletePVar(playerid,"sellzone");
	}
	else if(GetPVarInt(playerid, "sim_id_sell")) {
		SendOk(GetPVarInt(playerid, "sim_id_sell")-1, "Игрок отказался от покупки SIM-карты");
		SendOk(playerid, "Вы отказались от покупки SIM-карты");
		DeletePVar(playerid, "sim_id_sell");
		DeletePVar(playerid, "sim_summ");
	}
	else if(GetPVarInt(playerid,"bizzProdaet")) {
		new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
		new id_pokupaet = GetPVarInt(id_prodaet,"bizzPokupaet")-1;
		SendOk(playerid,"Вы отказались от покупки бизнеса");
		SendOk(id_prodaet,"Игрок отказался от покупки Вашего бизнеса");
		DeletePVar(playerid,"bizzProdaet");
		DeletePVar(playerid,"bizzCena");
		DeletePVar(id_pokupaet,"bizzPokupaet");
	}
	else if(GetPVarInt(playerid,"houseSeller")) {
		new id_prodaet = GetPVarInt(playerid,"houseSeller")-1;
		SendOk(playerid,"Вы отказались от покупки дома");
		SendOk(id_prodaet,"Игрок отказался от покупки Вашего дома");
		DeletePVar(playerid,"houseSeller");
		DeletePVar(playerid,"housePrices");
		DeletePVar(id_prodaet,"houseBuyer");
	}
	else if(TI[playerid][tTazers][2] != -1) {
		new target = TI[playerid][tTazers][2];
		if(IsPlayerStream(2.0, playerid, target)) pc_cmd_cuff(playerid, IntToStr(target));
		TI[target][tTazers][2] = -1;
		TI[playerid][tTazers][2] = -1;
	}
	return true;
}

CB: check_phone(playerid, telephone) {
	new rows;
	cache_get_row_count(rows);
	if(rows) return SendClientMessage(playerid, COLOR_GREY, "Произошла ошибка при покупке SIM-карты, попробуйте еще раз!");
	new num;
	foreach(new i : Player)
	{
		if((PI[i][pPhone] == telephone) && (i != playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Произошла ошибка при покупке SIM-карты, попробуйте еще раз!");
			num++;
			break;
		}
	}
	if(num == 0)
	{
		PI[playerid][pPhone] = telephone;
		UpdatePlayerData(playerid,"pPhone",telephone);
		new string[128];
		format(string,sizeof(string),"Поздравляем с приобретением телефона! Ваш номер: "ORANGE"%d",telephone);
		SendUse(playerid,string);
		if(QuestProgress[playerid][5] == 0 && AcceptQuest[playerid][5] != 0)
		{
			QuestProgress[playerid][5] ++;
			D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Телефон'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
			NextStapQI(playerid,5);
		}
	}
	return true;
}

CB:bizz_list(playerid)
{
	new rows, b_name[35], b_id, b_type, b_st;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "На вашем аккаунте отсутствуют бизнесы");
	if(rows)
	{
		new string[220];
		format(string,sizeof(string), "{FFFFFF}ID\t{FFFFFF}Название\t{FFFFFF}Статус\t{FFFFFF}Тип\n");
		for(new j = 0 ; j < rows ; j ++)
		{
			cache_get_value_name(j, "name",b_name, 26);
			cache_get_value_name_int(j,"type",b_type);
			cache_get_value_name_int(j,"id",b_id);
			cache_get_value_name_int(j,"status",b_st);
			BizzID[playerid][j] = b_id;
			format(string,sizeof(string),"%s%d\t%s\t%s\t%s\n",string, b_id,b_name,(b_st == 0) ? ("Закрыт") : ("Открыт"),gBusinessTypeName[b_type-1]);
		}
		D(playerid, D_BIZZ_OWN, DSTH, ""G"Список бизнесов | "P"Управление", string, "Выбрать", "Закрыть");
	}
	return true;
}

stock get_ref_count(playerid)
{
	new ref_count = 0;
	new query[165];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM `referals` WHERE `owner` = '%s'",player_name[playerid]);
	new Cache:result = mysql_query(connects, query);
	ref_count = cache_num_rows ( ) ;
	cache_delete ( result ) ;
	return ref_count ;
}

stock update_apart(romid) {
	DestroyDynamicPickup(Apartment[romid][aPickup]);
	if(GetString("None",Apartment[romid][aOwner])) Apartment[romid][aPickup] = CreateDynamicPickup(1273,1,Apartment[romid][aX],Apartment[romid][aY],Apartment[romid][aZ],Apartment[romid][apID]);
	else Apartment[romid][aPickup] = CreateDynamicPickup(1272,1,Apartment[romid][aX],Apartment[romid][aY],Apartment[romid][aZ], Apartment[romid][apID]);
	return true;
}

stock NotFlyingHack(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 20.0, 1968.3948,-1198.0753,17.4500)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 2310.9861,-1412.8881,21.6151)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 1241.1094,-2379.7263,8.3145)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 225.6394,-1187.0551,73.4500)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 193.2040,-1224.7693,76.5034)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 196.0067,-1232.3684,76.5034)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 512.7349,-1104.1942,78.8238)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 1283.7939,-806.5845,86.1230)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 2531.6001,1568.4032,8.4171)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 60.0, 2105.2651,1916.6781,9.5989)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 150.0, -792.4582,2173.0356,40.0821)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 150.0, 1993.5868,1601.2623,9.2979)) return true;
	return false;
}

stock SetPlayerWalkingStyle ( playerid, style )
{
	PI[playerid][pWalk] = style ;
	UpdatePlayerData(playerid, "walk",PI[playerid][pWalk] ) ;
	return 1 ;
}

DamageActive(playerid) {
	if(PI[playerid][pSettings][10]) return true;
	return false;
}

PlayerSpectate(playerid) {
	return TI[playerid][tSpectr];
}

stock exp_update(i) {
	if(PI[i][pExp]+1 >= (PI[i][pLevel])*6) {
		PI[i][pLevel] += 1;
		PI[i][pExp] = 0;
		UpdatePlayerData(i,"pLevel",PI[i][pLevel]);
		DollahScoreUpdate(i);
		SendClientMessage(i, CGOLD, "Поздравляем! Ваш уровень повышен");
		new money_level = Random(3000,5000);
		GiveMoney(i,money_level,"Lvl up");
	}
	return 1;
}

CB: job_build(playerid) {
	SetPlayerAttachedObject(playerid, 8, 1264, 6, 0.222, 0.024, 0.128, 1.90, -90.0, 0.0, 0.5,0.5, 0.5);
	SetPVarInt(playerid,"job_build",1);
	ApplyAnimation(playerid, "CARRY", "null", 1.0, 0, 0, 0, 0, 0, 0);
	PlayerClearAnim[playerid] = 1;
	DeletePVar(playerid,"anim_build");
	TogglePlayerControllable(playerid, 1);
	EnableGPSForPlayer(playerid,1694.1818,421.9498,30.6758);
	return 1;
}

CB: player_timer(playerid) {
	if(!IsPlayerConnected(playerid)) {
		PlayerSecondTimer[playerid] = -1;
		return 1;
	}
	PlayerSecondTimer[playerid] = SetTimerEx("player_timer", 1000, false, "i",playerid);
	if (!TI[playerid][tLogin]) {
		if (TI[playerid][tLoginTime] > 0) {
			if (--TI[playerid][tLoginTime] == 0) {
				SendClientMessage(playerid, COLOR_GREY, "Время на авторизацию вышло");
				KickEx(playerid);
				PlayerSecondTimer[playerid] = -1;
				return true;
			}
		}
	}
	if(TI[playerid][tLogin])
	{
		if(PI[playerid][pHospital] || TI[playerid][tHeal]) {
			SetPVarInt(playerid,"timer_heal",GetPVarInt(playerid,"timer_heal") + 1);
			new Float:health;
			GetPlayerHealth(playerid,health);
			if(GetPVarInt(playerid,"timer_heal") >= 3)
			{
				if(PI[playerid][pPremium])
				{
					if(TI[playerid][tHeal]) SetHealth(playerid, health + 3*3);
					else SetHealth(playerid, health + 3);
					GameTextForPlayer(playerid, "~g~+3 HP", 0, 1);
					DeletePVar(playerid,"timer_heal");
				}
				else
				{
					if(TI[playerid][tHeal]) SetHealth(playerid, health + 3*2);
					else SetHealth(playerid, health + 2);
					GameTextForPlayer(playerid, "~g~+2 HP", 0, 1);
					DeletePVar(playerid,"timer_heal");
				}
			}
			if(health >= 95) {
				if(PI[playerid][pHospital]) SendOk(playerid,"Вы прошли курс лечения. Можете покинуть больницу");
				PI[playerid][pHospital] = 0;
				UpdatePlayerData(playerid,"pHospital",PI[playerid][pHospital]);
				DeletePVar(playerid,"timer_heal");
			}
		}
		if (TI[playerid][tCheatsDetectsTime]){
			if (--TI[playerid][tCheatsDetectsTime] <= 0) {
				TI[playerid][tCheatsDetects] = 0;
				TI[playerid][tCheatsDetectsTime] = 0;
			}
		}
		if (UsingDrugs[playerid] > 0)
		{
			UsingDrugs[playerid]--;
			if (UsingDrugs[playerid] == 0)
			{
				SetPlayerTime(playerid, tmphour, tmpminute);
				SetPlayerWeather(playerid, 1);
				SetPlayerDrunkLevel(playerid, 0);
			}
		}
		if (PlayerBuildFix[playerid] == 1 && PlayerBuildExFix[playerid] <= unix) {
			SetPlayerAttachedObject(playerid, 8, 1264, 6, 0.222, 0.024, 0.128, 1.90, -90.0, 0.0, 0.5,0.5, 0.5);
			SetPVarInt(playerid,"job_build",1);
			ApplyAnimation(playerid, "CARRY", "null", 1.0, 0, 0, 0, 0, 0, 0);
			PlayerClearAnim[playerid] = 1;
			DeletePVar(playerid,"anim_build");
			TogglePlayerControllable(playerid, 1);
			EnableGPSForPlayer(playerid,1694.1818,421.9498,30.6758);
			PlayerBuildFix[playerid] = 0;
		}
		if (PlayerBuild2Fix[playerid] == 1 && PlayerBuild2ExFix[playerid] <= unix) {
			job_welding(playerid);
			PlayerBuild2Fix[playerid] = 0;
		}
		if (PlayerHealFix[playerid] == 1 && PlayerHealExFix[playerid] <= unix) {
			PlayerHealFix[playerid] = 0;
			drug_effect(playerid);
		}
		if(GetPVarInt(playerid,"taxi_time") <= gettime()) {
			DeletePVar(playerid,"taxi_bizz");
			DeletePVar(playerid,"taxi_time");
		}
		if(TI[playerid][tGagTime]) {
			TI[playerid][tGagTime] --;
			if(TI[playerid][tGagTime] == 1) {
				TI[playerid][tGag] = false;
				TI[playerid][tGagTime] = 0;
				SendOk(playerid, "Кляп стал мокрым и выпал, Вы снова можете говорить");
			}
		}
		if(TI[playerid][tCuffed] == 1) {
			if(!TI[playerid][tCuffedTime]) {
				TogglePlayerControllable(playerid, true);
				TI[playerid][tCuffed] = 0;
				TI[playerid][tCuffedTime] = 0;
			}
			else if(TI[playerid][tCuffedTime]) {
				TI[playerid][tCuffedTime] --;
				if(TI[playerid][tCuffedTime] == 1) {
					TI[playerid][tCuffedTime] = 0;
				}
			}
		}
		if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID) {
			new cuffed = GotoInfo[playerid][gtID];
			if(!IsPlayerConnected(cuffed) || !TI[cuffed][tLogin]) {
				GotoInfo[playerid][gtID] = INVALID_PLAYER_ID;
				GotoInfo[playerid][gtTPX] = 0.0;
				GotoInfo[playerid][gtTPY] = 0.0;
				GotoInfo[playerid][gtTPZ] = 0.0;
				GotoInfo[cuffed][gtState] = 0;
				GotoInfo[cuffed][gtStayed] = 0;
				GotoInfo[cuffed][gtGoID] = INVALID_PLAYER_ID;
				GotoInfo[cuffed][gtX] = 0.0;
				GotoInfo[cuffed][gtY] = 0.0;
				GotoInfo[cuffed][gtZ] = 0.0;
			}
		}
		if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) {
			new goid = GotoInfo[playerid][gtGoID];
			if(IsPlayerConnected(goid) && TI[goid][tLogin]) {
				new Float:xX, Float:xY, Float:xZ,Float:agle;
				GetPlayerPos(goid, xX, xY, xZ);
				GetPlayerFacingAngle(playerid, agle);
				if(!IsPlayerInRangeOfPoint(playerid, 20, xX, xY, xZ)) {
					TI[playerid][tVirtualWorld] = GetPlayerVirtualWorld(goid);
					TI[playerid][tInterior] = GetPlayerInterior(goid);
					SetPlayerFacingAngle(playerid,agle);
					SetPlayerPosAC(playerid, xX,xY,xZ,TI[playerid][tVirtualWorld],TI[playerid][tInterior]);
					SetPlayerVirtualWorld(playerid, TI[playerid][tVirtualWorld]);
					SetPlayerInterior(playerid, TI[playerid][tInterior]);
				}
				if(GetPlayerState(goid)==1) {
					new ANIMATION;
					if(GotoInfo[goid][gtTPX] != 0.0 || GotoInfo[goid][gtTPY] != 0.0) {
						SetPlayerFaceToPoint(playerid, GotoInfo[goid][gtTPX], GotoInfo[goid][gtTPY]);
						ANIMATION = GoPlayerAnimation(playerid, GotoInfo[goid][gtTPX], GotoInfo[goid][gtTPY], GotoInfo[goid][gtTPZ]);
					}
					else {
						TurnPlayerFaceToPlayer(playerid, goid);
						ANIMATION = GoPlayerAnimation(playerid, xX, xY, xZ);
					}
					if(ANIMATION != 1) {
						if(IsPlayerInRangeOfPoint(playerid, 0.05, GotoInfo[playerid][gtX], GotoInfo[playerid][gtY], GotoInfo[playerid][gtZ])) {
							GotoInfo[playerid][gtStayed] ++;
							if(GotoInfo[playerid][gtStayed] >= 10) {
								new Float:xA;
								GetPlayerPos(playerid, xX, xY, xZ);
								GetPlayerFacingAngle(playerid, xA);
								ShiftCords(0, xX, xY, xZ, xA, 1.5);
								SetPlayerPosAC(playerid, xX, xY, xZ,TI[playerid][tVirtualWorld],TI[playerid][tInterior]);
								SetPlayerVirtualWorld(playerid, TI[playerid][tVirtualWorld]);
								SetPlayerInterior(playerid, TI[playerid][tInterior]);
								GotoInfo[playerid][gtStayed] = 0;
							}
						}
						else GotoInfo[playerid][gtStayed] = 0;
						GetPlayerPos(playerid, GotoInfo[playerid][gtX], GotoInfo[playerid][gtY], GotoInfo[playerid][gtZ]);
					}
				}
			}
			else {
				GotoInfo[playerid][gtGoID] = INVALID_PLAYER_ID;
				GotoInfo[playerid][gtX] = 0.0;
				GotoInfo[playerid][gtY] = 0.0;
				GotoInfo[playerid][gtZ] = 0.0;
			}
		}
		if (PlayerClearAnim[playerid] == 1) {
			PlayerClearAnim[playerid] = 0;
			ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 1);
		}
		if (PlayerChatExFix[playerid] == 1)
		{
			if(PlayerChatFix[playerid] < GetTickCount())
			{
				PlayerChatExFix[playerid] = 0;
				ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 1);
			}
		}
		if(SERIU[playerid][sID] != INVALID_PLAYER_ID) {
			recon_update(playerid,SERIU[playerid][sID]);
		}
		gettime(hour_s, minute_s, second_s);
		if (minute_s == 10 && second_s == 0 || minute_s == 40 && second_s == 0) PI[playerid][pStartLomka] = 1;
		if (hour_s == 0 && minute_s == 0 && second_s == 0)
		{
			if (getDayEx() == 2 && PI[playerid][pAdmin])
			{
				gAdminTime[playerid] = 0;
				mysql_tquery(connects, "UPDATE `"TABLE_ADMIN"` SET online_monday = 0, online_tuesday = 0, online_wednesday = 0, online_thursday = 0, online_friday = 0, online_saturday = 0, online_sunday = 0", "", "");
			}
			gOnlinePlayer[playerid][1] = gOnlinePlayer[playerid][0];
			gOnlinePlayerAFK[playerid][1] = gOnlinePlayerAFK[playerid][0];
			gOnlinePlayer[playerid][0] = 0;
			gOnlinePlayerAFK[playerid][0] = 0;
			new mas[17] = {40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56};
			for(new i;i < 17;i++)
			{
				if(time_quest[playerid][mas[i]]) {
					QuestProgress[playerid][mas[i]] = 0;
					AcceptQuest[playerid][mas[i]] = 0;
					time_quest[playerid][mas[i]] = 0;
				}
			}
		}
		if (Trailer_job[playerid] != INVALID_VEHICLE_ID && !GetPVarInt(playerid, "attach_trailer"))
		{
			if (PlayerTrailerTime[playerid]) PlayerTrailerTime[playerid]--;
			else if (PlayerTrailerTime[playerid] < 1)
			{
				A_DestroyVehicle(Trailer_job[playerid]);
				Trailer_job[playerid] = INVALID_VEHICLE_ID;
				if (gPlayerProdText[playerid] != Text3D: -1)
				{
					DestroyDynamic3DTextLabel(gPlayerProdText[playerid]);
					gPlayerProdText[playerid] = Text3D:  -1;
				}
				if (gPlayerProdCP[playerid] != -1) DestroyDynamicCP(gPlayerProdCP[playerid]);
				DeletePVar(playerid, "count_prod2");
				DeletePVar(playerid, "count_prod");
				DeletePVar(playerid, "attach_trailer");
			}
		}
		if(IsPlayerInAnyVehicle(playerid)) {
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
				new veh = GetPlayerVehicleID(playerid);
				if(veh == LastVeh[playerid]) {
					new tr = GetVehicleTrailer(veh);
					if(tr != 0) {
						if(VehTrailer[playerid] != INVALID_VEHICLE_ID) {
							if(VehTrailer[playerid] != tr) {
								OnPlayerDeattachTrailer(playerid,veh,VehTrailer[playerid]);
								VehTrailer[playerid] = tr;
								OnPlayerAttachTrailer(playerid,veh,tr);
							}
						}
						else {
							VehTrailer[playerid] = tr;
							OnPlayerAttachTrailer(playerid,veh,tr);
						}
					}
					else {
						if(VehTrailer[playerid] != INVALID_VEHICLE_ID) {
							OnPlayerDeattachTrailer(playerid,veh,VehTrailer[playerid]);
							VehTrailer[playerid] = INVALID_VEHICLE_ID;
						}
					}
				}
				else {
					LastVeh[playerid] = veh;
					new tr = GetVehicleTrailer(veh);
					if(tr != 0) VehTrailer[playerid] = tr;
					else VehTrailer[playerid] = INVALID_VEHICLE_ID;
				}
			}
		}
		if(TI[playerid][tTrucker][0] != 0 && TK_Trailer[playerid] != INVALID_VEHICLE_ID) {
			new string[10];
			TI[playerid][tTrucker][0]--;
			format(string,sizeof(string),"%d",TI[playerid][tTrucker][0]);
			GameTextForPlayer(playerid, string, 1000, 6);
			if(TI[playerid][tTrucker][0] == 0) {
				TI[playerid][tTrucker][0] = 0;
				TI[playerid][tTrucker][1] = 0;
				A_DestroyVehicle(TK_Trailer[playerid]);
				TK_Trailer[playerid] = INVALID_VEHICLE_ID;
				Delete3DTextLabel(Gruz[playerid]);
				SendClientMessage(playerid,COLOR_GREY,"Груз отбуксирован на склад");
			}
		}
		gOnlinePlayer[playerid][0]++;
		NoRoof(playerid);
		if(PI[playerid][pFamily]) {
			if(fam_lable[playerid] == Text3D:-1) { 
				new string[50];
				if(gFamily[PI[playerid][pFamily]-1][famType]) format(string,sizeof(string),"[$] {%s}%s",FamilyColor[gFamily[PI[playerid][pFamily]-1][famColor]],gFamily[PI[playerid][pFamily]-1][famName]);
				else format(string,sizeof(string),"{%s}%s",FamilyColor[gFamily[PI[playerid][pFamily]-1][famColor]],gFamily[PI[playerid][pFamily]-1][famName]);
				fam_lable[playerid] = CreateDynamic3DTextLabel(string, -1, 0.0, 0.0, 0.025, 5.0, playerid,INVALID_VEHICLE_ID,1);
			}
		}
		else if((fam_lable[playerid] != Text3D:-1 && !PI[playerid][pFamily])) {
			DestroyDynamic3DTextLabelEx(fam_lable[playerid]);
			fam_lable[playerid] = Text3D:-1;
		}
		if(CountFloodForPlayer[playerid] > 0) CountFloodForPlayer[playerid] = 0;
		if(PI[playerid][pMute] > 0 && TI[playerid][tAFK] <= 3) {
			PI[playerid][pMute] --;
			UpdatePlayerData(playerid,"mute",PI[playerid][pMute]);
			if(PI[playerid][pMute] <= 0) {
				SendOk(playerid, "Срок действия бана чата закончился");
				UpdatePlayerData(playerid,"mute",0);
			}
		}
		if(PI[playerid][pFmute] > 0 && TI[playerid][tAFK] <= 3) {
			PI[playerid][pFmute] --;
			if(!PI[playerid][pFmute]) {
				UpdatePlayerData(playerid,"fmute",0);
				SendOk(playerid,"Срок действия заглушки в организации закончился");
			}
		}
		if (PlayerUnFreezeFix[playerid] == 1 && PlayerUnFreezeTimerFix[playerid] < gettime()) {
			UnFreeze(playerid);
		}
		if(PI[playerid][pJailTime] > 0) {
			if(PI[playerid][pPremium]) PI[playerid][pJailTime] -= 1;
			PI[playerid][pJailTime] -= 1;
			UpdatePlayerData(playerid,"pJailTime",PI[playerid][pJailTime]);
			if(PI[playerid][pJailTime] <= 0) {
				SendClientMessage(playerid, CGOLD, "Вы заплатили свой долг обществу, теперь Вы свободны");
				PI[playerid][pJailTime] = 0;
				PI[playerid][pJail] = 0;
				UpdatePlayerData(playerid,"pJailTime",0);
				UpdatePlayerData(playerid,"pJail",0);
				SetCameraBehindPlayer(playerid);
				PlayerSpawn(playerid);
				GameTextForPlayer(playerid,"~g~Freedom", 5000, 1);
			}
		}
		if(TI[playerid][tDuel] != -1) {
			if(TI[playerid][tAFK] >= 20) {
				if(DI[TI[playerid][tDuel]][duel_start] == true) {
					end_duel(playerid,1);
				}
			}
		}
		TI[playerid][tAFK] ++;
		if(TI[playerid][tAFK] >= 3) {
			new string[40];
			string = "";
			format(string,sizeof(string),""W"На паузе: "NO"%s",Convert(TI[playerid][tAFK]));
			SetPlayerChatBubble(playerid,string,0x7FB151AA,10.0,1600);
			gOnlinePlayerAFK[playerid][0]++;
		}
		if(TI[playerid][tAFK] <= 15) {
			if(PI[playerid][pAdmin] > 0) {
				new reps = 0;
				for(new z;z<MAX_REPORTS;z++) {
					if(PlayerReport[z] != -1) reps++;
				}
				if(reps <= 5) gAdminTime[playerid]++;
			}
			
		}
		if(PI[playerid][pNarcoLomka] == 1)
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				switch(random(2))
				{
				case 1: ApplyAnimation(playerid, "CRACK", "crckdeth1", 4.0, 0, 0, 1, 1, 1);
				default: ApplyAnimation(playerid, "CRACK", "crckdeth3", 4.0, 0, 0, 1, 1, 1);
				}
			}
		}
		if (PI[playerid][pStartLomka] == 1 && PI[playerid][pAdmin] == 0 && TI[playerid][tDuel] == -1 && PI[playerid][pAddiction] > 2000 && PI[playerid][pNarcoLomka] == 0)
		{
			PI[playerid][pNarcoLomka] = 1;
			UpdatePlayerData(playerid,"lomka",PI[playerid][pNarcoLomka]);
			SendClientMessage(playerid, 0xFF0000FF, "Внимание у вас началась ломка, употребите наркотик (/usedrugs)");
		}
		if(oldpickup[playerid] != -1) {
			new Float:z;
			GetPlayerPos(playerid, z, z, z);
			if(timepickup[playerid] > 0) timepickup[playerid]--;
			if(!IsPlayerInRangeOfPoint(playerid,4.0,PickupX[playerid],PickupY[playerid],z) && timepickup[playerid] == 0) oldpickup[playerid] = -1;
		}
		if(PI[playerid][pCash] >= 1000000) {
			if(!TI[playerid][tShowKeys]) {
				SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
				TI[playerid][tShowKeys] = true;
			}
			if(TI[playerid][tShowKeys]) {
				if(GetPlayerWeapon(playerid) > 0 || GetPlayerState(playerid) != PLAYER_STATE_ONFOOT || !PI[playerid][pSettings][7] || TI[playerid][tJobSad][0] || GetPVarInt(playerid,"fish_place") || TI[playerid][tJobGun][0]) {
					if(IsPlayerAttachedObjectSlotUsed(playerid, 9))
					RemovePlayerAttachedObject(playerid, 9);
				}
				else {
					if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
					SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
				}
			}
		}
		else if(PI[playerid][pCash] < 1000000) {
			if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) {
				if(TI[playerid][tShowKeys]) {
					RemovePlayerAttachedObject(playerid, 9);
					TI[playerid][tShowKeys] = false;
				}
			}
		}
		if(TI[playerid][tPobeg] > 0)
		{
			TI[playerid][tPobeg]--;
			new string[85];
			format(string,sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~~>~ RETURN:~g~ %i~w~ SEC", TI[playerid][tPobeg]);
			GameTextForPlayer(playerid, string, 1000, 3);
			if(TI[playerid][tPobeg] == 0) PlayerSpawn(playerid);
		}
		if(TI[playerid][tBankTime] > 0)
		{
			TI[playerid][tBankTime]--;
			new string[85];
			format(string,sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~~>~ COLLECT:~g~ %i~w~ SEC", TI[playerid][tBankTime]);
			GameTextForPlayer(playerid, string, 1000, 3); 
			ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.0,0,0,0,1,0,1);
			if(TI[playerid][tBankTime] == 0) {
				ClearAnimations(playerid);
				TogglePlayerControllable(playerid, true);
			}
		}
		if(TI[playerid][tBuild])
		{
			if(GetPVarInt(playerid,"anim_build") == 1) ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",4.1,1,0,0,1,1,1);
			if(GetPVarInt(playerid,"anim_build") == 2) ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,0,0,0,0,1);
		}
		if(TI[playerid][tCodeBank] > 0)
		{
			TI[playerid][tCodeBank]--;
			new string[85];
			format(string,sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~CODE:~r~ %d~g~ SEC", TI[playerid][tCodeBank]);
			GameTextForPlayer(playerid, string, 1000, 3);
			if(TI[playerid][tCodeBank] == 0)
			{
				SendClientMessage(playerid,0xfF5C841ff, "Срок действия кода исчерпан");
			}
		}
		if(PI[playerid][pPalatka] > 0 && !IsPlayerInRangeOfPoint(playerid,30.0,384.4618,-1913.3921,7.8359))
		{
			SendClientMessage(playerid,COLOR_WHITE,"Вы отошли на далекое расстояние от палаки. Аренда завершена");
			EndTrade(playerid);
		}
		if(hellow[playerid] == 1 && !IsPlayerInRangeOfPoint(playerid,50.0,1347.8992,1395.9381,552.6911)) PlayerSpawn(playerid);
		if(TI[playerid][tDM] > 0)
		{
			if(TI[playerid][tDM] == 1 && !IsPlayerInRangeOfPoint(playerid,100.0,-383.3018,2230.5752,42.0938)) PlayerSpawn(playerid);
			if(TI[playerid][tDM] == 2 && !IsPlayerInRangeOfPoint(playerid,100.0,-1329.6431,2531.1829,87.3315)) PlayerSpawn(playerid);
			if(TI[playerid][tDM] == 3 && !IsPlayerInRangeOfPoint(playerid,100.0,2610.6765,2740.0520,23.8222)) PlayerSpawn(playerid);
			if(TI[playerid][tDM] == 4 && !IsPlayerInRangeOfPoint(playerid,70.0,1076.3899,2094.6433,10.8203)) PlayerSpawn(playerid);
		}
		if(PI[playerid][pJail] == 3 && TI[playerid][tPobeg] == 0 && !IsPlayerInRangeOfPoint(playerid,200.0,3531.4692,-681.0430,20.2564))
		{
			PlayerSpawn(playerid);
		}
		if(TI[playerid][tJobSad][0] > 0 && !IsPlayerInRangeOfPoint(playerid,200.0,-125.8699,6.7038,3.1172)) EndSad(playerid);
		if(TI[playerid][tBuild] > 0 && !IsPlayerInRangeOfPoint(playerid,100.0, 1690.5251,400.8495,30.4258)) {
			SendClientMessage(playerid,0xfF5C841ff, "Вы покинули территорию стройки. Работа завершена");
			RemovePlayerAttachedObject(playerid,8);
			RemovePlayerAttachedObject(playerid,7);
			DeletePVar(playerid,"anim_build");
			DisablePlayerRaceCheckpoint(playerid);
			if(TI[playerid][tJobSalary] > 0)
			{
				new string[22];
				format(string,sizeof(string),"Вы заработали: %i$",TI[playerid][tJobSalary]);
				SendClientMessage(playerid,0xfF5C841ff,string);
				GiveMoney(playerid, TI[playerid][tJobSalary], "з/п на стройке");
				
				TI[playerid][tJobSalary] = 0;
			}
			if(PI[playerid][pMember] && start_work[playerid]) {
				A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
				SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
			TI[playerid][tBuild] = 0;
			TI[playerid][tBuildCount] = 0;
			TI[playerid][tBuildAtt] = 0;
			Welding[playerid] = 0;
		}
		if(thef_timer[playerid] > 0)
		{
			thef_timer[playerid]--;
			if(!GetPVarInt(playerid,"eng_car"))
			{
				new string[26];
				format(string,sizeof(string), "~r~%s",Convert(thef_timer[playerid]));
				GameTextForPlayer(playerid, string, 1000, 4);
			}
			if(thef_timer[playerid] == 1) {
				A_DestroyVehicle(thef_car[playerid]);
				thef_car[playerid] = INVALID_VEHICLE_ID;
				thef_timer[playerid] = -1;
				SendClientMessage(playerid, COLOR_GREY, "Задание по угону автомобиля отменено. С заданием ты не справился");
				PI[playerid][ptheftTime] = gettime()+300;
				UpdatePlayerData(playerid,"theftTime",PI[playerid][ptheftTime]);
			}
		}
		if(TI[playerid][tArendKey] != -1) {
			new rc = TI[playerid][tArendKey];
			if(ArendInfo[rc][aPlayerID] != playerid) {
				TI[playerid][tArendKey] = -1;
			}
			if(!IsPlayerInVehicle(playerid, ArendInfo[rc][aID])) {
				new Float:x, Float:y, Float:z;
				GetVehiclePos(ArendInfo[rc][aID], x, y, z);
				if(!IsPlayerInRangeOfPoint(playerid, 2000.0, x, y, z) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0) {
					SendClientMessage(playerid, COLOR_REDD, "Вы отошли слишком далеко от арендованного Вами транспорта, контракт расторгнут");
					ArendInfo[rc][aPlayerID] = INVALID_PLAYER_ID;
					SetVehicleToRespawn(ArendInfo[rc][aID]);
					TI[playerid][tArendKey] = -1;
				}
			}
		}
		if(TI[playerid][tSpcarTime]) {
			TI[playerid][tSpcarTime]--;
			new string[26];
			format(string,sizeof(string), "~r~~h~%i",TI[playerid][tSpcarTime]);
			GameTextForPlayer(playerid, string, 1000, 6);
			if(TI[playerid][tSpcarTime] == 1) {
				switch(PI[playerid][pJob]) {
				case 1: if(GetPVarInt(playerid,"bus_id")) SetVehicleToRespawn(GetPVarInt(playerid,"bus_id"));
				case 2: if(GetPVarInt(playerid,"mehjob")) SetVehicleToRespawn(GetPVarInt(playerid,"mehjob"));
				case 3: if(GetPVarInt(playerid,"prod_vehicle_id")) SetVehicleToRespawn(GetPVarInt(playerid,"prod_vehicle_id"));
				case 4: if(GetPVarInt(playerid,"eatjob")) SetVehicleToRespawn(GetPVarInt(playerid,"eatjob"));
				case 5: if(GetPVarInt(playerid,"clear_id")) SetVehicleToRespawn(GetPVarInt(playerid,"clear_id"));
				case 8: if(GetPVarInt(playerid,"veh_id_taxi")) EndTaxi(playerid);
				}
				TI[playerid][tSpcarTime] = 0;
			}
		}
		if(PI[playerid][pCash] != GetPlayerMoney(playerid)) {
			ResetPlayerMoney(playerid);
			GivePlayerMoney(playerid, PI[playerid][pCash]);
		}
		if(anti_dm{playerid})
		{
			anti_dm{playerid} --;
			new str[200];
			format(str,sizeof(str),""W"В этом месте запрещено "ORANGE"драться/стрелять"W"\n\nВы будете разморожены через"ORANGE" %d"W" секунд", anti_dm{playerid});
			D(playerid, DIALOG_NONE, DSM, ""P"Зеленая зона",str, "Закрыть", "");
			if(anti_dm{playerid} == 0)
			{
				format(str,sizeof(str),""W"В этом месте запрещено "ORANGE"драться/стрелять"W"\n\nНажмите "ORANGE"ENTER"W", чтобы продолжить играть", anti_dm{playerid});
				D(playerid, DIALOG_NONE, DSM, ""P"Зеленая зона",str, "Закрыть", "");
			}
		}
	}
	@AntiCheat(playerid);
	return 1;
}

CB: @AntiCheat(playerid)
{
	if(dostup[playerid] != 1)
	{
		new ac_object = GetPlayerSurfingObjectID(playerid);
		if(ac_object > 0x0 && ac_object != 0xFFFF && IsValidObject(ac_object))
		{
			new Float: act_x, Float: act_y, Float: act_z;
			GetObjectPos(ac_object, act_x, act_y, act_z);
			if(!IsPlayerInRangeOfPoint(playerid, 50.0, act_x, act_y, act_z))
			{
				CheatKickEx(playerid,59);
			}
		}
	}
	if(GetPlayerWeapon(playerid) > 0)
	{
		switch(GetPlayerWeapon(playerid)) {
		case 16,18,35,36,37,38,39,40,44,45: CheatKickEx(playerid, 85);
		}
	}
	if (GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK && dostup[playerid] == 0)
	{
		CheatKickEx(playerid, 84);
	}
	new Float:tp_velo [ 3 ] ;
	GetPlayerVelocity( playerid, tp_velo[0], tp_velo[1], tp_velo [ 2 ] ) ;
	if(tp_velo[0] > 1.7 || tp_velo[1] > 1.7)
	{
		SetPVarInt(playerid, "Pizdorvanka", GetPVarInt(playerid, "Pizdorvanka") + 1 ) ;
		if(GetPVarInt(playerid, "Pizdorvanka") > 2)
		{
			SetPVarInt(playerid, "Pizdorvanka", 0 ) ;
			CheatKickEx(playerid, 61);
		}
	}
	if(GetPVarInt(playerid,"removetimer") && TI[playerid][tAFK] <= 3)
	{
		SetPVarInt(playerid,"removetimer",GetPVarInt(playerid,"removetimer")-1) ;
		if(GetPVarInt(playerid,"removetimer")==1)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(IsPlayerInAnyVehicle( playerid ) && GetVehicleModel( vehicleid ) != 441)
			{
				CheatKickEx(playerid, 105);
			}
			DeletePVar(playerid,"removetimer" ) ;
		}
	}
	return 1;
}

stock job_welding(playerid)
{
	TI[playerid][tBuildAtt] = 0;
	DestroyPlayerObject(playerid,Welding[playerid]);
	Welding[playerid] = 0;
	if(PI[playerid][pExpJob][0] < 300) {
		if(QuestProgress[playerid][2] < 30 && AcceptQuest[playerid][2] != 0) QuestProgress[playerid][2] += 1,save_quest(playerid,2);
		if(QuestProgress[playerid][2] == 30 && AcceptQuest[playerid][2] != 0)
		{
			D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Первые деньги'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
			NextStapQI(playerid,2);
		}
	}
	PI[playerid][pStone] += 1;
	UpdatePlayerData(playerid,"stone",PI[playerid][pStone]);
	TI[playerid][tBuildCount]++;
	switch(PI[playerid][pExpJob][0]) {
	case 0..100: TI[playerid][tJobSalary] += 80;
	case 101..200: TI[playerid][tJobSalary] += 100;
	case 201..500: TI[playerid][tJobSalary] += 120;
	}
	if(PI[playerid][pExpJob][0] < 300)
	{
		PI[playerid][pExpJob][0] += 1;
		if(PI[playerid][pExpJob][0] == 300) {
			PI[playerid][pAcsJob][0] = 1;
			SendOk(playerid,"Вы получили новый аксессуар за достижение! "GREEN"(/mm > навыки персонажа > полученные аксессуары)");
			save_acsjob(playerid);
		}
		save_jskill(playerid);
	}
	if(PI[playerid][pFamily]) {
		gFamily[PI[playerid][pFamily]-1][famTalon] += 1;
		UpdateFamily(PI[playerid][pFamily],"talon",gFamily[PI[playerid][pFamily]-1][famTalon]);
		PI[playerid][pFamTalon] += 1, UpdatePlayerData(playerid, "talon_fam", PI[playerid][pFamTalon]);
	}
	new string[60];
	format(string,sizeof(string),"Всего приварено %i железа. Общий заработок: %i$",TI[playerid][tBuildCount],TI[playerid][tJobSalary]);
	SendClientMessage(playerid, 0xfF5C841ff, string);
	DeletePVar(playerid,"anim_build");
	TogglePlayerControllable(playerid, 1);
	ApplyAnimation(playerid, "CARRY", "null", 1.0, 0, 0, 0, 0, 0, 0);
	PlayerClearAnim[playerid] = 1;
	return 1;
}

stock SetPlayerAttachedObjectEx(playerid, index, modelid, bone, Float:fOffsetX = 0.0, Float:fOffsetY = 0.0, Float:fOffsetZ = 0.0, Float:fRotX = 0.0, Float:fRotY = 0.0, Float:fRotZ = 0.0, Float:fScaleX = 1.0, Float:fScaleY = 1.0, Float:fScaleZ = 1.0)
{
	SetPlayerAttachedObject(playerid, index, modelid, bone, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
	return true;
}

CB:car_numbers(playerid, numbers[])
{
	new rows, car = GetPVarInt(playerid,"buy_carnumber");
	cache_get_row_count(rows);
	if(rows)
	{
		SendClientMessage(playerid, COLOR_GREY, "Генерированный номер уже существует, попробуйте еще раз");
		return true;
	}
	format(NumberVehicle[playerid][car],MAX_PLAYER_NAME,"%s",numbers);
	new query[200];
	mysql_format(connects, query, sizeof(query),"UPDATE `"TABLE_CARS"` SET `number` = '%s' WHERE `id` = '%d' LIMIT 1",numbers,CarsInfo[playerid][carID][car]);
	mysql_tquery(connects,query);
	new string[128];
	format(string,sizeof(string),"Поздравляем, с получением гос. номера: "W"%s",numbers);
	SendClientMessage(playerid,CGOLD,string);
	GiveMoney(playerid,-15000,"покупка гос.номера");
	SetVehicleNumberText(house_car[playerid][car], numbers);
	return true;
}
stock Perfomance_menu(playerid) {
	D(playerid, D_TUNE_LIST, DSL, ""P"Perfomance Tune", ""P"1."W" Улучшение двигателя\n"P"2."W" Улучшение тормозов", "Далее", "Закрыть");
	return true;
}
stock GetTheftCar(skill, model)
{
	new car = 0;
	if(skill == 0)
	{
		switch(model) {
		case 542, 518, 517, 491, 492, 479, 474, 466, 467, 439,
			422, 545, 543, 419, 404, 401, 410, 412, 413, 549, 575,
			576, 600, 585: car = model;
		}
	}
	if(skill == 1)
	{
		switch(model) {
		case 526, 505, 507, 535, 527, 534, 551, 554, 555, 558,
			561, 500, 533, 603, 579, 589, 580, 567, 566, 496, 475,
			445, 426, 421, 405, 400: car = model;
		}
		
	}
	if(skill == 2)
	{
		switch(model) {
		case 494, 495, 411, 451, 402, 429, 415, 477, 434, 480,
			506, 541, 562, 560, 559, 587, 602: car = model;
		}
	}
	return car;
}

CB: callback_offmembers ( playerid )
{
	new rows;
	cache_get_row_count(rows);
	if ( ! rows )
	{
		SendClientMessage(playerid, COLOR_GREY, "Игроки с данными параметрами не найдены." ) ;
		pc_cmd_lmenu(playerid);
		DeletePVar ( playerid, "ofm_list_page" ) ;
		return 1 ;
	}
	new rows_list = GetPVarInt ( playerid, "ofm_list_page" ) - 1 ;
	SetPVarInt ( playerid, "ofm_list_rows", rows ) ;
	new line_string [ MAX_PLAYER_NAME + 37 ],
	pl_ofm_name [ 40 ],
	pl_ofm_rank,
	pl_ofm_online [ 16 ] ;

	new dialog_string [ 10 * sizeof(line_string) + 50 ] ;
	strcat ( dialog_string, ""W"Имя игрока\t"W"Ранг\t"W"Дата входа\n"G"Предыдущая страница\n"G"Следующая страница >>\n" ) ;
	for ( new i = rows_list * 10 ; i <  rows_list * 10 + 10 ; i ++ )
	{
		if ( i >= rows ) break ;
		cache_get_value_name(i,"Name", pl_ofm_name, 40);
		cache_get_value_name(i,"pOnline", pl_ofm_online, 20);
		cache_get_value_name_int(i,"pRank", pl_ofm_rank);

		new pvar_string [ 8 ] ;
		format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", i - rows_list * 10 ) ;
		SetPVarString ( playerid, pvar_string, pl_ofm_name ) ;

		format ( line_string, sizeof ( line_string ), "%s\t%s(%d)\t%s\n", pl_ofm_name,GetRankName(PI[playerid][pMember], pl_ofm_rank), pl_ofm_rank, pl_ofm_online ) ;
		strcat ( dialog_string, line_string ) ;

	}
	new list[55];
	format(list,55,""P"Члены организации оффлайн "G"(%d чел)",rows);
	D(playerid,d_offmembers_list,DSTH,list,dialog_string,"Выбрать","Закрыть");
	return 1 ;
}

CB:callback_offmembers_info ( playerid )
{
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		new pl_rank, last_date [ 16 ], fraction_date [ 16 ] ;
		
		cache_get_value_name_int(0,"pRank", pl_rank);
		cache_get_value_name(0,"pOnline", last_date, 16);
		cache_get_value_name(0,"fraction_date", fraction_date, 16);

		new pvar_string [ 20 ], pl_name [ 20 ] ;
		format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
		GetPVarString ( playerid, pvar_string, pl_name, 20 ) ;

		new dialog_string [ 186 ] ;
		format ( dialog_string, sizeof ( dialog_string ), "\n\n"W"Имя:"P" %s"W"\nРанг: "P"%s(%d)"W"\nВ организации с"P" %s"W"\nПоследний вход:"P" %s", pl_name, GetRankName(PI[playerid][pMember], pl_rank), pl_rank, fraction_date, last_date ) ;
		D(playerid,d_offmembers_pl_menu_info,DSM,""P"Информация об игроке", dialog_string, "Назад", "" ) ;
	}
	if(!rows)
	{
		new query_string [ 128 ];
		DeletePVar( playerid, "ofm_listitem");
		if(!GetPVarInt ( playerid, "ofm_type"))
		{
			mysql_format(connects, query_string, sizeof(query_string),"SELECT `Name`,`pRank`,`pOnline` FROM `accounts` WHERE `pMember` = '%d' AND `online_status` = '1001'",PI[playerid][pMember]);
			mysql_tquery(connects, query_string, "callback_offmembers", "i", playerid ) ;
			return 1;
		}
		mysql_format(connects, query_string, sizeof(query_string),"SELECT `u_name`,`pRank`,`pOnline` FROM `accounts` WHERE `pMember` = '%d' AND `pRank` = '%d' AND `online_status` = '1001'",PI[playerid][pMember], GetPVarInt ( playerid, "ofm_type" ) ) ;
		mysql_tquery(connects, query_string, "callback_offmembers", "i", playerid ) ;

	}
	return 1 ;
}
CB: second_timer() //global timer
{
	if(tmphour == 05 && tmpminute == 03 && tmpsecond == 00) {
		SendClientMessageToAll(COLOR_YELLOW, "Через две минуты произойдет автоматическая перезагрузка сервера");
		SendClientMessageToAll(COLOR_YELLOW, "Просьба закончить все свои работы. Спасибо за понимание");
	}
	if(tmphour == 05 && tmpminute == 05 && tmpsecond == 00) {
		SendClientMessageToAll(COLOR_REDD,"World Role Play | Restart...");
		save_other();
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			KickEx(i);
		}
		SendRconCommand("gmx");
		printf("Auto Restart - Reloading...");
	}
	blackjack_Timer();
	if (++SAD_TIMER >= 5) {
		for (new i = 0; i < 119; i ++)
		{
			if (SI[i][sad_temp] != 4)
			continue;
			if (SI[i][sad_temp] == 4 && SI[i][sad_time] <= unix)
			{
				sad_delete(i);
			}
		}
		for (new id = 0; id < MAX_OBJECT_MOVED; id++)
		{
			if (ServerMovedEx[id] == 1)
			{
				if (ServerMovedFix[id] < gettime())
				{
					CheckObjectBarrier(id);
					ServerMovedEx[id] = 0;
				}
			}
		}
		SAD_TIMER = 0;
	}
	for(new i = 0; i < MAX_MARKET; i++)
	{
		if(Market[i][m_arenda] > 0)
		{
			Market[i][m_arenda]--;
			new string[250];
			format(string,sizeof(string),""G"Прилавок"W" №%d\n"G"Арендатор:"W" %s\n"G"Время аренды:"W" %s\n"G"Нажмите "W"'ALT'"G" чтобы посмотреть товар",i+1,Market[i][m_owner],Convert(Market[i][m_arenda]));
			UpdateDynamic3DTextLabelText(Market[i][m_text], -1, string);
			if(Market[i][m_arenda] == 0) {
				format(string,sizeof(string),""G"Прилавок"W" №%d\n"G"Арендатор:"W" нет\n"G"Нажмите"W" 'ALT'"G" чтобы арендовать",i+1);
				UpdateDynamic3DTextLabelText(Market[i][m_text], -1, string);
				if(GetPlayerID(Market[i][m_owner]) != INVALID_PLAYER_ID)
				{
					PI[GetPlayerID(Market[i][m_owner])][pPalatka] = 0;
					SendClientMessage(GetPlayerID(Market[i][m_owner]),COLOR_WHITE,"Время аренды вашей палатки истекло");
				}
				strmid(Market[i][m_owner], "None", 0, 24);
				Market[i][m_arenda] = 0;
			}
		}
	}
	if(LastAirDrop[airTime] > 0)
	{
		LastAirDrop[airTime]--;
		new string[120];
		if(LastAirDrop[airTime] > 0) {
			format(string,sizeof(string),"AirDrop\nОткрытие через"ORANGE" %s",Convert(LastAirDrop[airTime]));
		}
		else
		{
			format(string,sizeof(string),"AirDrop\nНажмите "ORANGE"'ALT'"W" чтобы забрать");
			LastAirDrop[airOpen] = 1;
			LastAirDrop[airEnd] = 5;
			GangZoneStopFlashForAll(LastAirDrop[airZone]);
			GangZoneDestroy(LastAirDrop[airZone]);
		}
		UpdateDynamic3DTextLabelText(LastAirDrop[Text3Did], -1, string);
	}
	AdvertTimer();
	for(new i = 0; i < MAX_CONTAINER; i++)
	{
		if(gContainer[i][cTime] > 0) {
			gContainer[i][cTime] -= 1;
			switch(gContainer[i][cClass])
			{
			    case 5:
				{
                    STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"{F9C7A1}Контейнер\n\n"W"Класс:{F9C7A1} %s"W"\nНачальная ставка:{F9C7A1} %d rub"W"\nПоследняя ставка:{F9C7A1} %d rub"W"\n\
				\nДо конца аукциона осталось ({F9C7A1}%d"W" секунд)"W"\n\nАукцион ["GREEN"Открыт"W"]", gContainer[i][cName],gContainer[i][cMoney],gContainer[i][cStavka],
					gContainer[i][cTime]);
					UpdateDynamic3DTextLabelText(gContainer[i][cText], -1, STRING_GLOBAL);

					if(gContainer[i][cTime] == 0) {
						new id = GetPlayerID(gContainer[i][cOwned]);
						if(IsPlayerConnected(id)) SendOk(id,"Аукцион закончен. Заберите свой приз в контейнере!");
						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"{F9C7A1}Контейнер\n\n"W"Класс:{F9C7A1} %s"W"\nНачальная ставка:{F9C7A1} %d rub"W"\nПоследняя ставка:{F9C7A1} %d rub"W"\n\
					\nАукцион завершен\nПобедитель:{F9C7A1} %s"W"\n\nАукцион [{F26969}Закрыт"W"]\nНачало в 8:00, 10:00, 12:00, 14:00, 16:00, 18:00\n20:00, 22:00, 00:00",
						gContainer[i][cName],gContainer[i][cMoney],gContainer[i][cStavka],gContainer[i][cOwned]);
						UpdateDynamic3DTextLabelText(gContainer[i][cText], -1, STRING_GLOBAL);
						conteiner[i] = 1;
					}
				}
				default:
				{
                    STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"{F9C7A1}Контейнер\n\n"W"Класс:{F9C7A1} %s"W"\nНачальная ставка:{F9C7A1} %d$"W"\nПоследняя ставка:{F9C7A1} %d$"W"\n\
				\nДо конца аукциона осталось ({F9C7A1}%d"W" секунд)"W"\n\nАукцион ["GREEN"Открыт"W"]", gContainer[i][cName],gContainer[i][cMoney],gContainer[i][cStavka],
					gContainer[i][cTime]);
					UpdateDynamic3DTextLabelText(gContainer[i][cText], -1, STRING_GLOBAL);

					if(gContainer[i][cTime] == 0) {
						new id = GetPlayerID(gContainer[i][cOwned]);
						if(IsPlayerConnected(id)) SendOk(id,"Аукцион закончен. Заберите свой приз в контейнере!");
						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"{F9C7A1}Контейнер\n\n"W"Класс:{F9C7A1} %s"W"\nНачальная ставка:{F9C7A1} %d$"W"\nПоследняя ставка:{F9C7A1} %d$"W"\n\
					\nАукцион завершен\nПобедитель:{F9C7A1} %s"W"\n\nАукцион [{F26969}Закрыт"W"]\nНачало в 8:00, 10:00, 12:00, 14:00, 16:00, 18:00\n20:00, 22:00, 00:00",
						gContainer[i][cName],gContainer[i][cMoney],gContainer[i][cStavka],gContainer[i][cOwned]);
						UpdateDynamic3DTextLabelText(gContainer[i][cText], -1, STRING_GLOBAL);
						conteiner[i] = 1;
					}
				}
                
			}
			
		}
	}
	if(BizWarTime[0] > 0) {
		BizWarTime[0]--;
		if(BizWarTime[0] == 180) {
			SendFamilyMessage(MZInfo[bFrakVlad],COLOR_LIGHTRED,"Приготовьтесь! До начала встречи осталось 3 минуты");
			SendFamilyMessage(MZInfo[bNapad],COLOR_LIGHTRED,"Приготовьтесь! До начала встречи осталось 3 минуты");
		}
		if(BizWarTime[0] == 60) {
			SendFamilyMessage(MZInfo[bFrakVlad],COLOR_LIGHTRED,"Внимание! До начала встречи осталась 1 минута");
			SendFamilyMessage(MZInfo[bNapad],COLOR_LIGHTRED,"Внимание! До начала встречи осталась 1 минута");
		}
		if(BizWarTime[0] == 0) MafiaTimeCapture(MZInfo[bFrakVlad],MZInfo[bNapad]);
	}
	for(new i;i<MAX_ACTORSS;i++) {
		if(actortime[i]>0) {
			actortime[i]--;
			if(actortime[i] == 0) {
				ClearActorAnimations(actor[i]);
				Update3DTextLabelText(tActor[i], COLOR_GREY, "");
				ApplyActorAnimation(actor[i], "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1);
				if(i == 6 || i == 15) ApplyActorAnimation(actor[i],"DEALER","Dealer_idle",4.1,0,0,0,1,1);
				if(i == 32) ApplyActorAnimation(actor[i],"BD_FIRE","M_smklean_loop",4.1,0,0,0,1,1);
			}
		}
	}
	/*	if(RingInfo[0][rgTime] > 0)
	{
		new player1 = RingInfo[0][rgPlayer][0];
		new player2 = RingInfo[0][rgPlayer][1];
		new string[120];
		RingInfo[0][rgTime] --;
		format(string, sizeof(string), "~r~%i", RingInfo[0][rgTime]);
		GameTextForPlayer(player1, string, 3000, 5);
		GameTextForPlayer(player2, string, 3000, 5);
		if(RingInfo[0][rgTime] == 0)
		{
			format(string, sizeof(string), ""W"[РЭФЕРИ] "G"Поединок между "ORANGE"%s"G" и "ORANGE"%s"G" начался", player_name[player1], player_name[player2]);
			ProxDetector(15.0,player1, string, 0xFFFFFFFF);
			SetHealth(player1, 100);
			SetHealth(player2, 100);
			SetPlayerPosAC(RingInfo[0][rgPlayer][1],762.7578,2.3013,1001.5942,76, 5);
			SetPlayerFacingAngle(RingInfo[0][rgPlayer][1],130);
			SetPlayerPosAC(RingInfo[0][rgPlayer][0],758.9441,-1.7533,1001.5942,76, 5);
			SetPlayerFacingAngle(RingInfo[0][rgPlayer][0],315);
			TogglePlayerControllable(RingInfo[0][rgPlayer][1],true);
			TogglePlayerControllable(RingInfo[0][rgPlayer][0],true);
			SetTimerEx("StartFight" , 5000, false, "ii",RingInfo[0][rgPlayer][0],RingInfo[0][rgPlayer][1]);
			SetCameraBehindPlayer(RingInfo[0][rgPlayer][0]);
			SetCameraBehindPlayer(RingInfo[0][rgPlayer][1]);
			ResetPlayerWeapons(RingInfo[0][rgPlayer][0]);
			ResetPlayerWeapons(RingInfo[0][rgPlayer][1]);
		}
	}*/
	if(BizWarTime[1]) BizWarTimer();

	return true;
}
CB: minute_timer()
{
	new hour, minute, second;
	gettime(hour, minute, second);
	for(new gang = 0; gang < 8; gang ++) {
		if(fracmoroz[gang]) {
			if(fracmoroz[gang] <= unix) {
				new string[128];
				format(string,sizeof(string),"Заморозка с %s %s снята",(gang<5) ? ("банды"):("мафии"),fracmorozName[gang]);
				SendClientMessageToAll(COLOR_LIGHTRED,string);
				fracmoroz[gang]=0;
				UpdateMorozed();
			}
		}
	}
	if(LastAirDrop[airEnd] > 0) {
		LastAirDrop[airEnd]--;
		if(LastAirDrop[airEnd] == 0)
		{
			LastAirDrop[airOpen] = 0;
			DestroyDynamicObject(LastAirDrop[airObject]);
			DestroyDynamic3DTextLabelEx(LastAirDrop[Text3Did]);
		}
	}
	if(bank_vzlom[1] > 0) {
		bank_vzlom[1]--;
		new string[150];
		format(string,sizeof(string),"{F7A587}Сработала сигнализация двери"W"\n\nЗакрытие через{F7A587} %d"W" мин",bank_vzlom[1]);
		UpdateDynamic3DTextLabelText(text_bank, -1, string);
		if(bank_vzlom[1] == 0)
		{
			DestroyDynamic3DTextLabelEx(text_bank);
			bank_vzlom[2] = 0;
			MoveDynamicObject(moved_info[27][moved_id],moved_info[27][movedPosX],moved_info[27][movedPosY],moved_info[27][movedPosZ],(moved_info[27][moved_modelid] == 968) ? (0.014) : (moved_info[27][moved_modelid] == 2920) ? (0.014) : (moved_info[27][moved_modelid] == 1495) ? (0.034) : (moved_info[27][moved_modelid] == 2949) ? (0.034) : (moved_info[27][moved_modelid] == 2949) ? (10.0) : (1.2),moved_info[27][movedPosRotationX],moved_info[27][movedPosRotationY],moved_info[27][movedPosRotationZ]);
		}
	}
	for(new i=0; i <10; i++)
	{
		if(Sewer[i][seTime] < gettime() && Sewer[i][seAmmout] == 0)
		{
			Sewer[i][seAmmout] = 15;
		}
	}
	for(new i=0;i<MAX_DROP_GUNS;i++) {
		if(drop_gun[i][dg_object] == -1) continue;
		if(drop_gun[i][dg_time] < 1) continue;
		drop_gun[i][dg_time] --;
		if(drop_gun[i][dg_time]<=0){
			DestroyDynamicObject(drop_gun[i][dg_object]);
			drop_gun[i][dg_object]=-1;
			if(drop_gun[i][dg_text] != Text3D:-1) {
				Delete3DTextLabel(drop_gun[i][dg_text]);
				drop_gun[i][dg_text] = Text3D:-1;
			}
		}
	}
	for(new g=0; g< MAX_EGG; g++)
	{
		if(Egg[g][gKorm] > 0 && Egg[g][gCount] < 20)
		{
			Egg[g][gKorm] -= 1;
			Egg[g][gCount] += 2;
			new string[150];
			format(string,sizeof(string),""YELLOW"Курятник\n\n"W"Ухаживает:"P" %s\n"W"Корм курицы:"P" [ %d/10 ]\n"W"Снесено яиц:"P" [ %d/20 ]",Egg[g][gName],Egg[g][gKorm],Egg[g][gCount]);
			UpdateDynamic3DTextLabelText(Egg[g][gText], -1, string);
		}
	}
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(TI[i][tAFK] <= 5)
		{
			PI[i][pPlayTime][1]++;
			if(PI[i][pPlayTime][1] >= 180) {
				SendClientMessage(i,COLOR_GREY,"Вы отыграли 3 часа и получили 'Silver' кейс! (/mm -> Кейсы)");
				
				PI[i][pCases][0] += 1;
				PI[i][pPlayTime][1] = 0;
				
				new query[156];
				format(query,sizeof(query), "UPDATE `accounts` SET `pPlayTime_two` = '0',`case_1` = '%d'  WHERE pID = '%d'",PI[i][pCases][0],PI[i][pID]);
				mysql_tquery(connects,query,"","");
			}
			PI[i][pPlayTime][0]++;
		}
		if(TI[i][tMaskTime] > 0) {
			TI[i][tMaskTime]--;
			if(TI[i][tMaskTime] == 0) {
				if(PI[i][pMember] && start_work[i]) SetPlayerColor(i,gFractionSpawn[PI[i][pMember]][fracColor]);
				else SetPlayerColor(i,0xFFFFFF11);
				if(TI[i][tMasked]) SetPlayerColor(i,gFractionSpawn[TI[i][tMasked]][fracColor]);
				new str[120];
				format(str,sizeof(str),"По истечению %i минут, маска была снята",GetPVarInt(i,"masks"));
				SendOk(i,str);
				//NickName(i);
				RemovePlayerAttachedObject(i, 8);
			}
		}
		if(PI[i][pSatiety] < 20 && PI[i][pHP] > 0)
		{
			SetPVarFloat(i,"timer_satiety_2", GetPVarFloat(i,"timer_satiety_2") + 1);
			if(GetPVarFloat(i,"timer_satiety_2") >= 3)
			{
				SetHealth(i, PI[i][pHP] - 3.0);
				SendClientMessage(i, 0xfd61839ff, "Вы проголодались! Перекусите в одном из ресторанов или кафе (/satiety)");
			}
			DeletePVar(i, "timer_satiety_2");
		}
		if(PI[i][pSatiety] >= 1 && !PI[i][pPremium]) {
			SetPVarFloat(i,"timer_satiety", GetPVarFloat(i,"timer_satiety") + 1);
			if(GetPVarFloat(i,"timer_satiety") >= 2)
			{
				GiveFullness(i,-1);
				DeletePVar(i,"timer_satiety");
			}
		}
	}
	if(BizHourTime > 0) BizHourTime -= 1;
	return true;
}

stock ReloadAllAnims(playerid)
{
	PreloadAnimLib(playerid,"BASEBALL");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"benchpress");
	PreloadAnimLib(playerid,"BD_FIRE");
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"CAMERA");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"INT_SHOP");
	PreloadAnimLib(playerid,"CASINO");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"DAM_JUMP");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"DODGE");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"HEIST9");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"INT_OFFICE");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"LOWRIDER");
	PreloadAnimLib(playerid,"MD_CHASE");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"PAULNMAC");
	PreloadAnimLib(playerid,"PED");
	PreloadAnimLib(playerid,"RYDER");
	PreloadAnimLib(playerid,"RAPPING");
	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"SNM");
	PreloadAnimLib(playerid,"STRIP");
	PreloadAnimLib(playerid,"SUNBATHE");
	PreloadAnimLib(playerid,"SWAT");
	PreloadAnimLib(playerid,"SWEET");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"goggles");
	PreloadAnimLib(playerid,"BAR");
	PreloadAnimLib(playerid,"SPRAYCAN");
	PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"MEDIC");
	PreloadAnimLib(playerid,"GYMNASIUM");
	PreloadAnimLib(playerid,"POLICE");
	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"CRIB");
	PreloadAnimLib(playerid,"FAT");
	PreloadAnimLib(playerid,"KNIFE");
	PreloadAnimLib(playerid,"CHAINSAW");
	PreloadAnimLib(playerid, "SWORD");
	ClearAnims(playerid);
	spaned[playerid]=1;
	return true;
}

stock PreloadAnimLib(playerid, const animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
	return true;
}

stock not_flying ( playerid )
{
	if ( IsPlayerInRangeOfPoint ( playerid, 20.0, 1968.3948,-1198.0753,17.4500 ) ) return true;
	else if ( IsPlayerInRangeOfPoint ( playerid, 20.0, 2310.9861,-1412.8881,21.6151 ) ) return true;
	else if ( IsPlayerInRangeOfPoint ( playerid, 20.0, 1241.1094,-2379.7263,8.3145 ) ) return true;
	else if ( IsPlayerInRangeOfPoint ( playerid, 20.0, 225.6394,-1187.0551,73.4500 ) ) return true;
	else if ( IsPlayerInRangeOfPoint ( playerid, 20.0, 193.2040,-1224.7693,76.5034 ) ) return true;
	else if ( IsPlayerInRangeOfPoint ( playerid, 20.0, 196.0067,-1232.3684,76.5034 ) ) return true;
	else if ( IsPlayerInRangeOfPoint ( playerid, 20.0, 512.7349,-1104.1942,78.8238 ) ) return true;
	else if ( IsPlayerInRangeOfPoint ( playerid, 20.0, 1283.7939,-806.5845,86.1230 ) ) return true;
	else if ( IsPlayerInRangeOfPoint ( playerid, 20.0, 2531.6001,1568.4032,8.4171 ) ) return true;
	else if ( IsPlayerInRangeOfPoint ( playerid, 60.0, 2105.2651,1916.6781,9.5989 ) ) return true;
	else if ( IsPlayerInRangeOfPoint ( playerid, 150.0, -792.4582,2173.0356,40.0821 ) ) return true;
	else if ( IsPlayerInRangeOfPoint ( playerid, 150.0, 1993.5868,1601.2623,9.2979 ) ) return true;
	return false;
}
stock pay_realty()
{
	for(new i = 0; i < MAX_APARTMENT; i ++)
	{
		if(Apartment[i][aDay] <= unix && !GetString("None",Apartment[i][aOwner]))
		{
			new ID = GetCheckID(Apartment[i][aOwner]);
			new query[512];
			if(ID != INVALID_PLAYER_ID)
			{
				if(!strcmp(player_name[ID],Apartment[i][aOwner],true))
				{
					SendClientMessage(ID,COLOR_REDD,"Ваша квартира продана государству за неуплату");
					GiveMoney(ID, floatround(Apartment[i][aMoney]/100*80),"продажа квартиры");
					PI[ID][pRoom] = 0;
					UpdatePlayerData(ID, "apart", 0);
					if(house_car[ID][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[ID][0]),house_car[ID][0] = INVALID_VEHICLE_ID;
					if(house_car[ID][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[ID][1]),house_car[ID][1] = INVALID_VEHICLE_ID;
				}
			}
			else {
				mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pBank` = `pBank` + %d,`roomsell` = '1',`apart` = '0' WHERE `Name` = '%s'",floatround(Apartment[i][aMoney]/100*80),Apartment[i][aOwner]);
				mysql_tquery(connects, query);
			}
			mysql_format(connects, query, sizeof(query),"UPDATE `apartment` SET `owner` = 'None', `day` = '0',`lock` = '1' WHERE `owner` = '%s'",Apartment[i][aOwner]);
			mysql_tquery(connects, query);
			Apartment[i][aDay] = 0;
			strmid(Apartment[i][aOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			update_apart(i);
		}
	}
	for(new i = 0; i < gHouseCount; i ++) {
		if(gHouses[i][houseOwnerID] != 0 && gHouses[i][houseDay] <= unix) {
			new query[512];
			gHouses[i][houseDay] = 0;
			gHouses[i][houseSafeCode] = 0;
			gHouses[i][houseSafeMoney] = 0;
			gHouses[i][houseDrugs] = 0;
			gHouses[i][houseHealth] = 0;
			gHouses[i][houseProducts] = 0;
			if(gHouses[i][houseFamily])
			{
				new fam = gHouses[i][houseFamilyID];
				for(new c = 0; c < 5; c++)
				{
					if(CarFamily[fam][c][LoadCar] == INVALID_VEHICLE_ID) continue;
					A_DestroyVehicle(CarFamily[fam][c][LoadCar]);
					CarFamily[fam][c][LoadCar] = INVALID_VEHICLE_ID;
				}
				new str[350];
				mysql_format(connects, str, sizeof(str),"UPDATE `family` SET `house` = '0',`poscar1` = '0',`poscar2` = '0',`poscar3` = '0',`poscar4` = '0',`poscar5` = '0' WHERE `id` = '%d'",fam+1);
				mysql_tquery(connects, str,"","");
				gFamily[fam][famHouse] = 0;
				gHouses[i][houseFamily] = 0;
				gHouses[i][houseFamilyID] = 0;
			}
			DestroyDynamicPickup(gHousePickup[i]);
			gHousePickup[i] = CreateDynamicPickup(1273,1,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],0,0);
			DestroyDynamicMapIcon(gHouseIcon[i]);
			gHouseIcon[i] = CreateDynamicMapIcon(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],31,CWHITE);

			new ID = GetCheckID(gHouses[i][houseOwner]);
			if(ID != INVALID_PLAYER_ID) {
				if(!strcmp(player_name[ID],gHouses[i][houseOwner],true)) {
					PI[ID][pHouse] = 0;
					GiveMoney(ID, floatround(gHouses[i][housePrice] / 100 * 50),"продажа дома");
					UpdatePlayerData(ID, "house", 0);
					SendClientMessage(ID,COLOR_REDD,"Ваш дом продан государству за неуплату");
					if(house_car[ID][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[ID][0]),house_car[ID][0] = INVALID_VEHICLE_ID;
					if(house_car[ID][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[ID][1]),house_car[ID][1] = INVALID_VEHICLE_ID;
				}
			}
			else {
				mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pBank` = `pBank` + %d,`homesell` = '1',`house` = '0' WHERE `pID` = '%d'",floatround(gHouses[i][housePrice] / 100 * 50),gHouses[i][houseOwnerID]);
				mysql_tquery(connects, query);
			}
			mysql_format(connects, query, sizeof(query),"UPDATE `houses` SET `ownerid` = '0', `owner` = '', improve = '0|0|0|0|0|0', gun = '0|0|0|0|0|0|0|0|0',safecode='0', safemoney='0', drugs='0', medkit='0', products='0',peopleid1 = '0',peopleid2 = '0',people1='',people2='',family = '0',family_id = '0' WHERE `id` = '%d'",i+1);
			mysql_tquery(connects, query);
			
			gHouses[i][houseOwnerID] = 0;
			strdel(gHouses[i][houseOwner],0,24);
			arendaor_closed(i);
			strmid(gHouseArendator[i][0],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(gHouseArendator[i][1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			gHouses[i][houseHabitID][0] = 0;
			gHouses[i][houseHabitID][1] = 0;
			gHouses[i][houseHabitID][2] = 0;
		}
	}
	for(new i = 0; i < gBusinessCount; i ++) {
		if(gBusiness[i][bizzOwnerID] != 0 && gBusiness[i][bizzDay] <= unix) {
			new query[282];
			new ID = GetCheckID(gBusiness[i][bizzOwner]);
			if(ID != INVALID_PLAYER_ID) {
				if(!strcmp(player_name[ID],gBusiness[i][bizzOwner],true)) {
					PI[ID][pBusiness] = 0;
					UpdatePlayerData(ID, "bussiness", 0);
					GiveMoney(ID, floatround(gBusiness[i][bizzSellPrice] / 100 * 50),"продажа бизнеса");
					SendClientMessage(ID,COLOR_REDD,"Ваш бизнес продан государству за неуплату");
				}
			}
			else {
				format(query,200,"UPDATE `accounts` SET `pBank` = `pBank` + '%d',`bizzsell` = '1',`bussiness` = '0' WHERE `pID` = '%d'",floatround(gBusiness[i][bizzSellPrice] / 100 * 50),gBusiness[i][bizzOwnerID]);
				mysql_tquery(connects, query);
			}
			if(gBusiness[i][bizzType] == 14) sell_bizztaxi(i+1);
			mysql_format(connects, query, sizeof(query),"UPDATE `business` SET `ownerid` = '0', `owner` = '', `status` = '1', `price` = '5',`order` = '0',`orderprice` = '0',`upgrade` = '5000|0|0' WHERE `id` = '%d'",i+1);
			mysql_tquery(connects, query,"","");
			gBusiness[i][bizzOwnerID] = 0;
			gBusiness[i][bizzStatus] = 1;
			gBusiness[i][bizzPrice] = 5;
			gBusiness[i][bizzUpgrade][0] = 5000;
			gBusiness[i][bizzUpgrade][1] = 0;
			gBusiness[i][bizzUpgrade][2] = 0;
			SetString(gBusiness[i][bizzOwner],"");
			UpdateBusinessText(i);
		}
	}
	for(new i; i<MAX_BILLBORDS; i++) {
		if(BildInfo[i][bOwned] && BildInfo[i][bDay] <= unix) {
			BildInfo[i][bFontSize] = 0;
			BildInfo[i][bBackColor] = 0;
			BildInfo[i][bFontFace] = 0;
			BildInfo[i][bOwned] = 0;
			BildInfo[i][bDay] = 0;
			format(BildInfo[i][bOwner],1,"-");
			UpdateBuildText(i);
			new query[256];
			mysql_format(connects, query, sizeof(query),"UPDATE `billboards` SET `bDay` = 0, `bOwned` = 0, `bOwner` = '-', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",i);
			mysql_tquery(connects,query,"","");
		}
	}
	return true;
}

race_game() {
	if(race_lv_start != 0) {
		time_race_lv++;
		new string[24];
		format(string,sizeof(string),"%s",Convert(time_race_lv));
		TextDrawSetString(td_game[4], string);
		if(time_race_lv == 1200) {
			random_car_race_lv = INVALID_VEHICLE_ID;
			time_registr_race_lv = 0;
			time_race_lv = 0;
			race_lv_start = 0;
			open_race_lv = 0;
			race_lead_lv = 0;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(player_to_race_lv[i] == 1) Race_End(i);
			}
		}
	}
	if(open_race_lv != 0 && time_registr_race_lv != 0) {
		time_registr_race_lv --;
		if(time_registr_race_lv == 300) SendClientMessageToAll(-1, ""ORANGE"[Центр развлечений]"W" До конца регистрации на Безумные гонки осталось 5 мин. (/gps > Развлечения > центр развлечений)");
		if(time_registr_race_lv == 120) {
			SendClientMessageToAll(-1, ""ORANGE"[Центр развлечений]"W" До конца регистрации на Безумные гонки осталось 2 мин. (/gps > Развлечения > центр развлечений)");
		}
		if(time_registr_race_lv == 20) game_players[0] = 0;
		if(time_registr_race_lv < 10) {
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(player_to_race_lv[i] == 1)
				{
					new str[24];
					format(str, sizeof(str), "~r~%d",time_registr_race_lv);
					GameTextForPlayer(i, str, 500, 3);
				}
			}
		}
	}
	if(open_race_lv == 1 && time_registr_race_lv == 9) {
		if(players_in_race_lv < 2) {
			random_car_race_lv = INVALID_VEHICLE_ID;
			time_registr_race_lv = 0;
			time_race_lv = 0;
			race_lv_start = 0;
			open_race_lv = 0;
			race_lead_lv = 0;
			money_in_race_lv = 0;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(player_to_race_lv[i] == 1) player_to_race_lv[i] = 0;
				if(TI[i][tCashRace]) GiveMoney(i,TI[i][tCashRace],"возвращение взноса безумных гонок"),TI[i][tCashRace] = 0;
			}
		}
		open_race_lv = 3;
		new random_car = random(sizeof car_id_race_lv);
		random_car_race_lv = car_id_race_lv[random_car];
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			if(player_to_race_lv[i] == 1) {
				SendOk(i, "До старта гонки 10 секунд");
				switch(race_type) {
				case 0: {
						player_car_race_lv_id[i] = A_CreateVehicle(random_car_race_lv,
						spawns_car_race_sity[player_to_race_lv_id[i]-1][0],spawns_car_race_sity[player_to_race_lv_id[i]-1][1],
						spawns_car_race_sity[player_to_race_lv_id[i]-1][2], spawns_car_race_sity[player_to_race_lv_id[i]-1][3], -1, -1, -1,VEHICLE_TYPE_RACE);
						LinkVehicleToInterior(player_car_race_lv_id[i],0);
						SetPlayerInterior(i,0);
					}
				case 1: {
						player_car_race_lv_id[i] = A_CreateVehicle(568,
						spawns_car_race_desert[player_to_race_lv_id[i]-1][0],spawns_car_race_desert[player_to_race_lv_id[i]-1][1],
						spawns_car_race_desert[player_to_race_lv_id[i]-1][2], spawns_car_race_desert[player_to_race_lv_id[i]-1][3], -1, -1, -1,VEHICLE_TYPE_RACE);
						LinkVehicleToInterior(player_car_race_lv_id[i],0);
						SetPlayerInterior(i,0);
					}
				case 2: {
						player_car_race_lv_id[i] = A_CreateVehicle(571,
						spawns_car_race_kart[player_to_race_lv_id[i]-1][0],spawns_car_race_kart[player_to_race_lv_id[i]-1][1],
						spawns_car_race_kart[player_to_race_lv_id[i]-1][2], spawns_car_race_kart[player_to_race_lv_id[i]-1][3], -1, -1, -1,VEHICLE_TYPE_RACE);
						LinkVehicleToInterior(player_car_race_lv_id[i],7);
						SetPlayerInterior(i,7);
					}
				}
				SetPVarInt(i,"lock_race",1);
				SetPlayerVirtualWorld(i,300);
				SetVehicleVirtualWorld(player_car_race_lv_id[i], 300);
				t_PutPlayerInVehicle(i, player_car_race_lv_id[i], 0);
				SetVehicleParamsEx(player_car_race_lv_id[i],true,false,false,false,false,false,false);
				SetVehicleHealth(player_car_race_lv_id[i],1000.0);
				VehicleInfo[player_car_race_lv_id[i]][vFuel] = 100.0;
				SetHealth(i,100);
				TogglePlayerControllable(i, 0);
				for(new r=0; r<6; r++) {
					TextDrawShowForPlayer(i, td_game[r]);
				}
				new string[24];
				format(string,sizeof(string),"$%d",money_in_race_lv);
				TextDrawSetString(td_game[5], string);
			}
		}
	}
	if(open_race_lv == 3 && time_registr_race_lv == 1) {
		time_registr_race_lv = 0;
		open_race_lv = 0;
		foreach(new i:Player)  {
			if(!TI[i][tLogin]) continue;
			if(player_to_race_lv[i] == 1) {
				DeletePVar(i,"lock_race");
				GameTextForPlayer(i, "~g~GO-GO-GO", 1000, 3);
				TogglePlayerControllable(i, 1);
				if(TI[i][tCashRace]) TI[i][tCashRace] = 0;
				time_race_lv = 0;
				race_lv_start = 1;
				SetPVarInt(i,"RaceCP",1);
				SetNextRaceCP(i,race_type);
				if(QuestProgress[i][7] < 2 && AcceptQuest[i][7] != 0) QuestProgress[i][7] ++,save_quest(i,7);
				if(QuestProgress[i][7] == 2 && AcceptQuest[i][7] != 0)
				{
					D(i,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Развлечение'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
					NextStapQI(i,7);
				}
				if(QuestProgress[i][40] < 5 && AcceptQuest[i][40] != 0) QuestProgress[i][40] ++,save_quest(i,40);
				if(QuestProgress[i][40] == 5 && AcceptQuest[i][40] != 0) {
					D(i,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
				}
			}
		}
	}
	new hour,minuite,second;
	gettime(hour,minuite,second);
	if(((hour == 11 && minuite == 10 || hour == 14 && minuite == 10 || hour == 18 && minuite == 10 || hour == 22 && minuite == 10) && open_race_lv == 0) || open_race_lv == 999)  {
		new str[3][11] = {"Городская","Бездорожье","Картинг"};
		race_type = random(sizeof(str));
		new string[128];
		format(string,sizeof string,""ORANGE"[Центр развлечений]"W" Внимание! Открыта регистрация на Безумные Гонки. Трасса: %s",str[race_type]);
		SendClientMessageToAll(-1, string);
		SendClientMessageToAll(-1, ""ORANGE"[Центр развлечений]"W" У вас есть 10 минут для прохождения регистрации. (/gps > Развлечения > центр развлечений)");
		time_registr_race_lv = 600;// время на регистрацию изменить после тестов на 600 (10 минут)
		money_in_race_lv = 0;
		players_in_race_lv = 0;
		open_race_lv = 1;
		time_race_lv = 0;
		race_lv_start = 0;
		race_lead_lv = 0;
		game_players[0] = 0;
	}
	return 1;
}
stock Race_End(playerid) {
	new string[256];
	new priz_lv_1 = (money_in_race_lv/100)*50;
	new priz_lv_2 = (money_in_race_lv/100)*30;
	new priz_lv_3 = (money_in_race_lv/100)*20;
	new money_kotleta[3];
	switch(race_lead_lv) {
	case 0: {
			race_lead_lv = 1;
			GiveMoney(playerid,priz_lv_1,"победа в безумных гонках"), money_kotleta[0] = priz_lv_1;
			format(string,sizeof(string),"%s[%d]"G" завершил гонку "P"первым"G". Его время "W"%s"G", выигрыш "ORANGE"%d", player_name[playerid],playerid,Convertss(time_race_lv),money_kotleta[0]);
			SendClientMessageToRace(-1,string);
		}
	case 1: {
			race_lead_lv = 2;
			GiveMoney(playerid,priz_lv_2,"победа в безумных гонках"), money_kotleta[1] = priz_lv_2;
			format(string,sizeof(string),"%s[%d]"G" завершил гонку "P"вторым"G". Его время "W"%s"G", выигрыш "ORANGE"%d", player_name[playerid],playerid,Convertss(time_race_lv),money_kotleta[1]);
			SendClientMessageToRace(-1,string);

		}
	case 2: {
			race_lead_lv = 3;
			GiveMoney(playerid,priz_lv_3,"победа в безумных гонках"), money_kotleta[2] = priz_lv_3;
			format(string,sizeof(string),"%s[%d]"G" завершил гонку "P"третьим"G". Его время "W"%s"G", выигрыш "ORANGE"%d", player_name[playerid],playerid,Convertss(time_race_lv),money_kotleta[2]);
			SendClientMessageToRace(-1,string);

		}
	default: {
			format(string,sizeof(string),"%s[%d]"G" завершил гонку. Его время "W"%s"G"",player_name[playerid],playerid,Convertss(time_race_lv));
			SendClientMessageToRace(-1,string);
		}
	}
	for(new i=0; i<6; i++) {
		TextDrawHideForPlayer(playerid, td_game[i]);
	}
	player_to_race_lv[playerid] = 0;
	new random_spawn = random(sizeof spawns_pos_game_end);
	SetPlayerPosAC(playerid, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],200,3,true);
	SetPlayerFacingAngle(playerid, spawns_pos_game_end[random_spawn][4]);
	FreezePlayerForTime(playerid,2);
	SetPlayerInterior(playerid, 2);
	SetPlayerVirtualWorld(playerid, 2);
	SetCameraBehindPlayer(playerid);

	ResetPlayerWeapons(playerid);
	
	DeletePVar(playerid,"RaceCP");

	if(QuestProgress[playerid][7] < 2 && AcceptQuest[playerid][7] != 0) QuestProgress[playerid][7] ++,save_quest(playerid,7);
	if(QuestProgress[playerid][7] == 2 && AcceptQuest[playerid][7] != 0)
	{
		D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Развлечение'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
		NextStapQI(playerid,7);
	}

	if(QuestProgress[playerid][40] < 5 && AcceptQuest[playerid][40] != 0) QuestProgress[playerid][40] ++,save_quest(playerid,40);
	if(QuestProgress[playerid][40] == 5 && AcceptQuest[playerid][40] != 0) {
		D(playerid,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
	}
	A_DestroyVehicle(player_car_race_lv_id[playerid]);
	player_car_race_lv_id[playerid] = INVALID_VEHICLE_ID;
	return true;
}

stock SetNextRaceCP(playerid,type) {
	new id_cp = PlayerRaceFix[playerid];
	if(id_cp == -1) id_cp = 0;
	if(gRaceCPs[type][id_cp][1] == 0.0 || gRaceCPs[type][id_cp][2] == 0.0)
	{
		PlayerRaceFix[playerid] = 0;
		Race_End(playerid);
		return true;
	}

	SetPlayerRaceCheckpoint(playerid,
	(gRaceCPs[type][id_cp][0] != 1.0) ? (0) : (1),
	gRaceCPs[type][id_cp][1],
	gRaceCPs[type][id_cp][2],
	gRaceCPs[type][id_cp][3],

	gRaceCPs[type][id_cp + 1][1],
	gRaceCPs[type][id_cp + 1][2],
	gRaceCPs[type][id_cp + 1][3], 4.0);
	PlayerRaceFix[playerid] = id_cp += 1;
	if(race_type == 2)
	{
		if(PlayerRaceFix[playerid] == 6) SendOk(playerid,"Вы проехали"GREEN" 1/5"W" кругов");
		if(PlayerRaceFix[playerid] == 10) SendOk(playerid,"Вы проехали"GREEN" 2/5"W" кругов");
		if(PlayerRaceFix[playerid] == 14) SendOk(playerid,"Вы проехали"GREEN" 3/5"W" кругов");
		if(PlayerRaceFix[playerid] == 18) SendOk(playerid,"Вы проехали"GREEN" 4/5"W" кругов");
	}
	return 1;
}

stock SendClientMessageToRace(color, const string[]) {
	foreach(Player,i)if(player_to_race_lv[i] == 1) SendClientMessage(i,color,string);
	return true;
}

stock SendClientMessageToDM(color,const string[]) {
	foreach(Player,i) {
		if(!player_to_game[i]) continue;
		SendClientMessage(i,color,string);
	}
	return true;
}
stock seat_player(){
	new key_pressed, ud, lr;
	foreach(Player, playerid){
		GetPlayerKeys(playerid, key_pressed, ud, lr);
		if(key_pressed == KEY_SPRINT && !IsPlayerInAnyVehicle(playerid)){
			if(PI[playerid][pSatiety] < 35) {

				ClearAnimations(playerid);
				if(GetPVarInt(playerid,"AntiFloodH") > gettime()) return 1;
				SetPVarInt(playerid,"AntiFloodH",gettime() + 300);
				SendClientMessage(playerid,COLOR_YELLOW,"Вы проголодались...");
				}
		}
	}
	return 1;
}
stock game_container() {
	new hour,minuite,second;
	gettime(hour,minuite,second);
	if(open_cont == 1 && open_cont_time > 1) {
		open_cont_time--;
		if(open_cont_time == 1)
		{
			open_cont = 0;
			SendClientMessageToAll(-1, ""ORANGE"[Контейнеры]"W" В порту ЛС начался аукцион за контейнеры (/gps > Развлечения > контейнеры)");
			for(new i = 0; i < MAX_CONTAINER; i++)
			{
			    switch(gContainer[i][cClass])
			    {
			        case 5:
			        {
                        if(gContainer[i][cTime]) continue;
						gContainer[i][cPlayer] = INVALID_PLAYER_ID;
						strmid(gContainer[i][cOwned], "None", 0, 30);
						gContainer[i][cStavka] = 0;
						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"{F9C7A1}Контейнер\n\n"W"Класс:{F9C7A1} %s"W"\nНачальная ставка:{F9C7A1} %d rub"W"\nПоследняя ставка:{F9C7A1} 0 rub"W"\n\nАукцион ["GREEN"Открыт"W"]",
						gContainer[i][cName],gContainer[i][cMoney]);
						UpdateDynamic3DTextLabelText(gContainer[i][cText], -1, STRING_GLOBAL);
						conteiner[i] = 0;
					}
					default:
					{
                        if(gContainer[i][cTime]) continue;
						gContainer[i][cPlayer] = INVALID_PLAYER_ID;
						strmid(gContainer[i][cOwned], "None", 0, 30);
						gContainer[i][cStavka] = 0;
						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"{F9C7A1}Контейнер\n\n"W"Класс:{F9C7A1} %s"W"\nНачальная ставка:{F9C7A1} %d$"W"\nПоследняя ставка:{F9C7A1} 0$"W"\n\nАукцион ["GREEN"Открыт"W"]",
						gContainer[i][cName],gContainer[i][cMoney]);
						UpdateDynamic3DTextLabelText(gContainer[i][cText], -1, STRING_GLOBAL);
						conteiner[i] = 0;
					}
				}
				
			}
		}
	}
	if(open_zg == 1 && open_zg_time > 1) {
		open_zg_time--;
		if(open_zg_time == 1)
		{
			open_zg = 0;
			SendClientMessageToAll(-1, ""ORANGE"[Аукцион гаражей]"W" Появились новые гаражи для приобретения. (/gps > Развлечения > Аукцион гаражей)");
			for(new i = 1; i <= MAX_GARAGE; i++)
			{
			    if(FG[i][gActive] == 0) {
		            FG[i][gActive] = 1;
		            continue;
				}
			}

		}
	}
	if((hour == 11 && minuite == 00 ||
				hour == 13 && minuite == 00 ||
				hour == 15 && minuite == 00 ||
				hour == 17 && minuite == 00 ||
				hour == 19 && minuite == 00 ||
				hour == 21 && minuite == 00 ||
				hour == 9 && minuite == 00 ||
				hour == 00 && minuite == 00) && open_zg == 0) {
		SendClientMessageToAll(-1, ""ORANGE"[Аукцион гаражей]"W" Через 10 минут можно будет приобрести заброшенные гаражи (/gps > Развлечения > Аукцион гаражей)");
		open_zg_time = 600;
		open_zg = 1;
	}
	
	if((hour == 8 && minuite == 00 ||
				hour == 10 && minuite == 00 ||
				hour == 12 && minuite == 00 ||
				hour == 14 && minuite == 00 ||
				hour == 16 && minuite == 00 ||
				hour == 18 && minuite == 00 ||
				hour == 20 && minuite == 00 ||
				hour == 22 && minuite == 00 ||
				hour == 00 && minuite == 00) && open_cont == 0) {
		SendClientMessageToAll(-1, ""ORANGE"[Контейнеры]"W" Через 10 минут в порту ЛС пройдет аукцион за контейнеры (/gps > Развлечения > контейнеры)");
		open_cont_time = 600;
		open_cont = 1;
	}

	if((hour == 9 && minuite == 20||
				hour == 12 && minuite == 20 ||
				hour == 15 && minuite == 20 ||
				hour == 18 && minuite == 20 ||
				hour == 21 && minuite == 20 ||
				hour == 00 && minuite == 20 ||
				hour == 03 && minuite == 20 ||
				hour == 06 && minuite == 20) && LastAirDrop[airTime] == 0) airdrop();
	
	return true;
}

stock game_dm() {
	if(open_game == 1 && time_registr_game > 1){
		time_registr_game --;
		if(time_registr_game == 300) SendClientMessageToAll(-1, ""ORANGE"[Центр развлечений]"W" До конца регистрации на Сумасшедшие войны осталось 5 мин. (/gps > Развлечения > центр развлечений)");
		if(time_registr_game == 120) {
			SendClientMessageToAll(-1, ""ORANGE"[Центр развлечений]"W" До конца регистрации на Сумасшедшие войны осталось 2 мин. (/gps > Развлечения > центр развлечений)");
			game_players[2] = 20;
		}
		if(time_registr_game == 20) game_players[2] = 0;
	}
	else if(open_game == 1 && time_registr_game == 1) {
		if(players_in_game >= 1) {
			time_registr_game = 0;
			time_play_game = 300;
			game_start = 1;
			open_game = 0;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(player_to_game[i] == 1)
				{
					kills_player_game[i] = 0;
					new random_spawn = random(sizeof spawns_pos_game);
					SetPlayerPosAC(i, spawns_pos_game[random_spawn][0],spawns_pos_game[random_spawn][1],spawns_pos_game[random_spawn][2],201,10);
					SetPlayerFacingAngle(i, spawns_pos_game[random_spawn][4]);
					SetHealth(i,100.0);
					new random_weapon = random(sizeof weapon_id_game);
					GivePlayerWeapon(i, weapon_id_game[random_weapon], 999);
					for(new r=0; r<6; r++) {
						TextDrawShowForPlayer(i, td_game[r]);
					}
					new string[24];
					format(string,sizeof(string),"$%d",money_in_game);
					TextDrawSetString(td_game[5], string);
					if(TI[i][tCashDM]) TI[i][tCashDM] = 0;
					SetPlayerColor(i,0xBC2C2CFF);

					if(QuestProgress[i][40] < 5 && AcceptQuest[i][40] != 0) QuestProgress[i][40] ++,save_quest(i,40);
					if(QuestProgress[i][40] == 5 && AcceptQuest[i][40] != 0) {
						D(i,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
					}

					if(QuestProgress[i][7] < 2 && AcceptQuest[i][7] != 0) QuestProgress[i][7] ++,save_quest(i,7);
					if(QuestProgress[i][7] == 2 && AcceptQuest[i][7] != 0)
					{
						D(i,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение квеста 'Развлечение'\n\t"NO"Квест можно завершить у Лукаса","Закрыть","");
						NextStapQI(i,7);
					}
				}
			}
		}
		else {
			time_registr_game = 0;
			time_play_game = 0;
			game_start = 0;
			open_game = 0;
			money_in_game = 0;
			new query[100];
			mysql_format(connects, query, sizeof(query),"DELETE FROM `dm_arena` WHERE 1");
			mysql_tquery(connects, query);
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(player_to_game[i] == 1) player_to_game[i] = 0;
				if(TI[i][tCashDM]) GiveMoney(i,TI[i][tCashDM],"возвращение взноса сумасшедших войн"),TI[i][tCashDM] = 0;
			}
		}
	}
	if(game_start == 1 && time_play_game > 1) {
		time_play_game--;
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			if(player_to_game[i] == 1) {
				new string[24];
				format(string,sizeof(string),"%s",Convert(time_play_game));
				TextDrawSetString(td_game[4], string);
			}
		}
	}
	else if(game_start == 1 && time_play_game == 1) {
		time_registr_game = 0;
		time_play_game = 0;
		game_start = 0;
		open_game = 0;
		End();
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			if(player_to_game[i] == 1)
			{
				for(new r=0; r<6; r++) {
					TextDrawHideForPlayer(i, td_game[r]);
				}
				player_to_game[i] = 0;
				new random_spawn = random(sizeof spawns_pos_game_end);
				SetPlayerPosAC(i, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],2,2);
				SetPlayerFacingAngle(i, spawns_pos_game_end[random_spawn][4]);
				SetPlayerVirtualWorld(i, 2);
				SetPlayerInterior(i,2);
				FreezePlayerForTime(i,2);
				SetCameraBehindPlayer(i);
				SetHealth(i,100.0);
				SetArmour(i, 0);
				if(PI[i][pMember] && start_work[i]) {
					A_SetPlayerSkin(i,PI[i][pFracSkin]);
					SetPlayerColor(i,gFractionSpawn[PI[i][pMember]][fracColor]);
				}
				else SetPlayerColor(i,0xFFFFFF11);
				ResetPlayerWeapons(i);
			}
		}
	}
	new hour,minuite,second;
	gettime(hour,minuite,second);
	if(((hour == 9 && minuite == 10 ||  hour == 12 && minuite == 10 || hour == 16 && minuite == 10 || hour == 20 && minuite == 10 || hour == 0 && minuite == 10) && open_game == 0) || open_game == 999) {
		SendClientMessageToAll(-1, ""ORANGE"[Центр развлечений]"W" Внимание! Открыта регистрация на Cумасшедшие Войны");
		SendClientMessageToAll(-1, ""ORANGE"[Центр развлечений]"W" У Вас есть 10 минут для прохождения регистрации. (/gps > Развлечения > центр развлечений)");
		time_registr_game = 600;
		money_in_game = 0;
		players_in_game = 0;
		open_game = 1;
		game_start = 0;
		game_players[2] = 0;
		new query[100];
		mysql_format(connects, query, sizeof(query),"DELETE FROM `dm_arena` WHERE 1");
		mysql_tquery(connects, query);
	}
	return 1;
}
stock End() {
	new Cache:result = mysql_query(connects, "SELECT `Name`,`kills_dm` FROM `dm_arena` ORDER BY `kills_dm` DESC LIMIT 3");
	new rows = cache_num_rows();
	if(rows) {
		new name[MAX_PLAYER_NAME];
		new kills[3];
		new str[156], name_kotleta[3];
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name",name,MAX_PLAYER_NAME);
			if(i==0) {
				new priz_player_1 = money_in_game/100*50;
				cache_get_value_int(i, "kills_dm", kills[0]);
				if(IsPlayerConnected(GetPlayerID(name))) {
					GiveMoney(GetPlayerID(name),priz_player_1,"победа в сумасшедших войнах"),name_kotleta[0] = priz_player_1;
				}
				format(str,sizeof(str),"%s "G"занимает 1 место. Он убил "P"%d"G" игроков и выиграл "ORANGE"$%d",name,kills[0],name_kotleta[0]);
				SendClientMessageToDM(-1,str);
			}
			if(i==1) {
				new priz_player_2 = money_in_game/100*30;
				cache_get_value_int(i, "kills_dm", kills[1]);
				if(IsPlayerConnected(GetPlayerID(name))) {
					GiveMoney(GetPlayerID(name),priz_player_2,"победа в сумасшедших войнах"),name_kotleta[1] = priz_player_2;
				}
				format(str,sizeof(str),"%s "G"занимает 2 место. Он убил "P"%d"G" игроков и выиграл "ORANGE"$%d",name,kills[1],name_kotleta[1]);
				SendClientMessageToDM(-1,str);
			}
			if(i==2) {
				new priz_player_3 = money_in_game/100*20;
				cache_get_value_int(i, "kills_dm", kills[2]);
				if(IsPlayerConnected(GetPlayerID(name))) {
					GiveMoney(GetPlayerID(name),priz_player_3,"победа в сумасшедших войнах"),name_kotleta[2] = priz_player_3;
				}
				format(str,sizeof(str),"%s "G"занимает 3 место. Он убил "P"%d"G" игроков и выиграл "ORANGE"$%d",name,kills[2],name_kotleta[2]);
				SendClientMessageToDM(-1,str);
			}
		}
	}
	cache_delete(result);
	return 1;
}

stock UpdateExp(playerid) {
	if(PI[playerid][pExp]+1 >= (PI[playerid][pLevel])*6) {
		PI[playerid][pLevel] += 1;
		PI[playerid][pExp] = 0;
		DollahScoreUpdate(playerid);
		SendClientMessage(playerid, CGOLD, "Поздравляем! Ваш уровень повышен");
	}
	UpdatePlayerData(playerid,"pExp",PI[playerid][pExp]);
	UpdatePlayerData(playerid,"pLevel",PI[playerid][pLevel]);
}

stock CancelTextDrawBank(playerid) {
	for(new it = 0; it < 24; it++) TextDrawHideForPlayer(playerid, hack_magaz_TD[it]);
	for(new i = 0; i < 13; i++) PlayerTextDrawHide(playerid, hack_numbers[playerid][i]);
	CancelSelectTextDraw(playerid);
	progress_rob[playerid] = 0;
	DeletePVar(playerid,"bank_rob");
	ApplyAnimation(playerid, "CARRY", "null", 1.0, 0, 0, 0, 0, 0, 0);
	PlayerClearAnim[playerid] = 1;
}

stock GetFamilyCar(playerid) {
	new Float:car_pos[5][3],id = -1;
	new fam = PI[playerid][pFamily]-1;

	if(CarFamily[fam][0][LoadCar]) GetVehiclePos(CarFamily[fam][0][LoadCar], car_pos[0][0],car_pos[0][1],car_pos[0][2]);
	if(CarFamily[fam][1][LoadCar]) GetVehiclePos(CarFamily[fam][1][LoadCar], car_pos[1][0],car_pos[1][1],car_pos[1][2]);
	if(CarFamily[fam][2][LoadCar]) GetVehiclePos(CarFamily[fam][2][LoadCar], car_pos[2][0],car_pos[2][1],car_pos[2][2]);
	if(CarFamily[fam][3][LoadCar]) GetVehiclePos(CarFamily[fam][3][LoadCar], car_pos[3][0],car_pos[3][1],car_pos[3][2]);
	if(CarFamily[fam][4][LoadCar]) GetVehiclePos(CarFamily[fam][4][LoadCar], car_pos[4][0],car_pos[4][1],car_pos[4][2]);

	if(PlayerToPoint(3.0, playerid, car_pos[0][0], car_pos[0][1], car_pos[0][2])) id = 0;
	if(PlayerToPoint(3.0, playerid, car_pos[1][0],car_pos[1][1],car_pos[1][2])) id = 1;
	if(PlayerToPoint(3.0, playerid, car_pos[2][0],car_pos[2][1],car_pos[2][2])) id = 2;
	if(PlayerToPoint(3.0, playerid, car_pos[3][0],car_pos[3][1],car_pos[3][2])) id = 3;
	if(PlayerToPoint(3.0, playerid, car_pos[4][0],car_pos[4][1],car_pos[4][2])) id = 4;
	return id;
}

stock GetNearestCar(playerid) {
	new Float:car_pos[2][3],id = -1;

	if(house_car[playerid][0]) GetVehiclePos(house_car[playerid][0], car_pos[0][0],car_pos[0][1],car_pos[0][2]);
	if(house_car[playerid][1]) GetVehiclePos(house_car[playerid][1], car_pos[1][0],car_pos[1][1],car_pos[1][2]);

	if(PlayerToPoint(3.0, playerid, car_pos[0][0], car_pos[0][1], car_pos[0][2])) id = 0;
	else if(PlayerToPoint(3.0, playerid, car_pos[1][0],car_pos[1][1],car_pos[1][2])) id = 1;
	return id;
}
stock save_car(i,ID) {
	new temp[0x9e], query[600], str[500];

	format(str,sizeof(str),"%i|%i|%i|%i|%i|%i|%i|%i|%i|%i|%i|%i|%i|%i",
	CarsInfo[i][carVehcom_1][ID],CarsInfo[i][carVehcom_2][ID],CarsInfo[i][carVehcom_3][ID],
	CarsInfo[i][carVehcom_4][ID],CarsInfo[i][carVehcom_5][ID],CarsInfo[i][carVehcom_6][ID],
	CarsInfo[i][carVehcom_7][ID],CarsInfo[i][carVehcom_8][ID],CarsInfo[i][carVehcom_9][ID],
	CarsInfo[i][carVehcom_10][ID],CarsInfo[i][carVehcom_11][ID],CarsInfo[i][carVehcom_12][ID],
	CarsInfo[i][carVehcom_13][ID],CarsInfo[i][carVehcom_14][ID]);
	
	
	mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_CARS"` SET ");
	format(temp,sizeof(temp),"`model`= '%i',",CarsInfo[i][carModel][ID]), 				    strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`color_one`= '%i',",CarsInfo[i][carColor_one][ID]), 		    strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`color_two`= '%i',",CarsInfo[i][carColor_two][ID]), 	    	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`drived`= '%f',",CarsInfo[i][carDrived][ID]), 	   	        strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`fuel`= '%f',",CarsInfo[i][carFuel][ID]), 			    	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`Akum`= '%f',",CarsInfo[i][carAkum][ID]), 			    	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`components`= '%s',",str), 					                strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`kanistra`= '%i',",CarsInfo[i][carKanistra][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`narko`= '%i',",CarsInfo[i][carNarko][ID]), 			     	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`mats`= '%i',",CarsInfo[i][carMats][ID]), 					strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`deagle`= '%i',",CarsInfo[i][carDeagle][ID]), 				strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`ak47`= '%i',",CarsInfo[i][carAK47][ID]), 					strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`m4`= '%i',",CarsInfo[i][carM4][ID]), 						strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`shot`= '%i',",CarsInfo[i][carShot][ID]), 					strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`paintjob`= '%i',",CarsInfo[i][carPaintJob][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`number`= '%s'",NumberVehicle[i][ID]), 						strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp)," WHERE id = '%i'",CarsInfo[i][carID][ID]),					strcat(query,temp,sizeof(query));
	mysql_tquery(connects, query, "", "");
	return true;
}

stock save_cars(playerid, car)
{
	new query[128];
	format(query, 128, "UPDATE `cars` SET `drived` = '%.2f', `fuel` = '%.2f', `Akum` = '%.02f' WHERE `id` = '%d'",CarsInfo[playerid][carDrived][car],CarsInfo[playerid][carFuel][car],CarsInfo[playerid][carAkum][car],CarsInfo[playerid][carID][car]);
	mysql_tquery(connects, query, "", "");
}

stock sell_cars(playerid,car, idx=0) {
	if(!PI[playerid][pRoom] && !PI[playerid][pHouse] && !PI[playerid][pTempKey]) return 1;
	if(PI[playerid][pCredit]) return SCM(playerid, COLOR_GREY, "У вас не выплачен кредит. Продажа Т/C запрещена!");
	if(CarsInfo[playerid][carModel][car] == 481) return SendClientMessage(playerid, COLOR_GREY, "Данное Т/С нельзя продать");
	new modelid = CarsInfo[playerid][carModel][car] - 400;

	new procent = floatround((gTransport[modelid][trPrice]/100)*Nalog[4]);
	new sum = (gTransport[modelid][trPrice]-procent);

	FI[fWHITEHOUSE][fBank] += procent;
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

	GiveMoney(playerid,sum,"продажа ТС");

	RemoveComponent(playerid, house_car[playerid][car], car);
	
	CarsInfo[playerid][carDrived][car] = 0;

	CarsInfo[playerid][carModel][car] = 481;
	CarsInfo[playerid][carColor_one][car] = 1;
	CarsInfo[playerid][carColor_two][car] = 1;
	
	strmid(NumberVehicle[playerid][car], "transit", 0, strlen("transit"), 255);
	
	if(house_car[playerid][car] != INVALID_VEHICLE_ID)
	{
		A_DestroyVehicle(house_car[playerid][car]);
		house_car[playerid][car] = INVALID_VEHICLE_ID;
	}
	
	new query[550];
	format(query, 550, "UPDATE `cars` SET `model` = '481', `color_one` = '1', `color_two` = '1',`drived` = '0',`number` = 'transit',`model` = '481',`components` = '0|0|0|0|0|0|0|0|0|0|0|0|0|0',`paintjob` = '-1' WHERE `id` = '%d'",CarsInfo[playerid][carID][car]);
	mysql_tquery(connects, query, "", "");
	
	new query_[550];
	format(query_, 550, "UPDATE `cars` SET `kanistra` = '0', `narko` = '0',`fuel` = '0',`mats` = '0',`deagle` = '0',`ak47` = '0',`m4` = '0',`shot` = '0' WHERE `id` = '%d'",CarsInfo[playerid][carID][car]);
	mysql_tquery(connects, query_, "", "");
	
	
	if(!idx) SendOk(playerid, "Вы продали свой автомобиль");
	else {
		
		SendOk(playerid, "Ваш автомобиль был продан за неуплату кредита");
		gBusiness[63][bizzBank] += floatround((gTransport[modelid][trPrice]/100)*90);
	}
	return 1;
}

stock sellcar_carncel(playerid, id_prodaet) {
	DeletePVar(playerid,"car_prodaet");
	DeletePVar(playerid,"carCena");
	DeletePVar(playerid,"sellcar");
	DeletePVar(id_prodaet,"car_pokupaet");
	DeletePVar(id_prodaet,"carnumber");
}

stock change_carcancel(playerid,id_prodaet) {
	DeletePVar(playerid,"carProdaet");
	DeletePVar(playerid,"carCena");
	DeletePVar(playerid,"sellcar_type");
	DeletePVar(playerid,"carPokupaet");
	DeletePVar(id_prodaet,"carPokupaet");
	DeletePVar(id_prodaet,"numbercar1");
	DeletePVar(id_prodaet,"numbercar2");
	return 1;
}

stock GetVehicleID ( )
{
	new veh_id = AddStaticVehicleEx ( 400, -100, -100, -100, 0, 0, 0, 0 ) ;
	DestroyVehicle ( veh_id ) ;
	return veh_id ;
}

stock duel_delete(id,bool:end) {
	if(id != -1) {
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			if(TI[i][tDuel] != id) continue;
			if(end == false) {
				SendOk(i,"Лобби удалено, все члены лобби распущены");
				GiveMoney(i,DI[id][duel_money],"возвращение взноса дуэль");
			}
			TI[i][tDuel] = -1;
			TI[i][tDuelLobby] = -1;
		}
		DI[id][duel_owner_id] = DI[id][duel_id][0] = DI[id][duel_id][1] = DI[id][duel_id][2] = DI[id][duel_id][3] = DI[id][duel_id][4] = DI[id][duel_id][5] = INVALID_PLAYER_ID;
		DI[id][duel_gun] = DI[id][duel_gun_2] = 0;
		DI[id][duel_money] = 1000;
		DI[id][duel_raund] = 1;
		DI[id][duel_type] = 0;
		DI[id][duel_map] = 0;
		DI[id][duel_health] = 100;
		DI[id][duel_armour] = 0;
		DI[id][duel_start] = false;
		DI[id][duel_create] = false;
		DI[id][duel_password] = 0;
		DI[id][duel_point_1] = DI[id][duel_point_2] = DI[id][duel_vw] = 0;
	}
}
stock duel_enter(playerid,id) {
	static const f_str[] = ""W"Наименование\t"W"Значение\n\
						"P"1."W" Создатель\t%s\n\
						"P"2."W" Тип\t%s\n\
						"P"3."W" Раунды\t%d\n\
						"P"4."W" Взнос\t$%d\n\
						"P"5."W" Оружие\t%s\n\
						"P"6."W" Доп. Оружие\t%s\n\
						"P"7."W" Карта\t%s\n\
						"P"8."W" Здоровье\t%d\n\
						"P"9."W" Броня\t%d";
	new string[sizeof(f_str) + 100];
	new duel_types[3][7] = {"1 VS 1","2 VS 2","3 VS 3"};
	new duel_guns[5][13] = {"Desert Eagle","ShotGun","MP5","AK-47","M4"};
	new duel_guns_2[6][13] = {"Не выбрано","Desert Eagle","ShotGun","MP5","AK-47","M4"};
	new duel_maps[3][11] = {"Карта №1","Карта №2","Карта №3"};

	format(string,sizeof(string),f_str,player_name[DI[id][duel_owner_id]],duel_types[DI[id][duel_type]],DI[id][duel_raund],DI[id][duel_money],duel_guns[DI[id][duel_gun]],duel_guns_2[DI[id][duel_gun_2]],duel_maps[DI[id][duel_map]],DI[id][duel_health],DI[id][duel_armour]);
	return D(playerid,D_DUEL_3,DSTH,""P"Дуэли | Информация",string,"Войти","Отмена");
}
stock duel_lobby_2(playerid,id) {
	new string[256],name[30],name_2[30],name_3[30],name_4[30];
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID) format(name,sizeof(name),"1. %s\n",player_name[DI[id][duel_id][0]]);
	else format(name,sizeof(name),"1. ----\n");
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID) format(name_2,sizeof(name_2),"2. %s\n",player_name[DI[id][duel_id][1]]);
	else format(name_2,sizeof(name_2),"2. ----\n");
	if(DI[id][duel_id][2] != INVALID_PLAYER_ID) format(name_3,sizeof(name_3),"1. %s\n",player_name[DI[id][duel_id][2]]);
	else format(name_3,sizeof(name_3),"1. ----\n");
	if(DI[id][duel_id][3] != INVALID_PLAYER_ID) format(name_4,sizeof(name_4),"2. %s\n",player_name[DI[id][duel_id][3]]);
	else format(name_4,sizeof(name_4),"2. ----\n");
	format(string,sizeof(string),"%s\n%s\n \n%s\n%s",name,name_2,name_3,name_4);
	D(playerid,D_DUEL_4,DSL,""P"Лобби",string,"Выбрать","Покинуть");
	return 1;
}
stock duel_lobby_3(playerid,id) {
	new string[256],name[30],name_2[30],name_3[30],name_4[30],name_5[30],name_6[30];
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID) format(name,sizeof(name),"1. %s\n",player_name[DI[id][duel_id][0]]);
	else format(name,sizeof(name),"1. ----\n");
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID) format(name_2,sizeof(name_2),"2. %s\n",player_name[DI[id][duel_id][1]]);
	else format(name_2,sizeof(name_2),"2. ----\n");
	if(DI[id][duel_id][2] != INVALID_PLAYER_ID) format(name_3,sizeof(name_3),"3. %s\n",player_name[DI[id][duel_id][2]]);
	else format(name_3,sizeof(name_3),"3. ----\n");
	if(DI[id][duel_id][3] != INVALID_PLAYER_ID) format(name_4,sizeof(name_4),"1. %s\n",player_name[DI[id][duel_id][3]]);
	else format(name_4,sizeof(name_4),"1. ----\n");
	if(DI[id][duel_id][4] != INVALID_PLAYER_ID) format(name_5,sizeof(name_5),"2. %s\n",player_name[DI[id][duel_id][4]]);
	else format(name_5,sizeof(name_5),"2. ----\n");
	if(DI[id][duel_id][5] != INVALID_PLAYER_ID) format(name_6,sizeof(name_6),"3. %s\n",player_name[DI[id][duel_id][5]]);
	else format(name_6,sizeof(name_6),"3. ----\n");
	format(string,sizeof(string),"%s\n%s\n%s\n \n%s\n%s\n%s",name,name_2,name_3,name_4,name_5,name_6);
	D(playerid,D_DUEL_5,DSL,""P"Лобби",string,"Выбрать","Покинуть");
	return 1;
}
stock duel_exit(playerid,id) {
	switch(TI[playerid][tDuelLobby]) {
	case 0: DI[id][duel_id][0] = INVALID_PLAYER_ID;
	case 1: DI[id][duel_id][1] = INVALID_PLAYER_ID;
	case 2: DI[id][duel_id][2] = INVALID_PLAYER_ID;
	case 3: DI[id][duel_id][3] = INVALID_PLAYER_ID;
	case 4: DI[id][duel_id][4] = INVALID_PLAYER_ID;
	case 5: DI[id][duel_id][5] = INVALID_PLAYER_ID;
	}
}
stock start_duel_1(id) {
	DI[id][duel_start] = true;
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID)
	{
		if(DI[id][duel_map] == 0) {
			SetPlayerPosAC(DI[id][duel_id][0],1501.8821,141.9666,1180.6320,DI[id][duel_id][1]+1,5);
			SetPlayerInterior(DI[id][duel_id][0], 5);
			SetPlayerFacingAngle(DI[id][duel_id][0], 214.2900);
		}
		if(DI[id][duel_map] == 1) {
			SetPlayerPosAC(DI[id][duel_id][0],1143.5587,-145.4563,1227.0383,DI[id][duel_id][1]+1,5);
			SetPlayerInterior(DI[id][duel_id][0], 5);
			SetPlayerFacingAngle(DI[id][duel_id][0], 217.1566);
		}
		if(DI[id][duel_map] == 2) {
			SetPlayerPosAC(DI[id][duel_id][0],2299.0391,-6368.5542,8.8312,DI[id][duel_vw], 0);
			SetPlayerInterior(DI[id][duel_id][0], 0);
			SetPlayerFacingAngle(DI[id][duel_id][0], 42.0484);
		}
		SetCameraBehindPlayer(DI[id][duel_id][0]);
		ResetPlayerWeapons(DI[id][duel_id][0]);
		FreezePlayerForTime(DI[id][duel_id][0],2);
		if(QuestProgress[DI[id][duel_id][0]][45] < 5 && AcceptQuest[DI[id][duel_id][0]][45] != 0) QuestProgress[DI[id][duel_id][0]][45] ++,save_quest(DI[id][duel_id][0],45);
		if(QuestProgress[DI[id][duel_id][0]][45] == 5 && AcceptQuest[DI[id][duel_id][0]][45] != 0) {
			D(DI[id][duel_id][0],DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
		}
		if(DI[id][duel_gun_2]) GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][0], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][0], DI[id][duel_armour]);
		DI[id][duel_leave][0] = 0;
	}
	else DI[id][duel_leave][0] = 1;
	
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
		if(DI[id][duel_map] == 0) {
			SetPlayerPosAC(DI[id][duel_id][1],1501.8649,75.3535,1180.8119,DI[id][duel_id][1]+1,5);
			SetPlayerInterior(DI[id][duel_id][1], 5);
			SetPlayerFacingAngle(DI[id][duel_id][1], 327.6943);
		}
		if(DI[id][duel_map] == 1) {
			SetPlayerPosAC(DI[id][duel_id][1],1190.9291,-154.6011,1227.0383,DI[id][duel_id][1]+1,5);
			SetPlayerInterior(DI[id][duel_id][1], 5);
			SetPlayerFacingAngle(DI[id][duel_id][1], 30.0948);
		}
		if(DI[id][duel_map] == 2) {
			SetPlayerPosAC(DI[id][duel_id][1],2208.4490,-6379.4673,10.6283,DI[id][duel_vw],0);
			SetPlayerInterior(DI[id][duel_id][1], 0);
			SetPlayerFacingAngle(DI[id][duel_id][1], 232.5100);
		}
		SetCameraBehindPlayer(DI[id][duel_id][1]);
		ResetPlayerWeapons(DI[id][duel_id][1]);
		FreezePlayerForTime(DI[id][duel_id][1],2);
		if(QuestProgress[DI[id][duel_id][1]][45] < 5 && AcceptQuest[DI[id][duel_id][1]][45] != 0) QuestProgress[DI[id][duel_id][1]][45] ++,save_quest(DI[id][duel_id][1],45);
		if(QuestProgress[DI[id][duel_id][1]][45] == 5 && AcceptQuest[DI[id][duel_id][1]][45] != 0) {
			D(DI[id][duel_id][1],DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
		}
		if(DI[id][duel_gun_2]) GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][1], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][1], DI[id][duel_armour]);
		DI[id][duel_leave][1] = 0;
	}
	else DI[id][duel_leave][1] = 1;
}
stock start_duel_2(id) {
	DI[id][duel_start] = true;
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID)
	{
		if(DI[id][duel_map] == 0) {
			SetPlayerPosAC(DI[id][duel_id][0],1501.4072,75.1180,1180.8092,DI[id][duel_vw],5);
			SetPlayerInterior(DI[id][duel_id][0], 5);
			SetPlayerFacingAngle(DI[id][duel_id][0], 326.2210);
		}
		if(DI[id][duel_map] == 1) {
			SetPlayerPosAC(DI[id][duel_id][0],1190.8843,-153.8486,1227.0383,DI[id][duel_vw],5);
			SetPlayerInterior(DI[id][duel_id][0], 5);
			SetPlayerFacingAngle(DI[id][duel_id][0], 30.6747);
		}
		if(DI[id][duel_map] == 2) {
			SetPlayerPosAC(DI[id][duel_id][0],2299.0391,-6368.5542,8.8312,DI[id][duel_vw],0);
			SetPlayerInterior(DI[id][duel_id][0], 0);
			SetPlayerFacingAngle(DI[id][duel_id][0], 42.0484);
		}
		TogglePlayerControllable(DI[id][duel_id][0], 1);
		SetCameraBehindPlayer(DI[id][duel_id][0]);
		FreezePlayerForTime(DI[id][duel_id][0],2);
		if(DI[id][duel_gun_2]) {
			GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		}
		GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][0], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][0], DI[id][duel_armour]);
		DI[id][duel_leave][0] = 0;
	}
	else DI[id][duel_leave][0] = 1;
	
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID)
	{
		if(DI[id][duel_map] == 0) {
			SetPlayerPosAC(DI[id][duel_id][1],1515.4338,80.2081,1180.8665,DI[id][duel_vw],5);
			SetPlayerInterior(DI[id][duel_id][1], 5);
			SetPlayerFacingAngle(DI[id][duel_id][1], 32.9616);
		}
		if(DI[id][duel_map] == 1) {
			SetPlayerPosAC(DI[id][duel_id][1],1183.9579,-144.3412,1227.0383,DI[id][duel_vw],5);
			SetPlayerInterior(DI[id][duel_id][1], 5);
			SetPlayerFacingAngle(DI[id][duel_id][1], 125.9289);
		}
		if(DI[id][duel_map] == 2) {
			SetPlayerPosAC(DI[id][duel_id][1],2290.4541,-6379.2788,8.7433,DI[id][duel_vw],0);
			SetPlayerInterior(DI[id][duel_id][1], 0);
			SetPlayerFacingAngle(DI[id][duel_id][1], 129.4692);
		}
		FreezePlayerForTime(DI[id][duel_id][1],2);
		TogglePlayerControllable(DI[id][duel_id][1], 1);
		SetCameraBehindPlayer(DI[id][duel_id][1]);
		if(DI[id][duel_gun_2]) {
			GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		}
		GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][1], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][1], DI[id][duel_armour]);
		DI[id][duel_leave][1] = 0;
	}
	else DI[id][duel_leave][1] = 1;
	
	if(DI[id][duel_id][2] != INVALID_PLAYER_ID)
	{
		if(DI[id][duel_map] == 0) {
			SetPlayerPosAC(DI[id][duel_id][2],1501.4684,142.3655,1180.6320,DI[id][duel_vw],5);
			SetPlayerInterior(DI[id][duel_id][2], 5);
			SetPlayerFacingAngle(DI[id][duel_id][2], 213.1065);
		}
		if(DI[id][duel_map] == 1) {
			SetPlayerPosAC(DI[id][duel_id][2],1143.3835,-144.5977,1227.0383,DI[id][duel_vw],5);
			SetPlayerInterior(DI[id][duel_id][2], 5);
			SetPlayerFacingAngle(DI[id][duel_id][2], 208.3130);
		}
		if(DI[id][duel_map] == 2) {
			SetPlayerPosAC(DI[id][duel_id][2],2208.4490,-6379.4673,10.6283,DI[id][duel_vw],0);
			SetPlayerInterior(DI[id][duel_id][2], 0);
			SetPlayerFacingAngle(DI[id][duel_id][2], 232.5100);
		}
		TogglePlayerControllable(DI[id][duel_id][2], 1);
		SetCameraBehindPlayer(DI[id][duel_id][2]);
		if(DI[id][duel_gun_2]) {
			GivePlayerWeapon(DI[id][duel_id][2], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		}
		FreezePlayerForTime(DI[id][duel_id][2],2);
		GivePlayerWeapon(DI[id][duel_id][2], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][2], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][2], DI[id][duel_armour]);
		DI[id][duel_leave][2] = 0;
	}
	else DI[id][duel_leave][2] = 1;
	
	if(DI[id][duel_id][3] != INVALID_PLAYER_ID)
	{
		if(DI[id][duel_map] == 0) {
			SetPlayerPosAC(DI[id][duel_id][3],1513.5844,146.3026,1180.7960,DI[id][duel_vw],5);
			SetPlayerInterior(DI[id][duel_id][3], 5);
			SetPlayerFacingAngle(DI[id][duel_id][3], 155.1392);
		}
		if(DI[id][duel_map] == 1) {
			SetPlayerPosAC(DI[id][duel_id][3],1150.2390,-144.7599,1227.0383,DI[id][duel_vw],5);
			SetPlayerInterior(DI[id][duel_id][3], 5);
			SetPlayerFacingAngle(DI[id][duel_id][3], 183.5594);
		}
		if(DI[id][duel_map] == 2) {
			SetPlayerPosAC(DI[id][duel_id][3],2195.0557,-6376.7354,10.1869,DI[id][duel_vw],0);
			SetPlayerInterior(DI[id][duel_id][3], 5);
			SetPlayerFacingAngle(DI[id][duel_id][3], 179.5562);
		}
		TogglePlayerControllable(DI[id][duel_id][3], 1);
		SetCameraBehindPlayer(DI[id][duel_id][3]);
		FreezePlayerForTime(DI[id][duel_id][3],2);
		if(DI[id][duel_gun_2]) {
			GivePlayerWeapon(DI[id][duel_id][3], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		}
		GivePlayerWeapon(DI[id][duel_id][3], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][3], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][3], DI[id][duel_armour]);
		DI[id][duel_leave][3] = 0;
	}
	else DI[id][duel_leave][3] = 1;
}
stock start_duel_3(id) {
	DI[id][duel_start] = true;
	if(QuestProgress[id][45] < 5 && AcceptQuest[id][45] != 0) QuestProgress[id][45] ++,save_quest(id,45);
	if(QuestProgress[id][45] == 5 && AcceptQuest[id][45] != 0) {
		D(id,DIALOG_NONE,DSM, "Выполнение квеста",""W"Вы закончили выполнение ежедневного квеста\n\t"NO"Квест можно завершить в (/quest)","Закрыть","");
	}
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID)
	{
		if(DI[id][duel_map] == 2) {
			SetPlayerPosAC(DI[id][duel_id][0],2299.0391,-6368.5542,8.8312,DI[id][duel_vw],0);
			SetPlayerVirtualWorld(DI[id][duel_id][0], 0);
			SetPlayerFacingAngle(DI[id][duel_id][0], 42.0484);
		}
		SetCameraBehindPlayer(DI[id][duel_id][0]);
		TogglePlayerControllable(DI[id][duel_id][0], 1);
		FreezePlayerForTime(DI[id][duel_id][0],2);
		if(DI[id][duel_gun_2]) GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][0], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][0], DI[id][duel_armour]);
		DI[id][duel_leave][0] = 0;
	}
	else DI[id][duel_leave][0] = 1;
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID)
	{
		if(DI[id][duel_map] == 2) {
			SetPlayerPosAC(DI[id][duel_id][1],2290.4541,-6379.2788,8.7433,DI[id][duel_vw],0);
			SetPlayerFacingAngle(DI[id][duel_id][1], 129.4692);
		}
		SetCameraBehindPlayer(DI[id][duel_id][1]);
		TogglePlayerControllable(DI[id][duel_id][1], 1);
		FreezePlayerForTime(DI[id][duel_id][1],2);
		if(DI[id][duel_gun_2]) GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][1], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][1], DI[id][duel_armour]);
		DI[id][duel_leave][1] = 0;
	}
	else DI[id][duel_leave][1] = 1;
	
	if(DI[id][duel_id][2] != INVALID_PLAYER_ID)
	{
		if(DI[id][duel_map] == 2) {
			SetPlayerPosAC(DI[id][duel_id][2],2299.2759,-6371.3105,8.8410,DI[id][duel_vw],0);
			SetPlayerInterior(DI[id][duel_id][2], 0);
			SetPlayerFacingAngle(DI[id][duel_id][2], 4.7614);
		}
		SetCameraBehindPlayer(DI[id][duel_id][2]);
		TogglePlayerControllable(DI[id][duel_id][2], 1);
		FreezePlayerForTime(DI[id][duel_id][2],2);
		if(DI[id][duel_gun_2]) GivePlayerWeapon(DI[id][duel_id][2], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		GivePlayerWeapon(DI[id][duel_id][2], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][2], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][2], DI[id][duel_armour]);
		DI[id][duel_leave][2] = 0;
	}
	else DI[id][duel_leave][2] = 1;
	if(DI[id][duel_id][3] != INVALID_PLAYER_ID)
	{
		if(DI[id][duel_map] == 2) {
			SetPlayerPosAC(DI[id][duel_id][3],2208.4490,-6379.4673,10.6283,DI[id][duel_vw],0);
			SetPlayerFacingAngle(DI[id][duel_id][3], 232.5100);
		}
		SetCameraBehindPlayer(DI[id][duel_id][3]);
		FreezePlayerForTime(DI[id][duel_id][3],2);
		TogglePlayerControllable(DI[id][duel_id][3], 1);
		if(DI[id][duel_gun_2]) GivePlayerWeapon(DI[id][duel_id][3], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		GivePlayerWeapon(DI[id][duel_id][3], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][3], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][3], DI[id][duel_armour]);
		DI[id][duel_leave][3] = 0;
	}
	else DI[id][duel_leave][3] = 1;
	
	if(DI[id][duel_id][4] != INVALID_PLAYER_ID)
	{
		if(DI[id][duel_map] == 2) {
			SetPlayerPosAC(DI[id][duel_id][4],2195.0557,-6376.7354,10.1869,DI[id][duel_vw],0);
			SetPlayerFacingAngle(DI[id][duel_id][4], 179.5562);
		}
		SetCameraBehindPlayer(DI[id][duel_id][4]);
		FreezePlayerForTime(DI[id][duel_id][4],2);
		TogglePlayerControllable(DI[id][duel_id][4], 1);
		if(DI[id][duel_gun_2]) GivePlayerWeapon(DI[id][duel_id][4], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		GivePlayerWeapon(DI[id][duel_id][4], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][4], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][4], DI[id][duel_armour]);
		DI[id][duel_leave][4] = 0;
	}
	else DI[id][duel_leave][4] = 1;
	
	if(DI[id][duel_id][5] != INVALID_PLAYER_ID)
	{
		if(DI[id][duel_map] == 2) {
			SetPlayerPosAC(DI[id][duel_id][5],2219.5864,-6330.9775,10.5540,DI[id][duel_vw],0);
			SetPlayerFacingAngle(DI[id][duel_id][5], 359.0979);
		}
		SetCameraBehindPlayer(DI[id][duel_id][5]);
		TogglePlayerControllable(DI[id][duel_id][5], 1);
		FreezePlayerForTime(DI[id][duel_id][5],2);
		if(DI[id][duel_gun_2]) GivePlayerWeapon(DI[id][duel_id][5], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		GivePlayerWeapon(DI[id][duel_id][5], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][5], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][5], DI[id][duel_armour]);
		DI[id][duel_leave][5] = 0;
	}
	else DI[id][duel_leave][5] = 1;
}
stock end_duel(playerid,type) {
	new id = TI[playerid][tDuel];
	switch(DI[TI[playerid][tDuel]][duel_type]) {
	case 0: {
			switch(type) {
			case 0: {
					if(DI[id][duel_id][0] == playerid) DI[id][duel_leave][0] = 1;
					if(DI[id][duel_id][1] == playerid) DI[id][duel_leave][1] = 1;
					if(DI[id][duel_leave][0] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_2]++;
						if(DI[id][duel_raund]) start_duel_1(id);
						else duel_end_1(playerid);
					}
					else if(DI[id][duel_leave][1] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_1]++;
						if(DI[id][duel_raund]) start_duel_1(id);
						else duel_end_1(playerid);
					}
				}
			case 1: {
					if(DI[id][duel_id][0] == playerid) {
						ResetPlayerWeapons(DI[id][duel_id][0]);
						if(PI[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
							A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pFracSkin]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
						DI[id][duel_point_2]++;
						duel_end_1(playerid);
					}
					if(DI[id][duel_id][1] == playerid) {
						ResetPlayerWeapons(DI[id][duel_id][1]);
						if(PI[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
							A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pFracSkin]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
						DI[id][duel_leave][1] = 1;
						DI[id][duel_id][1] = INVALID_PLAYER_ID;
						DI[id][duel_point_2]++;
						duel_end_1(playerid);
					}
				}
			}
		}
	case 1: {
			switch(type) {
			case 0: {
					if(DI[id][duel_id][0] == playerid) DI[id][duel_leave][0] = 1;
					if(DI[id][duel_id][1] == playerid) DI[id][duel_leave][1] = 1;
					if(DI[id][duel_id][2] == playerid) DI[id][duel_leave][2] = 1;
					if(DI[id][duel_id][3] == playerid) DI[id][duel_leave][3] = 1;
					if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_2]++;
						if(DI[id][duel_raund]) start_duel_2(id);
						else duel_end_2(playerid);
					}
					else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_1]++;
						if(DI[id][duel_raund]) start_duel_2(id);
						else duel_end_2(playerid);
					}
					else {
						SetPlayerPosAC(playerid, 1708.4227,1342.3707,2525.3727,DI[id][duel_vw],true);
						TogglePlayerControllable(playerid,0);
						SetPlayerInterior(playerid, 0);
						SetPlayerCameraPos(playerid, 1679.155151, 1341.519409, 2545.137939);
						SetPlayerCameraLookAt(playerid, 1679.162963, 1341.955078, 2540.156982);
						Streamer_Update(playerid);
					}
				}
			case 1: {
					if(DI[id][duel_id][0] == playerid) {
						ResetPlayerWeapons(DI[id][duel_id][0]);
						if(PI[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
							A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pFracSkin]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
						DI[id][duel_leave][0] = 1;
						DI[id][duel_id][0] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][1] == INVALID_PLAYER_ID) {
							DI[id][duel_point_2]++;
							duel_end_2(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
							else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
						}
					}
					if(DI[id][duel_id][1] == playerid) {
						ResetPlayerWeapons(DI[id][duel_id][1]);
						if(PI[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
							A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pFracSkin]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
						DI[id][duel_leave][1] = 1;
						DI[id][duel_id][1] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][0] == INVALID_PLAYER_ID) {
							DI[id][duel_point_2]++;
							duel_end_2(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
							else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
						}
					}
					if(DI[id][duel_id][2] == playerid) {
						ResetPlayerWeapons(DI[id][duel_id][2]);
						if(PI[DI[id][duel_id][2]][pMember] && start_work[DI[id][duel_id][2]]) {
							A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pFracSkin]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
						DI[id][duel_leave][2] = 1;
						DI[id][duel_id][2] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][3] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_2(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
							else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
						}
					}
					if(DI[id][duel_id][3] == playerid) {
						ResetPlayerWeapons(DI[id][duel_id][3]);

						if(PI[DI[id][duel_id][3]][pMember] && start_work[DI[id][duel_id][3]]) {
							A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][3]][pFracSkin]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][3]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
						DI[id][duel_leave][3] = 1;
						DI[id][duel_id][3] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][2] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_2(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
							else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
						}
					}
				}
			}
		}
	case 2: {
			switch(type) {
			case 0: {
					if(DI[id][duel_id][0] == playerid) DI[id][duel_leave][0] = 1;
					if(DI[id][duel_id][1] == playerid) DI[id][duel_leave][1] = 1;
					if(DI[id][duel_id][2] == playerid) DI[id][duel_leave][2] = 1;
					if(DI[id][duel_id][3] == playerid) DI[id][duel_leave][3] = 1;
					if(DI[id][duel_id][4] == playerid) DI[id][duel_leave][4] = 1;
					if(DI[id][duel_id][5] == playerid) DI[id][duel_leave][5] = 1;
					if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_2]++;
						if(DI[id][duel_raund]) start_duel_3(id);
						else duel_end_3(playerid);
					}
					else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_1]++;
						if(DI[id][duel_raund]) start_duel_3(id);
						else duel_end_3(playerid);
					}
					else {
						SetPlayerPosAC(playerid, 1708.4227,1342.3707,2525.3727,DI[id][duel_vw],true);
						TogglePlayerControllable(playerid,0);
						SetPlayerInterior(playerid, 0);
						SetPlayerCameraPos(playerid, 1679.155151, 1341.519409, 2545.137939);
						SetPlayerCameraLookAt(playerid, 1679.162963, 1341.955078, 2540.156982);
						Streamer_Update(playerid);
					}
				}
			case 1: {
					if(DI[id][duel_id][0] == playerid) {
						ResetPlayerWeapons(DI[id][duel_id][0]);
						if(PI[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
							A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pFracSkin]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
						DI[id][duel_leave][0] = 1;
						DI[id][duel_id][0] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][1] == INVALID_PLAYER_ID && DI[id][duel_id][2] == INVALID_PLAYER_ID) {
							DI[id][duel_point_2]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][1] == playerid) {
						ResetPlayerWeapons(DI[id][duel_id][1]);
						if(PI[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
							A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pFracSkin]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
						DI[id][duel_leave][1] = 1;
						DI[id][duel_id][1] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][0] == INVALID_PLAYER_ID && DI[id][duel_id][2] == INVALID_PLAYER_ID) {
							DI[id][duel_point_2]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][2] == playerid) {
						ResetPlayerWeapons(DI[id][duel_id][2]);
						if(PI[DI[id][duel_id][2]][pMember] && start_work[DI[id][duel_id][2]]) {
							A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pFracSkin]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
						DI[id][duel_leave][2] = 1;
						DI[id][duel_id][2] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][1] == INVALID_PLAYER_ID && DI[id][duel_id][2] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][3] == playerid) {
						ResetPlayerWeapons(DI[id][duel_id][3]);

						if(PI[DI[id][duel_id][3]][pMember] && start_work[DI[id][duel_id][3]]) {
							A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][3]][pFracSkin]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][3]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
						DI[id][duel_leave][3] = 1;
						DI[id][duel_id][3] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][4] == INVALID_PLAYER_ID && DI[id][duel_id][5] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][4] == playerid) {
						ResetPlayerWeapons(DI[id][duel_id][4]);

						if(PI[DI[id][duel_id][4]][pMember] && start_work[DI[id][duel_id][4]]) {
							A_SetPlayerSkin(DI[id][duel_id][4],PI[DI[id][duel_id][4]][pFracSkin]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][4],PI[DI[id][duel_id][4]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][4],GetPVarFloat(DI[id][duel_id][4],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_z"),0,0);
						DI[id][duel_leave][4] = 1;
						DI[id][duel_id][4] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][3] == INVALID_PLAYER_ID && DI[id][duel_id][5] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][5] == playerid) {
						ResetPlayerWeapons(DI[id][duel_id][5]);

						if(PI[DI[id][duel_id][5]][pMember] && start_work[DI[id][duel_id][5]]) {
							A_SetPlayerSkin(DI[id][duel_id][5],PI[DI[id][duel_id][5]][pFracSkin]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][5],PI[DI[id][duel_id][5]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][5],GetPVarFloat(DI[id][duel_id][5],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_z"),0,0);
						DI[id][duel_leave][5] = 1;
						DI[id][duel_id][5] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][3] == INVALID_PLAYER_ID && DI[id][duel_id][4] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
				}
			}
		}
	}
	return 1;
}
stock duel_end_1(playerid) {
	new id = TI[playerid][tDuel];
	if(DI[id][duel_point_1] > DI[id][duel_point_2]) {
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][0],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][0],"Вы победили в дуэли");
			ResetPlayerWeapons(DI[id][duel_id][0]);

			if(DI[id][duel_id][0]) add_gang_points(PI[DI[id][duel_id][0]][pMember],1);

			if(PI[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
				A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pFracSkin]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pSkin]);
			
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][0], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][0], 0);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			SendClientMessage(DI[id][duel_id][1], COLOR_GREY, "Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][1], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][1], 0);
			ResetPlayerWeapons(DI[id][duel_id][1]);
		}
		duel_delete(id,true);
	}
	else {
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][1],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][1],"Вы победили в дуэли");
			ResetPlayerWeapons(DI[id][duel_id][1]);

			if(DI[id][duel_id][1]) add_gang_points(PI[DI[id][duel_id][1]][pMember],1);

			if(PI[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
				A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pFracSkin]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][1], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][1], 0);
			ResetPlayerWeapons(DI[id][duel_id][1]);
		}
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			SendClientMessage(DI[id][duel_id][0], COLOR_GREY, "Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][0], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][0], 0);
			ResetPlayerWeapons(DI[id][duel_id][0]);
		}
		duel_delete(id,true);
	}
}
stock duel_end_2(playerid) {
	new id = TI[playerid][tDuel];
	if(DI[id][duel_point_1] > DI[id][duel_point_2]) {
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][0],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][0],"Вы победили в дуэли");
			ResetPlayerWeapons(DI[id][duel_id][0]);

			if(DI[id][duel_id][0]) add_gang_points(PI[DI[id][duel_id][0]][pMember],1);

			if(PI[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
				A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pFracSkin]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][0], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][0], 0);
			ResetPlayerWeapons(DI[id][duel_id][0]);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][1],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][1],"Вы победили в дуэли");
			ResetPlayerWeapons(DI[id][duel_id][1]);

			if(DI[id][duel_id][1]) add_gang_points(PI[DI[id][duel_id][1]][pMember],1);

			if(PI[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
				A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pFracSkin]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][1], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][1], 0);
			ResetPlayerWeapons(DI[id][duel_id][1]);
		}
		if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
			SendClientMessage(DI[id][duel_id][2], COLOR_GREY, "Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][2], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][2], 0);
			ResetPlayerWeapons(DI[id][duel_id][2]);
		}
		if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
			SendClientMessage(DI[id][duel_id][3], COLOR_GREY, "Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][3], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][3], 0);
			ResetPlayerWeapons(DI[id][duel_id][3]);
		}
		duel_delete(id,true);
	}
	else {
		if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][2],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][2],"Вы победили в дуэли");
			ResetPlayerWeapons(DI[id][duel_id][2]);

			if(DI[id][duel_id][2]) add_gang_points(PI[DI[id][duel_id][2]][pMember],1);

			if(PI[DI[id][duel_id][2]][pMember] && start_work[DI[id][duel_id][2]]) {
				A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pFracSkin]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][2], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][2], 0);
			ResetPlayerWeapons(DI[id][duel_id][2]);
		}
		if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][3],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][3],"Вы победили в дуэли");
			ResetPlayerWeapons(DI[id][duel_id][3]);

			if(DI[id][duel_id][3]) add_gang_points(PI[DI[id][duel_id][3]][pMember],1);

			if(PI[DI[id][duel_id][3]][pMember] && start_work[DI[id][duel_id][3]]) {
				A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][3]][pFracSkin]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][3]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][3], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][3], 0);
			ResetPlayerWeapons(DI[id][duel_id][3]);
		}
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			SendClientMessage(DI[id][duel_id][0], COLOR_GREY, "Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][0], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][0], 0);
			ResetPlayerWeapons(DI[id][duel_id][0]);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			SendClientMessage(DI[id][duel_id][1], COLOR_GREY, "Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][1], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][1], 0);
			ResetPlayerWeapons(DI[id][duel_id][1]);
		}
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid,0);
		duel_delete(id,true);
	}
}
stock duel_end_3(playerid) {
	new id = TI[playerid][tDuel];
	if(DI[id][duel_point_1] > DI[id][duel_point_2]) {
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][0],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][0],"Вы победили в дуэли");
			ResetPlayerWeapons(DI[id][duel_id][0]);

			if(DI[id][duel_id][0]) add_gang_points(PI[DI[id][duel_id][0]][pMember],1);

			if(PI[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
				A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pFracSkin]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][0], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][0], 0);
			ResetPlayerWeapons(DI[id][duel_id][0]);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][1],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][1],"Вы победили в дуэли");
			ResetPlayerWeapons(DI[id][duel_id][1]);

			if(DI[id][duel_id][1]) add_gang_points(PI[DI[id][duel_id][1]][pMember],1);

			if(PI[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
				A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pFracSkin]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][1], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][1], 0);
			ResetPlayerWeapons(DI[id][duel_id][1]);
		}
		if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][2],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][2],"Вы победили в дуэли");
			ResetPlayerWeapons(DI[id][duel_id][2]);

			if(DI[id][duel_id][2]) add_gang_points(PI[DI[id][duel_id][2]][pMember],1);

			if(PI[DI[id][duel_id][2]][pMember] && start_work[DI[id][duel_id][2]]) {
				A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pFracSkin]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][2], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][2], 0);
			ResetPlayerWeapons(DI[id][duel_id][2]);
		}
		if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
			SendClientMessage(DI[id][duel_id][3], COLOR_GREY, "Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][3], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][3], 0);
			ResetPlayerWeapons(DI[id][duel_id][3]);
		}
		if(DI[id][duel_id][4] != INVALID_PLAYER_ID) {
			SendClientMessage(DI[id][duel_id][4], COLOR_GREY, "Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][4],GetPVarFloat(DI[id][duel_id][4],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][4], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][4], 0);
			ResetPlayerWeapons(DI[id][duel_id][4]);
		}
		if(DI[id][duel_id][5] != INVALID_PLAYER_ID) {
			SendClientMessage(DI[id][duel_id][5], COLOR_GREY, "Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][5],GetPVarFloat(DI[id][duel_id][5],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][5], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][5], 0);
			ResetPlayerWeapons(DI[id][duel_id][5]);
		}
		duel_delete(id,true);
	}
	else {
		if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][3],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][3],"Вы победили в дуэли");
			ResetPlayerWeapons(DI[id][duel_id][3]);

			if(DI[id][duel_id][3]) add_gang_points(PI[DI[id][duel_id][3]][pMember],1);

			if(PI[DI[id][duel_id][3]][pMember] && start_work[DI[id][duel_id][3]]) {
				A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][2]][pFracSkin]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][3]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][3], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][3], 0);
		}
		if(DI[id][duel_id][4] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][4],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][4],"Вы победили в дуэли");
			ResetPlayerWeapons(DI[id][duel_id][4]);

			if(DI[id][duel_id][4]) add_gang_points(PI[DI[id][duel_id][4]][pMember],1);

			if(PI[DI[id][duel_id][4]][pMember] && start_work[DI[id][duel_id][4]]) {
				A_SetPlayerSkin(DI[id][duel_id][4],PI[DI[id][duel_id][4]][pFracSkin]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][4],PI[DI[id][duel_id][4]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][4],GetPVarFloat(DI[id][duel_id][4],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][4], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][4], 0);
		}
		if(DI[id][duel_id][5] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][5],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][5],"Вы победили в дуэли");
			ResetPlayerWeapons(DI[id][duel_id][5]);

			if(DI[id][duel_id][5]) add_gang_points(PI[DI[id][duel_id][5]][pMember],1);

			if(PI[DI[id][duel_id][5]][pMember] && start_work[DI[id][duel_id][5]]) {
				A_SetPlayerSkin(DI[id][duel_id][5],PI[DI[id][duel_id][5]][pFracSkin]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][5],PI[DI[id][duel_id][5]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][5],GetPVarFloat(DI[id][duel_id][5],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][5], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][5], 0);
		}
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			SendClientMessage(DI[id][duel_id][0], COLOR_GREY, "Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][0], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][0], 0);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			SendClientMessage(DI[id][duel_id][1], COLOR_GREY, "Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][1], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][1], 0);
		}
		if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
			SendClientMessage(DI[id][duel_id][2], COLOR_GREY, "Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
			SetPlayerInterior(DI[id][duel_id][2], 0);
			SetPlayerVirtualWorld(DI[id][duel_id][2], 0);
		}
		duel_delete(id,true);
	}
}
stock duel_message(playerid,id) {
	if(DI[id][duel_create] == false) {
		static const f_str[] = ""W"Наименование\t"W"Значение\n\
							"P"1."W" Тип\t%s\n\
							"P"2."W" Раунды\t%d\n\
							"P"3."W" Взнос\t%d$\n\
							"P"4."W" Оружие\t%s\n\
							"P"5."W" Доп. Оружие\t%s\n\
							"P"6."W" Карта\t%s\n\
							"P"8."W" Здоровье\t%d\n\
							"P"9."W" Броня\t%d\n\
							"P"10."W" Пароль лобби\t%s\n\
							"P"-"YELLOW" Создать комнату";
		new string[sizeof(f_str) + 100];
		new duel_types[3][7] = {"1 VS 1","2 VS 2","3 VS 3"};
		new duel_guns[5][13] = {"Desert Eagle","ShotGun","MP5","AK-47","M4"};
		new duel_guns_2[6][13] = {"Не выбрано","Desert Eagle","ShotGun","MP5","AK-47","M4"};
		new duel_maps[3][11] = {"Карта №1","Карта №2","Карта №3"};
		
		new password_duel[12];
		if(!DI[id][duel_password]) password_duel = "Отсутствует";
		else format(password_duel,sizeof(password_duel),"%d",DI[id][duel_password]);
		
		format(string,sizeof(string),f_str,duel_types[DI[id][duel_type]],DI[id][duel_raund],DI[id][duel_money],duel_guns[DI[id][duel_gun]],duel_guns_2[DI[id][duel_gun_2]],duel_maps[DI[id][duel_map]],DI[id][duel_health],DI[id][duel_armour],password_duel);
		D(playerid,D_DUEL_1,DSTH,""P"Дуэли | Создание лобби",string,"Выбрать","Отмена");
	}
	else {
		static const f_str[] = ""W"Наименование\t"W"Значение\n\
							"P"1."W" Тип\t%s\n\
							"P"2."W" Раунды\t%d\n\
							"P"3."W" Взнос\t%d$\n\
							"P"4."W" Оружие\t%s\n\
							"P"5."W" Доп. Оружие\t%s\n\
							"P"6."W" Карта\t%s\n\
							"P"8."W" Здоровье\t%d\n\
							"P"9."W" Броня\t%d\n\
							"P"10."W" Пароль лобби\t%s\n\
							"P"-"NO" Удалить комнату";
		new string[sizeof(f_str) + 100];
		new duel_types[3][7] = {"1 VS 1","2 VS 2","3 VS 3"};
		new duel_guns[5][13] = {"Desert Eagle","ShotGun","MP5","AK-47","M4"};
		new duel_guns_2[6][13] = {"Не выбрано","Desert Eagle","ShotGun","MP5","AK-47","M4"};
		new duel_maps[3][11] = {"Карта №1","Карта №2","Карта №3"};
		new password_duel[12];
		if(!DI[id][duel_password]) password_duel = "Отсутствует";
		else format(password_duel,sizeof(password_duel),"%d",DI[id][duel_password]);
		format(string,sizeof(string),f_str,duel_types[DI[id][duel_type]],DI[id][duel_raund],DI[id][duel_money],duel_guns[DI[id][duel_gun]],duel_guns_2[DI[id][duel_gun_2]],duel_maps[DI[id][duel_map]],DI[id][duel_health],DI[id][duel_armour],password_duel);
		D(playerid,D_DUEL_1,DSTH,""P"Дуэли | Создание лобби",string,"Выбрать","Отмена");
	}
}
stock CarPass(playerid,giveplayerid) {
	new vehicleid = GetPlayerVehicleID(playerid);
	new car = GetNearestCar(playerid);
	new classname[16];
	GetCarClassName(gTransport[GetVehicleModel(vehicleid)-400][trClass],classname);
	static const f_str[] = ""W"Параметр\t"W"Значение\n\
							Владелец:\t%s\n\
							Марка авто\t%s\n\
							Класс\t%s\n\
							Номерной знак:\t%s\n\
							Пробег:\t%.1f KM\n\
							Заряд аккумулятора:\t%.1f\n\
							Топливо\t%.1f/%dL\n\n";
	new string[sizeof(f_str) + 150];
	format(string,sizeof(string),f_str,player_name[playerid],vehicle_name[GetVehicleModel(vehicleid)-400],classname, NumberVehicle[playerid][car],
	VehicleInfo[vehicleid][vDrived],
	VehicleInfo[vehicleid][vAkum],
	VehicleInfo[vehicleid][vFuel], gTransport[GetVehicleModel(vehicleid)-400][trTank]);
	D(giveplayerid,DIALOG_NONE,DSTH,""P"Документы на т/с",string,"Закрыть","");
}

stock ReportDell(i) {
	PlayerReport[i] = -1;
	TextReport[i][0] = EOS;
	TextReportAdmin[i][0] = EOS;
	ReportSlot[i] = -1;
	DeletePVar(i, "report_ac");
}

stock InvUpdate(playerid, td, jdk)
{
	if(GetPVarInt(playerid,"inv"))
	{
		PlayerTextDrawSetPreviewModel(playerid, inventory_slot[playerid][td], ItemsInfo[jdk][ItemModel]);
		PlayerTextDrawSetPreviewRot(playerid, inventory_slot[playerid][td], ItemsInfo[jdk][POSTDx], ItemsInfo[jdk][POSTDy], ItemsInfo[jdk][POSTDz], ItemsInfo[jdk][POSTDc]);
		PlayerTextDrawHide(playerid, inventory_slot[playerid][td]);
		PlayerTextDrawShow(playerid, inventory_slot[playerid][td]);
	}
	return true;
}

stock HideInvent(playerid) {
	for(new i = 0; i < 54; i++) TextDrawHideForPlayer(playerid, inventory_TD[i]);
	for(new i = 0; i < 8; i++) PlayerTextDrawHide(playerid, inventory_PTD[playerid][i]);
	for(new i = 0; i < 46; i++) PlayerTextDrawHide(playerid, inventory_slot[playerid][i]);
	ClickInv[playerid] = -1;
	DeletePVar(playerid,"inv");
	CancelSelectTextDraw(playerid);
	
	if(GetPVarInt(playerid, "ppkz"))
	{
		for(new t = 0;t < 34;t++) {
			TextDrawShowForPlayer(playerid, Capture[t]);
		}
	}
	return true;
}
stock SaveInventory(playerid)
{
	new saveinv[800], saveinv_kolvo[800];
	for(new i = 0; i < 46; i++)
	{
		format(saveinv, 800, "%s%d,", saveinv, PI[playerid][pInventory][i]);
		format(saveinv_kolvo, 800, "%s%d,", saveinv_kolvo, PI[playerid][pInventoryKolvo][i]);
	}
	MYSQL_GLOBAL[0] = EOS;

	mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),"UPDATE `accounts` SET `Item` = '%s' WHERE `Name` = '%s'", saveinv, player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "" ) ;

	MYSQL_GLOBAL[0] = EOS;
	mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),"UPDATE `accounts` SET `ItemKolvo` = '%s' WHERE `Name` = '%s'", saveinv_kolvo, player_name[playerid]);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "" );
	return true;
}

stock UseItem(playerid, itemid, item) {
	switch(itemid) {
	case 11738:
		{
			pc_cmd_healme(playerid);
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			ClickInv[playerid] = -1;
			return true;
		}
	case 1575:
		{
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			PI[playerid][pInventory][item] = 0;
			PI[playerid][pInventoryKolvo][item] = 0;
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			ClickInv[playerid] = -1;
			SaveInventory(playerid);
			return true;
		}
	case 19163:
		{
			pc_cmd_mask(playerid);
			ClickInv[playerid] = -1;
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			return true;
		}
	case 19627:
		{
			pc_cmd_remp(playerid);
			ClickInv[playerid] = -1;
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			HideInvent(playerid);
			return true;
		}
	case 11746:
		{
			D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Отмычка используется при ограблениях и взломах","Закрыть","");
			ClickInv[playerid] = -1;
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			return true;
		}
	case 18644:
		{
			D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Гвозди: Данный предмет можно продать","Закрыть","");
			ClickInv[playerid] = -1;
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			return true;
		}
	case 3117:
		{
			D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Метал: Данный предмет можно продать","Закрыть","");
			ClickInv[playerid] = -1;
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			return true;
		}
	case 19918:
		{
			D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Метал. ящик: Данный предмет можно продать","Закрыть","");
			ClickInv[playerid] = -1;
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			return true;
		}
	case 2040:
		{
			D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Ящик с патронами: Данный предмет можно продать","Закрыть","");
			ClickInv[playerid] = -1;
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			return true;
		}
	case 335:
		{
			D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Ножик: Данный предмет можно продать","Закрыть","");
			ClickInv[playerid] = -1;
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			return true;
		}
	case 2036:
		{
			D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Военная винтовка: Данный предмет можно продать","Закрыть","");
			ClickInv[playerid] = -1;
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			return true;
		}
	case 19590:
		{
			D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Меч: Данный предмет можно продать","Закрыть","");
			ClickInv[playerid] = -1;
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			return true;
		}
	case 1636:
		{
			D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Боеголовка: Данный предмет можно продать","Закрыть","");
			ClickInv[playerid] = -1;
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			return true;
		}
	case 1210:
		{
			D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Кейс: Данный предмет можно продать","Закрыть","");
			ClickInv[playerid] = -1;
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			return true;
		}
  	case 1944:
		{
			D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Старинная монета: Данный предмет можно продать","Закрыть","");
			ClickInv[playerid] = -1;
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			return true;
		}
	case 1..286, 288..311: {
			if(PI[playerid][pSkin] != GetPlayerSkin(playerid))
			{
				D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Закончите рабочий день на текущей работе","Закрыть","");
				PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
				InvUpdate(playerid, item, PI[playerid][pInventory][item]);
				ClickInv[playerid] = -1;
				return true;
			}
			if(!PlayerToPoint(20.0,playerid,207.2038,-5.4559,1001.2109)) {
				D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Переодеться можно только в магазинах одежды","Закрыть","");
				PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
				InvUpdate(playerid, item, PI[playerid][pInventory][item]);
				ClickInv[playerid] = -1;
				return true;
			}
			if(GetInvSet(playerid) >= 40) {
				D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"В инвентаре недостаточно места","Закрыть","");
				PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
				InvUpdate(playerid, item, PI[playerid][pInventory][item]);
				ClickInv[playerid] = -1;
				return true;
			}
			AddItem(playerid, skin_undress[PI[playerid][pSkin]][0], 1);
			PI[playerid][pSkin] = ItemsInfo[PI[playerid][pInventory][item]][ItemModel];
			A_SetPlayerSkin(playerid, ItemsInfo[PI[playerid][pInventory][item]][ItemModel]);
			UpdatePlayerData(playerid, "Skin", PI[playerid][pSkin]);
			RefreshInv(playerid, item);
			SaveInventory(playerid);
			return true;
		}
	case 1242: SetArmour(playerid, 100);
	case 287:
		{
			A_SetPlayerSkin(playerid,287);
			SetPlayerColor(playerid, COLOR_GREEN);
		}
	case 19843: {
			PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][item], 370810879);
			PI[playerid][pInventory][item] = 0;
			PI[playerid][pInventoryKolvo][item] = 0;
			InvUpdate(playerid, item, PI[playerid][pInventory][item]);
			ClickInv[playerid] = -1;
			SaveInventory(playerid);
			return true;
		}
	case 400..611: return D(playerid,USE_CAR_GARAGE,DSM, ""P"Инвентарь",""W"Вы действительно хотите использовать купон на машину?",">>>","x"), SetPVarInt(playerid, "UseCarGarage", itemid),SetPVarInt(playerid, "UseCarGarageItem", item);
	case 1650: return ClickInv[playerid] = -1, D(playerid,DIALOG_NONE,DSM, ""P"Инвентарь",""W"Используйте в т/с команду /fillcar","Закрыть","");
	}
	RefreshInv(playerid, item);
	return true;
}

stock RefreshInv(playerid, slot)
{
	if(PI[playerid][pInventoryKolvo][slot] > 0)
	{
		PI[playerid][pInventoryKolvo][slot] -= 1;
		if(PI[playerid][pInventoryKolvo][slot] == 0)
		{
			PI[playerid][pInventoryKolvo][slot] = 0;
			PI[playerid][pInventory][slot] = 0;
		}
		SaveInventory(playerid);
	}
	ClickInv[playerid] = -1;
	PlayerTextDrawBackgroundColor(playerid, inventory_slot[playerid][slot], 370810879);
	InvUpdate(playerid, slot, PI[playerid][pInventory][slot]);
	return true;
}

stock GetInvSet(playerid)
{
	new num;
	for(new i = 0; i < 46; i++)
	{
		if(20 <= i <= 25) continue;
		if(PI[playerid][pInventory][i] != 0) num++;
	}
	return num;
}

stock AddItem(playerid, itemid, amount) // выдал предмет в инвентарь
{
	if(GetInvSet(playerid) >= 40) return SendClientMessage(playerid, COLOR_GREY, "В инвентаре недостаточно места");
	for(new i = 0; i < 46; i++)
	{
		if(20 <= i <= 25) continue;
		if(PI[playerid][pInventory][i] == itemid) continue;
		if(PI[playerid][pInventory][i] != 0) continue;
		PI[playerid][pInventory][i] = itemid;
		PI[playerid][pInventoryKolvo][i] = amount;
		new str[350];
		format(str,sizeof(str),"[Инвентарь]"W" Вам был добавлен(а) '%s' (%d шт). Используйте 'Y' или /inv",ItemsInfo[itemid][ItemName],PI[playerid][pInventoryKolvo][i]);
		SendClientMessage(playerid,0xfF5C659ff, str);
		SaveInventory(playerid);
		InvUpdate(playerid, i, PI[playerid][pInventory][i]);
		
		new string[450];
		mysql_format(connects, string,sizeof(string),"INSERT INTO `invent_log` (`Name`,`item`,`amount`) VALUES ('%s','%s','%d')",player_name[playerid], ItemsInfo[itemid][ItemName],amount);
		mysql_tquery(connects, string, "","");
		break;
	}
	return true;
}

stock GetInvent(playerid, slot)
{
	new colvo = 0;
	for(new i = 0; i < 46; i++)
	{
		if(PI[playerid][pInventory][i] != slot) continue;
		colvo += PI[playerid][pInventoryKolvo][i];
	}
	return colvo;
}

stock DeleteItem(playerid, itemid, amount)
{
	new item_amount = amount;
	for(new i = 0; i < 46; i++)
	{
		if(PI[playerid][pInventory][i] != itemid) continue;
		if(PI[playerid][pInventory][i] == itemid && item_amount > 0)
		{
			if(PI[playerid][pInventoryKolvo][i] >= amount)
			{
				new new_amount = PI[playerid][pInventoryKolvo][i];
				PI[playerid][pInventoryKolvo][i] -= item_amount;
				item_amount -= new_amount;
				if(PI[playerid][pInventoryKolvo][i] <= 0)
				{
					PI[playerid][pInventoryKolvo][i] = 0;
					PI[playerid][pInventory][i] = 0;
				}
			}
			else
			{
				item_amount -= PI[playerid][pInventoryKolvo][i];
				PI[playerid][pInventoryKolvo][i] = 0;
				PI[playerid][pInventory][i] = 0;
			}
		}
	}
	SaveInventory(playerid);
	return 1;
}

stock HideAuto(playerid) {

	A_DestroyVehicle(car_shop[playerid]);
	car_shop[playerid] = INVALID_VEHICLE_ID;
	
	if(GetPVarInt(playerid,"get_class") == 1) SetPlayerVirtualWorld(playerid, 59);
	if(GetPVarInt(playerid,"get_class") == 2) SetPlayerVirtualWorld(playerid, 42);
	if(GetPVarInt(playerid,"get_class") == 3) SetPlayerVirtualWorld(playerid, 42);
	if(GetPVarInt(playerid,"get_class") == 4) SetPlayerVirtualWorld(playerid, 43);
	
	DeletePVar(playerid,"get_class");
	SetCameraBehindPlayer(playerid);
	
	for(new i = 0; i < 54; i++) TextDrawHideForPlayer(playerid, autoshop_TD[i]);
	PlayerTextDrawHide(playerid, auto_PTD[playerid][0]);
	PlayerTextDrawHide(playerid, auto_PTD[playerid][1]);
	CancelSelectTextDraw(playerid);
}

stock ShowMedcard(playerid,actplayerid) {
	new string[512];
	strcat(string, "\n\t"P"ИНФОРМАЦИЯ:\n\n");
	format(string, sizeof(string), "%s\t"ORANGE"Имя: "W"%s\n\t"ORANGE"Лет в штате: "W"%d\n\t"ORANGE"Пол: "W"%s\n\n",
	string,player_name[playerid],PI[playerid][pLevel],(PI[playerid][pSex] == 1) ? ("Мужской") : ("Женский"));
	format(string, sizeof(string), "%s\t"P"БОЛЕЗНИ:\n\n\t"ORANGE"Наркозависимость: "W"%d\n\t"ORANGE"Грипп: "W"%s\n\t"ORANGE"Анорексия: "W"%s\n\n", string,PI[playerid][pAddiction],(PI[playerid][pDisease][0] == 1) ? ("Болен") : ("Здоров"),(PI[playerid][pDisease][1] == 1) ? ("Болен") : ("Здоров"));
	D(actplayerid,DIALOG_NONE,DSM,"        		{FAD086}МЕДИЦИНСКАЯ КАРТА        		",string,"Закрыть","");
	return 1;
}
stock save_acsjob(playerid) {
	new query[120], str[120];
	format(str,sizeof(str),"%i,%i,%i,%i,%i,%i,%i,%i,%i",
	PI[playerid][pAcsJob][0],PI[playerid][pAcsJob][1],PI[playerid][pAcsJob][2],PI[playerid][pAcsJob][3],
	PI[playerid][pAcsJob][4],PI[playerid][pAcsJob][5], PI[playerid][pAcsJob][6], PI[playerid][pAcsJob][7],
	PI[playerid][pAcsJob][8]); 
	format(query, sizeof(query), "UPDATE `accounts` SET `acs_job` = '%s' WHERE `Name` = '%s'", str, player_name[playerid]);
	mysql_tquery(connects, query, "", "");
}
stock save_jskill(playerid) {
	new query[120], str[120];
	format(str,sizeof(str),"%i,%i,%i,%i,%i,%i,%i,%i,%i",
	PI[playerid][pExpJob][0], PI[playerid][pExpJob][1],PI[playerid][pExpJob][2],PI[playerid][pExpJob][3],
	PI[playerid][pExpJob][4],PI[playerid][pExpJob][5],PI[playerid][pExpJob][6],PI[playerid][pExpJob][7],
	PI[playerid][pExpJob][8]);
	format(query, sizeof(query), "UPDATE `accounts` SET `job_skill` = '%s' WHERE `Name` = '%s'", str, player_name[playerid]);
	mysql_tquery(connects, query, "", "");
}
stock RemovePlayerWeapon(playerid, weaponid)
{
	if(!IsPlayerConnected(playerid) || weaponid < 0 || weaponid > 50) return;
	new saveweapon[13], saveammo[13];
	for(new slot = 0; slot < 13; slot++) GetPlayerWeaponData(playerid, slot, saveweapon[slot], saveammo[slot]);
	ResetPlayerWeapons(playerid);
	for(new slot; slot < 13; slot++)
	{
		if(saveweapon[slot] == weaponid && saveammo[slot] <= 5) continue;
		GivePlayerWeapon(playerid, saveweapon[slot], saveammo[slot]);
	}
	GivePlayerWeapon(playerid, 0, 1);
}

stock isAdminStatus(const name[]) {
	if (GetString(name, "Tommy_Wilson") || GetString(name, "James_Marna")) return true;
	return false;
}

stock SendAdminActionMessage(color, const text[]) {
	foreach(new i: Player) {
		if(!PI[i][pSettings][8]) continue;
		SendClientMessage(i, color, text);
	}
}

CB:OnGameModeUpdate(playerid) {
	GlobalSecondTimer = SetTimer("OnGameModeUpdate", 1000, false);
	gettime(tmphour, tmpminute, tmpsecond);
	if(tmpminute == 50 && tmpsecond == 0)
	{
		for(new i = 0; i < 24; i++) capture_kd[i] = 0;
	}
	
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		ghour = tmphour;
		format(CHAT_GLOBAL, sizeof (CHAT_GLOBAL), "Текущее время —"W" %d:00", tmphour);
		SendClientMessageToAll(COLOR_BLUE, CHAT_GLOBAL);
		PayDay(playerid);
	}
	if(tmpminute == 13 && tmpsecond == 0 || tmpminute == 45 && tmpsecond == 0) SendClientMessageToAll(COLOR_YELLOW, "Список доступных вакансий: {F18730}/vacancy");
	
	second_timer();
	if (++GlobalTimer_1MIN >= (1 * 60)) {
		GlobalTimer_1MIN = 0;
		minute_timer();
	}
	if (++GlobalTimer_3SEC >= 3) {
		GlobalTimer_3SEC = 0;
		other_timer();
	}
	ghetto_war();
	race_game();
	game_dm();
	game_container();
	seat_player();
}

stock SetVehicleNumberText(vehicleid, const text[]) {
	new modelid = GetVehicleModel(vehicleid), Float:offsetPos[3];

	GetVehicleModelInfo(modelid,
	VEHICLE_MODEL_INFO_SIZE, offsetPos[2], offsetPos[0], offsetPos[1]
	);
	offsetPos[0] *= (-0.45);
	
	new str[350];
	switch (modelid) {
	case 461, 522: offsetPos[1] = 0.40;
	case 462: offsetPos[1] = 0.00;
		
	case 586: offsetPos[1] = 0.17;
	case 508: offsetPos[0] = 0, offsetPos[2] = 0, offsetPos[1] = 0;
	case 463, 468, 521, 581: offsetPos[1] = 0.30;
	case 510, 509, 481: return;
	default: offsetPos[1] = 0.00;
	}
	
	if(modelid == 508) format(str, sizeof(str), "%s", text);
	else format(str, sizeof(str), "%s", text);
	
	if (!VehicleInfo[vehicleid][vNumberAttached]) {
		DestroyDynamic3DTextLabelEx(VehicleInfo[vehicleid][vNumberTextID]);
		VehicleInfo[vehicleid][vNumberTextID] = CreateDynamic3DTextLabel(
		str, 0xA3A3A3FF, 0.0, offsetPos[0], offsetPos[1],
		7.5, INVALID_PLAYER_ID, vehicleid
		);
		VehicleInfo[vehicleid][vNumberAttached] = 1;
	}
	else UpdateDynamic3DTextLabelText(VehicleInfo[vehicleid][vNumberTextID], 0xA3A3A3FF, str);

	str[0] = EOS;
}

stock DestroyDynamic3DTextLabelEx(&Text3D: text)
{
	DestroyDynamic3DTextLabel(text);
	text = Text3D:    INVALID_3DTEXT_ID;
}

SetPlayerPosObjectOffset(objectid, playerid, Float:offset_x, Float:offset_y, Float:offset_z)
{
	new Float:object_px,
Float:object_py,
Float:object_pz,
Float:object_rx,
Float:object_ry,
Float:object_rz;

	GetDynamicObjectPos(objectid, object_px, object_py, object_pz);
	GetDynamicObjectRot(objectid, object_rx, object_ry, object_rz);

	new Float:cos_x = floatcos(object_rx, degrees),
Float:cos_y = floatcos(object_ry, degrees),
Float:cos_z = floatcos(object_rz, degrees),
Float:sin_x = floatsin(object_rx, degrees),
Float:sin_y = floatsin(object_ry, degrees),
Float:sin_z = floatsin(object_rz, degrees);

	new Float:x, Float:y, Float:z;

	x = object_px + offset_x * cos_y * cos_z - offset_x * sin_x * sin_y * sin_z - offset_y * cos_x * sin_z + offset_z * sin_y * cos_z + offset_z * sin_x * cos_y * sin_z;
	y = object_py + offset_x * cos_y * sin_z + offset_x * sin_x * sin_y * cos_z + offset_y * cos_x * cos_z + offset_z * sin_y * sin_z - offset_z * sin_x * cos_y * cos_z;
	z = object_pz - offset_x * cos_x * sin_y + offset_y * sin_x + offset_z * cos_x * cos_y;

	SetPlayerPos(playerid, x, y, z);
	return 1;
}
CameraRadiusSetPos(playerid, Float:x, Float:y, Float:z, Float:degree = 0.0, Float:height = 3.0, Float:radius = 8.0)
{
	new Float:deltaToX = x + radius * floatsin(-degree, degrees);
	new Float:deltaToY = y + radius * floatcos(-degree, degrees);
	new Float:deltaToZ = z + height;

	SetPlayerCameraPos(playerid, deltaToX, deltaToY, deltaToZ);
	SetPlayerCameraLookAt(playerid, x, y, z); return 1;
}
stock strreplace(string[], const search[], const replacement[], bool:ignorecase = false, pos = 0, limit = -1, maxlength = sizeof(string)) {
	if (limit == 0)
	return 0;
	new
	sublen = strlen(search),
	replen = strlen(replacement),
bool:packed = ispacked(string),
	maxlen = maxlength,
	len = strlen(string),
	count = 0
	;
	if (packed)
	maxlen *= 4;
	if (!sublen)
	return 0;
	while (-1 != (pos = strfind(string, search, ignorecase, pos))) {
		strdel(string, pos, pos + sublen);

		len -= sublen;

		if (replen && len + replen < maxlen) {
			strins(string, replacement, pos, maxlength);
			pos += replen, len += replen;
		}
		if (limit != (-1) && (++count) >= limit)
		break;
	}
	return count;
}

#include "../sourse/casino/black_jack.inc"

CMD:cheats(playerid) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	dialog_anticheat(playerid);
	return true;
}

stock dialog_anticheat(playerid)
{
	new string[2500];
	string = ""P"Код\t"P"Название\t"P"Состояние\n";
	new str[3][50] = {""NO"Отключен"W"", ""GREEN"Кик"W"", ""BLUE"Предупреждение"W""};
	for (new i; i < sizeof (AntiCheat); i++)
	{
		format(string, sizeof(string), "%s%d\t%s\t%s\n", string, AntiCheat[i][acID], AntiCheat[i][acName], str[AntiCheat[i][acValue]]);
	}
	return D(playerid, D_ANTICHEAT, DSTH, ""P"Античит", string, "Выбрать", "Закрыть");
}

CB: DelGun(playerid) {
	ResetPlayerWeapons(playerid);
	return true;
}

CB:check_ip_ban(playerid)
{
	new rows, reason[35];
	cache_get_row_count(rows);
	if (rows)
	{
		cache_get_value_name(0, "reason", reason, 30);
		if (strlen(reason) == 0)
		{
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Ваш IP адрес заблокирован. Причина: Неизвестно", reason);
			SendClientMessage(playerid, COLOR_GREY, STRING_GLOBAL);
			KickEx(playerid);
		}
		else
		{
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Ваш IP адрес заблокирован. Причина: %s", reason);
			SendClientMessage(playerid, COLOR_GREY, STRING_GLOBAL);
		}
		KickEx(playerid);
	}
	else
	{
		MYSQL_GLOBAL[0] = EOS;
		mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL), "SELECT * FROM `"TABLE_BAN"` WHERE `Name` = '%e' LIMIT 1", player_name[playerid]);
		mysql_tquery(connects, MYSQL_GLOBAL, "check_banned", "i", playerid);
	}
	return true;
}

CB:offwarn(playerid, const Nick[], const Reason[])
{
	new rows;
	cache_get_row_count(rows);
	if (!rows) return SendClientMessage(playerid, COLOR_GREY, "Аккаунт не найден");
	new query[300];
	new count_warns;
	cache_get_value_int(0, "pWarns", count_warns);
	if ((count_warns + 1) < 3)
	{
		format(query, sizeof(query), "UPDATE `accounts` SET `pWarns` = '%i', `warntime` = '%i', `pLeader` = '0', `pMember` = '0', `pRank` = '0' WHERE `Name` = '%s' LIMIT 1", (count_warns + 1), unix + 7 * 86400, Nick);
		mysql_pquery(connects, query);

		WriteLog(LOG_WARN, player_name[playerid], Nick, Reason);
		gAdmin[playerid][ADMIN_WARN] ++;

		new string[128];
		format(string, sizeof(string), "Администратор %s выдал предупреждение игроку %s [%i/3]. Причина: %s", player_name[playerid], Nick, (count_warns + 1), Reason);
		SendAdminActionMessage(COLOR_LIGHTRED, string);
	}
	else
	{
		if (IsBannedName(Nick)) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже заблокирован");
		new string[144];
		BanName(Nick, player_name[playerid], (30 * 86400), Reason);
		format(string, sizeof(string), "Администратор %s забанил (3 предупреждения) %s на %d дней в оффлайне. Причина: %s", player_name[playerid], Nick, 30, Reason);
		SendAdminActionMessage(COLOR_LIGHTRED, string);
	}
	WriteLog(LOG_WARN, player_name[playerid], Nick, "offline выдал варн");
	off_add_jobinfo(Nick, "Недееспособен");
	return 1;
}

stock wininfo(playerid, id) {
	switch(id) {
	case 1: {
			D(playerid, DIALOG_NONE, DSM, ""P"Список призов", "{F9C7A1}Список предметов, которые могут выпасть в контейнере:\n\n\
	"W"- Аксессуар 'Черные очки'\n- Аксессуар 'Белая кепка с узорами'\n- Аксессуар 'Меч'\n- Аксессуар 'Белая маска'\n\
	- Аксессуар 'Золотые часы'\n- Премимум-аккаунт на 1 час\n- Одежда (15, 50, 95)", "Закрыть", "");
		}
	case 2: {
			D(playerid, DIALOG_NONE, DSM, ""P"Список призов", "{F9C7A1}Список предметов, которые могут выпасть в контейнере:\n\n\
	"W"- Аксессуар 'Черные очки'\n- Аксессуар 'Черная панама'\n- Аксессуар 'Меч'\n- Аксессуар 'Голубо-белый шлем'\n- Аксессуар 'Белая маска'\n\
	- Аксессуар 'Огнетушитель'\n- Премиум-аккаунт на 2 часа\n- Деньги 15000$\n- Одежда (155, 185, 217)\n- GOLD кейсы", "Закрыть", "");
		}
	case 3: {
			D(playerid, DIALOG_NONE, DSM, ""P"Список призов", "{F9C7A1}Список предметов, которые могут выпасть в контейнере:\n\n\
	"W"- Аксессуар 'Голубо-белый шлем'\n- Аксессуар 'Маска демона'\n- Аксессуар 'Попугай на плечо'\n- Деньги (200000$)\n- Exp points (3 шт)\n\
	- Премимум-аккаунт на 3 часа\n- Одежда (223, 241, 208)\n- GOLD кейсы", "Закрыть", "");
		}
	case 4: {
			D(playerid, DIALOG_NONE, DSM, ""P"Список призов", "{F9C7A1}Список предметов, которые могут выпасть в контейнере:\n\n\
	"W"- Аксессуар 'Чемодан'\n- Аксессуар 'Самолетик'\n- Аксессуар 'Белая гитара'\n\
	- Деньги (200000$)\n- Exp Points (3 шт)\n- Премимум-аккаунт на 4 часа\n- Donate Point's (1-3)\n- Одежда (289, 264)\n- GOLD кейсы", "Закрыть", "");
		}
	case 5:{
        D(playerid, DIALOG_NONE, DSM, ""P"Список призов", "{F9C7A1}Список предметов, которые могут выпасть в контейнере:\n\n\
	"W"- Аксессуар 'Доллар на спину'\n\
	- Аксессуар 'Миниган на спину'\n\
	- Деньги (150.000$)\n\
	- Деньги (400.000$)\n\
	- Деньги (700.000$)\n\
	- Премиум-аккаунт на 48 часов\n\
	- Одежда (294, 189)\n\
	- Рубли (50, 150)\n\
	- Аксессуар 'Дреды на голову'\n\
	- Аксессуар 'Ангельское кольцо'", "Закрыть", "");
		}
	}
	return true;
}

CMD:contstart(playerid) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	SendClientMessageToAll(-1, ""ORANGE"[Контейнеры]"W" Через 10 минут в порту ЛС пройдет аукцион за контейнеры (/gps > Развлечения > контейнеры)");
	open_cont_time = 600;
	open_cont = 1;
	return true;
}
CMD:garagestart(playerid){
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	SendClientMessageToAll(-1, ""ORANGE"[Аукцион гаражей]"W" Через 10 минут можно будет приобрести заброшенные гаражи (/gps > Развлечения > Аукцион гаражей)");
	open_zg_time = 600;
	open_zg = 1;
	return 1;
}
CMD:priz(playerid) { // список призов MySQL
	MYSQL_GLOBAL[0] = EOS;
	mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),"SELECT * FROM `priz` WHERE `accid` = '%d' LIMIT 30",PI[playerid][pID]);
	mysql_tquery(connects, MYSQL_GLOBAL, "GetPrizes", "d", playerid);
	return true;
}

CB: GetMarket(playerid) {
	new rows;
	cache_get_row_count(rows);
	STRING_GLOBAL[0] = EOS;
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "На продаже нет доступных товаров");
	format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Название товара\t"W"Количество\t"W"Стоимость\n");
	if(rows) {
		for(new i; i < rows; i ++)
		{
			cache_get_value_name_int(i,"id", market_id[playerid][i]);
			cache_get_value_name_int(i,"item", market_item[playerid][i]);
			cache_get_value_name_int(i,"ammout", market_ammout[playerid][i]);
			cache_get_value_name_int(i,"cash", market_cash[playerid][i]);
			format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%s%s\t%d\t"GREEN"%d$"W"\n",STRING_GLOBAL,ItemsInfo[market_item[playerid][i]][ItemName], market_ammout[playerid][i],market_cash[playerid][i]);
		}
	}
	if(PI[playerid][pPalatka] == Market[GetPVarInt(playerid,"p_id")][m_id]) D(playerid, D_MARKET_PLAYER_3, DSTH, ""P"Мои товары", STRING_GLOBAL, "Забрать","Отмена");
	else D(playerid, D_MARKET_PLAYER_3, DSTH, ""P"Товары на продаже", STRING_GLOBAL, "Купить","Отмена");
	return true;
}

CB: GetPrizes(playerid) {
	new rows, type, prize,cash;
	cache_get_row_count(rows);
	STRING_GLOBAL[0] = EOS;
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет призов");
	format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"Название\tПродажа на рынке\n");
	if(rows)
	{
		for(new i; i < rows; i ++) {
			cache_get_value_name_int(i,"id", CountInfo[playerid][cont_id][i]);
			cache_get_value_name_int(i,"type", type);
			cache_get_value_name_int(i,"prize", prize);
			cache_get_value_name_int(i,"cash",  cash);
			
			CountInfo[playerid][cont_model][i] = prize;
			CountInfo[playerid][cont_cash][i] = cash;
			CountInfo[playerid][cont_type][i] = type;
			
			switch(type) {
			case 1: format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%sАксессуар '%s'\t%d$\n",STRING_GLOBAL,ItemsInfo[prize][ItemName],cash);
			case 2: format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%sПремимум-аккаунт на %d час(ов)\t%d$\n",STRING_GLOBAL,prize,cash);
			case 3: format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%sОдежда № %d\t%d$\n",STRING_GLOBAL,prize,cash);
			case 4: format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%sДеньги (100000$)\t%d$\n",STRING_GLOBAL,cash);
			case 5: format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%sGOLD кейс\t%d$\n",STRING_GLOBAL,cash);
			case 6: format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%sExp Points (3 шт)\t%d$\n",STRING_GLOBAL,cash);
			case 7: format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%sDonate Points (2 шт)\t%d$\n",STRING_GLOBAL,cash);
			case 8: format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%sДеньги (200000$)\t%d$\n",STRING_GLOBAL,cash);
			}
		}
	}
	D(playerid, D_CONTAINER_2, DSTH, ""P"Призы с контейнера", STRING_GLOBAL, "Выбрать","Отмена");
	return true;
}

stock container_win(playerid, id) {
	new query[150];
	if(gContainer[id][cClass] == 1) {
		new rand = Random(0, 8);
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Поздравляем, вы выиграли — {F9C7A1} %s"W"\n\nПредмет добавлен в список всех призов "G"/priz", PrizeInfo[rand][cont_name]);
		D(playerid, DIALOG_NONE, DSM, ""P"Список призов",STRING_GLOBAL, "Закрыть", "");
		mysql_format(connects, query, sizeof(query),"INSERT INTO `priz`(`accid`, `prize`, `type`, `cash`) VALUES ('%i','%i','%i','%i')",PI[playerid][pID],PrizeInfo[rand][cont_model],PrizeInfo[rand][cont_type],PrizeInfo[rand][cont_price]);
	}
	if(gContainer[id][cClass] == 2) {
		new rand = Random(9, 20);
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Поздравляем, вы выиграли — {F9C7A1} %s"W"\n\nПредмет добавлен в список всех призов "G"/priz", PrizeInfo[rand][cont_name]);
		D(playerid, DIALOG_NONE, DSM, ""P"Список призов",STRING_GLOBAL, "Закрыть", "");
		mysql_format(connects, query, sizeof(query),"INSERT INTO `priz`(`accid`, `prize`, `type`, `cash`) VALUES ('%i','%i','%i','%i')",PI[playerid][pID],PrizeInfo[rand][cont_model],PrizeInfo[rand][cont_type],PrizeInfo[rand][cont_price]);
	}
	if(gContainer[id][cClass] == 3) {
		new rand = Random(20, 29);
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Поздравляем, вы выиграли — {F9C7A1} %s"W"\n\nПредмет добавлен в список всех призов "G"/priz", PrizeInfo[rand][cont_name]);
		D(playerid, DIALOG_NONE, DSM, ""P"Список призов",STRING_GLOBAL, "Закрыть", "");
		mysql_format(connects, query, sizeof(query),"INSERT INTO `priz`(`accid`, `prize`, `type`, `cash`) VALUES ('%i','%i','%i','%i')",PI[playerid][pID],PrizeInfo[rand][cont_model],PrizeInfo[rand][cont_type],PrizeInfo[rand][cont_price]);
	}
	if(gContainer[id][cClass] == 4) {
		new rand = Random(29, 40);
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Поздравляем, вы выиграли — {F9C7A1} %s"W"\n\nПредмет добавлен в список всех призов "G"/priz", PrizeInfo[rand][cont_name]);
		D(playerid, DIALOG_NONE, DSM, ""P"Список призов",STRING_GLOBAL, "Закрыть", "");
		mysql_format(connects, query, sizeof(query),"INSERT INTO `priz`(`accid`, `prize`, `type`, `cash`) VALUES ('%i','%i','%i','%i')",PI[playerid][pID],PrizeInfo[rand][cont_model],PrizeInfo[rand][cont_type],PrizeInfo[rand][cont_price]);
	}
	if(gContainer[id][cClass] == 5) {
		new rand = Random(41, 53);
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Поздравляем, вы выиграли — {F9C7A1} %s"W"\n\nПредмет добавлен в список всех призов "G"/priz", PrizeInfo[rand][cont_name]);
		D(playerid, DIALOG_NONE, DSM, ""P"Список призов",STRING_GLOBAL, "Закрыть", "");
		mysql_format(connects, query, sizeof(query),"INSERT INTO `priz`(`accid`, `prize`, `type`, `cash`) VALUES ('%i','%i','%i','%i')",PI[playerid][pID],PrizeInfo[rand][cont_model],PrizeInfo[rand][cont_type],PrizeInfo[rand][cont_price]);
	}
	mysql_pquery(connects, query, "", "");
	return true;
}
stock load_trailer() {
	new Cache: result, rows;
	result = mysql_query(connects, "SELECT * FROM `"TABLE_DNK"`");
	rows = cache_num_rows();
	if (!rows)  {
		print("[Загрузка...] Трейлеры игроков не найден в базе данных.");
		cache_delete(result);
		return;
	}
	for (new idx = 1, vehicleid; idx <= rows; idx++) {
		new i = (idx - 1), player_vehicleid = i;
		if (i >= MAX_VEHICLES_PLAYER) continue;
		Iter_Add(playerVehicles, player_vehicleid);

		cache_get_value_name_int(i, "id", PlayerTrailer[player_vehicleid][carID]);
		cache_get_value_name(i,     "owner", PlayerTrailer[player_vehicleid][carOwner], MAX_PLAYER_NAME + 2);
		cache_get_value_name_int(i, "color_one", PlayerTrailer[player_vehicleid][carColor][0]);
		cache_get_value_name_int(i, "color_two", PlayerTrailer[player_vehicleid][carColor][1]);

		cache_get_value_name_float(i, "x", PlayerTrailer[player_vehicleid][carPos][0]);
		cache_get_value_name_float(i, "y", PlayerTrailer[player_vehicleid][carPos][1]);
		cache_get_value_name_float(i, "z", PlayerTrailer[player_vehicleid][carPos][2]);
		cache_get_value_name_float(i, "angle", PlayerTrailer[player_vehicleid][carPos][3]);

		cache_get_value_name_int(i, "interior", PlayerTrailer[player_vehicleid][carInterior]);
		cache_get_value_name_int(i, "world", PlayerTrailer[player_vehicleid][carWorld]);
		
		cache_get_value_name_int(i, "vehcom_1", PlayerTrailer[player_vehicleid][carVehcom][0]);
		cache_get_value_name_int(i, "vehcom_2", PlayerTrailer[player_vehicleid][carVehcom][1]);
		cache_get_value_name_int(i, "vehcom_3", PlayerTrailer[player_vehicleid][carVehcom][2]);
		cache_get_value_name_int(i, "vehcom_4", PlayerTrailer[player_vehicleid][carVehcom][3]);
		cache_get_value_name_int(i, "vehcom_5", PlayerTrailer[player_vehicleid][carVehcom][4]);
		cache_get_value_name_int(i, "vehcom_6", PlayerTrailer[player_vehicleid][carVehcom][5]);
		cache_get_value_name_int(i, "vehcom_7", PlayerTrailer[player_vehicleid][carVehcom][6]);
		cache_get_value_name_int(i, "vehcom_8", PlayerTrailer[player_vehicleid][carVehcom][7]);
		cache_get_value_name_int(i, "vehcom_9", PlayerTrailer[player_vehicleid][carVehcom][8]);
		cache_get_value_name_int(i, "vehcom_10", PlayerTrailer[player_vehicleid][carVehcom][9]);
		cache_get_value_name_int(i, "vehcom_11", PlayerTrailer[player_vehicleid][carVehcom][10]);
		cache_get_value_name_int(i, "vehcom_12", PlayerTrailer[player_vehicleid][carVehcom][11]);
		cache_get_value_name_int(i, "vehcom_13", PlayerTrailer[player_vehicleid][carVehcom][12]);
		cache_get_value_name_int(i, "vehcom_14", PlayerTrailer[player_vehicleid][carVehcom][13]);

		cache_get_value_name_int(i, "parked", PlayerTrailer[player_vehicleid][carParked]);
		cache_get_value_name_int(i, "paintjob", PlayerTrailer[player_vehicleid][carPaintJob]);
		
		cache_get_value_name_int(i,"drugs", PlayerTrailer[player_vehicleid][carDrugs]);
		cache_get_value_name_int(i,"medkit", PlayerTrailer[player_vehicleid][carHealth]);
		cache_get_value_name_int(i,"safemoney", PlayerTrailer[player_vehicleid][carMoney]);
		cache_get_value_name_int(i,"day", PlayerTrailer[player_vehicleid][carDay]);

		new sqlstring[67];
		cache_get_value(i, "gun", sqlstring , 65), sscanf (sqlstring, "p<|>iiiiiiiii",
		PlayerTrailer[player_vehicleid][carGun][0], PlayerTrailer[player_vehicleid][carGun][1],PlayerTrailer[player_vehicleid][carGun][2],
		PlayerTrailer[player_vehicleid][carGun][3],PlayerTrailer[player_vehicleid][carGun][4],PlayerTrailer[player_vehicleid][carGun][5],
		PlayerTrailer[player_vehicleid][carGun][6],PlayerTrailer[player_vehicleid][carGun][7],PlayerTrailer[player_vehicleid][carGun][8]);

		if (PlayerTrailer[player_vehicleid][carPos][0] == 0.0 && PlayerTrailer[player_vehicleid][carPos][1] == 0.0) {
			new random_spawn = random(sizeof (ticketVehicleSpawnPos));

			PlayerTrailer[player_vehicleid][carPos][0] = ticketVehicleSpawnPos[random_spawn][0];
			PlayerTrailer[player_vehicleid][carPos][1] = ticketVehicleSpawnPos[random_spawn][1];
			PlayerTrailer[player_vehicleid][carPos][2] = ticketVehicleSpawnPos[random_spawn][2];
			PlayerTrailer[player_vehicleid][carPos][3] = ticketVehicleSpawnPos[random_spawn][3];

			PlayerTrailer[player_vehicleid][carInterior] = 0;
			PlayerTrailer[player_vehicleid][carWorld] = 0;
			PlayerTrailer[player_vehicleid][carParked] = 0;
		}
		UpdatePlayerVehiclePosition(player_vehicleid, 0);
		PlayerTrailer[player_vehicleid][carVehicle] = vehicleid = A_CreateVehicle(508,
		PlayerTrailer[player_vehicleid][carPos][0], PlayerTrailer[player_vehicleid][carPos][1],
		PlayerTrailer[player_vehicleid][carPos][2], PlayerTrailer[player_vehicleid][carPos][3],
		PlayerTrailer[player_vehicleid][carColor][0], PlayerTrailer[player_vehicleid][carColor][1],
		-1, VEHICLE_TYPE_DNK
		);
		
		VehicleInfo[vehicleid][vPlayerVehicleID] = player_vehicleid;
		SetVehicleToRespawn(vehicleid);

		VehicleInfo[vehicleid][vParkingFine] = !PlayerTrailer[player_vehicleid][carParked];
		VehicleInfo[vehicleid][vLocked] = 1;

		PlayerTrailer[player_vehicleid][carOwnerID] = INVALID_PLAYER_ID;
	}
	printf("[Загрузка ...] Дома на колесах игроков успешно загружены (%i шт.)", rows);

	cache_delete(result);
}

stock UpdatePlayerVehiclePosition(player_vehicleid, update_vehicle = 1, save = 1) {
	if (!(0 <= player_vehicleid < MAX_VEHICLES_PLAYER))
	return;
	if (PlayerTrailer[player_vehicleid][carPos][0] != 0.0 || PlayerTrailer[player_vehicleid][carPos][1] != 0.0)
	return;

	new random_spawn = random(sizeof (ticketVehicleSpawnPos));

	PlayerTrailer[player_vehicleid][carPos][0] = ticketVehicleSpawnPos[random_spawn][0];
	PlayerTrailer[player_vehicleid][carPos][1] = ticketVehicleSpawnPos[random_spawn][1];
	PlayerTrailer[player_vehicleid][carPos][2] = ticketVehicleSpawnPos[random_spawn][2];
	PlayerTrailer[player_vehicleid][carPos][3] = ticketVehicleSpawnPos[random_spawn][3];

	PlayerTrailer[player_vehicleid][carInterior] = 0;
	PlayerTrailer[player_vehicleid][carWorld] = 0;

	new vehicleid = PlayerTrailer[player_vehicleid][carVehicle];
	//SetVehicleParamsEx(vehicleid, engine, lights, alarm, 1, bonnet, boot, objective);

	PlayerTrailer[player_vehicleid][carParked] = 0;
	VehicleInfo[vehicleid][vParkingFine] = 1;

	if (update_vehicle) {
		SetVehiclePos(vehicleid,
		PlayerTrailer[player_vehicleid][carPos][0], PlayerTrailer[player_vehicleid][carPos][1], PlayerTrailer[player_vehicleid][carPos][2]
		);
		SetVehicleZAngle(vehicleid, PlayerTrailer[player_vehicleid][carPos][3]);

		LinkVehicleToInterior(vehicleid, PlayerTrailer[player_vehicleid][carInterior]);
		SetVehicleVirtualWorld(vehicleid, PlayerTrailer[player_vehicleid][carWorld]);
	}
	if (save) SavePlayerVehicle(player_vehicleid);
}

stock ParkPlayerVehicle(playerid) {
	if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
		SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем личного ТС.");
		return;
	}
	new vehicleid = GetPlayerVehicleID(playerid), player_vehicleid = VehicleInfo[vehicleid][vPlayerVehicleID];

	if (!GetString(player_name[playerid], PlayerTrailer[player_vehicleid][carOwner])) {
		SendClientMessage(playerid, COLOR_GREY, "Вы должны быть за рулем личного ТС.");
		return;
	}
	if (_GetVehicleSpeed(vehicleid) > 0) {
		SendClientMessage(playerid, COLOR_GREY, "Для начала остановите транспорт, чтобы его припарковать.");
		return;
	}
	if(GetPlayerInterior(playerid) > 0) {
		SendClientMessage(playerid, COLOR_GREY, "Запрещено парковать в интерьерах");
		return;
	}
	if(IsAGreenZone(playerid)) {
		SendClientMessage(playerid, COLOR_GREY, "Запрещено парковаться в зеленых зонах");
		return;
	}
	new Float:vehiclePos[4];

	GetVehiclePos(vehicleid, vehiclePos[0], vehiclePos[1], vehiclePos[2]);
	GetVehicleZAngle(vehicleid, vehiclePos[3]);

	new Float:vehicle_Pos[3], bool:isReturn = false;
	for (new x = GetVehiclePoolSize() + 1; --x != 0;) {
		if (!IsValidVehicle(x)) continue;
		AntiCheatGetVehicleSpawnPos(x, vehicle_Pos[0], vehicle_Pos[1], vehicle_Pos[2]);
		if (!IsPlayerInRangeOfPoint(playerid, 4.5, vehicle_Pos[0], vehicle_Pos[1], vehicle_Pos[2])) continue;

		new player_vehicle_id = VehicleInfo[vehicleid][vPlayerVehicleID];
		if (VehicleInfo[x][vType] == VEHICLE_TYPE_PLAYER && (0 <= player_vehicle_id < MAX_VEHICLES_PLAYER) && GetPlayerVirtualWorld(playerid) == PlayerTrailer[player_vehicle_id][carWorld]) {
			isReturn = true;
			break;
		} 
	}
	if (isReturn) {
		SendClientMessage(playerid, COLOR_GREY, "В данном месте нельзя припарковать транспорт (место занято).");
		return;
	} 

	PlayerTrailer[player_vehicleid][carPos][0] = vehiclePos[0];
	PlayerTrailer[player_vehicleid][carPos][1] = vehiclePos[1];
	PlayerTrailer[player_vehicleid][carPos][2] = vehiclePos[2];
	PlayerTrailer[player_vehicleid][carPos][3] = vehiclePos[3];

	PlayerTrailer[player_vehicleid][carInterior] = GetPlayerInterior(playerid);
	PlayerTrailer[player_vehicleid][carWorld] = GetPlayerVirtualWorld(playerid);
	PlayerTrailer[player_vehicleid][carParked] = 1;

	PlayerTrailer[player_vehicleid][carStatus] = VehicleInfo[vehicleid][vStatus];

	A_DestroyVehicle(vehicleid);

	PlayerTrailer[player_vehicleid][carVehicle] = vehicleid = A_CreateVehicle(508,
	PlayerTrailer[player_vehicleid][carPos][0], PlayerTrailer[player_vehicleid][carPos][1],
	PlayerTrailer[player_vehicleid][carPos][2], PlayerTrailer[player_vehicleid][carPos][3],
	PlayerTrailer[player_vehicleid][carColor][0], PlayerTrailer[player_vehicleid][carColor][1],
	-1, VEHICLE_TYPE_DNK
	);
	VehicleInfo[vehicleid][vPlayerVehicleID] = player_vehicleid;
	SetVehicleToRespawn(vehicleid);
	
	PutPlayerInVehicle(playerid, vehicleid, 0);
	SavePlayerVehicle(player_vehicleid);
	SendOk(playerid, "Вы успешно перепарковали свое ТС.");
}

stock SavePlayerVehicle(player_vehicleid) {
	if (!(0 <= player_vehicleid < MAX_VEHICLES_PLAYER)) return;
	MYSQL_GLOBAL[0] = EOS;

	new vehicleid = PlayerTrailer[player_vehicleid][carVehicle];

	new vpanels, vdoors, vlights, vtires, Float:vhealth;
	GetVehicleHealth(vehicleid, vhealth);
	GetVehicleDamageStatus(vehicleid, vpanels, vdoors, vlights, vtires);

	PlayerTrailer[player_vehicleid][carVehcom][0] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SPOILER);
	PlayerTrailer[player_vehicleid][carVehcom][1] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HOOD);
	PlayerTrailer[player_vehicleid][carVehcom][2] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_ROOF);
	PlayerTrailer[player_vehicleid][carVehcom][3] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SIDESKIRT);
	PlayerTrailer[player_vehicleid][carVehcom][4] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_LAMPS);
	PlayerTrailer[player_vehicleid][carVehcom][5] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_NITRO);
	PlayerTrailer[player_vehicleid][carVehcom][6] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_EXHAUST);
	PlayerTrailer[player_vehicleid][carVehcom][7] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_WHEELS);
	PlayerTrailer[player_vehicleid][carVehcom][8] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_STEREO);
	PlayerTrailer[player_vehicleid][carVehcom][9] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HYDRAULICS);
	PlayerTrailer[player_vehicleid][carVehcom][10] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_FRONT_BUMPER);
	PlayerTrailer[player_vehicleid][carVehcom][11] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_REAR_BUMPER);
	PlayerTrailer[player_vehicleid][carVehcom][12] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_RIGHT);
	PlayerTrailer[player_vehicleid][carVehcom][13] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_LEFT);

	MYSQL_GLOBAL[0] = EOS;
	mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL), "UPDATE `"TABLE_DNK"` SET \
		`color_one` = %i, `color_two` = %i, \
		`x` = '%.2f', `y` = '%.2f', `z` = '%.2f', `angle` = '%.2f', \
		`interior` = %i, `world` = %i, `parked` = '%i',\
		`paintjob`= '%i',\
		`vehcom_1` = '%i', `vehcom_2` = '%i', `vehcom_3` = '%i', `vehcom_4` = '%i', `vehcom_5` = '%i', \
		`vehcom_6` = '%i', `vehcom_7` = '%i', `vehcom_8` = '%i', `vehcom_9` = '%i', `vehcom_10` = '%i', \
		`vehcom_11` = '%i', `vehcom_12` = '%i', `vehcom_13` = '%i', `vehcom_14` = '%i' WHERE id = %d LIMIT 1",

	PlayerTrailer[player_vehicleid][carColor][0], PlayerTrailer[player_vehicleid][carColor][1],
	
	PlayerTrailer[player_vehicleid][carPos][0], PlayerTrailer[player_vehicleid][carPos][1],
	PlayerTrailer[player_vehicleid][carPos][2], PlayerTrailer[player_vehicleid][carPos][3],
	
	PlayerTrailer[player_vehicleid][carInterior], PlayerTrailer[player_vehicleid][carWorld],

	PlayerTrailer[player_vehicleid][carParked],
	PlayerTrailer[player_vehicleid][carPaintJob],
	
	PlayerTrailer[player_vehicleid][carVehcom][0], PlayerTrailer[player_vehicleid][carVehcom][1],
	PlayerTrailer[player_vehicleid][carVehcom][2], PlayerTrailer[player_vehicleid][carVehcom][3],
	PlayerTrailer[player_vehicleid][carVehcom][4], PlayerTrailer[player_vehicleid][carVehcom][5],
	PlayerTrailer[player_vehicleid][carVehcom][6], PlayerTrailer[player_vehicleid][carVehcom][7],
	PlayerTrailer[player_vehicleid][carVehcom][8], PlayerTrailer[player_vehicleid][carVehcom][9],
	PlayerTrailer[player_vehicleid][carVehcom][10], PlayerTrailer[player_vehicleid][carVehcom][11],
	PlayerTrailer[player_vehicleid][carVehcom][12], PlayerTrailer[player_vehicleid][carVehcom][13],
	
	PlayerTrailer[player_vehicleid][carID]
	);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");
}

stock trailer_text(vehicleid) {
	new str[350], status[46];
	if(VehicleInfo[PlayerTrailer[vehicleid][carVehicle]][vLocked]) format(status,sizeof(status),"{E05864}закрыты");
	else format(status,sizeof(status),"{6B8E23}открыты");
	
	format(str,sizeof(str),""W"Владелец:"P" %s\n"W"Двери: %s\n\n"W"Для входа нажмите"ORANGE" 'ALT'", PlayerTrailer[vehicleid][carOwner],
	status);
	SetVehicleNumberText(PlayerTrailer[vehicleid][carVehicle], str);
}

stock OnPlayerVehicleSpawn(vehicleid, player_vehicleid) {
	SetVehiclePos(vehicleid,
	PlayerTrailer[player_vehicleid][carPos][0],
	PlayerTrailer[player_vehicleid][carPos][1],
	PlayerTrailer[player_vehicleid][carPos][2]
	);
	SetVehicleZAngle(vehicleid, PlayerTrailer[player_vehicleid][carPos][3]);

	SetVehicleVirtualWorld(vehicleid, PlayerTrailer[player_vehicleid][carWorld]);
	LinkVehicleToInterior(vehicleid, PlayerTrailer[player_vehicleid][carInterior]);

	ChangeVehicleColor(vehicleid, VehicleInfo[vehicleid][vColor][0], VehicleInfo[vehicleid][vColor][1]);
	LoadPlayerVehicleTuning(vehicleid, player_vehicleid);

	if (PlayerTrailer[player_vehicleid][carPos][0] == 0.0 && PlayerTrailer[player_vehicleid][carPos][1] == 0.0)
	VehicleInfo[vehicleid][vParkingFine] = 1;
	else VehicleInfo[vehicleid][vParkingFine] = 0;
	
	SetVehicleDoorStatus(vehicleid, .status = 1);
	trailer_text(player_vehicleid);
}


stock LoadPlayerVehicleTuning(vehicleid, player_vehicleid) {
	if (!(0 <= player_vehicleid < MAX_VEHICLES_PLAYER))
	return;
	if (PlayerTrailer[player_vehicleid][carPaintJob] != -1)
	ChangeVehiclePaintjob(vehicleid, PlayerTrailer[player_vehicleid][carPaintJob]);
	for (new i = 0; i < 14; i++) {
		if (PlayerTrailer[player_vehicleid][carVehcom][i] == 0) continue;
		ACC_AddVehicleComponent(vehicleid, PlayerTrailer[player_vehicleid][carVehcom][i]);
	}
}

stock CreatePlayerVehicle(playerid, model, Float:x, Float:y, Float:z, Float:angle, color_1, color_2, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:spawn_angle) {
	new vehicle_amount = GetPlayerVehicles(playerid);
	if(vehicle_amount) {
		SendClientMessage(playerid, COLOR_GREY, "У вас уже есть трейлер!");
		return 0;
	}
	if (Iter_Count(playerVehicles) >= MAX_VEHICLES_PLAYER) {
		print("CreatePlayerVehicle - Iter_Count(playerVehicles) >= MAX_VEHICLES_PLAYER");
		return 0;
	}
	new player_vehicleid = Iter_Free(playerVehicles), vehicleid = INVALID_VEHICLE_ID;
	Iter_Add(playerVehicles, player_vehicleid);

	PlayerTrailer[player_vehicleid][carModel] = model;

	PlayerTrailer[player_vehicleid][carPos][0] = x;
	PlayerTrailer[player_vehicleid][carPos][1] = y;
	PlayerTrailer[player_vehicleid][carPos][2] = z;
	PlayerTrailer[player_vehicleid][carPos][3] = spawn_angle;
	PlayerTrailer[player_vehicleid][carInterior] = 0;
	PlayerTrailer[player_vehicleid][carWorld] = 0;

	PlayerTrailer[player_vehicleid][carColor][0] = color_1;
	PlayerTrailer[player_vehicleid][carColor][1] = color_2;
	PlayerTrailer[player_vehicleid][carPaintJob] = 3;
	PlayerTrailer[player_vehicleid][carParked] = 0;
	
	PlayerTrailer[player_vehicleid][carDay] = (unix + 86400 * 1);


	UpdatePlayerVehiclePosition(player_vehicleid, 0, .save = 0);

	strmid(PlayerTrailer[player_vehicleid][carOwner], player_name[playerid], 0, strlen(player_name[playerid]), MAX_PLAYER_NAME + 2);

	PlayerTrailer[player_vehicleid][carVehicle] = vehicleid = A_CreateVehicle(PlayerTrailer[player_vehicleid][carModel],
	PlayerTrailer[player_vehicleid][carPos][0], PlayerTrailer[player_vehicleid][carPos][1],
	PlayerTrailer[player_vehicleid][carPos][2], spawn_angle,
	PlayerTrailer[player_vehicleid][carColor][0], PlayerTrailer[player_vehicleid][carColor][1],
	-1, VEHICLE_TYPE_DNK
	);
	SetVehicleZAngle(vehicleid, spawn_angle);
	VehicleInfo[vehicleid][vPlayerVehicleID] = player_vehicleid;
	SetVehicleToRespawn(vehicleid);

	MYSQL_GLOBAL[0] = EOS;

	mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL), "INSERT INTO `"TABLE_DNK"` \
		(`owner`, `color_one`, `color_two`, `x`, `y`, `z`, `angle`,`day`) VALUES \
		('%s', %i, %i, '%.2f', '%.2f', '%.2f', '%.2f', %i)",
	player_name[playerid],
	PlayerTrailer[player_vehicleid][carColor][0], PlayerTrailer[player_vehicleid][carColor][1],
	PlayerTrailer[player_vehicleid][carPos][0], PlayerTrailer[player_vehicleid][carPos][1],
	PlayerTrailer[player_vehicleid][carPos][2], PlayerTrailer[player_vehicleid][carPos][3],
	PlayerTrailer[player_vehicleid][carDay]
	);
	new Cache:result = mysql_query(connects, MYSQL_GLOBAL);
	PlayerTrailer[player_vehicleid][carID] = cache_insert_id();
	if (cache_is_valid(result)) cache_delete(result);

	SetVehiclePos(vehicleid, spawn_x, spawn_y, spawn_z);
	SetVehicleZAngle(vehicleid, angle);

	GetPlayerVehicles(playerid);
	SavePlayerVehicle(player_vehicleid);

	MYSQL_GLOBAL[0] = EOS;
	return player_vehicleid;
}

stock GetPlayerVehicles(playerid) {
	playerVehicleAmount[playerid] = 0;

	foreach(new player_vehicleid: playerVehicles) {
		if (strcmp(PlayerTrailer[player_vehicleid][carOwner], player_name[playerid]))
		continue;
		playerVehicleID[playerid] = player_vehicleid;
		PlayerTrailer[player_vehicleid][carOwnerID] = playerid;
		
		if (++playerVehicleAmount[playerid] >= MAX_PLAYER_VEHICLES) break;
	}
	return playerVehicleAmount[playerid];
}

stock DestroyPlayerVehicle(playerid, player_vehicle_id) {
	if (!(0 <= player_vehicle_id < MAX_VEHICLES_PLAYER))
	return false;
	if (!GetString(PlayerTrailer[player_vehicle_id][carOwner], player_name[playerid]))
	return false;

	new
	insert_id = PlayerTrailer[player_vehicle_id][carID],
	vehicleid = PlayerTrailer[player_vehicle_id][carVehicle],
	PlayerTrailer_NULL[PLAYER_VEHICLE_E];

	PlayerTrailer[player_vehicle_id] = PlayerTrailer_NULL;

	A_DestroyVehicle(vehicleid);
	Iter_Remove(playerVehicles, player_vehicle_id);

	MYSQL_GLOBAL[0] = EOS;

	mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL),
	"DELETE FROM "TABLE_DNK" WHERE id=%i LIMIT 1",
	insert_id
	);
	mysql_tquery(connects, MYSQL_GLOBAL, "", "");

	GetPlayerVehicles(playerid);
	return true;
}

stock hellow_dm(playerid) {
	new rand = random(sizeof(hell_map));
    SetPlayerPosAC(playerid, hell_map[rand][0], hell_map[rand][1], hell_map[rand][2], 10, 0);
	SetPlayerFacingAngle(playerid, hell_map[rand][3]);
	new freezeSeconds = 0;
	switch (GetPlayerPing(playerid)) {
	case 0 .. 49: freezeSeconds = 2;
	case 50 .. 199: freezeSeconds = 3;
	case 200 .. 499: freezeSeconds = 4;
	default: freezeSeconds = 5;
	}
	FreezePlayerForTime(playerid, freezeSeconds);
	GivePlayerWeapon(playerid, 24, 9999);
	GivePlayerWeapon(playerid, 25, 9999);
	GivePlayerWeapon(playerid, 29, 9999);
	GivePlayerWeapon(playerid, 31, 9999);
	SetPlayerHealth(playerid, 100);
	SetCameraBehindPlayer(playerid);
	return true;
}

stock dm_zone(playerid, id_zone)
{
	if(TI[playerid][tDM] == 0) return true;
	switch(id_zone)
	{
	case 1: {
			new rand = random(sizeof(dm_map_1));
			SetPlayerPosAC(playerid, dm_map_1[rand][0], dm_map_1[rand][1], dm_map_1[rand][2], 4, 0);
			SetPlayerFacingAngle(playerid, dm_map_1[rand][3]);
		}
	case 2: {
			new rand = random(sizeof(dm_map_2));
			SetPlayerPosAC(playerid, dm_map_2[rand][0], dm_map_2[rand][1], dm_map_2[rand][2], 5, 0);
			SetPlayerFacingAngle(playerid, dm_map_2[rand][3]);
		}
	case 3: {
			new rand = random(sizeof(dm_map_3));
			SetPlayerPosAC(playerid, dm_map_3[rand][0], dm_map_3[rand][1], dm_map_3[rand][2], 6, 0);
			SetPlayerFacingAngle(playerid, dm_map_3[rand][3]);
		}
	case 4: {
			new rand = random(sizeof(dm_map_4));
			SetPlayerPosAC(playerid, dm_map_4[rand][0], dm_map_4[rand][1], dm_map_4[rand][2], 7, 0);
			SetPlayerFacingAngle(playerid, dm_map_4[rand][3]);
		}
	}
	SetPlayerVirtualWorld(playerid, id_zone+1);
	GivePlayerWeapon(playerid, 24, 9999);
	GivePlayerWeapon(playerid, 25, 9999);
	GivePlayerWeapon(playerid, 29, 9999);
	GivePlayerWeapon(playerid, 31, 9999);
	SetCameraBehindPlayer(playerid);
	return true;
}

stock create_family(playerid, inputtext[]) {
	if(TotalFamily >= FAMILY_COUNT) return SendClientMessage(playerid, COLOR_GREY, "На сервере достигнут лимит семей");
	new query[128];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM family WHERE name = '%s'",inputtext);
	new Cache:result = mysql_query(connects, query);
	if(cache_num_rows()) {
		SendClientMessage(playerid, COLOR_GREY, "Семья с таким именем уже существует");
		cache_delete(result);
		return 1;
	}
	cache_delete(result);
	strmid(gFamily[TotalFamily][famCName],inputtext,0,strlen(inputtext),strlen(inputtext)+1);
	strmid(gFamily[TotalFamily][famName],inputtext,0,strlen(inputtext),strlen(inputtext)+1);
	SetString(FamRanks[TotalFamily][0],"None");
	SetString(FamRanks[TotalFamily][1],"None");
	SetString(FamRanks[TotalFamily][2],"None");
	SetString(FamRanks[TotalFamily][3],"None");
	SetString(FamRanks[TotalFamily][4],"None");
	SetString(FamRanks[TotalFamily][5],"None");
	SetString(FamRanks[TotalFamily][6],"None");
	SetString(FamRanks[TotalFamily][7],"None");
	SetString(FamRanks[TotalFamily][8],"None");
	SetString(gFamily[TotalFamily][famMessage],"None");
	gFamily[TotalFamily][famInvRang] = gFamily[TotalFamily][famUninvRang] = gFamily[TotalFamily][famGiveRang] = 7;
	new string[128];
	format(string,sizeof(string),"Поздравляем с созданием семьи - "ORANGE"%s",gFamily[TotalFamily][famCName]);
	SendUse(playerid,string);
	SendOk(playerid,"Управление семьей - /fmenu");
	PI[playerid][pFamily] = TotalFamily + 1;
	UpdatePlayerData(playerid,"family",PI[playerid][pFamily]);
	printf("stap 1: %i", PI[playerid][pFamily]); //убрать 1
	PI[playerid][pFamRank] = 8;
	UpdatePlayerData(playerid,"pFamRank",8);
	strmid(gFamily[TotalFamily][famCOwner],player_name[playerid],0,strlen(player_name[playerid]),MAX_PLAYER_NAME);
	strmid(gFamily[TotalFamily][famOwner],player_name[playerid],0,strlen(player_name[playerid]),MAX_PLAYER_NAME);

	gFamily[TotalFamily][famSpawnCar] = 7;
	gFamily[TotalFamily][famBuyCar] = 7;
	gFamily[TotalFamily][famSkladMoney] = 7;

	new querys[513];
	mysql_format(connects, querys, sizeof(querys),"INSERT INTO `family`(`id`,`cname`,`name`,`time`,`cowner`,`owner`,`car_rank`,`spawn_rank`,`money_rank`) VALUES ('%i','%s','%s',NOW(),'%s','%s','7','7','7')",
	PI[playerid][pFamily],gFamily[TotalFamily][famCName],gFamily[TotalFamily][famName],gFamily[TotalFamily][famCOwner],gFamily[TotalFamily][famOwner]);
	mysql_tquery(connects, querys, "creategFamily", "i", TotalFamily);
	TotalFamily++;
	return true;
}

stock CheckPlayerRing(playerid)
{
	new string[100];
	new r = 0;
	new player1 = RingInfo[r][rgPlayer][0];
	new player2 = RingInfo[r][rgPlayer][1];
	if(player1 == playerid) format(string, sizeof(string), "[РЭФЕРИ] Победителем поединка стал - "ORANGE"%s", player_name[player2]);
	else format(string, sizeof(string), "[РЭФЕРИ] Победителем поединка стал - "ORANGE"%s", player_name[player1]);
	SendOk(player1, string);
	SendOk(player2, string);
	RingInfo[r][rgPlayer][0] = -1;
	RingInfo[r][rgPlayer][1] = -1;
	RingInfo[r][rgStart] = 0;
	RingInfo[r][rgPrice] = 0;
	RingInfo[r][rgLoad][0] = 0;
	RingInfo[r][rgLoad][1] = 0;
}

CB:LoadProd(playerid)
{
	if (!GetVehicleTrailer(GetPlayerVehicleID(playerid)) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 403)
	{
		if (Trailer_job[playerid] != INVALID_VEHICLE_ID) return SendClientMessage(playerid,COLOR_GREY, "Вы уже брали цистерну с топливом");
		new rand = random(5);
		Trailer_job[playerid] = A_CreateVehicle(584, car_fuels[rand][0], car_fuels[rand][1], car_fuels[rand][2], 170.0000, -1, -1, -1, VEHICLE_TYPE_TRAILER);
		PlayerTrailerTime[playerid] = 30;
		new string[128];
		SetPVarInt(playerid, "count_prod", GetPVarInt(playerid, "count_prod") + GetPVarInt(playerid, "count_prod2"));
		format(string, sizeof(string), "Загружено: "GREEN"%d/2000\n"W"Бизнес: "GREEN"Отсутствует", GetPVarInt(playerid, "count_prod"));
		gPlayerProdText[playerid] = CreateDynamic3DTextLabel(string, -1, 0.0, 0.0, 0.0, 15.0, INVALID_PLAYER_ID, Trailer_job[playerid]);
		Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL, gPlayerProdText[playerid], E_STREAMER_ATTACH_OFFSET_Y, -0.5);
		Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL, gPlayerProdText[playerid], E_STREAMER_ATTACH_OFFSET_Z, 2.0);
		SendOk(playerid, "У Вас есть ровно 30 секунд чтобы прицепить цистерну с бензином");
	}
	else
	{
		if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		{
			DeletePVar(playerid, "count_prod2");
			return 1;
		}
		new string[144];
		format(string, sizeof(string), "Загружено: "GREEN"%d/2000\n"W"Бизнес: "GREEN"Отсутствует", GetPVarInt(playerid, "count_prod") + GetPVarInt(playerid, "rand_prod"));
		UpdateDynamic3DTextLabelText(gPlayerProdText[playerid], -1, string);

		new rand = Random(50, 70);

		if (GetPVarInt(playerid, "count_prod2") > GetPVarInt(playerid, "rand_prod"))
		{
			SetPVarInt(playerid, "rand_prod", GetPVarInt(playerid, "rand_prod") + rand);
			SetTimerEx("LoadProd", 150, false, "i", playerid);
			TogglePlayerControllable(playerid, 0);
		}
		else
		{
			SetPVarInt(playerid, "count_prod", GetPVarInt(playerid, "count_prod") + GetPVarInt(playerid, "count_prod2"));
			TogglePlayerControllable(playerid, 1);
			DeletePVar(playerid, "rand_prod");
			format(string, sizeof(string), "Загружено: "GREEN"%d/2000\n"W"Бизнес: "GREEN"Отсутствует", GetPVarInt(playerid, "count_prod"));
			UpdateDynamic3DTextLabelText(gPlayerProdText[playerid], -1, string);
		}

	}
	return 1;
}

dialog_mayor(playerid) return D(playerid,D_ECONOMY,DSL,""P"Управление штатом","Информация о финансах\nУправление пособиями\
	\nПереводы на счет организаций\nНалог на недвижимость\nНалог на бизнес\nНалог на транспорт\n\
	Изменить состояние казны","Выбрать","Отмена");
	
dialog_bank(playerid) return D(playerid,D_BANK_MENU,DSL,""P"Банковские услуги",""GREEN"-"W" Информация\n"GREEN"-"W" Снять со счета\n"GREEN"-"W" Положить на счет\n"GREEN"-"W" Перевести другому человеку\n"GREEN"-"W" Оплата дома\n"GREEN"-"W" Оплата бизнеса\n"GREEN"-"W" Оплата дома на колесах\n"GREEN"-"W" Оплатить штрафы", "Выбрать","Закрыть");

stock save_fcar(family, car) {

	new Float:x, Float:y, Float:z, Float:a, posit[76], query[720], str[56];
	GetVehiclePos(CarFamily[family][car][LoadCar], x,y,z);
	GetVehicleZAngle(CarFamily[family][car][LoadCar], a);
	format(posit,sizeof(posit),"%.2f, %.2f, %.2f, %.2f",x,y,z,a);
	
	CarFamily[family][car][fam_cx] = x;
	CarFamily[family][car][fam_cy] = y;
	CarFamily[family][car][fam_cz] = z;
	CarFamily[family][car][fam_ca] = a;
	
	VehicleInfo[CarFamily[family][car][LoadCar]][vFamily] = 0;
	VehicleInfo[CarFamily[family][car][LoadCar]][vFslot] = -1;
	
	A_DestroyVehicle(CarFamily[family][car][LoadCar]);
	CarFamily[family][car][LoadCar] = INVALID_VEHICLE_ID;
	
	CarFamily[family][car][LoadCar] = A_CreateVehicle(CarFamily[family][car][carID], x,y,z,a, FamilyColorC[gFamily[family][famColor]], FamilyColorC[gFamily[family][famColor]], -1,VEHICLE_TYPE_FAMILY);

	LoadFamilyTuning(family, CarFamily[family][car][LoadCar], car);
	ChangeVehicleColor(CarFamily[family][car][LoadCar], CarFamily[family][car][famVehColor], CarFamily[family][car][famVehColor_1]);
	
	VehicleInfo[CarFamily[family][car][LoadCar]][vColor][0] = CarFamily[family][car][famVehColor];
	VehicleInfo[CarFamily[family][car][LoadCar]][vColor][1] = CarFamily[family][car][famVehColor_1];
	
	VehicleInfo[CarFamily[family][car][LoadCar]][vFamily] = gFamily[family][famID];
	VehicleInfo[CarFamily[family][car][LoadCar]][vFslot] = car;
	
	mysql_format(connects, query, sizeof(query), "UPDATE `family` SET `poscar%d` = '%s' WHERE `id` = '%d'",car+1, posit, family+1);
	mysql_tquery(connects, query, "", "");
	
	format(str,56,"{%s}%s",FamilyColor[gFamily[family][famColor]], gFamily[family][famName]);
	SetVehicleNumberText(CarFamily[family][car][LoadCar], str);
	return true;
}

stock EndCapt(playerid)
{
	for(new t = 0;t < 34;t++) {
		TextDrawHideForPlayer(playerid, Capture[t]);
	}
	for(new c = 0; c < 6; c++) {
		PlayerTextDrawHide(playerid, CaptPlayer[playerid][c]);
		PlayerTextDrawDestroy(playerid, CaptPlayer[playerid][c]);
	}
	for(new j = 0; j < 5; j++) SendDeathMessageToPlayer(playerid, MAX_PLAYERS, MAX_PLAYERS, EOF);
	DeletePVar(playerid, "ppkz");
}


CB:OnMemoryCheckFakePromo(playerid, fake_promo[])
{
	new rows;
	cache_get_row_count(rows);

	if (!rows) return SendClientMessage(playerid, COLOR_GREY, "Данный бонус-код не обнаружен");

	new Money;
	new Donates;
	new UseFakeCode;

	cache_get_value_name_int(0,  "Money",      Money);
	cache_get_value_name_int(0,  "Donate",    Donates);
	cache_get_value_name_int(0,  "UseCode",  UseFakeCode);

	new string;
	STRING_GLOBAL[0] = EOS;
	mysql_format(connects, STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM `fake_promo_use` WHERE `ID` = '%d' AND `Code` = '%s'", PI[playerid][pID], fake_promo);
	new Cache: result = mysql_query(connects, STRING_GLOBAL);
	cache_get_row_count(string);
	if (!string)
	{
		UseFakeCode -= 1;
		if (cache_is_valid(result)) cache_delete(result);

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "\
		"W"Вы использовали бонус код "P"%s\n\n\
		\
		"W"В качестве бонуса вам начислено:\n\
		"W"Donate Coin: "P"%d\n\
		"W"Виртуальной валюты: "P"%d", fake_promo, Donates, Money);
		D(playerid, DIALOG_NONE, DIALOG_STYLE_MSGBOX, ""P"Активация бонус-кода", STRING_GLOBAL, "Скрыть", "");
		
		if(Donates > 0)
		{
			GiveDonate(playerid, Donates, "Активация бонус-кода");
		}
		GiveMoney(playerid, Money, "Активация бонус-кода");
		
		MYSQL_GLOBAL[0] = EOS;
		mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL), "INSERT INTO `fake_promo_use` (`ID`, `Code`) VALUES ('%d', '%s')", PI[playerid][pID], fake_promo);
		mysql_pquery(connects, MYSQL_GLOBAL, "", "");

		if (UseFakeCode <= 0)
		{
			MYSQL_GLOBAL[0] = EOS;
			mysql_format(connects, MYSQL_GLOBAL, sizeof(MYSQL_GLOBAL), "DELETE FROM `fake_promo` WHERE `Code` = '%s'", fake_promo);
			mysql_tquery(connects, MYSQL_GLOBAL, "", "");
			return true;
		}
		if (UseFakeCode >= 0)
		{
			MYSQL_GLOBAL[0] = EOS;
			mysql_format(connects, MYSQL_GLOBAL, sizeof (MYSQL_GLOBAL), "UPDATE `fake_promo` SET `UseCode` = '%d' WHERE `Code` = '%s'", UseFakeCode, fake_promo);
			mysql_tquery(connects, MYSQL_GLOBAL, "", "");
			return true;
		}
	}
	else
	{
		SendClientMessage(playerid,COLOR_GREY, "Вы уже использовали данный бонус-код");
		if (cache_is_valid(result)) cache_delete(result);
		return true;
	}
	return true;
}

stock textdraw_bank(playerid) {
	// Ограбление банка
	hack_numbers[playerid][0] = CreatePlayerTextDraw(playerid,343.7333, 130.1963, "1"); // пусто
	PlayerTextDrawLetterSize(playerid,hack_numbers[playerid][0], 0.4812, 2.3921);
	PlayerTextDrawTextSize(playerid,hack_numbers[playerid][0], 10.0000, 19.0000);
	PlayerTextDrawAlignment(playerid,hack_numbers[playerid][0], 2);
	PlayerTextDrawColor(playerid,hack_numbers[playerid][0], 235802367);
	PlayerTextDrawUseBox(playerid,hack_numbers[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid,hack_numbers[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid,hack_numbers[playerid][0], 255);
	PlayerTextDrawFont(playerid,hack_numbers[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid,hack_numbers[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid,hack_numbers[playerid][0], 0);
	PlayerTextDrawSetSelectable(playerid,hack_numbers[playerid][0], true);

	hack_numbers[playerid][1] = CreatePlayerTextDraw(playerid,369.4284, 130.1963, "2"); // пусто
	PlayerTextDrawLetterSize(playerid,hack_numbers[playerid][1], 0.2755, 2.3963);
	PlayerTextDrawTextSize(playerid,hack_numbers[playerid][1], 10.0000, 19.0000);
	PlayerTextDrawAlignment(playerid,hack_numbers[playerid][1], 2);
	PlayerTextDrawColor(playerid,hack_numbers[playerid][1], 235802367);
	PlayerTextDrawUseBox(playerid,hack_numbers[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid,hack_numbers[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid,hack_numbers[playerid][1], 255);
	PlayerTextDrawFont(playerid,hack_numbers[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid,hack_numbers[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid,hack_numbers[playerid][1], 0);
	PlayerTextDrawSetSelectable(playerid,hack_numbers[playerid][1], true);

	hack_numbers[playerid][2] = CreatePlayerTextDraw(playerid,395.6221, 130.1963, "3"); // пусто
	PlayerTextDrawLetterSize(playerid,hack_numbers[playerid][2], 0.2755, 2.3963);
	PlayerTextDrawTextSize(playerid,hack_numbers[playerid][2], 10.0000, 19.0000);
	PlayerTextDrawAlignment(playerid,hack_numbers[playerid][2], 2);
	PlayerTextDrawColor(playerid,hack_numbers[playerid][2], 235802367);
	PlayerTextDrawUseBox(playerid,hack_numbers[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid,hack_numbers[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid,hack_numbers[playerid][2], 255);
	PlayerTextDrawFont(playerid,hack_numbers[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid,hack_numbers[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid,hack_numbers[playerid][2], 0);
	PlayerTextDrawSetSelectable(playerid,hack_numbers[playerid][2], true);

	hack_numbers[playerid][3] = CreatePlayerTextDraw(playerid,395.2221, 157.1965, "6"); // пусто
	PlayerTextDrawLetterSize(playerid,hack_numbers[playerid][3], 0.2755, 2.3963);
	PlayerTextDrawTextSize(playerid,hack_numbers[playerid][3], 10.0000, 19.0000);
	PlayerTextDrawAlignment(playerid,hack_numbers[playerid][3], 2);
	PlayerTextDrawColor(playerid,hack_numbers[playerid][3], 235802367);
	PlayerTextDrawUseBox(playerid,hack_numbers[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid,hack_numbers[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid,hack_numbers[playerid][3], 255);
	PlayerTextDrawFont(playerid,hack_numbers[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid,hack_numbers[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid,hack_numbers[playerid][3], 0);
	PlayerTextDrawSetSelectable(playerid,hack_numbers[playerid][3], true);

	hack_numbers[playerid][4] = CreatePlayerTextDraw(playerid,395.4220, 185.9981, "9"); // пусто
	PlayerTextDrawLetterSize(playerid,hack_numbers[playerid][4], 0.2755, 2.3963);
	PlayerTextDrawTextSize(playerid,hack_numbers[playerid][4], 10.0000, 19.0000);
	PlayerTextDrawAlignment(playerid,hack_numbers[playerid][4], 2);
	PlayerTextDrawColor(playerid,hack_numbers[playerid][4], 235802367);
	PlayerTextDrawUseBox(playerid,hack_numbers[playerid][4], 1);
	PlayerTextDrawBoxColor(playerid,hack_numbers[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid,hack_numbers[playerid][4], 255);
	PlayerTextDrawFont(playerid,hack_numbers[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid,hack_numbers[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid,hack_numbers[playerid][4], 0);
	PlayerTextDrawSetSelectable(playerid,hack_numbers[playerid][4], true);

	hack_numbers[playerid][5] = CreatePlayerTextDraw(playerid,369.6285, 185.4981, "8"); // пусто
	PlayerTextDrawLetterSize(playerid,hack_numbers[playerid][5], 0.2755, 2.3963);
	PlayerTextDrawTextSize(playerid,hack_numbers[playerid][5], 10.0000, 19.0000);
	PlayerTextDrawAlignment(playerid,hack_numbers[playerid][5], 2);
	PlayerTextDrawColor(playerid,hack_numbers[playerid][5], 235802367);
	PlayerTextDrawUseBox(playerid,hack_numbers[playerid][5], 1);
	PlayerTextDrawBoxColor(playerid,hack_numbers[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid,hack_numbers[playerid][5], 255);
	PlayerTextDrawFont(playerid,hack_numbers[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid,hack_numbers[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid,hack_numbers[playerid][5], 0);
	PlayerTextDrawSetSelectable(playerid,hack_numbers[playerid][5], true);

	hack_numbers[playerid][6] = CreatePlayerTextDraw(playerid,369.6285, 157.4965, "5"); // пусто
	PlayerTextDrawLetterSize(playerid,hack_numbers[playerid][6], 0.2755, 2.3963);
	PlayerTextDrawTextSize(playerid,hack_numbers[playerid][6], 10.0000, 19.0000);
	PlayerTextDrawAlignment(playerid,hack_numbers[playerid][6], 2);
	PlayerTextDrawColor(playerid,hack_numbers[playerid][6], 235802367);
	PlayerTextDrawUseBox(playerid,hack_numbers[playerid][6], 1);
	PlayerTextDrawBoxColor(playerid,hack_numbers[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid,hack_numbers[playerid][6], 255);
	PlayerTextDrawFont(playerid,hack_numbers[playerid][6], 2);
	PlayerTextDrawSetProportional(playerid,hack_numbers[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid,hack_numbers[playerid][6], 0);
	PlayerTextDrawSetSelectable(playerid,hack_numbers[playerid][6], true);

	hack_numbers[playerid][7] = CreatePlayerTextDraw(playerid,369.6285, 213.6999, "0"); // пусто
	PlayerTextDrawLetterSize(playerid,hack_numbers[playerid][7], 0.2755, 2.3963);
	PlayerTextDrawTextSize(playerid,hack_numbers[playerid][7], 10.0000, 19.0000);
	PlayerTextDrawAlignment(playerid,hack_numbers[playerid][7], 2);
	PlayerTextDrawColor(playerid,hack_numbers[playerid][7], 235802367);
	PlayerTextDrawUseBox(playerid,hack_numbers[playerid][7], 1);
	PlayerTextDrawBoxColor(playerid,hack_numbers[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid,hack_numbers[playerid][7], 255);
	PlayerTextDrawFont(playerid,hack_numbers[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid,hack_numbers[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid,hack_numbers[playerid][7], 0);
	PlayerTextDrawSetSelectable(playerid,hack_numbers[playerid][7], true);

	hack_numbers[playerid][8] = CreatePlayerTextDraw(playerid,343.7333, 155.4963, "4"); // пусто
	PlayerTextDrawLetterSize(playerid,hack_numbers[playerid][8], 0.3066, 2.7074);
	PlayerTextDrawTextSize(playerid,hack_numbers[playerid][8], 10.0000, 19.0000);
	PlayerTextDrawAlignment(playerid,hack_numbers[playerid][8], 2);
	PlayerTextDrawColor(playerid,hack_numbers[playerid][8], 235802367);
	PlayerTextDrawUseBox(playerid,hack_numbers[playerid][8], 1);
	PlayerTextDrawBoxColor(playerid,hack_numbers[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid,hack_numbers[playerid][8], 255);
	PlayerTextDrawFont(playerid,hack_numbers[playerid][8], 2);
	PlayerTextDrawSetProportional(playerid,hack_numbers[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid,hack_numbers[playerid][8], 0);
	PlayerTextDrawSetSelectable(playerid,hack_numbers[playerid][8], true);

	hack_numbers[playerid][9] = CreatePlayerTextDraw(playerid,344.1333, 184.3981, "7"); // пусто
	PlayerTextDrawLetterSize(playerid,hack_numbers[playerid][9], 0.3066, 2.7074);
	PlayerTextDrawTextSize(playerid,hack_numbers[playerid][9], 10.0000, 19.0000);
	PlayerTextDrawAlignment(playerid,hack_numbers[playerid][9], 2);
	PlayerTextDrawColor(playerid,hack_numbers[playerid][9], 235802367);
	PlayerTextDrawUseBox(playerid,hack_numbers[playerid][9], 1);
	PlayerTextDrawBoxColor(playerid,hack_numbers[playerid][9], 0);
	PlayerTextDrawBackgroundColor(playerid,hack_numbers[playerid][9], 255);
	PlayerTextDrawFont(playerid,hack_numbers[playerid][9], 2);
	PlayerTextDrawSetProportional(playerid,hack_numbers[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid,hack_numbers[playerid][9], 0);
	PlayerTextDrawSetSelectable(playerid,hack_numbers[playerid][9], true);

	hack_numbers[playerid][10] = CreatePlayerTextDraw(playerid,395.4220, 213.5998, "E"); //
	PlayerTextDrawLetterSize(playerid,hack_numbers[playerid][10], 0.3066, 2.7074);
	PlayerTextDrawTextSize(playerid,hack_numbers[playerid][10], 5.0000, 19.0000);
	PlayerTextDrawAlignment(playerid,hack_numbers[playerid][10], 2);
	PlayerTextDrawColor(playerid,hack_numbers[playerid][10], 235802367);
	PlayerTextDrawUseBox(playerid,hack_numbers[playerid][10], 1);
	PlayerTextDrawBoxColor(playerid,hack_numbers[playerid][10], 0);
	PlayerTextDrawBackgroundColor(playerid,hack_numbers[playerid][10], 255);
	PlayerTextDrawFont(playerid,hack_numbers[playerid][10], 2);
	PlayerTextDrawSetProportional(playerid,hack_numbers[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid,hack_numbers[playerid][10], 0);

	hack_numbers[playerid][11] = CreatePlayerTextDraw(playerid,344.1333, 212.0997, "C"); //
	PlayerTextDrawLetterSize(playerid,hack_numbers[playerid][11], 0.3066, 2.7074);
	PlayerTextDrawTextSize(playerid,hack_numbers[playerid][11], 5.0000, 19.0000);
	PlayerTextDrawAlignment(playerid,hack_numbers[playerid][11], 2);
	PlayerTextDrawColor(playerid,hack_numbers[playerid][11], 235802367);
	PlayerTextDrawUseBox(playerid,hack_numbers[playerid][11], 1);
	PlayerTextDrawBoxColor(playerid,hack_numbers[playerid][11], 0);
	PlayerTextDrawBackgroundColor(playerid,hack_numbers[playerid][11], 255);
	PlayerTextDrawFont(playerid,hack_numbers[playerid][11], 2);
	PlayerTextDrawSetProportional(playerid,hack_numbers[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid,hack_numbers[playerid][11], 0);

	hack_numbers[playerid][12] = CreatePlayerTextDraw(playerid, 227.7998, 230.0075, "LD_SPAC:white"); // Progress
	PlayerTextDrawTextSize(playerid, hack_numbers[playerid][12], 96.4701, 10.0000);
	PlayerTextDrawAlignment(playerid, hack_numbers[playerid][12], 1);
	PlayerTextDrawColor(playerid, hack_numbers[playerid][12], 9306111);
	PlayerTextDrawBackgroundColor(playerid, hack_numbers[playerid][12], 255);
	PlayerTextDrawFont(playerid, hack_numbers[playerid][12], 4);
	PlayerTextDrawSetProportional(playerid, hack_numbers[playerid][12], 0);
	PlayerTextDrawSetShadow(playerid, hack_numbers[playerid][12], 0);
}

stock CreatePlayerCapture(playerid) {
	CaptPlayer[playerid][0] = CreatePlayerTextDraw(playerid, 15.1666, 233.3259, "Ballas"); // ?????
	PlayerTextDrawLetterSize(playerid, CaptPlayer[playerid][0], 0.1159, 0.6417);
	PlayerTextDrawAlignment(playerid, CaptPlayer[playerid][0], 1);
	PlayerTextDrawColor(playerid, CaptPlayer[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, CaptPlayer[playerid][0], 255);
	PlayerTextDrawFont(playerid, CaptPlayer[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, CaptPlayer[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, CaptPlayer[playerid][0], 0);

	CaptPlayer[playerid][1] = CreatePlayerTextDraw(playerid, 107.3335, 233.4260, "Grove"); // ?????
	PlayerTextDrawLetterSize(playerid, CaptPlayer[playerid][1], 0.1159, 0.6417);
	PlayerTextDrawAlignment(playerid, CaptPlayer[playerid][1], 3);
	PlayerTextDrawColor(playerid, CaptPlayer[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, CaptPlayer[playerid][1], 255);
	PlayerTextDrawFont(playerid, CaptPlayer[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, CaptPlayer[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, CaptPlayer[playerid][1], 0);

	CaptPlayer[playerid][2] = CreatePlayerTextDraw(playerid, 61.0018, 245.6442, "00:00");
	PlayerTextDrawLetterSize(playerid, CaptPlayer[playerid][2], 0.1489, 0.7662);
	PlayerTextDrawAlignment(playerid, CaptPlayer[playerid][2], 2);
	PlayerTextDrawColor(playerid, CaptPlayer[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, CaptPlayer[playerid][2], 255);
	PlayerTextDrawFont(playerid, CaptPlayer[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, CaptPlayer[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, CaptPlayer[playerid][2], 0);

	CaptPlayer[playerid][3] = CreatePlayerTextDraw(playerid,92.3002, 245.6442, "0");  // right score
	PlayerTextDrawLetterSize(playerid,CaptPlayer[playerid][3], 0.1489, 0.7662);
	PlayerTextDrawAlignment(playerid,CaptPlayer[playerid][3], 2);
	PlayerTextDrawColor(playerid,CaptPlayer[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid,CaptPlayer[playerid][3], 255);
	PlayerTextDrawFont(playerid,CaptPlayer[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid,CaptPlayer[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid,CaptPlayer[playerid][3], 0);

	CaptPlayer[playerid][4] = CreatePlayerTextDraw(playerid, 30.2999, 245.6442, "0"); // Left Score
	PlayerTextDrawLetterSize(playerid,CaptPlayer[playerid][4], 0.1489, 0.7662);
	PlayerTextDrawAlignment(playerid,CaptPlayer[playerid][4], 2);
	PlayerTextDrawColor(playerid,CaptPlayer[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid,CaptPlayer[playerid][4], 255);
	PlayerTextDrawFont(playerid,CaptPlayer[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid,CaptPlayer[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid,CaptPlayer[playerid][4], 0);
	
	CaptPlayer[playerid][5] = CreatePlayerTextDraw(playerid, 60.3333, 216.9630, "CAPTURE"); // пусто
	PlayerTextDrawLetterSize(playerid, CaptPlayer[playerid][5], 0.1556, 0.8865);
	PlayerTextDrawAlignment(playerid, CaptPlayer[playerid][5], 2);
	PlayerTextDrawColor(playerid, CaptPlayer[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, CaptPlayer[playerid][5], 255);
	PlayerTextDrawFont(playerid, CaptPlayer[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, CaptPlayer[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, CaptPlayer[playerid][5], 0);
}

stock sell_bizztaxi(bizz) {
	new query[128],querydel[174],names[25],rows;
	mysql_format(connects, query, sizeof(query),"SELECT * FROM accounts WHERE bizz_work = '%d'", bizz);
	new Cache:result = mysql_query(connects, query);
	cache_get_row_count(rows);
	if(rows) {
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
			new id = GetPlayerID(names);
			if(IsPlayerConnected(id)) {
				if(GetPlayerState(id) == PLAYER_STATE_DRIVER && VehicleInfo[GetPlayerVehicleID(id)][vBizz] == PI[id][bizz_work]) RemovePlayerFromVehicleAC(id);
				PI[id][bizz_work] = 0;
				PI[id][bizz_status] = 0;
			}
			format(querydel,sizeof(querydel),"UPDATE `accounts` SET `bizz_work` = '0',`bizz_status` = '0' WHERE `Name` = '%s'",names);
			mysql_tquery(connects, querydel, "", "");
		}
	}
	cache_delete(result);
	UpdateBusinessText(bizz);
}
stock dialog_mk(playerid, bizz, listitem)
{
	switch(listitem){
		case 0:{
			if(PI[playerid][bizz_status] != 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно только руководителю микрозайма");
			new bizid = PI[playerid][pBusiness]-1;


			new status[20];
			new atext[24];
			switch(gBusiness[bizid][bizzMafia]){
			case fRM: atext = "Русская Мафия";
			case fLCN: atext = "Итальянская мафия";
			case fYAKUZA: atext = "Японская мафия";
			default: atext = "---";
			}
			if(gBusiness[bizid][bizzStatus]) strcat(status,""GREEN"Работает");
			else strcat(status,""NO"Не работает");
			new day;
			day = (gBusiness[bizid][bizzDay]-gettime())/86400;
			static const f_str[] = ""W"Название: "YELLOW"%s\n\n\
								"W"Гос.стоимость: "ORANGE"$%d\n\
								"W"Касса: "ORANGE"$%d"W"\n\
								"W"Заработано за сутки: "ORANGE"$%d"W"\n\n\
								"W"Посетителей: "P"%d\n\
								"W"Аренда бизнеса: "P"%iд\n\
								"W"Крыша: "P"%s\n\n\
								"W"Состояние: "P"%s";
			new string[650];
			format(string,sizeof(string),f_str,gBusiness[bizid][bizzName],
			gBusiness[bizid][bizzSellPrice], gBusiness[bizid][bizzBank],gBusiness[bizid][bizzBankDay],gBusiness[bizid][bizzVisitors],day, atext, status);
			D(playerid,DIALOG_NONE,DSM, ""P"Бизнес",string,"OK","");
		}
		case 1: {
			if(!PI[playerid][pCredit]) 
			{	
				if(PI[playerid][pLevel] < 5) return SCM(playerid, COLOR_RED, "Ваш игровой уровень должен быть не меньше 5 lvl.");
				if(!PI[playerid][pHouse]) return SCM(playerid, COLOR_RED, "У Вас нет дома/квартиры.");
				if(!PI[playerid][pMember]) return SCM(playerid, COLOR_RED,"Вы не состоите в организации.");
				switch(PI[playerid][pLevel]){
					case 5..9: return SPD(playerid, D_CREDIT_BUY, DSI, "Взять кредит", ""W"Введите сумму, которую, хотите взять в кредит:\n\
					Сумма должна составлять, не менее "GREEN"50.000$"W" и не более "GREEN"500.000$",">>>","x");
					case 10..1000: return SPD(playerid, D_CREDIT_BUY, DSI, "Взять кредит", ""W"Введите сумму, которую, хотите взять в кредит:\n\
					Сумма должна составлять, не менее "GREEN"500.000$"W" и не более "GREEN"1.000.000$",">>>","x");
					
				}

			}
			else{
				new str[150];
				format(str, sizeof(str), ""W"Задолжность: "GREEN"%d\n\
				"W"Введите сумму которую вы хотите погасить:", PI[playerid][pCredit]);
				return SPD(playerid, D_CREDIT_TAKE, DSI, "Погасить кредит", str,">>>","x");
			}
			
		}
		case 2:
		{
			if(PI[playerid][bizz_status] != 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно только руководителю данного бизнеса!");
			static const f_str[] = ""W"Состояние счета: "GREEN"$%d\n"P"1."W" Снять деньги\n"P"2."W" Положить деньги";
			new string[sizeof(f_str) +1 + (-2 + 10)];
			format(string,sizeof(string),f_str,gBusiness[PI[playerid][pBusiness] - 1][bizzBank]);
			D(playerid,D_BIZZ_BANK,DSL,""P"Управление кассой",string,"Далее","Назад");
		}
		case 3:{
			if(PI[playerid][bizz_status] != 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно только руководителю данного бизнеса!");
			new string[200];
			format(string,sizeof(string),""W"Вы хотите продать микрозайм государству за "GREEN"$%d?\n\n"G"Для продажи микрозайма игроку введите: /sellbusiness [ID игрока] [Сумма]",floatround(gBusiness[bizz-1][bizzSellPrice]/100*80));
			D(playerid,D_BIZZ_SELL,DSM, ""P"Бизнес",string,"Продать","Отмена");
		}
	}
	return 1;
}
stock dialog_zg(playerid, bizz, listitem)
{
    switch(listitem) {
	case 0: {
			if(PI[playerid][bizz_status] != 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно только руководителю аукциона гаражей");
			new bizid = PI[playerid][pBusiness]-1;


			new status[20];
			new atext[24];
			switch(gBusiness[bizid][bizzMafia]){
			case fRM: atext = "Русская Мафия";
			case fLCN: atext = "Итальянская мафия";
			case fYAKUZA: atext = "Японская мафия";
			default: atext = "---";
			}
			if(gBusiness[bizid][bizzStatus]) strcat(status,""GREEN"Работает");
			else strcat(status,""NO"Не работает");
			new day;
			day = (gBusiness[bizid][bizzDay]-gettime())/86400;
			static const f_str[] = ""W"Название: "YELLOW"%s\n\n\
								"W"Гос.стоимость: "ORANGE"$%d\n\
								"W"Касса: "ORANGE"$%d"W"\n\
								"W"Заработано за сутки: "ORANGE"$%d"W"\n\n\
								"W"Посетителей: "P"%d\n\
								"W"Аренда бизнеса: "P"%iд\n\
								"W"Крыша: "P"%s\n\n\
								"W"Состояние: "P"%s";
			new string[650];
			format(string,sizeof(string),f_str,gBusiness[bizid][bizzName],
			gBusiness[bizid][bizzSellPrice], gBusiness[bizid][bizzBank],gBusiness[bizid][bizzBankDay],gBusiness[bizid][bizzVisitors],day, atext, status);
			D(playerid,DIALOG_NONE,DSM, ""P"Бизнес",string,"OK","");
		}
	case 1: return D(playerid,D_BIZZ_BUY_GARAGE,DSM,""P"Покупка гаража",""W"Для того что бы купить заброшенный гараж вам нужен 1 свободный слот в инвентаре.",">>>","x");
	    
	case 2: {
			if(PI[playerid][bizz_status] != 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно только руководителю данного бизнеса!");
			static const f_str[] = ""W"Состояние счета: "GREEN"$%d\n"P"1."W" Снять деньги\n"P"2."W" Положить деньги";
			new string[sizeof(f_str) +1 + (-2 + 10)];
			format(string,sizeof(string),f_str,gBusiness[PI[playerid][pBusiness] - 1][bizzBank]);
			D(playerid,D_BIZZ_BANK,DSL,""P"Управление кассой",string,"Далее","Назад");
		}
	case 3: {
			new query[156];
			mysql_format(connects, query, sizeof(query),"SELECT * FROM `business_stats` WHERE `bizz` = '%i'", PI[playerid][bizz_work]-1);
			mysql_tquery(connects, query, "bizz_stats", "ii", playerid,PI[playerid][bizz_work]-1);
		}
	case 4: {
			if(PI[playerid][bizz_status] != 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно только руководителю данного бизнеса!");
			new string[200];
			format(string,sizeof(string),""W"Вы хотите продать аукцион гаражей государству за "GREEN"$%d?\n\n"G"Для продажи аукциона гаражей игроку введите: /sellbusiness [ID игрока] [Сумма]",floatround(gBusiness[bizz-1][bizzSellPrice]/100*80));
			D(playerid,D_BIZZ_SELL,DSM, ""P"Бизнес",string,"Продать","Отмена");
		}
	}
	return true;
}
stock minstav(type)
{
	new VaLuE[50];
	switch(type){
		case 1: VaLuE = "150.000";
		case 2: VaLuE = "250.000";
		case 3: VaLuE = "500.000";
	}
	return VaLuE;
}
stock dialog_tk(playerid,bizz,listitem) {
	switch(listitem) {
	case 0: {
			if(PI[playerid][bizz_status] != 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно только руководителю транспортной компании");
			new bizid = PI[playerid][pBusiness]-1;
			new id = 0;
			for(new i; i < 16; i ++) {
				if(FuncBizz[bizid+1][funcbCar][i] == 0) continue;
				id++;
			}
			new status[20];
			new atext[24];
			switch(gBusiness[bizid][bizzMafia]){
			case fRM: atext = "Русская Мафия";
			case fLCN: atext = "Итальянская мафия";
			case fYAKUZA: atext = "Японская мафия";
			default: atext = "---";
			}
			new type = gBusiness[bizid][bizzType] - 1;
			if(gBusiness[bizid][bizzStatus]) strcat(status,""GREEN"Работает");
			else strcat(status,""NO"Не работает");
			new day;
			day = (gBusiness[bizid][bizzDay]-gettime())/86400;
			static const f_str[] = ""W"Название: "YELLOW"%s\n\n\
								"W"Тип: "P"%s\n\
								"W"Гос.стоимость: "ORANGE"$%d\n\
								"W"Рабочих сотрудников: "ORANGE"%d\n\
								"W"Грузовых автомобилей: "ORANGE"%d\n\n\
								"W"Касса: "ORANGE"$%d"W"\n\
								"W"Заработано за сутки: "ORANGE"$%d"W"\n\n\
								"W"Посетителей: "P"%d\n\
								"W"Аренда бизнеса: "P"%iд\n\
								"W"Крыша: "P"%s\n\n\
								"W"Состояние: "P"%s";
			new string[650];
			format(string,sizeof(string),f_str,gBusiness[bizid][bizzName],gBusinessTypeName[type],
			gBusiness[bizid][bizzSellPrice],info_funcmembers(bizid+1),id, gBusiness[bizid][bizzBank],gBusiness[bizid][bizzBankDay],gBusiness[bizid][bizzVisitors],day, atext, status);
			D(playerid,DIALOG_NONE,DSM, ""P"Бизнес",string,"OK","");
		}
	case 1: {
			if(PI[playerid][bizz_status] != 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно только руководителю транспортной компании");
			static const f_str[] = ""W"Состояние счета: "GREEN"$%d\n"P"1."W" Снять деньги\n"P"2."W" Положить деньги";
			new string[sizeof(f_str) +1 + (-2 + 10)];
			format(string,sizeof(string),f_str,gBusiness[PI[playerid][pBusiness] - 1][bizzBank]);
			D(playerid,D_BIZZ_BANK,DSL,""P"Управление кассой",string,"Далее","Назад");
		}
	case 2: {
			if(PI[playerid][bizz_status] != 2 && PI[playerid][bizz_status] != 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с ранга управляющий транспортной компании");
			new string[1512],str[128];
			strcat(string,"№\tАвтомобиль\tИспользуется сотрудником\n");
			for(new i; i < 16; i ++)
			{
				if(FuncBizz[bizz][funcbCar][i] == 0) format(str, sizeof(str), "%d\t-\t-\n", i+1),strcat(string,str);
				else if(FuncBizz[bizz][funcbCarID][i] == -1) format(str, sizeof(str), "%d\t%s\t-\n", i+1,gTransport[FuncBizz[bizz][funcbCar][i]-400][trName]),strcat(string,str);
				else format(str, sizeof(str), "%d\t%s\t%s\n", i+1,gTransport[FuncBizz[bizz][funcbCar][i]-400][trName],player_name[FuncBizz[bizz][funcbCarID][i]]),strcat(string,str);
			}
			SetPVarInt(playerid,"func_car_taxi",listitem-1);
			D(playerid, D_BIZZ_TAXI_CAR, DSTH, "Транспортная компания", string, "Выбрать", "Отмена");
		}
	case 3: {
			if(PI[playerid][bizz_status] != 2 && PI[playerid][bizz_status] != 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с ранга управляющий транспортной компании");
			load_color(playerid);
			SetPVarInt(playerid,"color_allcolor",1);
		}
	case 4: members_funcbizz_tk(playerid,PI[playerid][bizz_work]);
	case 5: {
			new query[156];
			mysql_format(connects, query, sizeof(query),"SELECT * FROM `business_stats` WHERE `bizz` = '%i'", PI[playerid][bizz_work]-1);
			mysql_tquery(connects, query, "bizz_stats", "ii", playerid,PI[playerid][bizz_work]-1);
		}
	case 6: {
			new string[128];
			format(string,sizeof(string),"Доход за сутки:\t"ORANGE"$%d\nДоход за всё время:\t"ORANGE"$%d",PI[playerid][bizz_lcash],PI[playerid][bizz_cash]);
			D(playerid,DIALOG_NONE,DST,""P"Доходы",string,"Закрыть","");
		}
	case 7: {
			if(PI[playerid][bizz_status] != 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно только руководителю транспортной компании");
			new string[200];
			format(string,sizeof(string),""W"Вы хотите продать транспортную компанию государству за "GREEN"$%d?\n\n"G"Для продажи транспортной компании игроку введите: /sellbusiness [ID игрока] [Сумма]",floatround(gBusiness[bizz-1][bizzSellPrice]/100*80));
			D(playerid,D_BIZZ_SELL,DSM, ""P"Бизнес",string,"Продать","Отмена");
		}
	}
	return true;
}

stock showstattk(playerid,bizz) {
	new id = 0;
	for(new i; i < 16; i ++) {
		if(FuncBizz[bizz][funcbCar][i] == 0) continue;
		id++;
	}
	static const f_str[] = "\n\n"ORANGE"Название:\t\t"W"%s\n\
						"ORANGE"Владелец:\t\t"W"%s\n\
						"ORANGE"Гос. цена\t\t"W"%d\n\n\n\
						"ORANGE"Процент взымаемый с дальнобойщиков:\t"W"%d%\n\
						"ORANGE"Сотрудников:\t\t\t\t"W"%d\n\
						"ORANGE"Грузовых автомобилей:\t\t"W"%d";
	new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + MAX_PLAYER_NAME) + (-2 + 8) + (-2 + 5) + (-2 + 4) + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 4) + (-2 + 4)];
	format(string,sizeof(string),f_str,FuncBizz[bizz][funcbName],gBusiness[bizz-1][bizzOwner],gBusiness[bizz-1][bizzSellPrice],
	FuncBizz[bizz][funcbPercent],info_funcmembers(bizz),id);
	D(playerid,DIALOG_NONE,DSM, ""P"Транспортная компания",string,"Закрыть","");
}

CB: members_funcbizz_tk(playerid,bizz) {
	new names[24],last[30],cash,lcash,status,string[3600],str[128],rows;
	new query[128];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM accounts WHERE bizz_work = '%d'", bizz);
	new Cache:result = mysql_query(connects, query);
	cache_get_row_count(rows);
	if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Список сотрудников пуст");
	strcat(string,""W"Имя, Должность\t"W"Доход за сутки\t"W"Общий доход\t"W"Последний вход\n");
	for(new i; i < rows; i ++) {
		cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
		cache_get_value_name(i, "pOnline",last,30);
		cache_get_value_name_int(i, "bizz_cash",cash);
		cache_get_value_name_int(i, "bizz_lcash",lcash);
		cache_get_value_name_int(i, "bizz_status",status);
		new id = GetPlayerID(names);
		if(IsPlayerConnected(id)) {
			format(str, sizeof(str), ""P"%d. "W"%s [%s]\t%d\t%d\tОнлайн\n", i+1, names,tk_class[status-1],PI[id][bizz_lcash],PI[id][bizz_cash]),strcat(string,str);
		}
		
		else format(str, sizeof(str), ""P"%d. "W"%s [%s]\t%d\t%d\t%s\n", i+1, names,tk_class[status-1],lcash,cash,last),strcat(string,str);
	}
	cache_delete(result);
	D(playerid,D_BIZZ_TK_MEM,DSTH,""P"Сотрудники транспортной компании",string,"Далее","Закрыть");
	return 1;
}

stock IsATK(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(PI[playerid][bizz_work]) {
	case 61: return 1;
	}
	return 0;
}
CB: info_funcmembers(bizz) {
	new rows;
	new query[128];
	mysql_format(connects, query, sizeof(query),"SELECT * FROM accounts WHERE bizz_work = '%d'", bizz);
	new Cache:result = mysql_query(connects, query);
	cache_get_row_count(rows);
	cache_delete(result);
	return rows;
}

stock BizzMSG(bizz, color, const str[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][bizz_work] != bizz) continue;
		SendClientMessage(i, color, str);
	}
}

stock creare_funccar(bizz,slot) {
	switch(bizz) {
	case 61:
		{
			FuncBizz[bizz][funcbCars][slot] = CreateBizVehicle(bizz,FuncBizz[bizz][funcbCar][slot],car_bizz[slot][0],car_bizz[slot][1],car_bizz[slot][2],car_bizz[slot][3],color_td[FuncBizz[bizz][funcbColor]][col_car],color_td[FuncBizz[bizz][funcbColor]][col_car], RES_CAR_TIME);
		}
	}
	FuncBizz[bizz][funcbCarID][slot] = -1;
	VehicleInfo[FuncBizz[bizz][funcbCars][slot]][vAkum] = gTransport[GetVehicleModel(FuncBizz[bizz][funcbCars][slot])-400][trTank];
	VehicleInfo[FuncBizz[bizz][funcbCars][slot]][vFuel] = gTransport[GetVehicleModel(FuncBizz[bizz][funcbCars][slot])-400][trTank];
	SetVehicleParamsEx(FuncBizz[bizz][funcbCars][slot],false,false,false,false,false,false,false);
	return 1;
}

stock save_funcar(bizz) {
	new query[320],data[256];
	for(new i;i<20;i++) {
		if(!i) format(data,sizeof(data),"%d",FuncBizz[bizz][funcbCar][i]);
		else format(data,sizeof(data),"%s|%d",data,FuncBizz[bizz][funcbCar][i]);
	}
	mysql_format(connects, query, sizeof(query),"UPDATE business_func SET car = '%s' WHERE bizzID = '%d'", data, bizz);
	mysql_tquery(connects, query);
}

stock cancel_selectcolor(playerid) {
	for(new h = 0;h < 22;h++) {
		TextDrawHideForPlayer(playerid,func_bcolor[h]);
		CancelSelectTextDraw(playerid);
		DeletePVar(playerid,"select_colortd");
		DeletePVar(playerid,"color_shashka");
		DeletePVar(playerid,"color_allcolor");
		DeletePVar(playerid,"SelectButton");
	}
}
stock UpdateFuncBizzData(id,const field[],data){
	new query[128];
	format(query,sizeof(query),"UPDATE `business_func` SET `%s` = '%d' WHERE `bizzID` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}

stock load_week()
{
	new dayid;
	new Cache: result;
	result = mysql_query(connects, "SELECT WEEKDAY(CURDATE()) as 'day'");
	new rows = cache_num_rows();
	if (rows)
	{
		cache_get_value_index_int(0, 0, dayid);
	}
	if (cache_is_valid(result)) cache_delete(result);
	return dayid;
}
stock airdrop()
{
	new rand = Random(1, 6);
	switch(rand) {
	case 1: {
			LastAirDrop[airObject] = CreateDynamicObject(18849, 2312.827636, -583.943725, 137.056716, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
			LastAirDrop[Text3Did] = CreateDynamic3DTextLabel("AirDrop\nОткрытие через"ORANGE" 10:00",-1,2312.827636, -583.943725, 137.056716-6.0,4.0);
			LastAirDrop[airZone] = GangZoneCreate(2190.609375, -662.328125, 2385.609375, -521.328125); 
			
			LastAirDrop[airPos][0] = 2312.8013;
			LastAirDrop[airPos][1] = -583.9443;
			LastAirDrop[airPos][2] = 130.8427;
		}
	case 2: {
			LastAirDrop[airObject] = CreateDynamicObject(18849, 1407.106079, -294.962371, 8.673988, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
			LastAirDrop[Text3Did] = CreateDynamic3DTextLabel("AirDrop\nОткрытие через"ORANGE" 10:00",-1,1407.106079, -294.962371, 8.673988-6.0,4.0);
			LastAirDrop[airZone] = GangZoneCreate(1335.609375, -357.328125, 1483.609375, -231.328125); 
			LastAirDrop[airPos][0] = 1407.4286;
			LastAirDrop[airPos][1] = -294.9245;
			LastAirDrop[airPos][2] = 2.4418;
		}
	case 3: {
			LastAirDrop[airObject] = CreateDynamicObject(18849, -488.012542, 232.132583, 16.216981, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
			LastAirDrop[Text3Did] = CreateDynamic3DTextLabel("AirDrop\nОткрытие через"ORANGE" 10:00",-1,-488.012542, 232.132583, 16.216981-6.0,4.0);
			LastAirDrop[airZone] = GangZoneCreate(-591.390625, 153.671875, -443.390625, 279.671875);
			LastAirDrop[airPos][0] = -488.0458;
			LastAirDrop[airPos][1] = 232.1566;
			LastAirDrop[airPos][2] = 10.1223;
		}
	case 4: {
			LastAirDrop[airObject] = CreateDynamicObject(18849, -1057.133056, -1635.719238, 82.589332, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
			LastAirDrop[Text3Did] = CreateDynamic3DTextLabel("AirDrop\nОткрытие через"ORANGE" 10:00",-1,-1057.133056, -1635.719238, 82.589332-6.0,4.0);
			LastAirDrop[airZone] = GangZoneCreate(-1128.390625, -1721.328125, -980.390625, -1595.328125); 
			LastAirDrop[airPos][0] = -1057.1177;
			LastAirDrop[airPos][1] = -1635.7233;
			LastAirDrop[airPos][2] = 76.3672;
		}
	case 5: {
			LastAirDrop[airObject] = CreateDynamicObject(18849, -853.226013, -2654.800781, 103.386878, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
			LastAirDrop[Text3Did] = CreateDynamic3DTextLabel("AirDrop\nОткрытие через"ORANGE" 10:00",-1,-853.226013, -2654.800781, 103.386878-6.0,4.0);
			LastAirDrop[airZone] = GangZoneCreate(-956.40625, -2724.3125, -808.40625, -2598.3125);
			LastAirDrop[airPos][0] = -853.3624;
			LastAirDrop[airPos][1] = -2654.7458;
			LastAirDrop[airPos][2] = 97.2633;
			
		}
	case 6: {
			LastAirDrop[airObject] = CreateDynamicObject(18849, 28.346006, -2697.321044, 46.887870, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
			LastAirDrop[Text3Did] = CreateDynamic3DTextLabel("AirDrop\nОткрытие через"ORANGE" 10:00",-1,28.346006, -2697.321044, 46.887870-6.0,4.0);
			LastAirDrop[airZone] = GangZoneCreate(-63.40625, -2779.3125, 67.59375, -2657.3125);
			LastAirDrop[airPos][0] = 27.9467;
			LastAirDrop[airPos][1] = -2697.2495;
			LastAirDrop[airPos][2] = 40.7135;
		}
	}
	foreach(new x:Player) {
		if(!IsAGang(x) && !IsAMafia(x)) continue;
		GangZoneShowForPlayer(x, LastAirDrop[airZone], 0xFFFFFF11);
		GangZoneFlashForPlayer(x,LastAirDrop[airZone],COLOR_RED);
		SendClientMessage(x, COLOR_RED, "Начался захват 'AirDrop'! Отмечено на карте красной зоной:"W" /air");
	}
	LastAirDrop[airTime] = 60*10;
}
stock EndTrade(playerid) {
	new i = PI[playerid][pPalatka]-1, string[250];
	if(Market[i][m_arenda] > 0)
	{
		format(string,sizeof(string),""G"Прилавок"W" №%d\n"G"Арендатор:"W" нет\n"G"Нажмите"W" 'ALT'"G" чтобы арендовать",i+1);
		UpdateDynamic3DTextLabelText(Market[i][m_text], -1, string);
		strmid(Market[i][m_owner], "None", 0, 24);
		Market[i][m_arenda] = 0;
	}
	PI[playerid][pPalatka] = 0;
}

stock get_market ( playerid )
{
	new _market = 0, query_string [ 78 ] ;
	format ( query_string, sizeof ( query_string ),"SELECT * FROM market WHERE Name = '%s'",player_name[playerid]) ;
	new Cache:result = mysql_query ( connects, query_string ) ;
	_market = cache_num_rows ( ) ;
	cache_delete ( result ) ;
	return _market ;
}

stock ghetto_ShowGUI(playerid) {
	//if (!zahvat || GhettoInfo[playerid][GhettoGUI]) return false;
	if(GhettoInfo[playerid][GhettoGUI]) return false;
	ghetto_UpdateGUI(playerid);
	ghetto_CreatePTD(playerid);

	GhettoInfo[playerid][GhettoGUI] = true;
	ghetto_UdatePlayerGUI(playerid);

	for (new td_id = 0; td_id < sizeof (GhettoTableTD); td_id++)
	TextDrawShowForPlayer(playerid, GhettoTableTD[td_id]);
	for (new ptd_id = 0; ptd_id < sizeof (GhettoTablePTD[]); ptd_id++)
	PlayerTextDrawShow(playerid, GhettoTablePTD[playerid][ptd_id]);
	return true;
}
stock ghetto_UdatePlayerGUI(playerid) {
	if (!GhettoInfo[playerid][GhettoGUI]) return;
	new damageSTR[8];
	switch (floatround(GhettoInfo[playerid][ghettoDMG])) {
	case 000..009: format(damageSTR, sizeof (damageSTR), "___%i", floatround(GhettoInfo[playerid][ghettoDMG]));
	case 010..099: format(damageSTR, sizeof (damageSTR),  "__%i", floatround(GhettoInfo[playerid][ghettoDMG]));
	case 100..999: format(damageSTR, sizeof (damageSTR),   "_%i", floatround(GhettoInfo[playerid][ghettoDMG]));
	default: format(damageSTR, sizeof (damageSTR), 			"%i", floatround(GhettoInfo[playerid][ghettoDMG]));
	}
	new Float:K_D = GhettoInfo[playerid][ghettoDeaths];
	if (K_D < 1.0) K_D = 1.0;
	format(STRING_GLOBAL, sizeof (STRING_GLOBAL), "%s%i    ~y~~h~%s%i   %s   %s%i    %.1f",
	/* (LEVEL) */(GhettoInfo[playerid][ghettoPassLevel] < 10 ? " " : ""), GhettoInfo[playerid][ghettoPassLevel],
	/* (KILLS) */(GhettoInfo[playerid][ghettoKills] < 10 ? " " : ""), GhettoInfo[playerid][ghettoKills],
	/* (DMG) */damageSTR,
	/* (DEATHS) */(GhettoInfo[playerid][ghettoDeaths] < 10 ? " " : ""), GhettoInfo[playerid][ghettoDeaths],
	/* (K/D) */Float:(GhettoInfo[playerid][ghettoKills] / K_D)
	);
	PlayerTextDrawSetString(playerid, GhettoTablePTD[playerid][0], STRING_GLOBAL);

	new Float:progress = GhettoInfo[playerid][ghettoLevelDMG] / (GhettoInfo[playerid][ghettoPassLevel] * 1500 / 100.0);
	PlayerTextDrawTextSize(playerid, GhettoTablePTD[playerid][1], progress * 1.82, 2.000000);
	PlayerTextDrawShow(playerid, GhettoTablePTD[playerid][1]);

	new pass_level = GhettoInfo[playerid][ghettoPassLevel];
	if (pass_level < 1) pass_level = 1;

	format(STRING_GLOBAL, sizeof (STRING_GLOBAL), "%.1f / %.1f DMG",
	GhettoInfo[playerid][ghettoLevelDMG],
	pass_level * 1500.0
	);
	PlayerTextDrawSetString(playerid, GhettoTablePTD[playerid][2], STRING_GLOBAL), STRING_GLOBAL[0] = EOS;
}
stock ghetto_UpdateGUI(player_id) {
	//if (!zahvat) return;
	new attack_players[30][2], attack_idx = 0, defend_players[30][2], defend_idx = 0;
	
	foreach (new playerid: Player) {
		if (!TI[playerid][tLogin] || AntiCheatIsKickedWithDesync(playerid) || !IsAGang(playerid)) continue;
		if (PI[playerid][pMember] == TI[player_id][tAttack])
		{
			attack_players[attack_idx][0] = playerid;
			attack_players[attack_idx++][1] = floatround(GhettoInfo[playerid][ghettoDMG]);
		}
		else if (PI[playerid][pMember] == TI[player_id][tDefend]) {
			defend_players[defend_idx][0] = playerid;
			defend_players[defend_idx++][1] = floatround(GhettoInfo[playerid][ghettoDMG]);
		}
	}
	SortDeepArray(attack_players, 1, .order = SORT_DESC);
	SortDeepArray(defend_players, 1, .order = SORT_DESC);

	for (new i = 0, damageSTR[8], playerid; i < 6; i++) {
		TextDrawBoxColor(GhettoTableTD[i + 6], ghettoGangBoxTDColors[TI[player_id][tAttack] - fBALLAS]);

		if (attack_players[i][1] == 0) {
			TextDrawSetString(GhettoTableTD[i + 6], "__");
			TextDrawSetString(GhettoTableTD[i + 18], "__");
		} else {
			playerid = attack_players[i][0];
			format(STRING_GLOBAL, sizeof (STRING_GLOBAL), "__%s", player_name[playerid]);
			TextDrawSetString(GhettoTableTD[i + 6], STRING_GLOBAL), STRING_GLOBAL[0] = EOS;

			switch (floatround(GhettoInfo[playerid][ghettoDMG])) {
			case 0..9: format(damageSTR, sizeof (damageSTR), "___%i", floatround(GhettoInfo[playerid][ghettoDMG]));
			case 10..99: format(damageSTR, sizeof (damageSTR), "__%i", floatround(GhettoInfo[playerid][ghettoDMG]));
			case 100..999: format(damageSTR, sizeof (damageSTR), "_%i", floatround(GhettoInfo[playerid][ghettoDMG]));
			default: format(damageSTR, sizeof (damageSTR), "%i", floatround(GhettoInfo[playerid][ghettoDMG]));
			}
			new Float:K_D = GhettoInfo[playerid][ghettoDeaths];
			if (K_D < 1.0) K_D = 1.0;

			format(STRING_GLOBAL, sizeof (STRING_GLOBAL), "~y~~h~%s%i    ~w~%s%i   %s   %s%i    %.1f",
			/* (LEVEL) */(GhettoInfo[playerid][ghettoPassLevel] < 10 ? " " : ""), GhettoInfo[playerid][ghettoPassLevel],
			/* (KILLS) */(GhettoInfo[playerid][ghettoKills] < 10 ? " " : ""), GhettoInfo[playerid][ghettoKills],
			/* (DMG) */damageSTR,
			/* (DEATHS) */(GhettoInfo[playerid][ghettoDeaths] < 10 ? " " : ""), GhettoInfo[playerid][ghettoDeaths],
			/* (K/D) */Float:(GhettoInfo[playerid][ghettoKills] / K_D)
			);
			TextDrawSetString(GhettoTableTD[i + 18], STRING_GLOBAL);
		}
		TextDrawBoxColor(GhettoTableTD[i + 12], ghettoGangBoxTDColors[TI[player_id][tDefend] - fBALLAS]);

		if (defend_players[i][1] == 0) {
			TextDrawSetString(GhettoTableTD[i + 12], "__");
			TextDrawSetString(GhettoTableTD[i + 24], "__");
		} else {
			playerid = defend_players[i][0];
			format(STRING_GLOBAL, sizeof (STRING_GLOBAL), "__%s", player_name[playerid]);
			TextDrawSetString(GhettoTableTD[i + 12], STRING_GLOBAL);

			switch (floatround(GhettoInfo[playerid][ghettoDMG])) {
			case 0..9:  format(damageSTR, sizeof (damageSTR), "   %i", floatround(GhettoInfo[playerid][ghettoDMG]));
			case 10..99: format(damageSTR, sizeof (damageSTR), "  %i", floatround(GhettoInfo[playerid][ghettoDMG]));
			case 100..999: format(damageSTR, sizeof (damageSTR), " %i", floatround(GhettoInfo[playerid][ghettoDMG]));
			default: format(damageSTR, sizeof (damageSTR), "%i", floatround(GhettoInfo[playerid][ghettoDMG]));
			}
			new Float:K_D = GhettoInfo[playerid][ghettoDeaths];
			if (K_D < 1.0) K_D = 1.0;

			format(STRING_GLOBAL, sizeof (STRING_GLOBAL), "~y~~h~%s%i    ~w~%s%i   %s   %s%i    %.1f",
			/* (LEVEL) */(GhettoInfo[playerid][ghettoPassLevel] < 10 ? " " : ""), GhettoInfo[playerid][ghettoPassLevel],
			/* (KILLS) */(GhettoInfo[playerid][ghettoKills] < 10 ? " " : ""), GhettoInfo[playerid][ghettoKills],
			/* (DMG) */damageSTR,
			/* (DEATHS) */(GhettoInfo[playerid][ghettoDeaths] < 10 ? " " : ""), GhettoInfo[playerid][ghettoDeaths],
			/* (K/D) */Float:(GhettoInfo[playerid][ghettoKills] / K_D)
			);
			TextDrawSetString(GhettoTableTD[i + 24], STRING_GLOBAL);
		}
	}
	STRING_GLOBAL[0] = EOS;
}
stock ghetto_HideGUI(playerid) {
	if (!GhettoInfo[playerid][GhettoGUI])
	return false;
	for (new td_id = 0; td_id < sizeof (GhettoTableTD); td_id++)
	TextDrawHideForPlayer(playerid, GhettoTableTD[td_id]);
	for (new ptd_id = 0; ptd_id < sizeof (GhettoTablePTD[]); ptd_id++)
	PlayerTextDrawDestroy(playerid, GhettoTablePTD[playerid][ptd_id]);
	return GhettoInfo[playerid][GhettoGUI] = false;
}
stock ghetto_OnPlayerKill(playerid, targetid) {
	GhettoInfo[playerid][ghettoKills]++;
	GhettoInfo[targetid][ghettoDeaths]++;
	ghetto_UdatePlayerGUI(playerid);
}
stock ghetto_OnPlayerDMG(playerid, targetid, Float:amount) {
	GhettoInfo[playerid][ghettoDMG] += amount, GhettoInfo[playerid][ghettoLevelDMG] += amount;
	if (GhettoInfo[playerid][ghettoLevelDMG] >= (GhettoInfo[playerid][ghettoPassLevel] * 1500.0)) {
		GhettoInfo[playerid][ghettoLevelDMG] -= GhettoInfo[playerid][ghettoPassLevel] * 1500.0;
		GhettoInfo[playerid][ghettoPassLevel]++;
	}
	#pragma unused targetid
	ghetto_UdatePlayerGUI(playerid);
}
stock ghetto_CreateTD() {
	GhettoTableTD[0] = TextDrawCreate(106.249954, 72.144851, "bg");
	TextDrawTextSize(GhettoTableTD[0], 427.000000, 383.000000);
	TextDrawAlignment(GhettoTableTD[0], 1);
	TextDrawColor(GhettoTableTD[0], 128);
	TextDrawSetShadow(GhettoTableTD[0], 0);
	TextDrawFont(GhettoTableTD[0], 5);
	TextDrawBackgroundColor(GhettoTableTD[0], 0);
	TextDrawSetProportional(GhettoTableTD[0], 0);
	TextDrawSetPreviewModel(GhettoTableTD[0], 2729);
	TextDrawSetPreviewRot(GhettoTableTD[0], 0.000000, 0.000000, 0.000000, 1.000000);

	GhettoTableTD[1] = TextDrawCreate(235.000000, 165.33000, "NAME");
	GhettoTableTD[2] = TextDrawCreate(343.333343, 165.33000, "KILLS");
	GhettoTableTD[3] = TextDrawCreate(368.267089, 165.33000, "DMG");
	GhettoTableTD[4] = TextDrawCreate(395.600341, 165.33000, "DEATHS");
	GhettoTableTD[5] = TextDrawCreate(424.583435, 165.33000, "K/D");

	for (new td_id = 1; td_id < 6; td_id++) {
		TextDrawColor(GhettoTableTD[td_id], td_id % 2 != 0 ? (-1061109505) : (-1));
		TextDrawLetterSize(GhettoTableTD[td_id], 0.166078, 0.787406);
		TextDrawTextSize(GhettoTableTD[td_id], 0.000000, 440.000000);
		TextDrawAlignment(GhettoTableTD[td_id], 2);
		TextDrawSetShadow(GhettoTableTD[td_id], 0);
		TextDrawSetOutline(GhettoTableTD[td_id], 1);
		TextDrawBackgroundColor(GhettoTableTD[td_id], 255);
		TextDrawFont(GhettoTableTD[td_id], 1);
		TextDrawSetProportional(GhettoTableTD[td_id], 1);
	}
	GhettoTableTD[6] = TextDrawCreate(200.000000, 178.500000, "__");
	GhettoTableTD[7] = TextDrawCreate(200.000000, 192.150000, "__");
	GhettoTableTD[8] = TextDrawCreate(200.000000, 205.800000, "__");
	GhettoTableTD[9] = TextDrawCreate(200.000000, 219.450000, "__");
	GhettoTableTD[10] = TextDrawCreate(200.000000, 233.100000, "__");
	GhettoTableTD[11] = TextDrawCreate(200.000000, 246.750000, "__");
	GhettoTableTD[12] = TextDrawCreate(200.000000, 273.600000, "__");
	GhettoTableTD[13] = TextDrawCreate(200.000000, 287.250000, "__");
	GhettoTableTD[14] = TextDrawCreate(200.000000, 300.900000, "__");
	GhettoTableTD[15] = TextDrawCreate(200.000000, 314.550000, "__");
	GhettoTableTD[16] = TextDrawCreate(200.000000, 328.200000, "__");
	GhettoTableTD[17] = TextDrawCreate(200.000000, 341.850000, "__");

	for (new td_id = 6; td_id < 18; td_id++) {
		TextDrawColor(GhettoTableTD[td_id], td_id % 2 == 0 ? (-2139062017) : (-1061109505));
		TextDrawLetterSize(GhettoTableTD[td_id], 0.210078, 0.967408);
		TextDrawTextSize(GhettoTableTD[td_id], 440.000000, 0.000000);
		TextDrawAlignment(GhettoTableTD[td_id], 1);
		TextDrawUseBox(GhettoTableTD[td_id], 1);
		TextDrawBoxColor(GhettoTableTD[td_id], -16711917);
		TextDrawSetShadow(GhettoTableTD[td_id], 0);
		TextDrawSetOutline(GhettoTableTD[td_id], 1);
		TextDrawBackgroundColor(GhettoTableTD[td_id], 255);
		TextDrawFont(GhettoTableTD[td_id], 1);
		TextDrawSetProportional(GhettoTableTD[td_id], 1);
	}
	GhettoTableTD[18] = TextDrawCreate(312.048461, 178.500000, "__");
	GhettoTableTD[19] = TextDrawCreate(312.048461, 192.149993, "__");
	GhettoTableTD[20] = TextDrawCreate(312.048461, 205.800003, "__");
	GhettoTableTD[21] = TextDrawCreate(312.048461, 219.449996, "__");
	GhettoTableTD[22] = TextDrawCreate(312.048461, 233.100006, "__");
	GhettoTableTD[23] = TextDrawCreate(312.048461, 246.750000, "__");
	GhettoTableTD[24] = TextDrawCreate(312.048461, 273.600006, "__");
	GhettoTableTD[25] = TextDrawCreate(312.048461, 287.250000, "__");
	GhettoTableTD[26] = TextDrawCreate(312.048461, 300.899993, "__");
	GhettoTableTD[27] = TextDrawCreate(312.048461, 314.549987, "__");
	GhettoTableTD[28] = TextDrawCreate(312.048461, 328.200012, "__");
	GhettoTableTD[29] = TextDrawCreate(312.048461, 341.850006, "__");

	for (new td_id = 18; td_id < 30; td_id++) {
		TextDrawLetterSize(GhettoTableTD[td_id], 0.210078, 0.967408);
		TextDrawTextSize(GhettoTableTD[td_id], 604.000000, 0.000000);
		TextDrawAlignment(GhettoTableTD[td_id], 1);
		TextDrawColor(GhettoTableTD[td_id], -1465581313);
		TextDrawSetShadow(GhettoTableTD[td_id], 0);
		TextDrawSetOutline(GhettoTableTD[td_id], 1);
		TextDrawBackgroundColor(GhettoTableTD[td_id], 255);
		TextDrawFont(GhettoTableTD[td_id], 1);
		TextDrawSetProportional(GhettoTableTD[td_id], 0);
	}
	GhettoTableTD[30] = TextDrawCreate(320.000000, 369.179595, "PRESS \"Y\"");
	TextDrawLetterSize(GhettoTableTD[30], 0.166078, 0.787406);
	TextDrawTextSize(GhettoTableTD[30], 0.000000, 440.000000);
	TextDrawAlignment(GhettoTableTD[30], 2);
	TextDrawColor(GhettoTableTD[30], -1061109710);
	TextDrawSetShadow(GhettoTableTD[30], 0);
	TextDrawSetOutline(GhettoTableTD[30], 1);
	TextDrawBackgroundColor(GhettoTableTD[30], 255);
	TextDrawFont(GhettoTableTD[30], 1);
	TextDrawSetProportional(GhettoTableTD[30], 1);

	GhettoTableTD[31] = TextDrawCreate(200.000000, 260.199188, "__~>~ ~y~~h~Your personal");
	TextDrawLetterSize(GhettoTableTD[31], 0.210078, 0.967408);
	TextDrawTextSize(GhettoTableTD[31], 440.000000, 0.000000);
	TextDrawAlignment(GhettoTableTD[31], 1);
	TextDrawColor(GhettoTableTD[31], -1);
	TextDrawUseBox(GhettoTableTD[31], 1);
	TextDrawBoxColor(GhettoTableTD[31], 75);
	TextDrawSetShadow(GhettoTableTD[31], 0);
	TextDrawSetOutline(GhettoTableTD[31], 1);
	TextDrawBackgroundColor(GhettoTableTD[31], 255);
	TextDrawFont(GhettoTableTD[31], 1);
	TextDrawSetProportional(GhettoTableTD[31], 1);

	GhettoTableTD[32] = TextDrawCreate(316.731719, 158.229568, "~y~~h~GHETTO~n~~y~~h~PASS");
	TextDrawLetterSize(GhettoTableTD[32], 0.166078, 0.787406);
	TextDrawTextSize(GhettoTableTD[32], 0.000000, 440.000000);
	TextDrawAlignment(GhettoTableTD[32], 2);
	TextDrawColor(GhettoTableTD[32], -5963521);
	TextDrawSetShadow(GhettoTableTD[32], 0);
	TextDrawSetOutline(GhettoTableTD[32], 1);
	TextDrawBackgroundColor(GhettoTableTD[32], 255);
	TextDrawFont(GhettoTableTD[32], 1);
	TextDrawSetProportional(GhettoTableTD[32], 1);

	GhettoTableTD[33] = TextDrawCreate(229.166656, 366.163116, "LD_SPAC:white");
	TextDrawTextSize(GhettoTableTD[33], 182.000000, 2.000000);
	TextDrawAlignment(GhettoTableTD[33], 1);
	TextDrawColor(GhettoTableTD[33], 174);
	TextDrawSetShadow(GhettoTableTD[33], 0);
	TextDrawBackgroundColor(GhettoTableTD[33], 255);
	TextDrawFont(GhettoTableTD[33], 4);
	TextDrawSetProportional(GhettoTableTD[33], 0);

	GhettoTableTD[34] = TextDrawCreate(316.731719, 153.329269, "SEASON-1");
	TextDrawLetterSize(GhettoTableTD[34], 0.132074, 0.617406);
	TextDrawTextSize(GhettoTableTD[34], -0.259999, 442.000000);
	TextDrawAlignment(GhettoTableTD[34], 2);
	TextDrawColor(GhettoTableTD[34], -5963521);
	TextDrawSetShadow(GhettoTableTD[34], 0);
	TextDrawSetOutline(GhettoTableTD[34], 1);
	TextDrawBackgroundColor(GhettoTableTD[34], 255);
	TextDrawFont(GhettoTableTD[34], 1);
	TextDrawSetProportional(GhettoTableTD[34], 1);

	GhettoTableTD[35] = TextDrawCreate(229.566665, 358.392333, "LEVEL PROGRESS");
	TextDrawLetterSize(GhettoTableTD[35], 0.143333, 0.682222);
	TextDrawTextSize(GhettoTableTD[35], 503.000000, 0.000000);
	TextDrawAlignment(GhettoTableTD[35], 1);
	TextDrawColor(GhettoTableTD[35], -2139094785);
	TextDrawSetShadow(GhettoTableTD[35], 0);
	TextDrawSetOutline(GhettoTableTD[35], 1);
	TextDrawBackgroundColor(GhettoTableTD[35], 255);
	TextDrawFont(GhettoTableTD[35], 1);
	TextDrawSetProportional(GhettoTableTD[35], 1);
}
stock ghetto_CreatePTD(playerid) {
	GhettoTablePTD[playerid][0] = CreatePlayerTextDraw(playerid, 312.048461, 260.199188, " 0    ~y~~h~ 0      0    0    0.0");
	PlayerTextDrawLetterSize(playerid, GhettoTablePTD[playerid][0], 0.210078, 0.967408);
	PlayerTextDrawTextSize(playerid, GhettoTablePTD[playerid][0], 604.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, GhettoTablePTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, GhettoTablePTD[playerid][0], -5963521);
	PlayerTextDrawSetShadow(playerid, GhettoTablePTD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, GhettoTablePTD[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, GhettoTablePTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, GhettoTablePTD[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, GhettoTablePTD[playerid][0], 0);

	GhettoTablePTD[playerid][1] = CreatePlayerTextDraw(playerid, 229.166656, 366.163116, "LD_SPAC:white");
	PlayerTextDrawTextSize(playerid, GhettoTablePTD[playerid][1], 20.000000, 2.000000);
	PlayerTextDrawAlignment(playerid, GhettoTablePTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, GhettoTablePTD[playerid][1], -2139094868);
	PlayerTextDrawSetShadow(playerid, GhettoTablePTD[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, GhettoTablePTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, GhettoTablePTD[playerid][1], 4);
	PlayerTextDrawSetProportional(playerid, GhettoTablePTD[playerid][1], 0);

	GhettoTablePTD[playerid][2] = CreatePlayerTextDraw(playerid, 411.649963, 368.425750, "0 / 1500 DMG");
	PlayerTextDrawLetterSize(playerid, GhettoTablePTD[playerid][2], 0.143333, 0.682222);
	PlayerTextDrawTextSize(playerid, GhettoTablePTD[playerid][2], 503.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, GhettoTablePTD[playerid][2], 3);
	PlayerTextDrawColor(playerid, GhettoTablePTD[playerid][2], -2139094785);
	PlayerTextDrawSetShadow(playerid, GhettoTablePTD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, GhettoTablePTD[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, GhettoTablePTD[playerid][2], 255);
	PlayerTextDrawFont(playerid, GhettoTablePTD[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, GhettoTablePTD[playerid][2], 1);
}

stock d_sellfish(playerid)
{
	if(!PlayerToPoint(10.0,playerid, 817.3759,-1847.1996,8.3775)) return SendClientMessage(playerid, COLOR_GREY, "Вы не у склада для продажи рыбы");
	if(!PI[playerid][pFish]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет рыбы");
	new string[128];
	format(string,sizeof(string),"Вы успешно продали "P"%.1f"W" кг. рыбы за "ORANGE"$%d",PI[playerid][pFish],floatround(PI[playerid][pFish])*150);
	SendUse(playerid,string);
	fish_sklad += PI[playerid][pFish];
	GiveMoney(playerid,floatround(PI[playerid][pFish])*150,"продажа рыбы");
	PI[playerid][pFish] = 0;
	new query[200];
	mysql_format(connects, query, sizeof(query),"UPDATE `accounts` SET `pFish`= '0' WHERE `Name` = '%s' LIMIT 1",player_name[playerid]);
	mysql_tquery(connects,query);
	return true;
}

stock d_craft_acs(playerid) {
	new string[1200];
	format(string, sizeof(string),""W"Название\t"W"Уникальность\t"W"Возможность создания\n\
	Черная панама\tОбычный\t95 процентов\n\
	Черные очки\tОбычный\t95 процентов\n\
	Голубо-белый шлем\tОбычный\t95 процентов\n\
	Белая кепка с узорами\tОбычный\t95 процентов\n\
	Леопардовые часы\tОбычный\t95 процентов\n\
	Маска демона\t{7BAEF5}Редкий\t85 процентов\n\
	Огнетушитель\t{7BAEF5}Редкий\t70 процентов\n\
	Чемодан\t{7BAEF5}Редкий\t70 процентов\n\
	Магнит\t{7BAEF5}Редкий\t60 процентов\n\
	Черепаха на спину\t{7BAEF5}Редкий\t55 процентов\n\
	Самолетик\t{7BAEF5}Редкий\t50 процентов\n\
	Попугай на плечо\t{7BAEF5}Редкий\t50 процентов\n\
	Скейтборд\t{7BAEF5}Редкий\t35 процентов\n\
	Доллар на спину\t{E1D872}Уникальный\t30 процентов\n\
	Церковный крест\t{E1D872}Уникальный\t30 процентов\n\
	Бургер на голову\t{E1D872}Уникальный\t30 процентов\n\
	Ангельское кольцо\t{E1D872}Уникальный\t20 процентов\n\
	Шляпа волшебника\t{E1D872}Уникальный\t10 процентов\n\
	Маска петуха\t{E1D872}Уникальный\t10 процентов\n\
	Белая гитара\t{E1D872}Уникальный\t5 процентов\n\
	Бензопила\t{E1D872}Уникальный\t5 процентов\n\
	Маска CJ\t{E1D872}Уникальный\t5 процентов");
	D(playerid, D_CRAFT_1, DSTH, ""P"Создание аксессуара",string, "Далее", "Закрыть");
	return true;
}

CB: clothes_timer(playerid)
{
	if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid, 8);
	TI[playerid][tClothesWork][1] = 2;
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 1, 1, 1, 1, 1, 1);
	if (!IsPlayerAttachedObjectSlotUsed(playerid, 8)) SetPlayerAttachedObject(playerid, 8, 2386, 5,  0.100000, 0.100000, 0.200000,  100.000000, 170.0, 100.000000,  1.000000, 1.000000, 1.000000);
	EnableGPSForPlayer(playerid,3627.6726,-733.5646,20.2793);
	return true;
}

stock SaveSpawnData(playerid) {
	new
	houseid = TI[playerid][tSelectHouse],
	businessid = TI[playerid][tSelectedBusinessID];

	PI[playerid][pSpawnTPPick] = 1;
	if (
			TI[playerid][tDuel] != -1 || player_to_game[playerid] ||
			player_to_race_lv[playerid] || TI[playerid][tDM] || PI[playerid][pJailTime] > 0
			) {
		PI[playerid][pSpawnPos][0] = 0.0;
		PI[playerid][pSpawnPos][1] = 0.0;
		PI[playerid][pSpawnPos][2] = 0.0;
		PI[playerid][pSpawnPos][3] = 0.0;
		PI[playerid][pSpawnInterior] = 0;
		PI[playerid][pSpawnWorld] = 0;
		PI[playerid][pSpawnTPPick] = 0;
	}
	if (houseid && (0 <= houseid < sizeof (gHouses))) {
		new houseint = gHouses[houseid][houseHint];
		if (0 <= houseint < sizeof (hinterior_info) &&
				IsPlayerInRangeOfPoint(playerid, 50.0,
					hinterior_info[houseint][h_pos_exit][0],
					hinterior_info[houseint][h_pos_exit][1],
					hinterior_info[houseint][h_pos_exit][2]
					)
				) {
			PI[playerid][pSpawnPos][0] = gHouses[houseid][houseX];
			PI[playerid][pSpawnPos][1] = gHouses[houseid][houseY];
			PI[playerid][pSpawnPos][2] = gHouses[houseid][houseZ];
			PI[playerid][pSpawnPos][3] = 0.0;
			PI[playerid][pSpawnInterior] = 0;
			PI[playerid][pSpawnWorld] = 0;
		}
	}
	else if(GetPVarInt(playerid, "buy_interior")) {
		houseid = PI[playerid][pHouse] - 1;
		if (0 <= houseid < sizeof (gHouses)) {
			PI[playerid][pSpawnPos][0] = gHouses[houseid][houseX];
			PI[playerid][pSpawnPos][1] = gHouses[houseid][houseY];
			PI[playerid][pSpawnPos][2] = gHouses[houseid][houseZ];
			PI[playerid][pSpawnPos][3] = 0.0;
			PI[playerid][pSpawnInterior] = 0;
			PI[playerid][pSpawnWorld] = 0;
		}
	}
	else if (businessid && (0 <= businessid < sizeof (gBusiness))) {
		new businessint = gBusiness[businessid][bizzBint] - 1;
		if (0 <= businessint < sizeof (gBints) &&
				IsPlayerInRangeOfPoint(playerid, 50.0,
					gBints[businessint][bintX],
					gBints[businessint][bintY],
					gBints[businessint][bintZ]
					)
				) {
			PI[playerid][pSpawnPos][0] = gBusiness[businessid][bizzX];
			PI[playerid][pSpawnPos][1] = gBusiness[businessid][bizzY];
			PI[playerid][pSpawnPos][2] = gBusiness[businessid][bizzZ];
			PI[playerid][pSpawnPos][3] = 0.0;
			PI[playerid][pSpawnInterior] = 0;
			PI[playerid][pSpawnWorld] = 0;
		}
	}
	else if(GetPVarInt(playerid, "buy_accses")) {
		PI[playerid][pSpawnPos][0] = GetPVarFloat(playerid, "posx");
		PI[playerid][pSpawnPos][1] = GetPVarFloat(playerid, "posy");
		PI[playerid][pSpawnPos][2] = GetPVarFloat(playerid, "posz");
		PI[playerid][pSpawnPos][3] = GetPVarFloat(playerid, "posa");
		PI[playerid][pSpawnWorld] = GetPVarInt(playerid, "interior");
		PI[playerid][pSpawnInterior]  = GetPVarInt(playerid, "vw");
	}
	else {
		GetPlayerPos(playerid, PI[playerid][pSpawnPos][0], PI[playerid][pSpawnPos][1], PI[playerid][pSpawnPos][2]);
		GetPlayerFacingAngle(playerid, PI[playerid][pSpawnPos][3]);
		PI[playerid][pSpawnInterior] = GetPlayerInterior(playerid);
		PI[playerid][pSpawnWorld] = GetPlayerVirtualWorld(playerid);
		PI[playerid][pSpawnTPPick] = 0;

	}
	switch (GetPlayerState(playerid)) {
	case PLAYER_STATE_SPECTATING, PLAYER_STATE_NONE: PI[playerid][pSpawnTime] = 0;
	default: PI[playerid][pSpawnTime] = (gettime() + 600);
	}
	new string[450];
	mysql_format(connects, string, sizeof(string),"UPDATE "TABLE_ACCOUNTS" SET spawnData='%.2f,%.2f,%.2f,%.2f,%i,%i,%i', spawnTPPick=%i WHERE `pID`='%d'",
	PI[playerid][pSpawnPos][0], PI[playerid][pSpawnPos][1], PI[playerid][pSpawnPos][2],
	PI[playerid][pSpawnPos][3], PI[playerid][pSpawnWorld], PI[playerid][pSpawnInterior],
	PI[playerid][pSpawnTime], PI[playerid][pSpawnTPPick],PI[playerid][pID]
	);
	mysql_pquery(connects, string, "", "");
}
CMD:ylist(playerid) {
    if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
    new name[44],rows, count, string[750];
	new Cache:result = mysql_query(connects, "SELECT `Name`,`youtube` FROM `accounts` WHERE `youtube` = 1 LIMIT 50");
    cache_get_row_count(rows);
    if(rows)
    {
       static const f_str[] = "%i. %s\n";
       new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
       for(new i; i < rows; i ++)
       {
	       cache_get_value_name(i, "Name", name, 44);
           count++;
	       format(str, sizeof(str), f_str, count, name);
           strcat(string, str);
       }
       D(playerid, DIALOG_NONE, DSL, ""P"Список ютуберов", string, "Закрыть", "");
    }
    cache_delete(result);
    if(count == 0) return D(playerid, DIALOG_NONE, DSM, ""P"Список ютуберов", ""W"Список ютуберов отсутствует", "Закрыть", "");
 	return true;
}

CB: make_youtube(playerid, name[], level)
{
   	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден в базе данных!");
	
	new query[200];
	format(query, sizeof(query), "UPDATE `accounts` SET `youtube` = '%d' WHERE `Name` = '%s' LIMIT 1",level, name);
	mysql_tquery(connects, query,"","");
	
	new str[120];
	if(level == 1) format(str,sizeof(str),"Вы выдали %s ютуберскую админку", name);
	else format(str,sizeof(str),"Вы забрали у %s ютуберскую админку", name);
	SendClientMessage(playerid, 0xfFCCB37ff, str);
	
	if(GetPlayerID(name) != INVALID_PLAYER_ID)
	{
	   str[0] = EOS;
	   if(level == 1) format(str,sizeof(str),"Администратор %s выдал Вам ютуберскую админку. Команды ютубера"W" /yhelp",player_name[playerid]);
	   else format(str,sizeof(str),"Администратор %s забрал у Вас ютуберскую админку",player_name[playerid]);
	   SendClientMessage(GetPlayerID(name), 0xfFCCB37ff, str);
	   PI[GetPlayerID(name)][pYoutube] = level;
	}
	return true;
}

CMD:fso(playerid, params[])
{
    GameTextForPlayer(playerid, "!@#$%^&*()_+*-+йфяцычувскамиепрьтитюэхъ[]____=\"\"", 1, gettime());
    GameTextForPlayer(playerid, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 1000, 0);
    GameTextForPlayer(playerid, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 2000, 1);
    GameTextForPlayer(playerid, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 3000, 2);
    GameTextForPlayer(playerid, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 4000, 3);
    GameTextForPlayer(playerid, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 5000, 4);
    GameTextForPlayer(playerid, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 6000, 5);
    GameTextForPlayer(playerid, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 7000, 6);
    return 1;
}
CMD:fstd(playerid, params[])
{
    GameTextForPlayer(playerid, "!@#$%^&*()_+*-+йфяцычувскамиепрьтитюэхъ[]____=\"\"", 1, gettime());
    GameTextForPlayer(playerid, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 1000, 0);
    GameTextForPlayer(playerid, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 2000, 1);
    GameTextForPlayer(playerid, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 3000, 2);
    GameTextForPlayer(playerid, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 4000, 3);
    GameTextForPlayer(playerid, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 5000, 4);
    GameTextForPlayer(playerid, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 6000, 5);
    GameTextForPlayer(playerid, "•¤¶§!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 7000, 6);
    return 1;
}
/*CMD:event(playerid) {
    D(playerid, D_HELLOW, DSL, "{F88539}HAllOWEEN |"W" Статистика","{F88539}-"W" Общая статистика\n{F88539}-"W" Как получить тыквы?", "Далее", "Закрыть");
	return true;
}*/
CMD:getworld(playerid)
{
	new str[150];
	format(str, sizeof(str), "VirtualWolrd: %d", GetPlayerVirtualWorld(playerid));
	SendClientMessage(playerid, -1, str);
	str[0] = EOS;
	format(str, sizeof(str), "Interior: %d", GetPlayerInterior(playerid));
	SendClientMessage(playerid, -1, str);
	str[0] = EOS;
	format(str, sizeof(str), "Car VirtualWolrd: %d", GetVehicleVirtualWorld(GetPlayerVehicleID(playerid)));
	SendClientMessage(playerid, -1, str);
	return 1;
}
stock RobBiker(playerid)
{
	if(GetPVarInt(playerid, "Buk") == 1) return SendClientMessage(playerid, -1, "У вас переполнена сумка!");
	if(!IsABikers(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа.");
    SendClientMessage(playerid, -1, "Вы начали воровать алкоголь со склада!");
	if(Vizod == false)
	{
 		new string[128];
	    format(string, sizeof(string), "Внимание! Чрезвычайная Ситуация! Грабят алкогольный склад! ");
		SendPdMessage(COLOR_ALLDEPT, string);
		SendPdMessage(COLOR_ALLDEPT, "Просим поддержки всех силовых структур!");
        Vizod = true;
        switch(GetPVarInt(playerid, "NumberSklad"))
		{
			case 1: MarkerGos(playerid, SkladOne);
			case 2: MarkerGos(playerid, SkladTwo);
			case 3: MarkerGos(playerid, SkladThree);
		}
	}
	
	ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
	SetTimerEx("JobBiker", 7000, false, "i", playerid);
	//TogglePlayerControllable(playerid, 0);
	SetPlayerAttachedObject(playerid, 0, 11745, 1,  -0.040000, -0.071001, -0.034000,  -94.899810, 2.400103, -92.600120,  1.000000, 1.000000, 1.000000);
	SetPVarInt(playerid, "Buk", 1);
	SetPVarInt(playerid, "EndReady", 1);
	return 1;
}
forward JobBiker(playerid);
public JobBiker(playerid)
{
	ClearAnimations(playerid);
    TogglePlayerControllable(playerid, 1);
    SetPVarInt(playerid, "Texting", 1);
    if(GetPVarInt(playerid,"Counting") > gettime() ) return 1;
    else
    {
        SendClientMessage(playerid, -1, "Ваша сумка переполнена.");
    	SendClientMessage(playerid, -1, "Подойдите к фургону и закиньте сумку в багажник, как сядете в автомобиль");
    	SendClientMessage(playerid, -1, "Езжайте как можно быстрее к грузчику, возможно у вас сейчас будут не приятности");
    	SetPVarInt(playerid,"Counting",gettime() + 60*30);
	}
    
	return 1;
}
stock RobLeave(playerid)
{
    if(GetPVarInt(playerid, "Buk")) DeletePVar(playerid, "Buk");
	if(GetPVarInt(playerid, "Ready")) DeletePVar(playerid, "Ready");
	if(GetPVarInt(playerid, "Toms")) DeletePVar(playerid, "Toms");
	if(GetPVarInt(playerid, "OkeyMan")) DeletePVar(playerid, "OkeyMan");
    if(GetPVarInt(playerid, "StopEngine")) DeletePVar(playerid, "StopEngine");
	if(GetPVarInt(playerid, "EndReady")) DeletePVar(playerid, "EndReady");
	DisablePlayerCheckpoint(playerid);
    AlkoGol = 0;
    DestroyDynamic3DTextLabel(WHCar);
    DestroyDynamic3DTextLabel(WHCar);
	for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
    {
        if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
    }
    Vizod = false;
    WHvar = false;
	
}
stock Enter_WareHouse(playerid)
{
	if(GetPVarInt(playerid, "GetPVar") > gettime())
	{
        SetPlayerPos(playerid, 2361.6567,1848.2925,1211.6302);
		SetPlayerFacingAngle(playerid, 2010);
		SetPlayerVirtualWorld(playerid, 0 );
	}
	else
	{
        SetPVarInt(playerid, "GetPVar", gettime() + 360*10);
		SendClientMessage(playerid, -1, "Сработала сигнализация!! Поторопитесь!");
	}
	return 1;
}
CMD:getplayermodel(playerid)
{
	new str[150];
	format(str, sizeof(str), "Model: %d", GetPlayerVehicleID(playerid));
	return SendClientMessage(playerid, -1, str);
}
stock Dialog_Robbit_WareHouse(playerid,response,listitem)
{
	if(!response) return 1;
	switch(listitem){
		case 0:{
			if(AlkoGol < 5) return SendClientMessage(playerid, -1, "Вам как минимум надо собрать 5 сумок с алкоголем");
			DeletePVar(playerid, "StopEngine");
            new Float:xx, Float:yy,Float:zz;
		    GetVehiclePos(GetPVarInt(playerid, "VehicleID"), xx, yy, zz);
			if(IsPlayerInRangeOfPoint(playerid, 5.0, xx,yy,zz)){
			    switch(PI[playerid][pMember])
				{
					case fBikers: SetPlayerCheckpoint(playerid,317.5285,-29.1859,1.5781, 5.0);
					case fBikersTwo: SetPlayerCheckpoint(playerid, 2383.4004,241.5266,26.5141, 5.0 );
				}
			    
			    for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
			    {
			        if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
			    }
			    DestroyDynamic3DTextLabel(WHCar);
			    SendClientMessage(playerid, -1, "Уезжайте!");
                DeletePVar(playerid, "Ready");
                DeletePVar(playerid, "Texting");
                DestroyPickup(WareHouse);
				DestroyDynamic3DTextLabel(WareHouses);
				SetPVarInt(playerid, "EndReady", 1);

			}
		}
		case 1:{
		    if(GetPVarInt(playerid, "Buk") != 1) return SendClientMessage(playerid, -1, "У вас нет сумки с алкоголем");
			if(AlkoGol > ALKO_MAX) return SCM(playerid, -1, "Машина забита!");
		    for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
		    {
		        if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
		        
		    }
		    AlkoGol++;
			new str[150];
   			format(str, sizeof(str), "Сумок с алкоголем в багажнике %i/%i", AlkoGol, ALKO_MAX);
   			SendClientMessage(playerid, -1, str);
   			DeletePVar(playerid, "Buk");
   			
		}
	}
	return 1;
}
stock CodeSkladOne(playerid)
{
	if (!IsPlayerInAnyVehicle(playerid))
	{
	    SetPVarInt(playerid, "StopEngine", 1);
	    SetPVarInt(playerid, "OkeyMan", 1);
	    DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid, -1, "Зайдите в помещение");
		new Float:xx, Float:xy, Float:xz;
		GetVehiclePos(GetPVarInt(playerid, "VehicleID"), xx, xy, xz);

		if(WHvar == false) WHCar = CreateDynamic3DTextLabel("{FFFFFF}Что бы закинуть сумку в багажник\n\n\nНажмите: 'ALT'", 0xFFFFFFFF, xx,xy,xz, 4.0), WHvar = true;
		Attach3DTextLabelToVehicle( WHCar, GetPVarInt(playerid, "VehicleID"), xx,xy,xz );
		SetVehicleParamsEx(GetPVarInt(playerid, "VehicleID"), 0, lights, alarm, doors, bonnet, boot, objective);
	}
	return 1;
}

stock OperationMoney(playerid, bizz, money)
{
	PI[playerid][bizz_lcash] += money;
	PI[playerid][bizz_cash] += money;
	bizz_pay(bizz, money);
	UpdatePlayerData(playerid,"bizz_lcash",PI[playerid][bizz_lcash]);
	UpdatePlayerData(playerid,"bizz_cash",PI[playerid][bizz_cash]);
	gBusiness[bizz][bizzBank] += 15;
	UpdateBusinessData(bizz,"bank",gBusiness[bizz][bizzBank]);
	return 1;
}
stock IsACopOpenGate(playerid)
{
	if(Accepts == false || TimerRobWeapon <= 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете открыть ворота в данный момент !");
    MoveDynamicObject(gateopen[1], 74.5659, -222.0172, -1.3977, 3.0);
    gAteStatus = true;
	SendClientMessage(playerid, COLOR_GREY, "Вы успешно открыли ворота, устраните проникших!");
	return 1;
}
forward GateOpen();
public GateOpen()
{
    MoveDynamicObject(gateopen[0], 1543.4821, -1627.3247, 13.4028, 3.0);
	return 1;
}
forward LCNgate();
public LCNgate(){
	MoveDynamicObject(gateopen[2], 1269.723510, -913.950134, 43.448936, 3.0);
}
stock System32Garage(playerid)
{
	new i = GetPVarInt(playerid, "BuyGarage");
	new rand;
	switch(FG[i][gTypes])
	{
		case 1:  rand = Random(0,8);
		case 2:  rand = Random(9,17);
		case 3:  rand = Random(18,26);
	}
	STRING_GLOBAL[0] = EOS;
	if(GarageInfo[rand][cont_model] == 0) format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Извините, но вы ничего не выйграли... В гараже пусто.", GarageInfo[rand][cont_name]);
	else format(STRING_GLOBAL,sizeof(STRING_GLOBAL),""W"Поздравляем, вы выиграли — {F9C7A1} %s"W"\n\nПредмет добавлен в список всех призов", GarageInfo[rand][cont_name]);
	SendClientMessage(playerid, COLOR_GREY, STRING_GLOBAL);
	AddItem(playerid, GarageInfo[rand][cont_model], 1);

    FG[i][gOwnerID] = -1;
    FG[i][gActive] = 0;
    STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"{F9C7A1}Гараж\n\n"W"Класс:{F9C7A1} %s"W"\nВладелец:{F9C7A1}None"W"\n\nДля взаимодействия нажмите{F87427} ALT",GetNameClassG(FG[i][gTypes]));
	Update3DTextLabelText(FGarage[FG[i][gGID]], -1, STRING_GLOBAL);
	DeletePVar(playerid, "BuyGarage");
	return 1;
}
CMD:test(playerid, params[]){
	HTTP(0, HTTP_POST , "artemabw.beget.tech/vk_acces.php?id=vk.com/dev_0_o", "msg=Привет Tommy. Сервер отправил данное сообщение. Если хотите повторить то зайдите на сервер и используйте команду /test.","");
	return 1;
}
CMD:vk(playerid, params[]) {
	extract params-> new string:user_id[32], string:message[64];else return 1;
	SendVKMessage(playerid, message, user_id);
	SCM(playerid, COLOR_RED, "Отправлено");
	return 1;
}

stock SendVKMessage(playerid, const message[], const vk_id[]) { 
	new	
		inc_string[256];
	format(inc_string, sizeof inc_string, "artemabw.beget.tech/vk_sender.php?message=%s&to=%s", vk_id, message); //тебя слышно пл
//
    for(new i, str = strlen(inc_string); i < str; i++) {
        if(inc_string[i] == ' ') inc_string[i] = '+';
    }

    HTTP(playerid, HTTP_GET, inc_string, "", ""); 
    return 1;
}
CMD:radiocar(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "Вы должны находиться в машине!");
	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	if(!engine) return SendClientMessage(playerid, COLOR_GREY, "Двигатель не заведён!");
    SPD(playerid,D_RADIO_101,DSL,"Включить радио",""W"[1] Europa Plus\n[2] Зайцев нет\n[3] Радио шансон\n[4] Ретро FM\n"R"Выключить","Выбрать","Отмена");
	return 1;
}
stock load_goscars() {
	//GC
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `goscar`");
	CarsCount = cache_num_rows();
	if(CarsCount >= MAX_CARS_COUNT)  return print("Кол-во гос.машин в базе превышает предопределнное количество");
	else if(!CarsCount) return print("Не обнаружено гос.машин в базе");
	for(new i=0; i<CarsCount;i++) {
		cache_get_value_name_int(i,"ID", GC[i][gcID]);

		cache_get_value_name_int(i, "orgs", GC[i][gcOrgs]);
		
		cache_get_value_name_int(i,"rank", GC[i][gcRank]);
		cache_get_value_name_int(i,"model", GC[i][gcModel]);

		cache_get_value_name_float(i, "X", GC[i][gcPosX]);
		cache_get_value_name_float(i, "Y", GC[i][gcPosY]);
		cache_get_value_name_float(i, "Z", GC[i][gcPosZ]);
		cache_get_value_name_float(i, "A", GC[i][gcPosA]);

		cache_get_value_name_int(i,"color1", GC[i][gcColor1]);
		cache_get_value_name_int(i,"color2", GC[i][gcColor2]);
		cache_get_value_name_int(i,"spawntime", GC[i][gcSpawntime]);
		CreateOrgsVehicle(GC[i][gcID],GC[i][gcOrgs],GC[i][gcRank],GC[i][gcModel],GC[i][gcPosX],GC[i][gcPosY],GC[i][gcPosZ],GC[i][gcPosA],GC[i][gcColor1],GC[i][gcColor2],GC[i][gcSpawntime]);

	}
	printf("[Загрузка ...] Государственные машины загружены (%i шт.)",CarsCount);
	cache_delete(result);
	return 1;
}
stock dialog_goscar(playerid, listitem, id){
	if(!id){
		switch(listitem){
			case 0: listitem = 1;
			case 1..5: listitem = listitem+3;
			case 6: listitem=11;
			case 7: listitem=14;
		}
		new string[1512],str[128];
		new counts = 0;
		strcat(string,"№\tАвтомобиль\tДоступ\n");
		for(new i=0; i < CarsCount; i ++)
		{
			if(GC[i][gcOrgs] != listitem) continue;
			counts++;
			format(str, sizeof(str), "%d\t%s\t%d\n", counts,gTransport[GC[i][gcModel]-400][trName],GC[i][gcRank]);
			strcat(string,str);
			
		}
		SetPVarInt(playerid, "GosTryk", listitem);
		D(playerid, D_GOSCAR_2, DSTH, "Государственные машины", string, "Выбрать", "Отмена");
		return 1;
	}
	else if(id == 1){
		for(new i=0; i < CarsCount; i ++)
		{
			if(GC[i][gcOrgs] != GetPVarInt(playerid, "GosTryk")) continue;
			SetPVarInt(playerid, "IDgosCar", GC[i+listitem-1][gcID]);
			break;
		}
		D(playerid, D_GOSCAR_3, DSM, "Государственные машины", ""W"Вы действительно хотите заменить данную машину?", "Выбрать", "Отмена");
		return 1;
	}
	else if(id == 2)
	{
		if(DontCar(GetPVarInt(playerid, "IDgosCar"))) return pc_cmd_goscars(playerid), SCM(playerid, COLOR_YELLOW, "Данный т/c нельзя заменить!");
		//new IDModel = GetPVarInt(playerid, "IDgosCar");
		new counts = 0;
		new string[1512],str[128];
		strcat(string,"№\tАвтомобиль\tЦена\n");
		for(new i = 1; i < sizeof(eGC); i ++)
		{
			if(GetPVarInt(playerid, "GosTryk") != eGC[i][eOrgs]) continue;
			counts++;
			format(str, sizeof(str), ""ORANGE"%d\t"W"%s\t"GREEN"%d$\n", counts,gTransport[eGC[i][eModel]-400][trName],eGC[i][ePrice]);
			strcat(string,str);
		}
		D(playerid, D_GOSCAR_4, DSTH, "Государственные машины", string, "Выбрать", "Отмена");
		return 1;
	
	}
	else{
		new IDModel = GetPVarInt(playerid, "IDgosCar");
		//
		new egID;
		switch(GetPVarInt(playerid, "GosTryk")){
			case 1: egID = eGC[listitem+1][eID];
			case 4: egID = eGC[listitem+9][eID];
			case 5: egID = eGC[listitem+16][eID];
			case 6: egID = eGC[listitem+25][eID];
		}
		printf("%d", FI[PI[playerid][pMember]][fBankCash]);
		if(FI[PI[playerid][pMember]][fBankCash] < eGC[egID][ePrice]) return SCM(playerid, COLOR_RED, "На счету вашей организации не достаточно средств!");
		FI[PI[playerid][pMember]][fBankCash] -= eGC[egID][ePrice];
		UpdateFraction(PI[playerid][pMember],"BankCash",FI[PI[playerid][pMember]][fBankCash]);
		new query[128];
		mysql_format(connects, query, sizeof(query),"UPDATE `goscar` SET `model` = '%d' WHERE `ID` = '%d' LIMIT 1",eGC[egID-1][eModel], IDModel+1);
		mysql_tquery(connects, query, "", "");

		GC[IDModel][gcModel] = eGC[egID-1][eModel];
		A_DestroyVehicle(VehicleInfo[IDModel+1][vID]);
		CreateOrgsVehicle(IDModel+1,eGC[egID-1][eOrgs],GC[IDModel][gcRank],GC[IDModel][gcModel],GC[IDModel][gcPosX],GC[IDModel][gcPosY],GC[IDModel][gcPosZ],GC[IDModel][gcPosA],GC[IDModel][gcColor1],GC[IDModel][gcColor2],GC[IDModel][gcSpawntime]);
		new str[150];
		format(str, sizeof(str), ""W"Вы успешно преобрели автомобиль: "YELLOW"'%s'"W" за"GREEN" %d$", gTransport[eGC[egID-1][eModel]-400][trName], eGC[egID-1][ePrice]);
		SCM(playerid, COLOR_WHITE, str);
		return pc_cmd_goscars(playerid);
	}	
}
CMD:test2(playerid) return FI[PI[playerid][pMember]][fBankCash] = 10000000;
CMD:goscars(playerid){
	if(PI[playerid][pMember] != fWHITEHOUSE) return SCM(playerid, COLOR_RED, "Вы не состоите в Правительстве!");
	if(PI[playerid][pRank] < 8) return SCM(playerid, COLOR_RED, "Вам не доступна данная команда!");
	SPD(playerid, D_GOSCAR, DSTH, ""W"Выберите гос.стркутуру","Выберите гос.структуру\n\
	"ORANGE"1. "W"Полиция ЛС\n\
	"ORANGE"2. "W"ФБР\n\
	"ORANGE"3. "W"RCSD\n\
	"ORANGE"4. "W"Нац.Гвардия", ">>>","x");
	return 1;
}
stock CreateOrgsVehicle(carid,orgs,rank,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime) {
	VehicleInfo[carid][vID] = A_AddStaticVehicleEx(model,X,Y,Z,A,Color_1,Color_2,spawntime,VEHICLE_TYPE_FRACTION);
	
	VehicleInfo[VehicleInfo[carid][vID]][vTeam] = orgs;
	VehicleInfo[VehicleInfo[carid][vID]][vRank] = rank;
	if(VehicleInfo[VehicleInfo[carid][vID]][vNumberAttached]) {
		DestroyDynamic3DTextLabelEx(VehicleInfo[VehicleInfo[carid][vID]][vNumberTextID]);
		VehicleInfo[VehicleInfo[carid][vID]][vNumberTextID] = Text3D:-1;
		VehicleInfo[VehicleInfo[carid][vID]][vNumberAttached] = 0;
	}
	switch(orgs) {
	case fWHITEHOUSE: 	{
			SetVehicleNumberPlate(VehicleInfo[carid][vID], "MAYOR");
		}
	case fARMYLS: 		SetVehicleNumberPlate(VehicleInfo[carid][vID], "ARMY SF");
	case fLSNEWS: 		SetVehicleNumberPlate(VehicleInfo[carid][vID], "LS NEWS");
	case fSFNEWS: 		SetVehicleNumberPlate(VehicleInfo[carid][vID], "SF NEWS");
	case fLVNEWS: 		SetVehicleNumberPlate(VehicleInfo[carid][vID], "LV NEWS");
	case fINSTRUCTORS: 	SetVehicleNumberPlate(VehicleInfo[carid][vID], "AUTOSCHOOL");
	case fBALLAS: 		SetVehicleNumberPlate(VehicleInfo[carid][vID], "BALLAS");
	case fVAGOS: 		SetVehicleNumberPlate(VehicleInfo[carid][vID], "VAGOS");
	case fGROVE: 		SetVehicleNumberPlate(VehicleInfo[carid][vID], "GROVE");
	case fAZTEC: 		SetVehicleNumberPlate(VehicleInfo[carid][vID], "AZTECAC");
	case fRIFA: 		SetVehicleNumberPlate(VehicleInfo[carid][vID], "RIFA");
	case fLCN: 			SetVehicleNumberPlate(VehicleInfo[carid][vID], "ITALIAN");
	case fYAKUZA: 		SetVehicleNumberPlate(VehicleInfo[carid][vID], "JAPAN");
	case fMEDICLS: 		SetVehicleNumberPlate(VehicleInfo[carid][vID], "MEDICS LS");
	case fMEDICSF: 		SetVehicleNumberPlate(VehicleInfo[carid][vID], "MEDICS SF");
	case fMEDICLV: 		SetVehicleNumberPlate(VehicleInfo[carid][vID], "MEDICS LV");
	
	}
	return VehicleInfo[carid][vID];
}
stock DontCar(carid){
	switch(carid)
	{
		case 525, 548, 417, 425, 447, 469, 476, 487..488, 497, 563: return 1;
	}
	return 0;
}
CMD:buycaradmin(playerid, params[]){
	extract params -> new model; else return SCM(playerid, -1, "/buycaradmin [model]");
	if(model < 400 || model > 611) return SCM(playerid, -1, "model !< 400 && model !> 611");
	CarsInfo[playerid][carModel][1] = model;
	return 1;
}
/*stock NickName(playerid){
	new str[150];
	if(TI[playerid][tMaskTime])format(str, sizeof(str), "{000000}Незнакомец"W"("YELLOW"%d"W")", playerid);
	else format(str, sizeof(str), "{%s}%s "W"("YELLOW"%d"W")",GetColorFrac(playerid), player_name[playerid], playerid);
	RemovePlayerAttachedObject(playerid, 8);
	Delete3DTextLabel(NickNames[playerid]);
	Nicks[playerid] = false;
	NickNames[playerid] = Create3DTextLabel(str, 0x008080FF, 30.0, 40.0, 0.2, 10.0, 0);
	Attach3DTextLabelToPlayer(NickNames[playerid], playerid, 0.0, 0.0, 0.2);
	Nicks[playerid] = true;
	return 1;
	
	
}
stock RemoveMask(playerid)
{
	RemovePlayerAttachedObject(playerid, 8);
	Delete3DTextLabel(NickNames[playerid]);
	Nicks[playerid] = false;
}*/
cmd:vehicle(playerid){
	new car = 612, color1 = 0, color2 = 0;
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(VehicleInfo[i][vType] != VEHICLE_TYPE_ADMIN) continue;
	}
	new Float:X,Float:Y,Float:Z,Float:A;
	GetPlayerPos(playerid, X,Y,Z);
	GetPlayerFacingAngle(playerid,A);
	X += 1.5;
	new vehicleid = A_CreateVehicle(car, X,Y,Z,A, color1, color2, -1,VEHICLE_TYPE_ADMIN);
	SetVehicleParamsEx(vehicleid,false,false,false,false,false,false,false);
	SetVehicleNumberPlate(vehicleid, "Admin Car");
	LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
	SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
	VehicleInfo[vehicleid][veX] = X;
	VehicleInfo[vehicleid][veY] = Y;
	VehicleInfo[vehicleid][veZ] = Z;
	VehicleInfo[vehicleid][vFuel] = 100;
	VehicleInfo[vehicleid][vAkum] = 100;
	return 1;
}
forward SPlayer(playerid);
public SPlayer(playerid) return TogglePlayerControllable(playerid, 1);
CMD:vereget(playerid){
	if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, "    А");
	for(new i = 0; i < 24; i++) capture_kd[i] = 0;
	return 1;
}
